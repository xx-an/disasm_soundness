
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/ginstall
        UUID: BEA31CCB-B3DB-7241-8104-666562DDAB7F
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x1c498[ (115864 bytes)
        ; File offset : [0; 115864[ (115864 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x30 ; '0'
0000000000000019         db  0x3e ; '>'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x90 ; '.'
0000000000000029         db  0xec ; '.'
000000000000002a         db  0x09 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x98 ; '.'
00000000000000d1         db  0xc4 ; '.'
00000000000000d2         db  0x01 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x98 ; '.'
00000000000000d9         db  0xc4 ; '.'
00000000000000da         db  0x01 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0xb0 ; '.'
00000000000000f1         db  0xc6 ; '.'
00000000000000f2         db  0x01 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0xb0 ; '.'
00000000000000f9         db  0xc6 ; '.'
00000000000000fa         db  0x21 ; '!'
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0xb0 ; '.'                                         ; DATA XREF=copy_internal+412, copy_internal+2693, samedir_template+25, strmode+116, quotearg_free+87, renameatu+297, renameatu+376, renameatu+466, same_nameat.part.0+51, same_nameat.part.0+108, utimecmpat+1202
0000000000000101         db  0xc6 ; '.'
0000000000000102         db  0x21 ; '!'
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x18 ; '.'
0000000000000109         db  0x0a ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x88 ; '.'                                         ; DATA XREF=fdutimens+13, fdutimens+816
0000000000000111         db  0x30 ; '0'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'                                         ; DATA XREF=mode_compile+688, mode_adjust+143, mode_adjust+160
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0xd8 ; '.'                                         ; DATA XREF=utimecmpat+16, utimecmpat+344
0000000000000129         db  0xc9 ; '.'
000000000000012a         db  0x01 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0xd8 ; '.'                                         ; DATA XREF=force_symlinkat+16, force_symlinkat+194
0000000000000131         db  0xc9 ; '.'
0000000000000132         db  0x21 ; '!'
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0xd8 ; '.'                                         ; DATA XREF=main+31, main+1912, same_nameat.part.0+17, same_nameat.part.0+198
0000000000000139         db  0xc9 ; '.'
000000000000013a         db  0x21 ; '!'
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'                                         ; DATA XREF=renameatu+65
000000000000013d         db  0x00 ; '.'                                         ; DATA XREF=mode_compile+847, mode_create_from_ref+61
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'                                         ; DATA XREF=gen_tempname_len+43
0000000000000148         db  0xf0 ; '.'                                         ; DATA XREF=force_linkat+24, force_linkat+217, renameatu+28, renameatu+116
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'                                         ; DATA XREF=main+290, copy_internal+16504, try_file+2
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0xdc ; '.'
0000000000000199         db  0x90 ; '.'
000000000000019a         db  0x01 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0xdc ; '.'
00000000000001a1         db  0x90 ; '.'
00000000000001a2         db  0x01 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0xdc ; '.'
00000000000001a9         db  0x90 ; '.'
00000000000001aa         db  0x01 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0x14 ; '.'
00000000000001b1         db  0x08 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'                                         ; DATA XREF=copy_internal+11791, copy_internal+16240
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0x14 ; '.'
00000000000001b9         db  0x08 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'                                         ; DATA XREF=set_owner+295, copy_internal+7345, copy_internal+7350, copy_internal+7367, mode_compile+304, try_dir
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'                                         ; DATA XREF=install_file_in_file+19, install_file_in_file+161
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'                                         ; DATA XREF=make_ancestor+34
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'                                         ; DATA XREF=copy_internal+11796, copy_internal+11830, make_dir_parents+552
0000000000000200         db  0x52 ; 'R'                                         ; DATA XREF=copy_internal+12037, extent_scan_read+69, strmode+304, make_dir_parents+165, mode_compile+656, xstrtoul+573
0000000000000201         db  0xe5 ; '.'                                         ; DATA XREF=copy_internal+11874
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'                                         ; DATA XREF=mode_compile+784
0000000000000208         db  0xb0 ; '.'
0000000000000209         db  0xc6 ; '.'
000000000000020a         db  0x01 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0xb0 ; '.'
0000000000000211         db  0xc6 ; '.'
0000000000000212         db  0x21 ; '!'
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0xb0 ; '.'
0000000000000219         db  0xc6 ; '.'
000000000000021a         db  0x21 ; '!'
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0x50 ; 'P'
0000000000000221         db  0x09 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0x50 ; 'P'
0000000000000229         db  0x09 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0xbe ; '.'
0000000000000285         db  0xa3 ; '.'
0000000000000286         db  0x1c ; '.'
0000000000000287         db  0xcb ; '.'
0000000000000288         db  0xb3 ; '.'
0000000000000289         db  0xdb ; '.'
000000000000028a         db  0x72 ; 'r'
000000000000028b         db  0x41 ; 'A'
000000000000028c         db  0x81 ; '.'
000000000000028d         db  0x04 ; '.'
000000000000028e         db  0x66 ; 'f'
000000000000028f         db  0x65 ; 'e'
0000000000000290         db  0x62 ; 'b'
0000000000000291         db  0xdd ; '.'
0000000000000292         db  0xab ; '.'
0000000000000293         db  0x7f ; '.'
0000000000000294         db  0x73 ; 's'
0000000000000295         db  0x52 ; 'R'
0000000000000296         db  0x8d ; '.'
0000000000000297         db  0xa0 ; '.'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2e0[ (72 bytes)
        ; File offset : [664; 736[ (72 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x85 ; '.'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x61 ; 'a'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0xa0 ; '.'
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x85 ; '.'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x86 ; '.'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x8c ; '.'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x66 ; 'f'
00000000000002c5         db  0x55 ; 'U'
00000000000002c6         db  0x61 ; 'a'
00000000000002c7         db  0x10 ; '.'
00000000000002c8         db  0x96 ; '.'
00000000000002c9         db  0xa0 ; '.'
00000000000002ca         db  0x89 ; '.'
00000000000002cb         db  0x97 ; '.'
00000000000002cc         db  0xce ; '.'
00000000000002cd         db  0x2c ; ','
00000000000002ce         db  0x63 ; 'c'
00000000000002cf         db  0x72 ; 'r'
00000000000002d0         db  0xe4 ; '.'
00000000000002d1         db  0x62 ; 'b'
00000000000002d2         db  0x41 ; 'A'
00000000000002d3         db  0xf5 ; '.'
00000000000002d4         db  0x39 ; '9'
00000000000002d5         db  0xf2 ; '.'
00000000000002d6         db  0x8b ; '.'
00000000000002d7         db  0x1c ; '.'
00000000000002d8         db  0x32 ; '2'
00000000000002d9         db  0xc4 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0xb3 ; '.'
00000000000002dd         db  0xa2 ; '.'
00000000000002de         db  0xf7 ; '.'
00000000000002df         db  0x12 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0x1030[ (3408 bytes)
        ; File offset : [736; 4144[ (3408 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x0c ; '.'
00000000000002f9         db  0x02 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0xc3 ; '.'
0000000000000311         db  0x02 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0xf2 ; '.'
0000000000000329         db  0x02 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x94 ; '.'
0000000000000341         db  0x02 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0xa0 ; '.'
0000000000000359         db  0x04 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x12 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0xd3 ; '.'
0000000000000371         db  0x01 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x12 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x00 ; '.'
0000000000000389         db  0x01 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'                                         ; DATA XREF=copy_internal+19
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0xe3 ; '.'
00000000000003a1         db  0x01 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0xd8 ; '.'
00000000000003b9         db  0x00 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x4d ; 'M'
00000000000003d1         db  0x00 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x39 ; '9'                                         ; DATA XREF=xstrtoul+420
00000000000003e9         db  0x05 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x20 ; ' '
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'                                         ; DATA XREF=mode_compile+829
0000000000000400         db  0x0c ; '.'                                         ; DATA XREF=write_zeros+142, strmode+235, xstrtoul+437, xstrtoul+806, xstrtoul+878, rpl_fcntl+288
0000000000000401         db  0x01 ; '.'                                         ; DATA XREF=areadlink_with_size+4, areadlink_with_size+46, rpl_fcntl+272
0000000000000402         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+280
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'                                         ; DATA XREF=opendir_safer+55, rpl_fcntl+81, rpl_fcntl+123, rpl_fcntl+264
0000000000000407         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+256
0000000000000408         db  0x00 ; '.'                                         ; DATA XREF=vasnprintf+29
0000000000000409         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+336
000000000000040a         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+350
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x12 ; '.'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0x96 ; '.'
0000000000000431         db  0x03 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'                                         ; DATA XREF=mode_compile+752
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0xa7 ; '.'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0xe8 ; '.'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x88 ; '.'
0000000000000479         db  0x00 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0xcd ; '.'
0000000000000491         db  0x03 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x08 ; '.'
00000000000004a9         db  0x03 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x09 ; '.'
00000000000004c1         db  0x04 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x80 ; '.'
00000000000004d9         db  0x03 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x49 ; 'I'
00000000000004f1         db  0x03 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x12 ; '.'
0000000000000509         db  0x01 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0xbd ; '.'
0000000000000521         db  0x01 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0x2c ; ','
0000000000000539         db  0x04 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x43 ; 'C'
0000000000000551         db  0x02 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0xca ; '.'
0000000000000569         db  0x02 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x59 ; 'Y'
0000000000000581         db  0x02 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x8c ; '.'
0000000000000599         db  0x02 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x28 ; '('
00000000000005b1         db  0x04 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x78 ; 'x'
00000000000005c9         db  0x04 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0xdd ; '.'
00000000000005e1         db  0x01 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x76 ; 'v'
00000000000005f9         db  0x00 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x50 ; 'P'
0000000000000611         db  0x01 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0xb6 ; '.'
0000000000000629         db  0x01 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0xcf ; '.'
0000000000000641         db  0x00 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x0f ; '.'
0000000000000659         db  0x04 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x9b ; '.'
0000000000000671         db  0x00 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0xbe ; '.'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x01 ; '.'
00000000000006a1         db  0x03 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x11 ; '.'
00000000000006b9         db  0x03 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x3f ; '?'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0xa1 ; '.'
00000000000006e9         db  0x03 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x37 ; '7'
0000000000000701         db  0x04 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x86 ; '.'
0000000000000719         db  0x04 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x66 ; 'f'
0000000000000731         db  0x00 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x55 ; 'U'
0000000000000749         db  0x00 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x4c ; 'L'
0000000000000761         db  0x02 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x4f ; 'O'
0000000000000779         db  0x03 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x38 ; '8'
0000000000000791         db  0x01 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0xcc ; '.'
00000000000007a9         db  0x01 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x12 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x78 ; 'x'
00000000000007c1         db  0x03 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x12 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'                                         ; DATA XREF=rpl_vfprintf+29
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0xec ; '.'
00000000000007d9         db  0x02 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0xd3 ; '.'
00000000000007f1         db  0x03 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x12 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'                                         ; DATA XREF=rpl_vfprintf+12, rpl_vfprintf+155, isaac_refill+74, isaac_refill+108, isaac_refill+141, isaac_refill+175, isaac_refill+207, isaac_refill+234, isaac_refill+275, isaac_refill+311, isaac_refill+378
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'                                         ; DATA XREF=randread_new+296, randread_new+495, randread_new+648, randread_new+735, randread_new+786, randread+200, randread+223
0000000000000800         db  0x00 ; '.'                                         ; DATA XREF=strmode+166, randread_new+250, randread_new+260, randread_new+431, randread_new+517, randread+165, randread+245, randread+258, randread+312, randread+323, randread+336
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x5a ; 'Z'
0000000000000809         db  0x02 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x12 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x00 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0xf6 ; '.'
0000000000000821         db  0x00 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x12 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x00 ; '.'
0000000000000829         db  0x00 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x00 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x19 ; '.'
0000000000000839         db  0x01 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x12 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x00 ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x00 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x91 ; '.'
0000000000000851         db  0x00 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x12 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x00 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x00 ; '.'
0000000000000859         db  0x00 ; '.'
000000000000085a         db  0x00 ; '.'
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x00 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x77 ; 'w'
0000000000000869         db  0x01 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x12 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x00 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x00 ; '.'
0000000000000871         db  0x00 ; '.'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x00 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0xf4 ; '.'
0000000000000881         db  0x01 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x12 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x00 ; '.'
0000000000000889         db  0x00 ; '.'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x00 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x60 ; '`'
0000000000000899         db  0x04 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x12 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x00 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0x00 ; '.'
00000000000008a1         db  0x00 ; '.'
00000000000008a2         db  0x00 ; '.'
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x00 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0xf9 ; '.'
00000000000008b1         db  0x01 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x12 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x00 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0x00 ; '.'
00000000000008b9         db  0x00 ; '.'
00000000000008ba         db  0x00 ; '.'
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x00 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0x46 ; 'F'
00000000000008c9         db  0x01 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x12 ; '.'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x00 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0x00 ; '.'
00000000000008d1         db  0x00 ; '.'
00000000000008d2         db  0x00 ; '.'
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x00 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x00 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0x91 ; '.'
00000000000008e1         db  0x04 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x12 ; '.'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x00 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0x00 ; '.'
00000000000008e9         db  0x00 ; '.'
00000000000008ea         db  0x00 ; '.'
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x00 ; '.'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x00 ; '.'
00000000000008f1         db  0x00 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x00 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'
00000000000008f8         db  0x36 ; '6'
00000000000008f9         db  0x03 ; '.'
00000000000008fa         db  0x00 ; '.'
00000000000008fb         db  0x00 ; '.'
00000000000008fc         db  0x12 ; '.'
00000000000008fd         db  0x00 ; '.'
00000000000008fe         db  0x00 ; '.'
00000000000008ff         db  0x00 ; '.'
0000000000000900         db  0x00 ; '.'
0000000000000901         db  0x00 ; '.'
0000000000000902         db  0x00 ; '.'
0000000000000903         db  0x00 ; '.'
0000000000000904         db  0x00 ; '.'
0000000000000905         db  0x00 ; '.'
0000000000000906         db  0x00 ; '.'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x00 ; '.'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x00 ; '.'
000000000000090c         db  0x00 ; '.'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x00 ; '.'
000000000000090f         db  0x00 ; '.'
0000000000000910         db  0x9d ; '.'
0000000000000911         db  0x01 ; '.'
0000000000000912         db  0x00 ; '.'
0000000000000913         db  0x00 ; '.'
0000000000000914         db  0x12 ; '.'
0000000000000915         db  0x00 ; '.'
0000000000000916         db  0x00 ; '.'
0000000000000917         db  0x00 ; '.'
0000000000000918         db  0x00 ; '.'
0000000000000919         db  0x00 ; '.'
000000000000091a         db  0x00 ; '.'
000000000000091b         db  0x00 ; '.'
000000000000091c         db  0x00 ; '.'
000000000000091d         db  0x00 ; '.'
000000000000091e         db  0x00 ; '.'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x00 ; '.'
0000000000000921         db  0x00 ; '.'
0000000000000922         db  0x00 ; '.'
0000000000000923         db  0x00 ; '.'
0000000000000924         db  0x00 ; '.'
0000000000000925         db  0x00 ; '.'
0000000000000926         db  0x00 ; '.'
0000000000000927         db  0x00 ; '.'
0000000000000928         db  0x3d ; '='
0000000000000929         db  0x03 ; '.'
000000000000092a         db  0x00 ; '.'
000000000000092b         db  0x00 ; '.'
000000000000092c         db  0x12 ; '.'
000000000000092d         db  0x00 ; '.'
000000000000092e         db  0x00 ; '.'
000000000000092f         db  0x00 ; '.'
0000000000000930         db  0x00 ; '.'
0000000000000931         db  0x00 ; '.'
0000000000000932         db  0x00 ; '.'
0000000000000933         db  0x00 ; '.'
0000000000000934         db  0x00 ; '.'
0000000000000935         db  0x00 ; '.'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x00 ; '.'
0000000000000938         db  0x00 ; '.'
0000000000000939         db  0x00 ; '.'
000000000000093a         db  0x00 ; '.'
000000000000093b         db  0x00 ; '.'
000000000000093c         db  0x00 ; '.'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x00 ; '.'
000000000000093f         db  0x00 ; '.'
0000000000000940         db  0x59 ; 'Y'
0000000000000941         db  0x04 ; '.'
0000000000000942         db  0x00 ; '.'
0000000000000943         db  0x00 ; '.'
0000000000000944         db  0x12 ; '.'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x00 ; '.'
0000000000000947         db  0x00 ; '.'
0000000000000948         db  0x00 ; '.'
0000000000000949         db  0x00 ; '.'
000000000000094a         db  0x00 ; '.'
000000000000094b         db  0x00 ; '.'
000000000000094c         db  0x00 ; '.'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x00 ; '.'
000000000000094f         db  0x00 ; '.'
0000000000000950         db  0x00 ; '.'
0000000000000951         db  0x00 ; '.'
0000000000000952         db  0x00 ; '.'
0000000000000953         db  0x00 ; '.'
0000000000000954         db  0x00 ; '.'
0000000000000955         db  0x00 ; '.'
0000000000000956         db  0x00 ; '.'
0000000000000957         db  0x00 ; '.'
0000000000000958         db  0xb2 ; '.'
0000000000000959         db  0x00 ; '.'
000000000000095a         db  0x00 ; '.'
000000000000095b         db  0x00 ; '.'
000000000000095c         db  0x12 ; '.'
000000000000095d         db  0x00 ; '.'
000000000000095e         db  0x00 ; '.'
000000000000095f         db  0x00 ; '.'
0000000000000960         db  0x00 ; '.'
0000000000000961         db  0x00 ; '.'
0000000000000962         db  0x00 ; '.'
0000000000000963         db  0x00 ; '.'
0000000000000964         db  0x00 ; '.'
0000000000000965         db  0x00 ; '.'
0000000000000966         db  0x00 ; '.'
0000000000000967         db  0x00 ; '.'
0000000000000968         db  0x00 ; '.'
0000000000000969         db  0x00 ; '.'
000000000000096a         db  0x00 ; '.'
000000000000096b         db  0x00 ; '.'
000000000000096c         db  0x00 ; '.'
000000000000096d         db  0x00 ; '.'
000000000000096e         db  0x00 ; '.'
000000000000096f         db  0x00 ; '.'
0000000000000970         db  0x72 ; 'r'
0000000000000971         db  0x04 ; '.'
0000000000000972         db  0x00 ; '.'
0000000000000973         db  0x00 ; '.'
0000000000000974         db  0x12 ; '.'
0000000000000975         db  0x00 ; '.'
0000000000000976         db  0x00 ; '.'
0000000000000977         db  0x00 ; '.'
0000000000000978         db  0x00 ; '.'
0000000000000979         db  0x00 ; '.'
000000000000097a         db  0x00 ; '.'
000000000000097b         db  0x00 ; '.'
000000000000097c         db  0x00 ; '.'
000000000000097d         db  0x00 ; '.'
000000000000097e         db  0x00 ; '.'
000000000000097f         db  0x00 ; '.'
0000000000000980         db  0x00 ; '.'
0000000000000981         db  0x00 ; '.'
0000000000000982         db  0x00 ; '.'
0000000000000983         db  0x00 ; '.'
0000000000000984         db  0x00 ; '.'
0000000000000985         db  0x00 ; '.'
0000000000000986         db  0x00 ; '.'
0000000000000987         db  0x00 ; '.'
0000000000000988         db  0x8c ; '.'
0000000000000989         db  0x01 ; '.'
000000000000098a         db  0x00 ; '.'
000000000000098b         db  0x00 ; '.'
000000000000098c         db  0x12 ; '.'
000000000000098d         db  0x00 ; '.'
000000000000098e         db  0x00 ; '.'
000000000000098f         db  0x00 ; '.'
0000000000000990         db  0x00 ; '.'
0000000000000991         db  0x00 ; '.'
0000000000000992         db  0x00 ; '.'
0000000000000993         db  0x00 ; '.'
0000000000000994         db  0x00 ; '.'
0000000000000995         db  0x00 ; '.'
0000000000000996         db  0x00 ; '.'
0000000000000997         db  0x00 ; '.'
0000000000000998         db  0x00 ; '.'
0000000000000999         db  0x00 ; '.'
000000000000099a         db  0x00 ; '.'
000000000000099b         db  0x00 ; '.'
000000000000099c         db  0x00 ; '.'
000000000000099d         db  0x00 ; '.'
000000000000099e         db  0x00 ; '.'
000000000000099f         db  0x00 ; '.'
00000000000009a0         db  0x42 ; 'B'
00000000000009a1         db  0x02 ; '.'
00000000000009a2         db  0x00 ; '.'
00000000000009a3         db  0x00 ; '.'
00000000000009a4         db  0x12 ; '.'
00000000000009a5         db  0x00 ; '.'
00000000000009a6         db  0x00 ; '.'
00000000000009a7         db  0x00 ; '.'
00000000000009a8         db  0x00 ; '.'
00000000000009a9         db  0x00 ; '.'
00000000000009aa         db  0x00 ; '.'
00000000000009ab         db  0x00 ; '.'
00000000000009ac         db  0x00 ; '.'
00000000000009ad         db  0x00 ; '.'
00000000000009ae         db  0x00 ; '.'
00000000000009af         db  0x00 ; '.'
00000000000009b0         db  0x00 ; '.'
00000000000009b1         db  0x00 ; '.'
00000000000009b2         db  0x00 ; '.'
00000000000009b3         db  0x00 ; '.'
00000000000009b4         db  0x00 ; '.'
00000000000009b5         db  0x00 ; '.'
00000000000009b6         db  0x00 ; '.'
00000000000009b7         db  0x00 ; '.'
00000000000009b8         db  0x6e ; 'n'
00000000000009b9         db  0x00 ; '.'
00000000000009ba         db  0x00 ; '.'
00000000000009bb         db  0x00 ; '.'
00000000000009bc         db  0x12 ; '.'
00000000000009bd         db  0x00 ; '.'
00000000000009be         db  0x00 ; '.'
00000000000009bf         db  0x00 ; '.'
00000000000009c0         db  0x00 ; '.'                                         ; DATA XREF=mode_compile+768
00000000000009c1         db  0x00 ; '.'
00000000000009c2         db  0x00 ; '.'
00000000000009c3         db  0x00 ; '.'
00000000000009c4         db  0x00 ; '.'
00000000000009c5         db  0x00 ; '.'
00000000000009c6         db  0x00 ; '.'
00000000000009c7         db  0x00 ; '.'
00000000000009c8         db  0x00 ; '.'
00000000000009c9         db  0x00 ; '.'
00000000000009ca         db  0x00 ; '.'
00000000000009cb         db  0x00 ; '.'
00000000000009cc         db  0x00 ; '.'
00000000000009cd         db  0x00 ; '.'
00000000000009ce         db  0x00 ; '.'
00000000000009cf         db  0x00 ; '.'
00000000000009d0         db  0xf9 ; '.'
00000000000009d1         db  0x03 ; '.'
00000000000009d2         db  0x00 ; '.'
00000000000009d3         db  0x00 ; '.'
00000000000009d4         db  0x12 ; '.'
00000000000009d5         db  0x00 ; '.'
00000000000009d6         db  0x00 ; '.'
00000000000009d7         db  0x00 ; '.'
00000000000009d8         db  0x00 ; '.'
00000000000009d9         db  0x00 ; '.'
00000000000009da         db  0x00 ; '.'
00000000000009db         db  0x00 ; '.'
00000000000009dc         db  0x00 ; '.'
00000000000009dd         db  0x00 ; '.'
00000000000009de         db  0x00 ; '.'
00000000000009df         db  0x00 ; '.'
00000000000009e0         db  0x00 ; '.'
00000000000009e1         db  0x00 ; '.'
00000000000009e2         db  0x00 ; '.'
00000000000009e3         db  0x00 ; '.'
00000000000009e4         db  0x00 ; '.'
00000000000009e5         db  0x00 ; '.'
00000000000009e6         db  0x00 ; '.'
00000000000009e7         db  0x00 ; '.'
00000000000009e8         db  0x42 ; 'B'
00000000000009e9         db  0x04 ; '.'
00000000000009ea         db  0x00 ; '.'
00000000000009eb         db  0x00 ; '.'
00000000000009ec         db  0x12 ; '.'
00000000000009ed         db  0x00 ; '.'
00000000000009ee         db  0x00 ; '.'
00000000000009ef         db  0x00 ; '.'
00000000000009f0         db  0x00 ; '.'
00000000000009f1         db  0x00 ; '.'
00000000000009f2         db  0x00 ; '.'
00000000000009f3         db  0x00 ; '.'
00000000000009f4         db  0x00 ; '.'
00000000000009f5         db  0x00 ; '.'
00000000000009f6         db  0x00 ; '.'
00000000000009f7         db  0x00 ; '.'
00000000000009f8         db  0x00 ; '.'
00000000000009f9         db  0x00 ; '.'
00000000000009fa         db  0x00 ; '.'
00000000000009fb         db  0x00 ; '.'
00000000000009fc         db  0x00 ; '.'
00000000000009fd         db  0x00 ; '.'
00000000000009fe         db  0x00 ; '.'
00000000000009ff         db  0x00 ; '.'
0000000000000a00         db  0x55 ; 'U'
0000000000000a01         db  0x05 ; '.'
0000000000000a02         db  0x00 ; '.'
0000000000000a03         db  0x00 ; '.'
0000000000000a04         db  0x20 ; ' '
0000000000000a05         db  0x00 ; '.'
0000000000000a06         db  0x00 ; '.'
0000000000000a07         db  0x00 ; '.'
0000000000000a08         db  0x00 ; '.'
0000000000000a09         db  0x00 ; '.'
0000000000000a0a         db  0x00 ; '.'
0000000000000a0b         db  0x00 ; '.'
0000000000000a0c         db  0x00 ; '.'
0000000000000a0d         db  0x00 ; '.'
0000000000000a0e         db  0x00 ; '.'
0000000000000a0f         db  0x00 ; '.'
0000000000000a10         db  0x00 ; '.'
0000000000000a11         db  0x00 ; '.'
0000000000000a12         db  0x00 ; '.'
0000000000000a13         db  0x00 ; '.'
0000000000000a14         db  0x00 ; '.'
0000000000000a15         db  0x00 ; '.'
0000000000000a16         db  0x00 ; '.'
0000000000000a17         db  0x00 ; '.'
0000000000000a18         db  0x84 ; '.'
0000000000000a19         db  0x02 ; '.'
0000000000000a1a         db  0x00 ; '.'
0000000000000a1b         db  0x00 ; '.'
0000000000000a1c         db  0x12 ; '.'
0000000000000a1d         db  0x00 ; '.'
0000000000000a1e         db  0x00 ; '.'
0000000000000a1f         db  0x00 ; '.'
0000000000000a20         db  0x00 ; '.'
0000000000000a21         db  0x00 ; '.'
0000000000000a22         db  0x00 ; '.'
0000000000000a23         db  0x00 ; '.'
0000000000000a24         db  0x00 ; '.'
0000000000000a25         db  0x00 ; '.'
0000000000000a26         db  0x00 ; '.'
0000000000000a27         db  0x00 ; '.'
0000000000000a28         db  0x00 ; '.'
0000000000000a29         db  0x00 ; '.'
0000000000000a2a         db  0x00 ; '.'
0000000000000a2b         db  0x00 ; '.'
0000000000000a2c         db  0x00 ; '.'
0000000000000a2d         db  0x00 ; '.'
0000000000000a2e         db  0x00 ; '.'
0000000000000a2f         db  0x00 ; '.'
0000000000000a30         db  0x52 ; 'R'
0000000000000a31         db  0x02 ; '.'
0000000000000a32         db  0x00 ; '.'
0000000000000a33         db  0x00 ; '.'
0000000000000a34         db  0x12 ; '.'
0000000000000a35         db  0x00 ; '.'
0000000000000a36         db  0x00 ; '.'
0000000000000a37         db  0x00 ; '.'
0000000000000a38         db  0x00 ; '.'
0000000000000a39         db  0x00 ; '.'
0000000000000a3a         db  0x00 ; '.'
0000000000000a3b         db  0x00 ; '.'
0000000000000a3c         db  0x00 ; '.'
0000000000000a3d         db  0x00 ; '.'
0000000000000a3e         db  0x00 ; '.'
0000000000000a3f         db  0x00 ; '.'
0000000000000a40         db  0x00 ; '.'
0000000000000a41         db  0x00 ; '.'
0000000000000a42         db  0x00 ; '.'
0000000000000a43         db  0x00 ; '.'
0000000000000a44         db  0x00 ; '.'
0000000000000a45         db  0x00 ; '.'
0000000000000a46         db  0x00 ; '.'
0000000000000a47         db  0x00 ; '.'
0000000000000a48         db  0x2b ; '+'
0000000000000a49         db  0x02 ; '.'
0000000000000a4a         db  0x00 ; '.'
0000000000000a4b         db  0x00 ; '.'
0000000000000a4c         db  0x12 ; '.'
0000000000000a4d         db  0x00 ; '.'
0000000000000a4e         db  0x00 ; '.'
0000000000000a4f         db  0x00 ; '.'
0000000000000a50         db  0x00 ; '.'
0000000000000a51         db  0x00 ; '.'
0000000000000a52         db  0x00 ; '.'
0000000000000a53         db  0x00 ; '.'
0000000000000a54         db  0x00 ; '.'
0000000000000a55         db  0x00 ; '.'
0000000000000a56         db  0x00 ; '.'
0000000000000a57         db  0x00 ; '.'
0000000000000a58         db  0x00 ; '.'
0000000000000a59         db  0x00 ; '.'
0000000000000a5a         db  0x00 ; '.'
0000000000000a5b         db  0x00 ; '.'
0000000000000a5c         db  0x00 ; '.'
0000000000000a5d         db  0x00 ; '.'
0000000000000a5e         db  0x00 ; '.'
0000000000000a5f         db  0x00 ; '.'
0000000000000a60         db  0x1d ; '.'
0000000000000a61         db  0x03 ; '.'
0000000000000a62         db  0x00 ; '.'
0000000000000a63         db  0x00 ; '.'
0000000000000a64         db  0x12 ; '.'
0000000000000a65         db  0x00 ; '.'
0000000000000a66         db  0x00 ; '.'
0000000000000a67         db  0x00 ; '.'
0000000000000a68         db  0x00 ; '.'
0000000000000a69         db  0x00 ; '.'
0000000000000a6a         db  0x00 ; '.'
0000000000000a6b         db  0x00 ; '.'
0000000000000a6c         db  0x00 ; '.'
0000000000000a6d         db  0x00 ; '.'
0000000000000a6e         db  0x00 ; '.'
0000000000000a6f         db  0x00 ; '.'
0000000000000a70         db  0x00 ; '.'
0000000000000a71         db  0x00 ; '.'
0000000000000a72         db  0x00 ; '.'
0000000000000a73         db  0x00 ; '.'
0000000000000a74         db  0x00 ; '.'
0000000000000a75         db  0x00 ; '.'
0000000000000a76         db  0x00 ; '.'
0000000000000a77         db  0x00 ; '.'
0000000000000a78         db  0x2f ; '/'
0000000000000a79         db  0x03 ; '.'
0000000000000a7a         db  0x00 ; '.'
0000000000000a7b         db  0x00 ; '.'
0000000000000a7c         db  0x12 ; '.'
0000000000000a7d         db  0x00 ; '.'
0000000000000a7e         db  0x00 ; '.'
0000000000000a7f         db  0x00 ; '.'
0000000000000a80         db  0x00 ; '.'
0000000000000a81         db  0x00 ; '.'
0000000000000a82         db  0x00 ; '.'
0000000000000a83         db  0x00 ; '.'
0000000000000a84         db  0x00 ; '.'
0000000000000a85         db  0x00 ; '.'
0000000000000a86         db  0x00 ; '.'
0000000000000a87         db  0x00 ; '.'
0000000000000a88         db  0x00 ; '.'
0000000000000a89         db  0x00 ; '.'
0000000000000a8a         db  0x00 ; '.'
0000000000000a8b         db  0x00 ; '.'
0000000000000a8c         db  0x00 ; '.'
0000000000000a8d         db  0x00 ; '.'
0000000000000a8e         db  0x00 ; '.'
0000000000000a8f         db  0x00 ; '.'
0000000000000a90         db  0xa2 ; '.'
0000000000000a91         db  0x02 ; '.'
0000000000000a92         db  0x00 ; '.'
0000000000000a93         db  0x00 ; '.'
0000000000000a94         db  0x12 ; '.'
0000000000000a95         db  0x00 ; '.'
0000000000000a96         db  0x00 ; '.'
0000000000000a97         db  0x00 ; '.'
0000000000000a98         db  0x00 ; '.'
0000000000000a99         db  0x00 ; '.'
0000000000000a9a         db  0x00 ; '.'
0000000000000a9b         db  0x00 ; '.'
0000000000000a9c         db  0x00 ; '.'
0000000000000a9d         db  0x00 ; '.'
0000000000000a9e         db  0x00 ; '.'
0000000000000a9f         db  0x00 ; '.'
0000000000000aa0         db  0x00 ; '.'
0000000000000aa1         db  0x00 ; '.'
0000000000000aa2         db  0x00 ; '.'
0000000000000aa3         db  0x00 ; '.'
0000000000000aa4         db  0x00 ; '.'
0000000000000aa5         db  0x00 ; '.'
0000000000000aa6         db  0x00 ; '.'
0000000000000aa7         db  0x00 ; '.'
0000000000000aa8         db  0x20 ; ' '
0000000000000aa9         db  0x04 ; '.'
0000000000000aaa         db  0x00 ; '.'
0000000000000aab         db  0x00 ; '.'
0000000000000aac         db  0x12 ; '.'
0000000000000aad         db  0x00 ; '.'
0000000000000aae         db  0x00 ; '.'
0000000000000aaf         db  0x00 ; '.'
0000000000000ab0         db  0x00 ; '.'
0000000000000ab1         db  0x00 ; '.'
0000000000000ab2         db  0x00 ; '.'
0000000000000ab3         db  0x00 ; '.'
0000000000000ab4         db  0x00 ; '.'
0000000000000ab5         db  0x00 ; '.'
0000000000000ab6         db  0x00 ; '.'
0000000000000ab7         db  0x00 ; '.'
0000000000000ab8         db  0x00 ; '.'
0000000000000ab9         db  0x00 ; '.'
0000000000000aba         db  0x00 ; '.'
0000000000000abb         db  0x00 ; '.'
0000000000000abc         db  0x00 ; '.'
0000000000000abd         db  0x00 ; '.'
0000000000000abe         db  0x00 ; '.'
0000000000000abf         db  0x00 ; '.'
0000000000000ac0         db  0x2d ; '-'
0000000000000ac1         db  0x00 ; '.'
0000000000000ac2         db  0x00 ; '.'
0000000000000ac3         db  0x00 ; '.'
0000000000000ac4         db  0x12 ; '.'
0000000000000ac5         db  0x00 ; '.'
0000000000000ac6         db  0x00 ; '.'
0000000000000ac7         db  0x00 ; '.'
0000000000000ac8         db  0x00 ; '.'
0000000000000ac9         db  0x00 ; '.'
0000000000000aca         db  0x00 ; '.'
0000000000000acb         db  0x00 ; '.'
0000000000000acc         db  0x00 ; '.'
0000000000000acd         db  0x00 ; '.'
0000000000000ace         db  0x00 ; '.'
0000000000000acf         db  0x00 ; '.'
0000000000000ad0         db  0x00 ; '.'
0000000000000ad1         db  0x00 ; '.'
0000000000000ad2         db  0x00 ; '.'
0000000000000ad3         db  0x00 ; '.'
0000000000000ad4         db  0x00 ; '.'
0000000000000ad5         db  0x00 ; '.'
0000000000000ad6         db  0x00 ; '.'
0000000000000ad7         db  0x00 ; '.'
0000000000000ad8         db  0x7d ; '}'
0000000000000ad9         db  0x02 ; '.'
0000000000000ada         db  0x00 ; '.'
0000000000000adb         db  0x00 ; '.'
0000000000000adc         db  0x12 ; '.'
0000000000000add         db  0x00 ; '.'
0000000000000ade         db  0x00 ; '.'
0000000000000adf         db  0x00 ; '.'
0000000000000ae0         db  0x00 ; '.'
0000000000000ae1         db  0x00 ; '.'
0000000000000ae2         db  0x00 ; '.'
0000000000000ae3         db  0x00 ; '.'
0000000000000ae4         db  0x00 ; '.'
0000000000000ae5         db  0x00 ; '.'
0000000000000ae6         db  0x00 ; '.'
0000000000000ae7         db  0x00 ; '.'
0000000000000ae8         db  0x00 ; '.'
0000000000000ae9         db  0x00 ; '.'
0000000000000aea         db  0x00 ; '.'
0000000000000aeb         db  0x00 ; '.'
0000000000000aec         db  0x00 ; '.'
0000000000000aed         db  0x00 ; '.'
0000000000000aee         db  0x00 ; '.'
0000000000000aef         db  0x00 ; '.'
0000000000000af0         db  0x0b ; '.'
0000000000000af1         db  0x00 ; '.'
0000000000000af2         db  0x00 ; '.'
0000000000000af3         db  0x00 ; '.'
0000000000000af4         db  0x12 ; '.'
0000000000000af5         db  0x00 ; '.'
0000000000000af6         db  0x00 ; '.'
0000000000000af7         db  0x00 ; '.'
0000000000000af8         db  0x00 ; '.'
0000000000000af9         db  0x00 ; '.'
0000000000000afa         db  0x00 ; '.'
0000000000000afb         db  0x00 ; '.'
0000000000000afc         db  0x00 ; '.'
0000000000000afd         db  0x00 ; '.'
0000000000000afe         db  0x00 ; '.'
0000000000000aff         db  0x00 ; '.'
0000000000000b00         db  0x00 ; '.'
0000000000000b01         db  0x00 ; '.'
0000000000000b02         db  0x00 ; '.'
0000000000000b03         db  0x00 ; '.'
0000000000000b04         db  0x00 ; '.'
0000000000000b05         db  0x00 ; '.'
0000000000000b06         db  0x00 ; '.'
0000000000000b07         db  0x00 ; '.'
0000000000000b08         db  0xa9 ; '.'
0000000000000b09         db  0x02 ; '.'
0000000000000b0a         db  0x00 ; '.'
0000000000000b0b         db  0x00 ; '.'
0000000000000b0c         db  0x12 ; '.'
0000000000000b0d         db  0x00 ; '.'
0000000000000b0e         db  0x00 ; '.'
0000000000000b0f         db  0x00 ; '.'
0000000000000b10         db  0x00 ; '.'
0000000000000b11         db  0x00 ; '.'
0000000000000b12         db  0x00 ; '.'
0000000000000b13         db  0x00 ; '.'
0000000000000b14         db  0x00 ; '.'
0000000000000b15         db  0x00 ; '.'
0000000000000b16         db  0x00 ; '.'
0000000000000b17         db  0x00 ; '.'
0000000000000b18         db  0x00 ; '.'
0000000000000b19         db  0x00 ; '.'
0000000000000b1a         db  0x00 ; '.'
0000000000000b1b         db  0x00 ; '.'
0000000000000b1c         db  0x00 ; '.'
0000000000000b1d         db  0x00 ; '.'
0000000000000b1e         db  0x00 ; '.'
0000000000000b1f         db  0x00 ; '.'
0000000000000b20         db  0x26 ; '&'
0000000000000b21         db  0x03 ; '.'
0000000000000b22         db  0x00 ; '.'
0000000000000b23         db  0x00 ; '.'
0000000000000b24         db  0x12 ; '.'
0000000000000b25         db  0x00 ; '.'
0000000000000b26         db  0x00 ; '.'
0000000000000b27         db  0x00 ; '.'
0000000000000b28         db  0x00 ; '.'
0000000000000b29         db  0x00 ; '.'
0000000000000b2a         db  0x00 ; '.'
0000000000000b2b         db  0x00 ; '.'
0000000000000b2c         db  0x00 ; '.'
0000000000000b2d         db  0x00 ; '.'
0000000000000b2e         db  0x00 ; '.'
0000000000000b2f         db  0x00 ; '.'
0000000000000b30         db  0x00 ; '.'
0000000000000b31         db  0x00 ; '.'
0000000000000b32         db  0x00 ; '.'
0000000000000b33         db  0x00 ; '.'
0000000000000b34         db  0x00 ; '.'
0000000000000b35         db  0x00 ; '.'
0000000000000b36         db  0x00 ; '.'
0000000000000b37         db  0x00 ; '.'
0000000000000b38         db  0x67 ; 'g'
0000000000000b39         db  0x01 ; '.'
0000000000000b3a         db  0x00 ; '.'
0000000000000b3b         db  0x00 ; '.'
0000000000000b3c         db  0x12 ; '.'
0000000000000b3d         db  0x00 ; '.'
0000000000000b3e         db  0x00 ; '.'
0000000000000b3f         db  0x00 ; '.'
0000000000000b40         db  0x00 ; '.'
0000000000000b41         db  0x00 ; '.'
0000000000000b42         db  0x00 ; '.'
0000000000000b43         db  0x00 ; '.'
0000000000000b44         db  0x00 ; '.'
0000000000000b45         db  0x00 ; '.'
0000000000000b46         db  0x00 ; '.'
0000000000000b47         db  0x00 ; '.'
0000000000000b48         db  0x00 ; '.'
0000000000000b49         db  0x00 ; '.'
0000000000000b4a         db  0x00 ; '.'
0000000000000b4b         db  0x00 ; '.'
0000000000000b4c         db  0x00 ; '.'
0000000000000b4d         db  0x00 ; '.'
0000000000000b4e         db  0x00 ; '.'
0000000000000b4f         db  0x00 ; '.'
0000000000000b50         db  0x70 ; 'p'
0000000000000b51         db  0x01 ; '.'
0000000000000b52         db  0x00 ; '.'
0000000000000b53         db  0x00 ; '.'
0000000000000b54         db  0x12 ; '.'
0000000000000b55         db  0x00 ; '.'
0000000000000b56         db  0x00 ; '.'
0000000000000b57         db  0x00 ; '.'
0000000000000b58         db  0x00 ; '.'
0000000000000b59         db  0x00 ; '.'
0000000000000b5a         db  0x00 ; '.'
0000000000000b5b         db  0x00 ; '.'
0000000000000b5c         db  0x00 ; '.'
0000000000000b5d         db  0x00 ; '.'
0000000000000b5e         db  0x00 ; '.'
0000000000000b5f         db  0x00 ; '.'
0000000000000b60         db  0x00 ; '.'
0000000000000b61         db  0x00 ; '.'
0000000000000b62         db  0x00 ; '.'
0000000000000b63         db  0x00 ; '.'
0000000000000b64         db  0x00 ; '.'
0000000000000b65         db  0x00 ; '.'
0000000000000b66         db  0x00 ; '.'
0000000000000b67         db  0x00 ; '.'
0000000000000b68         db  0xda ; '.'
0000000000000b69         db  0x02 ; '.'
0000000000000b6a         db  0x00 ; '.'
0000000000000b6b         db  0x00 ; '.'
0000000000000b6c         db  0x12 ; '.'
0000000000000b6d         db  0x00 ; '.'
0000000000000b6e         db  0x00 ; '.'
0000000000000b6f         db  0x00 ; '.'
0000000000000b70         db  0x00 ; '.'
0000000000000b71         db  0x00 ; '.'
0000000000000b72         db  0x00 ; '.'
0000000000000b73         db  0x00 ; '.'
0000000000000b74         db  0x00 ; '.'
0000000000000b75         db  0x00 ; '.'
0000000000000b76         db  0x00 ; '.'
0000000000000b77         db  0x00 ; '.'
0000000000000b78         db  0x00 ; '.'
0000000000000b79         db  0x00 ; '.'
0000000000000b7a         db  0x00 ; '.'
0000000000000b7b         db  0x00 ; '.'
0000000000000b7c         db  0x00 ; '.'
0000000000000b7d         db  0x00 ; '.'
0000000000000b7e         db  0x00 ; '.'
0000000000000b7f         db  0x00 ; '.'
0000000000000b80         db  0x9a ; '.'
0000000000000b81         db  0x00 ; '.'
0000000000000b82         db  0x00 ; '.'
0000000000000b83         db  0x00 ; '.'
0000000000000b84         db  0x12 ; '.'
0000000000000b85         db  0x00 ; '.'
0000000000000b86         db  0x00 ; '.'                                         ; DATA XREF=copy+347
0000000000000b87         db  0x00 ; '.'                                         ; DATA XREF=copy+316
0000000000000b88         db  0x00 ; '.'                                         ; DATA XREF=copy+285
0000000000000b89         db  0x00 ; '.'                                         ; DATA XREF=copy+254
0000000000000b8a         db  0x00 ; '.'                                         ; DATA XREF=copy+187
0000000000000b8b         db  0x00 ; '.'
0000000000000b8c         db  0x00 ; '.'
0000000000000b8d         db  0x00 ; '.'                                         ; DATA XREF=copy+218
0000000000000b8e         db  0x00 ; '.'
0000000000000b8f         db  0x00 ; '.'
0000000000000b90         db  0x00 ; '.'
0000000000000b91         db  0x00 ; '.'
0000000000000b92         db  0x00 ; '.'
0000000000000b93         db  0x00 ; '.'
0000000000000b94         db  0x00 ; '.'
0000000000000b95         db  0x00 ; '.'
0000000000000b96         db  0x00 ; '.'
0000000000000b97         db  0x00 ; '.'
0000000000000b98         db  0x49 ; 'I'
0000000000000b99         db  0x04 ; '.'
0000000000000b9a         db  0x00 ; '.'
0000000000000b9b         db  0x00 ; '.'
0000000000000b9c         db  0x12 ; '.'
0000000000000b9d         db  0x00 ; '.'
0000000000000b9e         db  0x00 ; '.'
0000000000000b9f         db  0x00 ; '.'
0000000000000ba0         db  0x00 ; '.'
0000000000000ba1         db  0x00 ; '.'
0000000000000ba2         db  0x00 ; '.'
0000000000000ba3         db  0x00 ; '.'
0000000000000ba4         db  0x00 ; '.'
0000000000000ba5         db  0x00 ; '.'
0000000000000ba6         db  0x00 ; '.'
0000000000000ba7         db  0x00 ; '.'
0000000000000ba8         db  0x00 ; '.'
0000000000000ba9         db  0x00 ; '.'
0000000000000baa         db  0x00 ; '.'
0000000000000bab         db  0x00 ; '.'
0000000000000bac         db  0x00 ; '.'
0000000000000bad         db  0x00 ; '.'
0000000000000bae         db  0x00 ; '.'
0000000000000baf         db  0x00 ; '.'
0000000000000bb0         db  0x35 ; '5'
0000000000000bb1         db  0x02 ; '.'
0000000000000bb2         db  0x00 ; '.'
0000000000000bb3         db  0x00 ; '.'
0000000000000bb4         db  0x12 ; '.'
0000000000000bb5         db  0x00 ; '.'
0000000000000bb6         db  0x00 ; '.'
0000000000000bb7         db  0x00 ; '.'
0000000000000bb8         db  0x00 ; '.'
0000000000000bb9         db  0x00 ; '.'
0000000000000bba         db  0x00 ; '.'
0000000000000bbb         db  0x00 ; '.'
0000000000000bbc         db  0x00 ; '.'
0000000000000bbd         db  0x00 ; '.'
0000000000000bbe         db  0x00 ; '.'
0000000000000bbf         db  0x00 ; '.'
0000000000000bc0         db  0x00 ; '.'
0000000000000bc1         db  0x00 ; '.'
0000000000000bc2         db  0x00 ; '.'
0000000000000bc3         db  0x00 ; '.'
0000000000000bc4         db  0x00 ; '.'
0000000000000bc5         db  0x00 ; '.'
0000000000000bc6         db  0x00 ; '.'
0000000000000bc7         db  0x00 ; '.'
0000000000000bc8         db  0xee ; '.'
0000000000000bc9         db  0x00 ; '.'
0000000000000bca         db  0x00 ; '.'
0000000000000bcb         db  0x00 ; '.'
0000000000000bcc         db  0x12 ; '.'
0000000000000bcd         db  0x00 ; '.'
0000000000000bce         db  0x00 ; '.'
0000000000000bcf         db  0x00 ; '.'
0000000000000bd0         db  0x00 ; '.'
0000000000000bd1         db  0x00 ; '.'
0000000000000bd2         db  0x00 ; '.'
0000000000000bd3         db  0x00 ; '.'
0000000000000bd4         db  0x00 ; '.'
0000000000000bd5         db  0x00 ; '.'
0000000000000bd6         db  0x00 ; '.'
0000000000000bd7         db  0x00 ; '.'
0000000000000bd8         db  0x00 ; '.'
0000000000000bd9         db  0x00 ; '.'
0000000000000bda         db  0x00 ; '.'
0000000000000bdb         db  0x00 ; '.'
0000000000000bdc         db  0x00 ; '.'
0000000000000bdd         db  0x00 ; '.'
0000000000000bde         db  0x00 ; '.'
0000000000000bdf         db  0x00 ; '.'
0000000000000be0         db  0x80 ; '.'
0000000000000be1         db  0x00 ; '.'
0000000000000be2         db  0x00 ; '.'
0000000000000be3         db  0x00 ; '.'
0000000000000be4         db  0x12 ; '.'
0000000000000be5         db  0x00 ; '.'
0000000000000be6         db  0x00 ; '.'
0000000000000be7         db  0x00 ; '.'
0000000000000be8         db  0x00 ; '.'
0000000000000be9         db  0x00 ; '.'
0000000000000bea         db  0x00 ; '.'
0000000000000beb         db  0x00 ; '.'
0000000000000bec         db  0x00 ; '.'
0000000000000bed         db  0x00 ; '.'
0000000000000bee         db  0x00 ; '.'
0000000000000bef         db  0x00 ; '.'
0000000000000bf0         db  0x00 ; '.'
0000000000000bf1         db  0x00 ; '.'
0000000000000bf2         db  0x00 ; '.'
0000000000000bf3         db  0x00 ; '.'
0000000000000bf4         db  0x00 ; '.'
0000000000000bf5         db  0x00 ; '.'
0000000000000bf6         db  0x00 ; '.'
0000000000000bf7         db  0x00 ; '.'
0000000000000bf8         db  0xc6 ; '.'
0000000000000bf9         db  0x03 ; '.'
0000000000000bfa         db  0x00 ; '.'
0000000000000bfb         db  0x00 ; '.'
0000000000000bfc         db  0x12 ; '.'
0000000000000bfd         db  0x00 ; '.'
0000000000000bfe         db  0x00 ; '.'
0000000000000bff         db  0x00 ; '.'
0000000000000c00         db  0x00 ; '.'                                         ; DATA XREF=make_dir_parents+160, mode_compile+672, mode_compile+818, mode_adjust+40, dirchownmod+440
0000000000000c01         db  0x00 ; '.'
0000000000000c02         db  0x00 ; '.'
0000000000000c03         db  0x00 ; '.'
0000000000000c04         db  0x00 ; '.'
0000000000000c05         db  0x00 ; '.'
0000000000000c06         db  0x00 ; '.'
0000000000000c07         db  0x00 ; '.'
0000000000000c08         db  0x00 ; '.'
0000000000000c09         db  0x00 ; '.'
0000000000000c0a         db  0x00 ; '.'
0000000000000c0b         db  0x00 ; '.'
0000000000000c0c         db  0x00 ; '.'
0000000000000c0d         db  0x00 ; '.'
0000000000000c0e         db  0x00 ; '.'
0000000000000c0f         db  0x00 ; '.'
0000000000000c10         db  0x6e ; 'n'
0000000000000c11         db  0x02 ; '.'
0000000000000c12         db  0x00 ; '.'
0000000000000c13         db  0x00 ; '.'
0000000000000c14         db  0x12 ; '.'
0000000000000c15         db  0x00 ; '.'
0000000000000c16         db  0x00 ; '.'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x00 ; '.'
0000000000000c19         db  0x00 ; '.'
0000000000000c1a         db  0x00 ; '.'
0000000000000c1b         db  0x00 ; '.'
0000000000000c1c         db  0x00 ; '.'
0000000000000c1d         db  0x00 ; '.'
0000000000000c1e         db  0x00 ; '.'
0000000000000c1f         db  0x00 ; '.'
0000000000000c20         db  0x00 ; '.'
0000000000000c21         db  0x00 ; '.'
0000000000000c22         db  0x00 ; '.'
0000000000000c23         db  0x00 ; '.'
0000000000000c24         db  0x00 ; '.'
0000000000000c25         db  0x00 ; '.'
0000000000000c26         db  0x00 ; '.'
0000000000000c27         db  0x00 ; '.'
0000000000000c28         db  0x35 ; '5'
0000000000000c29         db  0x00 ; '.'
0000000000000c2a         db  0x00 ; '.'
0000000000000c2b         db  0x00 ; '.'
0000000000000c2c         db  0x12 ; '.'
0000000000000c2d         db  0x00 ; '.'
0000000000000c2e         db  0x00 ; '.'
0000000000000c2f         db  0x00 ; '.'
0000000000000c30         db  0x00 ; '.'
0000000000000c31         db  0x00 ; '.'
0000000000000c32         db  0x00 ; '.'
0000000000000c33         db  0x00 ; '.'
0000000000000c34         db  0x00 ; '.'
0000000000000c35         db  0x00 ; '.'
0000000000000c36         db  0x00 ; '.'
0000000000000c37         db  0x00 ; '.'
0000000000000c38         db  0x00 ; '.'
0000000000000c39         db  0x00 ; '.'
0000000000000c3a         db  0x00 ; '.'
0000000000000c3b         db  0x00 ; '.'
0000000000000c3c         db  0x00 ; '.'
0000000000000c3d         db  0x00 ; '.'
0000000000000c3e         db  0x00 ; '.'
0000000000000c3f         db  0x00 ; '.'
0000000000000c40         db  0x20 ; ' '
0000000000000c41         db  0x00 ; '.'
0000000000000c42         db  0x00 ; '.'
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x12 ; '.'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x00 ; '.'
0000000000000c47         db  0x00 ; '.'
0000000000000c48         db  0x00 ; '.'
0000000000000c49         db  0x00 ; '.'
0000000000000c4a         db  0x00 ; '.'
0000000000000c4b         db  0x00 ; '.'
0000000000000c4c         db  0x00 ; '.'
0000000000000c4d         db  0x00 ; '.'
0000000000000c4e         db  0x00 ; '.'
0000000000000c4f         db  0x00 ; '.'
0000000000000c50         db  0x00 ; '.'
0000000000000c51         db  0x00 ; '.'
0000000000000c52         db  0x00 ; '.'
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x00 ; '.'
0000000000000c55         db  0x00 ; '.'
0000000000000c56         db  0x00 ; '.'
0000000000000c57         db  0x00 ; '.'
0000000000000c58         db  0x19 ; '.'
0000000000000c59         db  0x00 ; '.'
0000000000000c5a         db  0x00 ; '.'
0000000000000c5b         db  0x00 ; '.'
0000000000000c5c         db  0x12 ; '.'
0000000000000c5d         db  0x00 ; '.'
0000000000000c5e         db  0x00 ; '.'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0x00 ; '.'
0000000000000c61         db  0x00 ; '.'
0000000000000c62         db  0x00 ; '.'
0000000000000c63         db  0x00 ; '.'
0000000000000c64         db  0x00 ; '.'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x00 ; '.'
0000000000000c67         db  0x00 ; '.'
0000000000000c68         db  0x00 ; '.'
0000000000000c69         db  0x00 ; '.'
0000000000000c6a         db  0x00 ; '.'
0000000000000c6b         db  0x00 ; '.'
0000000000000c6c         db  0x00 ; '.'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x00 ; '.'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x01 ; '.'
0000000000000c71         db  0x04 ; '.'
0000000000000c72         db  0x00 ; '.'
0000000000000c73         db  0x00 ; '.'
0000000000000c74         db  0x12 ; '.'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x00 ; '.'
0000000000000c77         db  0x00 ; '.'
0000000000000c78         db  0x00 ; '.'
0000000000000c79         db  0x00 ; '.'
0000000000000c7a         db  0x00 ; '.'
0000000000000c7b         db  0x00 ; '.'
0000000000000c7c         db  0x00 ; '.'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x00 ; '.'
0000000000000c7f         db  0x00 ; '.'
0000000000000c80         db  0x00 ; '.'
0000000000000c81         db  0x00 ; '.'
0000000000000c82         db  0x00 ; '.'
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x00 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x00 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0x1a ; '.'
0000000000000c89         db  0x00 ; '.'
0000000000000c8a         db  0x00 ; '.'
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x12 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x00 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0x00 ; '.'
0000000000000c91         db  0x00 ; '.'
0000000000000c92         db  0x00 ; '.'
0000000000000c93         db  0x00 ; '.'
0000000000000c94         db  0x00 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x00 ; '.'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x00 ; '.'
0000000000000c99         db  0x00 ; '.'
0000000000000c9a         db  0x00 ; '.'
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x00 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x00 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0x15 ; '.'
0000000000000ca1         db  0x02 ; '.'
0000000000000ca2         db  0x00 ; '.'
0000000000000ca3         db  0x00 ; '.'
0000000000000ca4         db  0x12 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x00 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0x00 ; '.'
0000000000000ca9         db  0x00 ; '.'
0000000000000caa         db  0x00 ; '.'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x00 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x00 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0x00 ; '.'
0000000000000cb1         db  0x00 ; '.'
0000000000000cb2         db  0x00 ; '.'
0000000000000cb3         db  0x00 ; '.'
0000000000000cb4         db  0x00 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x00 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0xa1 ; '.'
0000000000000cb9         db  0x00 ; '.'
0000000000000cba         db  0x00 ; '.'
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x12 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x00 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0x00 ; '.'
0000000000000cc1         db  0x00 ; '.'
0000000000000cc2         db  0x00 ; '.'
0000000000000cc3         db  0x00 ; '.'
0000000000000cc4         db  0x00 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x00 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0x00 ; '.'
0000000000000cc9         db  0x00 ; '.'
0000000000000cca         db  0x00 ; '.'
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x00 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x00 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x8e ; '.'
0000000000000cd1         db  0x03 ; '.'
0000000000000cd2         db  0x00 ; '.'
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x12 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x00 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0x00 ; '.'
0000000000000cd9         db  0x00 ; '.'
0000000000000cda         db  0x00 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x00 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x00 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0x00 ; '.'
0000000000000ce1         db  0x00 ; '.'
0000000000000ce2         db  0x00 ; '.'
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x00 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x00 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0x63 ; 'c'
0000000000000ce9         db  0x03 ; '.'
0000000000000cea         db  0x00 ; '.'
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x12 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x00 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0x00 ; '.'
0000000000000cf1         db  0x00 ; '.'
0000000000000cf2         db  0x00 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x00 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0x00 ; '.'
0000000000000cf9         db  0x00 ; '.'
0000000000000cfa         db  0x00 ; '.'
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x00 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x00 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0xc8 ; '.'
0000000000000d01         db  0x03 ; '.'
0000000000000d02         db  0x00 ; '.'
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x12 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x00 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0x00 ; '.'
0000000000000d09         db  0x00 ; '.'
0000000000000d0a         db  0x00 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x00 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x00 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x00 ; '.'
0000000000000d11         db  0x00 ; '.'
0000000000000d12         db  0x00 ; '.'
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x7f ; '.'
0000000000000d19         db  0x04 ; '.'
0000000000000d1a         db  0x00 ; '.'
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x12 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0x00 ; '.'
0000000000000d21         db  0x00 ; '.'
0000000000000d22         db  0x00 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x00 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x00 ; '.'
0000000000000d29         db  0x00 ; '.'
0000000000000d2a         db  0x00 ; '.'
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x34 ; '4'
0000000000000d31         db  0x02 ; '.'
0000000000000d32         db  0x00 ; '.'
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x12 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0x00 ; '.'
0000000000000d39         db  0x00 ; '.'
0000000000000d3a         db  0x00 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x00 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0x00 ; '.'
0000000000000d41         db  0x00 ; '.'
0000000000000d42         db  0x00 ; '.'
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x00 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x47 ; 'G'
0000000000000d49         db  0x00 ; '.'
0000000000000d4a         db  0x00 ; '.'
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x12 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0x00 ; '.'
0000000000000d51         db  0x00 ; '.'
0000000000000d52         db  0x00 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x00 ; '.'
0000000000000d59         db  0x00 ; '.'
0000000000000d5a         db  0x00 ; '.'
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x5c ; '\'
0000000000000d61         db  0x03 ; '.'
0000000000000d62         db  0x00 ; '.'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x12 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0x00 ; '.'
0000000000000d69         db  0x00 ; '.'
0000000000000d6a         db  0x00 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0x00 ; '.'
0000000000000d71         db  0x00 ; '.'
0000000000000d72         db  0x00 ; '.'
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x8a ; '.'
0000000000000d79         db  0x02 ; '.'
0000000000000d7a         db  0x00 ; '.'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x12 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0x00 ; '.'
0000000000000d81         db  0x00 ; '.'
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0x00 ; '.'
0000000000000d89         db  0x00 ; '.'
0000000000000d8a         db  0x00 ; '.'
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0xad ; '.'
0000000000000d91         db  0x01 ; '.'
0000000000000d92         db  0x00 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x12 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0x00 ; '.'
0000000000000d99         db  0x00 ; '.'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0x00 ; '.'
0000000000000da1         db  0x00 ; '.'
0000000000000da2         db  0x00 ; '.'
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x60 ; '`'
0000000000000da9         db  0x02 ; '.'
0000000000000daa         db  0x00 ; '.'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x12 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x00 ; '.'
0000000000000db1         db  0x00 ; '.'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0x00 ; '.'
0000000000000db9         db  0x00 ; '.'
0000000000000dba         db  0x00 ; '.'
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x75 ; 'u'
0000000000000dc1         db  0x02 ; '.'
0000000000000dc2         db  0x00 ; '.'
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x12 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0x00 ; '.'
0000000000000dc9         db  0x00 ; '.'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x00 ; '.'
0000000000000dd1         db  0x00 ; '.'
0000000000000dd2         db  0x00 ; '.'
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0xc0 ; '.'
0000000000000dd9         db  0x04 ; '.'
0000000000000dda         db  0x00 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x12 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x00 ; '.'
0000000000000de1         db  0x00 ; '.'
0000000000000de2         db  0x00 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x00 ; '.'
0000000000000de9         db  0x00 ; '.'
0000000000000dea         db  0x00 ; '.'
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0xa4 ; '.'
0000000000000df1         db  0x01 ; '.'
0000000000000df2         db  0x00 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x12 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x00 ; '.'
0000000000000df9         db  0x00 ; '.'
0000000000000dfa         db  0x00 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x00 ; '.'
0000000000000e01         db  0x00 ; '.'
0000000000000e02         db  0x00 ; '.'
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x00 ; '.'
0000000000000e09         db  0x02 ; '.'
0000000000000e0a         db  0x00 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x12 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x00 ; '.'
0000000000000e11         db  0x00 ; '.'
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x00 ; '.'
0000000000000e19         db  0x00 ; '.'
0000000000000e1a         db  0x00 ; '.'
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x95 ; '.'
0000000000000e21         db  0x01 ; '.'
0000000000000e22         db  0x00 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x12 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x00 ; '.'
0000000000000e29         db  0x00 ; '.'
0000000000000e2a         db  0x00 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x00 ; '.'
0000000000000e31         db  0x00 ; '.'
0000000000000e32         db  0x00 ; '.'
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x0d ; '.'
0000000000000e39         db  0x01 ; '.'
0000000000000e3a         db  0x00 ; '.'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x12 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x00 ; '.'
0000000000000e41         db  0x00 ; '.'
0000000000000e42         db  0x00 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x00 ; '.'
0000000000000e49         db  0x00 ; '.'
0000000000000e4a         db  0x00 ; '.'
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x48 ; 'H'
0000000000000e51         db  0x03 ; '.'
0000000000000e52         db  0x00 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x12 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x00 ; '.'
0000000000000e59         db  0x00 ; '.'
0000000000000e5a         db  0x00 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0x00 ; '.'
0000000000000e61         db  0x00 ; '.'
0000000000000e62         db  0x00 ; '.'
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x1d ; '.'
0000000000000e69         db  0x02 ; '.'
0000000000000e6a         db  0x00 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x12 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x00 ; '.'
0000000000000e71         db  0x00 ; '.'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x00 ; '.'
0000000000000e79         db  0x00 ; '.'
0000000000000e7a         db  0x00 ; '.'
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0x64 ; 'd'
0000000000000e81         db  0x05 ; '.'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x20 ; ' '
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x00 ; '.'
0000000000000e89         db  0x00 ; '.'
0000000000000e8a         db  0x00 ; '.'
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x00 ; '.'
0000000000000e91         db  0x00 ; '.'
0000000000000e92         db  0x00 ; '.'
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x9a ; '.'
0000000000000e99         db  0x02 ; '.'
0000000000000e9a         db  0x00 ; '.'
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x12 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x00 ; '.'
0000000000000ea1         db  0x00 ; '.'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0x00 ; '.'
0000000000000ea9         db  0x00 ; '.'
0000000000000eaa         db  0x00 ; '.'
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x6b ; 'k'
0000000000000eb1         db  0x02 ; '.'
0000000000000eb2         db  0x00 ; '.'
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x12 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x00 ; '.'
0000000000000eb9         db  0x00 ; '.'
0000000000000eba         db  0x00 ; '.'
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x00 ; '.'
0000000000000ec1         db  0x00 ; '.'
0000000000000ec2         db  0x00 ; '.'
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x85 ; '.'
0000000000000ec9         db  0x01 ; '.'
0000000000000eca         db  0x00 ; '.'
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x12 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x00 ; '.'
0000000000000ed1         db  0x00 ; '.'
0000000000000ed2         db  0x00 ; '.'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x00 ; '.'
0000000000000ed9         db  0x00 ; '.'
0000000000000eda         db  0x00 ; '.'
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0xdf ; '.'
0000000000000ee1         db  0x00 ; '.'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x12 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x00 ; '.'
0000000000000ee9         db  0x00 ; '.'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x00 ; '.'
0000000000000ef1         db  0x00 ; '.'
0000000000000ef2         db  0x00 ; '.'
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0xea ; '.'
0000000000000ef9         db  0x03 ; '.'
0000000000000efa         db  0x00 ; '.'
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x22 ; '"'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x00 ; '.'
0000000000000f01         db  0x00 ; '.'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x00 ; '.'
0000000000000f09         db  0x00 ; '.'
0000000000000f0a         db  0x00 ; '.'
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0xb9 ; '.'
0000000000000f11         db  0x00 ; '.'
0000000000000f12         db  0x00 ; '.'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x12 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x00 ; '.'
0000000000000f19         db  0x00 ; '.'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x00 ; '.'
0000000000000f21         db  0x00 ; '.'
0000000000000f22         db  0x00 ; '.'
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x16 ; '.'
0000000000000f29         db  0x04 ; '.'
0000000000000f2a         db  0x00 ; '.'
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x12 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x00 ; '.'
0000000000000f31         db  0x00 ; '.'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x00 ; '.'
0000000000000f39         db  0x00 ; '.'
0000000000000f3a         db  0x00 ; '.'
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0xb5 ; '.'
0000000000000f41         db  0x02 ; '.'
0000000000000f42         db  0x00 ; '.'
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x12 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x00 ; '.'
0000000000000f49         db  0x00 ; '.'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x00 ; '.'
0000000000000f51         db  0x00 ; '.'
0000000000000f52         db  0x00 ; '.'
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x3b ; ';'
0000000000000f59         db  0x02 ; '.'
0000000000000f5a         db  0x00 ; '.'
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x11 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x19 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0xe8 ; '.'
0000000000000f61         db  0xd0 ; '.'
0000000000000f62         db  0x21 ; '!'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x08 ; '.'
0000000000000f69         db  0x00 ; '.'
0000000000000f6a         db  0x00 ; '.'
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0xa5 ; '.'
0000000000000f71         db  0x04 ; '.'
0000000000000f72         db  0x00 ; '.'
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x11 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x19 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0xe0 ; '.'
0000000000000f79         db  0xd0 ; '.'
0000000000000f7a         db  0x21 ; '!'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x08 ; '.'
0000000000000f81         db  0x00 ; '.'
0000000000000f82         db  0x00 ; '.'
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x06 ; '.'
0000000000000f89         db  0x01 ; '.'
0000000000000f8a         db  0x00 ; '.'
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x11 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x19 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0xf0 ; '.'
0000000000000f91         db  0xd0 ; '.'
0000000000000f92         db  0x21 ; '!'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x08 ; '.'
0000000000000f99         db  0x00 ; '.'
0000000000000f9a         db  0x00 ; '.'
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'                                         ; DATA XREF=vasnprintf+180
0000000000000fa0         db  0x20 ; ' '
0000000000000fa1         db  0x01 ; '.'
0000000000000fa2         db  0x00 ; '.'
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x21 ; '!'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x19 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x08 ; '.'
0000000000000fa9         db  0xd1 ; '.'
0000000000000faa         db  0x21 ; '!'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x08 ; '.'
0000000000000fb1         db  0x00 ; '.'
0000000000000fb2         db  0x00 ; '.'
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0xb0 ; '.'
0000000000000fb9         db  0x04 ; '.'
0000000000000fba         db  0x00 ; '.'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x11 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x19 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x08 ; '.'
0000000000000fc1         db  0xd1 ; '.'
0000000000000fc2         db  0x21 ; '!'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x08 ; '.'
0000000000000fc9         db  0x00 ; '.'
0000000000000fca         db  0x00 ; '.'
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0xa8 ; '.'
0000000000000fd1         db  0x03 ; '.'
0000000000000fd2         db  0x00 ; '.'
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x21 ; '!'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x19 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0xe0 ; '.'
0000000000000fd9         db  0xd0 ; '.'
0000000000000fda         db  0x21 ; '!'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x08 ; '.'
0000000000000fe1         db  0x00 ; '.'
0000000000000fe2         db  0x00 ; '.'
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0xe5 ; '.'
0000000000000fe9         db  0x02 ; '.'
0000000000000fea         db  0x00 ; '.'
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x11 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x19 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x20 ; ' '
0000000000000ff1         db  0xd1 ; '.'
0000000000000ff2         db  0x21 ; '!'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x08 ; '.'
0000000000000ff9         db  0x00 ; '.'
0000000000000ffa         db  0x00 ; '.'
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'                                         ; DATA XREF=install_file_in_file+709, overwrite_ok.isra.12+92, set_owner+68, copy_internal+1207, copy_internal+1224, mode_compile+231, mode_compile+433, mode_compile+491, mode_compile+505, mode_compile+511, mode_compile+736
0000000000001000         db  0x5f ; '_'                                         ; DATA XREF=install_file_in_file+852, install_file_in_file+887, copy_internal+6314, strmode+73, randread_new+97, randread_new+104
0000000000001001         db  0x00 ; '.'
0000000000001002         db  0x00 ; '.'
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x11 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x19 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0xf8 ; '.'
0000000000001009         db  0xd0 ; '.'
000000000000100a         db  0x21 ; '!'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x04 ; '.'
0000000000001011         db  0x00 ; '.'
0000000000001012         db  0x00 ; '.'
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0xd3 ; '.'                                         ; DATA XREF=extent_scan_read+26, extent_scan_read+375, randread_new+270
0000000000001019         db  0x02 ; '.'
000000000000101a         db  0x00 ; '.'
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x11 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x19 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x00 ; '.'
0000000000001021         db  0xd1 ; '.'
0000000000001022         db  0x21 ; '!'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x08 ; '.'
0000000000001029         db  0x00 ; '.'
000000000000102a         db  0x00 ; '.'
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x1030; 0x15ae[ (1406 bytes)
        ; File offset : [4144; 5550[ (1406 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000001030         db  0x00 ; '.'
0000000000001031         db  0x6c ; 'l'
0000000000001032         db  0x69 ; 'i'
0000000000001033         db  0x62 ; 'b'
0000000000001034         db  0x63 ; 'c'
0000000000001035         db  0x2e ; '.'
0000000000001036         db  0x73 ; 's'
0000000000001037         db  0x6f ; 'o'
0000000000001038         db  0x2e ; '.'                                         ; DATA XREF=randread_new+74, randread_new+176, randread_new+328, randread_free+12
0000000000001039         db  0x36 ; '6'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x66 ; 'f'
000000000000103c         db  0x66 ; 'f'
000000000000103d         db  0x6c ; 'l'
000000000000103e         db  0x75 ; 'u'
000000000000103f         db  0x73 ; 's'
0000000000001040         db  0x68 ; 'h'
0000000000001041         db  0x00 ; '.'
0000000000001042         db  0x73 ; 's'
0000000000001043         db  0x74 ; 't'
0000000000001044         db  0x72 ; 'r'
0000000000001045         db  0x63 ; 'c'
0000000000001046         db  0x70 ; 'p'
0000000000001047         db  0x79 ; 'y'
0000000000001048         db  0x00 ; '.'
0000000000001049         db  0x66 ; 'f'
000000000000104a         db  0x63 ; 'c'
000000000000104b         db  0x68 ; 'h'
000000000000104c         db  0x6d ; 'm'
000000000000104d         db  0x6f ; 'o'
000000000000104e         db  0x64 ; 'd'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x5f ; '_'
0000000000001051         db  0x5f ; '_'
0000000000001052         db  0x70 ; 'p'
0000000000001053         db  0x72 ; 'r'
0000000000001054         db  0x69 ; 'i'
0000000000001055         db  0x6e ; 'n'
0000000000001056         db  0x74 ; 't'
0000000000001057         db  0x66 ; 'f'
0000000000001058         db  0x5f ; '_'
0000000000001059         db  0x63 ; 'c'
000000000000105a         db  0x68 ; 'h'
000000000000105b         db  0x6b ; 'k'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x72 ; 'r'
000000000000105e         db  0x65 ; 'e'
000000000000105f         db  0x61 ; 'a'
0000000000001060         db  0x64 ; 'd'
0000000000001061         db  0x64 ; 'd'
0000000000001062         db  0x69 ; 'i'
0000000000001063         db  0x72 ; 'r'
0000000000001064         db  0x00 ; '.'
0000000000001065         db  0x73 ; 's'
0000000000001066         db  0x65 ; 'e'
0000000000001067         db  0x74 ; 't'
0000000000001068         db  0x6c ; 'l'
0000000000001069         db  0x6f ; 'o'
000000000000106a         db  0x63 ; 'c'
000000000000106b         db  0x61 ; 'a'
000000000000106c         db  0x6c ; 'l'
000000000000106d         db  0x65 ; 'e'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x6d ; 'm'
0000000000001070         db  0x62 ; 'b'
0000000000001071         db  0x72 ; 'r'
0000000000001072         db  0x74 ; 't'
0000000000001073         db  0x6f ; 'o'
0000000000001074         db  0x77 ; 'w'
0000000000001075         db  0x63 ; 'c'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x66 ; 'f'
0000000000001078         db  0x6f ; 'o'
0000000000001079         db  0x70 ; 'p'
000000000000107a         db  0x65 ; 'e'
000000000000107b         db  0x6e ; 'n'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x73 ; 's'
000000000000107e         db  0x74 ; 't'
000000000000107f         db  0x72 ; 'r'
0000000000001080         db  0x6e ; 'n'
0000000000001081         db  0x63 ; 'c'
0000000000001082         db  0x6d ; 'm'
0000000000001083         db  0x70 ; 'p'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x66 ; 'f'
0000000000001086         db  0x74 ; 't'
0000000000001087         db  0x72 ; 'r'
0000000000001088         db  0x75 ; 'u'
0000000000001089         db  0x6e ; 'n'
000000000000108a         db  0x63 ; 'c'
000000000000108b         db  0x61 ; 'a'
000000000000108c         db  0x74 ; 't'
000000000000108d         db  0x65 ; 'e'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x6f ; 'o'
0000000000001090         db  0x70 ; 'p'
0000000000001091         db  0x74 ; 't'
0000000000001092         db  0x69 ; 'i'
0000000000001093         db  0x6e ; 'n'
0000000000001094         db  0x64 ; 'd'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x73 ; 's'
0000000000001097         db  0x74 ; 't'
0000000000001098         db  0x72 ; 'r'
0000000000001099         db  0x72 ; 'r'
000000000000109a         db  0x63 ; 'c'
000000000000109b         db  0x68 ; 'h'
000000000000109c         db  0x72 ; 'r'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x72 ; 'r'
000000000000109f         db  0x70 ; 'p'
00000000000010a0         db  0x6d ; 'm'
00000000000010a1         db  0x61 ; 'a'
00000000000010a2         db  0x74 ; 't'
00000000000010a3         db  0x63 ; 'c'
00000000000010a4         db  0x68 ; 'h'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x64 ; 'd'
00000000000010a7         db  0x63 ; 'c'
00000000000010a8         db  0x67 ; 'g'
00000000000010a9         db  0x65 ; 'e'
00000000000010aa         db  0x74 ; 't'
00000000000010ab         db  0x74 ; 't'
00000000000010ac         db  0x65 ; 'e'
00000000000010ad         db  0x78 ; 'x'
00000000000010ae         db  0x74 ; 't'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x73 ; 's'
00000000000010b1         db  0x74 ; 't'
00000000000010b2         db  0x70 ; 'p'
00000000000010b3         db  0x6e ; 'n'
00000000000010b4         db  0x63 ; 'c'
00000000000010b5         db  0x70 ; 'p'
00000000000010b6         db  0x79 ; 'y'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x75 ; 'u'
00000000000010b9         db  0x6e ; 'n'
00000000000010ba         db  0x6c ; 'l'
00000000000010bb         db  0x69 ; 'i'
00000000000010bc         db  0x6e ; 'n'
00000000000010bd         db  0x6b ; 'k'
00000000000010be         db  0x61 ; 'a'
00000000000010bf         db  0x74 ; 't'
00000000000010c0         db  0x00 ; '.'
00000000000010c1         db  0x63 ; 'c'
00000000000010c2         db  0x6c ; 'l'
00000000000010c3         db  0x6f ; 'o'
00000000000010c4         db  0x73 ; 's'
00000000000010c5         db  0x65 ; 'e'
00000000000010c6         db  0x64 ; 'd'
00000000000010c7         db  0x69 ; 'i'
00000000000010c8         db  0x72 ; 'r'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x66 ; 'f'
00000000000010cb         db  0x63 ; 'c'
00000000000010cc         db  0x68 ; 'h'
00000000000010cd         db  0x64 ; 'd'
00000000000010ce         db  0x69 ; 'i'
00000000000010cf         db  0x72 ; 'r'
00000000000010d0         db  0x00 ; '.'
00000000000010d1         db  0x65 ; 'e'
00000000000010d2         db  0x72 ; 'r'
00000000000010d3         db  0x72 ; 'r'
00000000000010d4         db  0x6f ; 'o'
00000000000010d5         db  0x72 ; 'r'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x5f ; '_'
00000000000010d8         db  0x5f ; '_'
00000000000010d9         db  0x72 ; 'r'
00000000000010da         db  0x65 ; 'e'
00000000000010db         db  0x61 ; 'a'
00000000000010dc         db  0x64 ; 'd'
00000000000010dd         db  0x5f ; '_'
00000000000010de         db  0x63 ; 'c'
00000000000010df         db  0x68 ; 'h'
00000000000010e0         db  0x6b ; 'k'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x73 ; 's'
00000000000010e3         db  0x69 ; 'i'
00000000000010e4         db  0x67 ; 'g'
00000000000010e5         db  0x6e ; 'n'
00000000000010e6         db  0x61 ; 'a'
00000000000010e7         db  0x6c ; 'l'
00000000000010e8         db  0x00 ; '.'
00000000000010e9         db  0x66 ; 'f'
00000000000010ea         db  0x6f ; 'o'
00000000000010eb         db  0x72 ; 'r'
00000000000010ec         db  0x6b ; 'k'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x5f ; '_'
00000000000010ef         db  0x5f ; '_'
00000000000010f0         db  0x73 ; 's'
00000000000010f1         db  0x74 ; 't'
00000000000010f2         db  0x61 ; 'a'
00000000000010f3         db  0x63 ; 'c'
00000000000010f4         db  0x6b ; 'k'
00000000000010f5         db  0x5f ; '_'
00000000000010f6         db  0x63 ; 'c'
00000000000010f7         db  0x68 ; 'h'
00000000000010f8         db  0x6b ; 'k'
00000000000010f9         db  0x5f ; '_'
00000000000010fa         db  0x66 ; 'f'
00000000000010fb         db  0x61 ; 'a'
00000000000010fc         db  0x69 ; 'i'
00000000000010fd         db  0x6c ; 'l'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x5f ; '_'
                     aLxstat:
0000000000001100         db         "_lxstat", 0
0000000000001108         db  0x75 ; 'u'
0000000000001109         db  0x6e ; 'n'
000000000000110a         db  0x6c ; 'l'
000000000000110b         db  0x69 ; 'i'
000000000000110c         db  0x6e ; 'n'
000000000000110d         db  0x6b ; 'k'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x69 ; 'i'
0000000000001110         db  0x73 ; 's'
0000000000001111         db  0x77 ; 'w'
0000000000001112         db  0x70 ; 'p'
0000000000001113         db  0x72 ; 'r'
0000000000001114         db  0x69 ; 'i'
0000000000001115         db  0x6e ; 'n'
0000000000001116         db  0x74 ; 't'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x6d ; 'm'
0000000000001119         db  0x6b ; 'k'
000000000000111a         db  0x64 ; 'd'
000000000000111b         db  0x69 ; 'i'
000000000000111c         db  0x72 ; 'r'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x72 ; 'r'
000000000000111f         db  0x65 ; 'e'
0000000000001120         db  0x61 ; 'a'
0000000000001121         db  0x6c ; 'l'
0000000000001122         db  0x6c ; 'l'
0000000000001123         db  0x6f ; 'o'
0000000000001124         db  0x63 ; 'c'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x72 ; 'r'
0000000000001127         db  0x65 ; 'e'
0000000000001128         db  0x77 ; 'w'
0000000000001129         db  0x69 ; 'i'
000000000000112a         db  0x6e ; 'n'
000000000000112b         db  0x64 ; 'd'
000000000000112c         db  0x64 ; 'd'
000000000000112d         db  0x69 ; 'i'
000000000000112e         db  0x72 ; 'r'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x61 ; 'a'
0000000000001131         db  0x62 ; 'b'
0000000000001132         db  0x6f ; 'o'
0000000000001133         db  0x72 ; 'r'
0000000000001134         db  0x74 ; 't'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x73 ; 's'
0000000000001137         db  0x74 ; 't'
0000000000001138         db  0x64 ; 'd'
0000000000001139         db  0x69 ; 'i'
000000000000113a         db  0x6e ; 'n'
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x5f ; '_'
000000000000113d         db  0x65 ; 'e'
000000000000113e         db  0x78 ; 'x'
000000000000113f         db  0x69 ; 'i'
0000000000001140         db  0x74 ; 't'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x67 ; 'g'
0000000000001143         db  0x65 ; 'e'
0000000000001144         db  0x74 ; 't'
0000000000001145         db  0x70 ; 'p'
0000000000001146         db  0x69 ; 'i'
0000000000001147         db  0x64 ; 'd'
0000000000001148         db  0x00 ; '.'
0000000000001149         db  0x73 ; 's'
000000000000114a         db  0x74 ; 't'
000000000000114b         db  0x72 ; 'r'
000000000000114c         db  0x73 ; 's'
000000000000114d         db  0x70 ; 'p'
000000000000114e         db  0x6e ; 'n'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x70 ; 'p'
0000000000001151         db  0x72 ; 'r'
0000000000001152         db  0x6f ; 'o'
0000000000001153         db  0x67 ; 'g'
0000000000001154         db  0x72 ; 'r'
0000000000001155         db  0x61 ; 'a'
0000000000001156         db  0x6d ; 'm'
0000000000001157         db  0x5f ; '_'
0000000000001158         db  0x69 ; 'i'
0000000000001159         db  0x6e ; 'n'
000000000000115a         db  0x76 ; 'v'
000000000000115b         db  0x6f ; 'o'
000000000000115c         db  0x63 ; 'c'
000000000000115d         db  0x61 ; 'a'
000000000000115e         db  0x74 ; 't'
000000000000115f         db  0x69 ; 'i'
0000000000001160         db  0x6f ; 'o'
0000000000001161         db  0x6e ; 'n'
0000000000001162         db  0x5f ; '_'
0000000000001163         db  0x6e ; 'n'
0000000000001164         db  0x61 ; 'a'
0000000000001165         db  0x6d ; 'm'
0000000000001166         db  0x65 ; 'e'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x5f ; '_'
0000000000001169         db  0x5f ; '_'
000000000000116a         db  0x61 ; 'a'
000000000000116b         db  0x73 ; 's'
000000000000116c         db  0x73 ; 's'
000000000000116d         db  0x65 ; 'e'
000000000000116e         db  0x72 ; 'r'
000000000000116f         db  0x74 ; 't'
0000000000001170         db  0x5f ; '_'
0000000000001171         db  0x66 ; 'f'
0000000000001172         db  0x61 ; 'a'
0000000000001173         db  0x69 ; 'i'
0000000000001174         db  0x6c ; 'l'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x66 ; 'f'
0000000000001177         db  0x61 ; 'a'
0000000000001178         db  0x6c ; 'l'
0000000000001179         db  0x6c ; 'l'
000000000000117a         db  0x6f ; 'o'
000000000000117b         db  0x63 ; 'c'
000000000000117c         db  0x61 ; 'a'
000000000000117d         db  0x74 ; 't'
000000000000117e         db  0x65 ; 'e'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x5f ; '_'
0000000000001181         db  0x5f ; '_'
0000000000001182         db  0x63 ; 'c'
0000000000001183         db  0x74 ; 't'
0000000000001184         db  0x79 ; 'y'
0000000000001185         db  0x70 ; 'p'
0000000000001186         db  0x65 ; 'e'
0000000000001187         db  0x5f ; '_'
0000000000001188         db  0x67 ; 'g'
0000000000001189         db  0x65 ; 'e'
000000000000118a         db  0x74 ; 't'
000000000000118b         db  0x5f ; '_'
000000000000118c         db  0x6d ; 'm'
000000000000118d         db  0x62 ; 'b'
000000000000118e         db  0x5f ; '_'
000000000000118f         db  0x63 ; 'c'
0000000000001190         db  0x75 ; 'u'
0000000000001191         db  0x72 ; 'r'
0000000000001192         db  0x5f ; '_'
0000000000001193         db  0x6d ; 'm'
0000000000001194         db  0x61 ; 'a'
0000000000001195         db  0x78 ; 'x'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x65 ; 'e'
0000000000001198         db  0x6e ; 'n'
0000000000001199         db  0x64 ; 'd'
000000000000119a         db  0x70 ; 'p'
000000000000119b         db  0x77 ; 'w'
000000000000119c         db  0x65 ; 'e'
000000000000119d         db  0x6e ; 'n'
000000000000119e         db  0x74 ; 't'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x6c ; 'l'
00000000000011a1         db  0x63 ; 'c'
00000000000011a2         db  0x68 ; 'h'
00000000000011a3         db  0x6f ; 'o'
00000000000011a4         db  0x77 ; 'w'
00000000000011a5         db  0x6e ; 'n'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x70 ; 'p'
00000000000011a8         db  0x6f ; 'o'
00000000000011a9         db  0x73 ; 's'
00000000000011aa         db  0x69 ; 'i'
00000000000011ab         db  0x78 ; 'x'
00000000000011ac         db  0x5f ; '_'
00000000000011ad         db  0x66 ; 'f'
00000000000011ae         db  0x61 ; 'a'
00000000000011af         db  0x64 ; 'd'
00000000000011b0         db  0x76 ; 'v'
00000000000011b1         db  0x69 ; 'i'
00000000000011b2         db  0x73 ; 's'
00000000000011b3         db  0x65 ; 'e'
00000000000011b4         db  0x00 ; '.'
00000000000011b5         db  0x65 ; 'e'
00000000000011b6         db  0x78 ; 'x'
00000000000011b7         db  0x65 ; 'e'
00000000000011b8         db  0x63 ; 'c'
00000000000011b9         db  0x6c ; 'l'
00000000000011ba         db  0x70 ; 'p'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x67 ; 'g'
00000000000011bd         db  0x65 ; 'e'
00000000000011be         db  0x74 ; 't'
00000000000011bf         db  0x70 ; 'p'
00000000000011c0         db  0x77 ; 'w'
00000000000011c1         db  0x6e ; 'n'
00000000000011c2         db  0x61 ; 'a'
00000000000011c3         db  0x6d ; 'm'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x67 ; 'g'
00000000000011c6         db  0x65 ; 'e'
00000000000011c7         db  0x74 ; 't'
00000000000011c8         db  0x70 ; 'p'
00000000000011c9         db  0x70 ; 'p'
00000000000011ca         db  0x69 ; 'i'
00000000000011cb         db  0x64 ; 'd'
00000000000011cc         db  0x00 ; '.'
00000000000011cd         db  0x63 ; 'c'
00000000000011ce         db  0x61 ; 'a'
00000000000011cf         db  0x6c ; 'l'
00000000000011d0         db  0x6c ; 'l'
00000000000011d1         db  0x6f ; 'o'
00000000000011d2         db  0x63 ; 'c'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x72 ; 'r'
00000000000011d5         db  0x65 ; 'e'
00000000000011d6         db  0x6e ; 'n'
00000000000011d7         db  0x61 ; 'a'
00000000000011d8         db  0x6d ; 'm'
00000000000011d9         db  0x65 ; 'e'
00000000000011da         db  0x61 ; 'a'
00000000000011db         db  0x74 ; 't'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x66 ; 'f'
00000000000011de         db  0x75 ; 'u'
00000000000011df         db  0x74 ; 't'
00000000000011e0         db  0x69 ; 'i'
00000000000011e1         db  0x6d ; 'm'
00000000000011e2         db  0x65 ; 'e'
00000000000011e3         db  0x6e ; 'n'
00000000000011e4         db  0x73 ; 's'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x73 ; 's'
00000000000011e7         db  0x74 ; 't'
00000000000011e8         db  0x72 ; 'r'
00000000000011e9         db  0x6c ; 'l'
00000000000011ea         db  0x65 ; 'e'
00000000000011eb         db  0x6e ; 'n'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x66 ; 'f'
00000000000011ee         db  0x72 ; 'r'
00000000000011ef         db  0x65 ; 'e'
00000000000011f0         db  0x61 ; 'a'
00000000000011f1         db  0x64 ; 'd'
00000000000011f2         db  0x5f ; '_'
00000000000011f3         db  0x75 ; 'u'
00000000000011f4         db  0x6e ; 'n'
00000000000011f5         db  0x6c ; 'l'
00000000000011f6         db  0x6f ; 'o'
00000000000011f7         db  0x63 ; 'c'
00000000000011f8         db  0x6b ; 'k'
00000000000011f9         db  0x65 ; 'e'
00000000000011fa         db  0x64 ; 'd'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x6d ; 'm'
00000000000011fd         db  0x65 ; 'e'
00000000000011fe         db  0x6d ; 'm'
00000000000011ff         db  0x73 ; 's'
0000000000001200         db  0x65 ; 'e'
0000000000001201         db  0x74 ; 't'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x75 ; 'u'
0000000000001204         db  0x74 ; 't'
0000000000001205         db  0x69 ; 'i'
0000000000001206         db  0x6d ; 'm'
0000000000001207         db  0x65 ; 'e'
0000000000001208         db  0x6e ; 'n'
0000000000001209         db  0x73 ; 's'
000000000000120a         db  0x61 ; 'a'
000000000000120b         db  0x74 ; 't'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x72 ; 'r'
000000000000120e         db  0x6d ; 'm'
000000000000120f         db  0x64 ; 'd'
0000000000001210         db  0x69 ; 'i'
0000000000001211         db  0x72 ; 'r'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x5f ; '_'
0000000000001214         db  0x5f ; '_'
0000000000001215         db  0x65 ; 'e'
0000000000001216         db  0x72 ; 'r'
0000000000001217         db  0x72 ; 'r'
0000000000001218         db  0x6e ; 'n'
0000000000001219         db  0x6f ; 'o'
000000000000121a         db  0x5f ; '_'
000000000000121b         db  0x6c ; 'l'
000000000000121c         db  0x6f ; 'o'
000000000000121d         db  0x63 ; 'c'
000000000000121e         db  0x61 ; 'a'
000000000000121f         db  0x74 ; 't'
0000000000001220         db  0x69 ; 'i'
0000000000001221         db  0x6f ; 'o'
0000000000001222         db  0x6e ; 'n'
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x72 ; 'r'
0000000000001225         db  0x65 ; 'e'
0000000000001226         db  0x61 ; 'a'
0000000000001227         db  0x64 ; 'd'
0000000000001228         db  0x00 ; '.'
0000000000001229         db  0x6d ; 'm'
000000000000122a         db  0x65 ; 'e'
000000000000122b         db  0x6d ; 'm'
000000000000122c         db  0x63 ; 'c'
000000000000122d         db  0x6d ; 'm'
000000000000122e         db  0x70 ; 'p'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x67 ; 'g'
0000000000001231         db  0x65 ; 'e'
0000000000001232         db  0x74 ; 't'
0000000000001233         db  0x70 ; 'p'
0000000000001234         db  0x61 ; 'a'
0000000000001235         db  0x67 ; 'g'
0000000000001236         db  0x65 ; 'e'
0000000000001237         db  0x73 ; 's'
0000000000001238         db  0x69 ; 'i'
0000000000001239         db  0x7a ; 'z'
000000000000123a         db  0x65 ; 'e'
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x65 ; 'e'
000000000000123d         db  0x6e ; 'n'
000000000000123e         db  0x64 ; 'd'
000000000000123f         db  0x67 ; 'g'
0000000000001240         db  0x72 ; 'r'
0000000000001241         db  0x65 ; 'e'
0000000000001242         db  0x6e ; 'n'
0000000000001243         db  0x74 ; 't'
0000000000001244         db  0x00 ; '.'
0000000000001245         db  0x6d ; 'm'
0000000000001246         db  0x65 ; 'e'
0000000000001247         db  0x6d ; 'm'
0000000000001248         db  0x70 ; 'p'
0000000000001249         db  0x63 ; 'c'
000000000000124a         db  0x70 ; 'p'
000000000000124b         db  0x79 ; 'y'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x5f ; '_'
000000000000124e         db  0x5f ; '_'
000000000000124f         db  0x66 ; 'f'
0000000000001250         db  0x70 ; 'p'
0000000000001251         db  0x72 ; 'r'
0000000000001252         db  0x69 ; 'i'
0000000000001253         db  0x6e ; 'n'
0000000000001254         db  0x74 ; 't'
0000000000001255         db  0x66 ; 'f'
0000000000001256         db  0x5f ; '_'
0000000000001257         db  0x63 ; 'c'
0000000000001258         db  0x68 ; 'h'
0000000000001259         db  0x6b ; 'k'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x67 ; 'g'
000000000000125c         db  0x65 ; 'e'
000000000000125d         db  0x74 ; 't'
000000000000125e         db  0x67 ; 'g'
000000000000125f         db  0x72 ; 'r'
0000000000001260         db  0x6e ; 'n'
0000000000001261         db  0x61 ; 'a'
0000000000001262         db  0x6d ; 'm'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x66 ; 'f'
0000000000001265         db  0x63 ; 'c'
0000000000001266         db  0x68 ; 'h'
0000000000001267         db  0x6f ; 'o'
0000000000001268         db  0x77 ; 'w'
0000000000001269         db  0x6e ; 'n'
000000000000126a         db  0x00 ; '.'
000000000000126b         db  0x73 ; 's'
000000000000126c         db  0x74 ; 't'
000000000000126d         db  0x64 ; 'd'
000000000000126e         db  0x6f ; 'o'
000000000000126f         db  0x75 ; 'u'
0000000000001270         db  0x74 ; 't'
0000000000001271         db  0x00 ; '.'
0000000000001272         db  0x66 ; 'f'
0000000000001273         db  0x70 ; 'p'
0000000000001274         db  0x61 ; 'a'
0000000000001275         db  0x74 ; 't'
0000000000001276         db  0x68 ; 'h'
0000000000001277         db  0x63 ; 'c'
0000000000001278         db  0x6f ; 'o'
0000000000001279         db  0x6e ; 'n'
000000000000127a         db  0x66 ; 'f'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x6c ; 'l'
000000000000127d         db  0x73 ; 's'
000000000000127e         db  0x65 ; 'e'
000000000000127f         db  0x65 ; 'e'
0000000000001280         db  0x6b ; 'k'
0000000000001281         db  0x00 ; '.'
0000000000001282         db  0x6d ; 'm'
0000000000001283         db  0x65 ; 'e'
0000000000001284         db  0x6d ; 'm'
0000000000001285         db  0x63 ; 'c'
0000000000001286         db  0x70 ; 'p'
0000000000001287         db  0x79 ; 'y'
0000000000001288         db  0x00 ; '.'
0000000000001289         db  0x66 ; 'f'
000000000000128a         db  0x63 ; 'c'
000000000000128b         db  0x6c ; 'l'
000000000000128c         db  0x6f ; 'o'
000000000000128d         db  0x73 ; 's'
000000000000128e         db  0x65 ; 'e'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x65 ; 'e'
0000000000001291         db  0x75 ; 'u'
0000000000001292         db  0x69 ; 'i'
0000000000001293         db  0x64 ; 'd'
0000000000001294         db  0x61 ; 'a'
0000000000001295         db  0x63 ; 'c'
0000000000001296         db  0x63 ; 'c'
0000000000001297         db  0x65 ; 'e'
0000000000001298         db  0x73 ; 's'
0000000000001299         db  0x73 ; 's'
000000000000129a         db  0x00 ; '.'
000000000000129b         db  0x73 ; 's'
000000000000129c         db  0x79 ; 'y'
000000000000129d         db  0x6d ; 'm'
000000000000129e         db  0x6c ; 'l'
000000000000129f         db  0x69 ; 'i'
00000000000012a0         db  0x6e ; 'n'
00000000000012a1         db  0x6b ; 'k'
00000000000012a2         db  0x61 ; 'a'
00000000000012a3         db  0x74 ; 't'
00000000000012a4         db  0x00 ; '.'
00000000000012a5         db  0x73 ; 's'
00000000000012a6         db  0x74 ; 't'
00000000000012a7         db  0x72 ; 'r'
00000000000012a8         db  0x74 ; 't'
00000000000012a9         db  0x6f ; 'o'
00000000000012aa         db  0x75 ; 'u'
00000000000012ab         db  0x6c ; 'l'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x6d ; 'm'
00000000000012ae         db  0x61 ; 'a'
00000000000012af         db  0x6c ; 'l'
00000000000012b0         db  0x6c ; 'l'
00000000000012b1         db  0x6f ; 'o'
00000000000012b2         db  0x63 ; 'c'
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x75 ; 'u'
00000000000012b5         db  0x6d ; 'm'
00000000000012b6         db  0x61 ; 'a'
00000000000012b7         db  0x73 ; 's'
00000000000012b8         db  0x6b ; 'k'
00000000000012b9         db  0x00 ; '.'
00000000000012ba         db  0x66 ; 'f'
00000000000012bb         db  0x64 ; 'd'
00000000000012bc         db  0x6f ; 'o'
00000000000012bd         db  0x70 ; 'p'
00000000000012be         db  0x65 ; 'e'
00000000000012bf         db  0x6e ; 'n'
00000000000012c0         db  0x64 ; 'd'
00000000000012c1         db  0x69 ; 'i'
00000000000012c2         db  0x72 ; 'r'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x72 ; 'r'
00000000000012c5         db  0x61 ; 'a'
00000000000012c6         db  0x69 ; 'i'
00000000000012c7         db  0x73 ; 's'
00000000000012c8         db  0x65 ; 'e'
00000000000012c9         db  0x00 ; '.'
00000000000012ca         db  0x6d ; 'm'
00000000000012cb         db  0x62 ; 'b'
00000000000012cc         db  0x73 ; 's'
00000000000012cd         db  0x69 ; 'i'
00000000000012ce         db  0x6e ; 'n'
00000000000012cf         db  0x69 ; 'i'
00000000000012d0         db  0x74 ; 't'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x67 ; 'g'
00000000000012d3         db  0x65 ; 'e'
00000000000012d4         db  0x74 ; 't'
00000000000012d5         db  0x67 ; 'g'
00000000000012d6         db  0x69 ; 'i'
00000000000012d7         db  0x64 ; 'd'
00000000000012d8         db  0x00 ; '.'
00000000000012d9         db  0x6e ; 'n'
00000000000012da         db  0x6c ; 'l'
00000000000012db         db  0x5f ; '_'
00000000000012dc         db  0x6c ; 'l'
00000000000012dd         db  0x61 ; 'a'
00000000000012de         db  0x6e ; 'n'
00000000000012df         db  0x67 ; 'g'
00000000000012e0         db  0x69 ; 'i'
00000000000012e1         db  0x6e ; 'n'
00000000000012e2         db  0x66 ; 'f'
00000000000012e3         db  0x6f ; 'o'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x5f ; '_'
00000000000012e6         db  0x5f ; '_'
00000000000012e7         db  0x63 ; 'c'
00000000000012e8         db  0x74 ; 't'
00000000000012e9         db  0x79 ; 'y'
00000000000012ea         db  0x70 ; 'p'
00000000000012eb         db  0x65 ; 'e'
00000000000012ec         db  0x5f ; '_'
00000000000012ed         db  0x62 ; 'b'
00000000000012ee         db  0x5f ; '_'
00000000000012ef         db  0x6c ; 'l'
00000000000012f0         db  0x6f ; 'o'
00000000000012f1         db  0x63 ; 'c'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x67 ; 'g'
00000000000012f4         db  0x65 ; 'e'
00000000000012f5         db  0x74 ; 't'
00000000000012f6         db  0x65 ; 'e'
00000000000012f7         db  0x6e ; 'n'
00000000000012f8         db  0x76 ; 'v'
00000000000012f9         db  0x00 ; '.'
00000000000012fa         db  0x5f ; '_'
00000000000012fb         db  0x5f ; '_'
00000000000012fc         db  0x6f ; 'o'
00000000000012fd         db  0x70 ; 'p'
00000000000012fe         db  0x65 ; 'e'
00000000000012ff         db  0x6e ; 'n'
0000000000001300         db  0x5f ; '_'
0000000000001301         db  0x32 ; '2'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x6f ; 'o'
0000000000001304         db  0x70 ; 'p'
0000000000001305         db  0x74 ; 't'
0000000000001306         db  0x61 ; 'a'
0000000000001307         db  0x72 ; 'r'
0000000000001308         db  0x67 ; 'g'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x5f ; '_'
000000000000130b         db  0x5f ; '_'
000000000000130c         db  0x66 ; 'f'
000000000000130d         db  0x72 ; 'r'
000000000000130e         db  0x65 ; 'e'
000000000000130f         db  0x61 ; 'a'
0000000000001310         db  0x64 ; 'd'
0000000000001311         db  0x69 ; 'i'
0000000000001312         db  0x6e ; 'n'
0000000000001313         db  0x67 ; 'g'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x73 ; 's'
0000000000001316         db  0x74 ; 't'
0000000000001317         db  0x64 ; 'd'
0000000000001318         db  0x65 ; 'e'
0000000000001319         db  0x72 ; 'r'
000000000000131a         db  0x72 ; 'r'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x69 ; 'i'
000000000000131d         db  0x6f ; 'o'
000000000000131e         db  0x63 ; 'c'
000000000000131f         db  0x74 ; 't'
0000000000001320         db  0x6c ; 'l'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x5f ; '_'
0000000000001323         db  0x5f ; '_'
0000000000001324         db  0x73 ; 's'
0000000000001325         db  0x6e ; 'n'
0000000000001326         db  0x70 ; 'p'
0000000000001327         db  0x72 ; 'r'
0000000000001328         db  0x69 ; 'i'
0000000000001329         db  0x6e ; 'n'
000000000000132a         db  0x74 ; 't'
000000000000132b         db  0x66 ; 'f'
000000000000132c         db  0x5f ; '_'
000000000000132d         db  0x63 ; 'c'
000000000000132e         db  0x68 ; 'h'
000000000000132f         db  0x6b ; 'k'
0000000000001330         db  0x00 ; '.'
0000000000001331         db  0x67 ; 'g'
0000000000001332         db  0x65 ; 'e'
0000000000001333         db  0x74 ; 't'
0000000000001334         db  0x75 ; 'u'
0000000000001335         db  0x69 ; 'i'
0000000000001336         db  0x64 ; 'd'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x72 ; 'r'
0000000000001339         db  0x65 ; 'e'
000000000000133a         db  0x61 ; 'a'
000000000000133b         db  0x64 ; 'd'
000000000000133c         db  0x6c ; 'l'
000000000000133d         db  0x69 ; 'i'
000000000000133e         db  0x6e ; 'n'
000000000000133f         db  0x6b ; 'k'
0000000000001340         db  0x00 ; '.'
0000000000001341         db  0x67 ; 'g'
0000000000001342         db  0x65 ; 'e'
0000000000001343         db  0x74 ; 't'
0000000000001344         db  0x6f ; 'o'
0000000000001345         db  0x70 ; 'p'
0000000000001346         db  0x74 ; 't'
0000000000001347         db  0x5f ; '_'
0000000000001348         db  0x6c ; 'l'
0000000000001349         db  0x6f ; 'o'
000000000000134a         db  0x6e ; 'n'
000000000000134b         db  0x67 ; 'g'
000000000000134c         db  0x00 ; '.'
000000000000134d         db  0x5f ; '_'
000000000000134e         db  0x5f ; '_'
000000000000134f         db  0x78 ; 'x'
0000000000001350         db  0x6d ; 'm'
0000000000001351         db  0x6b ; 'k'
0000000000001352         db  0x6e ; 'n'
0000000000001353         db  0x6f ; 'o'
0000000000001354         db  0x64 ; 'd'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x5f ; '_'
0000000000001357         db  0x5f ; '_'
0000000000001358         db  0x66 ; 'f'
0000000000001359         db  0x78 ; 'x'
000000000000135a         db  0x73 ; 's'
000000000000135b         db  0x74 ; 't'
000000000000135c         db  0x61 ; 'a'
000000000000135d         db  0x74 ; 't'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x66 ; 'f'
0000000000001360         db  0x69 ; 'i'
0000000000001361         db  0x6c ; 'l'
0000000000001362         db  0x65 ; 'e'
0000000000001363         db  0x6e ; 'n'
0000000000001364         db  0x6f ; 'o'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x75 ; 'u'
0000000000001367         db  0x74 ; 't'
0000000000001368         db  0x69 ; 'i'
0000000000001369         db  0x6d ; 'm'
000000000000136a         db  0x65 ; 'e'
000000000000136b         db  0x73 ; 's'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x5f ; '_'
000000000000136e         db  0x5f ; '_'
000000000000136f         db  0x67 ; 'g'
0000000000001370         db  0x65 ; 'e'
0000000000001371         db  0x74 ; 't'
0000000000001372         db  0x64 ; 'd'
0000000000001373         db  0x65 ; 'e'
0000000000001374         db  0x6c ; 'l'
0000000000001375         db  0x69 ; 'i'
0000000000001376         db  0x6d ; 'm'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x66 ; 'f'
0000000000001379         db  0x77 ; 'w'
000000000000137a         db  0x72 ; 'r'
000000000000137b         db  0x69 ; 'i'
000000000000137c         db  0x74 ; 't'
000000000000137d         db  0x65 ; 'e'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x67 ; 'g'
0000000000001380         db  0x65 ; 'e'
0000000000001381         db  0x74 ; 't'
0000000000001382         db  0x74 ; 't'
0000000000001383         db  0x69 ; 'i'
0000000000001384         db  0x6d ; 'm'
0000000000001385         db  0x65 ; 'e'
0000000000001386         db  0x6f ; 'o'
0000000000001387         db  0x66 ; 'f'
0000000000001388         db  0x64 ; 'd'
0000000000001389         db  0x61 ; 'a'
000000000000138a         db  0x79 ; 'y'
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x72 ; 'r'
000000000000138d         db  0x65 ; 'e'
000000000000138e         db  0x6e ; 'n'
000000000000138f         db  0x61 ; 'a'
0000000000001390         db  0x6d ; 'm'
0000000000001391         db  0x65 ; 'e'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x5f ; '_'
0000000000001394         db  0x5f ; '_'
0000000000001395         db  0x65 ; 'e'
0000000000001396         db  0x78 ; 'x'
0000000000001397         db  0x70 ; 'p'
0000000000001398         db  0x6c ; 'l'
0000000000001399         db  0x69 ; 'i'
000000000000139a         db  0x63 ; 'c'
000000000000139b         db  0x69 ; 'i'
000000000000139c         db  0x74 ; 't'
000000000000139d         db  0x5f ; '_'
000000000000139e         db  0x62 ; 'b'
000000000000139f         db  0x7a ; 'z'
00000000000013a0         db  0x65 ; 'e'
00000000000013a1         db  0x72 ; 'r'
00000000000013a2         db  0x6f ; 'o'
00000000000013a3         db  0x5f ; '_'
00000000000013a4         db  0x63 ; 'c'
00000000000013a5         db  0x68 ; 'h'
00000000000013a6         db  0x6b ; 'k'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x67 ; 'g'
00000000000013a9         db  0x65 ; 'e'
00000000000013aa         db  0x74 ; 't'
00000000000013ab         db  0x65 ; 'e'
00000000000013ac         db  0x75 ; 'u'
00000000000013ad         db  0x69 ; 'i'
00000000000013ae         db  0x64 ; 'd'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x63 ; 'c'
00000000000013b1         db  0x6c ; 'l'
00000000000013b2         db  0x6f ; 'o'
00000000000013b3         db  0x63 ; 'c'
00000000000013b4         db  0x6b ; 'k'
00000000000013b5         db  0x5f ; '_'
00000000000013b6         db  0x67 ; 'g'
00000000000013b7         db  0x65 ; 'e'
00000000000013b8         db  0x74 ; 't'
00000000000013b9         db  0x74 ; 't'
00000000000013ba         db  0x69 ; 'i'
00000000000013bb         db  0x6d ; 'm'
00000000000013bc         db  0x65 ; 'e'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x77 ; 'w'
00000000000013bf         db  0x61 ; 'a'
00000000000013c0         db  0x69 ; 'i'
00000000000013c1         db  0x74 ; 't'
00000000000013c2         db  0x70 ; 'p'
00000000000013c3         db  0x69 ; 'i'
00000000000013c4         db  0x64 ; 'd'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x5f ; '_'
00000000000013c7         db  0x5f ; '_'
00000000000013c8         db  0x66 ; 'f'
00000000000013c9         db  0x70 ; 'p'
00000000000013ca         db  0x65 ; 'e'
00000000000013cb         db  0x6e ; 'n'
00000000000013cc         db  0x64 ; 'd'
00000000000013cd         db  0x69 ; 'i'
00000000000013ce         db  0x6e ; 'n'
00000000000013cf         db  0x67 ; 'g'
00000000000013d0         db  0x00 ; '.'
00000000000013d1         db  0x73 ; 's'
00000000000013d2         db  0x74 ; 't'
00000000000013d3         db  0x72 ; 'r'
00000000000013d4         db  0x63 ; 'c'
00000000000013d5         db  0x68 ; 'h'
00000000000013d6         db  0x72 ; 'r'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x70 ; 'p'
00000000000013d9         db  0x72 ; 'r'
00000000000013da         db  0x6f ; 'o'
00000000000013db         db  0x67 ; 'g'
00000000000013dc         db  0x72 ; 'r'
00000000000013dd         db  0x61 ; 'a'
00000000000013de         db  0x6d ; 'm'
00000000000013df         db  0x5f ; '_'
00000000000013e0         db  0x69 ; 'i'
00000000000013e1         db  0x6e ; 'n'
00000000000013e2         db  0x76 ; 'v'
00000000000013e3         db  0x6f ; 'o'
00000000000013e4         db  0x63 ; 'c'
00000000000013e5         db  0x61 ; 'a'
00000000000013e6         db  0x74 ; 't'
00000000000013e7         db  0x69 ; 'i'
00000000000013e8         db  0x6f ; 'o'
00000000000013e9         db  0x6e ; 'n'
00000000000013ea         db  0x5f ; '_'
00000000000013eb         db  0x73 ; 's'
00000000000013ec         db  0x68 ; 'h'
00000000000013ed         db  0x6f ; 'o'
00000000000013ee         db  0x72 ; 'r'
00000000000013ef         db  0x74 ; 't'
00000000000013f0         db  0x5f ; '_'
00000000000013f1         db  0x6e ; 'n'
00000000000013f2         db  0x61 ; 'a'
00000000000013f3         db  0x6d ; 'm'
00000000000013f4         db  0x65 ; 'e'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x66 ; 'f'
00000000000013f7         db  0x64 ; 'd'
00000000000013f8         db  0x6f ; 'o'
00000000000013f9         db  0x70 ; 'p'
00000000000013fa         db  0x65 ; 'e'
00000000000013fb         db  0x6e ; 'n'
00000000000013fc         db  0x00 ; '.'
00000000000013fd         db  0x71 ; 'q'
00000000000013fe         db  0x73 ; 's'
00000000000013ff         db  0x6f ; 'o'
0000000000001400         db  0x72 ; 'r'
0000000000001401         db  0x74 ; 't'
0000000000001402         db  0x00 ; '.'
0000000000001403         db  0x63 ; 'c'
0000000000001404         db  0x61 ; 'a'
0000000000001405         db  0x6e ; 'n'
0000000000001406         db  0x6f ; 'o'
0000000000001407         db  0x6e ; 'n'
0000000000001408         db  0x69 ; 'i'
0000000000001409         db  0x63 ; 'c'
000000000000140a         db  0x61 ; 'a'
000000000000140b         db  0x6c ; 'l'
000000000000140c         db  0x69 ; 'i'
000000000000140d         db  0x7a ; 'z'
000000000000140e         db  0x65 ; 'e'
000000000000140f         db  0x5f ; '_'
0000000000001410         db  0x66 ; 'f'
0000000000001411         db  0x69 ; 'i'
0000000000001412         db  0x6c ; 'l'
0000000000001413         db  0x65 ; 'e'
0000000000001414         db  0x5f ; '_'
0000000000001415         db  0x6e ; 'n'
0000000000001416         db  0x61 ; 'a'
0000000000001417         db  0x6d ; 'm'
0000000000001418         db  0x65 ; 'e'
0000000000001419         db  0x00 ; '.'
000000000000141a         db  0x5f ; '_'
000000000000141b         db  0x5f ; '_'
000000000000141c         db  0x63 ; 'c'
000000000000141d         db  0x78 ; 'x'
000000000000141e         db  0x61 ; 'a'
000000000000141f         db  0x5f ; '_'
0000000000001420         db  0x66 ; 'f'
0000000000001421         db  0x69 ; 'i'
0000000000001422         db  0x6e ; 'n'
0000000000001423         db  0x61 ; 'a'
0000000000001424         db  0x6c ; 'l'
0000000000001425         db  0x69 ; 'i'
0000000000001426         db  0x7a ; 'z'
0000000000001427         db  0x65 ; 'e'
0000000000001428         db  0x00 ; '.'
0000000000001429         db  0x73 ; 's'
000000000000142a         db  0x79 ; 'y'
000000000000142b         db  0x73 ; 's'
000000000000142c         db  0x63 ; 'c'
000000000000142d         db  0x61 ; 'a'
000000000000142e         db  0x6c ; 'l'
000000000000142f         db  0x6c ; 'l'
0000000000001430         db  0x00 ; '.'
0000000000001431         db  0x73 ; 's'
0000000000001432         db  0x65 ; 'e'
0000000000001433         db  0x74 ; 't'
0000000000001434         db  0x76 ; 'v'
0000000000001435         db  0x62 ; 'b'
0000000000001436         db  0x75 ; 'u'
0000000000001437         db  0x66 ; 'f'
0000000000001438         db  0x00 ; '.'
0000000000001439         db  0x66 ; 'f'
000000000000143a         db  0x63 ; 'c'
000000000000143b         db  0x6e ; 'n'
000000000000143c         db  0x74 ; 't'
000000000000143d         db  0x6c ; 'l'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x6f ; 'o'
0000000000001440         db  0x70 ; 'p'
0000000000001441         db  0x65 ; 'e'
0000000000001442         db  0x6e ; 'n'
0000000000001443         db  0x61 ; 'a'
0000000000001444         db  0x74 ; 't'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x66 ; 'f'
0000000000001447         db  0x75 ; 'u'
0000000000001448         db  0x74 ; 't'
0000000000001449         db  0x69 ; 'i'
000000000000144a         db  0x6d ; 'm'
000000000000144b         db  0x65 ; 'e'
000000000000144c         db  0x73 ; 's'
000000000000144d         db  0x61 ; 'a'
000000000000144e         db  0x74 ; 't'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x5f ; '_'
0000000000001451         db  0x5f ; '_'
0000000000001452         db  0x78 ; 'x'
0000000000001453         db  0x73 ; 's'
0000000000001454         db  0x74 ; 't'
0000000000001455         db  0x61 ; 'a'
0000000000001456         db  0x74 ; 't'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x62 ; 'b'
0000000000001459         db  0x69 ; 'i'
000000000000145a         db  0x6e ; 'n'
000000000000145b         db  0x64 ; 'd'
000000000000145c         db  0x74 ; 't'
000000000000145d         db  0x65 ; 'e'
000000000000145e         db  0x78 ; 'x'
000000000000145f         db  0x74 ; 't'
0000000000001460         db  0x64 ; 'd'
0000000000001461         db  0x6f ; 'o'
0000000000001462         db  0x6d ; 'm'
0000000000001463         db  0x61 ; 'a'
0000000000001464         db  0x69 ; 'i'
0000000000001465         db  0x6e ; 'n'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x5f ; '_'
0000000000001468         db  0x5f ; '_'
0000000000001469         db  0x66 ; 'f'
000000000000146a         db  0x78 ; 'x'
000000000000146b         db  0x73 ; 's'
000000000000146c         db  0x74 ; 't'
000000000000146d         db  0x61 ; 'a'
000000000000146e         db  0x74 ; 't'
000000000000146f         db  0x61 ; 'a'
0000000000001470         db  0x74 ; 't'
0000000000001471         db  0x00 ; '.'
0000000000001472         db  0x6d ; 'm'
0000000000001473         db  0x6b ; 'k'
0000000000001474         db  0x66 ; 'f'
0000000000001475         db  0x69 ; 'i'
0000000000001476         db  0x66 ; 'f'
0000000000001477         db  0x6f ; 'o'
0000000000001478         db  0x00 ; '.'
0000000000001479         db  0x66 ; 'f'
000000000000147a         db  0x77 ; 'w'
000000000000147b         db  0x72 ; 'r'
000000000000147c         db  0x69 ; 'i'
000000000000147d         db  0x74 ; 't'
000000000000147e         db  0x65 ; 'e'
000000000000147f         db  0x5f ; '_'
0000000000001480         db  0x75 ; 'u'
0000000000001481         db  0x6e ; 'n'
0000000000001482         db  0x6c ; 'l'
0000000000001483         db  0x6f ; 'o'
0000000000001484         db  0x63 ; 'c'
0000000000001485         db  0x6b ; 'k'
0000000000001486         db  0x65 ; 'e'
0000000000001487         db  0x64 ; 'd'
0000000000001488         db  0x00 ; '.'
0000000000001489         db  0x73 ; 's'
000000000000148a         db  0x74 ; 't'
000000000000148b         db  0x72 ; 'r'
000000000000148c         db  0x63 ; 'c'
000000000000148d         db  0x6d ; 'm'
000000000000148e         db  0x70 ; 'p'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0x5f ; '_'
0000000000001491         db  0x5f ; '_'
0000000000001492         db  0x6c ; 'l'
0000000000001493         db  0x69 ; 'i'
0000000000001494         db  0x62 ; 'b'
0000000000001495         db  0x63 ; 'c'
0000000000001496         db  0x5f ; '_'
0000000000001497         db  0x73 ; 's'
0000000000001498         db  0x74 ; 't'
0000000000001499         db  0x61 ; 'a'
000000000000149a         db  0x72 ; 'r'
000000000000149b         db  0x74 ; 't'
000000000000149c         db  0x5f ; '_'
000000000000149d         db  0x6d ; 'm'
000000000000149e         db  0x61 ; 'a'
000000000000149f         db  0x69 ; 'i'
00000000000014a0         db  0x6e ; 'n'
00000000000014a1         db  0x00 ; '.'
00000000000014a2         db  0x64 ; 'd'
00000000000014a3         db  0x69 ; 'i'
00000000000014a4         db  0x72 ; 'r'
00000000000014a5         db  0x66 ; 'f'
00000000000014a6         db  0x64 ; 'd'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0x73 ; 's'
00000000000014a9         db  0x74 ; 't'
00000000000014aa         db  0x70 ; 'p'
00000000000014ab         db  0x63 ; 'c'
00000000000014ac         db  0x70 ; 'p'
00000000000014ad         db  0x79 ; 'y'
00000000000014ae         db  0x00 ; '.'
00000000000014af         db  0x66 ; 'f'
00000000000014b0         db  0x73 ; 's'
00000000000014b1         db  0x65 ; 'e'
00000000000014b2         db  0x65 ; 'e'
00000000000014b3         db  0x6b ; 'k'
00000000000014b4         db  0x6f ; 'o'
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x5f ; '_'
00000000000014b7         db  0x5f ; '_'
00000000000014b8         db  0x6f ; 'o'
00000000000014b9         db  0x76 ; 'v'
00000000000014ba         db  0x65 ; 'e'
00000000000014bb         db  0x72 ; 'r'
00000000000014bc         db  0x66 ; 'f'
00000000000014bd         db  0x6c ; 'l'
00000000000014be         db  0x6f ; 'o'
00000000000014bf         db  0x77 ; 'w'
00000000000014c0         db  0x00 ; '.'
00000000000014c1         db  0x66 ; 'f'
00000000000014c2         db  0x70 ; 'p'
00000000000014c3         db  0x75 ; 'u'
00000000000014c4         db  0x74 ; 't'
00000000000014c5         db  0x73 ; 's'
00000000000014c6         db  0x5f ; '_'
00000000000014c7         db  0x75 ; 'u'
00000000000014c8         db  0x6e ; 'n'
00000000000014c9         db  0x6c ; 'l'
00000000000014ca         db  0x6f ; 'o'
00000000000014cb         db  0x63 ; 'c'
00000000000014cc         db  0x6b ; 'k'
00000000000014cd         db  0x65 ; 'e'
00000000000014ce         db  0x64 ; 'd'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0x66 ; 'f'
00000000000014d1         db  0x72 ; 'r'
00000000000014d2         db  0x65 ; 'e'
00000000000014d3         db  0x65 ; 'e'
00000000000014d4         db  0x00 ; '.'
00000000000014d5         db  0x5f ; '_'
00000000000014d6         db  0x5f ; '_'
00000000000014d7         db  0x70 ; 'p'
00000000000014d8         db  0x72 ; 'r'
00000000000014d9         db  0x6f ; 'o'
00000000000014da         db  0x67 ; 'g'
00000000000014db         db  0x6e ; 'n'
00000000000014dc         db  0x61 ; 'a'
00000000000014dd         db  0x6d ; 'm'
00000000000014de         db  0x65 ; 'e'
00000000000014df         db  0x00 ; '.'
00000000000014e0         db  0x5f ; '_'
00000000000014e1         db  0x5f ; '_'
00000000000014e2         db  0x70 ; 'p'
00000000000014e3         db  0x72 ; 'r'
00000000000014e4         db  0x6f ; 'o'
00000000000014e5         db  0x67 ; 'g'
00000000000014e6         db  0x6e ; 'n'
00000000000014e7         db  0x61 ; 'a'
00000000000014e8         db  0x6d ; 'm'
00000000000014e9         db  0x65 ; 'e'
00000000000014ea         db  0x5f ; '_'
00000000000014eb         db  0x66 ; 'f'
00000000000014ec         db  0x75 ; 'u'
00000000000014ed         db  0x6c ; 'l'
00000000000014ee         db  0x6c ; 'l'
00000000000014ef         db  0x00 ; '.'
00000000000014f0         db  0x5f ; '_'
00000000000014f1         db  0x5f ; '_'
00000000000014f2         db  0x63 ; 'c'
00000000000014f3         db  0x78 ; 'x'
00000000000014f4         db  0x61 ; 'a'
00000000000014f5         db  0x5f ; '_'
00000000000014f6         db  0x61 ; 'a'
00000000000014f7         db  0x74 ; 't'
00000000000014f8         db  0x65 ; 'e'
00000000000014f9         db  0x78 ; 'x'
00000000000014fa         db  0x69 ; 'i'
00000000000014fb         db  0x74 ; 't'
00000000000014fc         db  0x00 ; '.'
00000000000014fd         db  0x47 ; 'G'
00000000000014fe         db  0x4c ; 'L'
00000000000014ff         db  0x49 ; 'I'
                     aBc23:
0000000000001500         db         "BC_2.3", 0
0000000000001507         db  0x47 ; 'G'
0000000000001508         db  0x4c ; 'L'
0000000000001509         db  0x49 ; 'I'
000000000000150a         db  0x42 ; 'B'
000000000000150b         db  0x43 ; 'C'
000000000000150c         db  0x5f ; '_'
000000000000150d         db  0x32 ; '2'
000000000000150e         db  0x2e ; '.'
000000000000150f         db  0x32 ; '2'
0000000000001510         db  0x35 ; '5'
0000000000001511         db  0x00 ; '.'
0000000000001512         db  0x47 ; 'G'
0000000000001513         db  0x4c ; 'L'
0000000000001514         db  0x49 ; 'I'
0000000000001515         db  0x42 ; 'B'
0000000000001516         db  0x43 ; 'C'
0000000000001517         db  0x5f ; '_'
0000000000001518         db  0x32 ; '2'
0000000000001519         db  0x2e ; '.'
000000000000151a         db  0x31 ; '1'
000000000000151b         db  0x34 ; '4'
000000000000151c         db  0x00 ; '.'
000000000000151d         db  0x47 ; 'G'
000000000000151e         db  0x4c ; 'L'
000000000000151f         db  0x49 ; 'I'
0000000000001520         db  0x42 ; 'B'
0000000000001521         db  0x43 ; 'C'
0000000000001522         db  0x5f ; '_'
0000000000001523         db  0x32 ; '2'
0000000000001524         db  0x2e ; '.'
0000000000001525         db  0x31 ; '1'
0000000000001526         db  0x30 ; '0'
0000000000001527         db  0x00 ; '.'
0000000000001528         db  0x47 ; 'G'
0000000000001529         db  0x4c ; 'L'
000000000000152a         db  0x49 ; 'I'
000000000000152b         db  0x42 ; 'B'
000000000000152c         db  0x43 ; 'C'
000000000000152d         db  0x5f ; '_'
000000000000152e         db  0x32 ; '2'
000000000000152f         db  0x2e ; '.'
0000000000001530         db  0x37 ; '7'
0000000000001531         db  0x00 ; '.'
0000000000001532         db  0x47 ; 'G'
0000000000001533         db  0x4c ; 'L'
0000000000001534         db  0x49 ; 'I'
0000000000001535         db  0x42 ; 'B'
0000000000001536         db  0x43 ; 'C'
0000000000001537         db  0x5f ; '_'
0000000000001538         db  0x32 ; '2'
0000000000001539         db  0x2e ; '.'
000000000000153a         db  0x31 ; '1'
000000000000153b         db  0x37 ; '7'
000000000000153c         db  0x00 ; '.'
000000000000153d         db  0x47 ; 'G'
000000000000153e         db  0x4c ; 'L'
000000000000153f         db  0x49 ; 'I'
0000000000001540         db  0x42 ; 'B'
0000000000001541         db  0x43 ; 'C'
0000000000001542         db  0x5f ; '_'
0000000000001543         db  0x32 ; '2'
0000000000001544         db  0x2e ; '.'
0000000000001545         db  0x34 ; '4'
0000000000001546         db  0x00 ; '.'
0000000000001547         db  0x47 ; 'G'
0000000000001548         db  0x4c ; 'L'
0000000000001549         db  0x49 ; 'I'
000000000000154a         db  0x42 ; 'B'
000000000000154b         db  0x43 ; 'C'
000000000000154c         db  0x5f ; '_'
000000000000154d         db  0x32 ; '2'
000000000000154e         db  0x2e ; '.'
000000000000154f         db  0x36 ; '6'
0000000000001550         db  0x00 ; '.'
0000000000001551         db  0x47 ; 'G'
0000000000001552         db  0x4c ; 'L'
0000000000001553         db  0x49 ; 'I'
0000000000001554         db  0x42 ; 'B'
0000000000001555         db  0x43 ; 'C'
0000000000001556         db  0x5f ; '_'
0000000000001557         db  0x32 ; '2'
0000000000001558         db  0x2e ; '.'
0000000000001559         db  0x33 ; '3'
000000000000155a         db  0x2e ; '.'
000000000000155b         db  0x34 ; '4'
000000000000155c         db  0x00 ; '.'
000000000000155d         db  0x47 ; 'G'
000000000000155e         db  0x4c ; 'L'
000000000000155f         db  0x49 ; 'I'
0000000000001560         db  0x42 ; 'B'
0000000000001561         db  0x43 ; 'C'
0000000000001562         db  0x5f ; '_'
0000000000001563         db  0x32 ; '2'
0000000000001564         db  0x2e ; '.'
0000000000001565         db  0x32 ; '2'
0000000000001566         db  0x2e ; '.'
0000000000001567         db  0x35 ; '5'
0000000000001568         db  0x00 ; '.'
0000000000001569         db  0x5f ; '_'
000000000000156a         db  0x49 ; 'I'
000000000000156b         db  0x54 ; 'T'
000000000000156c         db  0x4d ; 'M'
000000000000156d         db  0x5f ; '_'
000000000000156e         db  0x64 ; 'd'
000000000000156f         db  0x65 ; 'e'
0000000000001570         db  0x72 ; 'r'
0000000000001571         db  0x65 ; 'e'
0000000000001572         db  0x67 ; 'g'
0000000000001573         db  0x69 ; 'i'
0000000000001574         db  0x73 ; 's'
0000000000001575         db  0x74 ; 't'
0000000000001576         db  0x65 ; 'e'
0000000000001577         db  0x72 ; 'r'
0000000000001578         db  0x54 ; 'T'
0000000000001579         db  0x4d ; 'M'
000000000000157a         db  0x43 ; 'C'
000000000000157b         db  0x6c ; 'l'
000000000000157c         db  0x6f ; 'o'
000000000000157d         db  0x6e ; 'n'
000000000000157e         db  0x65 ; 'e'
000000000000157f         db  0x54 ; 'T'
0000000000001580         db  0x61 ; 'a'
0000000000001581         db  0x62 ; 'b'
0000000000001582         db  0x6c ; 'l'
0000000000001583         db  0x65 ; 'e'
0000000000001584         db  0x00 ; '.'
0000000000001585         db  0x5f ; '_'
0000000000001586         db  0x5f ; '_'
0000000000001587         db  0x67 ; 'g'
0000000000001588         db  0x6d ; 'm'
0000000000001589         db  0x6f ; 'o'
000000000000158a         db  0x6e ; 'n'
000000000000158b         db  0x5f ; '_'
000000000000158c         db  0x73 ; 's'
000000000000158d         db  0x74 ; 't'
000000000000158e         db  0x61 ; 'a'
000000000000158f         db  0x72 ; 'r'
0000000000001590         db  0x74 ; 't'
0000000000001591         db  0x5f ; '_'
0000000000001592         db  0x5f ; '_'
0000000000001593         db  0x00 ; '.'
0000000000001594         db  0x5f ; '_'
0000000000001595         db  0x49 ; 'I'
0000000000001596         db  0x54 ; 'T'
0000000000001597         db  0x4d ; 'M'
0000000000001598         db  0x5f ; '_'
0000000000001599         db  0x72 ; 'r'
000000000000159a         db  0x65 ; 'e'
000000000000159b         db  0x67 ; 'g'
000000000000159c         db  0x69 ; 'i'
000000000000159d         db  0x73 ; 's'
000000000000159e         db  0x74 ; 't'
000000000000159f         db  0x65 ; 'e'
00000000000015a0         db  0x72 ; 'r'
00000000000015a1         db  0x54 ; 'T'
00000000000015a2         db  0x4d ; 'M'
00000000000015a3         db  0x43 ; 'C'
00000000000015a4         db  0x6c ; 'l'
00000000000015a5         db  0x6f ; 'o'
00000000000015a6         db  0x6e ; 'n'
00000000000015a7         db  0x65 ; 'e'
00000000000015a8         db  0x54 ; 'T'
00000000000015a9         db  0x61 ; 'a'
00000000000015aa         db  0x62 ; 'b'
00000000000015ab         db  0x6c ; 'l'
00000000000015ac         db  0x65 ; 'e'
00000000000015ad         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0x15ae; 0x16ca[ (284 bytes)
        ; File offset : [5550; 5834[ (284 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

00000000000015ae         db  0x00 ; '.'
00000000000015af         db  0x00 ; '.'
00000000000015b0         db  0x02 ; '.'
00000000000015b1         db  0x00 ; '.'
00000000000015b2         db  0x02 ; '.'
00000000000015b3         db  0x00 ; '.'
00000000000015b4         db  0x03 ; '.'
00000000000015b5         db  0x00 ; '.'
00000000000015b6         db  0x02 ; '.'
00000000000015b7         db  0x00 ; '.'
00000000000015b8         db  0x02 ; '.'
00000000000015b9         db  0x00 ; '.'
00000000000015ba         db  0x04 ; '.'
00000000000015bb         db  0x00 ; '.'
00000000000015bc         db  0x02 ; '.'
00000000000015bd         db  0x00 ; '.'
00000000000015be         db  0x02 ; '.'
00000000000015bf         db  0x00 ; '.'
00000000000015c0         db  0x02 ; '.'
00000000000015c1         db  0x00 ; '.'
00000000000015c2         db  0x02 ; '.'
00000000000015c3         db  0x00 ; '.'
00000000000015c4         db  0x00 ; '.'
00000000000015c5         db  0x00 ; '.'
00000000000015c6         db  0x02 ; '.'
00000000000015c7         db  0x00 ; '.'
00000000000015c8         db  0x02 ; '.'
00000000000015c9         db  0x00 ; '.'
00000000000015ca         db  0x02 ; '.'
00000000000015cb         db  0x00 ; '.'
00000000000015cc         db  0x05 ; '.'
00000000000015cd         db  0x00 ; '.'
00000000000015ce         db  0x02 ; '.'
00000000000015cf         db  0x00 ; '.'
00000000000015d0         db  0x05 ; '.'
00000000000015d1         db  0x00 ; '.'
00000000000015d2         db  0x02 ; '.'
00000000000015d3         db  0x00 ; '.'
00000000000015d4         db  0x02 ; '.'
00000000000015d5         db  0x00 ; '.'
00000000000015d6         db  0x02 ; '.'
00000000000015d7         db  0x00 ; '.'
00000000000015d8         db  0x06 ; '.'
00000000000015d9         db  0x00 ; '.'
00000000000015da         db  0x02 ; '.'
00000000000015db         db  0x00 ; '.'
00000000000015dc         db  0x02 ; '.'
00000000000015dd         db  0x00 ; '.'
00000000000015de         db  0x02 ; '.'
00000000000015df         db  0x00 ; '.'
00000000000015e0         db  0x02 ; '.'
00000000000015e1         db  0x00 ; '.'
00000000000015e2         db  0x02 ; '.'
00000000000015e3         db  0x00 ; '.'
00000000000015e4         db  0x07 ; '.'
00000000000015e5         db  0x00 ; '.'
00000000000015e6         db  0x02 ; '.'
00000000000015e7         db  0x00 ; '.'
00000000000015e8         db  0x02 ; '.'
00000000000015e9         db  0x00 ; '.'
00000000000015ea         db  0x02 ; '.'
00000000000015eb         db  0x00 ; '.'
00000000000015ec         db  0x02 ; '.'
00000000000015ed         db  0x00 ; '.'
00000000000015ee         db  0x02 ; '.'
00000000000015ef         db  0x00 ; '.'
00000000000015f0         db  0x02 ; '.'
00000000000015f1         db  0x00 ; '.'
00000000000015f2         db  0x02 ; '.'
00000000000015f3         db  0x00 ; '.'
00000000000015f4         db  0x02 ; '.'
00000000000015f5         db  0x00 ; '.'
00000000000015f6         db  0x02 ; '.'
00000000000015f7         db  0x00 ; '.'
00000000000015f8         db  0x05 ; '.'
00000000000015f9         db  0x00 ; '.'
00000000000015fa         db  0x02 ; '.'
00000000000015fb         db  0x00 ; '.'
00000000000015fc         db  0x05 ; '.'
00000000000015fd         db  0x00 ; '.'
00000000000015fe         db  0x02 ; '.'
00000000000015ff         db  0x00 ; '.'
0000000000001600         db  0x02 ; '.'
0000000000001601         db  0x00 ; '.'
0000000000001602         db  0x02 ; '.'
0000000000001603         db  0x00 ; '.'
0000000000001604         db  0x02 ; '.'
0000000000001605         db  0x00 ; '.'
0000000000001606         db  0x05 ; '.'
0000000000001607         db  0x00 ; '.'
0000000000001608         db  0x02 ; '.'
0000000000001609         db  0x00 ; '.'
000000000000160a         db  0x02 ; '.'
000000000000160b         db  0x00 ; '.'
000000000000160c         db  0x02 ; '.'
000000000000160d         db  0x00 ; '.'
000000000000160e         db  0x02 ; '.'
000000000000160f         db  0x00 ; '.'
0000000000001610         db  0x02 ; '.'
0000000000001611         db  0x00 ; '.'
0000000000001612         db  0x02 ; '.'
0000000000001613         db  0x00 ; '.'
0000000000001614         db  0x02 ; '.'
0000000000001615         db  0x00 ; '.'
0000000000001616         db  0x02 ; '.'
0000000000001617         db  0x00 ; '.'
0000000000001618         db  0x02 ; '.'
0000000000001619         db  0x00 ; '.'
000000000000161a         db  0x02 ; '.'
000000000000161b         db  0x00 ; '.'
000000000000161c         db  0x02 ; '.'
000000000000161d         db  0x00 ; '.'
000000000000161e         db  0x02 ; '.'
000000000000161f         db  0x00 ; '.'
0000000000001620         db  0x02 ; '.'
0000000000001621         db  0x00 ; '.'
0000000000001622         db  0x02 ; '.'
0000000000001623         db  0x00 ; '.'
0000000000001624         db  0x02 ; '.'
0000000000001625         db  0x00 ; '.'
0000000000001626         db  0x02 ; '.'
0000000000001627         db  0x00 ; '.'
0000000000001628         db  0x02 ; '.'
0000000000001629         db  0x00 ; '.'
000000000000162a         db  0x02 ; '.'
000000000000162b         db  0x00 ; '.'
000000000000162c         db  0x08 ; '.'
000000000000162d         db  0x00 ; '.'
000000000000162e         db  0x02 ; '.'
000000000000162f         db  0x00 ; '.'
0000000000001630         db  0x02 ; '.'
0000000000001631         db  0x00 ; '.'
0000000000001632         db  0x02 ; '.'
0000000000001633         db  0x00 ; '.'
0000000000001634         db  0x02 ; '.'
0000000000001635         db  0x00 ; '.'
0000000000001636         db  0x02 ; '.'
0000000000001637         db  0x00 ; '.'
0000000000001638         db  0x02 ; '.'
0000000000001639         db  0x00 ; '.'
000000000000163a         db  0x02 ; '.'
000000000000163b         db  0x00 ; '.'
000000000000163c         db  0x02 ; '.'
000000000000163d         db  0x00 ; '.'
000000000000163e         db  0x02 ; '.'
000000000000163f         db  0x00 ; '.'
0000000000001640         db  0x02 ; '.'
0000000000001641         db  0x00 ; '.'
0000000000001642         db  0x02 ; '.'
0000000000001643         db  0x00 ; '.'
0000000000001644         db  0x02 ; '.'
0000000000001645         db  0x00 ; '.'
0000000000001646         db  0x00 ; '.'
0000000000001647         db  0x00 ; '.'
0000000000001648         db  0x02 ; '.'
0000000000001649         db  0x00 ; '.'
000000000000164a         db  0x09 ; '.'
000000000000164b         db  0x00 ; '.'
000000000000164c         db  0x02 ; '.'
000000000000164d         db  0x00 ; '.'
000000000000164e         db  0x02 ; '.'
000000000000164f         db  0x00 ; '.'
0000000000001650         db  0x02 ; '.'
0000000000001651         db  0x00 ; '.'
0000000000001652         db  0x02 ; '.'
0000000000001653         db  0x00 ; '.'
0000000000001654         db  0x02 ; '.'
0000000000001655         db  0x00 ; '.'
0000000000001656         db  0x02 ; '.'
0000000000001657         db  0x00 ; '.'
0000000000001658         db  0x02 ; '.'
0000000000001659         db  0x00 ; '.'
000000000000165a         db  0x02 ; '.'
000000000000165b         db  0x00 ; '.'
000000000000165c         db  0x02 ; '.'
000000000000165d         db  0x00 ; '.'
000000000000165e         db  0x02 ; '.'
000000000000165f         db  0x00 ; '.'
0000000000001660         db  0x02 ; '.'
0000000000001661         db  0x00 ; '.'
0000000000001662         db  0x02 ; '.'
0000000000001663         db  0x00 ; '.'
0000000000001664         db  0x02 ; '.'
0000000000001665         db  0x00 ; '.'
0000000000001666         db  0x02 ; '.'
0000000000001667         db  0x00 ; '.'
0000000000001668         db  0x02 ; '.'
0000000000001669         db  0x00 ; '.'
000000000000166a         db  0x02 ; '.'
000000000000166b         db  0x00 ; '.'
000000000000166c         db  0x02 ; '.'
000000000000166d         db  0x00 ; '.'
000000000000166e         db  0x02 ; '.'
000000000000166f         db  0x00 ; '.'
0000000000001670         db  0x02 ; '.'
0000000000001671         db  0x00 ; '.'
0000000000001672         db  0x05 ; '.'
0000000000001673         db  0x00 ; '.'
0000000000001674         db  0x02 ; '.'
0000000000001675         db  0x00 ; '.'
0000000000001676         db  0x03 ; '.'
0000000000001677         db  0x00 ; '.'
0000000000001678         db  0x02 ; '.'
0000000000001679         db  0x00 ; '.'
000000000000167a         db  0x02 ; '.'
000000000000167b         db  0x00 ; '.'
000000000000167c         db  0x02 ; '.'
000000000000167d         db  0x00 ; '.'
000000000000167e         db  0x02 ; '.'
000000000000167f         db  0x00 ; '.'
0000000000001680         db  0x02 ; '.'
0000000000001681         db  0x00 ; '.'
0000000000001682         db  0x02 ; '.'
0000000000001683         db  0x00 ; '.'
0000000000001684         db  0x0a ; '.'
0000000000001685         db  0x00 ; '.'
0000000000001686         db  0x02 ; '.'
0000000000001687         db  0x00 ; '.'
0000000000001688         db  0x02 ; '.'
0000000000001689         db  0x00 ; '.'
000000000000168a         db  0x02 ; '.'
000000000000168b         db  0x00 ; '.'
000000000000168c         db  0x02 ; '.'
000000000000168d         db  0x00 ; '.'
000000000000168e         db  0x02 ; '.'
000000000000168f         db  0x00 ; '.'
0000000000001690         db  0x05 ; '.'
0000000000001691         db  0x00 ; '.'
0000000000001692         db  0x04 ; '.'
0000000000001693         db  0x00 ; '.'
0000000000001694         db  0x02 ; '.'
0000000000001695         db  0x00 ; '.'
0000000000001696         db  0x02 ; '.'
0000000000001697         db  0x00 ; '.'
0000000000001698         db  0x02 ; '.'
0000000000001699         db  0x00 ; '.'
000000000000169a         db  0x05 ; '.'
000000000000169b         db  0x00 ; '.'
000000000000169c         db  0x02 ; '.'
000000000000169d         db  0x00 ; '.'
000000000000169e         db  0x02 ; '.'
000000000000169f         db  0x00 ; '.'
00000000000016a0         db  0x02 ; '.'
00000000000016a1         db  0x00 ; '.'
00000000000016a2         db  0x02 ; '.'
00000000000016a3         db  0x00 ; '.'
00000000000016a4         db  0x03 ; '.'
00000000000016a5         db  0x00 ; '.'
00000000000016a6         db  0x00 ; '.'
00000000000016a7         db  0x00 ; '.'
00000000000016a8         db  0x02 ; '.'
00000000000016a9         db  0x00 ; '.'
00000000000016aa         db  0x05 ; '.'
00000000000016ab         db  0x00 ; '.'
00000000000016ac         db  0x02 ; '.'
00000000000016ad         db  0x00 ; '.'
00000000000016ae         db  0x02 ; '.'
00000000000016af         db  0x00 ; '.'
00000000000016b0         db  0x02 ; '.'
00000000000016b1         db  0x00 ; '.'
00000000000016b2         db  0x02 ; '.'
00000000000016b3         db  0x00 ; '.'
00000000000016b4         db  0x05 ; '.'
00000000000016b5         db  0x00 ; '.'
00000000000016b6         db  0x0b ; '.'
00000000000016b7         db  0x00 ; '.'
00000000000016b8         db  0x02 ; '.'
00000000000016b9         db  0x00 ; '.'
00000000000016ba         db  0x02 ; '.'
00000000000016bb         db  0x00 ; '.'
00000000000016bc         db  0x02 ; '.'
00000000000016bd         db  0x00 ; '.'
00000000000016be         db  0x02 ; '.'
00000000000016bf         db  0x00 ; '.'
00000000000016c0         db  0x02 ; '.'
00000000000016c1         db  0x00 ; '.'
00000000000016c2         db  0x02 ; '.'
00000000000016c3         db  0x00 ; '.'
00000000000016c4         db  0x02 ; '.'
00000000000016c5         db  0x00 ; '.'
00000000000016c6         db  0x02 ; '.'
00000000000016c7         db  0x00 ; '.'
00000000000016c8         db  0x02 ; '.'
00000000000016c9         db  0x00 ; '.'
00000000000016ca         db  0x00 ; '.'
00000000000016cb         db  0x00 ; '.'
00000000000016cc         db  0x00 ; '.'
00000000000016cd         db  0x00 ; '.'
00000000000016ce         db  0x00 ; '.'
00000000000016cf         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0x16d0; 0x1780[ (176 bytes)
        ; File offset : [5840; 6016[ (176 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

00000000000016d0         db  0x01 ; '.'
00000000000016d1         db  0x00 ; '.'
00000000000016d2         db  0x0a ; '.'
00000000000016d3         db  0x00 ; '.'
00000000000016d4         db  0x01 ; '.'
00000000000016d5         db  0x00 ; '.'
00000000000016d6         db  0x00 ; '.'
00000000000016d7         db  0x00 ; '.'
00000000000016d8         db  0x10 ; '.'
00000000000016d9         db  0x00 ; '.'
00000000000016da         db  0x00 ; '.'
00000000000016db         db  0x00 ; '.'
00000000000016dc         db  0x00 ; '.'
00000000000016dd         db  0x00 ; '.'
00000000000016de         db  0x00 ; '.'
00000000000016df         db  0x00 ; '.'
00000000000016e0         db  0x13 ; '.'
00000000000016e1         db  0x69 ; 'i'
00000000000016e2         db  0x69 ; 'i'
00000000000016e3         db  0x0d ; '.'
00000000000016e4         db  0x00 ; '.'
00000000000016e5         db  0x00 ; '.'
00000000000016e6         db  0x0b ; '.'
00000000000016e7         db  0x00 ; '.'
00000000000016e8         db  0xcd ; '.'
00000000000016e9         db  0x04 ; '.'
00000000000016ea         db  0x00 ; '.'
00000000000016eb         db  0x00 ; '.'
00000000000016ec         db  0x10 ; '.'
00000000000016ed         db  0x00 ; '.'
00000000000016ee         db  0x00 ; '.'
00000000000016ef         db  0x00 ; '.'
00000000000016f0         db  0x85 ; '.'
00000000000016f1         db  0x91 ; '.'
00000000000016f2         db  0x96 ; '.'
00000000000016f3         db  0x06 ; '.'
00000000000016f4         db  0x00 ; '.'
00000000000016f5         db  0x00 ; '.'
00000000000016f6         db  0x0a ; '.'
00000000000016f7         db  0x00 ; '.'
00000000000016f8         db  0xd7 ; '.'
00000000000016f9         db  0x04 ; '.'
00000000000016fa         db  0x00 ; '.'
00000000000016fb         db  0x00 ; '.'
00000000000016fc         db  0x10 ; '.'
00000000000016fd         db  0x00 ; '.'
00000000000016fe         db  0x00 ; '.'
00000000000016ff         db  0x00 ; '.'
0000000000001700         db  0x94 ; '.'
0000000000001701         db  0x91 ; '.'
0000000000001702         db  0x96 ; '.'
0000000000001703         db  0x06 ; '.'
0000000000001704         db  0x00 ; '.'
0000000000001705         db  0x00 ; '.'
0000000000001706         db  0x09 ; '.'
0000000000001707         db  0x00 ; '.'
0000000000001708         db  0xe2 ; '.'
0000000000001709         db  0x04 ; '.'
000000000000170a         db  0x00 ; '.'
000000000000170b         db  0x00 ; '.'
000000000000170c         db  0x10 ; '.'
000000000000170d         db  0x00 ; '.'
000000000000170e         db  0x00 ; '.'
000000000000170f         db  0x00 ; '.'
0000000000001710         db  0x90 ; '.'
0000000000001711         db  0x91 ; '.'
0000000000001712         db  0x96 ; '.'
0000000000001713         db  0x06 ; '.'
0000000000001714         db  0x00 ; '.'
0000000000001715         db  0x00 ; '.'
0000000000001716         db  0x08 ; '.'
0000000000001717         db  0x00 ; '.'
0000000000001718         db  0xed ; '.'
0000000000001719         db  0x04 ; '.'
000000000000171a         db  0x00 ; '.'
000000000000171b         db  0x00 ; '.'
000000000000171c         db  0x10 ; '.'
000000000000171d         db  0x00 ; '.'
000000000000171e         db  0x00 ; '.'
000000000000171f         db  0x00 ; '.'
0000000000001720         db  0x17 ; '.'
0000000000001721         db  0x69 ; 'i'
0000000000001722         db  0x69 ; 'i'
0000000000001723         db  0x0d ; '.'
0000000000001724         db  0x00 ; '.'
0000000000001725         db  0x00 ; '.'
0000000000001726         db  0x07 ; '.'
0000000000001727         db  0x00 ; '.'
0000000000001728         db  0xf8 ; '.'
0000000000001729         db  0x04 ; '.'
000000000000172a         db  0x00 ; '.'
000000000000172b         db  0x00 ; '.'
000000000000172c         db  0x10 ; '.'
000000000000172d         db  0x00 ; '.'
000000000000172e         db  0x00 ; '.'
000000000000172f         db  0x00 ; '.'
0000000000001730         db  0x97 ; '.'
0000000000001731         db  0x91 ; '.'
0000000000001732         db  0x96 ; '.'
0000000000001733         db  0x06 ; '.'
0000000000001734         db  0x00 ; '.'
0000000000001735         db  0x00 ; '.'
0000000000001736         db  0x06 ; '.'
0000000000001737         db  0x00 ; '.'
0000000000001738         db  0x02 ; '.'
0000000000001739         db  0x05 ; '.'
000000000000173a         db  0x00 ; '.'
000000000000173b         db  0x00 ; '.'
000000000000173c         db  0x10 ; '.'
000000000000173d         db  0x00 ; '.'
000000000000173e         db  0x00 ; '.'
000000000000173f         db  0x00 ; '.'
0000000000001740         db  0x14 ; '.'
0000000000001741         db  0x69 ; 'i'
0000000000001742         db  0x69 ; 'i'
0000000000001743         db  0x0d ; '.'
0000000000001744         db  0x00 ; '.'
0000000000001745         db  0x00 ; '.'
0000000000001746         db  0x05 ; '.'
0000000000001747         db  0x00 ; '.'
0000000000001748         db  0x0d ; '.'
0000000000001749         db  0x05 ; '.'
000000000000174a         db  0x00 ; '.'
000000000000174b         db  0x00 ; '.'
000000000000174c         db  0x10 ; '.'
000000000000174d         db  0x00 ; '.'
000000000000174e         db  0x00 ; '.'
000000000000174f         db  0x00 ; '.'
0000000000001750         db  0x16 ; '.'
0000000000001751         db  0x69 ; 'i'
0000000000001752         db  0x69 ; 'i'
0000000000001753         db  0x0d ; '.'
0000000000001754         db  0x00 ; '.'
0000000000001755         db  0x00 ; '.'
0000000000001756         db  0x04 ; '.'
0000000000001757         db  0x00 ; '.'
0000000000001758         db  0x17 ; '.'
0000000000001759         db  0x05 ; '.'
000000000000175a         db  0x00 ; '.'
000000000000175b         db  0x00 ; '.'
000000000000175c         db  0x10 ; '.'
000000000000175d         db  0x00 ; '.'
000000000000175e         db  0x00 ; '.'
000000000000175f         db  0x00 ; '.'
0000000000001760         db  0x74 ; 't'
0000000000001761         db  0x19 ; '.'
0000000000001762         db  0x69 ; 'i'
0000000000001763         db  0x09 ; '.'
0000000000001764         db  0x00 ; '.'
0000000000001765         db  0x00 ; '.'
0000000000001766         db  0x03 ; '.'
0000000000001767         db  0x00 ; '.'
0000000000001768         db  0x21 ; '!'
0000000000001769         db  0x05 ; '.'
000000000000176a         db  0x00 ; '.'
000000000000176b         db  0x00 ; '.'
000000000000176c         db  0x10 ; '.'
000000000000176d         db  0x00 ; '.'
000000000000176e         db  0x00 ; '.'
000000000000176f         db  0x00 ; '.'
0000000000001770         db  0x75 ; 'u'
0000000000001771         db  0x1a ; '.'
0000000000001772         db  0x69 ; 'i'
0000000000001773         db  0x09 ; '.'
0000000000001774         db  0x00 ; '.'
0000000000001775         db  0x00 ; '.'
0000000000001776         db  0x02 ; '.'
0000000000001777         db  0x00 ; '.'
0000000000001778         db  0x2d ; '-'
0000000000001779         db  0x05 ; '.'
000000000000177a         db  0x00 ; '.'
000000000000177b         db  0x00 ; '.'
000000000000177c         db  0x00 ; '.'
000000000000177d         db  0x00 ; '.'
000000000000177e         db  0x00 ; '.'
000000000000177f         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0x1780; 0x1cf0[ (1392 bytes)
        ; File offset : [6016; 7408[ (1392 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000001780         db  0xb0 ; '.'
0000000000001781         db  0xc6 ; '.'
0000000000001782         db  0x21 ; '!'
0000000000001783         db  0x00 ; '.'
0000000000001784         db  0x00 ; '.'
0000000000001785         db  0x00 ; '.'
0000000000001786         db  0x00 ; '.'
0000000000001787         db  0x00 ; '.'
0000000000001788         db  0x08 ; '.'
0000000000001789         db  0x00 ; '.'
000000000000178a         db  0x00 ; '.'
000000000000178b         db  0x00 ; '.'
000000000000178c         db  0x00 ; '.'
000000000000178d         db  0x00 ; '.'
000000000000178e         db  0x00 ; '.'
000000000000178f         db  0x00 ; '.'
0000000000001790         db  0x30 ; '0'
0000000000001791         db  0x3f ; '?'
0000000000001792         db  0x00 ; '.'
0000000000001793         db  0x00 ; '.'
0000000000001794         db  0x00 ; '.'
0000000000001795         db  0x00 ; '.'
0000000000001796         db  0x00 ; '.'
0000000000001797         db  0x00 ; '.'
0000000000001798         db  0xb8 ; '.'
0000000000001799         db  0xc6 ; '.'
000000000000179a         db  0x21 ; '!'
000000000000179b         db  0x00 ; '.'
000000000000179c         db  0x00 ; '.'
000000000000179d         db  0x00 ; '.'
000000000000179e         db  0x00 ; '.'
000000000000179f         db  0x00 ; '.'
00000000000017a0         db  0x08 ; '.'
00000000000017a1         db  0x00 ; '.'
00000000000017a2         db  0x00 ; '.'
00000000000017a3         db  0x00 ; '.'
00000000000017a4         db  0x00 ; '.'
00000000000017a5         db  0x00 ; '.'
00000000000017a6         db  0x00 ; '.'
00000000000017a7         db  0x00 ; '.'
00000000000017a8         db  0xf0 ; '.'
00000000000017a9         db  0x3e ; '>'
00000000000017aa         db  0x00 ; '.'
00000000000017ab         db  0x00 ; '.'
00000000000017ac         db  0x00 ; '.'
00000000000017ad         db  0x00 ; '.'
00000000000017ae         db  0x00 ; '.'
00000000000017af         db  0x00 ; '.'
00000000000017b0         db  0xc0 ; '.'
00000000000017b1         db  0xc6 ; '.'
00000000000017b2         db  0x21 ; '!'
00000000000017b3         db  0x00 ; '.'
00000000000017b4         db  0x00 ; '.'
00000000000017b5         db  0x00 ; '.'
00000000000017b6         db  0x00 ; '.'
00000000000017b7         db  0x00 ; '.'
00000000000017b8         db  0x08 ; '.'
00000000000017b9         db  0x00 ; '.'
00000000000017ba         db  0x00 ; '.'
00000000000017bb         db  0x00 ; '.'
00000000000017bc         db  0x00 ; '.'
00000000000017bd         db  0x00 ; '.'
00000000000017be         db  0x00 ; '.'
00000000000017bf         db  0x00 ; '.'
00000000000017c0         db  0x04 ; '.'
00000000000017c1         db  0x66 ; 'f'
00000000000017c2         db  0x01 ; '.'
00000000000017c3         db  0x00 ; '.'
00000000000017c4         db  0x00 ; '.'
00000000000017c5         db  0x00 ; '.'
00000000000017c6         db  0x00 ; '.'
00000000000017c7         db  0x00 ; '.'
00000000000017c8         db  0xe0 ; '.'
00000000000017c9         db  0xc6 ; '.'
00000000000017ca         db  0x21 ; '!'
00000000000017cb         db  0x00 ; '.'
00000000000017cc         db  0x00 ; '.'
00000000000017cd         db  0x00 ; '.'
00000000000017ce         db  0x00 ; '.'
00000000000017cf         db  0x00 ; '.'
00000000000017d0         db  0x08 ; '.'
00000000000017d1         db  0x00 ; '.'
00000000000017d2         db  0x00 ; '.'
00000000000017d3         db  0x00 ; '.'
00000000000017d4         db  0x00 ; '.'
00000000000017d5         db  0x00 ; '.'
00000000000017d6         db  0x00 ; '.'
00000000000017d7         db  0x00 ; '.'
00000000000017d8         db  0x0b ; '.'
00000000000017d9         db  0x66 ; 'f'
00000000000017da         db  0x01 ; '.'
00000000000017db         db  0x00 ; '.'
00000000000017dc         db  0x00 ; '.'
00000000000017dd         db  0x00 ; '.'
00000000000017de         db  0x00 ; '.'
00000000000017df         db  0x00 ; '.'
00000000000017e0         db  0x00 ; '.'
00000000000017e1         db  0xc7 ; '.'
00000000000017e2         db  0x21 ; '!'
00000000000017e3         db  0x00 ; '.'
00000000000017e4         db  0x00 ; '.'
00000000000017e5         db  0x00 ; '.'
00000000000017e6         db  0x00 ; '.'
00000000000017e7         db  0x00 ; '.'
00000000000017e8         db  0x08 ; '.'
00000000000017e9         db  0x00 ; '.'
00000000000017ea         db  0x00 ; '.'
00000000000017eb         db  0x00 ; '.'
00000000000017ec         db  0x00 ; '.'
00000000000017ed         db  0x00 ; '.'
00000000000017ee         db  0x00 ; '.'
00000000000017ef         db  0x00 ; '.'
00000000000017f0         db  0x55 ; 'U'
00000000000017f1         db  0x66 ; 'f'
00000000000017f2         db  0x01 ; '.'
00000000000017f3         db  0x00 ; '.'
00000000000017f4         db  0x00 ; '.'
00000000000017f5         db  0x00 ; '.'
00000000000017f6         db  0x00 ; '.'
00000000000017f7         db  0x00 ; '.'
00000000000017f8         db  0x20 ; ' '
00000000000017f9         db  0xc7 ; '.'
00000000000017fa         db  0x21 ; '!'
00000000000017fb         db  0x00 ; '.'
00000000000017fc         db  0x00 ; '.'
00000000000017fd         db  0x00 ; '.'
00000000000017fe         db  0x00 ; '.'
00000000000017ff         db  0x00 ; '.'
0000000000001800         db  0x08 ; '.'
0000000000001801         db  0x00 ; '.'
0000000000001802         db  0x00 ; '.'
0000000000001803         db  0x00 ; '.'
0000000000001804         db  0x00 ; '.'
0000000000001805         db  0x00 ; '.'
0000000000001806         db  0x00 ; '.'
0000000000001807         db  0x00 ; '.'
0000000000001808         db  0x97 ; '.'
0000000000001809         db  0x65 ; 'e'
000000000000180a         db  0x01 ; '.'
000000000000180b         db  0x00 ; '.'
000000000000180c         db  0x00 ; '.'
000000000000180d         db  0x00 ; '.'
000000000000180e         db  0x00 ; '.'
000000000000180f         db  0x00 ; '.'
0000000000001810         db  0x40 ; '@'
0000000000001811         db  0xc7 ; '.'
0000000000001812         db  0x21 ; '!'
0000000000001813         db  0x00 ; '.'
0000000000001814         db  0x00 ; '.'
0000000000001815         db  0x00 ; '.'
0000000000001816         db  0x00 ; '.'
0000000000001817         db  0x00 ; '.'
0000000000001818         db  0x08 ; '.'
0000000000001819         db  0x00 ; '.'
000000000000181a         db  0x00 ; '.'
000000000000181b         db  0x00 ; '.'
000000000000181c         db  0x00 ; '.'
000000000000181d         db  0x00 ; '.'
000000000000181e         db  0x00 ; '.'
000000000000181f         db  0x00 ; '.'
0000000000001820         db  0x13 ; '.'
0000000000001821         db  0x66 ; 'f'
0000000000001822         db  0x01 ; '.'
0000000000001823         db  0x00 ; '.'
0000000000001824         db  0x00 ; '.'
0000000000001825         db  0x00 ; '.'
0000000000001826         db  0x00 ; '.'
0000000000001827         db  0x00 ; '.'
0000000000001828         db  0x60 ; '`'
0000000000001829         db  0xc7 ; '.'
000000000000182a         db  0x21 ; '!'
000000000000182b         db  0x00 ; '.'
000000000000182c         db  0x00 ; '.'
000000000000182d         db  0x00 ; '.'
000000000000182e         db  0x00 ; '.'
000000000000182f         db  0x00 ; '.'
0000000000001830         db  0x08 ; '.'
0000000000001831         db  0x00 ; '.'
0000000000001832         db  0x00 ; '.'
0000000000001833         db  0x00 ; '.'
0000000000001834         db  0x00 ; '.'
0000000000001835         db  0x00 ; '.'
0000000000001836         db  0x00 ; '.'
0000000000001837         db  0x00 ; '.'
0000000000001838         db  0x19 ; '.'
0000000000001839         db  0x66 ; 'f'
000000000000183a         db  0x01 ; '.'
000000000000183b         db  0x00 ; '.'
000000000000183c         db  0x00 ; '.'
000000000000183d         db  0x00 ; '.'
000000000000183e         db  0x00 ; '.'
000000000000183f         db  0x00 ; '.'
0000000000001840         db  0x80 ; '.'
0000000000001841         db  0xc7 ; '.'
0000000000001842         db  0x21 ; '!'
0000000000001843         db  0x00 ; '.'
0000000000001844         db  0x00 ; '.'
0000000000001845         db  0x00 ; '.'
0000000000001846         db  0x00 ; '.'
0000000000001847         db  0x00 ; '.'
0000000000001848         db  0x08 ; '.'
0000000000001849         db  0x00 ; '.'
000000000000184a         db  0x00 ; '.'
000000000000184b         db  0x00 ; '.'
000000000000184c         db  0x00 ; '.'
000000000000184d         db  0x00 ; '.'
000000000000184e         db  0x00 ; '.'
000000000000184f         db  0x00 ; '.'
0000000000001850         db  0x1e ; '.'
0000000000001851         db  0x66 ; 'f'
0000000000001852         db  0x01 ; '.'
0000000000001853         db  0x00 ; '.'
0000000000001854         db  0x00 ; '.'
0000000000001855         db  0x00 ; '.'
0000000000001856         db  0x00 ; '.'
0000000000001857         db  0x00 ; '.'
0000000000001858         db  0xa0 ; '.'
0000000000001859         db  0xc7 ; '.'
000000000000185a         db  0x21 ; '!'
000000000000185b         db  0x00 ; '.'
000000000000185c         db  0x00 ; '.'
000000000000185d         db  0x00 ; '.'
000000000000185e         db  0x00 ; '.'
000000000000185f         db  0x00 ; '.'
0000000000001860         db  0x08 ; '.'
0000000000001861         db  0x00 ; '.'
0000000000001862         db  0x00 ; '.'
0000000000001863         db  0x00 ; '.'
0000000000001864         db  0x00 ; '.'
0000000000001865         db  0x00 ; '.'
0000000000001866         db  0x00 ; '.'
0000000000001867         db  0x00 ; '.'
0000000000001868         db  0x32 ; '2'
0000000000001869         db  0x66 ; 'f'
000000000000186a         db  0x01 ; '.'
000000000000186b         db  0x00 ; '.'
000000000000186c         db  0x00 ; '.'
000000000000186d         db  0x00 ; '.'
000000000000186e         db  0x00 ; '.'
000000000000186f         db  0x00 ; '.'
0000000000001870         db  0xc0 ; '.'
0000000000001871         db  0xc7 ; '.'
0000000000001872         db  0x21 ; '!'
0000000000001873         db  0x00 ; '.'
0000000000001874         db  0x00 ; '.'
0000000000001875         db  0x00 ; '.'
0000000000001876         db  0x00 ; '.'
0000000000001877         db  0x00 ; '.'
0000000000001878         db  0x08 ; '.'
0000000000001879         db  0x00 ; '.'
000000000000187a         db  0x00 ; '.'
000000000000187b         db  0x00 ; '.'
000000000000187c         db  0x00 ; '.'
000000000000187d         db  0x00 ; '.'
000000000000187e         db  0x00 ; '.'
000000000000187f         db  0x00 ; '.'
0000000000001880         db  0x38 ; '8'
0000000000001881         db  0x66 ; 'f'
0000000000001882         db  0x01 ; '.'
0000000000001883         db  0x00 ; '.'
0000000000001884         db  0x00 ; '.'
0000000000001885         db  0x00 ; '.'
0000000000001886         db  0x00 ; '.'
0000000000001887         db  0x00 ; '.'
0000000000001888         db  0xe0 ; '.'
0000000000001889         db  0xc7 ; '.'
000000000000188a         db  0x21 ; '!'
000000000000188b         db  0x00 ; '.'
000000000000188c         db  0x00 ; '.'
000000000000188d         db  0x00 ; '.'
000000000000188e         db  0x00 ; '.'
000000000000188f         db  0x00 ; '.'
0000000000001890         db  0x08 ; '.'
0000000000001891         db  0x00 ; '.'
0000000000001892         db  0x00 ; '.'
0000000000001893         db  0x00 ; '.'
0000000000001894         db  0x00 ; '.'
0000000000001895         db  0x00 ; '.'
0000000000001896         db  0x00 ; '.'
0000000000001897         db  0x00 ; '.'
0000000000001898         db  0x4c ; 'L'
0000000000001899         db  0x66 ; 'f'
000000000000189a         db  0x01 ; '.'
000000000000189b         db  0x00 ; '.'
000000000000189c         db  0x00 ; '.'
000000000000189d         db  0x00 ; '.'
000000000000189e         db  0x00 ; '.'
000000000000189f         db  0x00 ; '.'
00000000000018a0         db  0x00 ; '.'
00000000000018a1         db  0xc8 ; '.'
00000000000018a2         db  0x21 ; '!'
00000000000018a3         db  0x00 ; '.'
00000000000018a4         db  0x00 ; '.'
00000000000018a5         db  0x00 ; '.'
00000000000018a6         db  0x00 ; '.'
00000000000018a7         db  0x00 ; '.'
00000000000018a8         db  0x08 ; '.'
00000000000018a9         db  0x00 ; '.'
00000000000018aa         db  0x00 ; '.'
00000000000018ab         db  0x00 ; '.'
00000000000018ac         db  0x00 ; '.'
00000000000018ad         db  0x00 ; '.'
00000000000018ae         db  0x00 ; '.'
00000000000018af         db  0x00 ; '.'
00000000000018b0         db  0x36 ; '6'
00000000000018b1         db  0x64 ; 'd'
00000000000018b2         db  0x01 ; '.'
00000000000018b3         db  0x00 ; '.'
00000000000018b4         db  0x00 ; '.'
00000000000018b5         db  0x00 ; '.'
00000000000018b6         db  0x00 ; '.'
00000000000018b7         db  0x00 ; '.'
00000000000018b8         db  0x20 ; ' '
00000000000018b9         db  0xc8 ; '.'
00000000000018ba         db  0x21 ; '!'
00000000000018bb         db  0x00 ; '.'
00000000000018bc         db  0x00 ; '.'
00000000000018bd         db  0x00 ; '.'
00000000000018be         db  0x00 ; '.'
00000000000018bf         db  0x00 ; '.'
00000000000018c0         db  0x08 ; '.'
00000000000018c1         db  0x00 ; '.'
00000000000018c2         db  0x00 ; '.'
00000000000018c3         db  0x00 ; '.'
00000000000018c4         db  0x00 ; '.'
00000000000018c5         db  0x00 ; '.'
00000000000018c6         db  0x00 ; '.'
00000000000018c7         db  0x00 ; '.'
00000000000018c8         db  0x5d ; ']'
00000000000018c9         db  0x66 ; 'f'
00000000000018ca         db  0x01 ; '.'
00000000000018cb         db  0x00 ; '.'
00000000000018cc         db  0x00 ; '.'
00000000000018cd         db  0x00 ; '.'
00000000000018ce         db  0x00 ; '.'
00000000000018cf         db  0x00 ; '.'
00000000000018d0         db  0x40 ; '@'
00000000000018d1         db  0xc8 ; '.'
00000000000018d2         db  0x21 ; '!'
00000000000018d3         db  0x00 ; '.'
00000000000018d4         db  0x00 ; '.'
00000000000018d5         db  0x00 ; '.'
00000000000018d6         db  0x00 ; '.'
00000000000018d7         db  0x00 ; '.'
00000000000018d8         db  0x08 ; '.'
00000000000018d9         db  0x00 ; '.'
00000000000018da         db  0x00 ; '.'
00000000000018db         db  0x00 ; '.'
00000000000018dc         db  0x00 ; '.'
00000000000018dd         db  0x00 ; '.'
00000000000018de         db  0x00 ; '.'
00000000000018df         db  0x00 ; '.'
00000000000018e0         db  0x6b ; 'k'
00000000000018e1         db  0x66 ; 'f'
00000000000018e2         db  0x01 ; '.'
00000000000018e3         db  0x00 ; '.'
00000000000018e4         db  0x00 ; '.'
00000000000018e5         db  0x00 ; '.'
00000000000018e6         db  0x00 ; '.'
00000000000018e7         db  0x00 ; '.'
00000000000018e8         db  0x60 ; '`'
00000000000018e9         db  0xc8 ; '.'
00000000000018ea         db  0x21 ; '!'
00000000000018eb         db  0x00 ; '.'
00000000000018ec         db  0x00 ; '.'
00000000000018ed         db  0x00 ; '.'
00000000000018ee         db  0x00 ; '.'
00000000000018ef         db  0x00 ; '.'
00000000000018f0         db  0x08 ; '.'
00000000000018f1         db  0x00 ; '.'
00000000000018f2         db  0x00 ; '.'
00000000000018f3         db  0x00 ; '.'
00000000000018f4         db  0x00 ; '.'
00000000000018f5         db  0x00 ; '.'
00000000000018f6         db  0x00 ; '.'
00000000000018f7         db  0x00 ; '.'
00000000000018f8         db  0x21 ; '!'
00000000000018f9         db  0x66 ; 'f'
00000000000018fa         db  0x01 ; '.'
00000000000018fb         db  0x00 ; '.'
00000000000018fc         db  0x00 ; '.'
00000000000018fd         db  0x00 ; '.'
00000000000018fe         db  0x00 ; '.'
00000000000018ff         db  0x00 ; '.'
0000000000001900         db  0x80 ; '.'
0000000000001901         db  0xc8 ; '.'
0000000000001902         db  0x21 ; '!'
0000000000001903         db  0x00 ; '.'
0000000000001904         db  0x00 ; '.'
0000000000001905         db  0x00 ; '.'
0000000000001906         db  0x00 ; '.'
0000000000001907         db  0x00 ; '.'
0000000000001908         db  0x08 ; '.'
0000000000001909         db  0x00 ; '.'
000000000000190a         db  0x00 ; '.'
000000000000190b         db  0x00 ; '.'
000000000000190c         db  0x00 ; '.'
000000000000190d         db  0x00 ; '.'
000000000000190e         db  0x00 ; '.'
000000000000190f         db  0x00 ; '.'
0000000000001910         db  0x72 ; 'r'
0000000000001911         db  0x66 ; 'f'
0000000000001912         db  0x01 ; '.'
0000000000001913         db  0x00 ; '.'
0000000000001914         db  0x00 ; '.'
0000000000001915         db  0x00 ; '.'
0000000000001916         db  0x00 ; '.'
0000000000001917         db  0x00 ; '.'
0000000000001918         db  0xa0 ; '.'
0000000000001919         db  0xc8 ; '.'
000000000000191a         db  0x21 ; '!'
000000000000191b         db  0x00 ; '.'
000000000000191c         db  0x00 ; '.'
000000000000191d         db  0x00 ; '.'
000000000000191e         db  0x00 ; '.'
000000000000191f         db  0x00 ; '.'
0000000000001920         db  0x08 ; '.'
0000000000001921         db  0x00 ; '.'
0000000000001922         db  0x00 ; '.'
0000000000001923         db  0x00 ; '.'
0000000000001924         db  0x00 ; '.'
0000000000001925         db  0x00 ; '.'
0000000000001926         db  0x00 ; '.'
0000000000001927         db  0x00 ; '.'
0000000000001928         db  0x7a ; 'z'
0000000000001929         db  0x66 ; 'f'
000000000000192a         db  0x01 ; '.'
000000000000192b         db  0x00 ; '.'
000000000000192c         db  0x00 ; '.'
000000000000192d         db  0x00 ; '.'
000000000000192e         db  0x00 ; '.'
000000000000192f         db  0x00 ; '.'
0000000000001930         db  0xc0 ; '.'
0000000000001931         db  0xc8 ; '.'
0000000000001932         db  0x21 ; '!'
0000000000001933         db  0x00 ; '.'
0000000000001934         db  0x00 ; '.'
0000000000001935         db  0x00 ; '.'
0000000000001936         db  0x00 ; '.'
0000000000001937         db  0x00 ; '.'
0000000000001938         db  0x08 ; '.'
0000000000001939         db  0x00 ; '.'
000000000000193a         db  0x00 ; '.'
000000000000193b         db  0x00 ; '.'
000000000000193c         db  0x00 ; '.'
000000000000193d         db  0x00 ; '.'
000000000000193e         db  0x00 ; '.'
000000000000193f         db  0x00 ; '.'
0000000000001940         db  0x7f ; '.'
0000000000001941         db  0x66 ; 'f'
0000000000001942         db  0x01 ; '.'
0000000000001943         db  0x00 ; '.'
0000000000001944         db  0x00 ; '.'
0000000000001945         db  0x00 ; '.'
0000000000001946         db  0x00 ; '.'
0000000000001947         db  0x00 ; '.'
0000000000001948         db  0x00 ; '.'
0000000000001949         db  0xc9 ; '.'
000000000000194a         db  0x21 ; '!'
000000000000194b         db  0x00 ; '.'
000000000000194c         db  0x00 ; '.'
000000000000194d         db  0x00 ; '.'
000000000000194e         db  0x00 ; '.'
000000000000194f         db  0x00 ; '.'
0000000000001950         db  0x08 ; '.'
0000000000001951         db  0x00 ; '.'
0000000000001952         db  0x00 ; '.'
0000000000001953         db  0x00 ; '.'
0000000000001954         db  0x00 ; '.'
0000000000001955         db  0x00 ; '.'
0000000000001956         db  0x00 ; '.'
0000000000001957         db  0x00 ; '.'
0000000000001958         db  0xee ; '.'
0000000000001959         db  0x80 ; '.'
000000000000195a         db  0x01 ; '.'
000000000000195b         db  0x00 ; '.'
000000000000195c         db  0x00 ; '.'
000000000000195d         db  0x00 ; '.'
000000000000195e         db  0x00 ; '.'
000000000000195f         db  0x00 ; '.'
0000000000001960         db  0x08 ; '.'
0000000000001961         db  0xc9 ; '.'
0000000000001962         db  0x21 ; '!'
0000000000001963         db  0x00 ; '.'
0000000000001964         db  0x00 ; '.'
0000000000001965         db  0x00 ; '.'
0000000000001966         db  0x00 ; '.'
0000000000001967         db  0x00 ; '.'
0000000000001968         db  0x08 ; '.'
0000000000001969         db  0x00 ; '.'
000000000000196a         db  0x00 ; '.'
000000000000196b         db  0x00 ; '.'
000000000000196c         db  0x00 ; '.'
000000000000196d         db  0x00 ; '.'
000000000000196e         db  0x00 ; '.'
000000000000196f         db  0x00 ; '.'
0000000000001970         db  0xf3 ; '.'
0000000000001971         db  0x80 ; '.'
0000000000001972         db  0x01 ; '.'
0000000000001973         db  0x00 ; '.'
0000000000001974         db  0x00 ; '.'
0000000000001975         db  0x00 ; '.'
0000000000001976         db  0x00 ; '.'
0000000000001977         db  0x00 ; '.'
0000000000001978         db  0x10 ; '.'
0000000000001979         db  0xc9 ; '.'
000000000000197a         db  0x21 ; '!'
000000000000197b         db  0x00 ; '.'
000000000000197c         db  0x00 ; '.'
000000000000197d         db  0x00 ; '.'
000000000000197e         db  0x00 ; '.'
000000000000197f         db  0x00 ; '.'
0000000000001980         db  0x08 ; '.'
0000000000001981         db  0x00 ; '.'
0000000000001982         db  0x00 ; '.'
0000000000001983         db  0x00 ; '.'
0000000000001984         db  0x00 ; '.'
0000000000001985         db  0x00 ; '.'
0000000000001986         db  0x00 ; '.'
0000000000001987         db  0x00 ; '.'
0000000000001988         db  0xf7 ; '.'
0000000000001989         db  0x80 ; '.'
000000000000198a         db  0x01 ; '.'
000000000000198b         db  0x00 ; '.'
000000000000198c         db  0x00 ; '.'
000000000000198d         db  0x00 ; '.'
000000000000198e         db  0x00 ; '.'
000000000000198f         db  0x00 ; '.'
0000000000001990         db  0x18 ; '.'
0000000000001991         db  0xc9 ; '.'
0000000000001992         db  0x21 ; '!'
0000000000001993         db  0x00 ; '.'
0000000000001994         db  0x00 ; '.'
0000000000001995         db  0x00 ; '.'
0000000000001996         db  0x00 ; '.'
0000000000001997         db  0x00 ; '.'
0000000000001998         db  0x08 ; '.'
0000000000001999         db  0x00 ; '.'
000000000000199a         db  0x00 ; '.'
000000000000199b         db  0x00 ; '.'
000000000000199c         db  0x00 ; '.'
000000000000199d         db  0x00 ; '.'
000000000000199e         db  0x00 ; '.'
000000000000199f         db  0x00 ; '.'
00000000000019a0         db  0xfe ; '.'
00000000000019a1         db  0x80 ; '.'
00000000000019a2         db  0x01 ; '.'
00000000000019a3         db  0x00 ; '.'
00000000000019a4         db  0x00 ; '.'
00000000000019a5         db  0x00 ; '.'
00000000000019a6         db  0x00 ; '.'
00000000000019a7         db  0x00 ; '.'
00000000000019a8         db  0x20 ; ' '
00000000000019a9         db  0xc9 ; '.'
00000000000019aa         db  0x21 ; '!'
00000000000019ab         db  0x00 ; '.'
00000000000019ac         db  0x00 ; '.'
00000000000019ad         db  0x00 ; '.'
00000000000019ae         db  0x00 ; '.'
00000000000019af         db  0x00 ; '.'
00000000000019b0         db  0x08 ; '.'
00000000000019b1         db  0x00 ; '.'
00000000000019b2         db  0x00 ; '.'
00000000000019b3         db  0x00 ; '.'
00000000000019b4         db  0x00 ; '.'
00000000000019b5         db  0x00 ; '.'
00000000000019b6         db  0x00 ; '.'
00000000000019b7         db  0x00 ; '.'
00000000000019b8         db  0x04 ; '.'
00000000000019b9         db  0x81 ; '.'
00000000000019ba         db  0x01 ; '.'
00000000000019bb         db  0x00 ; '.'
00000000000019bc         db  0x00 ; '.'
00000000000019bd         db  0x00 ; '.'
00000000000019be         db  0x00 ; '.'
00000000000019bf         db  0x00 ; '.'
00000000000019c0         db  0x28 ; '('
00000000000019c1         db  0xc9 ; '.'
00000000000019c2         db  0x21 ; '!'
00000000000019c3         db  0x00 ; '.'
00000000000019c4         db  0x00 ; '.'
00000000000019c5         db  0x00 ; '.'
00000000000019c6         db  0x00 ; '.'
00000000000019c7         db  0x00 ; '.'
00000000000019c8         db  0x08 ; '.'
00000000000019c9         db  0x00 ; '.'
00000000000019ca         db  0x00 ; '.'
00000000000019cb         db  0x00 ; '.'
00000000000019cc         db  0x00 ; '.'
00000000000019cd         db  0x00 ; '.'
00000000000019ce         db  0x00 ; '.'
00000000000019cf         db  0x00 ; '.'
00000000000019d0         db  0x0d ; '.'
00000000000019d1         db  0x81 ; '.'
00000000000019d2         db  0x01 ; '.'
00000000000019d3         db  0x00 ; '.'
00000000000019d4         db  0x00 ; '.'
00000000000019d5         db  0x00 ; '.'
00000000000019d6         db  0x00 ; '.'
00000000000019d7         db  0x00 ; '.'
00000000000019d8         db  0x30 ; '0'
00000000000019d9         db  0xc9 ; '.'
00000000000019da         db  0x21 ; '!'
00000000000019db         db  0x00 ; '.'
00000000000019dc         db  0x00 ; '.'
00000000000019dd         db  0x00 ; '.'
00000000000019de         db  0x00 ; '.'
00000000000019df         db  0x00 ; '.'
00000000000019e0         db  0x08 ; '.'
00000000000019e1         db  0x00 ; '.'
00000000000019e2         db  0x00 ; '.'
00000000000019e3         db  0x00 ; '.'
00000000000019e4         db  0x00 ; '.'
00000000000019e5         db  0x00 ; '.'
00000000000019e6         db  0x00 ; '.'
00000000000019e7         db  0x00 ; '.'
00000000000019e8         db  0x11 ; '.'
00000000000019e9         db  0x81 ; '.'
00000000000019ea         db  0x01 ; '.'
00000000000019eb         db  0x00 ; '.'
00000000000019ec         db  0x00 ; '.'
00000000000019ed         db  0x00 ; '.'
00000000000019ee         db  0x00 ; '.'
00000000000019ef         db  0x00 ; '.'
00000000000019f0         db  0x38 ; '8'
00000000000019f1         db  0xc9 ; '.'
00000000000019f2         db  0x21 ; '!'
00000000000019f3         db  0x00 ; '.'
00000000000019f4         db  0x00 ; '.'
00000000000019f5         db  0x00 ; '.'
00000000000019f6         db  0x00 ; '.'
00000000000019f7         db  0x00 ; '.'
00000000000019f8         db  0x08 ; '.'
00000000000019f9         db  0x00 ; '.'
00000000000019fa         db  0x00 ; '.'
00000000000019fb         db  0x00 ; '.'
00000000000019fc         db  0x00 ; '.'
00000000000019fd         db  0x00 ; '.'
00000000000019fe         db  0x00 ; '.'
00000000000019ff         db  0x00 ; '.'
0000000000001a00         db  0x5b ; '['
0000000000001a01         db  0x66 ; 'f'
0000000000001a02         db  0x01 ; '.'
0000000000001a03         db  0x00 ; '.'
0000000000001a04         db  0x00 ; '.'
0000000000001a05         db  0x00 ; '.'
0000000000001a06         db  0x00 ; '.'
0000000000001a07         db  0x00 ; '.'
0000000000001a08         db  0x60 ; '`'
0000000000001a09         db  0xc9 ; '.'
0000000000001a0a         db  0x21 ; '!'
0000000000001a0b         db  0x00 ; '.'
0000000000001a0c         db  0x00 ; '.'
0000000000001a0d         db  0x00 ; '.'
0000000000001a0e         db  0x00 ; '.'
0000000000001a0f         db  0x00 ; '.'
0000000000001a10         db  0x08 ; '.'
0000000000001a11         db  0x00 ; '.'
0000000000001a12         db  0x00 ; '.'
0000000000001a13         db  0x00 ; '.'
0000000000001a14         db  0x00 ; '.'
0000000000001a15         db  0x00 ; '.'
0000000000001a16         db  0x00 ; '.'
0000000000001a17         db  0x00 ; '.'
0000000000001a18         db  0x29 ; ')'
0000000000001a19         db  0x83 ; '.'
0000000000001a1a         db  0x01 ; '.'
0000000000001a1b         db  0x00 ; '.'
0000000000001a1c         db  0x00 ; '.'
0000000000001a1d         db  0x00 ; '.'
0000000000001a1e         db  0x00 ; '.'
0000000000001a1f         db  0x00 ; '.'
0000000000001a20         db  0x68 ; 'h'
0000000000001a21         db  0xc9 ; '.'
0000000000001a22         db  0x21 ; '!'
0000000000001a23         db  0x00 ; '.'
0000000000001a24         db  0x00 ; '.'
0000000000001a25         db  0x00 ; '.'
0000000000001a26         db  0x00 ; '.'
0000000000001a27         db  0x00 ; '.'
0000000000001a28         db  0x08 ; '.'
0000000000001a29         db  0x00 ; '.'
0000000000001a2a         db  0x00 ; '.'
0000000000001a2b         db  0x00 ; '.'
0000000000001a2c         db  0x00 ; '.'
0000000000001a2d         db  0x00 ; '.'
0000000000001a2e         db  0x00 ; '.'
0000000000001a2f         db  0x00 ; '.'
0000000000001a30         db  0x31 ; '1'
0000000000001a31         db  0x83 ; '.'
0000000000001a32         db  0x01 ; '.'
0000000000001a33         db  0x00 ; '.'
0000000000001a34         db  0x00 ; '.'
0000000000001a35         db  0x00 ; '.'
0000000000001a36         db  0x00 ; '.'
0000000000001a37         db  0x00 ; '.'
0000000000001a38         db  0x70 ; 'p'
0000000000001a39         db  0xc9 ; '.'
0000000000001a3a         db  0x21 ; '!'
0000000000001a3b         db  0x00 ; '.'
0000000000001a3c         db  0x00 ; '.'
0000000000001a3d         db  0x00 ; '.'
0000000000001a3e         db  0x00 ; '.'
0000000000001a3f         db  0x00 ; '.'
0000000000001a40         db  0x08 ; '.'
0000000000001a41         db  0x00 ; '.'
0000000000001a42         db  0x00 ; '.'
0000000000001a43         db  0x00 ; '.'
0000000000001a44         db  0x00 ; '.'
0000000000001a45         db  0x00 ; '.'
0000000000001a46         db  0x00 ; '.'
0000000000001a47         db  0x00 ; '.'
0000000000001a48         db  0x37 ; '7'
0000000000001a49         db  0x83 ; '.'
0000000000001a4a         db  0x01 ; '.'
0000000000001a4b         db  0x00 ; '.'
0000000000001a4c         db  0x00 ; '.'
0000000000001a4d         db  0x00 ; '.'
0000000000001a4e         db  0x00 ; '.'
0000000000001a4f         db  0x00 ; '.'
0000000000001a50         db  0x78 ; 'x'
0000000000001a51         db  0xc9 ; '.'
0000000000001a52         db  0x21 ; '!'
0000000000001a53         db  0x00 ; '.'
0000000000001a54         db  0x00 ; '.'
0000000000001a55         db  0x00 ; '.'
0000000000001a56         db  0x00 ; '.'
0000000000001a57         db  0x00 ; '.'
0000000000001a58         db  0x08 ; '.'
0000000000001a59         db  0x00 ; '.'
0000000000001a5a         db  0x00 ; '.'
0000000000001a5b         db  0x00 ; '.'
0000000000001a5c         db  0x00 ; '.'
0000000000001a5d         db  0x00 ; '.'
0000000000001a5e         db  0x00 ; '.'
0000000000001a5f         db  0x00 ; '.'
0000000000001a60         db  0x44 ; 'D'
0000000000001a61         db  0x83 ; '.'
0000000000001a62         db  0x01 ; '.'
0000000000001a63         db  0x00 ; '.'
0000000000001a64         db  0x00 ; '.'
0000000000001a65         db  0x00 ; '.'
0000000000001a66         db  0x00 ; '.'
0000000000001a67         db  0x00 ; '.'
0000000000001a68         db  0x80 ; '.'
0000000000001a69         db  0xc9 ; '.'
0000000000001a6a         db  0x21 ; '!'
0000000000001a6b         db  0x00 ; '.'
0000000000001a6c         db  0x00 ; '.'
0000000000001a6d         db  0x00 ; '.'
0000000000001a6e         db  0x00 ; '.'
0000000000001a6f         db  0x00 ; '.'
0000000000001a70         db  0x08 ; '.'
0000000000001a71         db  0x00 ; '.'
0000000000001a72         db  0x00 ; '.'
0000000000001a73         db  0x00 ; '.'
0000000000001a74         db  0x00 ; '.'
0000000000001a75         db  0x00 ; '.'
0000000000001a76         db  0x00 ; '.'
0000000000001a77         db  0x00 ; '.'
0000000000001a78         db  0x51 ; 'Q'
0000000000001a79         db  0x83 ; '.'
0000000000001a7a         db  0x01 ; '.'
0000000000001a7b         db  0x00 ; '.'
0000000000001a7c         db  0x00 ; '.'
0000000000001a7d         db  0x00 ; '.'
0000000000001a7e         db  0x00 ; '.'
0000000000001a7f         db  0x00 ; '.'
0000000000001a80         db  0x88 ; '.'
0000000000001a81         db  0xc9 ; '.'
0000000000001a82         db  0x21 ; '!'
0000000000001a83         db  0x00 ; '.'
0000000000001a84         db  0x00 ; '.'
0000000000001a85         db  0x00 ; '.'
0000000000001a86         db  0x00 ; '.'
0000000000001a87         db  0x00 ; '.'
0000000000001a88         db  0x08 ; '.'
0000000000001a89         db  0x00 ; '.'
0000000000001a8a         db  0x00 ; '.'
0000000000001a8b         db  0x00 ; '.'
0000000000001a8c         db  0x00 ; '.'
0000000000001a8d         db  0x00 ; '.'
0000000000001a8e         db  0x00 ; '.'
0000000000001a8f         db  0x00 ; '.'
0000000000001a90         db  0xe5 ; '.'
0000000000001a91         db  0x7f ; '.'
0000000000001a92         db  0x01 ; '.'
0000000000001a93         db  0x00 ; '.'
0000000000001a94         db  0x00 ; '.'
0000000000001a95         db  0x00 ; '.'
0000000000001a96         db  0x00 ; '.'
0000000000001a97         db  0x00 ; '.'
0000000000001a98         db  0x90 ; '.'
0000000000001a99         db  0xc9 ; '.'
0000000000001a9a         db  0x21 ; '!'
0000000000001a9b         db  0x00 ; '.'
0000000000001a9c         db  0x00 ; '.'
0000000000001a9d         db  0x00 ; '.'
0000000000001a9e         db  0x00 ; '.'
0000000000001a9f         db  0x00 ; '.'
0000000000001aa0         db  0x08 ; '.'
0000000000001aa1         db  0x00 ; '.'
0000000000001aa2         db  0x00 ; '.'
0000000000001aa3         db  0x00 ; '.'
0000000000001aa4         db  0x00 ; '.'
0000000000001aa5         db  0x00 ; '.'
0000000000001aa6         db  0x00 ; '.'
0000000000001aa7         db  0x00 ; '.'
0000000000001aa8         db  0x65 ; 'e'
0000000000001aa9         db  0x83 ; '.'
0000000000001aaa         db  0x01 ; '.'
0000000000001aab         db  0x00 ; '.'
0000000000001aac         db  0x00 ; '.'
0000000000001aad         db  0x00 ; '.'
0000000000001aae         db  0x00 ; '.'
0000000000001aaf         db  0x00 ; '.'
0000000000001ab0         db  0x98 ; '.'
0000000000001ab1         db  0xc9 ; '.'
0000000000001ab2         db  0x21 ; '!'
0000000000001ab3         db  0x00 ; '.'
0000000000001ab4         db  0x00 ; '.'
0000000000001ab5         db  0x00 ; '.'
0000000000001ab6         db  0x00 ; '.'
0000000000001ab7         db  0x00 ; '.'
0000000000001ab8         db  0x08 ; '.'
0000000000001ab9         db  0x00 ; '.'
0000000000001aba         db  0x00 ; '.'
0000000000001abb         db  0x00 ; '.'
0000000000001abc         db  0x00 ; '.'
0000000000001abd         db  0x00 ; '.'
0000000000001abe         db  0x00 ; '.'
0000000000001abf         db  0x00 ; '.'
0000000000001ac0         db  0x4a ; 'J'
0000000000001ac1         db  0x83 ; '.'
0000000000001ac2         db  0x01 ; '.'
0000000000001ac3         db  0x00 ; '.'
0000000000001ac4         db  0x00 ; '.'
0000000000001ac5         db  0x00 ; '.'
0000000000001ac6         db  0x00 ; '.'
0000000000001ac7         db  0x00 ; '.'
0000000000001ac8         db  0xa0 ; '.'
0000000000001ac9         db  0xc9 ; '.'
0000000000001aca         db  0x21 ; '!'
0000000000001acb         db  0x00 ; '.'
0000000000001acc         db  0x00 ; '.'
0000000000001acd         db  0x00 ; '.'
0000000000001ace         db  0x00 ; '.'
0000000000001acf         db  0x00 ; '.'
0000000000001ad0         db  0x08 ; '.'
0000000000001ad1         db  0x00 ; '.'
0000000000001ad2         db  0x00 ; '.'
0000000000001ad3         db  0x00 ; '.'
0000000000001ad4         db  0x00 ; '.'
0000000000001ad5         db  0x00 ; '.'
0000000000001ad6         db  0x00 ; '.'
0000000000001ad7         db  0x00 ; '.'
0000000000001ad8         db  0x44 ; 'D'
0000000000001ad9         db  0x65 ; 'e'
0000000000001ada         db  0x01 ; '.'
0000000000001adb         db  0x00 ; '.'
0000000000001adc         db  0x00 ; '.'
0000000000001add         db  0x00 ; '.'
0000000000001ade         db  0x00 ; '.'
0000000000001adf         db  0x00 ; '.'
0000000000001ae0         db  0xa8 ; '.'
0000000000001ae1         db  0xc9 ; '.'
0000000000001ae2         db  0x21 ; '!'
0000000000001ae3         db  0x00 ; '.'
0000000000001ae4         db  0x00 ; '.'
0000000000001ae5         db  0x00 ; '.'
0000000000001ae6         db  0x00 ; '.'
0000000000001ae7         db  0x00 ; '.'
0000000000001ae8         db  0x08 ; '.'
0000000000001ae9         db  0x00 ; '.'
0000000000001aea         db  0x00 ; '.'
0000000000001aeb         db  0x00 ; '.'
0000000000001aec         db  0x00 ; '.'
0000000000001aed         db  0x00 ; '.'
0000000000001aee         db  0x00 ; '.'
0000000000001aef         db  0x00 ; '.'
0000000000001af0         db  0x6d ; 'm'
0000000000001af1         db  0x83 ; '.'
0000000000001af2         db  0x01 ; '.'
0000000000001af3         db  0x00 ; '.'
0000000000001af4         db  0x00 ; '.'
0000000000001af5         db  0x00 ; '.'
0000000000001af6         db  0x00 ; '.'
0000000000001af7         db  0x00 ; '.'
0000000000001af8         db  0xc8 ; '.'
0000000000001af9         db  0xc9 ; '.'
0000000000001afa         db  0x21 ; '!'
0000000000001afb         db  0x00 ; '.'
0000000000001afc         db  0x00 ; '.'
0000000000001afd         db  0x00 ; '.'
0000000000001afe         db  0x00 ; '.'
0000000000001aff         db  0x00 ; '.'
0000000000001b00         db  0x08 ; '.'
0000000000001b01         db  0x00 ; '.'
0000000000001b02         db  0x00 ; '.'
0000000000001b03         db  0x00 ; '.'
0000000000001b04         db  0x00 ; '.'
0000000000001b05         db  0x00 ; '.'
0000000000001b06         db  0x00 ; '.'
0000000000001b07         db  0x00 ; '.'
0000000000001b08         db  0x20 ; ' '
0000000000001b09         db  0xfc ; '.'
0000000000001b0a         db  0x00 ; '.'
0000000000001b0b         db  0x00 ; '.'
0000000000001b0c         db  0x00 ; '.'
0000000000001b0d         db  0x00 ; '.'
0000000000001b0e         db  0x00 ; '.'
0000000000001b0f         db  0x00 ; '.'
0000000000001b10         db  0xd0 ; '.'
0000000000001b11         db  0xc9 ; '.'
0000000000001b12         db  0x21 ; '!'
0000000000001b13         db  0x00 ; '.'
0000000000001b14         db  0x00 ; '.'
0000000000001b15         db  0x00 ; '.'
0000000000001b16         db  0x00 ; '.'
0000000000001b17         db  0x00 ; '.'
0000000000001b18         db  0x08 ; '.'
0000000000001b19         db  0x00 ; '.'
0000000000001b1a         db  0x00 ; '.'
0000000000001b1b         db  0x00 ; '.'
0000000000001b1c         db  0x00 ; '.'
0000000000001b1d         db  0x00 ; '.'
0000000000001b1e         db  0x00 ; '.'
0000000000001b1f         db  0x00 ; '.'
0000000000001b20         db  0x00 ; '.'
0000000000001b21         db  0xfc ; '.'
0000000000001b22         db  0x00 ; '.'
0000000000001b23         db  0x00 ; '.'
0000000000001b24         db  0x00 ; '.'
0000000000001b25         db  0x00 ; '.'
0000000000001b26         db  0x00 ; '.'
0000000000001b27         db  0x00 ; '.'
0000000000001b28         db  0x08 ; '.'
0000000000001b29         db  0xd0 ; '.'
0000000000001b2a         db  0x21 ; '!'
0000000000001b2b         db  0x00 ; '.'
0000000000001b2c         db  0x00 ; '.'
0000000000001b2d         db  0x00 ; '.'
0000000000001b2e         db  0x00 ; '.'
0000000000001b2f         db  0x00 ; '.'
0000000000001b30         db  0x08 ; '.'
0000000000001b31         db  0x00 ; '.'
0000000000001b32         db  0x00 ; '.'
0000000000001b33         db  0x00 ; '.'
0000000000001b34         db  0x00 ; '.'
0000000000001b35         db  0x00 ; '.'
0000000000001b36         db  0x00 ; '.'
0000000000001b37         db  0x00 ; '.'
0000000000001b38         db  0x08 ; '.'
0000000000001b39         db  0xd0 ; '.'
0000000000001b3a         db  0x21 ; '!'
0000000000001b3b         db  0x00 ; '.'
0000000000001b3c         db  0x00 ; '.'
0000000000001b3d         db  0x00 ; '.'
0000000000001b3e         db  0x00 ; '.'
0000000000001b3f         db  0x00 ; '.'
0000000000001b40         db  0x28 ; '('
0000000000001b41         db  0xd0 ; '.'
0000000000001b42         db  0x21 ; '!'
0000000000001b43         db  0x00 ; '.'
0000000000001b44         db  0x00 ; '.'
0000000000001b45         db  0x00 ; '.'
0000000000001b46         db  0x00 ; '.'
0000000000001b47         db  0x00 ; '.'
0000000000001b48         db  0x08 ; '.'
0000000000001b49         db  0x00 ; '.'
0000000000001b4a         db  0x00 ; '.'
0000000000001b4b         db  0x00 ; '.'
0000000000001b4c         db  0x00 ; '.'
0000000000001b4d         db  0x00 ; '.'
0000000000001b4e         db  0x00 ; '.'
0000000000001b4f         db  0x00 ; '.'
0000000000001b50         db  0x36 ; '6'
0000000000001b51         db  0x64 ; 'd'
0000000000001b52         db  0x01 ; '.'
0000000000001b53         db  0x00 ; '.'
0000000000001b54         db  0x00 ; '.'
0000000000001b55         db  0x00 ; '.'
0000000000001b56         db  0x00 ; '.'
0000000000001b57         db  0x00 ; '.'
0000000000001b58         db  0x40 ; '@'
0000000000001b59         db  0xd0 ; '.'
0000000000001b5a         db  0x21 ; '!'
0000000000001b5b         db  0x00 ; '.'
0000000000001b5c         db  0x00 ; '.'
0000000000001b5d         db  0x00 ; '.'
0000000000001b5e         db  0x00 ; '.'
0000000000001b5f         db  0x00 ; '.'
0000000000001b60         db  0x08 ; '.'
0000000000001b61         db  0x00 ; '.'
0000000000001b62         db  0x00 ; '.'
0000000000001b63         db  0x00 ; '.'
0000000000001b64         db  0x00 ; '.'
0000000000001b65         db  0x00 ; '.'
0000000000001b66         db  0x00 ; '.'
0000000000001b67         db  0x00 ; '.'
0000000000001b68         db  0xc1 ; '.'
0000000000001b69         db  0x80 ; '.'
0000000000001b6a         db  0x01 ; '.'
0000000000001b6b         db  0x00 ; '.'
0000000000001b6c         db  0x00 ; '.'
0000000000001b6d         db  0x00 ; '.'
0000000000001b6e         db  0x00 ; '.'
0000000000001b6f         db  0x00 ; '.'
0000000000001b70         db  0xa0 ; '.'
0000000000001b71         db  0xd0 ; '.'
0000000000001b72         db  0x21 ; '!'
0000000000001b73         db  0x00 ; '.'
0000000000001b74         db  0x00 ; '.'
0000000000001b75         db  0x00 ; '.'
0000000000001b76         db  0x00 ; '.'
0000000000001b77         db  0x00 ; '.'
0000000000001b78         db  0x08 ; '.'
0000000000001b79         db  0x00 ; '.'
0000000000001b7a         db  0x00 ; '.'
0000000000001b7b         db  0x00 ; '.'
0000000000001b7c         db  0x00 ; '.'
0000000000001b7d         db  0x00 ; '.'
0000000000001b7e         db  0x00 ; '.'
0000000000001b7f         db  0x00 ; '.'
0000000000001b80         db  0xb0 ; '.'
0000000000001b81         db  0xd0 ; '.'
0000000000001b82         db  0x21 ; '!'
0000000000001b83         db  0x00 ; '.'
0000000000001b84         db  0x00 ; '.'
0000000000001b85         db  0x00 ; '.'
0000000000001b86         db  0x00 ; '.'
0000000000001b87         db  0x00 ; '.'
0000000000001b88         db  0xb8 ; '.'
0000000000001b89         db  0xd0 ; '.'
0000000000001b8a         db  0x21 ; '!'
0000000000001b8b         db  0x00 ; '.'
0000000000001b8c         db  0x00 ; '.'
0000000000001b8d         db  0x00 ; '.'
0000000000001b8e         db  0x00 ; '.'
0000000000001b8f         db  0x00 ; '.'
0000000000001b90         db  0x08 ; '.'
0000000000001b91         db  0x00 ; '.'
0000000000001b92         db  0x00 ; '.'
0000000000001b93         db  0x00 ; '.'
0000000000001b94         db  0x00 ; '.'
0000000000001b95         db  0x00 ; '.'
0000000000001b96         db  0x00 ; '.'
0000000000001b97         db  0x00 ; '.'
0000000000001b98         db  0xe0 ; '.'
0000000000001b99         db  0xf5 ; '.'
0000000000001b9a         db  0x21 ; '!'
0000000000001b9b         db  0x00 ; '.'
0000000000001b9c         db  0x00 ; '.'
0000000000001b9d         db  0x00 ; '.'
0000000000001b9e         db  0x00 ; '.'
0000000000001b9f         db  0x00 ; '.'
0000000000001ba0         db  0xc0 ; '.'
0000000000001ba1         db  0xd0 ; '.'
0000000000001ba2         db  0x21 ; '!'
0000000000001ba3         db  0x00 ; '.'
0000000000001ba4         db  0x00 ; '.'
0000000000001ba5         db  0x00 ; '.'
0000000000001ba6         db  0x00 ; '.'
0000000000001ba7         db  0x00 ; '.'
0000000000001ba8         db  0x08 ; '.'
0000000000001ba9         db  0x00 ; '.'
0000000000001baa         db  0x00 ; '.'
0000000000001bab         db  0x00 ; '.'
0000000000001bac         db  0x00 ; '.'
0000000000001bad         db  0x00 ; '.'
0000000000001bae         db  0x00 ; '.'
0000000000001baf         db  0x00 ; '.'
0000000000001bb0         db  0x30 ; '0'
0000000000001bb1         db  0x2a ; '*'
0000000000001bb2         db  0x01 ; '.'
0000000000001bb3         db  0x00 ; '.'
0000000000001bb4         db  0x00 ; '.'
0000000000001bb5         db  0x00 ; '.'
0000000000001bb6         db  0x00 ; '.'
0000000000001bb7         db  0x00 ; '.'
0000000000001bb8         db  0xd0 ; '.'
0000000000001bb9         db  0xcf ; '.'
0000000000001bba         db  0x21 ; '!'
0000000000001bbb         db  0x00 ; '.'
0000000000001bbc         db  0x00 ; '.'
0000000000001bbd         db  0x00 ; '.'
0000000000001bbe         db  0x00 ; '.'
0000000000001bbf         db  0x00 ; '.'
0000000000001bc0         db  0x06 ; '.'
0000000000001bc1         db  0x00 ; '.'
0000000000001bc2         db  0x00 ; '.'
0000000000001bc3         db  0x00 ; '.'
0000000000001bc4         db  0x05 ; '.'
0000000000001bc5         db  0x00 ; '.'
0000000000001bc6         db  0x00 ; '.'
0000000000001bc7         db  0x00 ; '.'
0000000000001bc8         db  0x00 ; '.'
0000000000001bc9         db  0x00 ; '.'
0000000000001bca         db  0x00 ; '.'
0000000000001bcb         db  0x00 ; '.'
0000000000001bcc         db  0x00 ; '.'
0000000000001bcd         db  0x00 ; '.'
0000000000001bce         db  0x00 ; '.'
0000000000001bcf         db  0x00 ; '.'
0000000000001bd0         db  0xd8 ; '.'
0000000000001bd1         db  0xcf ; '.'
0000000000001bd2         db  0x21 ; '!'
0000000000001bd3         db  0x00 ; '.'
0000000000001bd4         db  0x00 ; '.'
0000000000001bd5         db  0x00 ; '.'
0000000000001bd6         db  0x00 ; '.'
0000000000001bd7         db  0x00 ; '.'
0000000000001bd8         db  0x06 ; '.'
0000000000001bd9         db  0x00 ; '.'
0000000000001bda         db  0x00 ; '.'
0000000000001bdb         db  0x00 ; '.'
0000000000001bdc         db  0x0b ; '.'
0000000000001bdd         db  0x00 ; '.'
0000000000001bde         db  0x00 ; '.'
0000000000001bdf         db  0x00 ; '.'
0000000000001be0         db  0x00 ; '.'
0000000000001be1         db  0x00 ; '.'
0000000000001be2         db  0x00 ; '.'
0000000000001be3         db  0x00 ; '.'
0000000000001be4         db  0x00 ; '.'
0000000000001be5         db  0x00 ; '.'
0000000000001be6         db  0x00 ; '.'
0000000000001be7         db  0x00 ; '.'
0000000000001be8         db  0xe0 ; '.'
0000000000001be9         db  0xcf ; '.'
0000000000001bea         db  0x21 ; '!'
0000000000001beb         db  0x00 ; '.'
0000000000001bec         db  0x00 ; '.'
0000000000001bed         db  0x00 ; '.'
0000000000001bee         db  0x00 ; '.'
0000000000001bef         db  0x00 ; '.'
0000000000001bf0         db  0x06 ; '.'
0000000000001bf1         db  0x00 ; '.'
0000000000001bf2         db  0x00 ; '.'
0000000000001bf3         db  0x00 ; '.'
0000000000001bf4         db  0x3d ; '='
0000000000001bf5         db  0x00 ; '.'
0000000000001bf6         db  0x00 ; '.'
0000000000001bf7         db  0x00 ; '.'
0000000000001bf8         db  0x00 ; '.'
0000000000001bf9         db  0x00 ; '.'
0000000000001bfa         db  0x00 ; '.'
0000000000001bfb         db  0x00 ; '.'
0000000000001bfc         db  0x00 ; '.'
0000000000001bfd         db  0x00 ; '.'
0000000000001bfe         db  0x00 ; '.'
0000000000001bff         db  0x00 ; '.'
0000000000001c00         db  0xe8 ; '.'
0000000000001c01         db  0xcf ; '.'
0000000000001c02         db  0x21 ; '!'
0000000000001c03         db  0x00 ; '.'
0000000000001c04         db  0x00 ; '.'
0000000000001c05         db  0x00 ; '.'
0000000000001c06         db  0x00 ; '.'
0000000000001c07         db  0x00 ; '.'
0000000000001c08         db  0x06 ; '.'
0000000000001c09         db  0x00 ; '.'
0000000000001c0a         db  0x00 ; '.'
0000000000001c0b         db  0x00 ; '.'
0000000000001c0c         db  0x4c ; 'L'
0000000000001c0d         db  0x00 ; '.'
0000000000001c0e         db  0x00 ; '.'
0000000000001c0f         db  0x00 ; '.'
0000000000001c10         db  0x00 ; '.'
0000000000001c11         db  0x00 ; '.'
0000000000001c12         db  0x00 ; '.'
0000000000001c13         db  0x00 ; '.'
0000000000001c14         db  0x00 ; '.'
0000000000001c15         db  0x00 ; '.'
0000000000001c16         db  0x00 ; '.'
0000000000001c17         db  0x00 ; '.'
0000000000001c18         db  0xf0 ; '.'
0000000000001c19         db  0xcf ; '.'
0000000000001c1a         db  0x21 ; '!'
0000000000001c1b         db  0x00 ; '.'
0000000000001c1c         db  0x00 ; '.'
0000000000001c1d         db  0x00 ; '.'
0000000000001c1e         db  0x00 ; '.'
0000000000001c1f         db  0x00 ; '.'
0000000000001c20         db  0x06 ; '.'
0000000000001c21         db  0x00 ; '.'
0000000000001c22         db  0x00 ; '.'
0000000000001c23         db  0x00 ; '.'
0000000000001c24         db  0x7c ; '|'
0000000000001c25         db  0x00 ; '.'
0000000000001c26         db  0x00 ; '.'
0000000000001c27         db  0x00 ; '.'
0000000000001c28         db  0x00 ; '.'
0000000000001c29         db  0x00 ; '.'
0000000000001c2a         db  0x00 ; '.'
0000000000001c2b         db  0x00 ; '.'
0000000000001c2c         db  0x00 ; '.'
0000000000001c2d         db  0x00 ; '.'
0000000000001c2e         db  0x00 ; '.'
0000000000001c2f         db  0x00 ; '.'
0000000000001c30         db  0xf8 ; '.'
0000000000001c31         db  0xcf ; '.'
0000000000001c32         db  0x21 ; '!'
0000000000001c33         db  0x00 ; '.'
0000000000001c34         db  0x00 ; '.'
0000000000001c35         db  0x00 ; '.'
0000000000001c36         db  0x00 ; '.'
0000000000001c37         db  0x00 ; '.'
0000000000001c38         db  0x06 ; '.'
0000000000001c39         db  0x00 ; '.'
0000000000001c3a         db  0x00 ; '.'
0000000000001c3b         db  0x00 ; '.'
0000000000001c3c         db  0x81 ; '.'
0000000000001c3d         db  0x00 ; '.'
0000000000001c3e         db  0x00 ; '.'
0000000000001c3f         db  0x00 ; '.'
0000000000001c40         db  0x00 ; '.'
0000000000001c41         db  0x00 ; '.'
0000000000001c42         db  0x00 ; '.'
0000000000001c43         db  0x00 ; '.'
0000000000001c44         db  0x00 ; '.'
0000000000001c45         db  0x00 ; '.'
0000000000001c46         db  0x00 ; '.'
0000000000001c47         db  0x00 ; '.'
0000000000001c48         db  0xe0 ; '.'
0000000000001c49         db  0xd0 ; '.'
0000000000001c4a         db  0x21 ; '!'
0000000000001c4b         db  0x00 ; '.'
0000000000001c4c         db  0x00 ; '.'
0000000000001c4d         db  0x00 ; '.'
0000000000001c4e         db  0x00 ; '.'
0000000000001c4f         db  0x00 ; '.'
0000000000001c50         db  0x05 ; '.'
0000000000001c51         db  0x00 ; '.'
0000000000001c52         db  0x00 ; '.'
0000000000001c53         db  0x00 ; '.'
0000000000001c54         db  0x86 ; '.'
0000000000001c55         db  0x00 ; '.'
0000000000001c56         db  0x00 ; '.'
0000000000001c57         db  0x00 ; '.'
0000000000001c58         db  0x00 ; '.'
0000000000001c59         db  0x00 ; '.'
0000000000001c5a         db  0x00 ; '.'
0000000000001c5b         db  0x00 ; '.'
0000000000001c5c         db  0x00 ; '.'
0000000000001c5d         db  0x00 ; '.'
0000000000001c5e         db  0x00 ; '.'
0000000000001c5f         db  0x00 ; '.'
0000000000001c60         db  0xe8 ; '.'
0000000000001c61         db  0xd0 ; '.'
0000000000001c62         db  0x21 ; '!'
0000000000001c63         db  0x00 ; '.'
0000000000001c64         db  0x00 ; '.'
0000000000001c65         db  0x00 ; '.'
0000000000001c66         db  0x00 ; '.'
0000000000001c67         db  0x00 ; '.'
0000000000001c68         db  0x05 ; '.'
0000000000001c69         db  0x00 ; '.'
0000000000001c6a         db  0x00 ; '.'
0000000000001c6b         db  0x00 ; '.'
0000000000001c6c         db  0x85 ; '.'
0000000000001c6d         db  0x00 ; '.'
0000000000001c6e         db  0x00 ; '.'
0000000000001c6f         db  0x00 ; '.'
0000000000001c70         db  0x00 ; '.'
0000000000001c71         db  0x00 ; '.'
0000000000001c72         db  0x00 ; '.'
0000000000001c73         db  0x00 ; '.'
0000000000001c74         db  0x00 ; '.'
0000000000001c75         db  0x00 ; '.'
0000000000001c76         db  0x00 ; '.'
0000000000001c77         db  0x00 ; '.'
0000000000001c78         db  0xf0 ; '.'
0000000000001c79         db  0xd0 ; '.'
0000000000001c7a         db  0x21 ; '!'
0000000000001c7b         db  0x00 ; '.'
0000000000001c7c         db  0x00 ; '.'
0000000000001c7d         db  0x00 ; '.'
0000000000001c7e         db  0x00 ; '.'
0000000000001c7f         db  0x00 ; '.'
0000000000001c80         db  0x05 ; '.'
0000000000001c81         db  0x00 ; '.'
0000000000001c82         db  0x00 ; '.'
0000000000001c83         db  0x00 ; '.'
0000000000001c84         db  0x87 ; '.'
0000000000001c85         db  0x00 ; '.'
0000000000001c86         db  0x00 ; '.'
0000000000001c87         db  0x00 ; '.'
0000000000001c88         db  0x00 ; '.'
0000000000001c89         db  0x00 ; '.'
0000000000001c8a         db  0x00 ; '.'
0000000000001c8b         db  0x00 ; '.'
0000000000001c8c         db  0x00 ; '.'
0000000000001c8d         db  0x00 ; '.'
0000000000001c8e         db  0x00 ; '.'
0000000000001c8f         db  0x00 ; '.'
0000000000001c90         db  0xf8 ; '.'
0000000000001c91         db  0xd0 ; '.'
0000000000001c92         db  0x21 ; '!'
0000000000001c93         db  0x00 ; '.'
0000000000001c94         db  0x00 ; '.'
0000000000001c95         db  0x00 ; '.'
0000000000001c96         db  0x00 ; '.'
0000000000001c97         db  0x00 ; '.'
0000000000001c98         db  0x05 ; '.'
0000000000001c99         db  0x00 ; '.'
0000000000001c9a         db  0x00 ; '.'
0000000000001c9b         db  0x00 ; '.'
0000000000001c9c         db  0x8c ; '.'
0000000000001c9d         db  0x00 ; '.'
0000000000001c9e         db  0x00 ; '.'
0000000000001c9f         db  0x00 ; '.'
0000000000001ca0         db  0x00 ; '.'
0000000000001ca1         db  0x00 ; '.'
0000000000001ca2         db  0x00 ; '.'
0000000000001ca3         db  0x00 ; '.'
0000000000001ca4         db  0x00 ; '.'
0000000000001ca5         db  0x00 ; '.'
0000000000001ca6         db  0x00 ; '.'
0000000000001ca7         db  0x00 ; '.'
0000000000001ca8         db  0x00 ; '.'
0000000000001ca9         db  0xd1 ; '.'
0000000000001caa         db  0x21 ; '!'
0000000000001cab         db  0x00 ; '.'
0000000000001cac         db  0x00 ; '.'
0000000000001cad         db  0x00 ; '.'
0000000000001cae         db  0x00 ; '.'
0000000000001caf         db  0x00 ; '.'
0000000000001cb0         db  0x05 ; '.'
0000000000001cb1         db  0x00 ; '.'
0000000000001cb2         db  0x00 ; '.'
0000000000001cb3         db  0x00 ; '.'
0000000000001cb4         db  0x8d ; '.'
0000000000001cb5         db  0x00 ; '.'
0000000000001cb6         db  0x00 ; '.'
0000000000001cb7         db  0x00 ; '.'
0000000000001cb8         db  0x00 ; '.'
0000000000001cb9         db  0x00 ; '.'
0000000000001cba         db  0x00 ; '.'
0000000000001cbb         db  0x00 ; '.'
0000000000001cbc         db  0x00 ; '.'
0000000000001cbd         db  0x00 ; '.'
0000000000001cbe         db  0x00 ; '.'
0000000000001cbf         db  0x00 ; '.'
0000000000001cc0         db  0x08 ; '.'
0000000000001cc1         db  0xd1 ; '.'
0000000000001cc2         db  0x21 ; '!'
0000000000001cc3         db  0x00 ; '.'
0000000000001cc4         db  0x00 ; '.'
0000000000001cc5         db  0x00 ; '.'
0000000000001cc6         db  0x00 ; '.'
0000000000001cc7         db  0x00 ; '.'
0000000000001cc8         db  0x05 ; '.'
0000000000001cc9         db  0x00 ; '.'
0000000000001cca         db  0x00 ; '.'
0000000000001ccb         db  0x00 ; '.'
0000000000001ccc         db  0x89 ; '.'
0000000000001ccd         db  0x00 ; '.'
0000000000001cce         db  0x00 ; '.'
0000000000001ccf         db  0x00 ; '.'
0000000000001cd0         db  0x00 ; '.'
0000000000001cd1         db  0x00 ; '.'
0000000000001cd2         db  0x00 ; '.'
0000000000001cd3         db  0x00 ; '.'
0000000000001cd4         db  0x00 ; '.'
0000000000001cd5         db  0x00 ; '.'
0000000000001cd6         db  0x00 ; '.'
0000000000001cd7         db  0x00 ; '.'
0000000000001cd8         db  0x20 ; ' '
0000000000001cd9         db  0xd1 ; '.'
0000000000001cda         db  0x21 ; '!'
0000000000001cdb         db  0x00 ; '.'
0000000000001cdc         db  0x00 ; '.'
0000000000001cdd         db  0x00 ; '.'
0000000000001cde         db  0x00 ; '.'
0000000000001cdf         db  0x00 ; '.'
0000000000001ce0         db  0x05 ; '.'
0000000000001ce1         db  0x00 ; '.'
0000000000001ce2         db  0x00 ; '.'
0000000000001ce3         db  0x00 ; '.'
0000000000001ce4         db  0x8b ; '.'
0000000000001ce5         db  0x00 ; '.'
0000000000001ce6         db  0x00 ; '.'
0000000000001ce7         db  0x00 ; '.'
0000000000001ce8         db  0x00 ; '.'
0000000000001ce9         db  0x00 ; '.'
0000000000001cea         db  0x00 ; '.'
0000000000001ceb         db  0x00 ; '.'
0000000000001cec         db  0x00 ; '.'
0000000000001ced         db  0x00 ; '.'
0000000000001cee         db  0x00 ; '.'
0000000000001cef         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x1cf0; 0x28c0[ (3024 bytes)
        ; File offset : [7408; 10432[ (3024 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000001cf0         db  0xe0 ; '.'
0000000000001cf1         db  0xcb ; '.'
0000000000001cf2         db  0x21 ; '!'
0000000000001cf3         db  0x00 ; '.'
0000000000001cf4         db  0x00 ; '.'
0000000000001cf5         db  0x00 ; '.'
0000000000001cf6         db  0x00 ; '.'
0000000000001cf7         db  0x00 ; '.'
0000000000001cf8         db  0x07 ; '.'
0000000000001cf9         db  0x00 ; '.'
0000000000001cfa         db  0x00 ; '.'
0000000000001cfb         db  0x00 ; '.'
0000000000001cfc         db  0x01 ; '.'
0000000000001cfd         db  0x00 ; '.'
0000000000001cfe         db  0x00 ; '.'
0000000000001cff         db  0x00 ; '.'
0000000000001d00         db  0x00 ; '.'
0000000000001d01         db  0x00 ; '.'
0000000000001d02         db  0x00 ; '.'
0000000000001d03         db  0x00 ; '.'
0000000000001d04         db  0x00 ; '.'
0000000000001d05         db  0x00 ; '.'
0000000000001d06         db  0x00 ; '.'
0000000000001d07         db  0x00 ; '.'
0000000000001d08         db  0xe8 ; '.'
0000000000001d09         db  0xcb ; '.'
0000000000001d0a         db  0x21 ; '!'
0000000000001d0b         db  0x00 ; '.'
0000000000001d0c         db  0x00 ; '.'
0000000000001d0d         db  0x00 ; '.'
0000000000001d0e         db  0x00 ; '.'
0000000000001d0f         db  0x00 ; '.'
0000000000001d10         db  0x07 ; '.'
0000000000001d11         db  0x00 ; '.'
0000000000001d12         db  0x00 ; '.'
0000000000001d13         db  0x00 ; '.'
0000000000001d14         db  0x02 ; '.'
0000000000001d15         db  0x00 ; '.'
0000000000001d16         db  0x00 ; '.'
0000000000001d17         db  0x00 ; '.'
0000000000001d18         db  0x00 ; '.'
0000000000001d19         db  0x00 ; '.'
0000000000001d1a         db  0x00 ; '.'
0000000000001d1b         db  0x00 ; '.'
0000000000001d1c         db  0x00 ; '.'
0000000000001d1d         db  0x00 ; '.'
0000000000001d1e         db  0x00 ; '.'
0000000000001d1f         db  0x00 ; '.'
0000000000001d20         db  0xf0 ; '.'
0000000000001d21         db  0xcb ; '.'
0000000000001d22         db  0x21 ; '!'
0000000000001d23         db  0x00 ; '.'
0000000000001d24         db  0x00 ; '.'
0000000000001d25         db  0x00 ; '.'
0000000000001d26         db  0x00 ; '.'
0000000000001d27         db  0x00 ; '.'
0000000000001d28         db  0x07 ; '.'
0000000000001d29         db  0x00 ; '.'
0000000000001d2a         db  0x00 ; '.'
0000000000001d2b         db  0x00 ; '.'
0000000000001d2c         db  0x03 ; '.'
0000000000001d2d         db  0x00 ; '.'
0000000000001d2e         db  0x00 ; '.'
0000000000001d2f         db  0x00 ; '.'
0000000000001d30         db  0x00 ; '.'
0000000000001d31         db  0x00 ; '.'
0000000000001d32         db  0x00 ; '.'
0000000000001d33         db  0x00 ; '.'
0000000000001d34         db  0x00 ; '.'
0000000000001d35         db  0x00 ; '.'
0000000000001d36         db  0x00 ; '.'
0000000000001d37         db  0x00 ; '.'
0000000000001d38         db  0xf8 ; '.'
0000000000001d39         db  0xcb ; '.'
0000000000001d3a         db  0x21 ; '!'
0000000000001d3b         db  0x00 ; '.'
0000000000001d3c         db  0x00 ; '.'
0000000000001d3d         db  0x00 ; '.'
0000000000001d3e         db  0x00 ; '.'
0000000000001d3f         db  0x00 ; '.'
0000000000001d40         db  0x07 ; '.'
0000000000001d41         db  0x00 ; '.'
0000000000001d42         db  0x00 ; '.'
0000000000001d43         db  0x00 ; '.'
0000000000001d44         db  0x04 ; '.'
0000000000001d45         db  0x00 ; '.'
0000000000001d46         db  0x00 ; '.'
0000000000001d47         db  0x00 ; '.'
0000000000001d48         db  0x00 ; '.'
0000000000001d49         db  0x00 ; '.'
0000000000001d4a         db  0x00 ; '.'
0000000000001d4b         db  0x00 ; '.'
0000000000001d4c         db  0x00 ; '.'
0000000000001d4d         db  0x00 ; '.'
0000000000001d4e         db  0x00 ; '.'
0000000000001d4f         db  0x00 ; '.'
0000000000001d50         db  0x00 ; '.'
0000000000001d51         db  0xcc ; '.'
0000000000001d52         db  0x21 ; '!'
0000000000001d53         db  0x00 ; '.'
0000000000001d54         db  0x00 ; '.'
0000000000001d55         db  0x00 ; '.'
0000000000001d56         db  0x00 ; '.'
0000000000001d57         db  0x00 ; '.'
0000000000001d58         db  0x07 ; '.'
0000000000001d59         db  0x00 ; '.'
0000000000001d5a         db  0x00 ; '.'
0000000000001d5b         db  0x00 ; '.'
0000000000001d5c         db  0x06 ; '.'
0000000000001d5d         db  0x00 ; '.'
0000000000001d5e         db  0x00 ; '.'
0000000000001d5f         db  0x00 ; '.'
0000000000001d60         db  0x00 ; '.'
0000000000001d61         db  0x00 ; '.'
0000000000001d62         db  0x00 ; '.'
0000000000001d63         db  0x00 ; '.'
0000000000001d64         db  0x00 ; '.'
0000000000001d65         db  0x00 ; '.'
0000000000001d66         db  0x00 ; '.'
0000000000001d67         db  0x00 ; '.'
0000000000001d68         db  0x08 ; '.'
0000000000001d69         db  0xcc ; '.'
0000000000001d6a         db  0x21 ; '!'
0000000000001d6b         db  0x00 ; '.'
0000000000001d6c         db  0x00 ; '.'
0000000000001d6d         db  0x00 ; '.'
0000000000001d6e         db  0x00 ; '.'
0000000000001d6f         db  0x00 ; '.'
0000000000001d70         db  0x07 ; '.'
0000000000001d71         db  0x00 ; '.'
0000000000001d72         db  0x00 ; '.'
0000000000001d73         db  0x00 ; '.'
0000000000001d74         db  0x07 ; '.'
0000000000001d75         db  0x00 ; '.'
0000000000001d76         db  0x00 ; '.'
0000000000001d77         db  0x00 ; '.'
0000000000001d78         db  0x00 ; '.'
0000000000001d79         db  0x00 ; '.'
0000000000001d7a         db  0x00 ; '.'
0000000000001d7b         db  0x00 ; '.'
0000000000001d7c         db  0x00 ; '.'
0000000000001d7d         db  0x00 ; '.'
0000000000001d7e         db  0x00 ; '.'
0000000000001d7f         db  0x00 ; '.'
0000000000001d80         db  0x10 ; '.'
0000000000001d81         db  0xcc ; '.'
0000000000001d82         db  0x21 ; '!'
0000000000001d83         db  0x00 ; '.'
0000000000001d84         db  0x00 ; '.'
0000000000001d85         db  0x00 ; '.'
0000000000001d86         db  0x00 ; '.'
0000000000001d87         db  0x00 ; '.'
0000000000001d88         db  0x07 ; '.'
0000000000001d89         db  0x00 ; '.'
0000000000001d8a         db  0x00 ; '.'
0000000000001d8b         db  0x00 ; '.'
0000000000001d8c         db  0x08 ; '.'
0000000000001d8d         db  0x00 ; '.'
0000000000001d8e         db  0x00 ; '.'
0000000000001d8f         db  0x00 ; '.'
0000000000001d90         db  0x00 ; '.'
0000000000001d91         db  0x00 ; '.'
0000000000001d92         db  0x00 ; '.'
0000000000001d93         db  0x00 ; '.'
0000000000001d94         db  0x00 ; '.'
0000000000001d95         db  0x00 ; '.'
0000000000001d96         db  0x00 ; '.'
0000000000001d97         db  0x00 ; '.'
0000000000001d98         db  0x18 ; '.'
0000000000001d99         db  0xcc ; '.'
0000000000001d9a         db  0x21 ; '!'
0000000000001d9b         db  0x00 ; '.'
0000000000001d9c         db  0x00 ; '.'
0000000000001d9d         db  0x00 ; '.'
0000000000001d9e         db  0x00 ; '.'
0000000000001d9f         db  0x00 ; '.'
0000000000001da0         db  0x07 ; '.'
0000000000001da1         db  0x00 ; '.'
0000000000001da2         db  0x00 ; '.'
0000000000001da3         db  0x00 ; '.'
0000000000001da4         db  0x09 ; '.'
0000000000001da5         db  0x00 ; '.'
0000000000001da6         db  0x00 ; '.'
0000000000001da7         db  0x00 ; '.'
0000000000001da8         db  0x00 ; '.'
0000000000001da9         db  0x00 ; '.'
0000000000001daa         db  0x00 ; '.'
0000000000001dab         db  0x00 ; '.'
0000000000001dac         db  0x00 ; '.'
0000000000001dad         db  0x00 ; '.'
0000000000001dae         db  0x00 ; '.'
0000000000001daf         db  0x00 ; '.'
0000000000001db0         db  0x20 ; ' '
0000000000001db1         db  0xcc ; '.'
0000000000001db2         db  0x21 ; '!'
0000000000001db3         db  0x00 ; '.'
0000000000001db4         db  0x00 ; '.'
0000000000001db5         db  0x00 ; '.'
0000000000001db6         db  0x00 ; '.'
0000000000001db7         db  0x00 ; '.'
0000000000001db8         db  0x07 ; '.'
0000000000001db9         db  0x00 ; '.'
0000000000001dba         db  0x00 ; '.'
0000000000001dbb         db  0x00 ; '.'
0000000000001dbc         db  0x0a ; '.'
0000000000001dbd         db  0x00 ; '.'
0000000000001dbe         db  0x00 ; '.'
0000000000001dbf         db  0x00 ; '.'
0000000000001dc0         db  0x00 ; '.'
0000000000001dc1         db  0x00 ; '.'
0000000000001dc2         db  0x00 ; '.'
0000000000001dc3         db  0x00 ; '.'
0000000000001dc4         db  0x00 ; '.'
0000000000001dc5         db  0x00 ; '.'
0000000000001dc6         db  0x00 ; '.'
0000000000001dc7         db  0x00 ; '.'
0000000000001dc8         db  0x28 ; '('
0000000000001dc9         db  0xcc ; '.'
0000000000001dca         db  0x21 ; '!'
0000000000001dcb         db  0x00 ; '.'
0000000000001dcc         db  0x00 ; '.'
0000000000001dcd         db  0x00 ; '.'
0000000000001dce         db  0x00 ; '.'
0000000000001dcf         db  0x00 ; '.'
0000000000001dd0         db  0x07 ; '.'
0000000000001dd1         db  0x00 ; '.'
0000000000001dd2         db  0x00 ; '.'
0000000000001dd3         db  0x00 ; '.'
0000000000001dd4         db  0x0c ; '.'
0000000000001dd5         db  0x00 ; '.'
0000000000001dd6         db  0x00 ; '.'
0000000000001dd7         db  0x00 ; '.'
0000000000001dd8         db  0x00 ; '.'
0000000000001dd9         db  0x00 ; '.'
0000000000001dda         db  0x00 ; '.'
0000000000001ddb         db  0x00 ; '.'
0000000000001ddc         db  0x00 ; '.'
0000000000001ddd         db  0x00 ; '.'
0000000000001dde         db  0x00 ; '.'
0000000000001ddf         db  0x00 ; '.'
0000000000001de0         db  0x30 ; '0'
0000000000001de1         db  0xcc ; '.'
0000000000001de2         db  0x21 ; '!'
0000000000001de3         db  0x00 ; '.'
0000000000001de4         db  0x00 ; '.'
0000000000001de5         db  0x00 ; '.'
0000000000001de6         db  0x00 ; '.'
0000000000001de7         db  0x00 ; '.'
0000000000001de8         db  0x07 ; '.'
0000000000001de9         db  0x00 ; '.'
0000000000001dea         db  0x00 ; '.'
0000000000001deb         db  0x00 ; '.'
0000000000001dec         db  0x0d ; '.'
0000000000001ded         db  0x00 ; '.'
0000000000001dee         db  0x00 ; '.'
0000000000001def         db  0x00 ; '.'
0000000000001df0         db  0x00 ; '.'
0000000000001df1         db  0x00 ; '.'
0000000000001df2         db  0x00 ; '.'
0000000000001df3         db  0x00 ; '.'
0000000000001df4         db  0x00 ; '.'
0000000000001df5         db  0x00 ; '.'
0000000000001df6         db  0x00 ; '.'
0000000000001df7         db  0x00 ; '.'
0000000000001df8         db  0x38 ; '8'
0000000000001df9         db  0xcc ; '.'
0000000000001dfa         db  0x21 ; '!'
0000000000001dfb         db  0x00 ; '.'
0000000000001dfc         db  0x00 ; '.'
0000000000001dfd         db  0x00 ; '.'
0000000000001dfe         db  0x00 ; '.'
0000000000001dff         db  0x00 ; '.'
0000000000001e00         db  0x07 ; '.'
0000000000001e01         db  0x00 ; '.'
0000000000001e02         db  0x00 ; '.'
0000000000001e03         db  0x00 ; '.'
0000000000001e04         db  0x0e ; '.'
0000000000001e05         db  0x00 ; '.'
0000000000001e06         db  0x00 ; '.'
0000000000001e07         db  0x00 ; '.'
0000000000001e08         db  0x00 ; '.'
0000000000001e09         db  0x00 ; '.'
0000000000001e0a         db  0x00 ; '.'
0000000000001e0b         db  0x00 ; '.'
0000000000001e0c         db  0x00 ; '.'
0000000000001e0d         db  0x00 ; '.'
0000000000001e0e         db  0x00 ; '.'
0000000000001e0f         db  0x00 ; '.'
0000000000001e10         db  0x40 ; '@'
0000000000001e11         db  0xcc ; '.'
0000000000001e12         db  0x21 ; '!'
0000000000001e13         db  0x00 ; '.'
0000000000001e14         db  0x00 ; '.'
0000000000001e15         db  0x00 ; '.'
0000000000001e16         db  0x00 ; '.'
0000000000001e17         db  0x00 ; '.'
0000000000001e18         db  0x07 ; '.'
0000000000001e19         db  0x00 ; '.'
0000000000001e1a         db  0x00 ; '.'
0000000000001e1b         db  0x00 ; '.'
0000000000001e1c         db  0x0f ; '.'
0000000000001e1d         db  0x00 ; '.'
0000000000001e1e         db  0x00 ; '.'
0000000000001e1f         db  0x00 ; '.'
0000000000001e20         db  0x00 ; '.'
0000000000001e21         db  0x00 ; '.'
0000000000001e22         db  0x00 ; '.'
0000000000001e23         db  0x00 ; '.'
0000000000001e24         db  0x00 ; '.'
0000000000001e25         db  0x00 ; '.'
0000000000001e26         db  0x00 ; '.'
0000000000001e27         db  0x00 ; '.'
0000000000001e28         db  0x48 ; 'H'
0000000000001e29         db  0xcc ; '.'
0000000000001e2a         db  0x21 ; '!'
0000000000001e2b         db  0x00 ; '.'
0000000000001e2c         db  0x00 ; '.'
0000000000001e2d         db  0x00 ; '.'
0000000000001e2e         db  0x00 ; '.'
0000000000001e2f         db  0x00 ; '.'
0000000000001e30         db  0x07 ; '.'
0000000000001e31         db  0x00 ; '.'
0000000000001e32         db  0x00 ; '.'
0000000000001e33         db  0x00 ; '.'
0000000000001e34         db  0x10 ; '.'
0000000000001e35         db  0x00 ; '.'
0000000000001e36         db  0x00 ; '.'
0000000000001e37         db  0x00 ; '.'
0000000000001e38         db  0x00 ; '.'
0000000000001e39         db  0x00 ; '.'
0000000000001e3a         db  0x00 ; '.'
0000000000001e3b         db  0x00 ; '.'
0000000000001e3c         db  0x00 ; '.'
0000000000001e3d         db  0x00 ; '.'
0000000000001e3e         db  0x00 ; '.'
0000000000001e3f         db  0x00 ; '.'
0000000000001e40         db  0x50 ; 'P'
0000000000001e41         db  0xcc ; '.'
0000000000001e42         db  0x21 ; '!'
0000000000001e43         db  0x00 ; '.'
0000000000001e44         db  0x00 ; '.'
0000000000001e45         db  0x00 ; '.'
0000000000001e46         db  0x00 ; '.'
0000000000001e47         db  0x00 ; '.'
0000000000001e48         db  0x07 ; '.'
0000000000001e49         db  0x00 ; '.'
0000000000001e4a         db  0x00 ; '.'
0000000000001e4b         db  0x00 ; '.'
0000000000001e4c         db  0x11 ; '.'
0000000000001e4d         db  0x00 ; '.'
0000000000001e4e         db  0x00 ; '.'
0000000000001e4f         db  0x00 ; '.'
0000000000001e50         db  0x00 ; '.'
0000000000001e51         db  0x00 ; '.'
0000000000001e52         db  0x00 ; '.'
0000000000001e53         db  0x00 ; '.'
0000000000001e54         db  0x00 ; '.'
0000000000001e55         db  0x00 ; '.'
0000000000001e56         db  0x00 ; '.'
0000000000001e57         db  0x00 ; '.'
0000000000001e58         db  0x58 ; 'X'
0000000000001e59         db  0xcc ; '.'
0000000000001e5a         db  0x21 ; '!'
0000000000001e5b         db  0x00 ; '.'
0000000000001e5c         db  0x00 ; '.'
0000000000001e5d         db  0x00 ; '.'
0000000000001e5e         db  0x00 ; '.'
0000000000001e5f         db  0x00 ; '.'
0000000000001e60         db  0x07 ; '.'
0000000000001e61         db  0x00 ; '.'
0000000000001e62         db  0x00 ; '.'
0000000000001e63         db  0x00 ; '.'
0000000000001e64         db  0x12 ; '.'
0000000000001e65         db  0x00 ; '.'
0000000000001e66         db  0x00 ; '.'
0000000000001e67         db  0x00 ; '.'
0000000000001e68         db  0x00 ; '.'
0000000000001e69         db  0x00 ; '.'
0000000000001e6a         db  0x00 ; '.'
0000000000001e6b         db  0x00 ; '.'
0000000000001e6c         db  0x00 ; '.'
0000000000001e6d         db  0x00 ; '.'
0000000000001e6e         db  0x00 ; '.'
0000000000001e6f         db  0x00 ; '.'
0000000000001e70         db  0x60 ; '`'
0000000000001e71         db  0xcc ; '.'
0000000000001e72         db  0x21 ; '!'
0000000000001e73         db  0x00 ; '.'
0000000000001e74         db  0x00 ; '.'
0000000000001e75         db  0x00 ; '.'
0000000000001e76         db  0x00 ; '.'
0000000000001e77         db  0x00 ; '.'
0000000000001e78         db  0x07 ; '.'
0000000000001e79         db  0x00 ; '.'
0000000000001e7a         db  0x00 ; '.'
0000000000001e7b         db  0x00 ; '.'
0000000000001e7c         db  0x13 ; '.'
0000000000001e7d         db  0x00 ; '.'
0000000000001e7e         db  0x00 ; '.'
0000000000001e7f         db  0x00 ; '.'
0000000000001e80         db  0x00 ; '.'
0000000000001e81         db  0x00 ; '.'
0000000000001e82         db  0x00 ; '.'
0000000000001e83         db  0x00 ; '.'
0000000000001e84         db  0x00 ; '.'
0000000000001e85         db  0x00 ; '.'
0000000000001e86         db  0x00 ; '.'
0000000000001e87         db  0x00 ; '.'
0000000000001e88         db  0x68 ; 'h'
0000000000001e89         db  0xcc ; '.'
0000000000001e8a         db  0x21 ; '!'
0000000000001e8b         db  0x00 ; '.'
0000000000001e8c         db  0x00 ; '.'
0000000000001e8d         db  0x00 ; '.'
0000000000001e8e         db  0x00 ; '.'
0000000000001e8f         db  0x00 ; '.'
0000000000001e90         db  0x07 ; '.'
0000000000001e91         db  0x00 ; '.'
0000000000001e92         db  0x00 ; '.'
0000000000001e93         db  0x00 ; '.'
0000000000001e94         db  0x14 ; '.'
0000000000001e95         db  0x00 ; '.'
0000000000001e96         db  0x00 ; '.'
0000000000001e97         db  0x00 ; '.'
0000000000001e98         db  0x00 ; '.'
0000000000001e99         db  0x00 ; '.'
0000000000001e9a         db  0x00 ; '.'
0000000000001e9b         db  0x00 ; '.'
0000000000001e9c         db  0x00 ; '.'
0000000000001e9d         db  0x00 ; '.'
0000000000001e9e         db  0x00 ; '.'
0000000000001e9f         db  0x00 ; '.'
0000000000001ea0         db  0x70 ; 'p'
0000000000001ea1         db  0xcc ; '.'
0000000000001ea2         db  0x21 ; '!'
0000000000001ea3         db  0x00 ; '.'
0000000000001ea4         db  0x00 ; '.'
0000000000001ea5         db  0x00 ; '.'
0000000000001ea6         db  0x00 ; '.'
0000000000001ea7         db  0x00 ; '.'
0000000000001ea8         db  0x07 ; '.'
0000000000001ea9         db  0x00 ; '.'
0000000000001eaa         db  0x00 ; '.'
0000000000001eab         db  0x00 ; '.'
0000000000001eac         db  0x15 ; '.'
0000000000001ead         db  0x00 ; '.'
0000000000001eae         db  0x00 ; '.'
0000000000001eaf         db  0x00 ; '.'
0000000000001eb0         db  0x00 ; '.'
0000000000001eb1         db  0x00 ; '.'
0000000000001eb2         db  0x00 ; '.'
0000000000001eb3         db  0x00 ; '.'
0000000000001eb4         db  0x00 ; '.'
0000000000001eb5         db  0x00 ; '.'
0000000000001eb6         db  0x00 ; '.'
0000000000001eb7         db  0x00 ; '.'
0000000000001eb8         db  0x78 ; 'x'
0000000000001eb9         db  0xcc ; '.'
0000000000001eba         db  0x21 ; '!'
0000000000001ebb         db  0x00 ; '.'
0000000000001ebc         db  0x00 ; '.'
0000000000001ebd         db  0x00 ; '.'
0000000000001ebe         db  0x00 ; '.'
0000000000001ebf         db  0x00 ; '.'
0000000000001ec0         db  0x07 ; '.'
0000000000001ec1         db  0x00 ; '.'
0000000000001ec2         db  0x00 ; '.'
0000000000001ec3         db  0x00 ; '.'
0000000000001ec4         db  0x16 ; '.'
0000000000001ec5         db  0x00 ; '.'
0000000000001ec6         db  0x00 ; '.'
0000000000001ec7         db  0x00 ; '.'
0000000000001ec8         db  0x00 ; '.'
0000000000001ec9         db  0x00 ; '.'
0000000000001eca         db  0x00 ; '.'
0000000000001ecb         db  0x00 ; '.'
0000000000001ecc         db  0x00 ; '.'
0000000000001ecd         db  0x00 ; '.'
0000000000001ece         db  0x00 ; '.'
0000000000001ecf         db  0x00 ; '.'
0000000000001ed0         db  0x80 ; '.'
0000000000001ed1         db  0xcc ; '.'
0000000000001ed2         db  0x21 ; '!'
0000000000001ed3         db  0x00 ; '.'
0000000000001ed4         db  0x00 ; '.'
0000000000001ed5         db  0x00 ; '.'
0000000000001ed6         db  0x00 ; '.'
0000000000001ed7         db  0x00 ; '.'
0000000000001ed8         db  0x07 ; '.'
0000000000001ed9         db  0x00 ; '.'
0000000000001eda         db  0x00 ; '.'
0000000000001edb         db  0x00 ; '.'
0000000000001edc         db  0x17 ; '.'
0000000000001edd         db  0x00 ; '.'
0000000000001ede         db  0x00 ; '.'
0000000000001edf         db  0x00 ; '.'
0000000000001ee0         db  0x00 ; '.'
0000000000001ee1         db  0x00 ; '.'
0000000000001ee2         db  0x00 ; '.'
0000000000001ee3         db  0x00 ; '.'
0000000000001ee4         db  0x00 ; '.'
0000000000001ee5         db  0x00 ; '.'
0000000000001ee6         db  0x00 ; '.'
0000000000001ee7         db  0x00 ; '.'
0000000000001ee8         db  0x88 ; '.'
0000000000001ee9         db  0xcc ; '.'
0000000000001eea         db  0x21 ; '!'
0000000000001eeb         db  0x00 ; '.'
0000000000001eec         db  0x00 ; '.'
0000000000001eed         db  0x00 ; '.'
0000000000001eee         db  0x00 ; '.'
0000000000001eef         db  0x00 ; '.'
0000000000001ef0         db  0x07 ; '.'
0000000000001ef1         db  0x00 ; '.'
0000000000001ef2         db  0x00 ; '.'
0000000000001ef3         db  0x00 ; '.'
0000000000001ef4         db  0x18 ; '.'
0000000000001ef5         db  0x00 ; '.'
0000000000001ef6         db  0x00 ; '.'
0000000000001ef7         db  0x00 ; '.'
0000000000001ef8         db  0x00 ; '.'
0000000000001ef9         db  0x00 ; '.'
0000000000001efa         db  0x00 ; '.'
0000000000001efb         db  0x00 ; '.'
0000000000001efc         db  0x00 ; '.'
0000000000001efd         db  0x00 ; '.'
0000000000001efe         db  0x00 ; '.'
0000000000001eff         db  0x00 ; '.'
0000000000001f00         db  0x90 ; '.'
0000000000001f01         db  0xcc ; '.'
0000000000001f02         db  0x21 ; '!'
0000000000001f03         db  0x00 ; '.'
0000000000001f04         db  0x00 ; '.'
0000000000001f05         db  0x00 ; '.'
0000000000001f06         db  0x00 ; '.'
0000000000001f07         db  0x00 ; '.'
0000000000001f08         db  0x07 ; '.'
0000000000001f09         db  0x00 ; '.'
0000000000001f0a         db  0x00 ; '.'
0000000000001f0b         db  0x00 ; '.'
0000000000001f0c         db  0x19 ; '.'
0000000000001f0d         db  0x00 ; '.'
0000000000001f0e         db  0x00 ; '.'
0000000000001f0f         db  0x00 ; '.'
0000000000001f10         db  0x00 ; '.'
0000000000001f11         db  0x00 ; '.'
0000000000001f12         db  0x00 ; '.'
0000000000001f13         db  0x00 ; '.'
0000000000001f14         db  0x00 ; '.'
0000000000001f15         db  0x00 ; '.'
0000000000001f16         db  0x00 ; '.'
0000000000001f17         db  0x00 ; '.'
0000000000001f18         db  0x98 ; '.'
0000000000001f19         db  0xcc ; '.'
0000000000001f1a         db  0x21 ; '!'
0000000000001f1b         db  0x00 ; '.'
0000000000001f1c         db  0x00 ; '.'
0000000000001f1d         db  0x00 ; '.'
0000000000001f1e         db  0x00 ; '.'
0000000000001f1f         db  0x00 ; '.'
0000000000001f20         db  0x07 ; '.'
0000000000001f21         db  0x00 ; '.'
0000000000001f22         db  0x00 ; '.'
0000000000001f23         db  0x00 ; '.'
0000000000001f24         db  0x1a ; '.'
0000000000001f25         db  0x00 ; '.'
0000000000001f26         db  0x00 ; '.'
0000000000001f27         db  0x00 ; '.'
0000000000001f28         db  0x00 ; '.'
0000000000001f29         db  0x00 ; '.'
0000000000001f2a         db  0x00 ; '.'
0000000000001f2b         db  0x00 ; '.'
0000000000001f2c         db  0x00 ; '.'
0000000000001f2d         db  0x00 ; '.'
0000000000001f2e         db  0x00 ; '.'
0000000000001f2f         db  0x00 ; '.'
0000000000001f30         db  0xa0 ; '.'
0000000000001f31         db  0xcc ; '.'
0000000000001f32         db  0x21 ; '!'
0000000000001f33         db  0x00 ; '.'
0000000000001f34         db  0x00 ; '.'
0000000000001f35         db  0x00 ; '.'
0000000000001f36         db  0x00 ; '.'
0000000000001f37         db  0x00 ; '.'
0000000000001f38         db  0x07 ; '.'
0000000000001f39         db  0x00 ; '.'
0000000000001f3a         db  0x00 ; '.'
0000000000001f3b         db  0x00 ; '.'
0000000000001f3c         db  0x1b ; '.'
0000000000001f3d         db  0x00 ; '.'
0000000000001f3e         db  0x00 ; '.'
0000000000001f3f         db  0x00 ; '.'
0000000000001f40         db  0x00 ; '.'
0000000000001f41         db  0x00 ; '.'
0000000000001f42         db  0x00 ; '.'
0000000000001f43         db  0x00 ; '.'
0000000000001f44         db  0x00 ; '.'
0000000000001f45         db  0x00 ; '.'
0000000000001f46         db  0x00 ; '.'
0000000000001f47         db  0x00 ; '.'
0000000000001f48         db  0xa8 ; '.'
0000000000001f49         db  0xcc ; '.'
0000000000001f4a         db  0x21 ; '!'
0000000000001f4b         db  0x00 ; '.'
0000000000001f4c         db  0x00 ; '.'
0000000000001f4d         db  0x00 ; '.'
0000000000001f4e         db  0x00 ; '.'
0000000000001f4f         db  0x00 ; '.'
0000000000001f50         db  0x07 ; '.'
0000000000001f51         db  0x00 ; '.'
0000000000001f52         db  0x00 ; '.'
0000000000001f53         db  0x00 ; '.'
0000000000001f54         db  0x1c ; '.'
0000000000001f55         db  0x00 ; '.'
0000000000001f56         db  0x00 ; '.'
0000000000001f57         db  0x00 ; '.'
0000000000001f58         db  0x00 ; '.'
0000000000001f59         db  0x00 ; '.'
0000000000001f5a         db  0x00 ; '.'
0000000000001f5b         db  0x00 ; '.'
0000000000001f5c         db  0x00 ; '.'
0000000000001f5d         db  0x00 ; '.'
0000000000001f5e         db  0x00 ; '.'
0000000000001f5f         db  0x00 ; '.'
0000000000001f60         db  0xb0 ; '.'
0000000000001f61         db  0xcc ; '.'
0000000000001f62         db  0x21 ; '!'
0000000000001f63         db  0x00 ; '.'
0000000000001f64         db  0x00 ; '.'
0000000000001f65         db  0x00 ; '.'
0000000000001f66         db  0x00 ; '.'
0000000000001f67         db  0x00 ; '.'
0000000000001f68         db  0x07 ; '.'
0000000000001f69         db  0x00 ; '.'
0000000000001f6a         db  0x00 ; '.'
0000000000001f6b         db  0x00 ; '.'
0000000000001f6c         db  0x1d ; '.'
0000000000001f6d         db  0x00 ; '.'
0000000000001f6e         db  0x00 ; '.'
0000000000001f6f         db  0x00 ; '.'
0000000000001f70         db  0x00 ; '.'
0000000000001f71         db  0x00 ; '.'
0000000000001f72         db  0x00 ; '.'
0000000000001f73         db  0x00 ; '.'
0000000000001f74         db  0x00 ; '.'
0000000000001f75         db  0x00 ; '.'
0000000000001f76         db  0x00 ; '.'
0000000000001f77         db  0x00 ; '.'
0000000000001f78         db  0xb8 ; '.'
0000000000001f79         db  0xcc ; '.'
0000000000001f7a         db  0x21 ; '!'
0000000000001f7b         db  0x00 ; '.'
0000000000001f7c         db  0x00 ; '.'
0000000000001f7d         db  0x00 ; '.'
0000000000001f7e         db  0x00 ; '.'
0000000000001f7f         db  0x00 ; '.'
0000000000001f80         db  0x07 ; '.'
0000000000001f81         db  0x00 ; '.'
0000000000001f82         db  0x00 ; '.'
0000000000001f83         db  0x00 ; '.'
0000000000001f84         db  0x1e ; '.'
0000000000001f85         db  0x00 ; '.'
0000000000001f86         db  0x00 ; '.'
0000000000001f87         db  0x00 ; '.'
0000000000001f88         db  0x00 ; '.'
0000000000001f89         db  0x00 ; '.'
0000000000001f8a         db  0x00 ; '.'
0000000000001f8b         db  0x00 ; '.'
0000000000001f8c         db  0x00 ; '.'
0000000000001f8d         db  0x00 ; '.'
0000000000001f8e         db  0x00 ; '.'
0000000000001f8f         db  0x00 ; '.'
0000000000001f90         db  0xc0 ; '.'
0000000000001f91         db  0xcc ; '.'
0000000000001f92         db  0x21 ; '!'
0000000000001f93         db  0x00 ; '.'
0000000000001f94         db  0x00 ; '.'
0000000000001f95         db  0x00 ; '.'
0000000000001f96         db  0x00 ; '.'
0000000000001f97         db  0x00 ; '.'
0000000000001f98         db  0x07 ; '.'
0000000000001f99         db  0x00 ; '.'
0000000000001f9a         db  0x00 ; '.'
0000000000001f9b         db  0x00 ; '.'
0000000000001f9c         db  0x1f ; '.'
0000000000001f9d         db  0x00 ; '.'
0000000000001f9e         db  0x00 ; '.'
0000000000001f9f         db  0x00 ; '.'
0000000000001fa0         db  0x00 ; '.'
0000000000001fa1         db  0x00 ; '.'
0000000000001fa2         db  0x00 ; '.'
0000000000001fa3         db  0x00 ; '.'
0000000000001fa4         db  0x00 ; '.'
0000000000001fa5         db  0x00 ; '.'
0000000000001fa6         db  0x00 ; '.'
0000000000001fa7         db  0x00 ; '.'
0000000000001fa8         db  0xc8 ; '.'
0000000000001fa9         db  0xcc ; '.'
0000000000001faa         db  0x21 ; '!'
0000000000001fab         db  0x00 ; '.'
0000000000001fac         db  0x00 ; '.'
0000000000001fad         db  0x00 ; '.'
0000000000001fae         db  0x00 ; '.'
0000000000001faf         db  0x00 ; '.'
0000000000001fb0         db  0x07 ; '.'
0000000000001fb1         db  0x00 ; '.'
0000000000001fb2         db  0x00 ; '.'
0000000000001fb3         db  0x00 ; '.'
0000000000001fb4         db  0x20 ; ' '
0000000000001fb5         db  0x00 ; '.'
0000000000001fb6         db  0x00 ; '.'
0000000000001fb7         db  0x00 ; '.'
0000000000001fb8         db  0x00 ; '.'
0000000000001fb9         db  0x00 ; '.'
0000000000001fba         db  0x00 ; '.'
0000000000001fbb         db  0x00 ; '.'
0000000000001fbc         db  0x00 ; '.'
0000000000001fbd         db  0x00 ; '.'
0000000000001fbe         db  0x00 ; '.'
0000000000001fbf         db  0x00 ; '.'
0000000000001fc0         db  0xd0 ; '.'
0000000000001fc1         db  0xcc ; '.'
0000000000001fc2         db  0x21 ; '!'
0000000000001fc3         db  0x00 ; '.'
0000000000001fc4         db  0x00 ; '.'
0000000000001fc5         db  0x00 ; '.'
0000000000001fc6         db  0x00 ; '.'
0000000000001fc7         db  0x00 ; '.'
0000000000001fc8         db  0x07 ; '.'
0000000000001fc9         db  0x00 ; '.'
0000000000001fca         db  0x00 ; '.'
0000000000001fcb         db  0x00 ; '.'
0000000000001fcc         db  0x21 ; '!'
0000000000001fcd         db  0x00 ; '.'
0000000000001fce         db  0x00 ; '.'
0000000000001fcf         db  0x00 ; '.'
0000000000001fd0         db  0x00 ; '.'
0000000000001fd1         db  0x00 ; '.'
0000000000001fd2         db  0x00 ; '.'
0000000000001fd3         db  0x00 ; '.'
0000000000001fd4         db  0x00 ; '.'
0000000000001fd5         db  0x00 ; '.'
0000000000001fd6         db  0x00 ; '.'
0000000000001fd7         db  0x00 ; '.'
0000000000001fd8         db  0xd8 ; '.'
0000000000001fd9         db  0xcc ; '.'
0000000000001fda         db  0x21 ; '!'
0000000000001fdb         db  0x00 ; '.'
0000000000001fdc         db  0x00 ; '.'
0000000000001fdd         db  0x00 ; '.'
0000000000001fde         db  0x00 ; '.'
0000000000001fdf         db  0x00 ; '.'
0000000000001fe0         db  0x07 ; '.'
0000000000001fe1         db  0x00 ; '.'
0000000000001fe2         db  0x00 ; '.'
0000000000001fe3         db  0x00 ; '.'
0000000000001fe4         db  0x22 ; '"'
0000000000001fe5         db  0x00 ; '.'
0000000000001fe6         db  0x00 ; '.'
0000000000001fe7         db  0x00 ; '.'
0000000000001fe8         db  0x00 ; '.'
0000000000001fe9         db  0x00 ; '.'
0000000000001fea         db  0x00 ; '.'
0000000000001feb         db  0x00 ; '.'
0000000000001fec         db  0x00 ; '.'
0000000000001fed         db  0x00 ; '.'
0000000000001fee         db  0x00 ; '.'
0000000000001fef         db  0x00 ; '.'
0000000000001ff0         db  0xe0 ; '.'
0000000000001ff1         db  0xcc ; '.'
0000000000001ff2         db  0x21 ; '!'
0000000000001ff3         db  0x00 ; '.'
0000000000001ff4         db  0x00 ; '.'
0000000000001ff5         db  0x00 ; '.'
0000000000001ff6         db  0x00 ; '.'
0000000000001ff7         db  0x00 ; '.'
0000000000001ff8         db  0x07 ; '.'
0000000000001ff9         db  0x00 ; '.'
0000000000001ffa         db  0x00 ; '.'
0000000000001ffb         db  0x00 ; '.'
0000000000001ffc         db  0x23 ; '#'
0000000000001ffd         db  0x00 ; '.'
0000000000001ffe         db  0x00 ; '.'
0000000000001fff         db  0x00 ; '.'
0000000000002000         db  0x00 ; '.'                                         ; DATA XREF=copy_internal+6333, buffer_lcm+11, strmode+47
0000000000002001         db  0x00 ; '.'
0000000000002002         db  0x00 ; '.'
0000000000002003         db  0x00 ; '.'
0000000000002004         db  0x00 ; '.'
0000000000002005         db  0x00 ; '.'
0000000000002006         db  0x00 ; '.'
0000000000002007         db  0x00 ; '.'
0000000000002008         db  0xe8 ; '.'
0000000000002009         db  0xcc ; '.'
000000000000200a         db  0x21 ; '!'
000000000000200b         db  0x00 ; '.'
000000000000200c         db  0x00 ; '.'
000000000000200d         db  0x00 ; '.'
000000000000200e         db  0x00 ; '.'
000000000000200f         db  0x00 ; '.'
0000000000002010         db  0x07 ; '.'
0000000000002011         db  0x00 ; '.'
0000000000002012         db  0x00 ; '.'
0000000000002013         db  0x00 ; '.'
0000000000002014         db  0x24 ; '$'
0000000000002015         db  0x00 ; '.'
0000000000002016         db  0x00 ; '.'
0000000000002017         db  0x00 ; '.'
0000000000002018         db  0x00 ; '.'
0000000000002019         db  0x00 ; '.'
000000000000201a         db  0x00 ; '.'
000000000000201b         db  0x00 ; '.'
000000000000201c         db  0x00 ; '.'
000000000000201d         db  0x00 ; '.'
000000000000201e         db  0x00 ; '.'
000000000000201f         db  0x00 ; '.'
0000000000002020         db  0xf0 ; '.'
0000000000002021         db  0xcc ; '.'
0000000000002022         db  0x21 ; '!'
0000000000002023         db  0x00 ; '.'
0000000000002024         db  0x00 ; '.'
0000000000002025         db  0x00 ; '.'
0000000000002026         db  0x00 ; '.'
0000000000002027         db  0x00 ; '.'
0000000000002028         db  0x07 ; '.'
0000000000002029         db  0x00 ; '.'
000000000000202a         db  0x00 ; '.'
000000000000202b         db  0x00 ; '.'
000000000000202c         db  0x25 ; '%'
000000000000202d         db  0x00 ; '.'
000000000000202e         db  0x00 ; '.'
000000000000202f         db  0x00 ; '.'
0000000000002030         db  0x00 ; '.'
0000000000002031         db  0x00 ; '.'
0000000000002032         db  0x00 ; '.'
0000000000002033         db  0x00 ; '.'
0000000000002034         db  0x00 ; '.'
0000000000002035         db  0x00 ; '.'
0000000000002036         db  0x00 ; '.'
0000000000002037         db  0x00 ; '.'
0000000000002038         db  0xf8 ; '.'
0000000000002039         db  0xcc ; '.'
000000000000203a         db  0x21 ; '!'
000000000000203b         db  0x00 ; '.'
000000000000203c         db  0x00 ; '.'
000000000000203d         db  0x00 ; '.'
000000000000203e         db  0x00 ; '.'
000000000000203f         db  0x00 ; '.'
0000000000002040         db  0x07 ; '.'
0000000000002041         db  0x00 ; '.'
0000000000002042         db  0x00 ; '.'
0000000000002043         db  0x00 ; '.'
0000000000002044         db  0x26 ; '&'
0000000000002045         db  0x00 ; '.'
0000000000002046         db  0x00 ; '.'
0000000000002047         db  0x00 ; '.'
0000000000002048         db  0x00 ; '.'
0000000000002049         db  0x00 ; '.'
000000000000204a         db  0x00 ; '.'
000000000000204b         db  0x00 ; '.'
000000000000204c         db  0x00 ; '.'
000000000000204d         db  0x00 ; '.'
000000000000204e         db  0x00 ; '.'
000000000000204f         db  0x00 ; '.'
0000000000002050         db  0x00 ; '.'
0000000000002051         db  0xcd ; '.'
0000000000002052         db  0x21 ; '!'
0000000000002053         db  0x00 ; '.'
0000000000002054         db  0x00 ; '.'
0000000000002055         db  0x00 ; '.'
0000000000002056         db  0x00 ; '.'
0000000000002057         db  0x00 ; '.'
0000000000002058         db  0x07 ; '.'
0000000000002059         db  0x00 ; '.'
000000000000205a         db  0x00 ; '.'
000000000000205b         db  0x00 ; '.'
000000000000205c         db  0x27 ; '''
000000000000205d         db  0x00 ; '.'
000000000000205e         db  0x00 ; '.'
000000000000205f         db  0x00 ; '.'
0000000000002060         db  0x00 ; '.'
0000000000002061         db  0x00 ; '.'
0000000000002062         db  0x00 ; '.'
0000000000002063         db  0x00 ; '.'
0000000000002064         db  0x00 ; '.'
0000000000002065         db  0x00 ; '.'
0000000000002066         db  0x00 ; '.'
0000000000002067         db  0x00 ; '.'
0000000000002068         db  0x08 ; '.'
0000000000002069         db  0xcd ; '.'
000000000000206a         db  0x21 ; '!'
000000000000206b         db  0x00 ; '.'
000000000000206c         db  0x00 ; '.'
000000000000206d         db  0x00 ; '.'
000000000000206e         db  0x00 ; '.'
000000000000206f         db  0x00 ; '.'
0000000000002070         db  0x07 ; '.'
0000000000002071         db  0x00 ; '.'
0000000000002072         db  0x00 ; '.'
0000000000002073         db  0x00 ; '.'
0000000000002074         db  0x28 ; '('
0000000000002075         db  0x00 ; '.'
0000000000002076         db  0x00 ; '.'
0000000000002077         db  0x00 ; '.'
0000000000002078         db  0x00 ; '.'
0000000000002079         db  0x00 ; '.'
000000000000207a         db  0x00 ; '.'
000000000000207b         db  0x00 ; '.'
000000000000207c         db  0x00 ; '.'
000000000000207d         db  0x00 ; '.'
000000000000207e         db  0x00 ; '.'
000000000000207f         db  0x00 ; '.'
0000000000002080         db  0x10 ; '.'
0000000000002081         db  0xcd ; '.'
0000000000002082         db  0x21 ; '!'
0000000000002083         db  0x00 ; '.'
0000000000002084         db  0x00 ; '.'
0000000000002085         db  0x00 ; '.'
0000000000002086         db  0x00 ; '.'
0000000000002087         db  0x00 ; '.'
0000000000002088         db  0x07 ; '.'
0000000000002089         db  0x00 ; '.'
000000000000208a         db  0x00 ; '.'
000000000000208b         db  0x00 ; '.'
000000000000208c         db  0x29 ; ')'
000000000000208d         db  0x00 ; '.'
000000000000208e         db  0x00 ; '.'
000000000000208f         db  0x00 ; '.'
0000000000002090         db  0x00 ; '.'
0000000000002091         db  0x00 ; '.'
0000000000002092         db  0x00 ; '.'
0000000000002093         db  0x00 ; '.'
0000000000002094         db  0x00 ; '.'
0000000000002095         db  0x00 ; '.'
0000000000002096         db  0x00 ; '.'
0000000000002097         db  0x00 ; '.'
0000000000002098         db  0x18 ; '.'
0000000000002099         db  0xcd ; '.'
000000000000209a         db  0x21 ; '!'
000000000000209b         db  0x00 ; '.'
000000000000209c         db  0x00 ; '.'
000000000000209d         db  0x00 ; '.'
000000000000209e         db  0x00 ; '.'
000000000000209f         db  0x00 ; '.'
00000000000020a0         db  0x07 ; '.'
00000000000020a1         db  0x00 ; '.'
00000000000020a2         db  0x00 ; '.'
00000000000020a3         db  0x00 ; '.'
00000000000020a4         db  0x2a ; '*'
00000000000020a5         db  0x00 ; '.'
00000000000020a6         db  0x00 ; '.'
00000000000020a7         db  0x00 ; '.'
00000000000020a8         db  0x00 ; '.'
00000000000020a9         db  0x00 ; '.'
00000000000020aa         db  0x00 ; '.'
00000000000020ab         db  0x00 ; '.'
00000000000020ac         db  0x00 ; '.'
00000000000020ad         db  0x00 ; '.'
00000000000020ae         db  0x00 ; '.'
00000000000020af         db  0x00 ; '.'
00000000000020b0         db  0x20 ; ' '
00000000000020b1         db  0xcd ; '.'
00000000000020b2         db  0x21 ; '!'
00000000000020b3         db  0x00 ; '.'
00000000000020b4         db  0x00 ; '.'
00000000000020b5         db  0x00 ; '.'
00000000000020b6         db  0x00 ; '.'
00000000000020b7         db  0x00 ; '.'
00000000000020b8         db  0x07 ; '.'
00000000000020b9         db  0x00 ; '.'
00000000000020ba         db  0x00 ; '.'
00000000000020bb         db  0x00 ; '.'
00000000000020bc         db  0x2b ; '+'
00000000000020bd         db  0x00 ; '.'
00000000000020be         db  0x00 ; '.'
00000000000020bf         db  0x00 ; '.'
00000000000020c0         db  0x00 ; '.'
00000000000020c1         db  0x00 ; '.'
00000000000020c2         db  0x00 ; '.'
00000000000020c3         db  0x00 ; '.'
00000000000020c4         db  0x00 ; '.'
00000000000020c5         db  0x00 ; '.'
00000000000020c6         db  0x00 ; '.'
00000000000020c7         db  0x00 ; '.'
00000000000020c8         db  0x28 ; '('
00000000000020c9         db  0xcd ; '.'
00000000000020ca         db  0x21 ; '!'
00000000000020cb         db  0x00 ; '.'
00000000000020cc         db  0x00 ; '.'
00000000000020cd         db  0x00 ; '.'
00000000000020ce         db  0x00 ; '.'
00000000000020cf         db  0x00 ; '.'
00000000000020d0         db  0x07 ; '.'
00000000000020d1         db  0x00 ; '.'
00000000000020d2         db  0x00 ; '.'
00000000000020d3         db  0x00 ; '.'
00000000000020d4         db  0x2c ; ','
00000000000020d5         db  0x00 ; '.'
00000000000020d6         db  0x00 ; '.'
00000000000020d7         db  0x00 ; '.'
00000000000020d8         db  0x00 ; '.'
00000000000020d9         db  0x00 ; '.'
00000000000020da         db  0x00 ; '.'
00000000000020db         db  0x00 ; '.'
00000000000020dc         db  0x00 ; '.'
00000000000020dd         db  0x00 ; '.'
00000000000020de         db  0x00 ; '.'
00000000000020df         db  0x00 ; '.'
00000000000020e0         db  0x30 ; '0'
00000000000020e1         db  0xcd ; '.'
00000000000020e2         db  0x21 ; '!'
00000000000020e3         db  0x00 ; '.'
00000000000020e4         db  0x00 ; '.'
00000000000020e5         db  0x00 ; '.'
00000000000020e6         db  0x00 ; '.'
00000000000020e7         db  0x00 ; '.'
00000000000020e8         db  0x07 ; '.'
00000000000020e9         db  0x00 ; '.'
00000000000020ea         db  0x00 ; '.'
00000000000020eb         db  0x00 ; '.'
00000000000020ec         db  0x2d ; '-'
00000000000020ed         db  0x00 ; '.'
00000000000020ee         db  0x00 ; '.'
00000000000020ef         db  0x00 ; '.'
00000000000020f0         db  0x00 ; '.'
00000000000020f1         db  0x00 ; '.'
00000000000020f2         db  0x00 ; '.'
00000000000020f3         db  0x00 ; '.'
00000000000020f4         db  0x00 ; '.'
00000000000020f5         db  0x00 ; '.'
00000000000020f6         db  0x00 ; '.'
00000000000020f7         db  0x00 ; '.'
00000000000020f8         db  0x38 ; '8'
00000000000020f9         db  0xcd ; '.'
00000000000020fa         db  0x21 ; '!'
00000000000020fb         db  0x00 ; '.'
00000000000020fc         db  0x00 ; '.'
00000000000020fd         db  0x00 ; '.'
00000000000020fe         db  0x00 ; '.'
00000000000020ff         db  0x00 ; '.'
0000000000002100         db  0x07 ; '.'
0000000000002101         db  0x00 ; '.'
0000000000002102         db  0x00 ; '.'
0000000000002103         db  0x00 ; '.'
0000000000002104         db  0x2e ; '.'
0000000000002105         db  0x00 ; '.'
0000000000002106         db  0x00 ; '.'
0000000000002107         db  0x00 ; '.'
0000000000002108         db  0x00 ; '.'
0000000000002109         db  0x00 ; '.'
000000000000210a         db  0x00 ; '.'
000000000000210b         db  0x00 ; '.'
000000000000210c         db  0x00 ; '.'
000000000000210d         db  0x00 ; '.'
000000000000210e         db  0x00 ; '.'
000000000000210f         db  0x00 ; '.'
0000000000002110         db  0x40 ; '@'
0000000000002111         db  0xcd ; '.'
0000000000002112         db  0x21 ; '!'
0000000000002113         db  0x00 ; '.'
0000000000002114         db  0x00 ; '.'
0000000000002115         db  0x00 ; '.'
0000000000002116         db  0x00 ; '.'
0000000000002117         db  0x00 ; '.'
0000000000002118         db  0x07 ; '.'
0000000000002119         db  0x00 ; '.'
000000000000211a         db  0x00 ; '.'
000000000000211b         db  0x00 ; '.'
000000000000211c         db  0x2f ; '/'
000000000000211d         db  0x00 ; '.'
000000000000211e         db  0x00 ; '.'
000000000000211f         db  0x00 ; '.'
0000000000002120         db  0x00 ; '.'
0000000000002121         db  0x00 ; '.'
0000000000002122         db  0x00 ; '.'
0000000000002123         db  0x00 ; '.'
0000000000002124         db  0x00 ; '.'
0000000000002125         db  0x00 ; '.'
0000000000002126         db  0x00 ; '.'
0000000000002127         db  0x00 ; '.'
0000000000002128         db  0x48 ; 'H'
0000000000002129         db  0xcd ; '.'
000000000000212a         db  0x21 ; '!'
000000000000212b         db  0x00 ; '.'
000000000000212c         db  0x00 ; '.'
000000000000212d         db  0x00 ; '.'
000000000000212e         db  0x00 ; '.'
000000000000212f         db  0x00 ; '.'
0000000000002130         db  0x07 ; '.'
0000000000002131         db  0x00 ; '.'
0000000000002132         db  0x00 ; '.'
0000000000002133         db  0x00 ; '.'
0000000000002134         db  0x30 ; '0'
0000000000002135         db  0x00 ; '.'
0000000000002136         db  0x00 ; '.'
0000000000002137         db  0x00 ; '.'
0000000000002138         db  0x00 ; '.'
0000000000002139         db  0x00 ; '.'
000000000000213a         db  0x00 ; '.'
000000000000213b         db  0x00 ; '.'
000000000000213c         db  0x00 ; '.'
000000000000213d         db  0x00 ; '.'
000000000000213e         db  0x00 ; '.'
000000000000213f         db  0x00 ; '.'
0000000000002140         db  0x50 ; 'P'
0000000000002141         db  0xcd ; '.'
0000000000002142         db  0x21 ; '!'
0000000000002143         db  0x00 ; '.'
0000000000002144         db  0x00 ; '.'
0000000000002145         db  0x00 ; '.'
0000000000002146         db  0x00 ; '.'
0000000000002147         db  0x00 ; '.'
0000000000002148         db  0x07 ; '.'
0000000000002149         db  0x00 ; '.'
000000000000214a         db  0x00 ; '.'
000000000000214b         db  0x00 ; '.'
000000000000214c         db  0x31 ; '1'
000000000000214d         db  0x00 ; '.'
000000000000214e         db  0x00 ; '.'
000000000000214f         db  0x00 ; '.'
0000000000002150         db  0x00 ; '.'
0000000000002151         db  0x00 ; '.'
0000000000002152         db  0x00 ; '.'
0000000000002153         db  0x00 ; '.'
0000000000002154         db  0x00 ; '.'
0000000000002155         db  0x00 ; '.'
0000000000002156         db  0x00 ; '.'
0000000000002157         db  0x00 ; '.'
0000000000002158         db  0x58 ; 'X'
0000000000002159         db  0xcd ; '.'
000000000000215a         db  0x21 ; '!'
000000000000215b         db  0x00 ; '.'
000000000000215c         db  0x00 ; '.'
000000000000215d         db  0x00 ; '.'
000000000000215e         db  0x00 ; '.'
000000000000215f         db  0x00 ; '.'
0000000000002160         db  0x07 ; '.'
0000000000002161         db  0x00 ; '.'
0000000000002162         db  0x00 ; '.'
0000000000002163         db  0x00 ; '.'
0000000000002164         db  0x32 ; '2'
0000000000002165         db  0x00 ; '.'
0000000000002166         db  0x00 ; '.'
0000000000002167         db  0x00 ; '.'
0000000000002168         db  0x00 ; '.'
0000000000002169         db  0x00 ; '.'
000000000000216a         db  0x00 ; '.'
000000000000216b         db  0x00 ; '.'
000000000000216c         db  0x00 ; '.'
000000000000216d         db  0x00 ; '.'
000000000000216e         db  0x00 ; '.'
000000000000216f         db  0x00 ; '.'
0000000000002170         db  0x60 ; '`'
0000000000002171         db  0xcd ; '.'
0000000000002172         db  0x21 ; '!'
0000000000002173         db  0x00 ; '.'
0000000000002174         db  0x00 ; '.'
0000000000002175         db  0x00 ; '.'
0000000000002176         db  0x00 ; '.'
0000000000002177         db  0x00 ; '.'
0000000000002178         db  0x07 ; '.'
0000000000002179         db  0x00 ; '.'
000000000000217a         db  0x00 ; '.'
000000000000217b         db  0x00 ; '.'
000000000000217c         db  0x33 ; '3'
000000000000217d         db  0x00 ; '.'
000000000000217e         db  0x00 ; '.'
000000000000217f         db  0x00 ; '.'
0000000000002180         db  0x00 ; '.'
0000000000002181         db  0x00 ; '.'
0000000000002182         db  0x00 ; '.'
0000000000002183         db  0x00 ; '.'
0000000000002184         db  0x00 ; '.'
0000000000002185         db  0x00 ; '.'
0000000000002186         db  0x00 ; '.'
0000000000002187         db  0x00 ; '.'
0000000000002188         db  0x68 ; 'h'
0000000000002189         db  0xcd ; '.'
000000000000218a         db  0x21 ; '!'
000000000000218b         db  0x00 ; '.'
000000000000218c         db  0x00 ; '.'
000000000000218d         db  0x00 ; '.'
000000000000218e         db  0x00 ; '.'
000000000000218f         db  0x00 ; '.'
0000000000002190         db  0x07 ; '.'
0000000000002191         db  0x00 ; '.'
0000000000002192         db  0x00 ; '.'
0000000000002193         db  0x00 ; '.'
0000000000002194         db  0x34 ; '4'
0000000000002195         db  0x00 ; '.'
0000000000002196         db  0x00 ; '.'
0000000000002197         db  0x00 ; '.'
0000000000002198         db  0x00 ; '.'
0000000000002199         db  0x00 ; '.'
000000000000219a         db  0x00 ; '.'
000000000000219b         db  0x00 ; '.'
000000000000219c         db  0x00 ; '.'
000000000000219d         db  0x00 ; '.'
000000000000219e         db  0x00 ; '.'
000000000000219f         db  0x00 ; '.'
00000000000021a0         db  0x70 ; 'p'
00000000000021a1         db  0xcd ; '.'
00000000000021a2         db  0x21 ; '!'
00000000000021a3         db  0x00 ; '.'
00000000000021a4         db  0x00 ; '.'
00000000000021a5         db  0x00 ; '.'
00000000000021a6         db  0x00 ; '.'
00000000000021a7         db  0x00 ; '.'
00000000000021a8         db  0x07 ; '.'
00000000000021a9         db  0x00 ; '.'
00000000000021aa         db  0x00 ; '.'
00000000000021ab         db  0x00 ; '.'
00000000000021ac         db  0x35 ; '5'
00000000000021ad         db  0x00 ; '.'
00000000000021ae         db  0x00 ; '.'
00000000000021af         db  0x00 ; '.'
00000000000021b0         db  0x00 ; '.'
00000000000021b1         db  0x00 ; '.'
00000000000021b2         db  0x00 ; '.'
00000000000021b3         db  0x00 ; '.'
00000000000021b4         db  0x00 ; '.'
00000000000021b5         db  0x00 ; '.'
00000000000021b6         db  0x00 ; '.'
00000000000021b7         db  0x00 ; '.'
00000000000021b8         db  0x78 ; 'x'
00000000000021b9         db  0xcd ; '.'
00000000000021ba         db  0x21 ; '!'
00000000000021bb         db  0x00 ; '.'
00000000000021bc         db  0x00 ; '.'
00000000000021bd         db  0x00 ; '.'
00000000000021be         db  0x00 ; '.'
00000000000021bf         db  0x00 ; '.'
00000000000021c0         db  0x07 ; '.'
00000000000021c1         db  0x00 ; '.'
00000000000021c2         db  0x00 ; '.'
00000000000021c3         db  0x00 ; '.'
00000000000021c4         db  0x36 ; '6'
00000000000021c5         db  0x00 ; '.'
00000000000021c6         db  0x00 ; '.'
00000000000021c7         db  0x00 ; '.'
00000000000021c8         db  0x00 ; '.'
00000000000021c9         db  0x00 ; '.'
00000000000021ca         db  0x00 ; '.'
00000000000021cb         db  0x00 ; '.'
00000000000021cc         db  0x00 ; '.'
00000000000021cd         db  0x00 ; '.'
00000000000021ce         db  0x00 ; '.'
00000000000021cf         db  0x00 ; '.'
00000000000021d0         db  0x80 ; '.'
00000000000021d1         db  0xcd ; '.'
00000000000021d2         db  0x21 ; '!'
00000000000021d3         db  0x00 ; '.'
00000000000021d4         db  0x00 ; '.'
00000000000021d5         db  0x00 ; '.'
00000000000021d6         db  0x00 ; '.'
00000000000021d7         db  0x00 ; '.'
00000000000021d8         db  0x07 ; '.'
00000000000021d9         db  0x00 ; '.'
00000000000021da         db  0x00 ; '.'
00000000000021db         db  0x00 ; '.'
00000000000021dc         db  0x37 ; '7'
00000000000021dd         db  0x00 ; '.'
00000000000021de         db  0x00 ; '.'
00000000000021df         db  0x00 ; '.'
00000000000021e0         db  0x00 ; '.'
00000000000021e1         db  0x00 ; '.'
00000000000021e2         db  0x00 ; '.'
00000000000021e3         db  0x00 ; '.'
00000000000021e4         db  0x00 ; '.'
00000000000021e5         db  0x00 ; '.'
00000000000021e6         db  0x00 ; '.'
00000000000021e7         db  0x00 ; '.'
00000000000021e8         db  0x88 ; '.'
00000000000021e9         db  0xcd ; '.'
00000000000021ea         db  0x21 ; '!'
00000000000021eb         db  0x00 ; '.'
00000000000021ec         db  0x00 ; '.'
00000000000021ed         db  0x00 ; '.'
00000000000021ee         db  0x00 ; '.'
00000000000021ef         db  0x00 ; '.'
00000000000021f0         db  0x07 ; '.'
00000000000021f1         db  0x00 ; '.'
00000000000021f2         db  0x00 ; '.'
00000000000021f3         db  0x00 ; '.'
00000000000021f4         db  0x38 ; '8'
00000000000021f5         db  0x00 ; '.'
00000000000021f6         db  0x00 ; '.'
00000000000021f7         db  0x00 ; '.'
00000000000021f8         db  0x00 ; '.'
00000000000021f9         db  0x00 ; '.'
00000000000021fa         db  0x00 ; '.'
00000000000021fb         db  0x00 ; '.'
00000000000021fc         db  0x00 ; '.'
00000000000021fd         db  0x00 ; '.'
00000000000021fe         db  0x00 ; '.'
00000000000021ff         db  0x00 ; '.'
0000000000002200         db  0x90 ; '.'
0000000000002201         db  0xcd ; '.'
0000000000002202         db  0x21 ; '!'
0000000000002203         db  0x00 ; '.'
0000000000002204         db  0x00 ; '.'
0000000000002205         db  0x00 ; '.'
0000000000002206         db  0x00 ; '.'
0000000000002207         db  0x00 ; '.'
0000000000002208         db  0x07 ; '.'
0000000000002209         db  0x00 ; '.'
000000000000220a         db  0x00 ; '.'
000000000000220b         db  0x00 ; '.'
000000000000220c         db  0x39 ; '9'
000000000000220d         db  0x00 ; '.'
000000000000220e         db  0x00 ; '.'
000000000000220f         db  0x00 ; '.'
0000000000002210         db  0x00 ; '.'
0000000000002211         db  0x00 ; '.'
0000000000002212         db  0x00 ; '.'
0000000000002213         db  0x00 ; '.'
0000000000002214         db  0x00 ; '.'
0000000000002215         db  0x00 ; '.'
0000000000002216         db  0x00 ; '.'
0000000000002217         db  0x00 ; '.'
0000000000002218         db  0x98 ; '.'
0000000000002219         db  0xcd ; '.'
000000000000221a         db  0x21 ; '!'
000000000000221b         db  0x00 ; '.'
000000000000221c         db  0x00 ; '.'
000000000000221d         db  0x00 ; '.'
000000000000221e         db  0x00 ; '.'
000000000000221f         db  0x00 ; '.'
0000000000002220         db  0x07 ; '.'
0000000000002221         db  0x00 ; '.'
0000000000002222         db  0x00 ; '.'
0000000000002223         db  0x00 ; '.'
0000000000002224         db  0x3a ; ':'
0000000000002225         db  0x00 ; '.'
0000000000002226         db  0x00 ; '.'
0000000000002227         db  0x00 ; '.'
0000000000002228         db  0x00 ; '.'
0000000000002229         db  0x00 ; '.'
000000000000222a         db  0x00 ; '.'
000000000000222b         db  0x00 ; '.'
000000000000222c         db  0x00 ; '.'
000000000000222d         db  0x00 ; '.'
000000000000222e         db  0x00 ; '.'
000000000000222f         db  0x00 ; '.'
0000000000002230         db  0xa0 ; '.'
0000000000002231         db  0xcd ; '.'
0000000000002232         db  0x21 ; '!'
0000000000002233         db  0x00 ; '.'
0000000000002234         db  0x00 ; '.'
0000000000002235         db  0x00 ; '.'
0000000000002236         db  0x00 ; '.'
0000000000002237         db  0x00 ; '.'
0000000000002238         db  0x07 ; '.'
0000000000002239         db  0x00 ; '.'
000000000000223a         db  0x00 ; '.'
000000000000223b         db  0x00 ; '.'
000000000000223c         db  0x3b ; ';'
000000000000223d         db  0x00 ; '.'
000000000000223e         db  0x00 ; '.'
000000000000223f         db  0x00 ; '.'
0000000000002240         db  0x00 ; '.'
0000000000002241         db  0x00 ; '.'
0000000000002242         db  0x00 ; '.'
0000000000002243         db  0x00 ; '.'
0000000000002244         db  0x00 ; '.'
0000000000002245         db  0x00 ; '.'
0000000000002246         db  0x00 ; '.'
0000000000002247         db  0x00 ; '.'
0000000000002248         db  0xa8 ; '.'
0000000000002249         db  0xcd ; '.'
000000000000224a         db  0x21 ; '!'
000000000000224b         db  0x00 ; '.'
000000000000224c         db  0x00 ; '.'
000000000000224d         db  0x00 ; '.'
000000000000224e         db  0x00 ; '.'
000000000000224f         db  0x00 ; '.'
0000000000002250         db  0x07 ; '.'
0000000000002251         db  0x00 ; '.'
0000000000002252         db  0x00 ; '.'
0000000000002253         db  0x00 ; '.'
0000000000002254         db  0x3c ; '<'
0000000000002255         db  0x00 ; '.'
0000000000002256         db  0x00 ; '.'
0000000000002257         db  0x00 ; '.'
0000000000002258         db  0x00 ; '.'
0000000000002259         db  0x00 ; '.'
000000000000225a         db  0x00 ; '.'
000000000000225b         db  0x00 ; '.'
000000000000225c         db  0x00 ; '.'
000000000000225d         db  0x00 ; '.'
000000000000225e         db  0x00 ; '.'
000000000000225f         db  0x00 ; '.'
0000000000002260         db  0xb0 ; '.'
0000000000002261         db  0xcd ; '.'
0000000000002262         db  0x21 ; '!'
0000000000002263         db  0x00 ; '.'
0000000000002264         db  0x00 ; '.'
0000000000002265         db  0x00 ; '.'
0000000000002266         db  0x00 ; '.'
0000000000002267         db  0x00 ; '.'
0000000000002268         db  0x07 ; '.'
0000000000002269         db  0x00 ; '.'
000000000000226a         db  0x00 ; '.'
000000000000226b         db  0x00 ; '.'
000000000000226c         db  0x3e ; '>'
000000000000226d         db  0x00 ; '.'
000000000000226e         db  0x00 ; '.'
000000000000226f         db  0x00 ; '.'
0000000000002270         db  0x00 ; '.'
0000000000002271         db  0x00 ; '.'
0000000000002272         db  0x00 ; '.'
0000000000002273         db  0x00 ; '.'
0000000000002274         db  0x00 ; '.'
0000000000002275         db  0x00 ; '.'
0000000000002276         db  0x00 ; '.'
0000000000002277         db  0x00 ; '.'
0000000000002278         db  0xb8 ; '.'
0000000000002279         db  0xcd ; '.'
000000000000227a         db  0x21 ; '!'
000000000000227b         db  0x00 ; '.'
000000000000227c         db  0x00 ; '.'
000000000000227d         db  0x00 ; '.'
000000000000227e         db  0x00 ; '.'
000000000000227f         db  0x00 ; '.'
0000000000002280         db  0x07 ; '.'
0000000000002281         db  0x00 ; '.'
0000000000002282         db  0x00 ; '.'
0000000000002283         db  0x00 ; '.'
0000000000002284         db  0x3f ; '?'
0000000000002285         db  0x00 ; '.'
0000000000002286         db  0x00 ; '.'
0000000000002287         db  0x00 ; '.'
0000000000002288         db  0x00 ; '.'
0000000000002289         db  0x00 ; '.'
000000000000228a         db  0x00 ; '.'
000000000000228b         db  0x00 ; '.'
000000000000228c         db  0x00 ; '.'
000000000000228d         db  0x00 ; '.'
000000000000228e         db  0x00 ; '.'
000000000000228f         db  0x00 ; '.'
0000000000002290         db  0xc0 ; '.'
0000000000002291         db  0xcd ; '.'
0000000000002292         db  0x21 ; '!'
0000000000002293         db  0x00 ; '.'
0000000000002294         db  0x00 ; '.'
0000000000002295         db  0x00 ; '.'
0000000000002296         db  0x00 ; '.'
0000000000002297         db  0x00 ; '.'
0000000000002298         db  0x07 ; '.'
0000000000002299         db  0x00 ; '.'
000000000000229a         db  0x00 ; '.'
000000000000229b         db  0x00 ; '.'
000000000000229c         db  0x40 ; '@'
000000000000229d         db  0x00 ; '.'
000000000000229e         db  0x00 ; '.'
000000000000229f         db  0x00 ; '.'
00000000000022a0         db  0x00 ; '.'
00000000000022a1         db  0x00 ; '.'
00000000000022a2         db  0x00 ; '.'
00000000000022a3         db  0x00 ; '.'
00000000000022a4         db  0x00 ; '.'
00000000000022a5         db  0x00 ; '.'
00000000000022a6         db  0x00 ; '.'
00000000000022a7         db  0x00 ; '.'
00000000000022a8         db  0xc8 ; '.'
00000000000022a9         db  0xcd ; '.'
00000000000022aa         db  0x21 ; '!'
00000000000022ab         db  0x00 ; '.'
00000000000022ac         db  0x00 ; '.'
00000000000022ad         db  0x00 ; '.'
00000000000022ae         db  0x00 ; '.'
00000000000022af         db  0x00 ; '.'
00000000000022b0         db  0x07 ; '.'
00000000000022b1         db  0x00 ; '.'
00000000000022b2         db  0x00 ; '.'
00000000000022b3         db  0x00 ; '.'
00000000000022b4         db  0x41 ; 'A'
00000000000022b5         db  0x00 ; '.'
00000000000022b6         db  0x00 ; '.'
00000000000022b7         db  0x00 ; '.'
00000000000022b8         db  0x00 ; '.'
00000000000022b9         db  0x00 ; '.'
00000000000022ba         db  0x00 ; '.'
00000000000022bb         db  0x00 ; '.'
00000000000022bc         db  0x00 ; '.'
00000000000022bd         db  0x00 ; '.'
00000000000022be         db  0x00 ; '.'
00000000000022bf         db  0x00 ; '.'
00000000000022c0         db  0xd0 ; '.'
00000000000022c1         db  0xcd ; '.'
00000000000022c2         db  0x21 ; '!'
00000000000022c3         db  0x00 ; '.'
00000000000022c4         db  0x00 ; '.'
00000000000022c5         db  0x00 ; '.'
00000000000022c6         db  0x00 ; '.'
00000000000022c7         db  0x00 ; '.'
00000000000022c8         db  0x07 ; '.'
00000000000022c9         db  0x00 ; '.'
00000000000022ca         db  0x00 ; '.'
00000000000022cb         db  0x00 ; '.'
00000000000022cc         db  0x42 ; 'B'
00000000000022cd         db  0x00 ; '.'
00000000000022ce         db  0x00 ; '.'
00000000000022cf         db  0x00 ; '.'
00000000000022d0         db  0x00 ; '.'
00000000000022d1         db  0x00 ; '.'
00000000000022d2         db  0x00 ; '.'
00000000000022d3         db  0x00 ; '.'
00000000000022d4         db  0x00 ; '.'
00000000000022d5         db  0x00 ; '.'
00000000000022d6         db  0x00 ; '.'
00000000000022d7         db  0x00 ; '.'
00000000000022d8         db  0xd8 ; '.'
00000000000022d9         db  0xcd ; '.'
00000000000022da         db  0x21 ; '!'
00000000000022db         db  0x00 ; '.'
00000000000022dc         db  0x00 ; '.'
00000000000022dd         db  0x00 ; '.'
00000000000022de         db  0x00 ; '.'
00000000000022df         db  0x00 ; '.'
00000000000022e0         db  0x07 ; '.'
00000000000022e1         db  0x00 ; '.'
00000000000022e2         db  0x00 ; '.'
00000000000022e3         db  0x00 ; '.'
00000000000022e4         db  0x43 ; 'C'
00000000000022e5         db  0x00 ; '.'
00000000000022e6         db  0x00 ; '.'
00000000000022e7         db  0x00 ; '.'
00000000000022e8         db  0x00 ; '.'
00000000000022e9         db  0x00 ; '.'
00000000000022ea         db  0x00 ; '.'
00000000000022eb         db  0x00 ; '.'
00000000000022ec         db  0x00 ; '.'
00000000000022ed         db  0x00 ; '.'
00000000000022ee         db  0x00 ; '.'
00000000000022ef         db  0x00 ; '.'
00000000000022f0         db  0xe0 ; '.'
00000000000022f1         db  0xcd ; '.'
00000000000022f2         db  0x21 ; '!'
00000000000022f3         db  0x00 ; '.'
00000000000022f4         db  0x00 ; '.'
00000000000022f5         db  0x00 ; '.'
00000000000022f6         db  0x00 ; '.'
00000000000022f7         db  0x00 ; '.'
00000000000022f8         db  0x07 ; '.'
00000000000022f9         db  0x00 ; '.'
00000000000022fa         db  0x00 ; '.'
00000000000022fb         db  0x00 ; '.'
00000000000022fc         db  0x44 ; 'D'
00000000000022fd         db  0x00 ; '.'
00000000000022fe         db  0x00 ; '.'
00000000000022ff         db  0x00 ; '.'
0000000000002300         db  0x00 ; '.'
0000000000002301         db  0x00 ; '.'
0000000000002302         db  0x00 ; '.'
0000000000002303         db  0x00 ; '.'
0000000000002304         db  0x00 ; '.'
0000000000002305         db  0x00 ; '.'
0000000000002306         db  0x00 ; '.'
0000000000002307         db  0x00 ; '.'
0000000000002308         db  0xe8 ; '.'
0000000000002309         db  0xcd ; '.'
000000000000230a         db  0x21 ; '!'
000000000000230b         db  0x00 ; '.'
000000000000230c         db  0x00 ; '.'
000000000000230d         db  0x00 ; '.'
000000000000230e         db  0x00 ; '.'
000000000000230f         db  0x00 ; '.'
0000000000002310         db  0x07 ; '.'
0000000000002311         db  0x00 ; '.'
0000000000002312         db  0x00 ; '.'
0000000000002313         db  0x00 ; '.'
0000000000002314         db  0x45 ; 'E'
0000000000002315         db  0x00 ; '.'
0000000000002316         db  0x00 ; '.'
0000000000002317         db  0x00 ; '.'
0000000000002318         db  0x00 ; '.'
0000000000002319         db  0x00 ; '.'
000000000000231a         db  0x00 ; '.'
000000000000231b         db  0x00 ; '.'
000000000000231c         db  0x00 ; '.'
000000000000231d         db  0x00 ; '.'
000000000000231e         db  0x00 ; '.'
000000000000231f         db  0x00 ; '.'
0000000000002320         db  0xf0 ; '.'
0000000000002321         db  0xcd ; '.'
0000000000002322         db  0x21 ; '!'
0000000000002323         db  0x00 ; '.'
0000000000002324         db  0x00 ; '.'
0000000000002325         db  0x00 ; '.'
0000000000002326         db  0x00 ; '.'
0000000000002327         db  0x00 ; '.'
0000000000002328         db  0x07 ; '.'
0000000000002329         db  0x00 ; '.'
000000000000232a         db  0x00 ; '.'
000000000000232b         db  0x00 ; '.'
000000000000232c         db  0x46 ; 'F'
000000000000232d         db  0x00 ; '.'
000000000000232e         db  0x00 ; '.'
000000000000232f         db  0x00 ; '.'
0000000000002330         db  0x00 ; '.'
0000000000002331         db  0x00 ; '.'
0000000000002332         db  0x00 ; '.'
0000000000002333         db  0x00 ; '.'
0000000000002334         db  0x00 ; '.'
0000000000002335         db  0x00 ; '.'
0000000000002336         db  0x00 ; '.'
0000000000002337         db  0x00 ; '.'
0000000000002338         db  0xf8 ; '.'
0000000000002339         db  0xcd ; '.'
000000000000233a         db  0x21 ; '!'
000000000000233b         db  0x00 ; '.'
000000000000233c         db  0x00 ; '.'
000000000000233d         db  0x00 ; '.'
000000000000233e         db  0x00 ; '.'
000000000000233f         db  0x00 ; '.'
0000000000002340         db  0x07 ; '.'
0000000000002341         db  0x00 ; '.'
0000000000002342         db  0x00 ; '.'
0000000000002343         db  0x00 ; '.'
0000000000002344         db  0x47 ; 'G'
0000000000002345         db  0x00 ; '.'
0000000000002346         db  0x00 ; '.'
0000000000002347         db  0x00 ; '.'
0000000000002348         db  0x00 ; '.'
0000000000002349         db  0x00 ; '.'
000000000000234a         db  0x00 ; '.'
000000000000234b         db  0x00 ; '.'
000000000000234c         db  0x00 ; '.'
000000000000234d         db  0x00 ; '.'
000000000000234e         db  0x00 ; '.'
000000000000234f         db  0x00 ; '.'
0000000000002350         db  0x00 ; '.'
0000000000002351         db  0xce ; '.'
0000000000002352         db  0x21 ; '!'
0000000000002353         db  0x00 ; '.'
0000000000002354         db  0x00 ; '.'
0000000000002355         db  0x00 ; '.'
0000000000002356         db  0x00 ; '.'
0000000000002357         db  0x00 ; '.'
0000000000002358         db  0x07 ; '.'
0000000000002359         db  0x00 ; '.'
000000000000235a         db  0x00 ; '.'
000000000000235b         db  0x00 ; '.'
000000000000235c         db  0x48 ; 'H'
000000000000235d         db  0x00 ; '.'
000000000000235e         db  0x00 ; '.'
000000000000235f         db  0x00 ; '.'
0000000000002360         db  0x00 ; '.'
0000000000002361         db  0x00 ; '.'
0000000000002362         db  0x00 ; '.'
0000000000002363         db  0x00 ; '.'
0000000000002364         db  0x00 ; '.'
0000000000002365         db  0x00 ; '.'
0000000000002366         db  0x00 ; '.'
0000000000002367         db  0x00 ; '.'
0000000000002368         db  0x08 ; '.'
0000000000002369         db  0xce ; '.'
000000000000236a         db  0x21 ; '!'
000000000000236b         db  0x00 ; '.'
000000000000236c         db  0x00 ; '.'
000000000000236d         db  0x00 ; '.'
000000000000236e         db  0x00 ; '.'
000000000000236f         db  0x00 ; '.'
0000000000002370         db  0x07 ; '.'
0000000000002371         db  0x00 ; '.'
0000000000002372         db  0x00 ; '.'
0000000000002373         db  0x00 ; '.'
0000000000002374         db  0x49 ; 'I'
0000000000002375         db  0x00 ; '.'
0000000000002376         db  0x00 ; '.'
0000000000002377         db  0x00 ; '.'
0000000000002378         db  0x00 ; '.'
0000000000002379         db  0x00 ; '.'
000000000000237a         db  0x00 ; '.'
000000000000237b         db  0x00 ; '.'
000000000000237c         db  0x00 ; '.'
000000000000237d         db  0x00 ; '.'
000000000000237e         db  0x00 ; '.'
000000000000237f         db  0x00 ; '.'
0000000000002380         db  0x10 ; '.'
0000000000002381         db  0xce ; '.'
0000000000002382         db  0x21 ; '!'
0000000000002383         db  0x00 ; '.'
0000000000002384         db  0x00 ; '.'
0000000000002385         db  0x00 ; '.'
0000000000002386         db  0x00 ; '.'
0000000000002387         db  0x00 ; '.'
0000000000002388         db  0x07 ; '.'
0000000000002389         db  0x00 ; '.'
000000000000238a         db  0x00 ; '.'
000000000000238b         db  0x00 ; '.'
000000000000238c         db  0x4a ; 'J'
000000000000238d         db  0x00 ; '.'
000000000000238e         db  0x00 ; '.'
000000000000238f         db  0x00 ; '.'
0000000000002390         db  0x00 ; '.'
0000000000002391         db  0x00 ; '.'
0000000000002392         db  0x00 ; '.'
0000000000002393         db  0x00 ; '.'
0000000000002394         db  0x00 ; '.'
0000000000002395         db  0x00 ; '.'
0000000000002396         db  0x00 ; '.'
0000000000002397         db  0x00 ; '.'
0000000000002398         db  0x18 ; '.'
0000000000002399         db  0xce ; '.'
000000000000239a         db  0x21 ; '!'
000000000000239b         db  0x00 ; '.'
000000000000239c         db  0x00 ; '.'
000000000000239d         db  0x00 ; '.'
000000000000239e         db  0x00 ; '.'
000000000000239f         db  0x00 ; '.'
00000000000023a0         db  0x07 ; '.'
00000000000023a1         db  0x00 ; '.'
00000000000023a2         db  0x00 ; '.'
00000000000023a3         db  0x00 ; '.'
00000000000023a4         db  0x4b ; 'K'
00000000000023a5         db  0x00 ; '.'
00000000000023a6         db  0x00 ; '.'
00000000000023a7         db  0x00 ; '.'
00000000000023a8         db  0x00 ; '.'
00000000000023a9         db  0x00 ; '.'
00000000000023aa         db  0x00 ; '.'
00000000000023ab         db  0x00 ; '.'
00000000000023ac         db  0x00 ; '.'
00000000000023ad         db  0x00 ; '.'
00000000000023ae         db  0x00 ; '.'
00000000000023af         db  0x00 ; '.'
00000000000023b0         db  0x20 ; ' '
00000000000023b1         db  0xce ; '.'
00000000000023b2         db  0x21 ; '!'
00000000000023b3         db  0x00 ; '.'
00000000000023b4         db  0x00 ; '.'
00000000000023b5         db  0x00 ; '.'
00000000000023b6         db  0x00 ; '.'
00000000000023b7         db  0x00 ; '.'
00000000000023b8         db  0x07 ; '.'
00000000000023b9         db  0x00 ; '.'
00000000000023ba         db  0x00 ; '.'
00000000000023bb         db  0x00 ; '.'
00000000000023bc         db  0x4d ; 'M'
00000000000023bd         db  0x00 ; '.'
00000000000023be         db  0x00 ; '.'
00000000000023bf         db  0x00 ; '.'
00000000000023c0         db  0x00 ; '.'
00000000000023c1         db  0x00 ; '.'
00000000000023c2         db  0x00 ; '.'
00000000000023c3         db  0x00 ; '.'
00000000000023c4         db  0x00 ; '.'
00000000000023c5         db  0x00 ; '.'
00000000000023c6         db  0x00 ; '.'
00000000000023c7         db  0x00 ; '.'
00000000000023c8         db  0x28 ; '('
00000000000023c9         db  0xce ; '.'
00000000000023ca         db  0x21 ; '!'
00000000000023cb         db  0x00 ; '.'
00000000000023cc         db  0x00 ; '.'
00000000000023cd         db  0x00 ; '.'
00000000000023ce         db  0x00 ; '.'
00000000000023cf         db  0x00 ; '.'
00000000000023d0         db  0x07 ; '.'
00000000000023d1         db  0x00 ; '.'
00000000000023d2         db  0x00 ; '.'
00000000000023d3         db  0x00 ; '.'
00000000000023d4         db  0x4e ; 'N'
00000000000023d5         db  0x00 ; '.'
00000000000023d6         db  0x00 ; '.'
00000000000023d7         db  0x00 ; '.'
00000000000023d8         db  0x00 ; '.'
00000000000023d9         db  0x00 ; '.'
00000000000023da         db  0x00 ; '.'
00000000000023db         db  0x00 ; '.'
00000000000023dc         db  0x00 ; '.'
00000000000023dd         db  0x00 ; '.'
00000000000023de         db  0x00 ; '.'
00000000000023df         db  0x00 ; '.'
00000000000023e0         db  0x30 ; '0'
00000000000023e1         db  0xce ; '.'
00000000000023e2         db  0x21 ; '!'
00000000000023e3         db  0x00 ; '.'
00000000000023e4         db  0x00 ; '.'
00000000000023e5         db  0x00 ; '.'
00000000000023e6         db  0x00 ; '.'
00000000000023e7         db  0x00 ; '.'
00000000000023e8         db  0x07 ; '.'
00000000000023e9         db  0x00 ; '.'
00000000000023ea         db  0x00 ; '.'
00000000000023eb         db  0x00 ; '.'
00000000000023ec         db  0x4f ; 'O'
00000000000023ed         db  0x00 ; '.'
00000000000023ee         db  0x00 ; '.'
00000000000023ef         db  0x00 ; '.'
00000000000023f0         db  0x00 ; '.'
00000000000023f1         db  0x00 ; '.'
00000000000023f2         db  0x00 ; '.'
00000000000023f3         db  0x00 ; '.'
00000000000023f4         db  0x00 ; '.'
00000000000023f5         db  0x00 ; '.'
00000000000023f6         db  0x00 ; '.'
00000000000023f7         db  0x00 ; '.'
00000000000023f8         db  0x38 ; '8'
00000000000023f9         db  0xce ; '.'
00000000000023fa         db  0x21 ; '!'
00000000000023fb         db  0x00 ; '.'
00000000000023fc         db  0x00 ; '.'
00000000000023fd         db  0x00 ; '.'
00000000000023fe         db  0x00 ; '.'
00000000000023ff         db  0x00 ; '.'
0000000000002400         db  0x07 ; '.'
0000000000002401         db  0x00 ; '.'
0000000000002402         db  0x00 ; '.'
0000000000002403         db  0x00 ; '.'
0000000000002404         db  0x50 ; 'P'
0000000000002405         db  0x00 ; '.'
0000000000002406         db  0x00 ; '.'
0000000000002407         db  0x00 ; '.'
0000000000002408         db  0x00 ; '.'
0000000000002409         db  0x00 ; '.'
000000000000240a         db  0x00 ; '.'
000000000000240b         db  0x00 ; '.'
000000000000240c         db  0x00 ; '.'
000000000000240d         db  0x00 ; '.'
000000000000240e         db  0x00 ; '.'
000000000000240f         db  0x00 ; '.'
0000000000002410         db  0x40 ; '@'
0000000000002411         db  0xce ; '.'
0000000000002412         db  0x21 ; '!'
0000000000002413         db  0x00 ; '.'
0000000000002414         db  0x00 ; '.'
0000000000002415         db  0x00 ; '.'
0000000000002416         db  0x00 ; '.'
0000000000002417         db  0x00 ; '.'
0000000000002418         db  0x07 ; '.'
0000000000002419         db  0x00 ; '.'
000000000000241a         db  0x00 ; '.'
000000000000241b         db  0x00 ; '.'
000000000000241c         db  0x51 ; 'Q'
000000000000241d         db  0x00 ; '.'
000000000000241e         db  0x00 ; '.'
000000000000241f         db  0x00 ; '.'
0000000000002420         db  0x00 ; '.'
0000000000002421         db  0x00 ; '.'
0000000000002422         db  0x00 ; '.'
0000000000002423         db  0x00 ; '.'
0000000000002424         db  0x00 ; '.'
0000000000002425         db  0x00 ; '.'
0000000000002426         db  0x00 ; '.'
0000000000002427         db  0x00 ; '.'
0000000000002428         db  0x48 ; 'H'
0000000000002429         db  0xce ; '.'
000000000000242a         db  0x21 ; '!'
000000000000242b         db  0x00 ; '.'
000000000000242c         db  0x00 ; '.'
000000000000242d         db  0x00 ; '.'
000000000000242e         db  0x00 ; '.'
000000000000242f         db  0x00 ; '.'
0000000000002430         db  0x07 ; '.'
0000000000002431         db  0x00 ; '.'
0000000000002432         db  0x00 ; '.'
0000000000002433         db  0x00 ; '.'
0000000000002434         db  0x52 ; 'R'
0000000000002435         db  0x00 ; '.'
0000000000002436         db  0x00 ; '.'
0000000000002437         db  0x00 ; '.'
0000000000002438         db  0x00 ; '.'
0000000000002439         db  0x00 ; '.'
000000000000243a         db  0x00 ; '.'
000000000000243b         db  0x00 ; '.'
000000000000243c         db  0x00 ; '.'
000000000000243d         db  0x00 ; '.'
000000000000243e         db  0x00 ; '.'
000000000000243f         db  0x00 ; '.'
0000000000002440         db  0x50 ; 'P'
0000000000002441         db  0xce ; '.'
0000000000002442         db  0x21 ; '!'
0000000000002443         db  0x00 ; '.'
0000000000002444         db  0x00 ; '.'
0000000000002445         db  0x00 ; '.'
0000000000002446         db  0x00 ; '.'
0000000000002447         db  0x00 ; '.'
0000000000002448         db  0x07 ; '.'
0000000000002449         db  0x00 ; '.'
000000000000244a         db  0x00 ; '.'
000000000000244b         db  0x00 ; '.'
000000000000244c         db  0x53 ; 'S'
000000000000244d         db  0x00 ; '.'
000000000000244e         db  0x00 ; '.'
000000000000244f         db  0x00 ; '.'
0000000000002450         db  0x00 ; '.'
0000000000002451         db  0x00 ; '.'
0000000000002452         db  0x00 ; '.'
0000000000002453         db  0x00 ; '.'
0000000000002454         db  0x00 ; '.'
0000000000002455         db  0x00 ; '.'
0000000000002456         db  0x00 ; '.'
0000000000002457         db  0x00 ; '.'
0000000000002458         db  0x58 ; 'X'
0000000000002459         db  0xce ; '.'
000000000000245a         db  0x21 ; '!'
000000000000245b         db  0x00 ; '.'
000000000000245c         db  0x00 ; '.'
000000000000245d         db  0x00 ; '.'
000000000000245e         db  0x00 ; '.'
000000000000245f         db  0x00 ; '.'
0000000000002460         db  0x07 ; '.'
0000000000002461         db  0x00 ; '.'
0000000000002462         db  0x00 ; '.'
0000000000002463         db  0x00 ; '.'
0000000000002464         db  0x54 ; 'T'
0000000000002465         db  0x00 ; '.'
0000000000002466         db  0x00 ; '.'
0000000000002467         db  0x00 ; '.'
0000000000002468         db  0x00 ; '.'
0000000000002469         db  0x00 ; '.'
000000000000246a         db  0x00 ; '.'
000000000000246b         db  0x00 ; '.'
000000000000246c         db  0x00 ; '.'
000000000000246d         db  0x00 ; '.'
000000000000246e         db  0x00 ; '.'
000000000000246f         db  0x00 ; '.'
0000000000002470         db  0x60 ; '`'
0000000000002471         db  0xce ; '.'
0000000000002472         db  0x21 ; '!'
0000000000002473         db  0x00 ; '.'
0000000000002474         db  0x00 ; '.'
0000000000002475         db  0x00 ; '.'
0000000000002476         db  0x00 ; '.'
0000000000002477         db  0x00 ; '.'
0000000000002478         db  0x07 ; '.'
0000000000002479         db  0x00 ; '.'
000000000000247a         db  0x00 ; '.'
000000000000247b         db  0x00 ; '.'
000000000000247c         db  0x55 ; 'U'
000000000000247d         db  0x00 ; '.'
000000000000247e         db  0x00 ; '.'
000000000000247f         db  0x00 ; '.'
0000000000002480         db  0x00 ; '.'
0000000000002481         db  0x00 ; '.'
0000000000002482         db  0x00 ; '.'
0000000000002483         db  0x00 ; '.'
0000000000002484         db  0x00 ; '.'
0000000000002485         db  0x00 ; '.'
0000000000002486         db  0x00 ; '.'
0000000000002487         db  0x00 ; '.'
0000000000002488         db  0x68 ; 'h'
0000000000002489         db  0xce ; '.'
000000000000248a         db  0x21 ; '!'
000000000000248b         db  0x00 ; '.'
000000000000248c         db  0x00 ; '.'
000000000000248d         db  0x00 ; '.'
000000000000248e         db  0x00 ; '.'
000000000000248f         db  0x00 ; '.'
0000000000002490         db  0x07 ; '.'
0000000000002491         db  0x00 ; '.'
0000000000002492         db  0x00 ; '.'
0000000000002493         db  0x00 ; '.'
0000000000002494         db  0x56 ; 'V'
0000000000002495         db  0x00 ; '.'
0000000000002496         db  0x00 ; '.'
0000000000002497         db  0x00 ; '.'
0000000000002498         db  0x00 ; '.'
0000000000002499         db  0x00 ; '.'
000000000000249a         db  0x00 ; '.'
000000000000249b         db  0x00 ; '.'
000000000000249c         db  0x00 ; '.'
000000000000249d         db  0x00 ; '.'
000000000000249e         db  0x00 ; '.'
000000000000249f         db  0x00 ; '.'
00000000000024a0         db  0x70 ; 'p'
00000000000024a1         db  0xce ; '.'
00000000000024a2         db  0x21 ; '!'
00000000000024a3         db  0x00 ; '.'
00000000000024a4         db  0x00 ; '.'
00000000000024a5         db  0x00 ; '.'
00000000000024a6         db  0x00 ; '.'
00000000000024a7         db  0x00 ; '.'
00000000000024a8         db  0x07 ; '.'
00000000000024a9         db  0x00 ; '.'
00000000000024aa         db  0x00 ; '.'
00000000000024ab         db  0x00 ; '.'
00000000000024ac         db  0x57 ; 'W'
00000000000024ad         db  0x00 ; '.'
00000000000024ae         db  0x00 ; '.'
00000000000024af         db  0x00 ; '.'
00000000000024b0         db  0x00 ; '.'
00000000000024b1         db  0x00 ; '.'
00000000000024b2         db  0x00 ; '.'
00000000000024b3         db  0x00 ; '.'
00000000000024b4         db  0x00 ; '.'
00000000000024b5         db  0x00 ; '.'
00000000000024b6         db  0x00 ; '.'
00000000000024b7         db  0x00 ; '.'
00000000000024b8         db  0x78 ; 'x'
00000000000024b9         db  0xce ; '.'
00000000000024ba         db  0x21 ; '!'
00000000000024bb         db  0x00 ; '.'
00000000000024bc         db  0x00 ; '.'
00000000000024bd         db  0x00 ; '.'
00000000000024be         db  0x00 ; '.'
00000000000024bf         db  0x00 ; '.'
00000000000024c0         db  0x07 ; '.'
00000000000024c1         db  0x00 ; '.'
00000000000024c2         db  0x00 ; '.'
00000000000024c3         db  0x00 ; '.'
00000000000024c4         db  0x58 ; 'X'
00000000000024c5         db  0x00 ; '.'
00000000000024c6         db  0x00 ; '.'
00000000000024c7         db  0x00 ; '.'
00000000000024c8         db  0x00 ; '.'
00000000000024c9         db  0x00 ; '.'
00000000000024ca         db  0x00 ; '.'
00000000000024cb         db  0x00 ; '.'
00000000000024cc         db  0x00 ; '.'
00000000000024cd         db  0x00 ; '.'
00000000000024ce         db  0x00 ; '.'
00000000000024cf         db  0x00 ; '.'
00000000000024d0         db  0x80 ; '.'
00000000000024d1         db  0xce ; '.'
00000000000024d2         db  0x21 ; '!'
00000000000024d3         db  0x00 ; '.'
00000000000024d4         db  0x00 ; '.'
00000000000024d5         db  0x00 ; '.'
00000000000024d6         db  0x00 ; '.'
00000000000024d7         db  0x00 ; '.'
00000000000024d8         db  0x07 ; '.'
00000000000024d9         db  0x00 ; '.'
00000000000024da         db  0x00 ; '.'
00000000000024db         db  0x00 ; '.'
00000000000024dc         db  0x59 ; 'Y'
00000000000024dd         db  0x00 ; '.'
00000000000024de         db  0x00 ; '.'
00000000000024df         db  0x00 ; '.'
00000000000024e0         db  0x00 ; '.'
00000000000024e1         db  0x00 ; '.'
00000000000024e2         db  0x00 ; '.'
00000000000024e3         db  0x00 ; '.'
00000000000024e4         db  0x00 ; '.'
00000000000024e5         db  0x00 ; '.'
00000000000024e6         db  0x00 ; '.'
00000000000024e7         db  0x00 ; '.'
00000000000024e8         db  0x88 ; '.'
00000000000024e9         db  0xce ; '.'
00000000000024ea         db  0x21 ; '!'
00000000000024eb         db  0x00 ; '.'
00000000000024ec         db  0x00 ; '.'
00000000000024ed         db  0x00 ; '.'
00000000000024ee         db  0x00 ; '.'
00000000000024ef         db  0x00 ; '.'
00000000000024f0         db  0x07 ; '.'
00000000000024f1         db  0x00 ; '.'
00000000000024f2         db  0x00 ; '.'
00000000000024f3         db  0x00 ; '.'
00000000000024f4         db  0x5a ; 'Z'
00000000000024f5         db  0x00 ; '.'
00000000000024f6         db  0x00 ; '.'
00000000000024f7         db  0x00 ; '.'
00000000000024f8         db  0x00 ; '.'
00000000000024f9         db  0x00 ; '.'
00000000000024fa         db  0x00 ; '.'
00000000000024fb         db  0x00 ; '.'
00000000000024fc         db  0x00 ; '.'
00000000000024fd         db  0x00 ; '.'
00000000000024fe         db  0x00 ; '.'
00000000000024ff         db  0x00 ; '.'
0000000000002500         db  0x90 ; '.'
0000000000002501         db  0xce ; '.'
0000000000002502         db  0x21 ; '!'
0000000000002503         db  0x00 ; '.'
0000000000002504         db  0x00 ; '.'
0000000000002505         db  0x00 ; '.'
0000000000002506         db  0x00 ; '.'
0000000000002507         db  0x00 ; '.'
0000000000002508         db  0x07 ; '.'
0000000000002509         db  0x00 ; '.'
000000000000250a         db  0x00 ; '.'
000000000000250b         db  0x00 ; '.'
000000000000250c         db  0x5b ; '['
000000000000250d         db  0x00 ; '.'
000000000000250e         db  0x00 ; '.'
000000000000250f         db  0x00 ; '.'
0000000000002510         db  0x00 ; '.'
0000000000002511         db  0x00 ; '.'
0000000000002512         db  0x00 ; '.'
0000000000002513         db  0x00 ; '.'
0000000000002514         db  0x00 ; '.'
0000000000002515         db  0x00 ; '.'
0000000000002516         db  0x00 ; '.'
0000000000002517         db  0x00 ; '.'
0000000000002518         db  0x98 ; '.'
0000000000002519         db  0xce ; '.'
000000000000251a         db  0x21 ; '!'
000000000000251b         db  0x00 ; '.'
000000000000251c         db  0x00 ; '.'
000000000000251d         db  0x00 ; '.'
000000000000251e         db  0x00 ; '.'
000000000000251f         db  0x00 ; '.'
0000000000002520         db  0x07 ; '.'
0000000000002521         db  0x00 ; '.'
0000000000002522         db  0x00 ; '.'
0000000000002523         db  0x00 ; '.'
0000000000002524         db  0x5c ; '\'
0000000000002525         db  0x00 ; '.'
0000000000002526         db  0x00 ; '.'
0000000000002527         db  0x00 ; '.'
0000000000002528         db  0x00 ; '.'
0000000000002529         db  0x00 ; '.'
000000000000252a         db  0x00 ; '.'
000000000000252b         db  0x00 ; '.'
000000000000252c         db  0x00 ; '.'
000000000000252d         db  0x00 ; '.'
000000000000252e         db  0x00 ; '.'
000000000000252f         db  0x00 ; '.'
0000000000002530         db  0xa0 ; '.'
0000000000002531         db  0xce ; '.'
0000000000002532         db  0x21 ; '!'
0000000000002533         db  0x00 ; '.'
0000000000002534         db  0x00 ; '.'
0000000000002535         db  0x00 ; '.'
0000000000002536         db  0x00 ; '.'
0000000000002537         db  0x00 ; '.'
0000000000002538         db  0x07 ; '.'
0000000000002539         db  0x00 ; '.'
000000000000253a         db  0x00 ; '.'
000000000000253b         db  0x00 ; '.'
000000000000253c         db  0x5d ; ']'
000000000000253d         db  0x00 ; '.'
000000000000253e         db  0x00 ; '.'
000000000000253f         db  0x00 ; '.'
0000000000002540         db  0x00 ; '.'
0000000000002541         db  0x00 ; '.'
0000000000002542         db  0x00 ; '.'
0000000000002543         db  0x00 ; '.'
0000000000002544         db  0x00 ; '.'
0000000000002545         db  0x00 ; '.'
0000000000002546         db  0x00 ; '.'
0000000000002547         db  0x00 ; '.'
0000000000002548         db  0xa8 ; '.'
0000000000002549         db  0xce ; '.'
000000000000254a         db  0x21 ; '!'
000000000000254b         db  0x00 ; '.'
000000000000254c         db  0x00 ; '.'
000000000000254d         db  0x00 ; '.'
000000000000254e         db  0x00 ; '.'
000000000000254f         db  0x00 ; '.'
0000000000002550         db  0x07 ; '.'
0000000000002551         db  0x00 ; '.'
0000000000002552         db  0x00 ; '.'
0000000000002553         db  0x00 ; '.'
0000000000002554         db  0x5e ; '^'
0000000000002555         db  0x00 ; '.'
0000000000002556         db  0x00 ; '.'
0000000000002557         db  0x00 ; '.'
0000000000002558         db  0x00 ; '.'
0000000000002559         db  0x00 ; '.'
000000000000255a         db  0x00 ; '.'
000000000000255b         db  0x00 ; '.'
000000000000255c         db  0x00 ; '.'
000000000000255d         db  0x00 ; '.'
000000000000255e         db  0x00 ; '.'
000000000000255f         db  0x00 ; '.'
0000000000002560         db  0xb0 ; '.'
0000000000002561         db  0xce ; '.'
0000000000002562         db  0x21 ; '!'
0000000000002563         db  0x00 ; '.'
0000000000002564         db  0x00 ; '.'
0000000000002565         db  0x00 ; '.'
0000000000002566         db  0x00 ; '.'
0000000000002567         db  0x00 ; '.'
0000000000002568         db  0x07 ; '.'
0000000000002569         db  0x00 ; '.'
000000000000256a         db  0x00 ; '.'
000000000000256b         db  0x00 ; '.'
000000000000256c         db  0x5f ; '_'
000000000000256d         db  0x00 ; '.'
000000000000256e         db  0x00 ; '.'
000000000000256f         db  0x00 ; '.'
0000000000002570         db  0x00 ; '.'
0000000000002571         db  0x00 ; '.'
0000000000002572         db  0x00 ; '.'
0000000000002573         db  0x00 ; '.'
0000000000002574         db  0x00 ; '.'
0000000000002575         db  0x00 ; '.'
0000000000002576         db  0x00 ; '.'
0000000000002577         db  0x00 ; '.'
0000000000002578         db  0xb8 ; '.'
0000000000002579         db  0xce ; '.'
000000000000257a         db  0x21 ; '!'
000000000000257b         db  0x00 ; '.'
000000000000257c         db  0x00 ; '.'
000000000000257d         db  0x00 ; '.'
000000000000257e         db  0x00 ; '.'
000000000000257f         db  0x00 ; '.'
0000000000002580         db  0x07 ; '.'
0000000000002581         db  0x00 ; '.'
0000000000002582         db  0x00 ; '.'
0000000000002583         db  0x00 ; '.'
0000000000002584         db  0x60 ; '`'
0000000000002585         db  0x00 ; '.'
0000000000002586         db  0x00 ; '.'
0000000000002587         db  0x00 ; '.'
0000000000002588         db  0x00 ; '.'
0000000000002589         db  0x00 ; '.'
000000000000258a         db  0x00 ; '.'
000000000000258b         db  0x00 ; '.'
000000000000258c         db  0x00 ; '.'
000000000000258d         db  0x00 ; '.'
000000000000258e         db  0x00 ; '.'
000000000000258f         db  0x00 ; '.'
0000000000002590         db  0xc0 ; '.'
0000000000002591         db  0xce ; '.'
0000000000002592         db  0x21 ; '!'
0000000000002593         db  0x00 ; '.'
0000000000002594         db  0x00 ; '.'
0000000000002595         db  0x00 ; '.'
0000000000002596         db  0x00 ; '.'
0000000000002597         db  0x00 ; '.'
0000000000002598         db  0x07 ; '.'
0000000000002599         db  0x00 ; '.'
000000000000259a         db  0x00 ; '.'
000000000000259b         db  0x00 ; '.'
000000000000259c         db  0x61 ; 'a'
000000000000259d         db  0x00 ; '.'
000000000000259e         db  0x00 ; '.'
000000000000259f         db  0x00 ; '.'
00000000000025a0         db  0x00 ; '.'
00000000000025a1         db  0x00 ; '.'
00000000000025a2         db  0x00 ; '.'
00000000000025a3         db  0x00 ; '.'
00000000000025a4         db  0x00 ; '.'
00000000000025a5         db  0x00 ; '.'
00000000000025a6         db  0x00 ; '.'
00000000000025a7         db  0x00 ; '.'
00000000000025a8         db  0xc8 ; '.'
00000000000025a9         db  0xce ; '.'
00000000000025aa         db  0x21 ; '!'
00000000000025ab         db  0x00 ; '.'
00000000000025ac         db  0x00 ; '.'
00000000000025ad         db  0x00 ; '.'
00000000000025ae         db  0x00 ; '.'
00000000000025af         db  0x00 ; '.'
00000000000025b0         db  0x07 ; '.'
00000000000025b1         db  0x00 ; '.'
00000000000025b2         db  0x00 ; '.'
00000000000025b3         db  0x00 ; '.'
00000000000025b4         db  0x62 ; 'b'
00000000000025b5         db  0x00 ; '.'
00000000000025b6         db  0x00 ; '.'
00000000000025b7         db  0x00 ; '.'
00000000000025b8         db  0x00 ; '.'
00000000000025b9         db  0x00 ; '.'
00000000000025ba         db  0x00 ; '.'
00000000000025bb         db  0x00 ; '.'
00000000000025bc         db  0x00 ; '.'
00000000000025bd         db  0x00 ; '.'
00000000000025be         db  0x00 ; '.'
00000000000025bf         db  0x00 ; '.'
00000000000025c0         db  0xd0 ; '.'
00000000000025c1         db  0xce ; '.'
00000000000025c2         db  0x21 ; '!'
00000000000025c3         db  0x00 ; '.'
00000000000025c4         db  0x00 ; '.'
00000000000025c5         db  0x00 ; '.'
00000000000025c6         db  0x00 ; '.'
00000000000025c7         db  0x00 ; '.'
00000000000025c8         db  0x07 ; '.'
00000000000025c9         db  0x00 ; '.'
00000000000025ca         db  0x00 ; '.'
00000000000025cb         db  0x00 ; '.'
00000000000025cc         db  0x63 ; 'c'
00000000000025cd         db  0x00 ; '.'
00000000000025ce         db  0x00 ; '.'
00000000000025cf         db  0x00 ; '.'
00000000000025d0         db  0x00 ; '.'
00000000000025d1         db  0x00 ; '.'
00000000000025d2         db  0x00 ; '.'
00000000000025d3         db  0x00 ; '.'
00000000000025d4         db  0x00 ; '.'
00000000000025d5         db  0x00 ; '.'
00000000000025d6         db  0x00 ; '.'
00000000000025d7         db  0x00 ; '.'
00000000000025d8         db  0xd8 ; '.'
00000000000025d9         db  0xce ; '.'
00000000000025da         db  0x21 ; '!'
00000000000025db         db  0x00 ; '.'
00000000000025dc         db  0x00 ; '.'
00000000000025dd         db  0x00 ; '.'
00000000000025de         db  0x00 ; '.'
00000000000025df         db  0x00 ; '.'
00000000000025e0         db  0x07 ; '.'
00000000000025e1         db  0x00 ; '.'
00000000000025e2         db  0x00 ; '.'
00000000000025e3         db  0x00 ; '.'
00000000000025e4         db  0x64 ; 'd'
00000000000025e5         db  0x00 ; '.'
00000000000025e6         db  0x00 ; '.'
00000000000025e7         db  0x00 ; '.'
00000000000025e8         db  0x00 ; '.'
00000000000025e9         db  0x00 ; '.'
00000000000025ea         db  0x00 ; '.'
00000000000025eb         db  0x00 ; '.'
00000000000025ec         db  0x00 ; '.'
00000000000025ed         db  0x00 ; '.'
00000000000025ee         db  0x00 ; '.'
00000000000025ef         db  0x00 ; '.'
00000000000025f0         db  0xe0 ; '.'
00000000000025f1         db  0xce ; '.'
00000000000025f2         db  0x21 ; '!'
00000000000025f3         db  0x00 ; '.'
00000000000025f4         db  0x00 ; '.'
00000000000025f5         db  0x00 ; '.'
00000000000025f6         db  0x00 ; '.'
00000000000025f7         db  0x00 ; '.'
00000000000025f8         db  0x07 ; '.'
00000000000025f9         db  0x00 ; '.'
00000000000025fa         db  0x00 ; '.'
00000000000025fb         db  0x00 ; '.'
00000000000025fc         db  0x65 ; 'e'
00000000000025fd         db  0x00 ; '.'
00000000000025fe         db  0x00 ; '.'
00000000000025ff         db  0x00 ; '.'
0000000000002600         db  0x00 ; '.'
0000000000002601         db  0x00 ; '.'
0000000000002602         db  0x00 ; '.'
0000000000002603         db  0x00 ; '.'
0000000000002604         db  0x00 ; '.'
0000000000002605         db  0x00 ; '.'
0000000000002606         db  0x00 ; '.'
0000000000002607         db  0x00 ; '.'
0000000000002608         db  0xe8 ; '.'
0000000000002609         db  0xce ; '.'
000000000000260a         db  0x21 ; '!'
000000000000260b         db  0x00 ; '.'
000000000000260c         db  0x00 ; '.'
000000000000260d         db  0x00 ; '.'
000000000000260e         db  0x00 ; '.'
000000000000260f         db  0x00 ; '.'
0000000000002610         db  0x07 ; '.'
0000000000002611         db  0x00 ; '.'
0000000000002612         db  0x00 ; '.'
0000000000002613         db  0x00 ; '.'
0000000000002614         db  0x66 ; 'f'
0000000000002615         db  0x00 ; '.'
0000000000002616         db  0x00 ; '.'
0000000000002617         db  0x00 ; '.'
0000000000002618         db  0x00 ; '.'
0000000000002619         db  0x00 ; '.'
000000000000261a         db  0x00 ; '.'
000000000000261b         db  0x00 ; '.'
000000000000261c         db  0x00 ; '.'
000000000000261d         db  0x00 ; '.'
000000000000261e         db  0x00 ; '.'
000000000000261f         db  0x00 ; '.'
0000000000002620         db  0xf0 ; '.'
0000000000002621         db  0xce ; '.'
0000000000002622         db  0x21 ; '!'
0000000000002623         db  0x00 ; '.'
0000000000002624         db  0x00 ; '.'
0000000000002625         db  0x00 ; '.'
0000000000002626         db  0x00 ; '.'
0000000000002627         db  0x00 ; '.'
0000000000002628         db  0x07 ; '.'
0000000000002629         db  0x00 ; '.'
000000000000262a         db  0x00 ; '.'
000000000000262b         db  0x00 ; '.'
000000000000262c         db  0x67 ; 'g'
000000000000262d         db  0x00 ; '.'
000000000000262e         db  0x00 ; '.'
000000000000262f         db  0x00 ; '.'
0000000000002630         db  0x00 ; '.'
0000000000002631         db  0x00 ; '.'
0000000000002632         db  0x00 ; '.'
0000000000002633         db  0x00 ; '.'
0000000000002634         db  0x00 ; '.'
0000000000002635         db  0x00 ; '.'
0000000000002636         db  0x00 ; '.'
0000000000002637         db  0x00 ; '.'
0000000000002638         db  0xf8 ; '.'
0000000000002639         db  0xce ; '.'
000000000000263a         db  0x21 ; '!'
000000000000263b         db  0x00 ; '.'
000000000000263c         db  0x00 ; '.'
000000000000263d         db  0x00 ; '.'
000000000000263e         db  0x00 ; '.'
000000000000263f         db  0x00 ; '.'
0000000000002640         db  0x07 ; '.'
0000000000002641         db  0x00 ; '.'
0000000000002642         db  0x00 ; '.'
0000000000002643         db  0x00 ; '.'
0000000000002644         db  0x68 ; 'h'
0000000000002645         db  0x00 ; '.'
0000000000002646         db  0x00 ; '.'
0000000000002647         db  0x00 ; '.'
0000000000002648         db  0x00 ; '.'
0000000000002649         db  0x00 ; '.'
000000000000264a         db  0x00 ; '.'
000000000000264b         db  0x00 ; '.'
000000000000264c         db  0x00 ; '.'
000000000000264d         db  0x00 ; '.'
000000000000264e         db  0x00 ; '.'
000000000000264f         db  0x00 ; '.'
0000000000002650         db  0x00 ; '.'
0000000000002651         db  0xcf ; '.'
0000000000002652         db  0x21 ; '!'
0000000000002653         db  0x00 ; '.'
0000000000002654         db  0x00 ; '.'
0000000000002655         db  0x00 ; '.'
0000000000002656         db  0x00 ; '.'
0000000000002657         db  0x00 ; '.'
0000000000002658         db  0x07 ; '.'
0000000000002659         db  0x00 ; '.'
000000000000265a         db  0x00 ; '.'
000000000000265b         db  0x00 ; '.'
000000000000265c         db  0x69 ; 'i'
000000000000265d         db  0x00 ; '.'
000000000000265e         db  0x00 ; '.'
000000000000265f         db  0x00 ; '.'
0000000000002660         db  0x00 ; '.'
0000000000002661         db  0x00 ; '.'
0000000000002662         db  0x00 ; '.'
0000000000002663         db  0x00 ; '.'
0000000000002664         db  0x00 ; '.'
0000000000002665         db  0x00 ; '.'
0000000000002666         db  0x00 ; '.'
0000000000002667         db  0x00 ; '.'
0000000000002668         db  0x08 ; '.'
0000000000002669         db  0xcf ; '.'
000000000000266a         db  0x21 ; '!'
000000000000266b         db  0x00 ; '.'
000000000000266c         db  0x00 ; '.'
000000000000266d         db  0x00 ; '.'
000000000000266e         db  0x00 ; '.'
000000000000266f         db  0x00 ; '.'
0000000000002670         db  0x07 ; '.'
0000000000002671         db  0x00 ; '.'
0000000000002672         db  0x00 ; '.'
0000000000002673         db  0x00 ; '.'
0000000000002674         db  0x6a ; 'j'
0000000000002675         db  0x00 ; '.'
0000000000002676         db  0x00 ; '.'
0000000000002677         db  0x00 ; '.'
0000000000002678         db  0x00 ; '.'
0000000000002679         db  0x00 ; '.'
000000000000267a         db  0x00 ; '.'
000000000000267b         db  0x00 ; '.'
000000000000267c         db  0x00 ; '.'
000000000000267d         db  0x00 ; '.'
000000000000267e         db  0x00 ; '.'
000000000000267f         db  0x00 ; '.'
0000000000002680         db  0x10 ; '.'
0000000000002681         db  0xcf ; '.'
0000000000002682         db  0x21 ; '!'
0000000000002683         db  0x00 ; '.'
0000000000002684         db  0x00 ; '.'
0000000000002685         db  0x00 ; '.'
0000000000002686         db  0x00 ; '.'
0000000000002687         db  0x00 ; '.'
0000000000002688         db  0x07 ; '.'
0000000000002689         db  0x00 ; '.'
000000000000268a         db  0x00 ; '.'
000000000000268b         db  0x00 ; '.'
000000000000268c         db  0x6b ; 'k'
000000000000268d         db  0x00 ; '.'
000000000000268e         db  0x00 ; '.'
000000000000268f         db  0x00 ; '.'
0000000000002690         db  0x00 ; '.'
0000000000002691         db  0x00 ; '.'
0000000000002692         db  0x00 ; '.'
0000000000002693         db  0x00 ; '.'
0000000000002694         db  0x00 ; '.'
0000000000002695         db  0x00 ; '.'
0000000000002696         db  0x00 ; '.'
0000000000002697         db  0x00 ; '.'
0000000000002698         db  0x18 ; '.'
0000000000002699         db  0xcf ; '.'
000000000000269a         db  0x21 ; '!'
000000000000269b         db  0x00 ; '.'
000000000000269c         db  0x00 ; '.'
000000000000269d         db  0x00 ; '.'
000000000000269e         db  0x00 ; '.'
000000000000269f         db  0x00 ; '.'
00000000000026a0         db  0x07 ; '.'
00000000000026a1         db  0x00 ; '.'
00000000000026a2         db  0x00 ; '.'
00000000000026a3         db  0x00 ; '.'
00000000000026a4         db  0x6c ; 'l'
00000000000026a5         db  0x00 ; '.'
00000000000026a6         db  0x00 ; '.'
00000000000026a7         db  0x00 ; '.'
00000000000026a8         db  0x00 ; '.'
00000000000026a9         db  0x00 ; '.'
00000000000026aa         db  0x00 ; '.'
00000000000026ab         db  0x00 ; '.'
00000000000026ac         db  0x00 ; '.'
00000000000026ad         db  0x00 ; '.'
00000000000026ae         db  0x00 ; '.'
00000000000026af         db  0x00 ; '.'
00000000000026b0         db  0x20 ; ' '
00000000000026b1         db  0xcf ; '.'
00000000000026b2         db  0x21 ; '!'
00000000000026b3         db  0x00 ; '.'
00000000000026b4         db  0x00 ; '.'
00000000000026b5         db  0x00 ; '.'
00000000000026b6         db  0x00 ; '.'
00000000000026b7         db  0x00 ; '.'
00000000000026b8         db  0x07 ; '.'
00000000000026b9         db  0x00 ; '.'
00000000000026ba         db  0x00 ; '.'
00000000000026bb         db  0x00 ; '.'
00000000000026bc         db  0x6d ; 'm'
00000000000026bd         db  0x00 ; '.'
00000000000026be         db  0x00 ; '.'
00000000000026bf         db  0x00 ; '.'
00000000000026c0         db  0x00 ; '.'
00000000000026c1         db  0x00 ; '.'
00000000000026c2         db  0x00 ; '.'
00000000000026c3         db  0x00 ; '.'
00000000000026c4         db  0x00 ; '.'
00000000000026c5         db  0x00 ; '.'
00000000000026c6         db  0x00 ; '.'
00000000000026c7         db  0x00 ; '.'
00000000000026c8         db  0x28 ; '('
00000000000026c9         db  0xcf ; '.'
00000000000026ca         db  0x21 ; '!'
00000000000026cb         db  0x00 ; '.'
00000000000026cc         db  0x00 ; '.'
00000000000026cd         db  0x00 ; '.'
00000000000026ce         db  0x00 ; '.'
00000000000026cf         db  0x00 ; '.'
00000000000026d0         db  0x07 ; '.'
00000000000026d1         db  0x00 ; '.'
00000000000026d2         db  0x00 ; '.'
00000000000026d3         db  0x00 ; '.'
00000000000026d4         db  0x6e ; 'n'
00000000000026d5         db  0x00 ; '.'
00000000000026d6         db  0x00 ; '.'
00000000000026d7         db  0x00 ; '.'
00000000000026d8         db  0x00 ; '.'
00000000000026d9         db  0x00 ; '.'
00000000000026da         db  0x00 ; '.'
00000000000026db         db  0x00 ; '.'
00000000000026dc         db  0x00 ; '.'
00000000000026dd         db  0x00 ; '.'
00000000000026de         db  0x00 ; '.'
00000000000026df         db  0x00 ; '.'
00000000000026e0         db  0x30 ; '0'
00000000000026e1         db  0xcf ; '.'
00000000000026e2         db  0x21 ; '!'
00000000000026e3         db  0x00 ; '.'
00000000000026e4         db  0x00 ; '.'
00000000000026e5         db  0x00 ; '.'
00000000000026e6         db  0x00 ; '.'
00000000000026e7         db  0x00 ; '.'
00000000000026e8         db  0x07 ; '.'
00000000000026e9         db  0x00 ; '.'
00000000000026ea         db  0x00 ; '.'
00000000000026eb         db  0x00 ; '.'
00000000000026ec         db  0x6f ; 'o'
00000000000026ed         db  0x00 ; '.'
00000000000026ee         db  0x00 ; '.'
00000000000026ef         db  0x00 ; '.'
00000000000026f0         db  0x00 ; '.'
00000000000026f1         db  0x00 ; '.'
00000000000026f2         db  0x00 ; '.'
00000000000026f3         db  0x00 ; '.'
00000000000026f4         db  0x00 ; '.'
00000000000026f5         db  0x00 ; '.'
00000000000026f6         db  0x00 ; '.'
00000000000026f7         db  0x00 ; '.'
00000000000026f8         db  0x38 ; '8'
00000000000026f9         db  0xcf ; '.'
00000000000026fa         db  0x21 ; '!'
00000000000026fb         db  0x00 ; '.'
00000000000026fc         db  0x00 ; '.'
00000000000026fd         db  0x00 ; '.'
00000000000026fe         db  0x00 ; '.'
00000000000026ff         db  0x00 ; '.'
0000000000002700         db  0x07 ; '.'
0000000000002701         db  0x00 ; '.'
0000000000002702         db  0x00 ; '.'
0000000000002703         db  0x00 ; '.'
0000000000002704         db  0x70 ; 'p'
0000000000002705         db  0x00 ; '.'
0000000000002706         db  0x00 ; '.'
0000000000002707         db  0x00 ; '.'
0000000000002708         db  0x00 ; '.'
0000000000002709         db  0x00 ; '.'
000000000000270a         db  0x00 ; '.'
000000000000270b         db  0x00 ; '.'
000000000000270c         db  0x00 ; '.'
000000000000270d         db  0x00 ; '.'
000000000000270e         db  0x00 ; '.'
000000000000270f         db  0x00 ; '.'
0000000000002710         db  0x40 ; '@'
0000000000002711         db  0xcf ; '.'
0000000000002712         db  0x21 ; '!'
0000000000002713         db  0x00 ; '.'
0000000000002714         db  0x00 ; '.'
0000000000002715         db  0x00 ; '.'
0000000000002716         db  0x00 ; '.'
0000000000002717         db  0x00 ; '.'
0000000000002718         db  0x07 ; '.'
0000000000002719         db  0x00 ; '.'
000000000000271a         db  0x00 ; '.'
000000000000271b         db  0x00 ; '.'
000000000000271c         db  0x71 ; 'q'
000000000000271d         db  0x00 ; '.'
000000000000271e         db  0x00 ; '.'
000000000000271f         db  0x00 ; '.'
0000000000002720         db  0x00 ; '.'
0000000000002721         db  0x00 ; '.'
0000000000002722         db  0x00 ; '.'
0000000000002723         db  0x00 ; '.'
0000000000002724         db  0x00 ; '.'
0000000000002725         db  0x00 ; '.'
0000000000002726         db  0x00 ; '.'
0000000000002727         db  0x00 ; '.'
0000000000002728         db  0x48 ; 'H'
0000000000002729         db  0xcf ; '.'
000000000000272a         db  0x21 ; '!'
000000000000272b         db  0x00 ; '.'
000000000000272c         db  0x00 ; '.'
000000000000272d         db  0x00 ; '.'
000000000000272e         db  0x00 ; '.'
000000000000272f         db  0x00 ; '.'
0000000000002730         db  0x07 ; '.'
0000000000002731         db  0x00 ; '.'
0000000000002732         db  0x00 ; '.'
0000000000002733         db  0x00 ; '.'
0000000000002734         db  0x72 ; 'r'
0000000000002735         db  0x00 ; '.'
0000000000002736         db  0x00 ; '.'
0000000000002737         db  0x00 ; '.'
0000000000002738         db  0x00 ; '.'
0000000000002739         db  0x00 ; '.'
000000000000273a         db  0x00 ; '.'
000000000000273b         db  0x00 ; '.'
000000000000273c         db  0x00 ; '.'
000000000000273d         db  0x00 ; '.'
000000000000273e         db  0x00 ; '.'
000000000000273f         db  0x00 ; '.'
0000000000002740         db  0x50 ; 'P'
0000000000002741         db  0xcf ; '.'
0000000000002742         db  0x21 ; '!'
0000000000002743         db  0x00 ; '.'
0000000000002744         db  0x00 ; '.'
0000000000002745         db  0x00 ; '.'
0000000000002746         db  0x00 ; '.'
0000000000002747         db  0x00 ; '.'
0000000000002748         db  0x07 ; '.'
0000000000002749         db  0x00 ; '.'
000000000000274a         db  0x00 ; '.'
000000000000274b         db  0x00 ; '.'
000000000000274c         db  0x73 ; 's'
000000000000274d         db  0x00 ; '.'
000000000000274e         db  0x00 ; '.'
000000000000274f         db  0x00 ; '.'
0000000000002750         db  0x00 ; '.'
0000000000002751         db  0x00 ; '.'
0000000000002752         db  0x00 ; '.'
0000000000002753         db  0x00 ; '.'
0000000000002754         db  0x00 ; '.'
0000000000002755         db  0x00 ; '.'
0000000000002756         db  0x00 ; '.'
0000000000002757         db  0x00 ; '.'
0000000000002758         db  0x58 ; 'X'
0000000000002759         db  0xcf ; '.'
000000000000275a         db  0x21 ; '!'
000000000000275b         db  0x00 ; '.'
000000000000275c         db  0x00 ; '.'
000000000000275d         db  0x00 ; '.'
000000000000275e         db  0x00 ; '.'
000000000000275f         db  0x00 ; '.'
0000000000002760         db  0x07 ; '.'
0000000000002761         db  0x00 ; '.'
0000000000002762         db  0x00 ; '.'
0000000000002763         db  0x00 ; '.'
0000000000002764         db  0x74 ; 't'
0000000000002765         db  0x00 ; '.'
0000000000002766         db  0x00 ; '.'
0000000000002767         db  0x00 ; '.'
0000000000002768         db  0x00 ; '.'
0000000000002769         db  0x00 ; '.'
000000000000276a         db  0x00 ; '.'
000000000000276b         db  0x00 ; '.'
000000000000276c         db  0x00 ; '.'
000000000000276d         db  0x00 ; '.'
000000000000276e         db  0x00 ; '.'
000000000000276f         db  0x00 ; '.'
0000000000002770         db  0x60 ; '`'
0000000000002771         db  0xcf ; '.'
0000000000002772         db  0x21 ; '!'
0000000000002773         db  0x00 ; '.'
0000000000002774         db  0x00 ; '.'
0000000000002775         db  0x00 ; '.'
0000000000002776         db  0x00 ; '.'
0000000000002777         db  0x00 ; '.'
0000000000002778         db  0x07 ; '.'
0000000000002779         db  0x00 ; '.'
000000000000277a         db  0x00 ; '.'
000000000000277b         db  0x00 ; '.'
000000000000277c         db  0x75 ; 'u'
000000000000277d         db  0x00 ; '.'
000000000000277e         db  0x00 ; '.'
000000000000277f         db  0x00 ; '.'
0000000000002780         db  0x00 ; '.'
0000000000002781         db  0x00 ; '.'
0000000000002782         db  0x00 ; '.'
0000000000002783         db  0x00 ; '.'
0000000000002784         db  0x00 ; '.'
0000000000002785         db  0x00 ; '.'
0000000000002786         db  0x00 ; '.'
0000000000002787         db  0x00 ; '.'
0000000000002788         db  0x68 ; 'h'
0000000000002789         db  0xcf ; '.'
000000000000278a         db  0x21 ; '!'
000000000000278b         db  0x00 ; '.'
000000000000278c         db  0x00 ; '.'
000000000000278d         db  0x00 ; '.'
000000000000278e         db  0x00 ; '.'
000000000000278f         db  0x00 ; '.'
0000000000002790         db  0x07 ; '.'
0000000000002791         db  0x00 ; '.'
0000000000002792         db  0x00 ; '.'
0000000000002793         db  0x00 ; '.'
0000000000002794         db  0x76 ; 'v'
0000000000002795         db  0x00 ; '.'
0000000000002796         db  0x00 ; '.'
0000000000002797         db  0x00 ; '.'
0000000000002798         db  0x00 ; '.'
0000000000002799         db  0x00 ; '.'
000000000000279a         db  0x00 ; '.'
000000000000279b         db  0x00 ; '.'
000000000000279c         db  0x00 ; '.'
000000000000279d         db  0x00 ; '.'
000000000000279e         db  0x00 ; '.'
000000000000279f         db  0x00 ; '.'
00000000000027a0         db  0x70 ; 'p'
00000000000027a1         db  0xcf ; '.'
00000000000027a2         db  0x21 ; '!'
00000000000027a3         db  0x00 ; '.'
00000000000027a4         db  0x00 ; '.'
00000000000027a5         db  0x00 ; '.'
00000000000027a6         db  0x00 ; '.'
00000000000027a7         db  0x00 ; '.'
00000000000027a8         db  0x07 ; '.'
00000000000027a9         db  0x00 ; '.'
00000000000027aa         db  0x00 ; '.'
00000000000027ab         db  0x00 ; '.'
00000000000027ac         db  0x77 ; 'w'
00000000000027ad         db  0x00 ; '.'
00000000000027ae         db  0x00 ; '.'
00000000000027af         db  0x00 ; '.'
00000000000027b0         db  0x00 ; '.'
00000000000027b1         db  0x00 ; '.'
00000000000027b2         db  0x00 ; '.'
00000000000027b3         db  0x00 ; '.'
00000000000027b4         db  0x00 ; '.'
00000000000027b5         db  0x00 ; '.'
00000000000027b6         db  0x00 ; '.'
00000000000027b7         db  0x00 ; '.'
00000000000027b8         db  0x78 ; 'x'
00000000000027b9         db  0xcf ; '.'
00000000000027ba         db  0x21 ; '!'
00000000000027bb         db  0x00 ; '.'
00000000000027bc         db  0x00 ; '.'
00000000000027bd         db  0x00 ; '.'
00000000000027be         db  0x00 ; '.'
00000000000027bf         db  0x00 ; '.'
00000000000027c0         db  0x07 ; '.'
00000000000027c1         db  0x00 ; '.'
00000000000027c2         db  0x00 ; '.'
00000000000027c3         db  0x00 ; '.'
00000000000027c4         db  0x78 ; 'x'
00000000000027c5         db  0x00 ; '.'
00000000000027c6         db  0x00 ; '.'
00000000000027c7         db  0x00 ; '.'
00000000000027c8         db  0x00 ; '.'
00000000000027c9         db  0x00 ; '.'
00000000000027ca         db  0x00 ; '.'
00000000000027cb         db  0x00 ; '.'
00000000000027cc         db  0x00 ; '.'
00000000000027cd         db  0x00 ; '.'
00000000000027ce         db  0x00 ; '.'
00000000000027cf         db  0x00 ; '.'
00000000000027d0         db  0x80 ; '.'
00000000000027d1         db  0xcf ; '.'
00000000000027d2         db  0x21 ; '!'
00000000000027d3         db  0x00 ; '.'
00000000000027d4         db  0x00 ; '.'
00000000000027d5         db  0x00 ; '.'
00000000000027d6         db  0x00 ; '.'
00000000000027d7         db  0x00 ; '.'
00000000000027d8         db  0x07 ; '.'
00000000000027d9         db  0x00 ; '.'
00000000000027da         db  0x00 ; '.'
00000000000027db         db  0x00 ; '.'
00000000000027dc         db  0x79 ; 'y'
00000000000027dd         db  0x00 ; '.'
00000000000027de         db  0x00 ; '.'
00000000000027df         db  0x00 ; '.'
00000000000027e0         db  0x00 ; '.'
00000000000027e1         db  0x00 ; '.'
00000000000027e2         db  0x00 ; '.'
00000000000027e3         db  0x00 ; '.'
00000000000027e4         db  0x00 ; '.'
00000000000027e5         db  0x00 ; '.'
00000000000027e6         db  0x00 ; '.'
00000000000027e7         db  0x00 ; '.'
00000000000027e8         db  0x88 ; '.'
00000000000027e9         db  0xcf ; '.'
00000000000027ea         db  0x21 ; '!'
00000000000027eb         db  0x00 ; '.'
00000000000027ec         db  0x00 ; '.'
00000000000027ed         db  0x00 ; '.'
00000000000027ee         db  0x00 ; '.'
00000000000027ef         db  0x00 ; '.'
00000000000027f0         db  0x07 ; '.'
00000000000027f1         db  0x00 ; '.'
00000000000027f2         db  0x00 ; '.'
00000000000027f3         db  0x00 ; '.'
00000000000027f4         db  0x7a ; 'z'
00000000000027f5         db  0x00 ; '.'
00000000000027f6         db  0x00 ; '.'
00000000000027f7         db  0x00 ; '.'
00000000000027f8         db  0x00 ; '.'
00000000000027f9         db  0x00 ; '.'
00000000000027fa         db  0x00 ; '.'
00000000000027fb         db  0x00 ; '.'
00000000000027fc         db  0x00 ; '.'
00000000000027fd         db  0x00 ; '.'
00000000000027fe         db  0x00 ; '.'
00000000000027ff         db  0x00 ; '.'
0000000000002800         db  0x90 ; '.'
0000000000002801         db  0xcf ; '.'
0000000000002802         db  0x21 ; '!'
0000000000002803         db  0x00 ; '.'
0000000000002804         db  0x00 ; '.'
0000000000002805         db  0x00 ; '.'
0000000000002806         db  0x00 ; '.'
0000000000002807         db  0x00 ; '.'
0000000000002808         db  0x07 ; '.'
0000000000002809         db  0x00 ; '.'
000000000000280a         db  0x00 ; '.'
000000000000280b         db  0x00 ; '.'
000000000000280c         db  0x7b ; '{'
000000000000280d         db  0x00 ; '.'
000000000000280e         db  0x00 ; '.'
000000000000280f         db  0x00 ; '.'
0000000000002810         db  0x00 ; '.'
0000000000002811         db  0x00 ; '.'
0000000000002812         db  0x00 ; '.'
0000000000002813         db  0x00 ; '.'
0000000000002814         db  0x00 ; '.'
0000000000002815         db  0x00 ; '.'
0000000000002816         db  0x00 ; '.'
0000000000002817         db  0x00 ; '.'
0000000000002818         db  0x98 ; '.'
0000000000002819         db  0xcf ; '.'
000000000000281a         db  0x21 ; '!'
000000000000281b         db  0x00 ; '.'
000000000000281c         db  0x00 ; '.'
000000000000281d         db  0x00 ; '.'
000000000000281e         db  0x00 ; '.'
000000000000281f         db  0x00 ; '.'
0000000000002820         db  0x07 ; '.'
0000000000002821         db  0x00 ; '.'
0000000000002822         db  0x00 ; '.'
0000000000002823         db  0x00 ; '.'
0000000000002824         db  0x7d ; '}'
0000000000002825         db  0x00 ; '.'
0000000000002826         db  0x00 ; '.'
0000000000002827         db  0x00 ; '.'
0000000000002828         db  0x00 ; '.'
0000000000002829         db  0x00 ; '.'
000000000000282a         db  0x00 ; '.'
000000000000282b         db  0x00 ; '.'
000000000000282c         db  0x00 ; '.'
000000000000282d         db  0x00 ; '.'
000000000000282e         db  0x00 ; '.'
000000000000282f         db  0x00 ; '.'
0000000000002830         db  0xa0 ; '.'
0000000000002831         db  0xcf ; '.'
0000000000002832         db  0x21 ; '!'
0000000000002833         db  0x00 ; '.'
0000000000002834         db  0x00 ; '.'
0000000000002835         db  0x00 ; '.'
0000000000002836         db  0x00 ; '.'
0000000000002837         db  0x00 ; '.'
0000000000002838         db  0x07 ; '.'
0000000000002839         db  0x00 ; '.'
000000000000283a         db  0x00 ; '.'
000000000000283b         db  0x00 ; '.'
000000000000283c         db  0x7e ; '~'
000000000000283d         db  0x00 ; '.'
000000000000283e         db  0x00 ; '.'
000000000000283f         db  0x00 ; '.'
0000000000002840         db  0x00 ; '.'
0000000000002841         db  0x00 ; '.'
0000000000002842         db  0x00 ; '.'
0000000000002843         db  0x00 ; '.'
0000000000002844         db  0x00 ; '.'
0000000000002845         db  0x00 ; '.'
0000000000002846         db  0x00 ; '.'
0000000000002847         db  0x00 ; '.'
0000000000002848         db  0xa8 ; '.'
0000000000002849         db  0xcf ; '.'
000000000000284a         db  0x21 ; '!'
000000000000284b         db  0x00 ; '.'
000000000000284c         db  0x00 ; '.'
000000000000284d         db  0x00 ; '.'
000000000000284e         db  0x00 ; '.'
000000000000284f         db  0x00 ; '.'
0000000000002850         db  0x07 ; '.'
0000000000002851         db  0x00 ; '.'
0000000000002852         db  0x00 ; '.'
0000000000002853         db  0x00 ; '.'
0000000000002854         db  0x7f ; '.'
0000000000002855         db  0x00 ; '.'
0000000000002856         db  0x00 ; '.'
0000000000002857         db  0x00 ; '.'
0000000000002858         db  0x00 ; '.'
0000000000002859         db  0x00 ; '.'
000000000000285a         db  0x00 ; '.'
000000000000285b         db  0x00 ; '.'
000000000000285c         db  0x00 ; '.'
000000000000285d         db  0x00 ; '.'
000000000000285e         db  0x00 ; '.'
000000000000285f         db  0x00 ; '.'
0000000000002860         db  0xb0 ; '.'
0000000000002861         db  0xcf ; '.'
0000000000002862         db  0x21 ; '!'
0000000000002863         db  0x00 ; '.'
0000000000002864         db  0x00 ; '.'
0000000000002865         db  0x00 ; '.'
0000000000002866         db  0x00 ; '.'
0000000000002867         db  0x00 ; '.'
0000000000002868         db  0x07 ; '.'
0000000000002869         db  0x00 ; '.'
000000000000286a         db  0x00 ; '.'
000000000000286b         db  0x00 ; '.'
000000000000286c         db  0x80 ; '.'
000000000000286d         db  0x00 ; '.'
000000000000286e         db  0x00 ; '.'
000000000000286f         db  0x00 ; '.'
0000000000002870         db  0x00 ; '.'
0000000000002871         db  0x00 ; '.'
0000000000002872         db  0x00 ; '.'
0000000000002873         db  0x00 ; '.'
0000000000002874         db  0x00 ; '.'
0000000000002875         db  0x00 ; '.'
0000000000002876         db  0x00 ; '.'
0000000000002877         db  0x00 ; '.'
0000000000002878         db  0xb8 ; '.'
0000000000002879         db  0xcf ; '.'
000000000000287a         db  0x21 ; '!'
000000000000287b         db  0x00 ; '.'
000000000000287c         db  0x00 ; '.'
000000000000287d         db  0x00 ; '.'
000000000000287e         db  0x00 ; '.'
000000000000287f         db  0x00 ; '.'
0000000000002880         db  0x07 ; '.'
0000000000002881         db  0x00 ; '.'
0000000000002882         db  0x00 ; '.'
0000000000002883         db  0x00 ; '.'
0000000000002884         db  0x82 ; '.'
0000000000002885         db  0x00 ; '.'
0000000000002886         db  0x00 ; '.'
0000000000002887         db  0x00 ; '.'
0000000000002888         db  0x00 ; '.'
0000000000002889         db  0x00 ; '.'
000000000000288a         db  0x00 ; '.'
000000000000288b         db  0x00 ; '.'
000000000000288c         db  0x00 ; '.'
000000000000288d         db  0x00 ; '.'
000000000000288e         db  0x00 ; '.'
000000000000288f         db  0x00 ; '.'
0000000000002890         db  0xc0 ; '.'
0000000000002891         db  0xcf ; '.'
0000000000002892         db  0x21 ; '!'
0000000000002893         db  0x00 ; '.'
0000000000002894         db  0x00 ; '.'
0000000000002895         db  0x00 ; '.'
0000000000002896         db  0x00 ; '.'
0000000000002897         db  0x00 ; '.'
0000000000002898         db  0x07 ; '.'
0000000000002899         db  0x00 ; '.'
000000000000289a         db  0x00 ; '.'
000000000000289b         db  0x00 ; '.'
000000000000289c         db  0x83 ; '.'
000000000000289d         db  0x00 ; '.'
000000000000289e         db  0x00 ; '.'
000000000000289f         db  0x00 ; '.'
00000000000028a0         db  0x00 ; '.'
00000000000028a1         db  0x00 ; '.'
00000000000028a2         db  0x00 ; '.'
00000000000028a3         db  0x00 ; '.'
00000000000028a4         db  0x00 ; '.'
00000000000028a5         db  0x00 ; '.'
00000000000028a6         db  0x00 ; '.'
00000000000028a7         db  0x00 ; '.'
00000000000028a8         db  0xc8 ; '.'
00000000000028a9         db  0xcf ; '.'
00000000000028aa         db  0x21 ; '!'
00000000000028ab         db  0x00 ; '.'
00000000000028ac         db  0x00 ; '.'
00000000000028ad         db  0x00 ; '.'
00000000000028ae         db  0x00 ; '.'
00000000000028af         db  0x00 ; '.'
00000000000028b0         db  0x07 ; '.'
00000000000028b1         db  0x00 ; '.'
00000000000028b2         db  0x00 ; '.'
00000000000028b3         db  0x00 ; '.'
00000000000028b4         db  0x84 ; '.'
00000000000028b5         db  0x00 ; '.'
00000000000028b6         db  0x00 ; '.'
00000000000028b7         db  0x00 ; '.'
00000000000028b8         db  0x00 ; '.'
00000000000028b9         db  0x00 ; '.'
00000000000028ba         db  0x00 ; '.'
00000000000028bb         db  0x00 ; '.'
00000000000028bc         db  0x00 ; '.'
00000000000028bd         db  0x00 ; '.'
00000000000028be         db  0x00 ; '.'
00000000000028bf         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x28c0; 0x28d7[ (23 bytes)
        ; File offset : [10432; 10455[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
00000000000028c0         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
00000000000028c4         mov        rax, qword [qword_21cfe8]                   ; qword_21cfe8
00000000000028cb         test       rax, rax
00000000000028ce         je         loc_28d2

00000000000028d0         call       rax

                     loc_28d2:
00000000000028d2         add        rsp, 0x8                                    ; CODE XREF=_init+14
00000000000028d6         ret
                        ; endp
00000000000028d7         db  0x00 ; '.'
00000000000028d8         db  0x00 ; '.'
00000000000028d9         db  0x00 ; '.'
00000000000028da         db  0x00 ; '.'
00000000000028db         db  0x00 ; '.'
00000000000028dc         db  0x00 ; '.'
00000000000028dd         db  0x00 ; '.'
00000000000028de         db  0x00 ; '.'
00000000000028df         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x28e0; 0x30d0[ (2032 bytes)
        ; File offset : [10464; 12496[ (2032 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_28e0:
00000000000028e0         push       qword [qword_21cbd0]                        ; Begin of unwind block (FDE at 0x1993c), qword_21cbd0, CODE XREF=sub_28f6+5
00000000000028e6         jmp        qword [qword_21cbd0+8]                      ; 0x21cbd8
                        ; endp
00000000000028ec         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_endgrent:        // endgrent
00000000000028f0         jmp        qword [endgrent@GOT]                        ; endgrent, endgrent@GOT, CODE XREF=main+1596
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_28f6:
00000000000028f6         push       0x0
00000000000028fb         jmp        loc_28e0


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getenv:        // getenv
0000000000002900         jmp        qword [getenv@GOT]                          ; getenv, getenv@GOT, CODE XREF=set_simple_backup_suffix+55, xget_version+21
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2906:
0000000000002906         push       0x1
000000000000290b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___snprintf_chk:        // __snprintf_chk
0000000000002910         jmp        qword [__snprintf_chk@GOT]                  ; __snprintf_chk, __snprintf_chk@GOT, CODE XREF=vasnprintf+1464, vasnprintf+1776, vasnprintf+2093, vasnprintf+2222, vasnprintf+2417, vasnprintf+3225
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2916:
0000000000002916         push       0x2
000000000000291b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_raise:        // raise
0000000000002920         jmp        qword [raise@GOT]                           ; raise, raise@GOT, CODE XREF=savewd_restore+188
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2926:
0000000000002926         push       0x3
000000000000292b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_utimensat:        // utimensat
0000000000002930         jmp        qword [utimensat@GOT]                       ; utimensat, utimensat@GOT, CODE XREF=utimecmpat+1273, utimecmpat+1871, lutimensat+5, fdutimens+957, lutimens+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2936:
0000000000002936         push       0x4
000000000000293b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000002940         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=safe_hasher+29, hash_get_first+60, hash_rehash+569, hash_insert_if_absent+477, set_program_name+154, sub_e280+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2946:
0000000000002946         push       0x5
000000000000294b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
0000000000002950         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=restore_default_fscreatecon_or_die+1, main+1942, main+2129, main+2882, mkancesdirs_safe_wd+124, mkancesdirs_safe_wd+295, mkancesdirs_safe_wd+437, process_dir+81, make_ancestor+23, install_file_in_file+351, install_file_in_file+530
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2956:
0000000000002956         push       0x6
000000000000295b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_unlink:        // unlink
0000000000002960         jmp        qword [unlink@GOT]                          ; unlink, unlink@GOT, CODE XREF=install_file_in_file+1260, copy_internal+2497, copy_internal+9194, copy_internal+13127
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2966:
0000000000002966         push       0x7
000000000000296b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
0000000000002970         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+780, usage+973, argmatch+162
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2976:
0000000000002976         push       0x8
000000000000297b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
0000000000002980         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdin+174, close_stdout+136, savewd_restore+334
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2986:
0000000000002986         push       0x9
000000000000298b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcpy:        // strcpy
0000000000002990         jmp        qword [strcpy@GOT]                          ; strcpy, strcpy@GOT, CODE XREF=copy_internal+10413
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2996:
0000000000002996         push       0xa
000000000000299b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
00000000000029a0         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_29a6:
00000000000029a6         push       0xb
00000000000029ab         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___read_chk:        // __read_chk
00000000000029b0         jmp        qword [__read_chk@GOT]                      ; __read_chk, __read_chk@GOT, CODE XREF=randread_new+280
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_29b6:
00000000000029b6         push       0xc
00000000000029bb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mkdir:        // mkdir
00000000000029c0         jmp        qword [mkdir@GOT]                           ; mkdir, mkdir@GOT, CODE XREF=make_ancestor+42, copy_internal+5302, make_dir_parents+208, make_dir_parents+528, try_dir+5
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_29c6:
00000000000029c6         push       0xd
00000000000029cb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_unlinkat:        // unlinkat
00000000000029d0         jmp        qword [unlinkat@GOT]                        ; unlinkat, unlinkat@GOT, CODE XREF=force_linkat+322, force_symlinkat+305
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_29d6:
00000000000029d6         push       0xe
00000000000029db         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qsort:        // qsort
00000000000029e0         jmp        qword [qsort@GOT]                           ; qsort, qsort@GOT, CODE XREF=streamsavedir+399
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_29e6:
00000000000029e6         push       0xf
00000000000029eb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_readlink:        // readlink
00000000000029f0         jmp        qword [readlink@GOT]                        ; readlink, readlink@GOT, CODE XREF=areadlink_with_size+89
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_29f6:
00000000000029f6         push       0x10
00000000000029fb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fcntl:        // fcntl
0000000000002a00         jmp        qword [fcntl@GOT]                           ; fcntl, fcntl@GOT, CODE XREF=rpl_fcntl+128, rpl_fcntl+212, rpl_fcntl+320, rpl_fcntl+407, rpl_fcntl+423, rpl_fcntl+460, rpl_fcntl+483, rpl_fcntl+559, rpl_fcntl+606
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a06:
0000000000002a06         push       0x11
0000000000002a0b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_clock_gettime:        // clock_gettime
0000000000002a10         jmp        qword [clock_gettime@GOT]                   ; clock_gettime, clock_gettime@GOT, CODE XREF=gettime+5, current_timespec+25
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a16:
0000000000002a16         push       0x12
0000000000002a1b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_write:        // write
0000000000002a20         jmp        qword [write@GOT]                           ; write, write@GOT, CODE XREF=safe_write+33
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a26:
0000000000002a26         push       0x13
0000000000002a2b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getpid:        // getpid
0000000000002a30         jmp        qword [getpid@GOT]                          ; getpid, getpid@GOT, CODE XREF=randread_new+407, randread_new+706
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a36:
0000000000002a36         push       0x14
0000000000002a3b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fread_unlocked:        // fread_unlocked
0000000000002a40         jmp        qword [fread_unlocked@GOT]                  ; fread_unlocked, fread_unlocked@GOT, CODE XREF=randread+97
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a46:
0000000000002a46         push       0x15
0000000000002a4b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000002a50         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+118
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a56:
0000000000002a56         push       0x16
0000000000002a5b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_pathconf:        // pathconf
0000000000002a60         jmp        qword [pathconf@GOT]                        ; pathconf, pathconf@GOT, CODE XREF=backupfile_internal+1455
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a66:
0000000000002a66         push       0x17
0000000000002a6b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___open_2:        // __open_2
0000000000002a70         jmp        qword [__open_2@GOT]                        ; __open_2, __open_2@GOT, CODE XREF=savewd_chdir+49, savewd_chdir+346
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a76:
0000000000002a76         push       0x18
0000000000002a7b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000002a80         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a86:
0000000000002a86         push       0x19
0000000000002a8b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_opendir:        // opendir
0000000000002a90         jmp        qword [opendir@GOT]                         ; opendir, opendir@GOT, CODE XREF=opendir_safer+8
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a96:
0000000000002a96         push       0x1a
0000000000002a9b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000002aa0         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+106
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2aa6:
0000000000002aa6         push       0x1b
0000000000002aab         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_stpcpy:        // stpcpy
0000000000002ab0         jmp        qword [stpcpy@GOT]                          ; stpcpy, stpcpy@GOT, CODE XREF=streamsavedir+440
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ab6:
0000000000002ab6         push       0x1c
0000000000002abb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_rmdir:        // rmdir
0000000000002ac0         jmp        qword [rmdir@GOT]                           ; rmdir, rmdir@GOT, CODE XREF=copy_internal+6688
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ac6:
0000000000002ac6         push       0x1d
0000000000002acb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000002ad0         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=restore_default_fscreatecon_or_die+29, main+1100, main+1818, main+1983, main+2208, main+2309, main+2354, main+2392, main+2552, main+2653, main+2762
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ad6:
0000000000002ad6         push       0x1e
0000000000002adb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000002ae0         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ae6:
0000000000002ae6         push       0x1f
0000000000002aeb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000002af0         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=copy_internal+3437, copy_internal+3471, copy_internal+3489, copy_internal+3591, copy_internal+7776, backupfile_internal+67, backupfile_internal+99, backupfile_internal+328, base_len+4, mfile_name_concat+51, quotearg_buffer_restyled+343
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2af6:
0000000000002af6         push       0x20
0000000000002afb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___lxstat:        // __lxstat
0000000000002b00         jmp        qword [__lxstat@GOT]                        ; __lxstat, __lxstat@GOT, CODE XREF=install_file_in_file+491, install_file_in_file+568, install_file_in_file+597, copy_internal+1496, copy_internal+2256, copy_internal+5169, copy_internal+7261, copy_internal+7315, copy_internal+9327, copy_internal+14186, copy_internal+14319
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2b06:
0000000000002b06         push       0x21
0000000000002b0b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_openat:        // openat
0000000000002b10         jmp        qword [openat@GOT]                          ; openat, openat@GOT, CODE XREF=openat_safer+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2b16:
0000000000002b16         push       0x22
0000000000002b1b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_chdir:        // chdir
0000000000002b20         jmp        qword [chdir@GOT]                           ; chdir, chdir@GOT, CODE XREF=savewd_chdir+283
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2b26:
0000000000002b26         push       0x23
0000000000002b2b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000002b30         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+3284, mkancesdirs_safe_wd+394, install_file_in_file+1512, prog_fprintf+271, overwrite_ok.isra.12+326, copy_internal+13604, copy+228, forget_created+101, src_to_dest_lookup+84, extent_scan_read+776, force_linkat+348
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2b36:
0000000000002b36         push       0x24
0000000000002b3b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getuid:        // getuid
0000000000002b40         jmp        qword [getuid@GOT]                          ; getuid, getuid@GOT, CODE XREF=install_file_in_file+1676, randread_new+452
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2b46:
0000000000002b46         push       0x25
0000000000002b4b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000002b50         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+466
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2b56:
0000000000002b56         push       0x26
0000000000002b5b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000002b60         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2b66:
0000000000002b66         push       0x27
0000000000002b6b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strchr:        // strchr
0000000000002b70         jmp        qword [strchr@GOT]                          ; strchr, strchr@GOT, CODE XREF=xstrtoul+291, xstrtoul+323, xstrtoul+380
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2b76:
0000000000002b76         push       0x28
0000000000002b7b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fxstatat:        // __fxstatat
0000000000002b80         jmp        qword [__fxstatat@GOT]                      ; __fxstatat, __fxstatat@GOT, CODE XREF=copy_internal+483, renameatu+316, renameatu+398, renameatu+488, same_nameat.part.0+71, same_nameat.part.0+127, utimecmpat+1347
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2b86:
0000000000002b86         push       0x29
0000000000002b8b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
0000000000002b90         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=prog_fprintf+264, emit_verbose+177, argmatch_valid+283
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2b96:
0000000000002b96         push       0x2a
0000000000002b9b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000002ba0         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ba6:
0000000000002ba6         push       0x2b
0000000000002bab         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_ftruncate:        // ftruncate
0000000000002bb0         jmp        qword [ftruncate@GOT]                       ; ftruncate, ftruncate@GOT, CODE XREF=copy_internal+15213, copy_internal+15426
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2bb6:
0000000000002bb6         push       0x2c
0000000000002bbb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
0000000000002bc0         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=create_hole+29, copy_internal+12843, j_j_fseeko+49, rpl_fclose+89
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2bc6:
0000000000002bc6         push       0x2d
0000000000002bcb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_gettimeofday:        // gettimeofday
0000000000002bd0         jmp        qword [gettimeofday@GOT]                    ; gettimeofday, gettimeofday@GOT, CODE XREF=randread_new+392, randread_new+632
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2bd6:
0000000000002bd6         push       0x2e
0000000000002bdb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
0000000000002be0         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=copy+192, copy+223, copy+259, copy+290, copy+321, copy+352, extent_scan_read+516, extent_scan_read+756, savewd_chdir+471, savewd_chdir+645, savewd_chdir+676
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2be6:
0000000000002be6         push       0x2f
0000000000002beb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000002bf0         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2bf6:
0000000000002bf6         push       0x30
0000000000002bfb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_geteuid:        // geteuid
0000000000002c00         jmp        qword [geteuid@GOT]                         ; geteuid, geteuid@GOT, CODE XREF=cp_options_default+27, copy_internal+16478, can_write_any_file+28
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2c06:
0000000000002c06         push       0x31
0000000000002c0b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_ioctl:        // ioctl
0000000000002c10         jmp        qword [ioctl@GOT]                           ; ioctl, ioctl@GOT, CODE XREF=copy_internal+15703, extent_scan_read+121
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2c16:
0000000000002c16         push       0x32
0000000000002c1b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_canonicalize_file_name:        // canonicalize_file_name
0000000000002c20         jmp        qword [canonicalize_file_name@GOT]          ; canonicalize_file_name, canonicalize_file_name@GOT, CODE XREF=copy_internal+5911
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2c26:
0000000000002c26         push       0x33
0000000000002c2b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_close:        // close
0000000000002c30         jmp        qword [close@GOT]                           ; close, close@GOT, CODE XREF=install_file_in_file+182, install_file_in_file+190, install_file_in_file+940, install_file_in_file+948, install_file_in_file+1652, copy_internal+8549, copy_internal+12962, opendirat+85, savewd_chdir+109, savewd_restore+245, savewd_finish+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2c36:
0000000000002c36         push       0x34
0000000000002c3b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_rewinddir:        // rewinddir
0000000000002c40         jmp        qword [rewinddir@GOT]                       ; rewinddir, rewinddir@GOT, CODE XREF=backupfile_internal+257
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2c46:
0000000000002c46         push       0x35
0000000000002c4b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strspn:        // strspn
0000000000002c50         jmp        qword [strspn@GOT]                          ; strspn, strspn@GOT, CODE XREF=try_tempname_len+104
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2c56:
0000000000002c56         push       0x36
0000000000002c5b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_closedir:        // closedir
0000000000002c60         jmp        qword [closedir@GOT]                        ; closedir, closedir@GOT, CODE XREF=backupfile_internal+887, backupfile_internal+1498, savedir+35, opendir_safer+95
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2c66:
0000000000002c66         push       0x37
0000000000002c6b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_posix_fadvise:        // posix_fadvise
0000000000002c70         jmp        qword [posix_fadvise@GOT]                   ; posix_fadvise, posix_fadvise@GOT, CODE XREF=fdadvise, fadvise+22
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2c76:
0000000000002c76         push       0x38
0000000000002c7b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_read:        // read
0000000000002c80         jmp        qword [read@GOT]                            ; read, read@GOT, CODE XREF=sparse_copy+176, safe_read+33
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2c86:
0000000000002c86         push       0x39
0000000000002c8b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000002c90         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=install_file_in_file+928, sparse_copy+418, copy_internal+10290, backupfile_internal+355, backupfile_internal+489, quotearg_buffer_restyled+410, same_nameat+105, argmatch+111, argmatch_valid+150, argmatch_to_argument+56
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2c96:
0000000000002c96         push       0x3a
0000000000002c9b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fallocate:        // fallocate
0000000000002ca0         jmp        qword [fallocate@GOT]                       ; fallocate, fallocate@GOT, CODE XREF=punch_hole+12
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ca6:
0000000000002ca6         push       0x3b
0000000000002cab         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000002cb0         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+166, usage+203, usage+240, usage+277, usage+314, usage+351, usage+388, usage+425, usage+462, usage+506, usage+1088
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2cb6:
0000000000002cb6         push       0x3c
0000000000002cbb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_utimes:        // utimes
0000000000002cc0         jmp        qword [utimes@GOT]                          ; utimes, utimes@GOT, CODE XREF=fdutimens+848
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2cc6:
0000000000002cc6         push       0x3d
0000000000002ccb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000002cd0         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=write_zeros+116, hash_initialize+177, hash_rehash+198, xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2cd6:
0000000000002cd6         push       0x3e
0000000000002cdb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___getdelim:        // __getdelim
0000000000002ce0         jmp        qword [__getdelim@GOT]                      ; __getdelim, __getdelim@GOT, CODE XREF=yesno+63
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ce6:
0000000000002ce6         push       0x3f
0000000000002ceb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcmp:        // strcmp
0000000000002cf0         jmp        qword [strcmp@GOT]                          ; strcmp, strcmp@GOT, CODE XREF=copy_internal+10318, copy_internal+14580, triple_compare_ino_str+36, direntry_cmp_name+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2cf6:
0000000000002cf6         push       0x40
0000000000002cfb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_signal:        // signal
0000000000002d00         jmp        qword [signal@GOT]                          ; signal, signal@GOT, CODE XREF=main+939
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d06:
0000000000002d06         push       0x41
0000000000002d0b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dirfd:        // dirfd
0000000000002d10         jmp        qword [dirfd@GOT]                           ; dirfd, dirfd@GOT, CODE XREF=opendir_safer+24
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d16:
0000000000002d16         push       0x42
0000000000002d1b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getpwnam:        // getpwnam
0000000000002d20         jmp        qword [getpwnam@GOT]                        ; getpwnam, getpwnam@GOT, CODE XREF=main+1529
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d26:
0000000000002d26         push       0x43
0000000000002d2b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fpathconf:        // fpathconf
0000000000002d30         jmp        qword [fpathconf@GOT]                       ; fpathconf, fpathconf@GOT, CODE XREF=backupfile_internal+1123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d36:
0000000000002d36         push       0x44
0000000000002d3b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_rpmatch:        // rpmatch
0000000000002d40         jmp        qword [rpmatch@GOT]                         ; rpmatch, rpmatch@GOT, CODE XREF=yesno+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d46:
0000000000002d46         push       0x45
0000000000002d4b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_syscall:        // syscall
0000000000002d50         jmp        qword [syscall@GOT]                         ; syscall, syscall@GOT, CODE XREF=renameatu+70
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d56:
0000000000002d56         push       0x46
0000000000002d5b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mkfifo:        // mkfifo
0000000000002d60         jmp        qword [mkfifo@GOT]                          ; mkfifo, mkfifo@GOT, CODE XREF=copy_internal+10701
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d66:
0000000000002d66         push       0x47
0000000000002d6b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_umask:        // umask
0000000000002d70         jmp        qword [umask@GOT]                           ; umask, umask@GOT, CODE XREF=main+398, cached_umask+18, cached_umask+33
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d76:
0000000000002d76         push       0x48
0000000000002d7b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000002d80         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=copy_internal+3629, backupfile_internal+214, backupfile_internal+673, backupfile_internal+981, backupfile_internal+1020, mdir_name+53, streamsavedir+626, xmemdup+35, randread+190, randread+356, vasnprintf+686
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d86:
0000000000002d86         push       0x49
0000000000002d8b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getgrnam:        // getgrnam
0000000000002d90         jmp        qword [getgrnam@GOT]                        ; getgrnam, getgrnam@GOT, CODE XREF=main+1573
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d96:
0000000000002d96         push       0x4a
0000000000002d9b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___xmknod:        // __xmknod
0000000000002da0         jmp        qword [__xmknod@GOT]                        ; __xmknod, __xmknod@GOT, CODE XREF=copy_internal+9695, copy_internal+10664
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2da6:
0000000000002da6         push       0x4b
0000000000002dab         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000002db0         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=fadvise+8, j_j_fseeko+36, rpl_fclose+7, rpl_fclose+75, fopen_safer+23
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2db6:
0000000000002db6         push       0x4c
0000000000002dbb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getgid:        // getgid
0000000000002dc0         jmp        qword [getgid@GOT]                          ; getgid, getgid@GOT, CODE XREF=install_file_in_file+1619, randread_new+508
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2dc6:
0000000000002dc6         push       0x4d
0000000000002dcb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___xstat:        // __xstat
0000000000002dd0         jmp        qword [__xstat@GOT]                         ; __xstat, __xstat@GOT, CODE XREF=main+1158, main+2116, install_file_in_file+64, copy_internal+215, copy_internal+8679, copy_internal+8707, copy_internal+10433, copy_internal+13642, copy_internal+13709, make_dir_parents+293, mode_create_from_ref+38
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2dd6:
0000000000002dd6         push       0x4e
0000000000002ddb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_readdir:        // readdir
0000000000002de0         jmp        qword [readdir@GOT]                         ; readdir, readdir@GOT, CODE XREF=backupfile_internal+307, backupfile_internal+730, streamsavedir+110
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2de6:
0000000000002de6         push       0x4f
0000000000002deb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000002df0         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=install_file_in_file+1463, samedir_template+34, areadlink_with_size+67, areadlink_with_size+126, backupfile_internal+154, mdir_name+31, mfile_name_concat+151, transfer_entries+293, hash_initialize+62, hash_insert_if_absent+517, utimecmpat+409
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2df6:
0000000000002df6         push       0x50
0000000000002dfb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000002e00         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2e06:
0000000000002e06         push       0x51
0000000000002e0b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000002e10         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2e16:
0000000000002e16         push       0x52
0000000000002e1b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fxstat:        // __fxstat
0000000000002e20         jmp        qword [__fxstat@GOT]                        ; __fxstat, __fxstat@GOT, CODE XREF=copy_internal+8417, copy_internal+11970, fdutimens+387, fdutimens+570, fdutimens+660, dirchownmod+75
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2e26:
0000000000002e26         push       0x53
0000000000002e2b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_endpwent:        // endpwent
0000000000002e30         jmp        qword [endpwent@GOT]                        ; endpwent, endpwent@GOT, CODE XREF=main+1552
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2e36:
0000000000002e36         push       0x54
0000000000002e3b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lchown:        // lchown
0000000000002e40         jmp        qword [lchown@GOT]                          ; lchown, lchown@GOT, CODE XREF=install_file_in_file+409, set_owner+179, set_owner+275, copy_internal+14237, dirchownmod+165
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2e46:
0000000000002e46         push       0x55
0000000000002e4b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000002e50         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fflush+9, rpl_fclose+19
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2e56:
0000000000002e56         push       0x56
0000000000002e5b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fchdir:        // fchdir
0000000000002e60         jmp        qword [fchdir@GOT]                          ; fchdir, fchdir@GOT, CODE XREF=savewd_chdir+234, savewd_restore+211
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2e66:
0000000000002e66         push       0x57
0000000000002e6b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite_unlocked:        // fwrite_unlocked
0000000000002e70         jmp        qword [fwrite_unlocked@GOT]                 ; fwrite_unlocked, fwrite_unlocked@GOT, CODE XREF=prog_fprintf+145
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2e76:
0000000000002e76         push       0x58
0000000000002e7b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_chown:        // chown
0000000000002e80         jmp        qword [chown@GOT]                           ; chown, chown@GOT, CODE XREF=dirchownmod+480
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2e86:
0000000000002e86         push       0x59
0000000000002e8b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
0000000000002e90         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=backupfile_internal+609, xrealloc+17, vasnprintf+645, vasnprintf+1242, vasnprintf+1660, vasnprintf+2887, vasnprintf+4043, vasnprintf+4085, printf_parse+805, printf_parse+1041, printf_parse+2266
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2e96:
0000000000002e96         push       0x5a
0000000000002e9b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_stpncpy:        // stpncpy
0000000000002ea0         jmp        qword [stpncpy@GOT]                         ; stpncpy, stpncpy@GOT, CODE XREF=install_file_in_file+1489
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ea6:
0000000000002ea6         push       0x5b
0000000000002eab         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fdopen:        // fdopen
0000000000002eb0         jmp        qword [fdopen@GOT]                          ; fdopen, fdopen@GOT, CODE XREF=fopen_safer+80
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2eb6:
0000000000002eb6         push       0x5c
0000000000002ebb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_linkat:        // linkat
0000000000002ec0         jmp        qword [linkat@GOT]                          ; linkat, linkat@GOT, CODE XREF=try_link+19, force_linkat+247
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ec6:
0000000000002ec6         push       0x5d
0000000000002ecb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000002ed0         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+87, usage+755, usage+948, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ed6:
0000000000002ed6         push       0x5e
0000000000002edb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000002ee0         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=usage+129, usage+743, usage+836, usage+897, usage+936, usage+1039, emit_verbose+66, emit_verbose+124, create_hard_link+144, copy_internal+4139, copy_internal+5037
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ee6:
0000000000002ee6         push       0x5f
0000000000002eeb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fchmod:        // fchmod
0000000000002ef0         jmp        qword [fchmod@GOT]                          ; fchmod, fchmod@GOT, CODE XREF=fchmod_or_lchmod+9, chmod_or_fchmod+11, dirchownmod+498
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ef6:
0000000000002ef6         push       0x60
0000000000002efb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setvbuf:        // setvbuf
0000000000002f00         jmp        qword [setvbuf@GOT]                         ; setvbuf, setvbuf@GOT, CODE XREF=randread_new+130
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2f06:
0000000000002f06         push       0x61
0000000000002f0b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_chmod:        // chmod
0000000000002f10         jmp        qword [chmod@GOT]                           ; chmod, chmod@GOT, CODE XREF=fchmod_or_lchmod+17, install_file_in_file+436, copy_internal+1949, copy_internal+7373, j_j_chmod, dirchownmod+398
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2f16:
0000000000002f16         push       0x62
0000000000002f1b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mempcpy:        // mempcpy
0000000000002f20         jmp        qword [mempcpy@GOT]                         ; mempcpy, mempcpy@GOT, CODE XREF=copy_internal+10402, samedir_template+58, mfile_name_concat+173, mfile_name_concat+206
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2f26:
0000000000002f26         push       0x63
0000000000002f2b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000002f30         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=restore_default_fscreatecon_or_die+46, main+1114, main+1835, main+2003, main+2228, main+2368, main+2406, main+2572, main+2673, main+2783, main+2839
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2f36:
0000000000002f36         push       0x64
0000000000002f3b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_waitpid:        // waitpid
0000000000002f40         jmp        qword [waitpid@GOT]                         ; waitpid, waitpid@GOT, CODE XREF=install_file_in_file+1147, savewd_restore+161
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2f46:
0000000000002f46         push       0x65
0000000000002f4b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___explicit_bzero_chk:        // __explicit_bzero_chk
0000000000002f50         jmp        qword [__explicit_bzero_chk@GOT]            ; __explicit_bzero_chk, __explicit_bzero_chk@GOT, CODE XREF=randint_free+16, randint_all_free+50, randread_free+24
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2f56:
0000000000002f56         push       0x66
0000000000002f5b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_open:        // open
0000000000002f60         jmp        qword [open@GOT]                            ; open, open@GOT, CODE XREF=install_file_in_file+806, install_file_in_file+829, open_safer+35, try_file+17, randread_new+234
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2f66:
0000000000002f66         push       0x67
0000000000002f6b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000002f70         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2f76:
0000000000002f76         push       0x68
0000000000002f7b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fchown:        // fchown
0000000000002f80         jmp        qword [fchown@GOT]                          ; fchown, fchown@GOT, CODE XREF=set_owner+98, set_owner+498, dirchownmod+418
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2f86:
0000000000002f86         push       0x69
0000000000002f8b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fopen:        // fopen
0000000000002f90         jmp        qword [fopen@GOT]                           ; fopen, fopen@GOT, CODE XREF=fopen_safer+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2f96:
0000000000002f96         push       0x6a
0000000000002f9b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_rename:        // rename
0000000000002fa0         jmp        qword [rename@GOT]                          ; rename, rename@GOT, CODE XREF=copy_internal+2413, copy_internal+4034
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2fa6:
0000000000002fa6         push       0x6b
0000000000002fab         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fdopendir:        // fdopendir
0000000000002fb0         jmp        qword [fdopendir@GOT]                       ; fdopendir, fdopendir@GOT, CODE XREF=opendirat+34, opendir_safer+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2fb6:
0000000000002fb6         push       0x6c
0000000000002fbb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_futimens:        // futimens
0000000000002fc0         jmp        qword [futimens@GOT]                        ; futimens, futimens@GOT, CODE XREF=fdutimens+141
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2fc6:
0000000000002fc6         push       0x6d
0000000000002fcb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_euidaccess:        // euidaccess
0000000000002fd0         jmp        qword [euidaccess@GOT]                      ; euidaccess, euidaccess@GOT, CODE XREF=writable_destination+56
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2fd6:
0000000000002fd6         push       0x6e
0000000000002fdb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strtoul:        // strtoul
0000000000002fe0         jmp        qword [strtoul@GOT]                         ; strtoul, strtoul@GOT, CODE XREF=xstrtoul+140
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2fe6:
0000000000002fe6         push       0x6f
0000000000002feb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000002ff0         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ff6:
0000000000002ff6         push       0x70
0000000000002ffb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_renameat:        // renameat
0000000000003000         jmp        qword [renameat@GOT]                        ; renameat, renameat@GOT, CODE XREF=force_linkat+290, force_symlinkat+266, renameatu+240
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3006:
0000000000003006         push       0x71
000000000000300b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getpagesize:        // getpagesize
0000000000003010         jmp        qword [getpagesize@GOT]                     ; getpagesize, getpagesize@GOT, CODE XREF=copy_internal+12012
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3016:
0000000000003016         push       0x72
000000000000301b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getppid:        // getppid
0000000000003020         jmp        qword [getppid@GOT]                         ; getppid, getppid@GOT, CODE XREF=randread_new+419, randread_new+759
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3026:
0000000000003026         push       0x73
000000000000302b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000003030         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+875, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3036:
0000000000003036         push       0x74
000000000000303b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000003040         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149, rpl_vfprintf+102
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3046:
0000000000003046         push       0x75
000000000000304b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000003050         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, overwrite_ok.isra.12+184, overwrite_ok.isra.12+265, hash_print_statistics+118, hash_print_statistics+143, hash_print_statistics+211, hash_print_statistics+246, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3056:
0000000000003056         push       0x76
000000000000305b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000003060         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_e280+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3066:
0000000000003066         push       0x77
000000000000306b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_symlinkat:        // symlinkat
0000000000003070         jmp        qword [symlinkat@GOT]                       ; symlinkat, symlinkat@GOT, CODE XREF=try_symlink+12, force_symlinkat+220
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3076:
0000000000003076         push       0x78
000000000000307b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_execlp:        // execlp
0000000000003080         jmp        qword [execlp@GOT]                          ; execlp, execlp@GOT, CODE XREF=install_file_in_file+1537
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3086:
0000000000003086         push       0x79
000000000000308b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000003090         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_e280+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3096:
0000000000003096         push       0x7a
000000000000309b         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fork:        // fork
00000000000030a0         jmp        qword [fork@GOT]                            ; fork, fork@GOT, CODE XREF=install_file_in_file+1120, savewd_chdir+537
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_30a6:
00000000000030a6         push       0x7b
00000000000030ab         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_futimesat:        // futimesat
00000000000030b0         jmp        qword [futimesat@GOT]                       ; futimesat, futimesat@GOT, CODE XREF=fdutimens+313, fdutimens+528, fdutimens+784
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_30b6:
00000000000030b6         push       0x7c
00000000000030bb         jmp        0x28e0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
00000000000030c0         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_e020+51, xstrtoul+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_30c6:
00000000000030c6         push       0x7d
00000000000030cb         jmp        0x28e0
                        ; endp


        ; Section .plt.got
        ; Range: [0x30d0; 0x30e0[ (16 bytes)
        ; File offset : [12496; 12512[ (16 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_30d0:
00000000000030d0         jmp        qword [qword_21cfd0]                        ; qword, End of unwind block (FDE at 0x1993c), Begin of unwind block (FDE at 0x19964), qword_21cfd0, CODE XREF=main+1427, main+1659, main+1775, install_file_in_file+1502, copy_internal+3644, copy_internal+3839, copy_internal+5989, copy_internal+7927, copy_internal+7935, copy_internal+7982, copy_internal+8584
                        ; endp
00000000000030d6         align      8


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_21cff8:        // qword_21cff8
00000000000030d8         jmp        qword [qword_21cff8]                        ; qword, qword_21cff8, CODE XREF=__do_global_dtors_aux+30
                        ; endp
00000000000030de         align      32


        ; Section .text
        ; Range: [0x30e0; 0x1639e[ (78526 bytes)
        ; File offset : [12512; 91038[ (78526 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fchmod_or_lchmod:
00000000000030e0         test       edi, edi                                    ; End of unwind block (FDE at 0x19964), Begin of unwind block (FDE at 0x19bdc), CODE XREF=copy_internal+13994, copy_internal+16509, copy_internal+16549
00000000000030e2         mov        rax, rsi
00000000000030e5         mov        esi, edx
00000000000030e7         js         loc_30ee

00000000000030e9         jmp        j_fchmod                                    ; fchmod
                        ; endp

                     loc_30ee:
00000000000030ee         mov        rdi, rax                                    ; argument "__file" for method j_chmod, CODE XREF=fchmod_or_lchmod+7
00000000000030f1         jmp        j_chmod                                     ; chmod
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_48: int64_t, -72
        ;    var_C8: int32_t, -200
        ;    var_E0: int8_t, -224
        ;    var_E8: int64_t, -232
        ;    var_F0: int64_t, -240
        ;    var_F8: int32_t, -248
        ;    var_100: int8_t, -256
        ;    var_101: int8_t, -257
        ;    var_102: int8_t, -258
        ;    var_103: int8_t, -259
        ;    var_104: int8_t, -260
        ;    var_105: int8_t, -261
        ;    var_106: int8_t, -262
        ;    var_107: int8_t, -263
        ;    var_108: int8_t, -264
        ;    var_109: int8_t, -265
        ;    var_10A: int8_t, -266
        ;    var_10B: int8_t, -267
        ;    var_10C: int8_t, -268
        ;    var_10D: int8_t, -269
        ;    var_10E: int8_t, -270
        ;    var_10F: int8_t, -271
        ;    var_110: int8_t, -272
        ;    var_111: int8_t, -273
        ;    var_112: int8_t, -274
        ;    var_113: int8_t, -275
        ;    var_114: int8_t, -276
        ;    var_117: int8_t, -279
        ;    var_118: int8_t, -280
        ;    var_119: int8_t, -281
        ;    var_11A: int8_t, -282
        ;    var_11B: int8_t, -283
        ;    var_11C: int8_t, -284
        ;    var_120: int32_t, -288
        ;    var_124: int32_t, -292
        ;    var_128: int32_t, -296
        ;    var_12C: int32_t, -300
        ;    var_130: int32_t, -304
        ;    var_138: int64_t, -312
        ;    var_148: int64_t, -328
        ;    var_149: int8_t, -329
        ;    var_14A: int8_t, -330
        ;    var_14B: int8_t, -331
        ;    var_158: int64_t, -344
        ;    var_160: int64_t, -352
        ;    var_168: int64_t, -360


                     restore_default_fscreatecon_or_die:
00000000000030f6         push       rbx                                         ; End of unwind block (FDE at 0x19bdc), Begin of unwind block (FDE at 0x19bf0), CODE XREF=copy_internal+4368
00000000000030f7         call       j___errno_location                          ; __errno_location
00000000000030fc         lea        rsi, qword [aFailedToRestor]                ; argument "msgid" for method j_dcgettext, "failed to restore the default file creation context"
0000000000003103         mov        rbx, rax
0000000000003106         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000310b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000310d         mov        dword [rax], 0x5f
0000000000003113         call       j_dcgettext                                 ; dcgettext
0000000000003118         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
000000000000311a         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000311d         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003122         xor        eax, eax
0000000000003124         call       j_error                                     ; error
0000000000003129         nop        dword [rax]                                 ; End of unwind block (FDE at 0x19bf0)
                     main:
0000000000003130         push       r15                                         ; Begin of unwind block (FDE at 0x19ad8), DATA XREF=_start+29
0000000000003132         push       r14
0000000000003134         xor        r15d, r15d
0000000000003137         push       r13
0000000000003139         push       r12
000000000000313b         lea        r12, qword [long_options]                   ; long_options
0000000000003142         push       rbp
0000000000003143         push       rbx
0000000000003144         mov        ebx, edi
0000000000003146         mov        rbp, rsi
0000000000003149         xor        r14d, r14d
000000000000314c         xor        r13d, r13d
000000000000314f         sub        rsp, 0x138
0000000000003156         mov        rdi, qword [rsi]
0000000000003159         mov        dword [selinux_enabled], 0x0                ; selinux_enabled
0000000000003163         mov        rax, qword [fs:0x28]
000000000000316c         mov        qword [rsp+0x170+var_48], rax
0000000000003174         xor        eax, eax
0000000000003176         call       set_program_name                            ; set_program_name
000000000000317b         lea        rsi, qword [aSSUnbackupn+20]                ; argument "__locale" for method j_setlocale, 0x17fc9
0000000000003182         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
0000000000003187         call       j_setlocale                                 ; setlocale
000000000000318c         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
0000000000003193         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
000000000000319a         call       j_bindtextdomain                            ; bindtextdomain
000000000000319f         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
00000000000031a6         call       j_textdomain                                ; textdomain
00000000000031ab         lea        rdi, qword [close_stdin]                    ; argument "__func" for method atexit, close_stdin
00000000000031b2         call       atexit                                      ; atexit
00000000000031b7         lea        rax, qword [rsp+0x170+var_130]
00000000000031bc         mov        rdi, rax
00000000000031bf         mov        qword [rsp+0x170+var_168], rax
00000000000031c4         call       cp_options_default                          ; cp_options_default
00000000000031c9         xor        edi, edi                                    ; argument "__mask" for method j_umask
00000000000031cb         mov        byte [rsp+0x170+var_11C], 0x1
00000000000031d0         mov        dword [rsp+0x170+var_F8], 0x0
00000000000031d8         mov        dword [rsp+0x170+var_12C], 0x4
00000000000031e0         mov        byte [rsp+0x170+var_11B], 0x1
00000000000031e5         mov        byte [rsp+0x170+var_11A], 0x0
00000000000031ea         mov        byte [rsp+0x170+var_119], 0x0
00000000000031ef         mov        dword [rsp+0x170+var_128], 0x4
00000000000031f7         mov        byte [rsp+0x170+var_118], 0x0
00000000000031fc         mov        byte [rsp+0x170+var_117], 0x1
0000000000003201         mov        byte [rsp+0x170+var_114], 0x0
0000000000003206         mov        byte [rsp+0x170+var_113], 0x0
000000000000320b         mov        byte [rsp+0x170+var_10E], 0x0
0000000000003210         mov        byte [rsp+0x170+var_112], 0x0
0000000000003215         mov        byte [rsp+0x170+var_111], 0x0
000000000000321a         mov        byte [rsp+0x170+var_110], 0x0
000000000000321f         mov        byte [rsp+0x170+var_107], 0x0
0000000000003224         mov        byte [rsp+0x170+var_10D], 0x1
0000000000003229         mov        byte [rsp+0x170+var_10C], 0x0
000000000000322e         mov        byte [rsp+0x170+var_108], 0x0
0000000000003233         mov        byte [rsp+0x170+var_106], 0x0
0000000000003238         mov        dword [rsp+0x170+var_124], 0x2
0000000000003240         mov        byte [rsp+0x170+var_104], 0x0
0000000000003245         mov        dword [rsp+0x170+var_130], 0x0
000000000000324d         mov        byte [rsp+0x170+var_105], 0x1
0000000000003252         mov        dword [rsp+0x170+var_120], 0x180
000000000000325a         mov        byte [rsp+0x170+var_101], 0x0
000000000000325f         mov        byte [rsp+0x170+var_100], 0x0
0000000000003264         mov        byte [rsp+0x170+var_103], 0x0
0000000000003269         mov        byte [rsp+0x170+var_10A], 0x0
000000000000326e         mov        byte [rsp+0x170+var_10B], 0x0
0000000000003273         mov        byte [rsp+0x170+var_10F], 0x0
0000000000003278         mov        byte [rsp+0x170+var_109], 0x0
000000000000327d         mov        byte [rsp+0x170+var_102], 0x0
0000000000003282         mov        qword [rsp+0x170+var_F0], 0x0
000000000000328e         mov        qword [rsp+0x170+var_E8], 0x0
000000000000329a         mov        qword [owner_name], 0x0                     ; owner_name
00000000000032a5         mov        qword [group_name], 0x0                     ; group_name
00000000000032b0         mov        byte [strip_files], 0x0                     ; strip_files
00000000000032b7         mov        byte [dir_arg], 0x0                         ; dir_arg
00000000000032be         call       j_umask                                     ; umask
00000000000032c3         mov        qword [rsp+0x170+var_148], 0x0
00000000000032cc         mov        byte [rsp+0x170+var_149], 0x0
00000000000032d1         mov        byte [rsp+0x170+var_14A], 0x0
00000000000032d6         mov        byte [rsp+0x170+var_14B], 0x0
00000000000032db         mov        qword [rsp+0x170+var_160], 0x0
00000000000032e4         mov        qword [rsp+0x170+var_158], 0x0
00000000000032ed         nop        dword [rax]

                     loc_32f0:
00000000000032f0         lea        rdx, qword [aBccsddgmopttvs]                ; argument "__shortopts" for method j_getopt_long, "bcCsDdg:m:o:pt:TvS:Z", CODE XREF=main+536, main+582, main+665, main+704, main+716, main+735, main+754, main+800, main+812, main+903, main+920
00000000000032f7         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
00000000000032fa         mov        rcx, r12                                    ; argument "__longopts" for method j_getopt_long
00000000000032fd         mov        rsi, rbp                                    ; argument "___argv" for method j_getopt_long
0000000000003300         mov        edi, ebx                                    ; argument "___argc" for method j_getopt_long
0000000000003302         call       j_getopt_long                               ; getopt_long
0000000000003307         cmp        eax, 0xffffffff
000000000000330a         je         loc_3594

0000000000003310         cmp        eax, 0x64
0000000000003313         je         loc_33f5

0000000000003319         jle        loc_3350

000000000000331b         cmp        eax, 0x73
000000000000331e         je         loc_34cd

0000000000003324         jg         loc_3390

0000000000003326         cmp        eax, 0x6d
0000000000003329         je         loc_34bc

000000000000332f         jle        loc_34a0

0000000000003335         cmp        eax, 0x6f
0000000000003338         je         loc_3401

000000000000333e         cmp        eax, 0x70
0000000000003341         jne        loc_337c

0000000000003343         mov        byte [rsp+0x170+var_111], 0x1
0000000000003348         jmp        loc_32f0
000000000000334a         align      16

                     loc_3350:
0000000000003350         cmp        eax, 0x53                                   ; CODE XREF=main+489
0000000000003353         je         loc_34fe

0000000000003359         jle        loc_33d0

000000000000335b         cmp        eax, 0x5a
000000000000335e         je         loc_3427

0000000000003364         jle        loc_3414

000000000000336a         cmp        eax, 0x62
000000000000336d         je         loc_34e5

0000000000003373         cmp        eax, 0x63
0000000000003376         je         loc_32f0

                     loc_337c:
000000000000337c         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+529, main+639, main+697, main+743, main+822, main+883, main+1026, main+3045, main+3174
0000000000003381         call       usage                                       ; usage
0000000000003386         nop        word [cs:rax+rax]

                     loc_3390:
0000000000003390         cmp        eax, 0x76                                   ; CODE XREF=main+500
0000000000003393         je         loc_354d

0000000000003399         jle        loc_352f

000000000000339f         cmp        eax, 0x80
00000000000033a4         je         loc_3515

00000000000033aa         cmp        eax, 0x81
00000000000033af         jne        loc_337c

00000000000033b1         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
00000000000033b8         call       xstrdup                                     ; xstrdup
00000000000033bd         mov        byte [rsp+0x170+var_149], 0x1
00000000000033c2         mov        qword [strip_program], rax                  ; strip_program
00000000000033c9         jmp        loc_32f0
00000000000033ce         align      16

                     loc_33d0:
00000000000033d0         cmp        eax, 0xffffff7e                             ; CODE XREF=main+553
00000000000033d5         je         loc_3bd5

00000000000033db         jle        loc_3461

00000000000033e1         cmp        eax, 0x43
00000000000033e4         je         loc_3455

00000000000033e6         cmp        eax, 0x44
00000000000033e9         jne        loc_337c

00000000000033eb         mov        byte [rsp+0x170+var_14B], 0x1
00000000000033f0         jmp        loc_32f0

                     loc_33f5:
00000000000033f5         mov        byte [dir_arg], 0x1                         ; dir_arg, CODE XREF=main+483
00000000000033fc         jmp        loc_32f0

                     loc_3401:
0000000000003401         mov        rax, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+520
0000000000003408         mov        qword [owner_name], rax                     ; owner_name
000000000000340f         jmp        loc_32f0

                     loc_3414:
0000000000003414         cmp        eax, 0x54                                   ; CODE XREF=main+564
0000000000003417         jne        loc_337c

000000000000341d         mov        byte [rsp+0x170+var_14A], 0x1
0000000000003422         jmp        loc_32f0

                     loc_3427:
0000000000003427         cmp        dword [selinux_enabled], 0x0                ; selinux_enabled, CODE XREF=main+558
000000000000342e         mov        rax, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000003435         je         loc_3557

000000000000343b         test       rax, rax
000000000000343e         mov        byte [use_default_selinux_context], 0x0     ; use_default_selinux_context
0000000000003445         je         loc_3a4a

000000000000344b         mov        qword [rsp+0x170+var_148], rax
0000000000003450         jmp        loc_32f0

                     loc_3455:
0000000000003455         mov        byte [copy_only_if_needed], 0x1             ; copy_only_if_needed, CODE XREF=main+692
000000000000345c         jmp        loc_32f0

                     loc_3461:
0000000000003461         cmp        eax, 0xffffff7d                             ; CODE XREF=main+683
0000000000003466         jne        loc_337c

000000000000346c         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003473         mov        rcx, qword [Version]                        ; Version
000000000000347a         lea        r8, qword [aDavidMackenzie]                 ; "David MacKenzie"
0000000000003481         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x16506
0000000000003488         lea        rsi, qword [aInstall]                       ; "install"
000000000000348f         xor        r9d, r9d
0000000000003492         xor        eax, eax
0000000000003494         call       version_etc                                 ; version_etc
0000000000003499         xor        edi, edi                                    ; argument "__status" for method j_exit
000000000000349b         call       j_exit                                      ; exit
                        ; endp

                     loc_34a0:
00000000000034a0         cmp        eax, 0x67                                   ; CODE XREF=main+511
00000000000034a3         jne        loc_337c

00000000000034a9         mov        rax, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
00000000000034b0         mov        qword [group_name], rax                     ; group_name
00000000000034b7         jmp        loc_32f0

                     loc_34bc:
00000000000034bc         mov        rax, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+505
00000000000034c3         mov        qword [rsp+0x170+var_158], rax
00000000000034c8         jmp        loc_32f0

                     loc_34cd:
00000000000034cd         xor        esi, esi                                    ; argument "__handler" for method j_signal, CODE XREF=main+494
00000000000034cf         mov        edi, 0x11                                   ; argument "__sig" for method j_signal
00000000000034d4         mov        byte [strip_files], 0x1                     ; strip_files
00000000000034db         call       j_signal                                    ; signal
00000000000034e0         jmp        loc_32f0

                     loc_34e5:
00000000000034e5         mov        rax, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+573
00000000000034ec         mov        r13d, 0x1
00000000000034f2         test       rax, rax
00000000000034f5         cmovne     r14, rax
00000000000034f9         jmp        loc_32f0

                     loc_34fe:
00000000000034fe         mov        rax, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+547
0000000000003505         mov        r13d, 0x1
000000000000350b         mov        qword [rsp+0x170+var_160], rax
0000000000003510         jmp        loc_32f0

                     loc_3515:
0000000000003515         cmp        dword [selinux_enabled], 0x0                ; selinux_enabled, CODE XREF=main+628
000000000000351c         je         loc_356e

000000000000351e         mov        byte [rsp+0x170+var_10B], 0x1
0000000000003523         mov        byte [use_default_selinux_context], 0x0     ; use_default_selinux_context
000000000000352a         jmp        loc_32f0

                     loc_352f:
000000000000352f         cmp        eax, 0x74                                   ; CODE XREF=main+617
0000000000003532         jne        loc_337c

0000000000003538         test       r15, r15
000000000000353b         jne        loc_3c8b

0000000000003541         mov        r15, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000003548         jmp        loc_32f0

                     loc_354d:
000000000000354d         mov        byte [rsp+0x170+var_102], 0x1               ; CODE XREF=main+611
0000000000003552         jmp        loc_32f0

                     loc_3557:
0000000000003557         test       rax, rax                                    ; CODE XREF=main+773
000000000000355a         je         loc_32f0

0000000000003560         mov        edx, 0x5
0000000000003565         lea        rsi, qword [aWarningIgnorin_173d8]          ; "warning: ignoring --context; it requires an SELinux-enabled kernel"
000000000000356c         jmp        loc_357a

                     loc_356e:
000000000000356e         lea        rsi, qword [aWarningIgnorin]                ; "WARNING: ignoring --preserve-context; this kernel is not SELinux-enabled", CODE XREF=main+1004
0000000000003575         mov        edx, 0x5

                     loc_357a:
000000000000357a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=main+1084
000000000000357c         call       j_dcgettext                                 ; dcgettext
0000000000003581         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003583         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003586         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003588         xor        eax, eax
000000000000358a         call       j_error                                     ; error
000000000000358f         jmp        loc_32f0

                     loc_3594:
0000000000003594         cmp        byte [dir_arg], 0x0                         ; dir_arg, CODE XREF=main+474
000000000000359b         jne        loc_3826

00000000000035a1         test       r15, r15
00000000000035a4         je         loc_35e5

00000000000035a6         lea        rdx, qword [rsp+0x170+var_E0]               ; argument "__stat_buf" for method j___xstat
00000000000035ae         mov        rsi, r15                                    ; argument "__filename" for method j___xstat
00000000000035b1         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
00000000000035b6         call       j___xstat                                   ; __xstat
00000000000035bb         cmp        byte [rsp+0x170+var_14B], 0x0
00000000000035c0         jne        loc_35ca

00000000000035c2         test       eax, eax
00000000000035c4         jne        loc_3c4c

                     loc_35ca:
00000000000035ca         test       eax, eax                                    ; CODE XREF=main+1168
00000000000035cc         jne        loc_35e5

00000000000035ce         mov        eax, dword [rsp+0x170+var_C8]
00000000000035d5         and        eax, 0xf000
00000000000035da         cmp        eax, 0x4000
00000000000035df         jne        loc_3d3e

                     loc_35e5:
00000000000035e5         xor        eax, eax                                    ; CODE XREF=main+1140, main+1180, main+1798
00000000000035e7         test       r13b, r13b
00000000000035ea         jne        loc_3a27

                     loc_35f0:
00000000000035f0         mov        rdi, qword [rsp+0x170+var_160]              ; CODE XREF=main+2325
00000000000035f5         mov        dword [rsp+0x170+var_130], eax
00000000000035f9         call       set_simple_backup_suffix                    ; set_simple_backup_suffix
00000000000035fe         cmp        byte [rsp+0x170+var_10B], 0x0
0000000000003603         je         loc_38ba

0000000000003609         cmp        byte [rsp+0x170+var_10F], 0x0
000000000000360e         jne        loc_3d1a

0000000000003614         cmp        qword [rsp+0x170+var_148], 0x0
000000000000361a         jne        loc_3d1a

                     loc_3620:
0000000000003620         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+1936
0000000000003627         sub        ebx, eax
0000000000003629         lea        rax, qword [rbp+rax*8]
000000000000362e         mov        qword [rsp+0x170+var_160], rax
0000000000003633         movzx      eax, byte [dir_arg]                         ; dir_arg
000000000000363a         xor        eax, 0x1
000000000000363d         test       r15, r15
0000000000003640         sete       dl
0000000000003643         and        eax, edx
0000000000003645         movzx      edx, al
0000000000003648         cmp        edx, ebx
000000000000364a         jge        loc_3cd3

0000000000003650         cmp        byte [rsp+0x170+var_14A], 0x0
0000000000003655         je         loc_3908

000000000000365b         test       r15, r15
000000000000365e         jne        loc_3caf

0000000000003664         cmp        ebx, 0x2
0000000000003667         jg         loc_3ddd

                     loc_366d:
000000000000366d         mov        rax, qword [rsp+0x170+var_158]              ; CODE XREF=main+2010, main+2022, main+2171, main+2720
0000000000003672         test       rax, rax
0000000000003675         je         loc_36c8

0000000000003677         mov        rdi, rax
000000000000367a         call       mode_compile                                ; mode_compile
000000000000367f         test       rax, rax
0000000000003682         mov        rbp, rax
0000000000003685         je         loc_3da9

000000000000368b         xor        r8d, r8d
000000000000368e         mov        rcx, rax
0000000000003691         xor        edx, edx
0000000000003693         xor        esi, esi
0000000000003695         xor        edi, edi
0000000000003697         call       mode_adjust                                 ; mode_adjust
000000000000369c         lea        r8, qword [dir_mode_bits]                   ; dir_mode_bits
00000000000036a3         xor        edi, edi
00000000000036a5         mov        rcx, rbp
00000000000036a8         xor        edx, edx
00000000000036aa         mov        esi, 0x1
00000000000036af         mov        dword [mode], eax                           ; mode
00000000000036b5         call       mode_adjust                                 ; mode_adjust
00000000000036ba         mov        rdi, rbp
00000000000036bd         mov        dword [dir_mode], eax                       ; dir_mode
00000000000036c3         call       sub_30d0                                    ; sub_30d0

                     loc_36c8:
00000000000036c8         cmp        byte [rsp+0x170+var_149], 0x0               ; CODE XREF=main+1349
00000000000036cd         je         loc_36dc

00000000000036cf         cmp        byte [strip_files], 0x0                     ; strip_files
00000000000036d6         je         loc_3a54

                     loc_36dc:
00000000000036dc         cmp        byte [copy_only_if_needed], 0x0             ; copy_only_if_needed, CODE XREF=main+1437, main+2373
00000000000036e3         je         loc_3719

00000000000036e5         cmp        byte [rsp+0x170+var_111], 0x0
00000000000036ea         jne        loc_3d9b

00000000000036f0         cmp        byte [strip_files], 0x0                     ; strip_files
00000000000036f7         mov        edx, 0x5
00000000000036fc         lea        rsi, qword [aOptionsCompare]                ; "options --compare (-C) and --strip are mutually exclusive"
0000000000003703         jne        loc_3d81

0000000000003709         test       dword [mode], 0xffff0e00                    ; mode
0000000000003713         jne        loc_3a7a

                     loc_3719:
0000000000003719         mov        rdi, qword [owner_name]                     ; owner_name, CODE XREF=main+1459, main+2411
0000000000003720         test       rdi, rdi
0000000000003723         je         loc_39f8

0000000000003729         call       j_getpwnam                                  ; getpwnam
000000000000372e         test       rax, rax
0000000000003731         je         loc_3b41

0000000000003737         mov        eax, dword [rax+0x10]

                     loc_373a:
000000000000373a         mov        dword [owner_id], eax                       ; owner_id, CODE XREF=main+2618
0000000000003740         call       j_endpwent                                  ; endpwent

                     loc_3745:
0000000000003745         mov        rdi, qword [group_name]                     ; group_name, CODE XREF=main+2258
000000000000374c         test       rdi, rdi
000000000000374f         je         loc_39e9

0000000000003755         call       j_getgrnam                                  ; getgrnam
000000000000375a         test       rax, rax
000000000000375d         je         loc_3adc

0000000000003763         mov        eax, dword [rax+0x10]

                     loc_3766:
0000000000003766         mov        dword [group_id], eax                       ; group_id, CODE XREF=main+2517
000000000000376c         call       j_endgrent                                  ; endgrent

                     loc_3771:
0000000000003771         cmp        byte [dir_arg], 0x0                         ; dir_arg, CODE XREF=main+2243
0000000000003778         jne        loc_3a07

000000000000377e         call       hash_init                                   ; hash_init
0000000000003783         test       r15, r15
0000000000003786         je         loc_3860

000000000000378c         mov        rdi, qword [rsp+0x170+var_168]
0000000000003791         xor        ebp, ebp
0000000000003793         xor        r13d, r13d
0000000000003796         call       dest_info_init                              ; dest_info_init
000000000000379b         mov        qword [rsp+0x170+var_158], r15
00000000000037a0         jmp        loc_37bc

                     loc_37a2:
00000000000037a2         mov        rdi, r15                                    ; CODE XREF=main+1750, main+1770
00000000000037a5         mov        r13d, 0x1
00000000000037ab         call       sub_30d0                                    ; sub_30d0

                     loc_37b0:
00000000000037b0         add        rbp, 0x1                                    ; CODE XREF=main+1780
00000000000037b4         cmp        ebx, ebp
00000000000037b6         jle        loc_388e

                     loc_37bc:
00000000000037bc         mov        rax, qword [rsp+0x170+var_160]              ; CODE XREF=main+1648
00000000000037c1         test       ebp, ebp
00000000000037c3         sete       r12b
00000000000037c7         and        r12b, byte [rsp+0x170+var_14B]
00000000000037cc         mov        r14, qword [rax+rbp*8]
00000000000037d0         mov        rdi, r14
00000000000037d3         call       last_component                              ; last_component
00000000000037d8         mov        rdi, qword [rsp+0x170+var_158]
00000000000037dd         xor        edx, edx
00000000000037df         mov        rsi, rax
00000000000037e2         call       file_name_concat                            ; file_name_concat
00000000000037e7         test       r12b, r12b
00000000000037ea         mov        r15, rax
00000000000037ed         je         loc_3808

00000000000037ef         mov        rdx, qword [rsp+0x170+var_168]
00000000000037f4         mov        ecx, 0x1
00000000000037f9         mov        rsi, rax
00000000000037fc         mov        rdi, r14
00000000000037ff         call       mkancesdirs_safe_wd                         ; mkancesdirs_safe_wd
0000000000003804         test       al, al
0000000000003806         je         loc_37a2

                     loc_3808:
0000000000003808         mov        rdx, qword [rsp+0x170+var_168]              ; CODE XREF=main+1725
000000000000380d         mov        rsi, r15
0000000000003810         mov        rdi, r14
0000000000003813         call       install_file_in_file                        ; install_file_in_file
0000000000003818         test       al, al
000000000000381a         je         loc_37a2

000000000000381c         mov        rdi, r15
000000000000381f         call       sub_30d0                                    ; sub_30d0
0000000000003824         jmp        loc_37b0

                     loc_3826:
0000000000003826         cmp        byte [strip_files], 0x0                     ; strip_files, CODE XREF=main+1131
000000000000382d         jne        loc_3e09

0000000000003833         test       r15, r15
0000000000003836         je         loc_35e5

000000000000383c         lea        rsi, qword [aTargetDirector]                ; argument "msgid" for method j_dcgettext, "target directory not allowed when installing a directory"
0000000000003843         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003848         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000384a         call       j_dcgettext                                 ; dcgettext
000000000000384f         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003851         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003854         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003859         xor        eax, eax
000000000000385b         call       j_error                                     ; error

                     loc_3860:
0000000000003860         cmp        byte [rsp+0x170+var_14B], 0x0               ; CODE XREF=main+1622
0000000000003865         mov        rax, qword [rsp+0x170+var_160]
000000000000386a         mov        rbp, qword [rax+8]
000000000000386e         mov        rbx, qword [rax]
0000000000003871         jne        loc_3aa0

0000000000003877         mov        rdx, qword [rsp+0x170+var_168]
000000000000387c         mov        rsi, rbp
000000000000387f         mov        rdi, rbx
0000000000003882         call       install_file_in_file                        ; install_file_in_file
0000000000003887         xor        eax, 0x1

                     loc_388a:
000000000000388a         movzx      r13d, al                                    ; CODE XREF=main+2471

                     loc_388e:
000000000000388e         mov        rcx, qword [rsp+0x170+var_48]               ; CODE XREF=main+1670, main+2290
0000000000003896         xor        rcx, qword [fs:0x28]
000000000000389f         mov        eax, r13d
00000000000038a2         jne        loc_3e04

00000000000038a8         add        rsp, 0x138
00000000000038af         pop        rbx
00000000000038b0         pop        rbp
00000000000038b1         pop        r12
00000000000038b3         pop        r13
00000000000038b5         pop        r14
00000000000038b7         pop        r15
00000000000038b9         ret
                        ; endp

                     loc_38ba:
00000000000038ba         cmp        qword [rsp+0x170+var_148], 0x0              ; CODE XREF=main+1235
00000000000038c0         je         loc_3620

00000000000038c6         call       j___errno_location                          ; __errno_location
00000000000038cb         mov        rdi, qword [rsp+0x170+var_148]
00000000000038d0         mov        dword [rax], 0x5f
00000000000038d6         mov        rbx, rax
00000000000038d9         call       quote                                       ; quote
00000000000038de         lea        rsi, qword [aFailedToSetDef]                ; argument "msgid" for method j_dcgettext, "failed to set default file creation context to %s"
00000000000038e5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000038ea         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000038ec         mov        rbp, rax
00000000000038ef         call       j_dcgettext                                 ; dcgettext
00000000000038f4         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
00000000000038f6         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000038f9         mov        rcx, rbp
00000000000038fc         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003901         xor        eax, eax
0000000000003903         call       j_error                                     ; error

                     loc_3908:
0000000000003908         test       al, al                                      ; CODE XREF=main+1317
000000000000390a         je         loc_366d

0000000000003910         xor        r15d, r15d
0000000000003913         cmp        ebx, 0x1
0000000000003916         je         loc_366d

000000000000391c         mov        rcx, qword [rsp+0x170+var_160]
0000000000003921         movsxd     rax, ebx
0000000000003924         mov        r12d, 0x1
000000000000392a         lea        r13, qword [rcx+rax*8-8]
000000000000392f         mov        rbp, qword [r13]
0000000000003933         mov        rdi, rbp
0000000000003936         call       last_component                              ; last_component
000000000000393b         mov        rdi, rax
000000000000393e         mov        rdx, rax
0000000000003941         movzx      eax, byte [rsp+0x170+var_14A]
0000000000003946         or         rcx, 0xffffffffffffffff
000000000000394a         repne scasb al, byte [rdi]
000000000000394c         mov        rax, rcx
000000000000394f         not        rax
0000000000003952         sub        rax, 0x1
0000000000003956         je         loc_3964

0000000000003958         xor        r12d, r12d
000000000000395b         cmp        byte [rdx+rax-1], 0x2f
0000000000003960         sete       r12b

                     loc_3964:
0000000000003964         lea        rdx, qword [rsp+0x170+var_E0]               ; argument "__stat_buf" for method j___xstat, CODE XREF=main+2086
000000000000396c         mov        rsi, rbp                                    ; argument "__filename" for method j___xstat
000000000000396f         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000003974         call       j___xstat                                   ; __xstat
0000000000003979         test       eax, eax
000000000000397b         je         loc_3ba6

0000000000003981         call       j___errno_location                          ; __errno_location
0000000000003986         mov        r14d, dword [rax]
0000000000003989         test       r14d, r14d
000000000000398c         je         loc_3ba6

0000000000003992         cmp        r14d, 0x2
0000000000003996         jne        loc_3c14

                     loc_399c:
000000000000399c         test       r12d, r12d                                  ; CODE XREF=main+2700
000000000000399f         jne        loc_3bdc

00000000000039a5         xor        r15d, r15d
00000000000039a8         cmp        ebx, 0x2
00000000000039ab         je         loc_366d

00000000000039b1         mov        rsi, qword [r13]
00000000000039b5         mov        edi, 0x4
00000000000039ba         call       quotearg_style                              ; quotearg_style
00000000000039bf         lea        rsi, qword [aTargetSIsNotAD]                ; argument "msgid" for method j_dcgettext, "target %s is not a directory"
00000000000039c6         mov        rbx, rax
00000000000039c9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000039ce         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000039d0         call       j_dcgettext                                 ; dcgettext
00000000000039d5         mov        rcx, rbx
00000000000039d8         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000039db         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000039dd         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000039e2         xor        eax, eax
00000000000039e4         call       j_error                                     ; error

                     loc_39e9:
00000000000039e9         mov        dword [group_id], 0xffffffff                ; group_id, CODE XREF=main+1567
00000000000039f3         jmp        loc_3771

                     loc_39f8:
00000000000039f8         mov        dword [owner_id], 0xffffffff                ; owner_id, CODE XREF=main+1523
0000000000003a02         jmp        loc_3745

                     loc_3a07:
0000000000003a07         mov        rcx, qword [rsp+0x170+var_168]              ; CODE XREF=main+1608
0000000000003a0c         mov        rsi, qword [rsp+0x170+var_160]
0000000000003a11         lea        rdx, qword [process_dir]                    ; process_dir
0000000000003a18         mov        edi, ebx
0000000000003a1a         call       savewd_process_files                        ; savewd_process_files
0000000000003a1f         mov        r13d, eax
0000000000003a22         jmp        loc_388e

                     loc_3a27:
0000000000003a27         lea        rsi, qword [aBackupType]                    ; argument "msgid" for method j_dcgettext, "backup type", CODE XREF=main+1210
0000000000003a2e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003a30         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003a35         call       j_dcgettext                                 ; dcgettext
0000000000003a3a         mov        rsi, r14
0000000000003a3d         mov        rdi, rax
0000000000003a40         call       xget_version                                ; xget_version
0000000000003a45         jmp        loc_35f0

                     loc_3a4a:
0000000000003a4a         mov        byte [rsp+0x170+var_10F], 0x1               ; CODE XREF=main+789
0000000000003a4f         jmp        loc_32f0

                     loc_3a54:
0000000000003a54         lea        rsi, qword [aWarningIgnorin_17580]          ; argument "msgid" for method j_dcgettext, "WARNING: ignoring --strip-program option as -s option was not specified", CODE XREF=main+1446
0000000000003a5b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003a5d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003a62         call       j_dcgettext                                 ; dcgettext
0000000000003a67         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003a69         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003a6c         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003a6e         xor        eax, eax
0000000000003a70         call       j_error                                     ; error
0000000000003a75         jmp        loc_36dc

                     loc_3a7a:
0000000000003a7a         lea        rsi, qword [aTheCompareCOpt]                ; argument "msgid" for method j_dcgettext, "the --compare (-C) option is ignored when you specify a mode with non-permission bits", CODE XREF=main+1507
0000000000003a81         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003a83         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003a88         call       j_dcgettext                                 ; dcgettext
0000000000003a8d         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003a8f         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003a92         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003a94         xor        eax, eax
0000000000003a96         call       j_error                                     ; error
0000000000003a9b         jmp        loc_3719

                     loc_3aa0:
0000000000003aa0         mov        rdx, qword [rsp+0x170+var_168]              ; CODE XREF=main+1857
0000000000003aa5         xor        ecx, ecx
0000000000003aa7         mov        rsi, rbp
0000000000003aaa         mov        rdi, rbx
0000000000003aad         xor        r13d, r13d
0000000000003ab0         call       mkancesdirs_safe_wd                         ; mkancesdirs_safe_wd
0000000000003ab5         test       al, al
0000000000003ab7         je         loc_3acd

0000000000003ab9         mov        rdx, qword [rsp+0x170+var_168]
0000000000003abe         mov        rsi, rbp
0000000000003ac1         mov        rdi, rbx
0000000000003ac4         call       install_file_in_file                        ; install_file_in_file
0000000000003ac9         movzx      r13d, al

                     loc_3acd:
0000000000003acd         and        r13d, 0x1                                   ; CODE XREF=main+2439
0000000000003ad1         mov        eax, r13d
0000000000003ad4         xor        eax, 0x1
0000000000003ad7         jmp        loc_388a

                     loc_3adc:
0000000000003adc         mov        rdi, qword [group_name]                     ; group_name, CODE XREF=main+1581
0000000000003ae3         lea        rcx, qword [rsp+0x170+var_138]
0000000000003ae8         xor        r8d, r8d
0000000000003aeb         xor        edx, edx
0000000000003aed         xor        esi, esi
0000000000003aef         call       xstrtoul                                    ; xstrtoul
0000000000003af4         test       eax, eax
0000000000003af6         jne        loc_3b0b

0000000000003af8         mov        rax, qword [rsp+0x170+var_138]
0000000000003afd         mov        edx, 0xffffffff
0000000000003b02         cmp        rax, rdx
0000000000003b05         jbe        loc_3766

                     loc_3b0b:
0000000000003b0b         mov        rdi, qword [group_name]                     ; group_name, CODE XREF=main+2502
0000000000003b12         call       quote                                       ; quote
0000000000003b17         lea        rsi, qword [aInvalidGroupS]                 ; argument "msgid" for method j_dcgettext, "invalid group %s"
0000000000003b1e         mov        rbx, rax
0000000000003b21         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003b26         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003b28         call       j_dcgettext                                 ; dcgettext
0000000000003b2d         mov        rcx, rbx
0000000000003b30         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003b33         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003b35         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003b3a         xor        eax, eax
0000000000003b3c         call       j_error                                     ; error

                     loc_3b41:
0000000000003b41         mov        rdi, qword [owner_name]                     ; owner_name, CODE XREF=main+1537
0000000000003b48         lea        rcx, qword [rsp+0x170+var_138]
0000000000003b4d         xor        r8d, r8d
0000000000003b50         xor        edx, edx
0000000000003b52         xor        esi, esi
0000000000003b54         call       xstrtoul                                    ; xstrtoul
0000000000003b59         test       eax, eax
0000000000003b5b         jne        loc_3b70

0000000000003b5d         mov        rax, qword [rsp+0x170+var_138]
0000000000003b62         mov        edx, 0xffffffff
0000000000003b67         cmp        rax, rdx
0000000000003b6a         jbe        loc_373a

                     loc_3b70:
0000000000003b70         mov        rdi, qword [owner_name]                     ; owner_name, CODE XREF=main+2603
0000000000003b77         call       quote                                       ; quote
0000000000003b7c         lea        rsi, qword [aInvalidUserS]                  ; argument "msgid" for method j_dcgettext, "invalid user %s"
0000000000003b83         mov        rbx, rax
0000000000003b86         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003b8b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003b8d         call       j_dcgettext                                 ; dcgettext
0000000000003b92         mov        rcx, rbx
0000000000003b95         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003b98         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003b9a         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003b9f         xor        eax, eax
0000000000003ba1         call       j_error                                     ; error

                     loc_3ba6:
0000000000003ba6         mov        eax, dword [rsp+0x170+var_C8]               ; CODE XREF=main+2123, main+2140
0000000000003bad         and        eax, 0xf000
0000000000003bb2         cmp        eax, 0x4000
0000000000003bb7         je         loc_3bc1

0000000000003bb9         xor        r14d, r14d
0000000000003bbc         jmp        loc_399c

                     loc_3bc1:
0000000000003bc1         mov        rcx, qword [rsp+0x170+var_160]              ; CODE XREF=main+2695
0000000000003bc6         sub        ebx, 0x1
0000000000003bc9         movsxd     rax, ebx
0000000000003bcc         mov        r15, qword [rcx+rax*8]
0000000000003bd0         jmp        loc_366d

                     loc_3bd5:
0000000000003bd5         xor        edi, edi                                    ; argument #1 for method usage, CODE XREF=main+677
0000000000003bd7         call       usage                                       ; usage

                     loc_3bdc:
0000000000003bdc         mov        rsi, rbp                                    ; CODE XREF=main+2159
0000000000003bdf         mov        edi, 0x4
0000000000003be4         call       quotearg_style                              ; quotearg_style
0000000000003be9         lea        rsi, qword [aTargetSIsNotAD]                ; argument "msgid" for method j_dcgettext, "target %s is not a directory"
0000000000003bf0         mov        rbx, rax
0000000000003bf3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003bf8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003bfa         call       j_dcgettext                                 ; dcgettext
0000000000003bff         mov        rcx, rbx
0000000000003c02         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003c05         mov        esi, r14d                                   ; argument "__errnum" for method j_error
0000000000003c08         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003c0d         xor        eax, eax
0000000000003c0f         call       j_error                                     ; error

                     loc_3c14:
0000000000003c14         mov        rsi, rbp                                    ; CODE XREF=main+2150
0000000000003c17         mov        edi, 0x4
0000000000003c1c         call       quotearg_style                              ; quotearg_style
0000000000003c21         lea        rsi, qword [aFailedToAccess]                ; argument "msgid" for method j_dcgettext, "failed to access %s"
0000000000003c28         mov        rbx, rax
0000000000003c2b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003c30         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003c32         call       j_dcgettext                                 ; dcgettext
0000000000003c37         mov        rcx, rbx
0000000000003c3a         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003c3d         mov        esi, r14d                                   ; argument "__errnum" for method j_error
0000000000003c40         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003c45         xor        eax, eax
0000000000003c47         call       j_error                                     ; error

                     loc_3c4c:
0000000000003c4c         mov        rsi, r15                                    ; CODE XREF=main+1172
0000000000003c4f         mov        edi, 0x4
0000000000003c54         call       quotearg_style                              ; quotearg_style
0000000000003c59         lea        rsi, qword [aFailedToAccess]                ; argument "msgid" for method j_dcgettext, "failed to access %s"
0000000000003c60         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003c65         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003c67         mov        rbp, rax
0000000000003c6a         call       j_dcgettext                                 ; dcgettext
0000000000003c6f         mov        rbx, rax
0000000000003c72         call       j___errno_location                          ; __errno_location
0000000000003c77         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000003c79         mov        rcx, rbp
0000000000003c7c         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000003c7f         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003c84         xor        eax, eax
0000000000003c86         call       j_error                                     ; error

                     loc_3c8b:
0000000000003c8b         lea        rsi, qword [aMultipleTarget]                ; argument "msgid" for method j_dcgettext, "multiple target directories specified", CODE XREF=main+1035
0000000000003c92         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003c97         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003c99         call       j_dcgettext                                 ; dcgettext
0000000000003c9e         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003ca0         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003ca3         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003ca8         xor        eax, eax
0000000000003caa         call       j_error                                     ; error

                     loc_3caf:
0000000000003caf         lea        rsi, qword [aCannotCombineT]                ; argument "msgid" for method j_dcgettext, "cannot combine --target-directory (-t) and --no-target-directory (-T)", CODE XREF=main+1326
0000000000003cb6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003cbb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003cbd         call       j_dcgettext                                 ; dcgettext
0000000000003cc2         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003cc4         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003cc7         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003ccc         xor        eax, eax
0000000000003cce         call       j_error                                     ; error

                     loc_3cd3:
0000000000003cd3         sub        ebx, 0x1                                    ; CODE XREF=main+1306
0000000000003cd6         jne        loc_3d75

0000000000003cdc         mov        rax, qword [rsp+0x170+var_160]
0000000000003ce1         mov        edi, 0x4
0000000000003ce6         mov        rsi, qword [rax]
0000000000003ce9         call       quotearg_style                              ; quotearg_style
0000000000003cee         lea        rsi, qword [aMissingDestina]                ; "missing destination file operand after %s"
0000000000003cf5         mov        rbx, rax
0000000000003cf8         mov        edx, 0x5

                     loc_3cfd:
0000000000003cfd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=main+3279
0000000000003cff         call       j_dcgettext                                 ; dcgettext
0000000000003d04         mov        rcx, rbx
0000000000003d07         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003d0a         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003d0c         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003d0e         xor        eax, eax
0000000000003d10         call       j_error                                     ; error
0000000000003d15         jmp        loc_337c

                     loc_3d1a:
0000000000003d1a         lea        rsi, qword [aCannotSetTarge]                ; argument "msgid" for method j_dcgettext, "cannot set target context and preserve it", CODE XREF=main+1246, main+1258
0000000000003d21         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003d26         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003d28         call       j_dcgettext                                 ; dcgettext
0000000000003d2d         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003d2f         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003d32         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003d37         xor        eax, eax
0000000000003d39         call       j_error                                     ; error

                     loc_3d3e:
0000000000003d3e         mov        rsi, r15                                    ; CODE XREF=main+1199
0000000000003d41         mov        edi, 0x4
0000000000003d46         call       quotearg_style                              ; quotearg_style
0000000000003d4b         lea        rsi, qword [aTargetSIsNotAD]                ; argument "msgid" for method j_dcgettext, "target %s is not a directory"
0000000000003d52         mov        rbx, rax
0000000000003d55         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003d5a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003d5c         call       j_dcgettext                                 ; dcgettext
0000000000003d61         mov        rcx, rbx
0000000000003d64         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003d67         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003d69         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003d6e         xor        eax, eax
0000000000003d70         call       j_error                                     ; error

                     loc_3d75:
0000000000003d75         lea        rsi, qword [aMissingFileOpe]                ; "missing file operand", CODE XREF=main+2982
0000000000003d7c         mov        edx, 0x5

                     loc_3d81:
0000000000003d81         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=main+1491, main+3191
0000000000003d83         call       j_dcgettext                                 ; dcgettext
0000000000003d88         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003d8a         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003d8d         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003d8f         xor        eax, eax
0000000000003d91         call       j_error                                     ; error
0000000000003d96         jmp        loc_337c

                     loc_3d9b:
0000000000003d9b         mov        edx, 0x5                                    ; CODE XREF=main+1466
0000000000003da0         lea        rsi, qword [aOptionsCompare_175c8]          ; "options --compare (-C) and --preserve-timestamps are mutually exclusive"
0000000000003da7         jmp        loc_3d81

                     loc_3da9:
0000000000003da9         mov        rdi, qword [rsp+0x170+var_158]              ; CODE XREF=main+1365
0000000000003dae         call       quote                                       ; quote
0000000000003db3         lea        rsi, qword [aInvalidModeS]                  ; argument "msgid" for method j_dcgettext, "invalid mode %s"
0000000000003dba         mov        rbx, rax
0000000000003dbd         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003dc2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003dc4         call       j_dcgettext                                 ; dcgettext
0000000000003dc9         mov        rcx, rbx
0000000000003dcc         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003dcf         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003dd1         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003dd6         xor        eax, eax
0000000000003dd8         call       j_error                                     ; error

                     loc_3ddd:
0000000000003ddd         mov        rax, qword [rsp+0x170+var_160]              ; CODE XREF=main+1335
0000000000003de2         mov        edi, 0x4
0000000000003de7         mov        rsi, qword [rax+0x10]
0000000000003deb         call       quotearg_style                              ; quotearg_style
0000000000003df0         mov        edx, 0x5
0000000000003df5         mov        rbx, rax
0000000000003df8         lea        rsi, qword [aExtraOperandS]                 ; "extra operand %s"
0000000000003dff         jmp        loc_3cfd

                     loc_3e04:
0000000000003e04         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+1906
                        ; endp

                     loc_3e09:
0000000000003e09         lea        rsi, qword [aTheStripOption]                ; argument "msgid" for method j_dcgettext, "the strip option may not be used when installing a directory", CODE XREF=main+1789
0000000000003e10         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003e15         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003e17         call       j_dcgettext                                 ; dcgettext
0000000000003e1c         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003e1e         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003e21         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003e26         xor        eax, eax
0000000000003e28         call       j_error                                     ; error
0000000000003e2d         nop        dword [rax]                                 ; End of unwind block (FDE at 0x19ad8)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000003e30         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x1990c)
0000000000003e32         mov        r9, rdx
0000000000003e35         pop        rsi
0000000000003e36         mov        rdx, rsp
0000000000003e39         and        rsp, 0xfffffffffffffff0
0000000000003e3d         push       rax
0000000000003e3e         push       rsp
0000000000003e3f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000003e46         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
0000000000003e4d         lea        rdi, qword [main]                           ; main
0000000000003e54         call       qword [qword_21cfd8+8]                      ; 0x21cfe0
0000000000003e5a         hlt
                        ; endp
0000000000003e5b         align      32                                          ; End of unwind block (FDE at 0x1990c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000003e60         lea        rdi, qword [__TMC_END__]                    ; __TMC_END__, CODE XREF=__do_global_dtors_aux+35
0000000000003e67         push       rbp
0000000000003e68         lea        rax, qword [__TMC_END__]                    ; __TMC_END__
0000000000003e6f         cmp        rax, rdi
0000000000003e72         mov        rbp, rsp
0000000000003e75         je         loc_3e90

0000000000003e77         mov        rax, qword [qword_21cfd8]                   ; qword_21cfd8
0000000000003e7e         test       rax, rax
0000000000003e81         je         loc_3e90

0000000000003e83         pop        rbp
0000000000003e84         jmp        rax
                        ; endp
0000000000003e86         align      16

                     loc_3e90:
0000000000003e90         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000003e91         ret
                        ; endp
0000000000003e92         align      32

                     register_tm_clones:
0000000000003ea0         lea        rdi, qword [__TMC_END__]                    ; __TMC_END__, CODE XREF=frame_dummy+5
0000000000003ea7         lea        rsi, qword [__TMC_END__]                    ; __TMC_END__
0000000000003eae         push       rbp
0000000000003eaf         sub        rsi, rdi
0000000000003eb2         mov        rbp, rsp
0000000000003eb5         sar        rsi, 0x3
0000000000003eb9         mov        rax, rsi
0000000000003ebc         shr        rax, 0x3f
0000000000003ec0         add        rsi, rax
0000000000003ec3         sar        rsi, 0x1
0000000000003ec6         je         loc_3ee0

0000000000003ec8         mov        rax, qword [qword_21cff0]                   ; qword_21cff0
0000000000003ecf         test       rax, rax
0000000000003ed2         je         loc_3ee0

0000000000003ed4         pop        rbp
0000000000003ed5         jmp        rax
                        ; endp
0000000000003ed7         align      32

                     loc_3ee0:
0000000000003ee0         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000003ee1         ret
                        ; endp
0000000000003ee2         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000003ef0         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000003ef7         jne        loc_3f28

0000000000003ef9         cmp        qword [qword_21cff8], 0x0                   ; qword_21cff8
0000000000003f01         push       rbp
0000000000003f02         mov        rbp, rsp
0000000000003f05         je         loc_3f13

0000000000003f07         mov        rdi, qword [__dso_handle]                   ; __dso_handle
0000000000003f0e         call       j_qword_21cff8                              ; qword_21cff8

                     loc_3f13:
0000000000003f13         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000003f18         mov        byte [completed.7697], 0x1                  ; completed.7697
0000000000003f1f         pop        rbp
0000000000003f20         ret
                        ; endp
0000000000003f21         align      8

                     loc_3f28:
0000000000003f28         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
0000000000003f2a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000003f30         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000003f31         mov        rbp, rsp
0000000000003f34         pop        rbp
0000000000003f35         jmp        register_tm_clones                          ; register_tm_clones
0000000000003f3a         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_38: int32_t, -56
        ;    var_40: int64_t, -64


                     mkancesdirs_safe_wd:
0000000000003f40         push       r13                                         ; Begin of unwind block (FDE at 0x1997c), CODE XREF=main+1743, main+2432
0000000000003f42         push       r12
0000000000003f44         push       rbp
0000000000003f45         push       rbx
0000000000003f46         mov        rbx, rsi
0000000000003f49         sub        rsp, 0x28
0000000000003f4d         mov        rax, qword [fs:0x28]
0000000000003f56         mov        qword [rsp+0x48+var_30], rax
0000000000003f5b         xor        eax, eax
0000000000003f5d         test       cl, cl
0000000000003f5f         jne        loc_3f6a

0000000000003f61         cmp        byte [rdi], 0x2f
0000000000003f64         je         loc_4010

                     loc_3f6a:
0000000000003f6a         lea        rbp, qword [rsp+0x48+var_38]                ; CODE XREF=mkancesdirs_safe_wd+31, mkancesdirs_safe_wd+211
0000000000003f6f         mov        rcx, rdx
0000000000003f72         lea        rdx, qword [make_ancestor]                  ; make_ancestor
0000000000003f79         mov        rdi, rbx
0000000000003f7c         mov        dword [rsp+0x48+var_38], 0x0
0000000000003f84         mov        rsi, rbp
0000000000003f87         call       mkancesdirs                                 ; mkancesdirs
0000000000003f8c         cmp        rax, 0xffffffffffffffff
0000000000003f90         jne        loc_405a

0000000000003f96         mov        rsi, rbx
0000000000003f99         mov        edi, 0x4
0000000000003f9e         call       quotearg_style                              ; quotearg_style
0000000000003fa3         lea        rsi, qword [aCannotCreateDi]                ; argument "msgid" for method j_dcgettext, "cannot create directory %s"
0000000000003faa         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003faf         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003fb1         mov        r12, rax
0000000000003fb4         call       j_dcgettext                                 ; dcgettext
0000000000003fb9         mov        rbx, rax
0000000000003fbc         call       j___errno_location                          ; __errno_location
0000000000003fc1         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000003fc3         mov        rcx, r12
0000000000003fc6         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000003fc9         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003fcb         xor        eax, eax
0000000000003fcd         call       j_error                                     ; error
0000000000003fd2         mov        esi, 0x1
0000000000003fd7         mov        rdi, rbp
0000000000003fda         call       savewd_restore                              ; savewd_restore
0000000000003fdf         mov        rdi, rbp
0000000000003fe2         call       savewd_finish                               ; savewd_finish
0000000000003fe7         xor        eax, eax

                     loc_3fe9:
0000000000003fe9         mov        rbx, qword [rsp+0x48+var_30]                ; CODE XREF=mkancesdirs_safe_wd+280, mkancesdirs_safe_wd+317, mkancesdirs_safe_wd+328, mkancesdirs_safe_wd+389, mkancesdirs_safe_wd+461
0000000000003fee         xor        rbx, qword [fs:0x28]
0000000000003ff7         jne        loc_40ca

0000000000003ffd         add        rsp, 0x28
0000000000004001         pop        rbx
0000000000004002         pop        rbp
0000000000004003         pop        r12
0000000000004005         pop        r13
0000000000004007         ret
                        ; endp
0000000000004008         align      16

                     loc_4010:
0000000000004010         cmp        byte [rsi], 0x2f                            ; CODE XREF=mkancesdirs_safe_wd+36
0000000000004013         jne        loc_3f6a

0000000000004019         lea        rbp, qword [rsp+0x48+var_38]
000000000000401e         mov        qword [rsp+0x48+var_40], rdx
0000000000004023         mov        dword [rsp+0x48+var_38], 0x0
000000000000402b         mov        rdi, rbp
000000000000402e         call       savewd_finish                               ; savewd_finish
0000000000004033         mov        rdx, qword [rsp+0x48+var_40]
0000000000004038         mov        rsi, rbp
000000000000403b         mov        rdi, rbx
000000000000403e         mov        rcx, rdx
0000000000004041         lea        rdx, qword [make_ancestor]                  ; make_ancestor
0000000000004048         call       mkancesdirs                                 ; mkancesdirs
000000000000404d         cmp        rax, 0xffffffffffffffff
0000000000004051         je         loc_40cf

0000000000004053         mov        eax, 0x1
0000000000004058         jmp        loc_3fe9

                     loc_405a:
000000000000405a         xor        esi, esi                                    ; CODE XREF=mkancesdirs_safe_wd+80
000000000000405c         mov        rdi, rbp
000000000000405f         call       savewd_restore                              ; savewd_restore
0000000000004064         mov        r13d, eax
0000000000004067         call       j___errno_location                          ; __errno_location
000000000000406c         mov        rdi, rbp
000000000000406f         mov        r12d, dword [rax]
0000000000004072         call       savewd_finish                               ; savewd_finish
0000000000004077         xor        eax, eax
0000000000004079         cmp        r13d, 0x0
000000000000407d         jg         loc_3fe9

0000000000004083         mov        eax, 0x1
0000000000004088         jge        loc_3fe9

000000000000408e         mov        rsi, rbx
0000000000004091         mov        edi, 0x4
0000000000004096         call       quotearg_style                              ; quotearg_style
000000000000409b         lea        rsi, qword [aCannotCreateDi]                ; argument "msgid" for method j_dcgettext, "cannot create directory %s"
00000000000040a2         mov        rbx, rax
00000000000040a5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000040aa         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000040ac         call       j_dcgettext                                 ; dcgettext
00000000000040b1         mov        rcx, rbx
00000000000040b4         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000040b7         mov        esi, r12d                                   ; argument "__errnum" for method j_error
00000000000040ba         xor        eax, eax
00000000000040bc         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000040be         call       j_error                                     ; error
00000000000040c3         xor        eax, eax
00000000000040c5         jmp        loc_3fe9

                     loc_40ca:
00000000000040ca         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=mkancesdirs_safe_wd+183
                        ; endp

                     loc_40cf:
00000000000040cf         mov        rsi, rbx                                    ; CODE XREF=mkancesdirs_safe_wd+273
00000000000040d2         mov        edi, 0x4
00000000000040d7         call       quotearg_style                              ; quotearg_style
00000000000040dc         lea        rsi, qword [aCannotCreateDi]                ; argument "msgid" for method j_dcgettext, "cannot create directory %s"
00000000000040e3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000040e8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000040ea         mov        rbp, rax
00000000000040ed         call       j_dcgettext                                 ; dcgettext
00000000000040f2         mov        rbx, rax
00000000000040f5         call       j___errno_location                          ; __errno_location
00000000000040fa         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000040fc         mov        rcx, rbp
00000000000040ff         xor        eax, eax
0000000000004101         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000004104         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000004106         call       j_error                                     ; error
000000000000410b         xor        eax, eax
000000000000410d         jmp        loc_3fe9
0000000000004112         align      32                                          ; End of unwind block (FDE at 0x1997c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     process_dir:
0000000000004120         push       rbp                                         ; Begin of unwind block (FDE at 0x199b8), DATA XREF=main+2273
0000000000004121         push       rbx
0000000000004122         mov        rcx, rdx
0000000000004125         mov        rbx, rdx
0000000000004128         lea        r9, qword [announce_mkdir]                  ; announce_mkdir
000000000000412f         lea        rdx, qword [make_ancestor]                  ; make_ancestor
0000000000004136         sub        rsp, 0x8
000000000000413a         mov        eax, dword [group_id]                       ; group_id
0000000000004140         mov        r8d, dword [dir_mode]                       ; dir_mode
0000000000004147         push       0x0
0000000000004149         push       rax
000000000000414a         mov        eax, dword [owner_id]                       ; owner_id
0000000000004150         push       rax
0000000000004151         mov        eax, dword [dir_mode_bits]                  ; dir_mode_bits
0000000000004157         push       rax
0000000000004158         call       make_dir_parents                            ; make_dir_parents
000000000000415d         xor        eax, 0x1
0000000000004160         add        rsp, 0x20
0000000000004164         test       al, al
0000000000004166         movzx      ebp, al
0000000000004169         jne        loc_417c

000000000000416b         cmp        byte [rbx+0x21], 0x0
000000000000416f         je         loc_417c

0000000000004171         call       j___errno_location                          ; __errno_location
0000000000004176         mov        dword [rax], 0x5f

                     loc_417c:
000000000000417c         add        rsp, 0x8                                    ; CODE XREF=process_dir+73, process_dir+79
0000000000004180         mov        eax, ebp
0000000000004182         pop        rbx
0000000000004183         pop        rbp
0000000000004184         ret
                        ; endp
0000000000004185         align      16                                          ; End of unwind block (FDE at 0x199b8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     announce_mkdir.part.9:
0000000000004190         push       rbx                                         ; Begin of unwind block (FDE at 0x199f0), CODE XREF=j_announce_mkdir.part.9, make_ancestor+79
0000000000004191         mov        rsi, rdi
0000000000004194         mov        edi, 0x4
0000000000004199         call       quotearg_style                              ; quotearg_style
000000000000419e         lea        rsi, qword [aCreatingDirect]                ; argument "msgid" for method j_dcgettext, "creating directory %s"
00000000000041a5         mov        rbx, rax
00000000000041a8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000041ad         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000041af         call       j_dcgettext                                 ; dcgettext
00000000000041b4         mov        rdx, rbx
00000000000041b7         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000041be         mov        rsi, rax
00000000000041c1         pop        rbx
00000000000041c2         xor        eax, eax
00000000000041c4         jmp        prog_fprintf                                ; prog_fprintf
                        ; endp
00000000000041c9         align      16                                          ; End of unwind block (FDE at 0x199f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     announce_mkdir:
00000000000041d0         cmp        byte [rsi+0x2e], 0x0                        ; Begin of unwind block (FDE at 0x19a0c), DATA XREF=process_dir+8
00000000000041d4         jne        j_announce_mkdir.part.9                     ; announce_mkdir.part.9

00000000000041d6         ret
                        ; endp
00000000000041d8         align      32

                     j_announce_mkdir.part.9:        // announce_mkdir.part.9
00000000000041e0         jmp        announce_mkdir.part.9                       ; announce_mkdir.part.9, CODE XREF=announce_mkdir+4
                        ; endp
00000000000041e2         align      16                                          ; End of unwind block (FDE at 0x19a0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_1C: int32_t, -28


                     make_ancestor:
00000000000041f0         push       r12                                         ; Begin of unwind block (FDE at 0x19a20), DATA XREF=mkancesdirs_safe_wd+50, mkancesdirs_safe_wd+257, process_dir+15
00000000000041f2         push       rbp
00000000000041f3         mov        r12, rdi
00000000000041f6         push       rbx
00000000000041f7         mov        rbp, rsi
00000000000041fa         mov        rbx, rdx
00000000000041fd         sub        rsp, 0x10
0000000000004201         cmp        byte [rdx+0x21], 0x0
0000000000004205         je         loc_4212

0000000000004207         call       j___errno_location                          ; __errno_location
000000000000420c         mov        dword [rax], 0x5f

                     loc_4212:
0000000000004212         mov        esi, 0x1ed                                  ; argument "__mode" for method j_mkdir, CODE XREF=make_ancestor+21
0000000000004217         mov        rdi, rbp                                    ; argument "__path" for method j_mkdir
000000000000421a         call       j_mkdir                                     ; mkdir
000000000000421f         test       eax, eax
0000000000004221         jne        loc_4229

0000000000004223         cmp        byte [rbx+0x2e], 0x0
0000000000004227         jne        loc_4238

                     loc_4229:
0000000000004229         add        rsp, 0x10                                   ; CODE XREF=make_ancestor+49
000000000000422d         pop        rbx
000000000000422e         pop        rbp
000000000000422f         pop        r12
0000000000004231         ret
                        ; endp
0000000000004232         align      8

                     loc_4238:
0000000000004238         mov        rdi, r12                                    ; CODE XREF=make_ancestor+55
000000000000423b         mov        dword [rsp+0x28+var_1C], eax
000000000000423f         call       announce_mkdir.part.9                       ; announce_mkdir.part.9
0000000000004244         mov        eax, dword [rsp+0x28+var_1C]
0000000000004248         add        rsp, 0x10
000000000000424c         pop        rbx
000000000000424d         pop        rbp
000000000000424e         pop        r12
0000000000004250         ret
                        ; endp
0000000000004251         align      32                                          ; End of unwind block (FDE at 0x19a20)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_A8: int64_t, -168
        ;    var_B8: int32_t, -184
        ;    var_BC: int32_t, -188
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_138: int64_t, -312
        ;    var_150: int32_t, -336
        ;    var_168: int8_t, -360
        ;    var_198: int64_t, -408
        ;    var_1A0: int64_t, -416
        ;    var_1A8: int64_t, -424
        ;    var_1B0: int64_t, -432
        ;    var_1E0: int32_t, -480
        ;    var_1F8: int8_t, -504
        ;    var_1FC: int32_t, -508
        ;    var_210: int64_t, -528


                     install_file_in_file:
0000000000004260         push       r15                                         ; Begin of unwind block (FDE at 0x19a60), CODE XREF=main+1763, main+1874, main+2452
0000000000004262         push       r14
0000000000004264         push       r13
0000000000004266         push       r12
0000000000004268         mov        r12, rdi
000000000000426b         push       rbp
000000000000426c         push       rbx
000000000000426d         mov        rbp, rsi
0000000000004270         mov        rbx, rdx
0000000000004273         sub        rsp, 0x1e8
000000000000427a         mov        rax, qword [fs:0x28]
0000000000004283         mov        qword [rsp+0x218+var_40], rax
000000000000428b         xor        eax, eax
000000000000428d         cmp        byte [rdx+0x1f], 0x0
0000000000004291         je         loc_42ad

0000000000004293         lea        rdx, qword [rsp+0x218+var_1F8]              ; argument "__stat_buf" for method j___xstat
0000000000004298         mov        rsi, rdi                                    ; argument "__filename" for method j___xstat
000000000000429b         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
00000000000042a0         call       j___xstat                                   ; __xstat
00000000000042a5         test       eax, eax
00000000000042a7         jne        loc_4620

                     loc_42ad:
00000000000042ad         cmp        byte [copy_only_if_needed], 0x0             ; copy_only_if_needed, CODE XREF=install_file_in_file+49
00000000000042b4         je         loc_42ca

00000000000042b6         mov        r13d, dword [mode]                          ; mode
00000000000042bd         test       r13d, 0xffff0e00
00000000000042c4         je         loc_4488

                     loc_42ca:
00000000000042ca         lea        r8, qword [rsp+0x218+var_1FC]               ; CODE XREF=install_file_in_file+84, install_file_in_file+575, install_file_in_file+604, install_file_in_file+631, install_file_in_file+658, install_file_in_file+669, install_file_in_file+681, install_file_in_file+703, install_file_in_file+718, install_file_in_file+746, install_file_in_file+774
00000000000042cf         xor        r9d, r9d
00000000000042d2         xor        edx, edx
00000000000042d4         mov        rcx, rbx
00000000000042d7         mov        rsi, rbp
00000000000042da         mov        rdi, r12
00000000000042dd         call       copy                                        ; copy
00000000000042e2         test       al, al
00000000000042e4         jne        loc_4323

                     loc_42e6:
00000000000042e6         xor        ebx, ebx                                    ; CODE XREF=install_file_in_file+373, install_file_in_file+1267

                     loc_42e8:
00000000000042e8         mov        rcx, qword [rsp+0x218+var_40]               ; CODE XREF=install_file_in_file+456, install_file_in_file+469, install_file_in_file+498, install_file_in_file+541, install_file_in_file+1069
00000000000042f0         xor        rcx, qword [fs:0x28]
00000000000042f9         mov        eax, ebx
00000000000042fb         jne        loc_4848

0000000000004301         add        rsp, 0x1e8
0000000000004308         pop        rbx
0000000000004309         pop        rbp
000000000000430a         pop        r12
000000000000430c         pop        r13
000000000000430e         pop        r14
0000000000004310         pop        r15
0000000000004312         ret
                        ; endp

                     loc_4313:
0000000000004313         mov        edi, r13d                                   ; argument "__fd" for method j_close, CODE XREF=install_file_in_file+874
0000000000004316         call       j_close                                     ; close
000000000000431b         mov        edi, r14d                                   ; argument "__fd" for method j_close
000000000000431e         call       j_close                                     ; close

                     loc_4323:
0000000000004323         cmp        byte [strip_files], 0x0                     ; strip_files, CODE XREF=install_file_in_file+132
000000000000432a         jne        loc_46c0

0000000000004330         cmp        byte [rbx+0x1f], 0x0
0000000000004334         je         loc_43e0

                     loc_433a:
000000000000433a         mov        eax, dword [rsp+0x218+var_1E0]              ; CODE XREF=install_file_in_file+1367
000000000000433e         and        eax, 0xf000
0000000000004343         cmp        eax, 0x8000
0000000000004348         je         loc_43e0

                     loc_434e:
000000000000434e         mov        rax, qword [rsp+0x218+var_1B0]              ; CODE XREF=install_file_in_file+1361
0000000000004353         lea        rsi, qword [rsp+0x218+var_D8]
000000000000435b         mov        rdi, rbp
000000000000435e         mov        qword [rsp+0x218+var_D8], rax
0000000000004366         mov        rax, qword [rsp+0x218+var_1A8]
000000000000436b         mov        qword [rsp+0x218+var_D0], rax
0000000000004373         mov        rax, qword [rsp+0x218+var_1A0]
0000000000004378         mov        qword [rsp+0x218+var_C8], rax
0000000000004380         mov        rax, qword [rsp+0x218+var_198]
0000000000004388         mov        qword [rsp+0x218+var_C0], rax
0000000000004390         call       utimens                                     ; utimens
0000000000004395         test       eax, eax
0000000000004397         je         loc_43e0

0000000000004399         mov        rsi, rbp
000000000000439c         mov        edi, 0x4
00000000000043a1         call       quotearg_style                              ; quotearg_style
00000000000043a6         lea        rsi, qword [aCannotSetTimes]                ; "cannot set timestamps for %s"
00000000000043ad         mov        rbp, rax
00000000000043b0         mov        edx, 0x5

                     loc_43b5:
00000000000043b5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=install_file_in_file+988
00000000000043b7         call       j_dcgettext                                 ; dcgettext
00000000000043bc         mov        rbx, rax
00000000000043bf         call       j___errno_location                          ; __errno_location
00000000000043c4         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000043c6         mov        rcx, rbp
00000000000043c9         mov        rdx, rbx                                    ; argument "__format" for method j_error
00000000000043cc         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000043ce         xor        eax, eax
00000000000043d0         call       j_error                                     ; error
00000000000043d5         jmp        loc_42e6
00000000000043da         align      32

                     loc_43e0:
00000000000043e0         mov        esi, dword [owner_id]                       ; owner_id, CODE XREF=install_file_in_file+212, install_file_in_file+232, install_file_in_file+311, install_file_in_file+1348
00000000000043e6         mov        edx, dword [group_id]                       ; group_id
00000000000043ec         cmp        esi, 0xffffffff
00000000000043ef         jne        loc_43f6

00000000000043f1         cmp        edx, 0xffffffff
00000000000043f4         je         loc_4406

                     loc_43f6:
00000000000043f6         mov        rdi, rbp                                    ; argument "__file" for method j_lchown, CODE XREF=install_file_in_file+399
00000000000043f9         call       j_lchown                                    ; lchown
00000000000043fe         test       eax, eax
0000000000004400         jne        loc_4648

                     loc_4406:
0000000000004406         mov        esi, dword [mode]                           ; argument "__mode" for method j_chmod, mode, CODE XREF=install_file_in_file+404
000000000000440c         mov        rdi, rbp                                    ; argument "__file" for method j_chmod
000000000000440f         mov        ebx, 0x1
0000000000004414         call       j_chmod                                     ; chmod
0000000000004419         test       eax, eax
000000000000441b         jne        loc_46a0

0000000000004421         cmp        byte [use_default_selinux_context], 0x0     ; use_default_selinux_context
0000000000004428         je         loc_42e8

                     loc_442e:
000000000000442e         cmp        dword [selinux_enabled], 0x1                ; selinux_enabled, CODE XREF=install_file_in_file+1075
0000000000004435         jne        loc_42e8

000000000000443b         lea        rdx, qword [rsp+0x218+var_D8]               ; argument "__stat_buf" for method j___lxstat
0000000000004443         mov        rsi, rbp                                    ; argument "__filename" for method j___lxstat
0000000000004446         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
000000000000444b         call       j___lxstat                                  ; __lxstat
0000000000004450         test       eax, eax
0000000000004452         jne        loc_42e8

0000000000004458         cmp        byte [first_call.7488], 0x0                 ; first_call.7488
000000000000445f         je         loc_446b

0000000000004461         cmp        byte [rbp], 0x2f
0000000000004465         je         loc_47d1

                     loc_446b:
000000000000446b         mov        byte [first_call.7488], 0x0                 ; first_call.7488, CODE XREF=install_file_in_file+511, install_file_in_file+1422, install_file_in_file+1474, install_file_in_file+1507
0000000000004472         call       j___errno_location                          ; __errno_location
0000000000004477         mov        dword [rax], 0x5f
000000000000447d         jmp        loc_42e8
0000000000004482         align      8

                     loc_4488:
0000000000004488         lea        rdx, qword [rsp+0x218+var_168]              ; argument "__stat_buf" for method j___lxstat, CODE XREF=install_file_in_file+100
0000000000004490         mov        rsi, r12                                    ; argument "__filename" for method j___lxstat
0000000000004493         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
0000000000004498         call       j___lxstat                                  ; __lxstat
000000000000449d         test       eax, eax
000000000000449f         jne        loc_42ca

00000000000044a5         lea        rdx, qword [rsp+0x218+var_D8]               ; argument "__stat_buf" for method j___lxstat
00000000000044ad         mov        rsi, rbp                                    ; argument "__filename" for method j___lxstat
00000000000044b0         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
00000000000044b5         call       j___lxstat                                  ; __lxstat
00000000000044ba         test       eax, eax
00000000000044bc         jne        loc_42ca

00000000000044c2         mov        eax, dword [rsp+0x218+var_150]
00000000000044c9         mov        edx, eax
00000000000044cb         and        edx, 0xf000
00000000000044d1         cmp        edx, 0x8000
00000000000044d7         jne        loc_42ca

00000000000044dd         mov        edx, dword [rsp+0x218+var_C0]
00000000000044e4         mov        ecx, edx
00000000000044e6         and        ecx, 0xf000
00000000000044ec         cmp        ecx, 0x8000
00000000000044f2         jne        loc_42ca

00000000000044f8         test       eax, 0xffff0e00
00000000000044fd         jne        loc_42ca

0000000000004503         test       edx, 0xffff0e00
0000000000004509         jne        loc_42ca

000000000000450f         mov        rax, qword [rsp+0x218+var_A8]
0000000000004517         cmp        qword [rsp+0x218+var_138], rax
000000000000451f         jne        loc_42ca

0000000000004525         and        edx, 0xfff
000000000000452b         cmp        r13d, edx
000000000000452e         jne        loc_42ca

0000000000004534         mov        eax, dword [owner_id]                       ; owner_id
000000000000453a         cmp        eax, 0xffffffff
000000000000453d         je         loc_48de

                     loc_4543:
0000000000004543         cmp        eax, dword [rsp+0x218+var_BC]               ; CODE XREF=install_file_in_file+1684, install_file_in_file+1695
000000000000454a         jne        loc_42ca

0000000000004550         mov        eax, dword [group_id]                       ; group_id
0000000000004556         cmp        eax, 0xffffffff
0000000000004559         je         loc_48a5

                     loc_455f:
000000000000455f         cmp        eax, dword [rsp+0x218+var_B8]               ; CODE XREF=install_file_in_file+1627, install_file_in_file+1638
0000000000004566         jne        loc_42ca

000000000000456c         cmp        dword [selinux_enabled], 0x0                ; selinux_enabled
0000000000004573         je         loc_457f

0000000000004575         cmp        byte [rbx+0x25], 0x0
0000000000004579         jne        loc_490a

                     loc_457f:
000000000000457f         xor        esi, esi                                    ; argument "__oflag" for method j_open, CODE XREF=install_file_in_file+787
0000000000004581         xor        eax, eax
0000000000004583         mov        rdi, r12                                    ; argument "__file" for method j_open
0000000000004586         call       j_open                                      ; open
000000000000458b         test       eax, eax
000000000000458d         mov        r13d, eax
0000000000004590         js         loc_42ca

0000000000004596         xor        esi, esi                                    ; argument "__oflag" for method j_open
0000000000004598         xor        eax, eax
000000000000459a         mov        rdi, rbp                                    ; argument "__file" for method j_open
000000000000459d         call       j_open                                      ; open
00000000000045a2         test       eax, eax
00000000000045a4         mov        r14d, eax
00000000000045a7         lea        r15, qword [a_buff.7455]                    ; a_buff.7455
00000000000045ae         js         loc_48d1

                     loc_45b4:
00000000000045b4         mov        edx, 0x1000                                 ; CODE XREF=install_file_in_file+935
00000000000045b9         mov        rsi, r15
00000000000045bc         mov        edi, r13d
00000000000045bf         call       full_read                                   ; full_read
00000000000045c4         test       rax, rax
00000000000045c7         mov        rcx, rax
00000000000045ca         je         loc_4313

00000000000045d0         lea        rsi, qword [b_buff.7456]                    ; b_buff.7456
00000000000045d7         mov        edx, 0x1000
00000000000045dc         mov        edi, r14d
00000000000045df         mov        qword [rsp+0x218+var_210], rcx
00000000000045e4         call       full_read                                   ; full_read
00000000000045e9         mov        rcx, qword [rsp+0x218+var_210]
00000000000045ee         cmp        rax, rcx
00000000000045f1         jne        loc_4609

00000000000045f3         lea        rsi, qword [b_buff.7456]                    ; argument "__s2" for method j_memcmp, b_buff.7456
00000000000045fa         mov        rdx, rax                                    ; argument "__n" for method j_memcmp
00000000000045fd         mov        rdi, r15                                    ; argument "__s1" for method j_memcmp
0000000000004600         call       j_memcmp                                    ; memcmp
0000000000004605         test       eax, eax
0000000000004607         je         loc_45b4

                     loc_4609:
0000000000004609         mov        edi, r13d                                   ; argument "__fd" for method j_close, CODE XREF=install_file_in_file+913
000000000000460c         call       j_close                                     ; close
0000000000004611         mov        edi, r14d                                   ; argument "__fd" for method j_close
0000000000004614         call       j_close                                     ; close
0000000000004619         jmp        loc_42ca
000000000000461e         align      32

                     loc_4620:
0000000000004620         mov        rsi, r12                                    ; CODE XREF=install_file_in_file+71
0000000000004623         mov        edi, 0x4
0000000000004628         call       quotearg_style                              ; quotearg_style
000000000000462d         mov        edx, 0x5
0000000000004632         mov        rbp, rax
0000000000004635         lea        rsi, qword [aCannotStatS]                   ; "cannot stat %s"
000000000000463c         jmp        loc_43b5
0000000000004641         align      8

                     loc_4648:
0000000000004648         mov        rsi, rbp                                    ; CODE XREF=install_file_in_file+416
000000000000464b         mov        edi, 0x4
0000000000004650         call       quotearg_style                              ; quotearg_style
0000000000004655         lea        rsi, qword [aCannotChangeOw]                ; "cannot change ownership of %s"
000000000000465c         mov        r12, rax
000000000000465f         mov        edx, 0x5

                     loc_4664:
0000000000004664         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=install_file_in_file+1116
0000000000004666         call       j_dcgettext                                 ; dcgettext
000000000000466b         mov        rbx, rax
000000000000466e         call       j___errno_location                          ; __errno_location
0000000000004673         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000004675         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000004678         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000467a         xor        eax, eax
000000000000467c         mov        rcx, r12
000000000000467f         xor        ebx, ebx
0000000000004681         call       j_error                                     ; error
0000000000004686         cmp        byte [use_default_selinux_context], 0x0     ; use_default_selinux_context
000000000000468d         je         loc_42e8

0000000000004693         jmp        loc_442e
0000000000004698         align      32

                     loc_46a0:
00000000000046a0         mov        rsi, rbp                                    ; CODE XREF=install_file_in_file+443
00000000000046a3         mov        edi, 0x4
00000000000046a8         call       quotearg_style                              ; quotearg_style
00000000000046ad         mov        edx, 0x5
00000000000046b2         mov        r12, rax
00000000000046b5         lea        rsi, qword [aCannotChangePe]                ; "cannot change permissions of %s"
00000000000046bc         jmp        loc_4664
00000000000046be         align      64

                     loc_46c0:
00000000000046c0         call       j_fork                                      ; fork, CODE XREF=install_file_in_file+202
00000000000046c5         cmp        eax, 0xffffffff
00000000000046c8         je         loc_4720

00000000000046ca         test       eax, eax
00000000000046cc         je         loc_484d

00000000000046d2         lea        rsi, qword [rsp+0x218+var_1FC]              ; argument "__stat_loc" for method j_waitpid
00000000000046d7         xor        edx, edx                                    ; argument "__options" for method j_waitpid
00000000000046d9         mov        edi, eax                                    ; argument "__pid" for method j_waitpid
00000000000046db         call       j_waitpid                                   ; waitpid
00000000000046e0         test       eax, eax
00000000000046e2         js         loc_47c0

00000000000046e8         mov        eax, dword [rsp+0x218+var_1FC]
00000000000046ec         test       al, 0x7f
00000000000046ee         jne        loc_46f9

00000000000046f0         test       ah, 0xff
00000000000046f3         je         loc_47a0

                     loc_46f9:
00000000000046f9         lea        rsi, qword [aStripProcessTe]                ; argument "msgid" for method j_dcgettext, "strip process terminated abnormally", CODE XREF=install_file_in_file+1166
0000000000004700         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004702         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004707         call       j_dcgettext                                 ; dcgettext
000000000000470c         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000470e         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000004711         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000004713         xor        eax, eax
0000000000004715         call       j_error                                     ; error
000000000000471a         jmp        loc_4749
000000000000471c         align      32

                     loc_4720:
0000000000004720         lea        rsi, qword [aForkSystemCall]                ; "fork system call failed", CODE XREF=install_file_in_file+1128
0000000000004727         mov        edx, 0x5

                     loc_472c:
000000000000472c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=install_file_in_file+1388
000000000000472e         call       j_dcgettext                                 ; dcgettext
0000000000004733         mov        rbx, rax
0000000000004736         call       j___errno_location                          ; __errno_location
000000000000473b         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000473d         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000004740         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000004742         xor        eax, eax
0000000000004744         call       j_error                                     ; error

                     loc_4749:
0000000000004749         mov        rdi, rbp                                    ; argument "__name" for method j_unlink, CODE XREF=install_file_in_file+1210
000000000000474c         call       j_unlink                                    ; unlink
0000000000004751         test       eax, eax
0000000000004753         je         loc_42e6

0000000000004759         mov        rsi, rbp
000000000000475c         mov        edi, 0x4
0000000000004761         call       quotearg_style                              ; quotearg_style
0000000000004766         lea        rsi, qword [aCannotUnlinkS]                 ; argument "msgid" for method j_dcgettext, "cannot unlink %s"
000000000000476d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004772         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004774         mov        rbp, rax
0000000000004777         call       j_dcgettext                                 ; dcgettext
000000000000477c         mov        rbx, rax
000000000000477f         call       j___errno_location                          ; __errno_location
0000000000004784         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000004786         mov        rcx, rbp
0000000000004789         mov        rdx, rbx                                    ; argument "__format" for method j_error
000000000000478c         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000004791         xor        eax, eax
0000000000004793         call       j_error                                     ; error
0000000000004798         nop        dword [rax+rax]

                     loc_47a0:
00000000000047a0         cmp        byte [rbx+0x1f], 0x0                        ; CODE XREF=install_file_in_file+1171
00000000000047a4         je         loc_43e0

00000000000047aa         cmp        byte [strip_files], 0x0                     ; strip_files
00000000000047b1         jne        loc_434e

00000000000047b7         jmp        loc_433a
00000000000047bc         align      64

                     loc_47c0:
00000000000047c0         mov        edx, 0x5                                    ; CODE XREF=install_file_in_file+1154
00000000000047c5         lea        rsi, qword [aWaitingForStri]                ; "waiting for strip"
00000000000047cc         jmp        loc_472c

                     loc_47d1:
00000000000047d1         movzx      edx, byte [rbp+1]                           ; CODE XREF=install_file_in_file+517
00000000000047d5         lea        rax, qword [rbp+1]
00000000000047d9         cmp        dl, 0x2f
00000000000047dc         jne        loc_47ec

00000000000047de         nop

                     loc_47e0:
00000000000047e0         add        rax, 0x1                                    ; CODE XREF=install_file_in_file+1418
00000000000047e4         movzx      edx, byte [rax]
00000000000047e7         cmp        dl, 0x2f
00000000000047ea         je         loc_47e0

                     loc_47ec:
00000000000047ec         test       dl, dl                                      ; CODE XREF=install_file_in_file+1404
00000000000047ee         je         loc_446b

00000000000047f4         mov        rdx, rax
00000000000047f7         jmp        loc_47fe

                     loc_47f9:
00000000000047f9         cmp        cl, 0x2f                                    ; CODE XREF=install_file_in_file+1447
00000000000047fc         je         loc_4809

                     loc_47fe:
00000000000047fe         add        rdx, 0x1                                    ; CODE XREF=install_file_in_file+1431
0000000000004802         movzx      ecx, byte [rdx]
0000000000004805         test       cl, cl
0000000000004807         jne        loc_47f9

                     loc_4809:
0000000000004809         lea        rbp, qword [rax-1]                          ; CODE XREF=install_file_in_file+1436
000000000000480d         sub        rdx, rbp
0000000000004810         lea        rdi, qword [rdx+2]                          ; argument "__size" for method j_malloc
0000000000004814         mov        r12, rdx
0000000000004817         call       j_malloc                                    ; malloc
000000000000481c         test       rax, rax
000000000000481f         mov        r13, rax
0000000000004822         je         loc_446b

0000000000004828         mov        rdx, r12                                    ; argument "__n" for method j_stpncpy
000000000000482b         mov        rsi, rbp                                    ; argument "__src" for method j_stpncpy
000000000000482e         mov        rdi, rax                                    ; argument "__dest" for method j_stpncpy
0000000000004831         call       j_stpncpy                                   ; stpncpy
0000000000004836         mov        rdi, r13
0000000000004839         mov        word [rax], 0x2f
000000000000483e         call       sub_30d0                                    ; sub_30d0
0000000000004843         jmp        loc_446b

                     loc_4848:
0000000000004848         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=install_file_in_file+155
                        ; endp

                     loc_484d:
000000000000484d         mov        rbx, qword [strip_program]                  ; strip_program, CODE XREF=install_file_in_file+1132
0000000000004854         xor        ecx, ecx
0000000000004856         mov        rdx, rbp
0000000000004859         xor        eax, eax
000000000000485b         mov        rsi, rbx                                    ; argument "__arg" for method j_execlp
000000000000485e         mov        rdi, rbx                                    ; argument "__file" for method j_execlp
0000000000004861         call       j_execlp                                    ; execlp
0000000000004866         mov        rsi, rbx
0000000000004869         mov        edi, 0x4
000000000000486e         call       quotearg_style                              ; quotearg_style
0000000000004873         lea        rsi, qword [aCannotRunS]                    ; argument "msgid" for method j_dcgettext, "cannot run %s"
000000000000487a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000487f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004881         mov        rbp, rax
0000000000004884         call       j_dcgettext                                 ; dcgettext
0000000000004889         mov        rbx, rax
000000000000488c         call       j___errno_location                          ; __errno_location
0000000000004891         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000004893         mov        rcx, rbp
0000000000004896         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000004899         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000489e         xor        eax, eax
00000000000048a0         call       j_error                                     ; error

                     loc_48a5:
00000000000048a5         call       j___errno_location                          ; __errno_location, CODE XREF=install_file_in_file+761
00000000000048aa         mov        dword [rax], 0x0
00000000000048b0         mov        r13, rax
00000000000048b3         call       j_getgid                                    ; getgid
00000000000048b8         cmp        eax, 0xffffffff
00000000000048bb         jne        loc_455f

00000000000048c1         cmp        dword [r13], 0x0
00000000000048c6         je         loc_455f

00000000000048cc         jmp        loc_42ca

                     loc_48d1:
00000000000048d1         mov        edi, r13d                                   ; argument "__fd" for method j_close, CODE XREF=install_file_in_file+846
00000000000048d4         call       j_close                                     ; close
00000000000048d9         jmp        loc_42ca

                     loc_48de:
00000000000048de         call       j___errno_location                          ; __errno_location, CODE XREF=install_file_in_file+733
00000000000048e3         mov        dword [rax], 0x0
00000000000048e9         mov        r13, rax
00000000000048ec         call       j_getuid                                    ; getuid
00000000000048f1         cmp        eax, 0xffffffff
00000000000048f4         jne        loc_4543

00000000000048fa         cmp        dword [r13], 0x0
00000000000048ff         je         loc_4543

0000000000004905         jmp        loc_42ca

                     loc_490a:
000000000000490a         call       j___errno_location                          ; __errno_location, CODE XREF=install_file_in_file+793
000000000000490f         mov        dword [rax], 0x5f
0000000000004915         jmp        loc_42ca
000000000000491a         align      32                                          ; End of unwind block (FDE at 0x19a60)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
0000000000004920         push       r13                                         ; Begin of unwind block (FDE at 0x19aac), CODE XREF=main+593, main+2727, __argmatch_die+5
0000000000004922         push       r12
0000000000004924         mov        edx, 0x5
0000000000004929         push       rbp
000000000000492a         push       rbx
000000000000492b         mov        ebp, edi
000000000000492d         sub        rsp, 0x88
0000000000004934         mov        rbx, qword [program_name]                   ; program_name
000000000000493b         mov        rax, qword [fs:0x28]
0000000000004944         mov        qword [rsp+0xa8+var_30], rax
0000000000004949         xor        eax, eax
000000000000494b         test       edi, edi
000000000000494d         je         loc_497d

000000000000494f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000004956         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004958         call       j_dcgettext                                 ; dcgettext
000000000000495d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000004964         mov        rdx, rax
0000000000004967         mov        rcx, rbx
000000000000496a         mov        esi, 0x1
000000000000496f         xor        eax, eax
0000000000004971         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_4976:
0000000000004976         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+902
0000000000004978         call       j_exit                                      ; exit
                        ; endp

                     loc_497d:
000000000000497d         lea        rsi, qword [aUsageSOptionTS]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... [-T] SOURCE DEST\\n  or:  %s [OPTION]... SOURCE... DIRECTORY\\n  or:  %s [OPTION]... -t DIRECTORY SOURCE...\\n  or:  %s [OPTION]... -d DIRECTORY...\\n", CODE XREF=usage+45
0000000000004984         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004986         call       j_dcgettext                                 ; dcgettext
000000000000498b         mov        rcx, rbx
000000000000498e         mov        r9, rbx
0000000000004991         mov        r8, rbx
0000000000004994         mov        rdx, rbx
0000000000004997         mov        rsi, rax
000000000000499a         mov        edi, 0x1
000000000000499f         xor        eax, eax
00000000000049a1         call       j___printf_chk                              ; __printf_chk
00000000000049a6         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000049ad         lea        rsi, qword [aNthisInstallPr]                ; argument "msgid" for method j_dcgettext, "\\nThis install program copies files (often just compiled) into destination\\nlocations you choose.  If you want to download and install a ready-to-use\\npackage on a GNU/Linux system, you should instead be using a package manager\\nlike yum(1) or apt-get(1).\\n\\nIn …"
00000000000049b4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000049b9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000049bb         call       j_dcgettext                                 ; dcgettext
00000000000049c0         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000049c3         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000049c6         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000049cb         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000049d2         lea        rsi, qword [aNmandatoryArgu]                ; argument "msgid" for method j_dcgettext, "\\nMandatory arguments to long options are mandatory for short options too.\\n"
00000000000049d9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000049de         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000049e0         call       j_dcgettext                                 ; dcgettext
00000000000049e5         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000049e8         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000049eb         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000049f0         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000049f7         lea        rsi, qword [aBackupcontrolM]                ; argument "msgid" for method j_dcgettext, "      --backup[=CONTROL]  make a backup of each existing destination file\\n  -b                  like --backup but does not accept an argument\\n  -c                  (ignored)\\n  -C, --compare       compare each pair of source and destination files, and\\n     …"
00000000000049fe         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004a03         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004a05         call       j_dcgettext                                 ; dcgettext
0000000000004a0a         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004a0d         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004a10         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004a15         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004a1c         lea        rsi, qword [aDCreateAllLead]                ; argument "msgid" for method j_dcgettext, "  -D                  create all leading components of DEST except the last,\\n                        or all components of --target-directory,\\n                        then copy SOURCE to DEST\\n  -g, --group=GROUP   set group ownership, instead of process' cu…"
0000000000004a23         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004a28         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004a2a         call       j_dcgettext                                 ; dcgettext
0000000000004a2f         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004a32         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004a35         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004a3a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004a41         lea        rsi, qword [aPPreservetimes]                ; argument "msgid" for method j_dcgettext, "  -p, --preserve-timestamps   apply access/modification times of SOURCE files\\n                        to corresponding destination files\\n  -s, --strip         strip symbol tables\\n      --strip-program=PROGRAM  program used to strip binaries\\n  -S, --suffix=…"
0000000000004a48         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004a4d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004a4f         call       j_dcgettext                                 ; dcgettext
0000000000004a54         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004a57         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004a5a         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004a5f         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004a66         lea        rsi, qword [aPreservecontex]                ; argument "msgid" for method j_dcgettext, "      --preserve-context  preserve SELinux security context\\n  -Z                      set SELinux security context of destination\\n                            file and each created directory to default type\\n      --context[=CTX]     like -Z, or if CTX is sp…"
0000000000004a6d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004a72         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004a74         call       j_dcgettext                                 ; dcgettext
0000000000004a79         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004a7c         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004a7f         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004a84         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004a8b         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
0000000000004a92         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004a97         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004a99         call       j_dcgettext                                 ; dcgettext
0000000000004a9e         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004aa1         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004aa4         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004aa9         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004ab0         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
0000000000004ab7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004abc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004abe         call       j_dcgettext                                 ; dcgettext
0000000000004ac3         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004ac6         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004ac9         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004ace         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004ad5         lea        rsi, qword [aNtheBackupSuff]                ; argument "msgid" for method j_dcgettext, "\\nThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\\nThe version control method may be selected via the --backup option or through\\nthe VERSION_CONTROL environment variable.  Here are the values:\\n\\n"
0000000000004adc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004ae1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004ae3         call       j_dcgettext                                 ; dcgettext
0000000000004ae8         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004aeb         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004aee         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004af3         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004afa         lea        rsi, qword [aNoneOffNeverMa]                ; argument "msgid" for method j_dcgettext, "  none, off       never make backups (even if --backup is given)\\n  numbered, t     make numbered backups\\n  existing, nil   numbered if numbered backups exist, simple otherwise\\n  simple, never   always make simple backups\\n"
0000000000004b01         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004b06         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004b08         call       j_dcgettext                                 ; dcgettext
0000000000004b0d         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004b10         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004b13         lea        rbx, qword [aInstall]                       ; "install"
0000000000004b1a         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004b1f         lea        rax, qword [aInstall+8]                     ; 0x16490
0000000000004b26         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
0000000000004b2d         mov        qword [rsp+0xa8+var_48], 0x0
0000000000004b36         mov        qword [rsp+0xa8+var_40], 0x0
0000000000004b3f         mov        rdx, rsp
0000000000004b42         mov        qword [rsp+0xa8+var_A8], rax
0000000000004b46         lea        rax, qword [aTestInvocation]                ; "test invocation"
0000000000004b4d         mov        qword [rsp+0xa8+var_78], rcx
0000000000004b52         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
0000000000004b59         mov        qword [rsp+0xa8+var_A0], rax
0000000000004b5e         lea        rax, qword [aCoreutils]                     ; "coreutils"
0000000000004b65         mov        qword [rsp+0xa8+var_68], rcx
0000000000004b6a         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
0000000000004b71         mov        qword [rsp+0xa8+var_98], rax
0000000000004b76         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
0000000000004b7d         mov        qword [rsp+0xa8+var_58], rcx
0000000000004b82         mov        qword [rsp+0xa8+var_90], rax
0000000000004b87         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000004b8e         mov        qword [rsp+0xa8+var_88], rax
0000000000004b93         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
0000000000004b9a         mov        qword [rsp+0xa8+var_80], rax
0000000000004b9f         mov        qword [rsp+0xa8+var_70], rax
0000000000004ba4         mov        qword [rsp+0xa8+var_60], rax
0000000000004ba9         mov        qword [rsp+0xa8+var_50], rax
0000000000004bae         nop

                     loc_4bb0:
0000000000004bb0         add        rdx, 0x10                                   ; CODE XREF=usage+685
0000000000004bb4         mov        rdi, qword [rdx]
0000000000004bb7         test       rdi, rdi
0000000000004bba         je         loc_4bcf

0000000000004bbc         mov        ecx, 0x8
0000000000004bc1         mov        rsi, rbx
0000000000004bc4         rep  cmpsb byte [rsi], byte [rdi]
0000000000004bc6         seta       al
0000000000004bc9         sbb        al, 0x0
0000000000004bcb         test       al, al
0000000000004bcd         jne        loc_4bb0

                     loc_4bcf:
0000000000004bcf         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+666
0000000000004bd3         xor        edi, edi
0000000000004bd5         mov        edx, 0x5
0000000000004bda         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000004be1         test       r12, r12
0000000000004be4         je         loc_4cab

0000000000004bea         call       j_dcgettext                                 ; dcgettext
0000000000004bef         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000004bf6         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x16506
0000000000004bfd         mov        rsi, rax
0000000000004c00         mov        edi, 0x1
0000000000004c05         xor        eax, eax
0000000000004c07         call       j___printf_chk                              ; __printf_chk
0000000000004c0c         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000004c0e         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000004c13         call       j_setlocale                                 ; setlocale
0000000000004c18         test       rax, rax
0000000000004c1b         je         loc_4c39

0000000000004c1d         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x16514
0000000000004c24         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000004c29         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000004c2c         call       j_strncmp                                   ; strncmp
0000000000004c31         test       eax, eax
0000000000004c33         jne        loc_4d40

                     loc_4c39:
0000000000004c39         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+763, usage+1093
0000000000004c40         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004c42         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004c47         call       j_dcgettext                                 ; dcgettext
0000000000004c4c         lea        rcx, qword [aInstall]                       ; "install"
0000000000004c53         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000004c5a         mov        rsi, rax
0000000000004c5d         mov        edi, 0x1
0000000000004c62         xor        eax, eax
0000000000004c64         call       j___printf_chk                              ; __printf_chk
0000000000004c69         cmp        r12, rbx
0000000000004c6c         lea        rcx, qword [aMulticallInvoc+10]             ; 0x164ac
0000000000004c73         lea        rbx, qword [aSSUnbackupn+20]                ; 0x17fc9
0000000000004c7a         cmove      rbx, rcx

                     loc_4c7e:
0000000000004c7e         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+1044
0000000000004c85         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004c87         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004c8c         call       j_dcgettext                                 ; dcgettext
0000000000004c91         mov        rcx, rbx
0000000000004c94         mov        rsi, rax
0000000000004c97         mov        rdx, r12
0000000000004c9a         mov        edi, 0x1
0000000000004c9f         xor        eax, eax
0000000000004ca1         call       j___printf_chk                              ; __printf_chk
0000000000004ca6         jmp        loc_4976

                     loc_4cab:
0000000000004cab         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+708
0000000000004cb0         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000004cb7         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x16506
0000000000004cbe         mov        rsi, rax
0000000000004cc1         mov        edi, 0x1
0000000000004cc6         xor        eax, eax
0000000000004cc8         call       j___printf_chk                              ; __printf_chk
0000000000004ccd         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000004ccf         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000004cd4         call       j_setlocale                                 ; setlocale
0000000000004cd9         test       rax, rax
0000000000004cdc         je         loc_4cf6

0000000000004cde         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x16514
0000000000004ce5         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000004cea         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000004ced         call       j_strncmp                                   ; strncmp
0000000000004cf2         test       eax, eax
0000000000004cf4         jne        loc_4d39

                     loc_4cf6:
0000000000004cf6         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+956
0000000000004cfd         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004d02         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004d04         lea        r12, qword [aInstall]                       ; "install"
0000000000004d0b         lea        rbx, qword [aMulticallInvoc+10]             ; 0x164ac
0000000000004d12         call       j_dcgettext                                 ; dcgettext
0000000000004d17         lea        rcx, qword [aInstall]                       ; "install"
0000000000004d1e         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000004d25         mov        rsi, rax
0000000000004d28         mov        edi, 0x1
0000000000004d2d         xor        eax, eax
0000000000004d2f         call       j___printf_chk                              ; __printf_chk
0000000000004d34         jmp        loc_4c7e

                     loc_4d39:
0000000000004d39         lea        r12, qword [aInstall]                       ; "install", CODE XREF=usage+980

                     loc_4d40:
0000000000004d40         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+787
0000000000004d47         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
0000000000004d4e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004d50         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004d55         call       j_dcgettext                                 ; dcgettext
0000000000004d5a         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004d5d         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004d60         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004d65         jmp        loc_4c39
0000000000004d6a         align      16                                          ; End of unwind block (FDE at 0x19aac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72
        ;    var_58: -88
        ;    var_68: -104
        ;    var_78: -120
        ;    var_88: -136
        ;    var_98: -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C8: int8_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_E0: int64_t, -224
        ;    var_E4: int32_t, -228
        ;    var_E8: int32_t, -232


                     prog_fprintf:
0000000000004d70         push       rbp                                         ; Begin of unwind block (FDE at 0x19b2c), CODE XREF=announce_mkdir.part.9+52
0000000000004d71         push       rbx
0000000000004d72         mov        rbp, rsi
0000000000004d75         mov        rbx, rdi
0000000000004d78         sub        rsp, 0xd8
0000000000004d7f         test       al, al
0000000000004d81         mov        qword [rsp+0xe8+var_B8], rdx
0000000000004d86         mov        qword [rsp+0xe8+var_B0], rcx
0000000000004d8b         mov        qword [rsp+0xe8+var_A8], r8
0000000000004d90         mov        qword [rsp+0xe8+var_A0], r9
0000000000004d95         je         loc_4dce

0000000000004d97         movaps     xmmword [rsp+0xe8+var_98], xmm0
0000000000004d9c         movaps     xmmword [rsp+0xe8+var_88], xmm1
0000000000004da1         movaps     xmmword [rsp+0xe8+var_78], xmm2
0000000000004da6         movaps     xmmword [rsp+0xe8+var_68], xmm3
0000000000004dae         movaps     xmmword [rsp+0xe8+var_58], xmm4
0000000000004db6         movaps     xmmword [rsp+0xe8+var_48], xmm5
0000000000004dbe         movaps     xmmword [rsp+0xe8+var_38], xmm6
0000000000004dc6         movaps     xmmword [rsp+0xe8+var_28], xmm7

                     loc_4dce:
0000000000004dce         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked, CODE XREF=prog_fprintf+37
0000000000004dd1         mov        rax, qword [fs:0x28]
0000000000004dda         mov        qword [rsp+0xe8+var_D0], rax
0000000000004ddf         xor        eax, eax
0000000000004de1         mov        rdi, qword [program_name]                   ; argument "__s" for method j_fputs_unlocked, program_name
0000000000004de8         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004ded         lea        rdi, qword [aTheCompareCOpt+86]             ; argument "__ptr" for method j_fwrite_unlocked, 0x176a6
0000000000004df4         mov        rcx, rbx                                    ; argument "__stream" for method j_fwrite_unlocked
0000000000004df7         mov        edx, 0x2                                    ; argument "__n" for method j_fwrite_unlocked
0000000000004dfc         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000004e01         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000004e06         lea        rax, qword [rsp+0xe8+arg_0]
0000000000004e0e         mov        rdx, rsp
0000000000004e11         mov        rsi, rbp
0000000000004e14         mov        rdi, rbx
0000000000004e17         mov        dword [rsp+0xe8+var_E8], 0x10
0000000000004e1e         mov        dword [rsp+0xe8+var_E4], 0x30
0000000000004e26         mov        qword [rsp+0xe8+var_E0], rax
0000000000004e2b         lea        rax, qword [rsp+0xe8+var_C8]
0000000000004e30         mov        qword [rsp+0xe8+var_D8], rax
0000000000004e35         call       rpl_vfprintf                                ; rpl_vfprintf
0000000000004e3a         mov        rax, qword [rbx+0x28]
0000000000004e3e         cmp        rax, qword [rbx+0x30]
0000000000004e42         jae        loc_4e70

0000000000004e44         lea        rdx, qword [rax+1]
0000000000004e48         mov        qword [rbx+0x28], rdx
0000000000004e4c         mov        byte [rax], 0xa

                     loc_4e4f:
0000000000004e4f         mov        rax, qword [rsp+0xe8+var_D0]                ; CODE XREF=prog_fprintf+269
0000000000004e54         xor        rax, qword [fs:0x28]
0000000000004e5d         jne        loc_4e7f

0000000000004e5f         add        rsp, 0xd8
0000000000004e66         pop        rbx
0000000000004e67         pop        rbp
0000000000004e68         ret
                        ; endp
0000000000004e69         align      16

                     loc_4e70:
0000000000004e70         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=prog_fprintf+210
0000000000004e75         mov        rdi, rbx                                    ; argument #1 for method j___overflow
0000000000004e78         call       j___overflow                                ; __overflow
0000000000004e7d         jmp        loc_4e4f

                     loc_4e7f:
0000000000004e7f         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=prog_fprintf+237
                        ; endp
0000000000004e84         align      16                                          ; End of unwind block (FDE at 0x19b2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     writable_destination:
0000000000004e90         and        esi, 0xf000                                 ; Begin of unwind block (FDE at 0x19b5c), CODE XREF=overwrite_ok.isra.12+42, copy_internal+4667
0000000000004e96         cmp        esi, 0xa000
0000000000004e9c         je         loc_4eb8

0000000000004e9e         push       rbx
0000000000004e9f         mov        rbx, rdi
0000000000004ea2         call       can_write_any_file                          ; can_write_any_file
0000000000004ea7         test       al, al
0000000000004ea9         je         loc_4ec0

0000000000004eab         mov        eax, 0x1
0000000000004eb0         pop        rbx
0000000000004eb1         ret
                        ; endp
0000000000004eb2         align      8

                     loc_4eb8:
0000000000004eb8         mov        eax, 0x1                                    ; CODE XREF=writable_destination+12
0000000000004ebd         ret
                        ; endp
0000000000004ebe         align      64

                     loc_4ec0:
0000000000004ec0         mov        rdi, rbx                                    ; argument "__name" for method j_euidaccess, CODE XREF=writable_destination+25
0000000000004ec3         mov        esi, 0x2                                    ; argument "__type" for method j_euidaccess
0000000000004ec8         call       j_euidaccess                                ; euidaccess
0000000000004ecd         test       eax, eax
0000000000004ecf         sete       al
0000000000004ed2         pop        rbx
0000000000004ed3         ret
                        ; endp
0000000000004ed4         align      32                                          ; End of unwind block (FDE at 0x19b5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     write_zeros:
0000000000004ee0         cmp        qword [zeros.7570], 0x0                     ; Begin of unwind block (FDE at 0x19b80), zeros.7570, CODE XREF=copy_internal+14769, copy_internal+15547
0000000000004ee8         push       r12
0000000000004eea         mov        r12d, edi
0000000000004eed         push       rbp
0000000000004eee         push       rbx
0000000000004eef         mov        rbx, rsi
0000000000004ef2         je         loc_4f48

                     loc_4ef4:
0000000000004ef4         test       rbx, rbx                                    ; CODE XREF=write_zeros+133, write_zeros+160
0000000000004ef7         jne        loc_4f05

0000000000004ef9         jmp        loc_4f38
0000000000004efb         align      256

                     loc_4f00:
0000000000004f00         sub        rbx, rax                                    ; CODE XREF=write_zeros+76
0000000000004f03         je         loc_4f38

                     loc_4f05:
0000000000004f05         cmp        qword [mask.7898+8], rbx                    ; 0x21d038, CODE XREF=write_zeros+23
0000000000004f0c         mov        rbp, rbx
0000000000004f0f         mov        rsi, qword [zeros.7570]                     ; zeros.7570
0000000000004f16         cmovbe     rbp, qword [mask.7898+8]                    ; 0x21d038
0000000000004f1e         mov        edi, r12d
0000000000004f21         mov        rdx, rbp
0000000000004f24         call       full_write                                  ; full_write
0000000000004f29         cmp        rax, rbp
0000000000004f2c         je         loc_4f00

0000000000004f2e         pop        rbx
0000000000004f2f         xor        eax, eax
0000000000004f31         pop        rbp
0000000000004f32         pop        r12
0000000000004f34         ret
                        ; endp
0000000000004f35         align      8

                     loc_4f38:
0000000000004f38         pop        rbx                                         ; CODE XREF=write_zeros+25, write_zeros+35
0000000000004f39         mov        eax, 0x1
0000000000004f3e         pop        rbp
0000000000004f3f         pop        r12
0000000000004f41         ret
                        ; endp
0000000000004f42         align      8

                     loc_4f48:
0000000000004f48         mov        rdi, qword [mask.7898+8]                    ; argument "__nmemb" for method j_calloc, 0x21d038, CODE XREF=write_zeros+18
0000000000004f4f         mov        esi, 0x1                                    ; argument "__size" for method j_calloc
0000000000004f54         call       j_calloc                                    ; calloc
0000000000004f59         test       rax, rax
0000000000004f5c         je         loc_4f67

0000000000004f5e         mov        qword [zeros.7570], rax                     ; zeros.7570
0000000000004f65         jmp        loc_4ef4

                     loc_4f67:
0000000000004f67         lea        rax, qword [fallback.7572]                  ; fallback.7572, CODE XREF=write_zeros+124
0000000000004f6e         mov        qword [mask.7898+8], 0x400                  ; 0x21d038
0000000000004f79         mov        qword [zeros.7570], rax                     ; zeros.7570
0000000000004f80         jmp        loc_4ef4
0000000000004f85         align      16                                          ; End of unwind block (FDE at 0x19b80)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     punch_hole:
0000000000004f90         push       rbx                                         ; Begin of unwind block (FDE at 0x19bbc), CODE XREF=create_hole+75, copy_internal+15484
0000000000004f91         mov        rcx, rdx
0000000000004f94         mov        rdx, rsi
0000000000004f97         mov        esi, 0x3
0000000000004f9c         call       j_fallocate                                 ; fallocate
0000000000004fa1         test       eax, eax
0000000000004fa3         mov        ebx, eax
0000000000004fa5         js         loc_4fb0

                     loc_4fa7:
0000000000004fa7         mov        eax, ebx                                    ; CODE XREF=punch_hole+47
0000000000004fa9         pop        rbx
0000000000004faa         ret
                        ; endp
0000000000004fab         align      16

                     loc_4fb0:
0000000000004fb0         call       j___errno_location                          ; __errno_location, CODE XREF=punch_hole+21
0000000000004fb5         mov        eax, dword [rax]
0000000000004fb7         cmp        eax, 0x26
0000000000004fba         je         loc_4fc1

0000000000004fbc         cmp        eax, 0x5f
0000000000004fbf         jne        loc_4fa7

                     loc_4fc1:
0000000000004fc1         xor        ebx, ebx                                    ; CODE XREF=punch_hole+42
0000000000004fc3         mov        eax, ebx
0000000000004fc5         pop        rbx
0000000000004fc6         ret
                        ; endp
0000000000004fc7         align      16                                          ; End of unwind block (FDE at 0x19bbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_verbose:
0000000000004fd0         push       r12                                         ; Begin of unwind block (FDE at 0x19c08), CODE XREF=copy_internal+2619, copy_internal+5063, copy_internal+9063, copy_internal+11197
0000000000004fd2         push       rbp
0000000000004fd3         mov        r12, rdi
0000000000004fd6         push       rbx
0000000000004fd7         mov        edi, 0x1
0000000000004fdc         mov        rbx, rdx
0000000000004fdf         mov        rdx, rsi
0000000000004fe2         mov        esi, 0x4
0000000000004fe7         call       quotearg_n_style                            ; quotearg_n_style
0000000000004fec         xor        edi, edi
0000000000004fee         mov        rdx, r12
0000000000004ff1         mov        esi, 0x4
0000000000004ff6         mov        rbp, rax
0000000000004ff9         call       quotearg_n_style                            ; quotearg_n_style
0000000000004ffe         lea        rsi, qword [aSS]                            ; "%s -> %s"
0000000000005005         mov        rdx, rax
0000000000005008         mov        rcx, rbp
000000000000500b         xor        eax, eax
000000000000500d         mov        edi, 0x1
0000000000005012         call       j___printf_chk                              ; __printf_chk
0000000000005017         test       rbx, rbx
000000000000501a         je         loc_5051

000000000000501c         mov        rsi, rbx
000000000000501f         mov        edi, 0x4
0000000000005024         call       quotearg_style                              ; quotearg_style
0000000000005029         lea        rsi, qword [aBackupS]                       ; argument "msgid" for method j_dcgettext, " (backup: %s)"
0000000000005030         mov        rbx, rax
0000000000005033         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005038         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000503a         call       j_dcgettext                                 ; dcgettext
000000000000503f         mov        rdx, rbx
0000000000005042         mov        rsi, rax
0000000000005045         mov        edi, 0x1
000000000000504a         xor        eax, eax
000000000000504c         call       j___printf_chk                              ; __printf_chk

                     loc_5051:
0000000000005051         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=emit_verbose+74
0000000000005058         mov        rax, qword [rdi+0x28]
000000000000505c         cmp        rax, qword [rdi+0x30]
0000000000005060         jae        loc_5078

0000000000005062         lea        rdx, qword [rax+1]
0000000000005066         mov        qword [rdi+0x28], rdx
000000000000506a         mov        byte [rax], 0xa
000000000000506d         pop        rbx
000000000000506e         pop        rbp
000000000000506f         pop        r12
0000000000005071         ret
                        ; endp
0000000000005072         align      8

                     loc_5078:
0000000000005078         pop        rbx                                         ; CODE XREF=emit_verbose+144
0000000000005079         pop        rbp
000000000000507a         pop        r12
000000000000507c         mov        esi, 0xa                                    ; argument #2 for method j___overflow
0000000000005081         jmp        j___overflow                                ; __overflow
                        ; endp
0000000000005086         align      16                                          ; End of unwind block (FDE at 0x19c08)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     create_hard_link:
0000000000005090         push       r13                                         ; Begin of unwind block (FDE at 0x19c40), CODE XREF=copy_internal+756, copy_internal+1391, copy_internal+5479
0000000000005092         push       r12
0000000000005094         movzx      r9d, dl
0000000000005098         push       rbp
0000000000005099         push       rbx
000000000000509a         mov        edx, 0xffffff9c
000000000000509f         mov        r13, rdi
00000000000050a2         mov        r12, rsi
00000000000050a5         mov        ebp, ecx
00000000000050a7         sub        rsp, 0x10
00000000000050ab         test       r8b, r8b
00000000000050ae         mov        rcx, rsi
00000000000050b1         setne      r8b
00000000000050b5         push       0xffffffffffffffff
00000000000050b7         mov        rsi, rdi
00000000000050ba         movzx      r8d, r8b
00000000000050be         mov        edi, edx
00000000000050c0         shl        r8d, 0xa
00000000000050c4         call       force_linkat                                ; force_linkat
00000000000050c9         test       eax, eax
00000000000050cb         mov        ebx, eax
00000000000050cd         pop        rdx
00000000000050ce         pop        rcx
00000000000050cf         jg         loc_5138

00000000000050d1         shr        ebx, 0x1f
00000000000050d4         and        bl, bpl
00000000000050d7         jne        loc_50f0

00000000000050d9         add        rsp, 0x8
00000000000050dd         mov        ebx, 0x1
00000000000050e2         mov        eax, ebx
00000000000050e4         pop        rbx
00000000000050e5         pop        rbp
00000000000050e6         pop        r12
00000000000050e8         pop        r13
00000000000050ea         ret
                        ; endp
00000000000050eb         align      16

                     loc_50f0:
00000000000050f0         mov        rsi, r12                                    ; CODE XREF=create_hard_link+71
00000000000050f3         mov        edi, 0x4
00000000000050f8         call       quotearg_style                              ; quotearg_style
00000000000050fd         lea        rsi, qword [aRemovedSn]                     ; argument "msgid" for method j_dcgettext, "removed %s\\n"
0000000000005104         mov        rbp, rax
0000000000005107         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000510c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000510e         call       j_dcgettext                                 ; dcgettext
0000000000005113         mov        rdx, rbp
0000000000005116         mov        rsi, rax
0000000000005119         mov        edi, 0x1
000000000000511e         xor        eax, eax
0000000000005120         call       j___printf_chk                              ; __printf_chk
0000000000005125         add        rsp, 0x8
0000000000005129         mov        eax, ebx
000000000000512b         pop        rbx
000000000000512c         pop        rbp
000000000000512d         pop        r12
000000000000512f         pop        r13
0000000000005131         ret
                        ; endp
0000000000005132         align      8

                     loc_5138:
0000000000005138         mov        rdx, r13                                    ; CODE XREF=create_hard_link+63
000000000000513b         mov        esi, 0x4
0000000000005140         mov        edi, 0x1
0000000000005145         call       quotearg_n_style                            ; quotearg_n_style
000000000000514a         mov        rdx, r12
000000000000514d         mov        esi, 0x4
0000000000005152         xor        edi, edi
0000000000005154         mov        r13, rax
0000000000005157         call       quotearg_n_style                            ; quotearg_n_style
000000000000515c         lea        rsi, qword [aCannotCreateHa]                ; argument "msgid" for method j_dcgettext, "cannot create hard link %s to %s"
0000000000005163         mov        rbp, rax
0000000000005166         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000516b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000516d         call       j_dcgettext                                 ; dcgettext
0000000000005172         mov        r8, r13
0000000000005175         mov        rcx, rbp
0000000000005178         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000517b         mov        esi, ebx                                    ; argument "__errnum" for method j_error
000000000000517d         xor        eax, eax
000000000000517f         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000005181         call       j_error                                     ; error
0000000000005186         xor        ebx, ebx
0000000000005188         add        rsp, 0x8
000000000000518c         mov        eax, ebx
000000000000518e         pop        rbx
000000000000518f         pop        rbp
0000000000005190         pop        r12
0000000000005192         pop        r13
0000000000005194         ret
                        ; endp
0000000000005195         align      32                                          ; End of unwind block (FDE at 0x19c40)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_32: int8_t, -50
        ;    var_3C: int8_t, -60


                     overwrite_ok.isra.12:
00000000000051a0         push       r14                                         ; Begin of unwind block (FDE at 0x19ca8), CODE XREF=copy_internal+3180, copy_internal+4727
00000000000051a2         push       r13
00000000000051a4         mov        r13, rdi
00000000000051a7         push       r12
00000000000051a9         push       rbp
00000000000051aa         mov        rbp, rdx
00000000000051ad         push       rbx
00000000000051ae         mov        rbx, rsi
00000000000051b1         mov        rdi, rbx
00000000000051b4         sub        rsp, 0x20
00000000000051b8         mov        esi, dword [rdx]
00000000000051ba         mov        rax, qword [fs:0x28]
00000000000051c3         mov        qword [rsp+0x48+var_30], rax
00000000000051c8         xor        eax, eax
00000000000051ca         call       writable_destination                        ; writable_destination
00000000000051cf         test       al, al
00000000000051d1         jne        loc_5268

00000000000051d7         mov        edi, dword [rbp]                            ; argument "mode" for method strmode
00000000000051da         lea        r12, qword [rsp+0x48+var_3C]
00000000000051df         mov        rsi, r12                                    ; argument "str" for method strmode
00000000000051e2         call       strmode                                     ; strmode
00000000000051e7         mov        ebp, dword [rbp]
00000000000051ea         mov        rsi, rbx
00000000000051ed         mov        edi, 0x4
00000000000051f2         mov        byte [rsp+0x48+var_32], 0x0
00000000000051f7         call       quotearg_style                              ; quotearg_style
00000000000051fc         and        ebp, 0xfff
0000000000005202         cmp        byte [r13+0x18], 0x0
0000000000005207         mov        r14, rax
000000000000520a         mov        rbx, qword [program_name]                   ; program_name
0000000000005211         mov        edx, 0x5
0000000000005216         jne        loc_5226

0000000000005218         test       dword [r13+0x14], 0xffff00
0000000000005220         je         loc_52d0

                     loc_5226:
0000000000005226         lea        rsi, qword [aSReplaceSOverr]                ; argument "msgid" for method j_dcgettext, "%s: replace %s, overriding mode %04lo (%s)? ", CODE XREF=overwrite_ok.isra.12+118
000000000000522d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000522f         call       j_dcgettext                                 ; dcgettext
0000000000005234         mov        rdx, rax

                     loc_5237:
0000000000005237         sub        rsp, 0x8                                    ; CODE XREF=overwrite_ok.isra.12+321
000000000000523b         add        r12, 0x1
000000000000523f         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000005246         push       r12
0000000000005248         mov        r9, rbp
000000000000524b         mov        r8, r14
000000000000524e         mov        rcx, rbx
0000000000005251         mov        esi, 0x1
0000000000005256         xor        eax, eax
0000000000005258         call       j___fprintf_chk                             ; __fprintf_chk
000000000000525d         pop        rax
000000000000525e         pop        rdx
000000000000525f         jmp        loc_52ae
0000000000005261         align      8

                     loc_5268:
0000000000005268         mov        rsi, rbx                                    ; CODE XREF=overwrite_ok.isra.12+49
000000000000526b         mov        edi, 0x4
0000000000005270         call       quotearg_style                              ; quotearg_style
0000000000005275         lea        rsi, qword [aSOverwriteS]                   ; argument "msgid" for method j_dcgettext, "%s: overwrite %s? "
000000000000527c         mov        rbx, qword [program_name]                   ; program_name
0000000000005283         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005288         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000528a         mov        rbp, rax
000000000000528d         call       j_dcgettext                                 ; dcgettext
0000000000005292         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000005299         mov        rdx, rax
000000000000529c         mov        r8, rbp
000000000000529f         mov        rcx, rbx
00000000000052a2         mov        esi, 0x1
00000000000052a7         xor        eax, eax
00000000000052a9         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_52ae:
00000000000052ae         call       yesno                                       ; yesno, CODE XREF=overwrite_ok.isra.12+191
00000000000052b3         mov        rcx, qword [rsp+0x48+var_30]
00000000000052b8         xor        rcx, qword [fs:0x28]
00000000000052c1         jne        loc_52e6

00000000000052c3         add        rsp, 0x20
00000000000052c7         pop        rbx
00000000000052c8         pop        rbp
00000000000052c9         pop        r12
00000000000052cb         pop        r13
00000000000052cd         pop        r14
00000000000052cf         ret
                        ; endp

                     loc_52d0:
00000000000052d0         lea        rsi, qword [aSUnwritableSMo]                ; argument "msgid" for method j_dcgettext, "%s: unwritable %s (mode %04lo, %s); try anyway? ", CODE XREF=overwrite_ok.isra.12+128
00000000000052d7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000052d9         call       j_dcgettext                                 ; dcgettext
00000000000052de         mov        rdx, rax
00000000000052e1         jmp        loc_5237

                     loc_52e6:
00000000000052e6         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=overwrite_ok.isra.12+289
                        ; endp
00000000000052eb         align      16                                          ; End of unwind block (FDE at 0x19ca8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     create_hole:
00000000000052f0         push       r13                                         ; Begin of unwind block (FDE at 0x19cf8), CODE XREF=sparse_copy+631, sparse_copy+696, copy_internal+12901
00000000000052f2         push       r12
00000000000052f4         mov        r13, rsi
00000000000052f7         push       rbp
00000000000052f8         push       rbx
00000000000052f9         mov        r12d, edx
00000000000052fc         mov        rsi, rcx                                    ; argument "__offset" for method j_lseek
00000000000052ff         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000005304         mov        ebp, edi
0000000000005306         sub        rsp, 0x8
000000000000530a         mov        rbx, rcx
000000000000530d         call       j_lseek                                     ; lseek
0000000000005312         test       rax, rax
0000000000005315         js         loc_5390

0000000000005317         test       r12b, r12b
000000000000531a         jne        loc_5330

                     loc_531c:
000000000000531c         add        rsp, 0x8                                    ; CODE XREF=create_hole+82
0000000000005320         mov        eax, 0x1
0000000000005325         pop        rbx
0000000000005326         pop        rbp
0000000000005327         pop        r12
0000000000005329         pop        r13
000000000000532b         ret
                        ; endp
000000000000532c         align      16

                     loc_5330:
0000000000005330         sub        rax, rbx                                    ; CODE XREF=create_hole+42
0000000000005333         mov        rdx, rbx
0000000000005336         mov        edi, ebp
0000000000005338         mov        rsi, rax
000000000000533b         call       punch_hole                                  ; punch_hole
0000000000005340         test       eax, eax
0000000000005342         jns        loc_531c

0000000000005344         mov        rsi, r13
0000000000005347         mov        edi, 0x4
000000000000534c         call       quotearg_style                              ; quotearg_style
0000000000005351         lea        rsi, qword [aErrorDeallocat]                ; "error deallocating %s"
0000000000005358         mov        rbp, rax
000000000000535b         mov        edx, 0x5

                     loc_5360:
0000000000005360         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=create_hole+188
0000000000005362         call       j_dcgettext                                 ; dcgettext
0000000000005367         mov        rbx, rax
000000000000536a         call       j___errno_location                          ; __errno_location
000000000000536f         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000005371         mov        rcx, rbp
0000000000005374         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000005377         xor        eax, eax
0000000000005379         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000537b         call       j_error                                     ; error
0000000000005380         add        rsp, 0x8
0000000000005384         xor        eax, eax
0000000000005386         pop        rbx
0000000000005387         pop        rbp
0000000000005388         pop        r12
000000000000538a         pop        r13
000000000000538c         ret
                        ; endp
000000000000538d         align      16

                     loc_5390:
0000000000005390         mov        rsi, r13                                    ; CODE XREF=create_hole+37
0000000000005393         mov        edi, 0x4
0000000000005398         call       quotearg_style                              ; quotearg_style
000000000000539d         mov        edx, 0x5
00000000000053a2         mov        rbp, rax
00000000000053a5         lea        rsi, qword [aCannotLseekS]                  ; "cannot lseek %s"
00000000000053ac         jmp        loc_5360
00000000000053ae         align      16                                          ; End of unwind block (FDE at 0x19cf8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_89: int8_t, -137
        ;    var_8A: int8_t, -138
        ;    var_8B: int8_t, -139
        ;    var_90: int32_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160


                     sparse_copy:
00000000000053b0         push       r15                                         ; Begin of unwind block (FDE at 0x19d48), CODE XREF=copy_internal+12650, copy_internal+15170
00000000000053b2         push       r14
00000000000053b4         push       r13
00000000000053b6         push       r12
00000000000053b8         push       rbp
00000000000053b9         push       rbx
00000000000053ba         sub        rsp, 0x78
00000000000053be         mov        rax, qword [rsp+0xa8+arg_0]
00000000000053c6         mov        rbx, qword [rsp+0xa8+arg_18]
00000000000053ce         mov        r10, qword [rsp+0xa8+arg_20]
00000000000053d6         mov        byte [rsp+0xa8+var_89], r9b
00000000000053db         mov        qword [rsp+0xa8+var_50], rax
00000000000053e0         mov        rax, qword [rsp+0xa8+arg_8]
00000000000053e8         mov        byte [r10], 0x0
00000000000053ec         mov        qword [rsp+0xa8+var_68], rbx
00000000000053f1         mov        qword [rsp+0xa8+var_48], r10
00000000000053f6         mov        qword [rbx], 0x0
00000000000053fd         mov        qword [rsp+0xa8+var_98], rax
0000000000005402         mov        rax, qword [rsp+0xa8+arg_10]
000000000000540a         test       rax, rax
000000000000540d         mov        qword [rsp+0xa8+var_80], rax
0000000000005412         je         loc_57b3

0000000000005418         test       r8, r8
000000000000541b         mov        qword [rsp+0xa8+var_58], r8
0000000000005420         mov        dword [rsp+0xa8+var_3C], r9d
0000000000005425         cmove      r8, rcx
0000000000005429         mov        qword [rsp+0xa8+var_70], rcx
000000000000542e         mov        qword [rsp+0xa8+var_88], rdx
0000000000005433         mov        dword [rsp+0xa8+var_90], esi
0000000000005437         mov        dword [rsp+0xa8+var_40], edi
000000000000543b         xor        r13d, r13d
000000000000543e         mov        qword [rsp+0xa8+var_60], r8
0000000000005443         xor        r15d, r15d

                     loc_5446:
0000000000005446         mov        rax, qword [rsp+0xa8+var_70]                ; CODE XREF=sparse_copy+199, sparse_copy+585
000000000000544b         mov        rdx, qword [rsp+0xa8+var_80]
0000000000005450         mov        rsi, qword [rsp+0xa8+var_88]                ; argument "__buf" for method j_read
0000000000005455         mov        edi, dword [rsp+0xa8+var_40]                ; argument "__fd" for method j_read
0000000000005459         cmp        rax, rdx
000000000000545c         cmovbe     rdx, rax                                    ; argument "__nbytes" for method j_read
0000000000005460         call       j_read                                      ; read
0000000000005465         test       rax, rax
0000000000005468         mov        qword [rsp+0xa8+var_78], rax
000000000000546d         jns        loc_54d0

000000000000546f         call       j___errno_location                          ; __errno_location
0000000000005474         cmp        dword [rax], 0x4
0000000000005477         je         loc_5446

0000000000005479         mov        rsi, qword [rsp+0xa8+var_50]
000000000000547e         mov        edi, 0x4
0000000000005483         mov        rbx, rax
0000000000005486         xor        r15d, r15d
0000000000005489         call       quotearg_style                              ; quotearg_style
000000000000548e         lea        rsi, qword [aErrorReadingS]                 ; argument "msgid" for method j_dcgettext, "error reading %s"
0000000000005495         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000549a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000549c         mov        rbp, rax
000000000000549f         call       j_dcgettext                                 ; dcgettext
00000000000054a4         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
00000000000054a6         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000054a9         mov        rcx, rbp
00000000000054ac         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000054ae         xor        eax, eax
00000000000054b0         call       j_error                                     ; error

                     loc_54b5:
00000000000054b5         add        rsp, 0x78                                   ; CODE XREF=sparse_copy+718, sparse_copy+937, sparse_copy+1022, sparse_copy+1033
00000000000054b9         mov        eax, r15d
00000000000054bc         pop        rbx
00000000000054bd         pop        rbp
00000000000054be         pop        r12
00000000000054c0         pop        r13
00000000000054c2         pop        r14
00000000000054c4         pop        r15
00000000000054c6         ret
                        ; endp
00000000000054c7         align      16

                     loc_54d0:
00000000000054d0         je         loc_55ff                                    ; CODE XREF=sparse_copy+189

00000000000054d6         mov        rax, qword [rsp+0xa8+var_68]
00000000000054db         mov        rbp, qword [rsp+0xa8+var_78]
00000000000054e0         mov        ecx, r15d
00000000000054e3         mov        r14, qword [rsp+0xa8+var_88]
00000000000054e8         mov        r10, qword [rsp+0xa8+var_60]
00000000000054ed         add        qword [rax], rbp
00000000000054f0         cmp        qword [rsp+0xa8+var_58], 0x0
00000000000054f6         mov        r11, r14
00000000000054f9         mov        r15, r10
00000000000054fc         setne      byte [rsp+0xa8+var_8B]
0000000000005501         nop        dword [rax]

                     loc_5508:
0000000000005508         cmp        rbp, r15                                    ; CODE XREF=sparse_copy+774
000000000000550b         mov        rbx, r15
000000000000550e         cmovbe     rbx, rbp
0000000000005512         test       rbx, rbx
0000000000005515         setne      r12b
0000000000005519         and        r12b, byte [rsp+0xa8+var_8B]
000000000000551e         je         loc_5630

0000000000005524         mov        rsi, r14
0000000000005527         mov        rdx, rbx

                     loc_552a:
000000000000552a         cmp        byte [rsi], 0x0                             ; CODE XREF=sparse_copy+404
000000000000552d         jne        loc_5760

0000000000005533         add        rsi, 0x1
0000000000005537         sub        rdx, 0x1
000000000000553b         je         loc_56c8

0000000000005541         test       dl, 0xf
0000000000005544         jne        loc_552a

0000000000005546         mov        rdi, r14                                    ; argument "__s1" for method j_memcmp
0000000000005549         mov        qword [rsp+0xa8+var_A0], r11
000000000000554e         mov        byte [rsp+0xa8+var_8A], cl
0000000000005552         call       j_memcmp                                    ; memcmp
0000000000005557         movzx      ecx, byte [rsp+0xa8+var_8A]
000000000000555c         test       eax, eax
000000000000555e         mov        r11, qword [rsp+0xa8+var_A0]
0000000000005563         sete       r12b
0000000000005567         mov        edx, r12d
000000000000556a         xor        edx, ecx
000000000000556c         test       eax, eax
000000000000556e         setne      al

                     loc_5571:
0000000000005571         test       r13, r13                                    ; CODE XREF=sparse_copy+952
0000000000005574         setne      r9b
0000000000005578         and        r9d, edx
000000000000557b         cmp        rbp, r15
000000000000557e         ja         loc_56d8

0000000000005584         test       al, al
0000000000005586         je         loc_56d8

000000000000558c         test       r9b, r9b
000000000000558f         je         loc_563a

0000000000005595         mov        r15d, 0x1

                     loc_559b:
000000000000559b         test       cl, cl                                      ; CODE XREF=sparse_copy+816
000000000000559d         mov        byte [rsp+0xa8+var_8A], cl
00000000000055a1         jne        loc_5652

                     loc_55a7:
00000000000055a7         mov        edi, dword [rsp+0xa8+var_90]                ; CODE XREF=sparse_copy+668
00000000000055ab         mov        rdx, r13
00000000000055ae         mov        rsi, r11
00000000000055b1         mov        byte [rsp+0xa8+var_A0], r9b
00000000000055b6         call       full_write                                  ; full_write
00000000000055bb         cmp        r13, rax
00000000000055be         movzx      r9d, byte [rsp+0xa8+var_A0]
00000000000055c4         movzx      ecx, byte [rsp+0xa8+var_8A]
00000000000055c9         jne        loc_576d

                     loc_55cf:
00000000000055cf         test       r15d, r15d                                  ; CODE XREF=sparse_copy+709
00000000000055d2         mov        r13, rbx
00000000000055d5         je         loc_56e8

00000000000055db         test       rbx, rbx
00000000000055de         jne        loc_5700

                     loc_55e4:
00000000000055e4         mov        rdi, qword [rsp+0xa8+var_78]                ; CODE XREF=sparse_copy+783
00000000000055e9         sub        qword [rsp+0xa8+var_80], rdi
00000000000055ee         mov        r15d, r12d
00000000000055f1         mov        rax, qword [rsp+0xa8+var_48]
00000000000055f6         mov        byte [rax], r12b
00000000000055f9         jne        loc_5446

                     loc_55ff:
00000000000055ff         test       r15b, r15b                                  ; CODE XREF=loc_54d0
0000000000005602         je         loc_57b3

0000000000005608         movzx      edx, byte [rsp+0xa8+var_3C]
000000000000560d         mov        rsi, qword [rsp+0xa8+var_98]
0000000000005612         mov        rcx, r13
0000000000005615         mov        edi, dword [rsp+0xa8+var_90]
0000000000005619         add        rsp, 0x78
000000000000561d         pop        rbx
000000000000561e         pop        rbp
000000000000561f         pop        r12
0000000000005621         pop        r13
0000000000005623         pop        r14
0000000000005625         pop        r15
0000000000005627         jmp        create_hole                                 ; create_hole
                        ; endp
000000000000562c         align      16

                     loc_5630:
0000000000005630         cmp        cl, 0x1                                     ; CODE XREF=sparse_copy+366
0000000000005633         je         loc_5688

0000000000005635         cmp        rbp, r15
0000000000005638         ja         loc_5688

                     loc_563a:
000000000000563a         add        r13, rbx                                    ; CODE XREF=sparse_copy+479, sparse_copy+736
000000000000563d         xor        r9d, r9d
0000000000005640         test       cl, cl
0000000000005642         mov        r15d, 0x1
0000000000005648         mov        byte [rsp+0xa8+var_8A], cl
000000000000564c         je         loc_55a7

                     loc_5652:
0000000000005652         movzx      edx, byte [rsp+0xa8+var_89]                 ; CODE XREF=sparse_copy+497
0000000000005657         mov        rsi, qword [rsp+0xa8+var_98]
000000000000565c         mov        rcx, r13
000000000000565f         mov        edi, dword [rsp+0xa8+var_90]
0000000000005663         mov        byte [rsp+0xa8+var_8A], r9b
0000000000005668         call       create_hole                                 ; create_hole
000000000000566d         test       al, al
000000000000566f         movzx      r9d, byte [rsp+0xa8+var_8A]
0000000000005675         jne        loc_55cf

000000000000567b         mov        r15d, eax
000000000000567e         jmp        loc_54b5
0000000000005683         align      8

                     loc_5688:
0000000000005688         test       rbx, rbx                                    ; CODE XREF=sparse_copy+643, sparse_copy+648
000000000000568b         jne        loc_5698

000000000000568d         mov        r12d, ecx
0000000000005690         jmp        loc_563a

                     loc_5692:
0000000000005692         mov        ecx, r12d                                   ; CODE XREF=sparse_copy+811
0000000000005695         nop        dword [rax]

                     loc_5698:
0000000000005698         movabs     rax, 0x7fffffffffffffff                     ; CODE XREF=sparse_copy+731
00000000000056a2         sub        rax, rbx
00000000000056a5         cmp        rax, r13
00000000000056a8         jb         loc_5720

00000000000056aa         add        r13, rbx
00000000000056ad         add        r14, rbx
00000000000056b0         mov        r15, rbx

                     loc_56b3:
00000000000056b3         sub        rbp, r15                                    ; CODE XREF=sparse_copy+836, sparse_copy+860, sparse_copy+871
00000000000056b6         jne        loc_5508

00000000000056bc         mov        r12d, ecx
00000000000056bf         jmp        loc_55e4
00000000000056c4         align      8

                     loc_56c8:
00000000000056c8         mov        r9d, ecx                                    ; CODE XREF=sparse_copy+395
00000000000056cb         xor        r9d, 0x1
00000000000056cf         test       r13, r13
00000000000056d2         setne      al
00000000000056d5         and        r9d, eax

                     loc_56d8:
00000000000056d8         test       r9b, r9b                                    ; CODE XREF=sparse_copy+462, sparse_copy+470
00000000000056db         je         loc_5692

00000000000056dd         xor        r15d, r15d
00000000000056e0         jmp        loc_559b
00000000000056e5         align      8

                     loc_56e8:
00000000000056e8         mov        r11, r14                                    ; CODE XREF=sparse_copy+549
00000000000056eb         mov        ecx, r12d
00000000000056ee         add        r14, rbx
00000000000056f1         mov        r15, rbx
00000000000056f4         jmp        loc_56b3
00000000000056f6         align      256

                     loc_5700:
0000000000005700         xor        r15d, r15d                                  ; CODE XREF=sparse_copy+558
0000000000005703         test       r9b, r9b
0000000000005706         mov        ecx, r12d
0000000000005709         mov        r11, r14
000000000000570c         jne        loc_56b3

000000000000570e         add        r14, rbx
0000000000005711         mov        r15, rbx
0000000000005714         xor        r13d, r13d
0000000000005717         jmp        loc_56b3
0000000000005719         align      32

                     loc_5720:
0000000000005720         mov        rsi, qword [rsp+0xa8+var_50]                ; CODE XREF=sparse_copy+760
0000000000005725         mov        edi, 0x4
000000000000572a         xor        r15d, r15d
000000000000572d         call       quotearg_style                              ; quotearg_style
0000000000005732         lea        rsi, qword [aOverflowReadin]                ; argument "msgid" for method j_dcgettext, "overflow reading %s"
0000000000005739         mov        rbx, rax
000000000000573c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005741         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005743         call       j_dcgettext                                 ; dcgettext
0000000000005748         mov        rcx, rbx
000000000000574b         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000574e         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000005750         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000005752         xor        eax, eax
0000000000005754         call       j_error                                     ; error
0000000000005759         jmp        loc_54b5
000000000000575e         align      32

                     loc_5760:
0000000000005760         mov        eax, r12d                                   ; CODE XREF=sparse_copy+381
0000000000005763         mov        edx, ecx
0000000000005765         xor        r12d, r12d
0000000000005768         jmp        loc_5571

                     loc_576d:
000000000000576d         mov        rsi, qword [rsp+0xa8+var_98]                ; CODE XREF=sparse_copy+537
0000000000005772         mov        edi, 0x4
0000000000005777         mov        r15d, ecx
000000000000577a         call       quotearg_style                              ; quotearg_style
000000000000577f         lea        rsi, qword [aErrorWritingS]                 ; argument "msgid" for method j_dcgettext, "error writing %s"
0000000000005786         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005788         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000578d         mov        rbp, rax
0000000000005790         call       j_dcgettext                                 ; dcgettext
0000000000005795         mov        rbx, rax
0000000000005798         call       j___errno_location                          ; __errno_location
000000000000579d         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000579f         mov        rcx, rbp
00000000000057a2         mov        rdx, rbx                                    ; argument "__format" for method j_error
00000000000057a5         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000057a7         xor        eax, eax
00000000000057a9         call       j_error                                     ; error
00000000000057ae         jmp        loc_54b5

                     loc_57b3:
00000000000057b3         mov        r15d, 0x1                                   ; CODE XREF=sparse_copy+98, sparse_copy+594
00000000000057b9         jmp        loc_54b5
00000000000057be         align      64                                          ; End of unwind block (FDE at 0x19d48)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_process_security_ctx:
00000000000057c0         push       r13                                         ; Begin of unwind block (FDE at 0x19db0), CODE XREF=copy_internal+1297, copy_internal+2837, copy_internal+4941, copy_internal+13253
00000000000057c2         push       r12
00000000000057c4         push       rbp
00000000000057c5         push       rbx
00000000000057c6         mov        rbp, r8
00000000000057c9         sub        rsp, 0x8
00000000000057cd         cmp        byte [r8+0x25], 0x0
00000000000057d2         je         loc_5840

00000000000057d4         mov        r13, rdi
00000000000057d7         call       j___errno_location                          ; __errno_location
00000000000057dc         cmp        byte [rbp+0x23], 0x0
00000000000057e0         mov        r12, rax
00000000000057e3         jne        loc_5860

                     loc_57e5:
00000000000057e5         mov        rsi, r13                                    ; CODE XREF=set_process_security_ctx+166
00000000000057e8         mov        edi, 0x4
00000000000057ed         mov        dword [r12], 0x5f
00000000000057f5         call       quotearg_style                              ; quotearg_style
00000000000057fa         lea        rsi, qword [aFailedToGetSec]                ; argument "msgid" for method j_dcgettext, "failed to get security context of %s"
0000000000005801         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005806         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005808         mov        rbx, rax
000000000000580b         call       j_dcgettext                                 ; dcgettext
0000000000005810         mov        esi, dword [r12]                            ; argument "__errnum" for method j_error
0000000000005814         mov        rcx, rbx
0000000000005817         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000581a         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000581c         xor        eax, eax
000000000000581e         call       j_error                                     ; error
0000000000005823         movzx      ebx, byte [rbp+0x26]

                     loc_5827:
0000000000005827         add        rsp, 0x8                                    ; CODE XREF=set_process_security_ctx+178
000000000000582b         xor        ebx, 0x1
000000000000582e         mov        eax, ebx
0000000000005830         pop        rbx
0000000000005831         pop        rbp
0000000000005832         pop        r12
0000000000005834         pop        r13
0000000000005836         ret
                        ; endp
0000000000005837         align      64

                     loc_5840:
0000000000005840         mov        ebx, ecx                                    ; CODE XREF=set_process_security_ctx+18
0000000000005842         and        bl, byte [r8+0x21]
0000000000005846         jne        loc_5878

0000000000005848         add        rsp, 0x8
000000000000584c         mov        ebx, 0x1
0000000000005851         mov        eax, ebx
0000000000005853         pop        rbx
0000000000005854         pop        rbp
0000000000005855         pop        r12
0000000000005857         pop        r13
0000000000005859         ret
                        ; endp
000000000000585a         align      32

                     loc_5860:
0000000000005860         movzx      ebx, byte [rbp+0x26]                        ; CODE XREF=set_process_security_ctx+35
0000000000005864         test       bl, bl
0000000000005866         jne        loc_57e5

000000000000586c         mov        dword [rax], 0x5f
0000000000005872         jmp        loc_5827
0000000000005874         align      8

                     loc_5878:
0000000000005878         call       j___errno_location                          ; __errno_location, CODE XREF=set_process_security_ctx+134
000000000000587d         mov        dword [rax], 0x5f
0000000000005883         add        rsp, 0x8
0000000000005887         mov        eax, ebx
0000000000005889         pop        rbx
000000000000588a         pop        rbp
000000000000588b         pop        r12
000000000000588d         pop        r13
000000000000588f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_file_security_ctx:
0000000000005890         push       r12                                         ; End of unwind block (FDE at 0x19db0), Begin of unwind block (FDE at 0x19e0c), CODE XREF=copy_internal+4993, copy_internal+8958, copy_internal+10960, copy_internal+14718
0000000000005892         push       rbp
0000000000005893         mov        rbp, rcx
0000000000005896         push       rbx
0000000000005897         mov        r12, rdi
000000000000589a         call       j___errno_location                          ; __errno_location
000000000000589f         cmp        byte [rbp+0x23], 0x0
00000000000058a3         mov        rbx, rax
00000000000058a6         je         loc_58ae

00000000000058a8         cmp        byte [rbp+0x26], 0x0
00000000000058ac         je         loc_58f8

                     loc_58ae:
00000000000058ae         mov        rdx, r12                                    ; CODE XREF=set_file_security_ctx+22
00000000000058b1         mov        dword [rbx], 0x5f
00000000000058b7         mov        esi, 0x4
00000000000058bc         xor        edi, edi
00000000000058be         call       quotearg_n_style                            ; quotearg_n_style
00000000000058c3         lea        rsi, qword [aFailedToSetThe]                ; argument "msgid" for method j_dcgettext, "failed to set the security context of %s"
00000000000058ca         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000058cf         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000058d1         mov        rbp, rax
00000000000058d4         call       j_dcgettext                                 ; dcgettext
00000000000058d9         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
00000000000058db         mov        rcx, rbp
00000000000058de         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000058e1         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000058e3         xor        eax, eax
00000000000058e5         call       j_error                                     ; error
00000000000058ea         pop        rbx
00000000000058eb         xor        eax, eax
00000000000058ed         pop        rbp
00000000000058ee         pop        r12
00000000000058f0         ret
                        ; endp
00000000000058f1         align      8

                     loc_58f8:
00000000000058f8         mov        dword [rax], 0x5f                           ; CODE XREF=set_file_security_ctx+28
00000000000058fe         xor        eax, eax
0000000000005900         pop        rbx
0000000000005901         pop        rbp
0000000000005902         pop        r12
0000000000005904         ret
                        ; endp
0000000000005905         align      16                                          ; End of unwind block (FDE at 0x19e0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dest_info_init:
0000000000005910         lea        r8, qword [triple_free]                     ; Begin of unwind block (FDE at 0x19e44), triple_free, CODE XREF=main+1638
0000000000005917         lea        rcx, qword [triple_compare]                 ; triple_compare
000000000000591e         xor        esi, esi
0000000000005920         lea        rdx, qword [triple_hash]                    ; triple_hash
0000000000005927         push       rbx
0000000000005928         mov        rbx, rdi
000000000000592b         mov        edi, 0x3d
0000000000005930         call       hash_initialize                             ; hash_initialize
0000000000005935         mov        qword [rbx+0x40], rax
0000000000005939         pop        rbx
000000000000593a         ret
                        ; endp
000000000000593b         align      64                                          ; End of unwind block (FDE at 0x19e44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     src_info_init:
0000000000005940         lea        r8, qword [triple_free]                     ; Begin of unwind block (FDE at 0x19e60), triple_free
0000000000005947         lea        rcx, qword [triple_compare]                 ; triple_compare
000000000000594e         xor        esi, esi
0000000000005950         lea        rdx, qword [triple_hash_no_name]            ; triple_hash_no_name
0000000000005957         push       rbx
0000000000005958         mov        rbx, rdi
000000000000595b         mov        edi, 0x3d
0000000000005960         call       hash_initialize                             ; hash_initialize
0000000000005965         mov        qword [rbx+0x48], rax
0000000000005969         pop        rbx
000000000000596a         ret
                        ; endp
000000000000596b         align      16                                          ; End of unwind block (FDE at 0x19e60)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     cp_options_default:
0000000000005970         pxor       xmm0, xmm0                                  ; Begin of unwind block (FDE at 0x19e7c), CODE XREF=main+148
0000000000005974         push       rbx
0000000000005975         mov        rbx, rdi
0000000000005978         movups     xmmword [rdi], xmm0
000000000000597b         movups     xmmword [rdi+0x10], xmm0
000000000000597f         movups     xmmword [rdi+0x20], xmm0
0000000000005983         movups     xmmword [rdi+0x30], xmm0
0000000000005987         movups     xmmword [rdi+0x40], xmm0
000000000000598b         call       j_geteuid                                   ; geteuid
0000000000005990         test       eax, eax
0000000000005992         mov        dword [rbx+0x34], 0xffffffff
0000000000005999         sete       al
000000000000599c         mov        byte [rbx+0x1b], al
000000000000599f         mov        byte [rbx+0x1a], al
00000000000059a2         pop        rbx
00000000000059a3         ret
                        ; endp
00000000000059a4         align      16                                          ; End of unwind block (FDE at 0x19e7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     chown_failure_ok:
00000000000059b0         push       rbx                                         ; Begin of unwind block (FDE at 0x19e98), CODE XREF=set_owner+141, copy_internal+14261
00000000000059b1         mov        rbx, rdi
00000000000059b4         call       j___errno_location                          ; __errno_location
00000000000059b9         mov        edx, dword [rax]
00000000000059bb         cmp        edx, 0x1
00000000000059be         sete       al
00000000000059c1         cmp        edx, 0x16
00000000000059c4         sete       dl
00000000000059c7         or         al, dl
00000000000059c9         je         loc_59d2

00000000000059cb         movzx      eax, byte [rbx+0x1a]
00000000000059cf         xor        eax, 0x1

                     loc_59d2:
00000000000059d2         pop        rbx                                         ; CODE XREF=chown_failure_ok+25
00000000000059d3         ret
                        ; endp
00000000000059d4         align      32                                          ; End of unwind block (FDE at 0x19e98)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_owner:
00000000000059e0         push       r15                                         ; Begin of unwind block (FDE at 0x19eb4), CODE XREF=copy_internal+1827, copy_internal+13832
00000000000059e2         push       r14
00000000000059e4         push       r13
00000000000059e6         push       r12
00000000000059e8         mov        r13, rsi
00000000000059eb         push       rbp
00000000000059ec         push       rbx
00000000000059ed         mov        rbp, rdi
00000000000059f0         mov        ebx, edx
00000000000059f2         sub        rsp, 0x8
00000000000059f6         test       r8b, r8b
00000000000059f9         mov        r14d, dword [rcx+0x1c]
00000000000059fd         mov        r12d, dword [rcx+0x20]
0000000000005a01         jne        loc_5a35

0000000000005a03         movabs     rax, 0xff0000000000ff
0000000000005a0d         test       qword [rdi+0x18], rax
0000000000005a11         je         loc_5ab0

0000000000005a17         mov        esi, dword [r9+0x18]
0000000000005a1b         mov        edx, dword [rcx+0x18]

                     loc_5a1e:
0000000000005a1e         mov        eax, edx                                    ; CODE XREF=set_owner+225
0000000000005a20         mov        ecx, esi
0000000000005a22         not        eax
0000000000005a24         and        ecx, 0xfff
0000000000005a2a         or         ah, 0xe
0000000000005a2d         test       eax, ecx
0000000000005a2f         jne        loc_5b00

                     loc_5a35:
0000000000005a35         cmp        ebx, 0xffffffff                             ; CODE XREF=set_owner+33, set_owner+212, set_owner+308
0000000000005a38         mov        edx, r12d
0000000000005a3b         mov        esi, r14d
0000000000005a3e         je         loc_5a90

0000000000005a40         mov        edi, ebx                                    ; argument "__fd" for method j_fchown
0000000000005a42         call       j_fchown                                    ; fchown
0000000000005a47         test       eax, eax
0000000000005a49         je         loc_5a9c

0000000000005a4b         call       j___errno_location                          ; __errno_location
0000000000005a50         mov        r14d, dword [rax]
0000000000005a53         mov        r15, rax
0000000000005a56         cmp        r14d, 0x1
0000000000005a5a         je         loc_5bc8

0000000000005a60         cmp        r14d, 0x16
0000000000005a64         je         loc_5bc8

                     loc_5a6a:
0000000000005a6a         mov        rdi, rbp                                    ; CODE XREF=set_owner+258, set_owner+283, set_owner+506
0000000000005a6d         call       chown_failure_ok                            ; chown_failure_ok
0000000000005a72         mov        edx, eax
0000000000005a74         xor        eax, eax
0000000000005a76         test       dl, dl
0000000000005a78         je         loc_5b70

0000000000005a7e         add        rsp, 0x8
0000000000005a82         pop        rbx
0000000000005a83         pop        rbp
0000000000005a84         pop        r12
0000000000005a86         pop        r13
0000000000005a88         pop        r14
0000000000005a8a         pop        r15
0000000000005a8c         ret
                        ; endp
0000000000005a8d         align      16

                     loc_5a90:
0000000000005a90         mov        rdi, r13                                    ; argument "__file" for method j_lchown, CODE XREF=set_owner+94
0000000000005a93         call       j_lchown                                    ; lchown
0000000000005a98         test       eax, eax
0000000000005a9a         jne        loc_5ad0

                     loc_5a9c:
0000000000005a9c         add        rsp, 0x8                                    ; CODE XREF=set_owner+105
0000000000005aa0         mov        eax, 0x1
0000000000005aa5         pop        rbx
0000000000005aa6         pop        rbp
0000000000005aa7         pop        r12
0000000000005aa9         pop        r13
0000000000005aab         pop        r14
0000000000005aad         pop        r15
0000000000005aaf         ret
                        ; endp

                     loc_5ab0:
0000000000005ab0         cmp        byte [rdi+0x2b], 0x0                        ; CODE XREF=set_owner+49
0000000000005ab4         je         loc_5a35

0000000000005aba         mov        esi, dword [r9+0x18]
0000000000005abe         mov        edx, dword [rdi+0x10]
0000000000005ac1         jmp        loc_5a1e
0000000000005ac6         align      16

                     loc_5ad0:
0000000000005ad0         call       j___errno_location                          ; __errno_location, CODE XREF=set_owner+186
0000000000005ad5         mov        ebx, dword [rax]
0000000000005ad7         mov        r14, rax
0000000000005ada         cmp        ebx, 0x1
0000000000005add         je         loc_5ae8

0000000000005adf         cmp        ebx, 0x16
0000000000005ae2         jne        loc_5a6a

                     loc_5ae8:
0000000000005ae8         mov        edx, r12d                                   ; argument "__group" for method j_lchown, CODE XREF=set_owner+253
0000000000005aeb         mov        esi, 0xffffffff                             ; argument "__owner" for method j_lchown
0000000000005af0         mov        rdi, r13                                    ; argument "__file" for method j_lchown
0000000000005af3         call       j_lchown                                    ; lchown
0000000000005af8         mov        dword [r14], ebx
0000000000005afb         jmp        loc_5a6a

                     loc_5b00:
0000000000005b00         and        edx, esi                                    ; CODE XREF=set_owner+79
0000000000005b02         mov        rdi, r13
0000000000005b05         mov        esi, ebx
0000000000005b07         and        edx, 0x1c0
0000000000005b0d         call       qset_acl                                    ; qset_acl
0000000000005b12         test       eax, eax
0000000000005b14         je         loc_5a35

0000000000005b1a         call       j___errno_location                          ; __errno_location
0000000000005b1f         mov        rbx, rax
0000000000005b22         mov        eax, dword [rax]
0000000000005b24         cmp        eax, 0x1
0000000000005b27         je         loc_5be0

0000000000005b2d         cmp        eax, 0x16
0000000000005b30         je         loc_5be0

                     loc_5b36:
0000000000005b36         mov        rsi, r13                                    ; CODE XREF=set_owner+516
0000000000005b39         mov        edi, 0x4
0000000000005b3e         call       quotearg_style                              ; quotearg_style
0000000000005b43         lea        rsi, qword [aClearingPermis]                ; argument "msgid" for method j_dcgettext, "clearing permissions for %s"
0000000000005b4a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005b4c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005b51         mov        r12, rax
0000000000005b54         call       j_dcgettext                                 ; dcgettext
0000000000005b59         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000005b5b         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000005b5e         mov        rcx, r12
0000000000005b61         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000005b63         xor        eax, eax
0000000000005b65         call       j_error                                     ; error
0000000000005b6a         jmp        loc_5bac
0000000000005b6c         align      16

                     loc_5b70:
0000000000005b70         mov        rsi, r13                                    ; CODE XREF=set_owner+152
0000000000005b73         mov        edi, 0x4
0000000000005b78         call       quotearg_style                              ; quotearg_style
0000000000005b7d         lea        rsi, qword [aFailedToPreser]                ; argument "msgid" for method j_dcgettext, "failed to preserve ownership for %s"
0000000000005b84         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005b89         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005b8b         mov        r12, rax
0000000000005b8e         call       j_dcgettext                                 ; dcgettext
0000000000005b93         mov        rbx, rax
0000000000005b96         call       j___errno_location                          ; __errno_location
0000000000005b9b         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000005b9d         mov        rcx, r12
0000000000005ba0         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000005ba3         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000005ba5         xor        eax, eax
0000000000005ba7         call       j_error                                     ; error

                     loc_5bac:
0000000000005bac         movzx      eax, byte [rbp+0x24]                        ; CODE XREF=set_owner+394, set_owner+522
0000000000005bb0         add        rsp, 0x8
0000000000005bb4         pop        rbx
0000000000005bb5         pop        rbp
0000000000005bb6         pop        r12
0000000000005bb8         neg        eax
0000000000005bba         pop        r13
0000000000005bbc         pop        r14
0000000000005bbe         pop        r15
0000000000005bc0         ret
                        ; endp
0000000000005bc1         align      8

                     loc_5bc8:
0000000000005bc8         mov        edx, r12d                                   ; argument "__group" for method j_fchown, CODE XREF=set_owner+122, set_owner+132
0000000000005bcb         mov        esi, 0xffffffff                             ; argument "__owner" for method j_fchown
0000000000005bd0         mov        edi, ebx                                    ; argument "__fd" for method j_fchown
0000000000005bd2         call       j_fchown                                    ; fchown
0000000000005bd7         mov        dword [r15], r14d
0000000000005bda         jmp        loc_5a6a
0000000000005bdf         align      32

                     loc_5be0:
0000000000005be0         cmp        byte [rbp+0x1b], 0x0                        ; CODE XREF=set_owner+327, set_owner+336
0000000000005be4         jne        loc_5b36

0000000000005bea         jmp        loc_5bac
0000000000005bec         align      16                                          ; End of unwind block (FDE at 0x19eb4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     cached_umask:
0000000000005bf0         push       rbx                                         ; Begin of unwind block (FDE at 0x19f34), CODE XREF=copy_internal+11713, copy_internal+11814, copy_internal+13948, copy_internal+16215
0000000000005bf1         mov        ebx, dword [mask.7898]                      ; mask.7898
0000000000005bf7         cmp        ebx, 0xffffffff
0000000000005bfa         je         loc_5c00

0000000000005bfc         mov        eax, ebx
0000000000005bfe         pop        rbx
0000000000005bff         ret
                        ; endp

                     loc_5c00:
0000000000005c00         xor        edi, edi                                    ; argument "__mask" for method j_umask, CODE XREF=cached_umask+10
0000000000005c02         call       j_umask                                     ; umask
0000000000005c07         mov        ebx, eax
0000000000005c09         mov        edi, eax                                    ; argument "__mask" for method j_umask
0000000000005c0b         mov        dword [mask.7898], eax                      ; mask.7898
0000000000005c11         call       j_umask                                     ; umask
0000000000005c16         mov        eax, ebx
0000000000005c18         pop        rbx
0000000000005c19         ret
                        ; endp
0000000000005c1a         align      32                                          ; End of unwind block (FDE at 0x19f34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_18: int, 40
        ;    arg_10: int, 32
        ;    arg_8: int, 24
        ;    arg_0: int, 16
        ;    var_28: int8_t, -40
        ;    var_38: int64_t, -56
        ;    var_50: -80
        ;    var_60: -96
        ;    var_70: -112
        ;    var_80: -128
        ;    var_90: -144
        ;    var_98: int64_t, -152
        ;    var_A0: -160
        ;    var_B0: int32_t, -176
        ;    var_B4: int32_t, -180
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_E0: -224
        ;    var_F0: -240
        ;    var_100: -256
        ;    var_110: -272
        ;    var_120: int64_t, -288
        ;    var_128: int64_t, -296
        ;    var_130: int64_t, -304
        ;    var_140: -320
        ;    var_148: int32_t, -328
        ;    var_150: -336
        ;    var_158: int64_t, -344
        ;    var_160: int64_t, -352
        ;    var_1C0: int64_t, -448
        ;    var_1D0: int32_t, -464
        ;    var_1D4: int32_t, -468
        ;    var_1D8: int32_t, -472
        ;    var_1E0: int64_t, -480
        ;    var_1E8: int64_t, -488
        ;    var_1F0: int64_t, -496
        ;    var_220: int64_t, -544
        ;    var_228: int64_t, -552
        ;    var_230: int64_t, -560
        ;    var_238: int64_t, -568
        ;    var_250: int64_t, -592
        ;    var_258: int64_t, -600
        ;    var_260: int32_t, -608
        ;    var_264: int32_t, -612
        ;    var_268: int32_t, -616
        ;    var_270: int64_t, -624
        ;    var_278: int64_t, -632
        ;    var_280: int64_t, -640
        ;    var_288: int64_t, -648
        ;    var_290: int64_t, -656
        ;    var_298: int64_t, -664
        ;    var_2A0: int64_t, -672
        ;    var_2B0: -688
        ;    var_2C0: -704
        ;    var_2C8: int64_t, -712
        ;    var_2CF: int8_t, -719
        ;    var_2D0: int8_t, -720
        ;    var_2D8: int64_t, -728
        ;    var_2E0: -736
        ;    var_2EC: int32_t, -748
        ;    var_2F0: int64_t, -752
        ;    var_2F8: int64_t, -760
        ;    var_2F9: int8_t, -761
        ;    var_308: int64_t, -776
        ;    var_310: int64_t, -784
        ;    var_314: int32_t, -788
        ;    var_315: int8_t, -789
        ;    var_320: int64_t, -800
        ;    var_328: int64_t, -808
        ;    var_330: int64_t, -816
        ;    var_338: int64_t, -824
        ;    var_340: int64_t, -832
        ;    var_348: int64_t, -840
        ;    var_350: int64_t, -848
        ;    var_358: int64_t, -856
        ;    var_35C: int32_t, -860
        ;    var_360: int32_t, -864
        ;    var_368: int64_t, -872
        ;    var_370: int64_t, -880
        ;    var_378: int64_t, -888
        ;    var_380: int64_t, -896
        ;    var_388: int64_t, -904
        ;    var_38C: int32_t, -908
        ;    var_390: int32_t, -912
        ;    var_398: int64_t, -920
        ;    var_3A0: int64_t, -928
        ;    var_3A4: int32_t, -932
        ;    var_3A5: int8_t, -933
        ;    var_3B0: int64_t, -944
        ;    var_3B1: int8_t, -945
        ;    var_3B8: int64_t, -952
        ;    var_3C0: int64_t, -960
        ;    var_3E1: int8_t, -993


                     copy_internal:
0000000000005c20         push       rbp                                         ; Begin of unwind block (FDE at 0x19f54), CODE XREF=copy_internal+7901, copy+128
0000000000005c21         mov        rbp, rsp
0000000000005c24         push       r15
0000000000005c26         push       r14
0000000000005c28         push       r13
0000000000005c2a         push       r12
0000000000005c2c         mov        r14d, edx
0000000000005c2f         push       rbx
0000000000005c30         mov        rbx, r9
0000000000005c33         sub        rsp, 0x398
0000000000005c3a         mov        rax, qword [rbp+arg_8]
0000000000005c3e         mov        r13d, dword [rbp+arg_0]
0000000000005c42         mov        qword [rbp+var_348], rcx
0000000000005c49         mov        rcx, qword [rbp+arg_18]
0000000000005c4d         mov        qword [rbp+var_310], rdi
0000000000005c54         mov        qword [rbp+var_308], rsi
0000000000005c5b         mov        qword [rbp+var_338], rax
0000000000005c62         mov        rax, qword [rbp+arg_10]
0000000000005c66         mov        qword [rbp+var_320], rcx
0000000000005c6d         mov        qword [rbp+var_330], r8
0000000000005c74         mov        rcx, qword [fs:0x28]
0000000000005c7d         mov        qword [rbp+var_38], rcx
0000000000005c81         xor        ecx, ecx
0000000000005c83         mov        byte [rax], 0x0
0000000000005c86         movzx      r12d, byte [r9+0x18]
0000000000005c8b         mov        qword [rbp+var_340], rax
0000000000005c92         mov        byte [rbp+var_315], r13b
0000000000005c99         mov        r15d, dword [r9+0x34]
0000000000005c9d         test       r12b, r12b
0000000000005ca0         je         loc_5cc1

0000000000005ca2         test       r15d, r15d
0000000000005ca5         js         loc_5f40

                     loc_5cab:
0000000000005cab         mov        rax, qword [rbp+var_320]                    ; CODE XREF=copy_internal+3768
0000000000005cb2         test       r15d, r15d
0000000000005cb5         sete       r14b
0000000000005cb9         test       rax, rax
0000000000005cbc         je         loc_5cc1

0000000000005cbe         mov        byte [rax], r14b

                     loc_5cc1:
0000000000005cc1         test       r15d, r15d                                  ; CODE XREF=copy_internal+128, copy_internal+156
0000000000005cc4         je         loc_5f78

0000000000005cca         cmp        r15d, 0x11
0000000000005cce         mov        r12, qword [rbp+var_310]
0000000000005cd5         je         loc_64d8

                     loc_5cdb:
0000000000005cdb         cmp        dword [rbx+4], 0x2                          ; CODE XREF=copy_internal+872, copy_internal+2242
0000000000005cdf         lea        r10, qword [rbp+var_280]
0000000000005ce6         mov        rsi, r12
0000000000005ce9         mov        edi, 0x1
0000000000005cee         mov        rdx, r10
0000000000005cf1         je         loc_64f0

0000000000005cf7         call       j___xstat                                   ; __xstat
0000000000005cfc         test       eax, eax
0000000000005cfe         mov        rsi, r12
0000000000005d01         setne      al
0000000000005d04         test       al, al
0000000000005d06         jne        loc_6505

                     loc_5d0c:
0000000000005d0c         mov        eax, dword [rbp+var_268]                    ; CODE XREF=copy_internal+2271
0000000000005d12         mov        dword [rbp+var_314], eax
0000000000005d18         and        eax, 0xf000
0000000000005d1d         cmp        eax, 0x4000
0000000000005d22         je         loc_67e8

                     loc_5d28:
0000000000005d28         test       r13b, r13b                                  ; CODE XREF=copy_internal+883, copy_internal+2236, copy_internal+3024
0000000000005d2b         je         loc_5d6a

0000000000005d2d         mov        rdi, qword [rbx+0x48]
0000000000005d31         test       rdi, rdi
0000000000005d34         je         loc_5d6a

0000000000005d36         mov        eax, dword [rbp+var_314]
0000000000005d3c         lea        r10, qword [rbp+var_280]
0000000000005d43         and        eax, 0xf000
0000000000005d48         cmp        eax, 0x4000
0000000000005d4d         je         loc_5d5b

0000000000005d4f         mov        r11d, dword [rbx]
0000000000005d52         test       r11d, r11d
0000000000005d55         je         loc_6668

                     loc_5d5b:
0000000000005d5b         mov        rsi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+301, copy_internal+2676
0000000000005d62         mov        rdx, r10
0000000000005d65         call       record_file                                 ; record_file

                     loc_5d6a:
0000000000005d6a         mov        eax, dword [rbx+4]                          ; CODE XREF=copy_internal+267, copy_internal+276
0000000000005d6d         mov        dword [rbp+var_328], 0x1
0000000000005d77         cmp        eax, 0x4
0000000000005d7a         je         loc_5d8e

0000000000005d7c         cmp        eax, 0x3
0000000000005d7f         sete       al
0000000000005d82         movzx      eax, al
0000000000005d85         and        eax, r13d
0000000000005d88         mov        dword [rbp+var_328], eax

                     loc_5d8e:
0000000000005d8e         test       r14b, r14b                                  ; CODE XREF=copy_internal+346
0000000000005d91         jne        loc_5fa0

0000000000005d97         cmp        r15d, 0x11
0000000000005d9b         je         loc_6700

                     loc_5da1:
0000000000005da1         mov        eax, dword [rbp+var_314]                    ; CODE XREF=copy_internal+2788
0000000000005da7         and        eax, 0xf000
0000000000005dac         cmp        eax, 0x8000
0000000000005db1         je         loc_66a0

0000000000005db7         cmp        eax, 0xa000
0000000000005dbc         mov        r8d, 0x100
0000000000005dc2         sete       r9b
0000000000005dc6         cmp        eax, 0x4000
0000000000005dcb         sete       al
0000000000005dce         or         r9d, eax
0000000000005dd1         movzx      eax, byte [rbx+0x14]
0000000000005dd5         xor        eax, 0x1
0000000000005dd8         or         r9b, al
0000000000005ddb         je         loc_66a0

                     loc_5de1:
0000000000005de1         lea        r12, qword [rbp+var_1F0]                    ; CODE XREF=copy_internal+2702, copy_internal+2716, copy_internal+2730, copy_internal+2748, copy_internal+2773
0000000000005de8         mov        rdx, qword [rbp+var_308]                    ; argument "__filename" for method j___fxstatat
0000000000005def         mov        esi, 0xffffff9c                             ; argument "__fildes" for method j___fxstatat
0000000000005df4         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
0000000000005df9         mov        byte [rbp+var_350], r9b
0000000000005e00         mov        rcx, r12                                    ; argument "__stat_buf" for method j___fxstatat
0000000000005e03         call       j___fxstatat                                ; __fxstatat
0000000000005e08         test       eax, eax
0000000000005e0a         movzx      r9d, byte [rbp+var_350]
0000000000005e12         jne        loc_6490

0000000000005e18         xor        r8d, r8d

                     loc_5e1b:
0000000000005e1b         cmp        dword [rbx+8], 0x2                          ; CODE XREF=copy_internal+2201
0000000000005e1f         je         loc_5e3f

0000000000005e21         mov        rax, qword [rbp+var_1E8]
0000000000005e28         cmp        qword [rbp+var_278], rax
0000000000005e2f         je         loc_6ff8

                     loc_5e35:
0000000000005e35         cmp        dword [rbx+4], 0x2                          ; CODE XREF=copy_internal+5094
0000000000005e39         je         loc_71b0

                     loc_5e3f:
0000000000005e3f         cmp        byte [rbx+0x2d], 0x0                        ; CODE XREF=copy_internal+511, copy_internal+2800, copy_internal+5201, copy_internal+5759, copy_internal+5805, copy_internal+5818, copy_internal+6027, copy_internal+6871, copy_internal+7167, copy_internal+7187, copy_internal+7222
0000000000005e43         je         loc_6840

0000000000005e49         mov        eax, dword [rbp+var_314]
0000000000005e4f         and        eax, 0xf000
0000000000005e54         cmp        eax, 0x4000
0000000000005e59         je         loc_7280

0000000000005e5f         xor        ecx, ecx
0000000000005e61         cmp        byte [rbx+0x1f], 0x0
0000000000005e65         je         loc_5e85

0000000000005e67         cmp        byte [rbx+0x18], 0x0
0000000000005e6b         mov        ecx, 0x1
0000000000005e70         je         loc_5e85

0000000000005e72         xor        ecx, ecx
0000000000005e74         mov        rax, qword [rbp+var_280]
0000000000005e7b         cmp        qword [rbp+var_1F0], rax
0000000000005e82         setne      cl

                     loc_5e85:
0000000000005e85         lea        r10, qword [rbp+var_280]                    ; CODE XREF=copy_internal+581, copy_internal+592
0000000000005e8c         mov        rdi, qword [rbp+var_308]
0000000000005e93         lea        rsi, qword [rbp+var_1F0]
0000000000005e9a         mov        byte [rbp+var_358], r9b
0000000000005ea1         mov        byte [rbp+var_350], r8b
0000000000005ea8         mov        rdx, r10
0000000000005eab         call       utimecmp                                    ; utimecmp
0000000000005eb0         test       eax, eax
0000000000005eb2         movzx      r8d, byte [rbp+var_350]
0000000000005eba         movzx      r9d, byte [rbp+var_358]
0000000000005ec2         js         loc_6e10

0000000000005ec8         mov        rax, qword [rbp+var_320]
0000000000005ecf         test       rax, rax
0000000000005ed2         je         loc_5ed7

0000000000005ed4         mov        byte [rax], 0x1

                     loc_5ed7:
0000000000005ed7         mov        rdx, qword [rbp+var_280]                    ; CODE XREF=copy_internal+690
0000000000005ede         mov        rsi, qword [rbp+var_278]
0000000000005ee5         mov        rdi, qword [rbp+var_308]
0000000000005eec         call       remember_copied                             ; remember_copied
0000000000005ef1         test       rax, rax
0000000000005ef4         je         loc_6460

0000000000005efa         movzx      ecx, byte [rbx+0x2e]
0000000000005efe         mov        r8d, dword [rbp+var_328]
0000000000005f05         mov        edx, 0x1
0000000000005f0a         mov        rsi, qword [rbp+var_308]
0000000000005f11         mov        rdi, rax
0000000000005f14         call       create_hard_link                            ; create_hard_link
0000000000005f19         test       al, al
0000000000005f1b         jne        loc_6460

0000000000005f21         cmp        byte [rbx+0x25], 0x0
0000000000005f25         jne        loc_6d30

0000000000005f2b         nop        dword [rax+rax]

                     loc_5f30:
0000000000005f30         xor        r12d, r12d                                  ; CODE XREF=copy_internal+1314, copy_internal+1742, copy_internal+1835, copy_internal+2030, copy_internal+2844, copy_internal+4018, copy_internal+4051, copy_internal+4144, copy_internal+4562, copy_internal+4948, copy_internal+5718
0000000000005f33         jmp        loc_6466
0000000000005f38         align      64

                     loc_5f40:
0000000000005f40         mov        edx, 0xffffff9c                             ; CODE XREF=copy_internal+133
0000000000005f45         mov        rcx, rsi
0000000000005f48         mov        r8d, 0x1
0000000000005f4e         mov        rsi, rdi
0000000000005f51         mov        edi, edx
0000000000005f53         call       renameatu                                   ; renameatu
0000000000005f58         test       eax, eax
0000000000005f5a         jne        loc_6ad0

0000000000005f60         mov        rax, qword [rbp+var_320]
0000000000005f67         mov        r14d, r12d
0000000000005f6a         test       rax, rax
0000000000005f6d         je         loc_5f78

0000000000005f6f         mov        byte [rax], 0x1
0000000000005f72         nop        word [rax+rax]

                     loc_5f78:
0000000000005f78         cmp        byte [rbx+0x31], 0x0                        ; CODE XREF=copy_internal+164, copy_internal+845
0000000000005f7c         jne        loc_5f90

0000000000005f7e         mov        r12, qword [rbp+var_308]
0000000000005f85         xor        r15d, r15d
0000000000005f88         jmp        loc_5cdb
0000000000005f8d         align      16

                     loc_5f90:
0000000000005f90         xor        r15d, r15d                                  ; CODE XREF=copy_internal+860
0000000000005f93         jmp        loc_5d28
0000000000005f98         align      32

                     loc_5fa0:
0000000000005fa0         xor        r9d, r9d                                    ; CODE XREF=copy_internal+369
0000000000005fa3         mov        qword [rbp+var_350], 0x0

                     loc_5fae:
0000000000005fae         test       r13b, r13b                                  ; CODE XREF=copy_internal+2221, copy_internal+3657, copy_internal+6203, copy_internal+11176, copy_internal+11685
0000000000005fb1         je         loc_6070

0000000000005fb7         cmp        qword [rbx+0x40], 0x0
0000000000005fbc         je         loc_6070

                     loc_5fc2:
0000000000005fc2         movzx      r12d, byte [rbx+0x18]                       ; CODE XREF=copy_internal+11585
0000000000005fc7         test       r12b, r12b
0000000000005fca         jne        loc_6070

0000000000005fd0         mov        edx, dword [rbx]
0000000000005fd2         test       edx, edx
0000000000005fd4         jne        loc_6c58

0000000000005fda         test       r9b, r9b
0000000000005fdd         lea        rdx, qword [rbp+var_1F0]
0000000000005fe4         je         loc_7860

                     loc_5fea:
0000000000005fea         mov        eax, dword [rdx+0x18]                       ; CODE XREF=copy_internal+7284
0000000000005fed         and        eax, 0xf000
0000000000005ff2         cmp        eax, 0xa000
0000000000005ff7         jne        loc_6070

0000000000005ff9         mov        rdi, qword [rbx+0x40]
0000000000005ffd         mov        rsi, qword [rbp+var_308]
0000000000006004         call       seen_file                                   ; seen_file
0000000000006009         test       al, al
000000000000600b         je         loc_6070

000000000000600d         mov        rdx, qword [rbp+var_308]
0000000000006014         mov        esi, 0x4
0000000000006019         mov        edi, 0x1
000000000000601e         call       quotearg_n_style                            ; quotearg_n_style
0000000000006023         mov        rdx, qword [rbp+var_310]
000000000000602a         xor        edi, edi
000000000000602c         mov        esi, 0x4
0000000000006031         mov        r13, rax
0000000000006034         call       quotearg_n_style                            ; quotearg_n_style
0000000000006039         lea        rsi, qword [aWillNotCopySTh]                ; argument "msgid" for method j_dcgettext, "will not copy %s through just-created symlink %s"
0000000000006040         mov        rbx, rax
0000000000006043         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006045         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000604a         call       j_dcgettext                                 ; dcgettext
000000000000604f         mov        r8, r13
0000000000006052         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000006055         mov        rcx, rbx
0000000000006058         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000605a         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000605c         xor        eax, eax
000000000000605e         call       j_error                                     ; error
0000000000006063         jmp        loc_6466
0000000000006068         align      16

                     loc_6070:
0000000000006070         cmp        byte [rbx+0x2e], 0x0                        ; CODE XREF=copy_internal+913, copy_internal+924, copy_internal+938, copy_internal+983, copy_internal+1003, copy_internal+7268
0000000000006074         je         loc_6080

0000000000006076         cmp        byte [rbx+0x18], 0x0
000000000000607a         je         loc_6630

                     loc_6080:
0000000000006080         test       r15d, r15d                                  ; CODE XREF=copy_internal+1108, copy_internal+2592, copy_internal+2624
0000000000006083         je         loc_6420

                     loc_6089:
0000000000006089         cmp        byte [rbx+0x2a], 0x0                        ; CODE XREF=copy_internal+4171, copy_internal+10145, copy_internal+11591
000000000000608d         je         loc_60a5

000000000000608f         mov        eax, dword [rbp+var_314]
0000000000006095         and        eax, 0xf000
000000000000609a         cmp        eax, 0x4000
000000000000609f         je         loc_6c70

                     loc_60a5:
00000000000060a5         movzx      eax, byte [rbx+0x18]                        ; CODE XREF=copy_internal+1133
00000000000060a9         test       al, al
00000000000060ab         jne        loc_6550

00000000000060b1         cmp        byte [rbx+0x22], 0x0
00000000000060b5         jne        loc_7c90

                     loc_60bb:
00000000000060bb         movzx      eax, r14b                                   ; CODE XREF=copy_internal+2052, copy_internal+4165
00000000000060bf         mov        qword [rbp+var_358], 0x0
00000000000060ca         mov        dword [rbp+var_320], eax

                     loc_60d0:
00000000000060d0         mov        r12d, dword [rbp+var_314]                   ; CODE XREF=copy_internal+2561, copy_internal+4445, copy_internal+9078
00000000000060d7         and        r12d, 0xfff
00000000000060de         cmp        byte [rbx+0x2b], 0x0
00000000000060e2         je         loc_60ef

00000000000060e4         mov        r12d, dword [rbx+0x10]
00000000000060e8         and        r12d, 0xfff

                     loc_60ef:
00000000000060ef         cmp        byte [rbx+0x1d], 0x0                        ; CODE XREF=copy_internal+1218
00000000000060f3         jne        loc_6718

00000000000060f9         mov        r15d, dword [rbp+var_314]
0000000000006100         and        r15d, 0xf000
0000000000006107         cmp        r15d, 0x4000
000000000000610e         je         loc_6f50

0000000000006114         mov        ecx, dword [rbp+var_320]
000000000000611a         mov        edx, dword [rbp+var_314]
0000000000006120         mov        r8, rbx
0000000000006123         mov        rsi, qword [rbp+var_308]
000000000000612a         mov        rdi, qword [rbp+var_310]
0000000000006131         call       set_process_security_ctx                    ; set_process_security_ctx
0000000000006136         test       al, al
0000000000006138         mov        dword [rbp+var_35C], 0x0
0000000000006142         je         loc_5f30

                     loc_6148:
0000000000006148         movzx      eax, byte [rbx+0x2c]                        ; CODE XREF=copy_internal+2883
000000000000614c         test       al, al
000000000000614e         mov        byte [rbp+var_320], al
0000000000006154         jne        loc_6ae0

000000000000615a         cmp        byte [rbx+0x17], 0x0
000000000000615e         je         loc_74a8

0000000000006164         cmp        byte [rbx+0x16], 0x0
0000000000006168         mov        edx, 0x1
000000000000616d         jne        loc_6178

000000000000616f         xor        edx, edx
0000000000006171         cmp        dword [rbx+8], 0x3
0000000000006175         sete       dl

                     loc_6178:
0000000000006178         mov        r8d, dword [rbp+var_328]                    ; CODE XREF=copy_internal+1357
000000000000617f         mov        rsi, qword [rbp+var_308]
0000000000006186         xor        ecx, ecx
0000000000006188         mov        rdi, qword [rbp+var_310]
000000000000618f         call       create_hard_link                            ; create_hard_link
0000000000006194         test       al, al
0000000000006196         je         loc_6bb0

000000000000619c         xor        r8d, r8d

                     loc_619f:
000000000000619f         cmp        r15d, 0x4000                                ; CODE XREF=copy_internal+3886, copy_internal+8607, copy_internal+9717, copy_internal+10679, copy_internal+10716, copy_internal+13599, copy_internal+14252, copy_internal+14288, copy_internal+16386
00000000000061a6         setne      r15b
00000000000061aa         test       r14b, r14b
00000000000061ad         jne        loc_61c2

00000000000061af         movzx      eax, byte [rbx+0x14]
00000000000061b3         xor        eax, 0x1
00000000000061b6         and        al, r15b
00000000000061b9         mov        r12d, eax
00000000000061bc         jne        loc_7ef0

                     loc_61c2:
00000000000061c2         test       r13b, r13b                                  ; CODE XREF=copy_internal+1421, copy_internal+8929, copy_internal+8976, copy_internal+8999
00000000000061c5         mov        r12d, 0x1
00000000000061cb         je         loc_6222

00000000000061cd         mov        byte [rbp+var_330], 0x0

                     loc_61d4:
00000000000061d4         cmp        qword [rbx+0x40], 0x0                       ; CODE XREF=copy_internal+9526
00000000000061d9         je         loc_620d

00000000000061db         lea        r12, qword [rbp+var_D0]
00000000000061e2         mov        rsi, qword [rbp+var_308]                    ; argument "__filename" for method j___lxstat
00000000000061e9         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
00000000000061ee         mov        byte [rbp+var_328], r8b
00000000000061f5         mov        rdx, r12                                    ; argument "__stat_buf" for method j___lxstat
00000000000061f8         call       j___lxstat                                  ; __lxstat
00000000000061fd         test       eax, eax
00000000000061ff         movzx      r8d, byte [rbp+var_328]
0000000000006207         je         loc_8252

                     loc_620d:
000000000000620d         movzx      eax, byte [rbp+var_330]                     ; CODE XREF=copy_internal+1465, copy_internal+9805
0000000000006214         movzx      r12d, byte [rbp+var_315]
000000000000621c         mov        byte [rbp+var_315], al

                     loc_6222:
0000000000006222         cmp        byte [rbx+0x17], 0x0                        ; CODE XREF=copy_internal+1451
0000000000006226         je         loc_6231

0000000000006228         test       r15b, r15b
000000000000622b         jne        loc_6466

                     loc_6231:
0000000000006231         test       r8b, r8b                                    ; CODE XREF=copy_internal+1542
0000000000006234         jne        loc_6466

                     loc_623a:
000000000000623a         cmp        byte [rbx+0x1f], 0x0                        ; CODE XREF=copy_internal+8032
000000000000623e         je         loc_62f8

0000000000006244         mov        rax, qword [rbp+var_238]
000000000000624b         cmp        byte [rbp+var_320], 0x0
0000000000006252         lea        rsi, qword [rbp+var_D0]
0000000000006259         mov        rdi, qword [rbp+var_308]
0000000000006260         mov        qword [rbp+var_D0], rax
0000000000006267         mov        rax, qword [rbp+var_230]
000000000000626e         mov        qword [rbp+var_C8], rax
0000000000006275         mov        rax, qword [rbp+var_228]
000000000000627c         mov        qword [rbp+var_C0], rax
0000000000006283         mov        rax, qword [rbp+var_220]
000000000000628a         mov        qword [rbp+var_B8], rax
0000000000006291         je         loc_8240

0000000000006297         call       lutimens                                    ; lutimens
000000000000629c         test       eax, eax
000000000000629e         je         loc_62f8

00000000000062a0         call       j___errno_location                          ; __errno_location
00000000000062a5         cmp        dword [rax], 0x26
00000000000062a8         je         loc_62f8

                     loc_62aa:
00000000000062aa         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+9773
00000000000062b1         mov        edi, 0x4
00000000000062b6         call       quotearg_style                              ; quotearg_style
00000000000062bb         lea        rsi, qword [aPreservingTime]                ; argument "msgid" for method j_dcgettext, "preserving times for %s"
00000000000062c2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000062c4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000062c9         mov        r13, rax
00000000000062cc         call       j_dcgettext                                 ; dcgettext
00000000000062d1         mov        r15, rax
00000000000062d4         call       j___errno_location                          ; __errno_location
00000000000062d9         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000062db         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000062dd         xor        eax, eax
00000000000062df         mov        rcx, r13
00000000000062e2         mov        rdx, r15                                    ; argument "__format" for method j_error
00000000000062e5         call       j_error                                     ; error
00000000000062ea         cmp        byte [rbx+0x24], 0x0
00000000000062ee         jne        loc_5f30

00000000000062f4         nop        dword [rax]

                     loc_62f8:
00000000000062f8         cmp        byte [rbp+var_320], 0x0                     ; CODE XREF=copy_internal+1566, copy_internal+1662, copy_internal+1672
00000000000062ff         jne        loc_6466

                     loc_6305:
0000000000006305         cmp        byte [rbx+0x1d], 0x0                        ; CODE XREF=copy_internal+9767
0000000000006309         je         loc_6367

000000000000630b         test       r14b, r14b
000000000000630e         jne        loc_6322

0000000000006310         mov        eax, dword [rbp+var_1D4]
0000000000006316         cmp        dword [rbp+var_264], eax
000000000000631c         je         loc_89ca

                     loc_6322:
0000000000006322         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+1774, copy_internal+11702
0000000000006329         lea        rcx, qword [rbp+var_280]
0000000000006330         lea        r9, qword [rbp+var_1F0]
0000000000006337         movzx      r8d, r14b
000000000000633b         mov        edx, 0xffffffff
0000000000006340         mov        rdi, rbx
0000000000006343         call       set_owner                                   ; set_owner
0000000000006348         cmp        eax, 0xffffffff
000000000000634b         je         loc_5f30

0000000000006351         mov        ecx, dword [rbp+var_314]
0000000000006357         mov        edx, ecx
0000000000006359         and        dh, 0xf1
000000000000635c         test       eax, eax
000000000000635e         cmovne     edx, ecx
0000000000006361         mov        dword [rbp+var_314], edx

                     loc_6367:
0000000000006367         movabs     rax, 0xff0000000000ff                       ; CODE XREF=copy_internal+1769, copy_internal+11708
0000000000006371         test       qword [rbx+0x18], rax
0000000000006375         jne        loc_8410

000000000000637b         cmp        byte [rbx+0x2b], 0x0
000000000000637f         jne        loc_8775

0000000000006385         test       byte [rbx+0x20], r14b
0000000000006389         jne        loc_8a29

000000000000638f         mov        eax, dword [rbp+var_35C]
0000000000006395         test       eax, eax
0000000000006397         jne        loc_89e1

                     loc_639d:
000000000000639d         cmp        byte [rbp+var_315], 0x0                     ; CODE XREF=copy_internal+11726
00000000000063a4         je         loc_6466

                     loc_63aa:
00000000000063aa         mov        esi, dword [rbp+var_38C]                    ; CODE XREF=copy_internal+11739, copy_internal+11774
00000000000063b0         or         esi, dword [rbp+var_35C]                    ; argument "__mode" for method j_chmod
00000000000063b6         mov        rdi, qword [rbp+var_308]                    ; argument "__file" for method j_chmod
00000000000063bd         call       j_chmod                                     ; chmod
00000000000063c2         test       eax, eax
00000000000063c4         je         loc_6466

00000000000063ca         mov        rsi, qword [rbp+var_308]
00000000000063d1         mov        edi, 0x4
00000000000063d6         call       quotearg_style                              ; quotearg_style
00000000000063db         lea        rsi, qword [aPreservingPerm]                ; argument "msgid" for method j_dcgettext, "preserving permissions for %s"
00000000000063e2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000063e7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000063e9         mov        r14, rax
00000000000063ec         call       j_dcgettext                                 ; dcgettext
00000000000063f1         mov        r13, rax
00000000000063f4         call       j___errno_location                          ; __errno_location
00000000000063f9         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000063fb         mov        rcx, r14
00000000000063fe         mov        rdx, r13                                    ; argument "__format" for method j_error
0000000000006401         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000006403         xor        eax, eax
0000000000006405         call       j_error                                     ; error

                     loc_640a:
000000000000640a         cmp        byte [rbx+0x24], 0x0                        ; CODE XREF=copy_internal+10259
000000000000640e         jne        loc_5f30

0000000000006414         jmp        loc_6466
0000000000006416         align      32

                     loc_6420:
0000000000006420         cmp        byte [rbx+0x18], 0x0                        ; CODE XREF=copy_internal+1123
0000000000006424         je         loc_60bb

                     loc_642a:
000000000000642a         cmp        byte [rbx+0x2e], 0x0                        ; CODE XREF=copy_internal+2420, copy_internal+2437
000000000000642e         jne        loc_6fb0

                     loc_6434:
0000000000006434         cmp        byte [rbx+0x21], 0x0                        ; CODE XREF=copy_internal+5068
0000000000006438         jne        loc_6f90

                     loc_643e:
000000000000643e         mov        rax, qword [rbp+var_320]                    ; CODE XREF=copy_internal+4998
0000000000006445         test       rax, rax
0000000000006448         je         loc_644d

000000000000644a         mov        byte [rax], 0x1

                     loc_644d:
000000000000644d         test       r13b, r13b                                  ; CODE XREF=copy_internal+2088
0000000000006450         je         loc_6460

0000000000006452         cmp        byte [rbx+0x31], 0x0
0000000000006456         je         loc_6ec8

000000000000645c         nop        dword [rax]

                     loc_6460:
0000000000006460         mov        r12d, 0x1                                   ; CODE XREF=copy_internal+724, copy_internal+763, copy_internal+2096, copy_internal+3138, copy_internal+3203, copy_internal+3219, copy_internal+4748, copy_internal+4764, copy_internal+5492, copy_internal+9996

                     loc_6466:
0000000000006466         mov        rsi, qword [rbp+var_38]                     ; CODE XREF=copy_internal+787, copy_internal+1091, copy_internal+1547, copy_internal+1556, copy_internal+1759, copy_internal+1924, copy_internal+1956, copy_internal+2036, copy_internal+2337, copy_internal+3096, copy_internal+3748
000000000000646a         xor        rsi, qword [fs:0x28]
0000000000006473         mov        eax, r12d
0000000000006476         jne        loc_9144

000000000000647c         lea        rsp, qword [rbp+var_28]
0000000000006480         pop        rbx
0000000000006481         pop        r12
0000000000006483         pop        r13
0000000000006485         pop        r14
0000000000006487         pop        r15
0000000000006489         pop        rbp
000000000000648a         ret
                        ; endp
000000000000648b         align      16

                     loc_6490:
0000000000006490         call       j___errno_location                          ; __errno_location, CODE XREF=copy_internal+498
0000000000006495         mov        r9, rax
0000000000006498         mov        eax, dword [rax]
000000000000649a         cmp        eax, 0x28
000000000000649d         je         loc_6a70

00000000000064a3         cmp        eax, 0x2
00000000000064a6         mov        r8d, 0x1
00000000000064ac         jne        loc_6a7a

                     loc_64b2:
00000000000064b2         xor        r9d, r9d                                    ; CODE XREF=copy_internal+4579
00000000000064b5         cmp        r15d, 0x11
00000000000064b9         je         loc_5e1b

00000000000064bf         mov        r14d, r8d
00000000000064c2         mov        qword [rbp+var_350], 0x0
00000000000064cd         jmp        loc_5fae
00000000000064d2         align      8

                     loc_64d8:
00000000000064d8         cmp        dword [rbx+8], 0x2                          ; CODE XREF=copy_internal+181
00000000000064dc         je         loc_5d28

00000000000064e2         jmp        loc_5cdb
00000000000064e7         align      16

                     loc_64f0:
00000000000064f0         call       j___lxstat                                  ; __lxstat, CODE XREF=copy_internal+209
00000000000064f5         test       eax, eax
00000000000064f7         mov        rsi, r12
00000000000064fa         setne      al
00000000000064fd         test       al, al
00000000000064ff         je         loc_5d0c

                     loc_6505:
0000000000006505         mov        edi, 0x4                                    ; CODE XREF=copy_internal+230, copy_internal+14206
000000000000650a         call       quotearg_style                              ; quotearg_style
000000000000650f         lea        rsi, qword [aCannotStatS]                   ; "cannot stat %s"
0000000000006516         mov        r12, rax
0000000000006519         mov        edx, 0x5

                     loc_651e:
000000000000651e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=copy_internal+6272
0000000000006520         call       j_dcgettext                                 ; dcgettext
0000000000006525         mov        rbx, rax
0000000000006528         call       j___errno_location                          ; __errno_location
000000000000652d         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000652f         mov        rcx, r12
0000000000006532         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000006535         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000006537         xor        eax, eax
0000000000006539         xor        r12d, r12d
000000000000653c         call       j_error                                     ; error
0000000000006541         jmp        loc_6466
0000000000006546         align      16

                     loc_6550:
0000000000006550         cmp        qword [rbp+var_270], 0x1                    ; CODE XREF=copy_internal+1163
0000000000006558         je         loc_7588

000000000000655e         cmp        byte [rbx+0x22], 0x0
0000000000006562         mov        qword [rbp+var_358], 0x0
000000000000656d         je         loc_6579

000000000000656f         cmp        byte [rbx+0x17], 0x0
0000000000006573         je         loc_6d38

                     loc_6579:
0000000000006579         cmp        r15d, 0x11                                  ; CODE XREF=copy_internal+2381, copy_internal+4429
000000000000657d         jne        loc_65ab

000000000000657f         mov        rsi, qword [rbp+var_308]                    ; argument "__new" for method j_rename
0000000000006586         mov        rdi, qword [rbp+var_310]                    ; argument "__old" for method j_rename
000000000000658d         call       j_rename                                    ; rename
0000000000006592         test       eax, eax
0000000000006594         je         loc_642a

000000000000659a         call       j___errno_location                          ; __errno_location
000000000000659f         mov        r15d, dword [rax]
00000000000065a2         test       r15d, r15d
00000000000065a5         je         loc_642a

                     loc_65ab:
00000000000065ab         cmp        r15d, 0x16                                  ; CODE XREF=copy_internal+2397
00000000000065af         je         loc_75d0

00000000000065b5         cmp        r15d, 0x12
00000000000065b9         jne        loc_6d88

00000000000065bf         mov        r12d, dword [rbp+var_314]
00000000000065c6         mov        rdi, qword [rbp+var_308]
00000000000065cd         and        r12d, 0xf000
00000000000065d4         cmp        r12d, 0x4000
00000000000065db         je         loc_7640

00000000000065e1         call       j_unlink                                    ; unlink
00000000000065e6         test       eax, eax
00000000000065e8         je         loc_65fb

00000000000065ea         call       j___errno_location                          ; __errno_location
00000000000065ef         cmp        dword [rax], 0x2
00000000000065f2         mov        r14, rax
00000000000065f5         jne        loc_765e

                     loc_65fb:
00000000000065fb         cmp        r12d, 0x4000                                ; CODE XREF=copy_internal+2504
0000000000006602         setne      dl
0000000000006605         and        dl, byte [rbx+0x2e]
0000000000006608         mov        r14d, edx
000000000000660b         jne        loc_7f50

                     loc_6611:
0000000000006611         mov        dword [rbp+var_320], 0x1                    ; CODE XREF=copy_internal+6695, copy_internal+6712
000000000000661b         mov        r14d, 0x1
0000000000006621         jmp        loc_60d0
0000000000006626         align      16

                     loc_6630:
0000000000006630         mov        eax, dword [rbp+var_314]                    ; CODE XREF=copy_internal+1114, copy_internal+4156
0000000000006636         and        eax, 0xf000
000000000000663b         cmp        eax, 0x4000
0000000000006640         je         loc_6080

0000000000006646         mov        rdx, qword [rbp+var_350]
000000000000664d         mov        rsi, qword [rbp+var_308]
0000000000006654         mov        rdi, qword [rbp+var_310]
000000000000665b         call       emit_verbose                                ; emit_verbose
0000000000006660         jmp        loc_6080
0000000000006665         align      8

                     loc_6668:
0000000000006668         mov        rsi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+309
000000000000666f         mov        rdx, r10
0000000000006672         mov        qword [rbp+var_328], r10
0000000000006679         call       seen_file                                   ; seen_file
000000000000667e         test       al, al
0000000000006680         mov        r12d, eax
0000000000006683         jne        loc_7548

0000000000006689         mov        rdi, qword [rbx+0x48]
000000000000668d         mov        r10, qword [rbp+var_328]
0000000000006694         jmp        loc_5d5b
0000000000006699         align      32

                     loc_66a0:
00000000000066a0         movzx      r9d, byte [rbx+0x18]                        ; CODE XREF=copy_internal+401, copy_internal+443
00000000000066a5         mov        r8d, 0x100
00000000000066ab         test       r9b, r9b
00000000000066ae         jne        loc_5de1

00000000000066b4         movzx      r9d, byte [rbx+0x2c]
00000000000066b9         test       r9b, r9b
00000000000066bc         jne        loc_5de1

00000000000066c2         movzx      r9d, byte [rbx+0x17]
00000000000066c7         test       r9b, r9b
00000000000066ca         jne        loc_5de1

00000000000066d0         mov        r10d, dword [rbx]
00000000000066d3         mov        r9d, 0x1
00000000000066d9         test       r10d, r10d
00000000000066dc         jne        loc_5de1

00000000000066e2         movzx      r9d, byte [rbx+0x15]
00000000000066e7         xor        r8d, r8d
00000000000066ea         test       r9b, r9b
00000000000066ed         setne      r8b
00000000000066f1         shl        r8d, 0x8
00000000000066f5         jmp        loc_5de1
00000000000066fa         align      256

                     loc_6700:
0000000000006700         cmp        dword [rbx+8], 0x2                          ; CODE XREF=copy_internal+379
0000000000006704         jne        loc_5da1

000000000000670a         xor        r8d, r8d
000000000000670d         xor        r9d, r9d
0000000000006710         jmp        loc_5e3f
0000000000006715         align      8

                     loc_6718:
0000000000006718         mov        ecx, dword [rbp+var_320]                    ; CODE XREF=copy_internal+1235
000000000000671e         mov        edx, dword [rbp+var_314]
0000000000006724         mov        r8, rbx
0000000000006727         mov        rsi, qword [rbp+var_308]
000000000000672e         mov        rdi, qword [rbp+var_310]
0000000000006735         call       set_process_security_ctx                    ; set_process_security_ctx
000000000000673a         test       al, al
000000000000673c         je         loc_5f30

0000000000006742         mov        r15d, dword [rbp+var_314]
0000000000006749         mov        eax, r12d
000000000000674c         and        eax, 0x3f
000000000000674f         mov        dword [rbp+var_35C], eax
0000000000006755         and        r15d, 0xf000
000000000000675c         cmp        r15d, 0x4000
0000000000006763         jne        loc_6148

                     loc_6769:
0000000000006769         mov        rax, qword [rbp+var_330]                    ; CODE XREF=copy_internal+4966
0000000000006770         mov        rdx, qword [rbp+var_278]
0000000000006777         mov        rcx, qword [rbp+var_280]
000000000000677e         test       rax, rax
0000000000006781         jne        loc_679c

0000000000006783         jmp        loc_7080
0000000000006788         align      16

                     loc_6790:
0000000000006790         mov        rax, qword [rax]                            ; CODE XREF=copy_internal+2944, copy_internal+2950
0000000000006793         test       rax, rax
0000000000006796         je         loc_7080

                     loc_679c:
000000000000679c         cmp        qword [rax+8], rdx                          ; CODE XREF=copy_internal+2913
00000000000067a0         jne        loc_6790

00000000000067a2         cmp        qword [rax+0x10], rcx
00000000000067a6         jne        loc_6790

00000000000067a8         mov        rsi, qword [rbp+var_310]
00000000000067af         mov        edi, 0x4
00000000000067b4         call       quotearg_style                              ; quotearg_style
00000000000067b9         lea        rsi, qword [aCannotCopyCycl]                ; "cannot copy cyclic symbolic link %s"
00000000000067c0         mov        r12, rax
00000000000067c3         mov        edx, 0x5

                     loc_67c8:
00000000000067c8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=copy_internal+6402, copy_internal+8782
00000000000067ca         call       j_dcgettext                                 ; dcgettext
00000000000067cf         mov        rcx, r12
00000000000067d2         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000067d5         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000067d7         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000067d9         xor        eax, eax
00000000000067db         call       j_error                                     ; error
00000000000067e0         jmp        loc_6bb0
00000000000067e5         align      8

                     loc_67e8:
00000000000067e8         movzx      r12d, byte [rbx+0x2a]                       ; CODE XREF=copy_internal+258
00000000000067ed         test       r12b, r12b
00000000000067f0         jne        loc_5d28

00000000000067f6         mov        rsi, qword [rbp+var_310]
00000000000067fd         mov        edi, 0x4
0000000000006802         call       quotearg_style                              ; quotearg_style
0000000000006807         cmp        byte [rbx+0x19], 0x0
000000000000680b         mov        r13, rax
000000000000680e         mov        edx, 0x5
0000000000006813         jne        loc_75b0

0000000000006819         lea        rsi, qword [aRNotSpecifiedO]                ; argument "msgid" for method j_dcgettext, "-r not specified; omitting directory %s"
0000000000006820         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006822         call       j_dcgettext                                 ; dcgettext
0000000000006827         mov        rdx, rax

                     loc_682a:
000000000000682a         mov        rcx, r13                                    ; CODE XREF=copy_internal+6561
000000000000682d         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000682f         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000006831         xor        eax, eax
0000000000006833         call       j_error                                     ; error
0000000000006838         jmp        loc_6466
000000000000683d         align      64

                     loc_6840:
0000000000006840         cmp        byte [rbx+0x18], 0x0                        ; CODE XREF=copy_internal+547
0000000000006844         jne        loc_6e20

000000000000684a         mov        eax, dword [rbp+var_314]
0000000000006850         and        eax, 0xf000
0000000000006855         cmp        eax, 0x4000
000000000000685a         je         loc_68b0

                     loc_685c:
000000000000685c         mov        eax, dword [rbx+8]                          ; CODE XREF=copy_internal+4596
000000000000685f         cmp        eax, 0x2
0000000000006862         je         loc_6460

0000000000006868         cmp        eax, 0x3
000000000000686b         jne        loc_68b0

000000000000686d         mov        rsi, qword [rbp+var_308]
0000000000006874         lea        rdx, qword [rbp+var_1D8]
000000000000687b         mov        rdi, rbx
000000000000687e         mov        byte [rbp+var_358], r9b
0000000000006885         mov        byte [rbp+var_350], r8b
000000000000688c         call       overwrite_ok.isra.12                        ; overwrite_ok.isra.12
0000000000006891         test       al, al
0000000000006893         movzx      r8d, byte [rbp+var_350]
000000000000689b         movzx      r9d, byte [rbp+var_358]
00000000000068a3         je         loc_6460

00000000000068a9         nop        dword [rax]

                     loc_68b0:
00000000000068b0         test       r14b, r14b                                  ; CODE XREF=copy_internal+3130, copy_internal+3147, copy_internal+4624, copy_internal+4634, copy_internal+4690, copy_internal+5732, copy_internal+9888
00000000000068b3         jne        loc_6460

00000000000068b9         mov        eax, dword [rbp+var_1D8]
00000000000068bf         mov        r12d, dword [rbp+var_314]
00000000000068c6         mov        edx, eax
00000000000068c8         and        r12d, 0xf000
00000000000068cf         and        edx, 0xf000
00000000000068d5         cmp        edx, 0x4000
00000000000068db         je         loc_6ef0

00000000000068e1         cmp        r12d, 0x4000
00000000000068e8         je         loc_7b88

00000000000068ee         test       r13b, r13b
00000000000068f1         mov        r15d, dword [rbx]
00000000000068f4         je         loc_7413

                     loc_68fa:
00000000000068fa         cmp        r15d, 0x3                                   ; CODE XREF=copy_internal+8065
00000000000068fe         jne        loc_73b0

0000000000006904         cmp        byte [rbx+0x18], 0x0
0000000000006908         jne        loc_7ba7

                     loc_690e:
000000000000690e         mov        rdi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+6146
0000000000006915         mov        byte [rbp+var_358], r9b
000000000000691c         mov        byte [rbp+var_350], r8b
0000000000006923         call       last_component                              ; last_component
0000000000006928         cmp        byte [rax], 0x2e
000000000000692b         mov        r14, rax
000000000000692e         movzx      r8d, byte [rbp+var_350]
0000000000006936         movzx      r9d, byte [rbp+var_358]
000000000000693e         jne        loc_6967

0000000000006940         xor        eax, eax

                     loc_6942:
0000000000006942         xor        edx, edx                                    ; CODE XREF=copy_internal+8154
0000000000006944         cmp        byte [r14+1], 0x2e
0000000000006949         sete       dl
000000000000694c         movzx      edx, byte [r14+rdx+1]
0000000000006952         test       dl, dl
0000000000006954         je         loc_7428

000000000000695a         cmp        dl, 0x2f
000000000000695d         je         loc_7428

0000000000006963         test       al, al
0000000000006965         jne        loc_697d

                     loc_6967:
0000000000006967         mov        eax, dword [rbp+var_1D8]                    ; CODE XREF=copy_internal+3358
000000000000696d         and        eax, 0xf000
0000000000006972         cmp        eax, 0x4000
0000000000006977         je         loc_7447

                     loc_697d:
000000000000697d         cmp        r15d, 0x3                                   ; CODE XREF=copy_internal+3397, copy_internal+8143
0000000000006981         je         loc_69e9

0000000000006983         mov        rdi, r14                                    ; argument "__s" for method j_strlen
0000000000006986         mov        byte [rbp+var_35C], r9b
000000000000698d         call       j_strlen                                    ; strlen
0000000000006992         mov        rdi, qword [rbp+var_308]
0000000000006999         mov        qword [rbp+var_350], rax
00000000000069a0         call       last_component                              ; last_component
00000000000069a5         mov        rdi, rax                                    ; argument "__s" for method j_strlen
00000000000069a8         mov        qword [rbp+var_358], rax
00000000000069af         call       j_strlen                                    ; strlen
00000000000069b4         mov        r15, qword [simple_backup_suffix]           ; simple_backup_suffix
00000000000069bb         mov        r12, rax
00000000000069be         mov        rdi, r15                                    ; argument "__s" for method j_strlen
00000000000069c1         call       j_strlen                                    ; strlen
00000000000069c6         mov        r8, rax
00000000000069c9         lea        rax, qword [r12+rax]
00000000000069cd         cmp        qword [rbp+var_350], rax
00000000000069d4         mov        rsi, qword [rbp+var_358]
00000000000069db         movzx      r9d, byte [rbp+var_35C]
00000000000069e3         je         loc_843e

                     loc_69e9:
00000000000069e9         mov        edx, dword [rbx]                            ; CODE XREF=copy_internal+3425, copy_internal+10305, copy_internal+10340, copy_internal+10460, copy_internal+10480, copy_internal+10500
00000000000069eb         mov        rsi, qword [rbp+var_308]
00000000000069f2         mov        edi, 0xffffff9c
00000000000069f7         mov        byte [rbp+var_350], r9b
00000000000069fe         call       backup_file_rename                          ; backup_file_rename
0000000000006a03         test       rax, rax
0000000000006a06         mov        r12, rax
0000000000006a09         movzx      r9d, byte [rbp+var_350]
0000000000006a11         je         loc_8331

0000000000006a17         mov        rdi, rax                                    ; argument "__s" for method j_strlen
0000000000006a1a         mov        byte [rbp+var_358], r9b
0000000000006a21         mov        r14d, 0x1
0000000000006a27         call       j_strlen                                    ; strlen
0000000000006a2c         lea        rdx, qword [rax+1]                          ; argument "__n" for method j_memcpy
0000000000006a30         add        rax, 0x1f
0000000000006a34         mov        rsi, r12                                    ; argument "__src" for method j_memcpy
0000000000006a37         and        rax, 0xfffffffffffffff0
0000000000006a3b         mov        r15d, 0x11
0000000000006a41         sub        rsp, rax
0000000000006a44         lea        rdi, qword [rsp+0x3c0+var_3B1]
0000000000006a49         and        rdi, 0xfffffffffffffff0                     ; argument "__dest" for method j_memcpy
0000000000006a4d         call       j_memcpy                                    ; memcpy
0000000000006a52         mov        rdi, r12
0000000000006a55         mov        qword [rbp+var_350], rax
0000000000006a5c         call       sub_30d0                                    ; sub_30d0
0000000000006a61         movzx      r9d, byte [rbp+var_358]
0000000000006a69         jmp        loc_5fae
0000000000006a6e         align      16

                     loc_6a70:
0000000000006a70         cmp        byte [rbx+0x16], 0x0                        ; CODE XREF=copy_internal+2173
0000000000006a74         jne        loc_6e00

                     loc_6a7a:
0000000000006a7a         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+2188
0000000000006a81         mov        edi, 0x4
0000000000006a86         mov        qword [rbp+var_310], r9
0000000000006a8d         xor        r12d, r12d
0000000000006a90         call       quotearg_style                              ; quotearg_style
0000000000006a95         lea        rsi, qword [aCannotStatS]                   ; argument "msgid" for method j_dcgettext, "cannot stat %s"
0000000000006a9c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006aa1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006aa3         mov        rbx, rax
0000000000006aa6         call       j_dcgettext                                 ; dcgettext
0000000000006aab         mov        r9, qword [rbp+var_310]
0000000000006ab2         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000006ab5         mov        rcx, rbx
0000000000006ab8         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000006aba         xor        eax, eax
0000000000006abc         mov        esi, dword [r9]                             ; argument "__errnum" for method j_error
0000000000006abf         call       j_error                                     ; error
0000000000006ac4         jmp        loc_6466
0000000000006ac9         align      16

                     loc_6ad0:
0000000000006ad0         call       j___errno_location                          ; __errno_location, CODE XREF=copy_internal+826
0000000000006ad5         mov        r15d, dword [rax]
0000000000006ad8         jmp        loc_5cab
0000000000006add         align      32

                     loc_6ae0:
0000000000006ae0         mov        rax, qword [rbp+var_310]                    ; CODE XREF=copy_internal+1332
0000000000006ae7         cmp        byte [rax], 0x2f
0000000000006aea         je         loc_6b24

0000000000006aec         mov        rdi, qword [rbp+var_308]
0000000000006af3         call       dir_name                                    ; dir_name
0000000000006af8         lea        r8, qword [aCannotAccessS+17]               ; 0x17e63
0000000000006aff         mov        rdi, rax
0000000000006b02         mov        ecx, 0x2
0000000000006b07         mov        r12, rax
0000000000006b0a         mov        rsi, r8
0000000000006b0d         rep  cmpsb byte [rsi], byte [rdi]
0000000000006b0f         seta       al
0000000000006b12         sbb        al, 0x0
0000000000006b14         test       al, al
0000000000006b16         jne        loc_7df8

                     loc_6b1c:
0000000000006b1c         mov        rdi, r12                                    ; CODE XREF=copy_internal+8686, copy_internal+8714, copy_internal+13115
0000000000006b1f         call       sub_30d0                                    ; sub_30d0

                     loc_6b24:
0000000000006b24         movzx      ecx, byte [rbx+0x16]                        ; CODE XREF=copy_internal+3786
0000000000006b28         mov        rdx, qword [rbp+var_308]
0000000000006b2f         mov        r8d, 0xffffffff
0000000000006b35         mov        rdi, qword [rbp+var_310]
0000000000006b3c         mov        esi, 0xffffff9c
0000000000006b41         call       force_symlinkat                             ; force_symlinkat
0000000000006b46         xor        r8d, r8d
0000000000006b49         test       eax, eax
0000000000006b4b         mov        r12d, eax
0000000000006b4e         jle        loc_619f

0000000000006b54         mov        rdx, qword [rbp+var_310]
0000000000006b5b         mov        esi, 0x4
0000000000006b60         mov        edi, 0x1
0000000000006b65         call       quotearg_n_style                            ; quotearg_n_style
0000000000006b6a         mov        rdx, qword [rbp+var_308]
0000000000006b71         mov        esi, 0x4
0000000000006b76         xor        edi, edi
0000000000006b78         mov        r13, rax
0000000000006b7b         call       quotearg_n_style                            ; quotearg_n_style
0000000000006b80         lea        rsi, qword [aCannotCreateSy_17ae0]          ; argument "msgid" for method j_dcgettext, "cannot create symbolic link %s to %s"
0000000000006b87         mov        r14, rax
0000000000006b8a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006b8f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006b91         call       j_dcgettext                                 ; dcgettext
0000000000006b96         mov        r8, r13
0000000000006b99         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000006b9c         mov        rcx, r14
0000000000006b9f         mov        esi, r12d                                   ; argument "__errnum" for method j_error
0000000000006ba2         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000006ba4         xor        eax, eax
0000000000006ba6         call       j_error                                     ; error
0000000000006bab         nop        dword [rax+rax]

                     loc_6bb0:
0000000000006bb0         cmp        byte [rbx+0x25], 0x0                        ; CODE XREF=copy_internal+1398, copy_internal+3008, copy_internal+5375, copy_internal+8613, copy_internal+8990, copy_internal+10977, copy_internal+11283, copy_internal+11518, copy_internal+16380
0000000000006bb4         jne        loc_6d30

0000000000006bba         cmp        qword [rbp+var_358], 0x0
0000000000006bc2         je         loc_7460

                     loc_6bc8:
0000000000006bc8         mov        rax, qword [rbp+var_350]                    ; CODE XREF=copy_internal+4362, copy_internal+6227
0000000000006bcf         test       rax, rax
0000000000006bd2         je         loc_5f30

0000000000006bd8         mov        rsi, qword [rbp+var_308]                    ; argument "__new" for method j_rename
0000000000006bdf         mov        rdi, rax                                    ; argument "__old" for method j_rename
0000000000006be2         call       j_rename                                    ; rename
0000000000006be7         test       eax, eax
0000000000006be9         jne        loc_7480

0000000000006bef         cmp        byte [rbx+0x2e], 0x0
0000000000006bf3         je         loc_5f30

0000000000006bf9         mov        rdx, qword [rbp+var_308]
0000000000006c00         mov        esi, 0x4
0000000000006c05         mov        edi, 0x1
0000000000006c0a         call       quotearg_n_style                            ; quotearg_n_style
0000000000006c0f         mov        rdx, qword [rbp+var_350]
0000000000006c16         xor        edi, edi
0000000000006c18         mov        esi, 0x4
0000000000006c1d         mov        r12, rax
0000000000006c20         call       quotearg_n_style                            ; quotearg_n_style
0000000000006c25         lea        rsi, qword [aSSUnbackupn]                   ; argument "msgid" for method j_dcgettext, "%s -> %s (unbackup)\\n"
0000000000006c2c         mov        rbx, rax
0000000000006c2f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006c31         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006c36         call       j_dcgettext                                 ; dcgettext
0000000000006c3b         mov        rcx, r12
0000000000006c3e         mov        rsi, rax
0000000000006c41         mov        rdx, rbx
0000000000006c44         mov        edi, 0x1
0000000000006c49         xor        eax, eax
0000000000006c4b         call       j___printf_chk                              ; __printf_chk
0000000000006c50         jmp        loc_5f30
0000000000006c55         align      8

                     loc_6c58:
0000000000006c58         cmp        byte [rbx+0x2e], 0x0                        ; CODE XREF=copy_internal+948
0000000000006c5c         jne        loc_6630

0000000000006c62         test       r15d, r15d
0000000000006c65         je         loc_60bb

0000000000006c6b         jmp        loc_6089

                     loc_6c70:
0000000000006c70         test       r13b, r13b                                  ; CODE XREF=copy_internal+1151
0000000000006c73         mov        rdx, qword [rbp+var_280]
0000000000006c7a         mov        rdi, qword [rbp+var_278]
0000000000006c81         je         loc_7530

0000000000006c87         mov        rsi, rdi
0000000000006c8a         mov        rdi, qword [rbp+var_308]
0000000000006c91         call       remember_copied                             ; remember_copied
0000000000006c96         mov        qword [rbp+var_358], rax

                     loc_6c9d:
0000000000006c9d         cmp        qword [rbp+var_358], 0x0                    ; CODE XREF=copy_internal+6431
0000000000006ca5         je         loc_71a0

                     loc_6cab:
0000000000006cab         mov        rsi, qword [rbp+var_358]                    ; CODE XREF=copy_internal+5443
0000000000006cb2         mov        rdi, qword [rbp+var_310]
0000000000006cb9         call       same_name                                   ; same_name
0000000000006cbe         test       al, al
0000000000006cc0         je         loc_7c00

0000000000006cc6         mov        rdx, qword [top_level_dst_name]             ; top_level_dst_name
0000000000006ccd         mov        esi, 0x4
0000000000006cd2         mov        edi, 0x1
0000000000006cd7         call       quotearg_n_style                            ; quotearg_n_style
0000000000006cdc         mov        rdx, qword [top_level_src_name]             ; top_level_src_name
0000000000006ce3         mov        esi, 0x4
0000000000006ce8         xor        edi, edi
0000000000006cea         mov        r13, rax
0000000000006ced         call       quotearg_n_style                            ; quotearg_n_style
0000000000006cf2         lea        rsi, qword [aCannotCopyADir]                ; argument "msgid" for method j_dcgettext, "cannot copy a directory, %s, into itself, %s"
0000000000006cf9         mov        r12, rax
0000000000006cfc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006d01         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006d03         call       j_dcgettext                                 ; dcgettext
0000000000006d08         mov        r8, r13
0000000000006d0b         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000006d0e         mov        rcx, r12
0000000000006d11         xor        eax, eax
0000000000006d13         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000006d15         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000006d17         call       j_error                                     ; error
0000000000006d1c         mov        rax, qword [rbp+var_340]
0000000000006d23         mov        byte [rax], 0x1

                     loc_6d26:
0000000000006d26         cmp        byte [rbx+0x25], 0x0                        ; CODE XREF=copy_internal+5486, copy_internal+8299
0000000000006d2a         je         loc_6bc8

                     loc_6d30:
0000000000006d30         call       restore_default_fscreatecon_or_die          ; restore_default_fscreatecon_or_die, CODE XREF=copy_internal+773, copy_internal+3988, copy_internal+13560
0000000000006d35         nop        dword [rax]

                     loc_6d38:
0000000000006d38         cmp        qword [rbp+var_270], 0x1                    ; CODE XREF=copy_internal+2387, copy_internal+8308
0000000000006d40         ja         loc_7128

0000000000006d46         test       r13b, r13b
0000000000006d49         mov        edx, dword [rbx+4]
0000000000006d4c         je         loc_6d57

0000000000006d4e         cmp        edx, 0x3
0000000000006d51         je         loc_7128

                     loc_6d57:
0000000000006d57         cmp        edx, 0x4                                    ; CODE XREF=copy_internal+4396
0000000000006d5a         mov        qword [rbp+var_358], 0x0
0000000000006d65         je         loc_7128

                     loc_6d6b:
0000000000006d6b         test       al, al                                      ; CODE XREF=copy_internal+5508
0000000000006d6d         jne        loc_6579

                     loc_6d73:
0000000000006d73         movzx      eax, r14b                                   ; CODE XREF=copy_internal+8325
0000000000006d77         mov        dword [rbp+var_320], eax
0000000000006d7d         jmp        loc_60d0
0000000000006d82         align      8

                     loc_6d88:
0000000000006d88         mov        rdx, qword [rbp+var_308]                    ; CODE XREF=copy_internal+2457
0000000000006d8f         mov        esi, 0x4
0000000000006d94         mov        edi, 0x1
0000000000006d99         call       quotearg_n_style                            ; quotearg_n_style
0000000000006d9e         mov        rdx, qword [rbp+var_310]
0000000000006da5         mov        esi, 0x4
0000000000006daa         xor        edi, edi
0000000000006dac         mov        r12, rax
0000000000006daf         call       quotearg_n_style                            ; quotearg_n_style
0000000000006db4         lea        rsi, qword [aCannotMoveSToS]                ; argument "msgid" for method j_dcgettext, "cannot move %s to %s"
0000000000006dbb         mov        rbx, rax
0000000000006dbe         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006dc3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006dc5         call       j_dcgettext                                 ; dcgettext
0000000000006dca         mov        r8, r12
0000000000006dcd         mov        rcx, rbx
0000000000006dd0         mov        rdx, rax
0000000000006dd3         mov        esi, r15d

                     loc_6dd6:
0000000000006dd6         xor        edi, edi                                    ; argument "__status" for method j_error, CODE XREF=copy_internal+6796
0000000000006dd8         xor        eax, eax
0000000000006dda         call       j_error                                     ; error
0000000000006ddf         mov        rsi, qword [rbp+var_280]
0000000000006de6         mov        rdi, qword [rbp+var_278]
0000000000006ded         call       forget_created                              ; forget_created
0000000000006df2         jmp        loc_5f30
0000000000006df7         align      512

                     loc_6e00:
0000000000006e00         xor        r8d, r8d                                    ; CODE XREF=copy_internal+3668
0000000000006e03         jmp        loc_64b2
0000000000006e08         align      16

                     loc_6e10:
0000000000006e10         cmp        byte [rbx+0x18], 0x0                        ; CODE XREF=copy_internal+674
0000000000006e14         je         loc_685c

0000000000006e1a         nop        word [rax+rax]

                     loc_6e20:
0000000000006e20         mov        eax, dword [rbx+8]                          ; CODE XREF=copy_internal+3108, copy_internal+5738
0000000000006e23         cmp        eax, 0x2
0000000000006e26         je         loc_6ea4

0000000000006e28         cmp        eax, 0x3
0000000000006e2b         je         loc_6e78

0000000000006e2d         cmp        eax, 0x4
0000000000006e30         jne        loc_68b0

0000000000006e36         cmp        byte [rbx+0x2f], 0x0
0000000000006e3a         je         loc_68b0

0000000000006e40         mov        esi, dword [rbp+var_1D8]
0000000000006e46         mov        rdi, qword [rbp+var_308]
0000000000006e4d         mov        byte [rbp+var_358], r9b
0000000000006e54         mov        byte [rbp+var_350], r8b
0000000000006e5b         call       writable_destination                        ; writable_destination
0000000000006e60         test       al, al
0000000000006e62         movzx      r8d, byte [rbp+var_350]
0000000000006e6a         movzx      r9d, byte [rbp+var_358]
0000000000006e72         jne        loc_68b0

                     loc_6e78:
0000000000006e78         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+4619
0000000000006e7f         lea        rdx, qword [rbp+var_1D8]
0000000000006e86         mov        rdi, rbx
0000000000006e89         mov        byte [rbp+var_358], r9b
0000000000006e90         mov        byte [rbp+var_350], r8b
0000000000006e97         call       overwrite_ok.isra.12                        ; overwrite_ok.isra.12
0000000000006e9c         test       al, al
0000000000006e9e         jne        loc_82b0

                     loc_6ea4:
0000000000006ea4         cmp        qword [rbp+var_320], 0x0                    ; CODE XREF=copy_internal+4614, copy_internal+9990
0000000000006eac         je         loc_6460

0000000000006eb2         mov        rax, qword [rbp+var_320]
0000000000006eb9         mov        byte [rax], 0x1
0000000000006ebc         jmp        loc_6460
0000000000006ec1         align      8

                     loc_6ec8:
0000000000006ec8         mov        rdi, qword [rbx+0x40]                       ; CODE XREF=copy_internal+2102
0000000000006ecc         mov        rsi, qword [rbp+var_308]
0000000000006ed3         lea        rdx, qword [rbp+var_280]
0000000000006eda         mov        r12d, r13d
0000000000006edd         call       record_file                                 ; record_file
0000000000006ee2         jmp        loc_6466
0000000000006ee7         align      16

                     loc_6ef0:
0000000000006ef0         cmp        r12d, 0x4000                                ; CODE XREF=copy_internal+3259
0000000000006ef7         je         loc_7410

                     loc_6efd:
0000000000006efd         cmp        byte [rbx+0x18], 0x0                        ; CODE XREF=copy_internal+6122
0000000000006f01         je         loc_6f0f

0000000000006f03         mov        r15d, dword [rbx]
0000000000006f06         test       r15d, r15d
0000000000006f09         jne        loc_7ba7

                     loc_6f0f:
0000000000006f0f         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+4833
0000000000006f16         mov        edi, 0x4
0000000000006f1b         xor        r12d, r12d
0000000000006f1e         call       quotearg_style                              ; quotearg_style
0000000000006f23         lea        rsi, qword [aCannotOverwrit]                ; argument "msgid" for method j_dcgettext, "cannot overwrite directory %s with non-directory"
0000000000006f2a         mov        rbx, rax
0000000000006f2d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006f32         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006f34         call       j_dcgettext                                 ; dcgettext
0000000000006f39         mov        rcx, rbx
0000000000006f3c         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000006f3f         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000006f41         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000006f43         xor        eax, eax
0000000000006f45         call       j_error                                     ; error
0000000000006f4a         jmp        loc_6466
0000000000006f4f         align      16

                     loc_6f50:
0000000000006f50         mov        ecx, dword [rbp+var_320]                    ; CODE XREF=copy_internal+1262
0000000000006f56         mov        edx, dword [rbp+var_314]
0000000000006f5c         mov        r8, rbx
0000000000006f5f         mov        rsi, qword [rbp+var_308]
0000000000006f66         mov        rdi, qword [rbp+var_310]
0000000000006f6d         call       set_process_security_ctx                    ; set_process_security_ctx
0000000000006f72         test       al, al
0000000000006f74         je         loc_5f30

0000000000006f7a         mov        eax, r12d
0000000000006f7d         and        eax, 0x12
0000000000006f80         mov        dword [rbp+var_35C], eax
0000000000006f86         jmp        loc_6769
0000000000006f8b         align      16

                     loc_6f90:
0000000000006f90         mov        rdi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+2072
0000000000006f97         mov        rcx, rbx
0000000000006f9a         mov        edx, 0x1
0000000000006f9f         xor        esi, esi
0000000000006fa1         call       set_file_security_ctx                       ; set_file_security_ctx
0000000000006fa6         jmp        loc_643e
0000000000006fab         align      16

                     loc_6fb0:
0000000000006fb0         lea        rsi, qword [aRenamed]                       ; argument "msgid" for method j_dcgettext, "renamed ", CODE XREF=copy_internal+2062
0000000000006fb7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006fbc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006fbe         call       j_dcgettext                                 ; dcgettext
0000000000006fc3         mov        edi, 0x1
0000000000006fc8         mov        rsi, rax
0000000000006fcb         xor        eax, eax
0000000000006fcd         call       j___printf_chk                              ; __printf_chk
0000000000006fd2         mov        rdx, qword [rbp+var_350]
0000000000006fd9         mov        rsi, qword [rbp+var_308]
0000000000006fe0         mov        rdi, qword [rbp+var_310]
0000000000006fe7         call       emit_verbose                                ; emit_verbose
0000000000006fec         jmp        loc_6434
0000000000006ff1         align      8

                     loc_6ff8:
0000000000006ff8         mov        rax, qword [rbp+var_1F0]                    ; CODE XREF=copy_internal+527
0000000000006fff         cmp        qword [rbp+var_280], rax
0000000000007006         jne        loc_5e35

000000000000700c         movzx      eax, byte [rbx+0x17]
0000000000007010         test       al, al
0000000000007012         jne        loc_73a8

0000000000007018         cmp        dword [rbx+4], 0x2
000000000000701c         mov        ecx, 0x1
0000000000007021         mov        r15d, 0x1
0000000000007027         je         loc_71b5

000000000000702d         lea        r12, qword [rbp+var_160]
0000000000007034         mov        rsi, qword [rbp+var_308]                    ; argument "__filename" for method j___lxstat
000000000000703b         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
0000000000007040         mov        byte [rbp+var_358], r9b
0000000000007047         mov        byte [rbp+var_350], r8b
000000000000704e         mov        rdx, r12                                    ; argument "__stat_buf" for method j___lxstat
0000000000007051         call       j___lxstat                                  ; __lxstat
0000000000007056         test       eax, eax
0000000000007058         movzx      r8d, byte [rbp+var_350]
0000000000007060         movzx      r9d, byte [rbp+var_358]
0000000000007068         je         loc_8072

                     loc_706e:
000000000000706e         xor        r14d, r14d                                  ; CODE XREF=copy_internal+5576, copy_internal+5586, copy_internal+5605, copy_internal+5626, copy_internal+8877, copy_internal+8886, copy_internal+9350, copy_internal+9452
0000000000007071         jmp        loc_5e3f
0000000000007076         align      128

                     loc_7080:
0000000000007080         sub        rsp, 0x30                                   ; CODE XREF=copy_internal+2915, copy_internal+2934
0000000000007084         mov        rsi, qword [rbp+var_330]
000000000000708b         lea        rax, qword [rsp+0x3f0+var_3E1]
0000000000007090         and        rax, 0xfffffffffffffff0
0000000000007094         test       r14b, r14b
0000000000007097         mov        qword [rbp+var_328], rax
000000000000709e         mov        qword [rax], rsi
00000000000070a1         mov        qword [rax+8], rdx
00000000000070a5         mov        qword [rax+0x10], rcx
00000000000070a9         jne        loc_70c1

00000000000070ab         mov        eax, dword [rbp+var_1D8]
00000000000070b1         and        eax, 0xf000
00000000000070b6         cmp        eax, 0x4000
00000000000070bb         je         loc_8118

                     loc_70c1:
00000000000070c1         mov        esi, dword [rbp+var_35C]                    ; CODE XREF=copy_internal+5257
00000000000070c7         mov        r15, qword [rbp+var_308]
00000000000070ce         not        esi
00000000000070d0         mov        rdi, r15                                    ; argument "__path" for method j_mkdir
00000000000070d3         and        esi, r12d                                   ; argument "__mode" for method j_mkdir
00000000000070d6         call       j_mkdir                                     ; mkdir
00000000000070db         test       eax, eax
00000000000070dd         je         loc_78a0

00000000000070e3         mov        rsi, r15
00000000000070e6         mov        edi, 0x4
00000000000070eb         call       quotearg_style                              ; quotearg_style
00000000000070f0         lea        rsi, qword [aCannotCreateDi]                ; "cannot create directory %s"
00000000000070f7         mov        r13, rax
00000000000070fa         mov        edx, 0x5

                     loc_70ff:
00000000000070ff         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=copy_internal+9755, copy_internal+9925, copy_internal+10219, copy_internal+10754, copy_internal+11555, copy_internal+13539
0000000000007101         call       j_dcgettext                                 ; dcgettext
0000000000007106         mov        r12, rax
0000000000007109         call       j___errno_location                          ; __errno_location
000000000000710e         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000007110         mov        rcx, r13
0000000000007113         mov        rdx, r12                                    ; argument "__format" for method j_error
0000000000007116         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000007118         xor        eax, eax
000000000000711a         call       j_error                                     ; error
000000000000711f         jmp        loc_6bb0
0000000000007124         align      8

                     loc_7128:
0000000000007128         mov        rdx, qword [rbp+var_280]                    ; CODE XREF=copy_internal+4384, copy_internal+4401, copy_internal+4421
000000000000712f         mov        rsi, qword [rbp+var_278]
0000000000007136         mov        rdi, qword [rbp+var_308]
000000000000713d         call       remember_copied                             ; remember_copied
0000000000007142         mov        qword [rbp+var_358], rax

                     loc_7149:
0000000000007149         cmp        qword [rbp+var_358], 0x0                    ; CODE XREF=copy_internal+6530
0000000000007151         je         loc_71a0

0000000000007153         mov        eax, dword [rbp+var_314]
0000000000007159         and        eax, 0xf000
000000000000715e         cmp        eax, 0x4000
0000000000007163         je         loc_6cab

0000000000007169         movzx      ecx, byte [rbx+0x2e]
000000000000716d         mov        r8d, dword [rbp+var_328]
0000000000007174         mov        edx, 0x1
0000000000007179         mov        rsi, qword [rbp+var_308]
0000000000007180         mov        rdi, qword [rbp+var_358]
0000000000007187         call       create_hard_link                            ; create_hard_link
000000000000718c         test       al, al
000000000000718e         je         loc_6d26

0000000000007194         jmp        loc_6460
0000000000007199         align      32

                     loc_71a0:
00000000000071a0         movzx      eax, byte [rbx+0x18]                        ; CODE XREF=copy_internal+4229, copy_internal+5425, copy_internal+8193, copy_internal+8207
00000000000071a4         jmp        loc_6d6b
00000000000071a9         align      16

                     loc_71b0:
00000000000071b0         xor        ecx, ecx                                    ; CODE XREF=copy_internal+537
00000000000071b2         xor        r15d, r15d

                     loc_71b5:
00000000000071b5         mov        eax, dword [rbp+var_268]                    ; CODE XREF=copy_internal+5127
00000000000071bb         lea        rdx, qword [rbp+var_280]
00000000000071c2         and        eax, 0xf000
00000000000071c7         cmp        eax, 0xa000
00000000000071cc         je         loc_7e73

                     loc_71d2:
00000000000071d2         mov        esi, dword [rbx]                            ; CODE XREF=copy_internal+8810, copy_internal+9414, copy_internal+9436, copy_internal+9446
00000000000071d4         test       esi, esi
00000000000071d6         je         loc_76b8

00000000000071dc         test       cl, cl
00000000000071de         jne        loc_8272

00000000000071e4         cmp        byte [rbx+0x18], 0x0
00000000000071e8         jne        loc_706e

00000000000071ee         cmp        dword [rbx+4], 0x2
00000000000071f2         je         loc_706e

00000000000071f8         mov        eax, dword [rdx+0x18]
00000000000071fb         and        eax, 0xf000
0000000000007200         cmp        eax, 0xa000
0000000000007205         jne        loc_706e

000000000000720b         mov        eax, dword [r12+0x18]
0000000000007210         and        eax, 0xf000
0000000000007215         cmp        eax, 0xa000
000000000000721a         je         loc_706e

                     loc_7220:
0000000000007220         mov        rdx, qword [rbp+var_308]                    ; CODE XREF=copy_internal+6015, copy_internal+6881, copy_internal+7197, copy_internal+8851
0000000000007227         mov        esi, 0x4
000000000000722c         mov        edi, 0x1
0000000000007231         call       quotearg_n_style                            ; quotearg_n_style
0000000000007236         mov        rdx, qword [rbp+var_310]
000000000000723d         mov        esi, 0x4
0000000000007242         xor        edi, edi
0000000000007244         mov        r12, rax
0000000000007247         call       quotearg_n_style                            ; quotearg_n_style
000000000000724c         lea        rsi, qword [aSAndSAreTheSam]                ; "%s and %s are the same file"
0000000000007253         mov        rbx, rax
0000000000007256         mov        edx, 0x5

                     loc_725b:
000000000000725b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=copy_internal+9142, copy_internal+9639, copy_internal+11088
000000000000725d         call       j_dcgettext                                 ; dcgettext
0000000000007262         mov        r8, r12
0000000000007265         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000007268         mov        rcx, rbx
000000000000726b         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000726d         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000726f         xor        eax, eax
0000000000007271         call       j_error                                     ; error
0000000000007276         jmp        loc_5f30
000000000000727b         align      128

                     loc_7280:
0000000000007280         cmp        byte [rbx+0x18], 0x0                        ; CODE XREF=copy_internal+569
0000000000007284         je         loc_68b0

000000000000728a         jmp        loc_6e20
000000000000728f         align      16

                     loc_7290:
0000000000007290         mov        eax, dword [r12+0x18]                       ; CODE XREF=copy_internal+6815, copy_internal+6825
0000000000007295         and        eax, 0xf000
000000000000729a         cmp        eax, 0xa000
000000000000729f         je         loc_5e3f

00000000000072a5         test       cl, cl
00000000000072a7         je         loc_72b5

00000000000072a9         cmp        qword [r12+0x10], 0x1
00000000000072af         ja         loc_866b

                     loc_72b5:
00000000000072b5         mov        eax, dword [rdx+0x18]                       ; CODE XREF=copy_internal+5767
00000000000072b8         and        eax, 0xf000
00000000000072bd         cmp        eax, 0xa000
00000000000072c2         je         loc_72f0

                     loc_72c4:
00000000000072c4         mov        rax, qword [r12+8]                          ; CODE XREF=copy_internal+10938
00000000000072c9         cmp        qword [rdx+8], rax
00000000000072cd         jne        loc_5e3f

00000000000072d3         mov        rax, qword [r12]
00000000000072d7         cmp        qword [rdx], rax
00000000000072da         jne        loc_5e3f

00000000000072e0         movzx      eax, byte [rbx+0x17]
00000000000072e4         test       al, al
00000000000072e6         jne        loc_73a8

                     loc_72ec:
00000000000072ec         movzx      esi, byte [rbx+0x18]                        ; CODE XREF=copy_internal+10911, copy_internal+10932

                     loc_72f0:
00000000000072f0         test       sil, sil                                    ; CODE XREF=copy_internal+5794
00000000000072f3         je         loc_76e2

00000000000072f9         mov        eax, dword [rbp+var_268]
00000000000072ff         and        eax, 0xf000
0000000000007304         cmp        eax, 0xa000
0000000000007309         jne        loc_76e2

000000000000730f         cmp        qword [r12+0x10], 0x1
0000000000007315         jbe        loc_76e2

000000000000731b         mov        rdi, qword [rbp+var_310]                    ; argument "__name" for method j_canonicalize_file_name
0000000000007322         mov        byte [rbp+var_35C], r9b
0000000000007329         mov        byte [rbp+var_358], r8b
0000000000007330         mov        qword [rbp+var_350], rdx
0000000000007337         call       j_canonicalize_file_name                    ; canonicalize_file_name
000000000000733c         test       rax, rax
000000000000733f         mov        r15, rax
0000000000007342         mov        rdx, qword [rbp+var_350]
0000000000007349         movzx      r8d, byte [rbp+var_358]
0000000000007351         movzx      r9d, byte [rbp+var_35C]
0000000000007359         je         loc_76e2

000000000000735f         mov        rsi, qword [rbp+var_308]
0000000000007366         mov        rdi, rax
0000000000007369         mov        byte [rbp+var_358], r9b
0000000000007370         mov        byte [rbp+var_350], r8b
0000000000007377         call       same_name                                   ; same_name
000000000000737c         mov        rdi, r15
000000000000737f         xor        eax, 0x1
0000000000007382         mov        r12d, eax
0000000000007385         call       sub_30d0                                    ; sub_30d0
000000000000738a         movzx      r8d, byte [rbp+var_350]
0000000000007392         movzx      r9d, byte [rbp+var_358]
000000000000739a         xor        eax, eax

                     loc_739c:
000000000000739c         test       r12b, r12b                                  ; CODE XREF=copy_internal+8906, copy_internal+9867, copy_internal+13072
000000000000739f         je         loc_7220

00000000000073a5         nop        dword [rax]

                     loc_73a8:
00000000000073a8         mov        r14d, eax                                   ; CODE XREF=copy_internal+5106, copy_internal+5830
00000000000073ab         jmp        loc_5e3f

                     loc_73b0:
00000000000073b0         mov        rdi, qword [rbx+0x40]                       ; CODE XREF=copy_internal+3294
00000000000073b4         mov        rsi, qword [rbp+var_308]
00000000000073bb         lea        rdx, qword [rbp+var_1F0]
00000000000073c2         mov        byte [rbp+var_358], r9b
00000000000073c9         mov        byte [rbp+var_350], r8b
00000000000073d0         call       seen_file                                   ; seen_file
00000000000073d5         test       al, al
00000000000073d7         movzx      r8d, byte [rbp+var_350]
00000000000073df         movzx      r9d, byte [rbp+var_358]
00000000000073e7         jne        loc_8735

00000000000073ed         cmp        r12d, 0x4000
00000000000073f4         je         loc_7410

00000000000073f6         mov        eax, dword [rbp+var_1D8]
00000000000073fc         mov        edx, eax
00000000000073fe         and        edx, 0xf000
0000000000007404         cmp        edx, 0x4000
000000000000740a         je         loc_6efd

                     loc_7410:
0000000000007410         mov        r15d, dword [rbx]                           ; CODE XREF=copy_internal+4823, copy_internal+6100

                     loc_7413:
0000000000007413         movzx      eax, byte [rbx+0x18]                        ; CODE XREF=copy_internal+3284
0000000000007417         test       al, al
0000000000007419         jne        loc_7dd0

000000000000741f         test       r15d, r15d
0000000000007422         jne        loc_690e

                     loc_7428:
0000000000007428         mov        edx, dword [rbp+var_1D8]                    ; CODE XREF=copy_internal+3380, copy_internal+3389
000000000000742e         and        edx, 0xf000
0000000000007434         cmp        edx, 0x4000
000000000000743a         sete       r12b
000000000000743e         or         r12b, al
0000000000007441         je         loc_7fdb

                     loc_7447:
0000000000007447         mov        r14d, r8d                                   ; CODE XREF=copy_internal+3415, copy_internal+8649, copy_internal+10154, copy_internal+10182
000000000000744a         mov        r15d, 0x11
0000000000007450         mov        qword [rbp+var_350], 0x0
000000000000745b         jmp        loc_5fae

                     loc_7460:
0000000000007460         mov        rsi, qword [rbp+var_280]                    ; CODE XREF=copy_internal+4002
0000000000007467         mov        rdi, qword [rbp+var_278]
000000000000746e         call       forget_created                              ; forget_created
0000000000007473         jmp        loc_6bc8
0000000000007478         align      128

                     loc_7480:
0000000000007480         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+4041
0000000000007487         mov        edi, 0x4
000000000000748c         call       quotearg_style                              ; quotearg_style
0000000000007491         mov        edx, 0x5
0000000000007496         mov        r12, rax
0000000000007499         lea        rsi, qword [aCannotUnbackup]                ; "cannot un-backup %s"
00000000000074a0         jmp        loc_651e
00000000000074a5         align      8

                     loc_74a8:
00000000000074a8         cmp        r15d, 0x8000                                ; CODE XREF=copy_internal+1342
00000000000074af         je         loc_7cb0

00000000000074b5         cmp        r15d, 0xa000
00000000000074bc         setne      r8b
00000000000074c0         and        r8b, byte [rbx+0x14]
00000000000074c4         jne        loc_7cb0

00000000000074ca         cmp        r15d, 0x1000
00000000000074d1         je         loc_8592

00000000000074d7         mov        eax, r15d
00000000000074da         and        ah, 0xbf
00000000000074dd         cmp        eax, 0x2000
00000000000074e2         je         loc_81cc

00000000000074e8         cmp        r15d, 0xc000
00000000000074ef         je         loc_81cc

00000000000074f5         cmp        r15d, 0xa000
00000000000074fc         je         loc_8880

0000000000007502         mov        rsi, qword [rbp+var_310]
0000000000007509         mov        edi, 0x4
000000000000750e         call       quotearg_style                              ; quotearg_style
0000000000007513         mov        edx, 0x5
0000000000007518         mov        r12, rax
000000000000751b         lea        rsi, qword [aSHasUnknownFil]                ; "%s has unknown file type"
0000000000007522         jmp        loc_67c8
0000000000007527         align      16

                     loc_7530:
0000000000007530         mov        rsi, rdx                                    ; CODE XREF=copy_internal+4193
0000000000007533         call       src_to_dest_lookup                          ; src_to_dest_lookup
0000000000007538         mov        qword [rbp+var_358], rax
000000000000753f         jmp        loc_6c9d
0000000000007544         align      8

                     loc_7548:
0000000000007548         mov        rsi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+2659
000000000000754f         mov        edi, 0x4
0000000000007554         call       quotearg_style                              ; quotearg_style
0000000000007559         lea        rsi, qword [aWarningSourceF]                ; argument "msgid" for method j_dcgettext, "warning: source file %s specified more than once"
0000000000007560         mov        rbx, rax
0000000000007563         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007565         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000756a         call       j_dcgettext                                 ; dcgettext
000000000000756f         mov        rcx, rbx
0000000000007572         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000007575         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000007577         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000007579         xor        eax, eax
000000000000757b         call       j_error                                     ; error
0000000000007580         jmp        loc_6466
0000000000007585         align      8

                     loc_7588:
0000000000007588         mov        rsi, qword [rbp+var_280]                    ; CODE XREF=copy_internal+2360
000000000000758f         mov        rdi, qword [rbp+var_278]
0000000000007596         call       src_to_dest_lookup                          ; src_to_dest_lookup
000000000000759b         mov        qword [rbp+var_358], rax
00000000000075a2         jmp        loc_7149
00000000000075a7         align      16

                     loc_75b0:
00000000000075b0         lea        rsi, qword [aOmittingDirect]                ; argument "msgid" for method j_dcgettext, "omitting directory %s", CODE XREF=copy_internal+3059
00000000000075b7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000075b9         call       j_dcgettext                                 ; dcgettext
00000000000075be         mov        rdx, rax
00000000000075c1         jmp        loc_682a
00000000000075c6         align      16

                     loc_75d0:
00000000000075d0         mov        rdx, qword [top_level_dst_name]             ; top_level_dst_name, CODE XREF=copy_internal+2447
00000000000075d7         mov        esi, 0x4
00000000000075dc         mov        edi, 0x1
00000000000075e1         call       quotearg_n_style                            ; quotearg_n_style
00000000000075e6         mov        rdx, qword [top_level_src_name]             ; top_level_src_name
00000000000075ed         mov        esi, 0x4
00000000000075f2         xor        edi, edi
00000000000075f4         mov        r12, rax
00000000000075f7         call       quotearg_n_style                            ; quotearg_n_style
00000000000075fc         lea        rsi, qword [aCannotMoveSToA]                ; argument "msgid" for method j_dcgettext, "cannot move %s to a subdirectory of itself, %s"
0000000000007603         mov        rbx, rax
0000000000007606         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000760b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000760d         call       j_dcgettext                                 ; dcgettext
0000000000007612         mov        r8, r12
0000000000007615         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000007618         mov        rcx, rbx
000000000000761b         xor        eax, eax
000000000000761d         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000761f         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000007621         call       j_error                                     ; error
0000000000007626         mov        rax, qword [rbp+var_340]
000000000000762d         mov        r12d, 0x1
0000000000007633         mov        byte [rax], 0x1
0000000000007636         jmp        loc_6466
000000000000763b         align      64

                     loc_7640:
0000000000007640         call       j_rmdir                                     ; rmdir, CODE XREF=copy_internal+2491
0000000000007645         test       eax, eax
0000000000007647         je         loc_6611

000000000000764d         call       j___errno_location                          ; __errno_location
0000000000007652         cmp        dword [rax], 0x2
0000000000007655         mov        r14, rax
0000000000007658         je         loc_6611

                     loc_765e:
000000000000765e         mov        rdx, qword [rbp+var_308]                    ; CODE XREF=copy_internal+2517
0000000000007665         mov        esi, 0x4
000000000000766a         mov        edi, 0x1
000000000000766f         call       quotearg_n_style                            ; quotearg_n_style
0000000000007674         mov        rdx, qword [rbp+var_310]
000000000000767b         mov        esi, 0x4
0000000000007680         xor        edi, edi
0000000000007682         mov        r12, rax
0000000000007685         call       quotearg_n_style                            ; quotearg_n_style
000000000000768a         lea        rsi, qword [aInterdeviceMov]                ; argument "msgid" for method j_dcgettext, "inter-device move failed: %s to %s; unable to remove target"
0000000000007691         mov        rbx, rax
0000000000007694         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007699         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000769b         call       j_dcgettext                                 ; dcgettext
00000000000076a0         mov        r8, r12
00000000000076a3         mov        rcx, rbx
00000000000076a6         mov        rdx, rax
00000000000076a9         mov        esi, dword [r14]
00000000000076ac         jmp        loc_6dd6
00000000000076b1         align      8

                     loc_76b8:
00000000000076b8         movzx      esi, byte [rbx+0x18]                        ; CODE XREF=copy_internal+5558
00000000000076bc         test       sil, sil
00000000000076bf         jne        loc_7290

00000000000076c5         cmp        byte [rbx+0x15], 0x0
00000000000076c9         jne        loc_7290

00000000000076cf         mov        eax, dword [rdx+0x18]
00000000000076d2         and        eax, 0xf000
00000000000076d7         cmp        eax, 0xa000
00000000000076dc         jne        loc_86c5

                     loc_76e2:
00000000000076e2         cmp        byte [rbx+0x2c], 0x0                        ; CODE XREF=copy_internal+5843, copy_internal+5865, copy_internal+5877, copy_internal+5945
00000000000076e6         je         loc_76fd

00000000000076e8         mov        eax, dword [r12+0x18]
00000000000076ed         and        eax, 0xf000
00000000000076f2         cmp        eax, 0xa000
00000000000076f7         je         loc_5e3f

                     loc_76fd:
00000000000076fd         cmp        dword [rbx+4], 0x2                          ; CODE XREF=copy_internal+6854
0000000000007701         jne        loc_7220

0000000000007707         mov        eax, dword [rdx+0x18]
000000000000770a         and        eax, 0xf000
000000000000770f         cmp        eax, 0xa000
0000000000007714         je         loc_918c

000000000000771a         movdqa     xmm0, xmmword [rdx]
000000000000771e         movaps     xmmword [rbp+var_D0], xmm0
0000000000007725         movdqa     xmm0, xmmword [rdx+0x10]
000000000000772a         movaps     xmmword [rbp+var_C0], xmm0
0000000000007731         movdqa     xmm0, xmmword [rdx+0x20]
0000000000007736         movaps     xmmword [rbp+var_B0], xmm0
000000000000773d         movdqa     xmm0, xmmword [rdx+0x30]
0000000000007742         movaps     xmmword [rbp+var_A0], xmm0
0000000000007749         movdqa     xmm0, xmmword [rdx+0x40]
000000000000774e         movaps     xmmword [rbp+var_90], xmm0
0000000000007755         movdqa     xmm0, xmmword [rdx+0x50]
000000000000775a         movaps     xmmword [rbp+var_80], xmm0
000000000000775e         movdqa     xmm0, xmmword [rdx+0x60]
0000000000007763         movaps     xmmword [rbp+var_70], xmm0
0000000000007767         movdqa     xmm0, xmmword [rdx+0x70]
000000000000776c         movaps     xmmword [rbp+var_60], xmm0
0000000000007770         movdqa     xmm0, xmmword [rdx+0x80]
0000000000007778         movaps     xmmword [rbp+var_50], xmm0

                     loc_777c:
000000000000777c         mov        eax, dword [r12+0x18]                       ; CODE XREF=copy_internal+13732
0000000000007781         and        eax, 0xf000
0000000000007786         cmp        eax, 0xa000
000000000000778b         je         loc_9149

0000000000007791         movdqa     xmm0, xmmword [r12]
0000000000007797         movaps     xmmword [rbp+var_160], xmm0
000000000000779e         movdqa     xmm0, xmmword [r12+0x10]
00000000000077a5         movaps     xmmword [rbp+var_150], xmm0
00000000000077ac         movdqa     xmm0, xmmword [r12+0x20]
00000000000077b3         movaps     xmmword [rbp+var_140], xmm0
00000000000077ba         movdqa     xmm0, xmmword [r12+0x30]
00000000000077c1         movaps     xmmword [rbp+var_130], xmm0
00000000000077c8         movdqa     xmm0, xmmword [r12+0x40]
00000000000077cf         movaps     xmmword [rbp+var_120], xmm0
00000000000077d6         movdqa     xmm0, xmmword [r12+0x50]
00000000000077dd         movaps     xmmword [rbp+var_110], xmm0
00000000000077e4         movdqa     xmm0, xmmword [r12+0x60]
00000000000077eb         movaps     xmmword [rbp+var_100], xmm0
00000000000077f2         movdqa     xmm0, xmmword [r12+0x70]
00000000000077f9         movaps     xmmword [rbp+var_F0], xmm0
0000000000007800         movdqa     xmm0, xmmword [r12+0x80]
000000000000780a         movaps     xmmword [rbp+var_E0], xmm0

                     loc_7811:
0000000000007811         mov        rax, qword [rbp+var_158]                    ; CODE XREF=copy_internal+13665
0000000000007818         cmp        qword [rbp+var_C8], rax
000000000000781f         jne        loc_5e3f

0000000000007825         mov        rax, qword [rbp+var_160]
000000000000782c         cmp        qword [rbp+var_D0], rax
0000000000007833         jne        loc_5e3f

0000000000007839         cmp        byte [rbx+0x17], 0x0
000000000000783d         je         loc_7220

0000000000007843         mov        eax, dword [r12+0x18]
0000000000007848         and        eax, 0xf000
000000000000784d         cmp        eax, 0xa000
0000000000007852         setne      r14b
0000000000007856         jmp        loc_5e3f
000000000000785b         align      32

                     loc_7860:
0000000000007860         lea        rcx, qword [rbp+var_D0]                     ; CODE XREF=copy_internal+964
0000000000007867         mov        rsi, qword [rbp+var_308]                    ; argument "__filename" for method j___lxstat
000000000000786e         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
0000000000007873         mov        rdx, rcx                                    ; argument "__stat_buf" for method j___lxstat
0000000000007876         mov        qword [rbp+var_358], rcx
000000000000787d         call       j___lxstat                                  ; __lxstat
0000000000007882         test       eax, eax
0000000000007884         jne        loc_6070

000000000000788a         mov        rcx, qword [rbp+var_358]
0000000000007891         mov        rdx, rcx
0000000000007894         jmp        loc_5fea
0000000000007899         align      32

                     loc_78a0:
00000000000078a0         mov        rsi, qword [rbp+var_308]                    ; argument "__filename" for method j___lxstat, CODE XREF=copy_internal+5309
00000000000078a7         lea        rdx, qword [rbp+var_1F0]                    ; argument "__stat_buf" for method j___lxstat
00000000000078ae         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
00000000000078b3         call       j___lxstat                                  ; __lxstat
00000000000078b8         test       eax, eax
00000000000078ba         jne        loc_82c5

00000000000078c0         mov        r12d, dword [rbp+var_1D8]
00000000000078c7         mov        byte [rbp+var_330], 0x0
00000000000078ce         mov        eax, r12d
00000000000078d1         and        eax, 0x1c0
00000000000078d6         cmp        eax, 0x1c0
00000000000078db         je         loc_7908

00000000000078dd         mov        rdi, qword [rbp+var_308]                    ; argument "__file" for method j_chmod
00000000000078e4         mov        esi, r12d
00000000000078e7         or         esi, 0x1c0                                  ; argument "__mode" for method j_chmod
00000000000078ed         call       j_chmod                                     ; chmod
00000000000078f2         test       eax, eax
00000000000078f4         mov        dword [rbp+var_38C], r12d
00000000000078fb         mov        byte [rbp+var_330], 0x1
0000000000007902         jne        loc_8923

                     loc_7908:
0000000000007908         mov        rax, qword [rbp+var_338]                    ; CODE XREF=copy_internal+7355
000000000000790f         cmp        byte [rax], 0x0
0000000000007912         je         loc_870c

                     loc_7918:
0000000000007918         cmp        byte [rbx+0x2e], 0x0                        ; CODE XREF=copy_internal+11024
000000000000791c         je         loc_7968

000000000000791e         cmp        byte [rbx+0x18], 0x0
0000000000007922         je         loc_87cd

0000000000007928         mov        rsi, qword [rbp+var_308]
000000000000792f         mov        edi, 0x4
0000000000007934         call       quotearg_style                              ; quotearg_style
0000000000007939         lea        rsi, qword [aCreatedDirecto]                ; argument "msgid" for method j_dcgettext, "created directory %s\\n"
0000000000007940         mov        r12, rax
0000000000007943         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007948         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000794a         call       j_dcgettext                                 ; dcgettext
000000000000794f         mov        rdx, r12
0000000000007952         mov        rsi, rax
0000000000007955         mov        edi, 0x1
000000000000795a         xor        eax, eax
000000000000795c         call       j___printf_chk                              ; __printf_chk
0000000000007961         nop        dword [rax]

                     loc_7968:
0000000000007968         mov        rax, qword [rbp+var_348]                    ; CODE XREF=copy_internal+7420, copy_internal+9501, copy_internal+11202
000000000000796f         test       rax, rax
0000000000007972         setne      r12b
0000000000007976         and        r12b, byte [rbx+0x1c]
000000000000797a         jne        loc_815b

                     loc_7980:
0000000000007980         movdqu     xmm0, xmmword [rbx]                         ; CODE XREF=copy_internal+9547
0000000000007984         mov        esi, 0x2
0000000000007989         mov        rdi, qword [rbp+var_310]
0000000000007990         movaps     xmmword [rbp+var_2F0], xmm0
0000000000007997         movdqu     xmm0, xmmword [rbx+0x10]
000000000000799c         movaps     xmmword [rbp+var_2E0], xmm0
00000000000079a3         movdqu     xmm0, xmmword [rbx+0x20]
00000000000079a8         movaps     xmmword [rbp+var_2D0], xmm0
00000000000079af         movdqu     xmm0, xmmword [rbx+0x30]
00000000000079b4         movaps     xmmword [rbp+var_2C0], xmm0
00000000000079bb         movdqu     xmm0, xmmword [rbx+0x40]
00000000000079c0         movaps     xmmword [rbp+var_2B0], xmm0
00000000000079c7         call       savedir                                     ; savedir
00000000000079cc         test       rax, rax
00000000000079cf         mov        qword [rbp+var_368], rax
00000000000079d6         je         loc_8838

00000000000079dc         cmp        dword [rbx+4], 0x3
00000000000079e0         jne        loc_79ec

00000000000079e2         mov        dword [rbp+var_2EC], 0x2

                     loc_79ec:
00000000000079ec         mov        rax, qword [rbp+var_368]                    ; CODE XREF=copy_internal+7616
00000000000079f3         cmp        byte [rax], 0x0
00000000000079f6         je         loc_8f35

00000000000079fc         lea        rax, qword [rbp+var_2F0]
0000000000007a03         lea        r10, qword [rbp+var_280]
0000000000007a0a         mov        dword [rbp+var_380], r13d
0000000000007a11         mov        r15, qword [rbp+var_368]
0000000000007a18         mov        r13, qword [rbp+var_340]
0000000000007a1f         mov        r12d, 0x1
0000000000007a25         mov        qword [rbp+var_348], rax
0000000000007a2c         lea        rax, qword [rbp+var_2F9]
0000000000007a33         mov        byte [rbp+var_315], 0x0
0000000000007a3a         mov        byte [rbp+var_370], r14b
0000000000007a41         mov        qword [rbp+var_378], rbx
0000000000007a48         mov        qword [rbp+var_350], rax
0000000000007a4f         lea        rax, qword [rbp+var_2F8]
0000000000007a56         mov        qword [rbp+var_340], r10
0000000000007a5d         mov        qword [rbp+var_358], rax
0000000000007a64         jmp        loc_7a94
0000000000007a66         align      16

                     loc_7a70:
0000000000007a70         movzx      eax, byte [rbp+var_2F8]                     ; CODE XREF=copy_internal+7947
0000000000007a77         mov        rdi, r15                                    ; argument "__s" for method j_strlen
0000000000007a7a         or         byte [rbp+var_315], al
0000000000007a80         call       j_strlen                                    ; strlen
0000000000007a85         lea        r15, qword [r15+rax+1]
0000000000007a8a         cmp        byte [r15], 0x0
0000000000007a8e         je         loc_7b31

                     loc_7a94:
0000000000007a94         mov        rdi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+7748
0000000000007a9b         xor        edx, edx
0000000000007a9d         mov        rsi, r15
0000000000007aa0         call       file_name_concat                            ; file_name_concat
0000000000007aa5         mov        rdi, qword [rbp+var_308]
0000000000007aac         xor        edx, edx
0000000000007aae         mov        rsi, r15
0000000000007ab1         mov        rbx, rax
0000000000007ab4         call       file_name_concat                            ; file_name_concat
0000000000007ab9         mov        r14, rax
0000000000007abc         mov        rax, qword [rbp+var_338]
0000000000007ac3         mov        r9, qword [rbp+var_348]
0000000000007aca         mov        r8, qword [rbp+var_328]
0000000000007ad1         mov        rcx, qword [rbp+var_340]
0000000000007ad8         mov        rsi, r14
0000000000007adb         mov        edx, dword [rbp+var_320]
0000000000007ae1         mov        rdi, rbx
0000000000007ae4         movzx      eax, byte [rax]
0000000000007ae7         push       0x0
0000000000007ae9         push       qword [rbp+var_350]
0000000000007aef         push       qword [rbp+var_358]
0000000000007af5         push       0x0
0000000000007af7         mov        byte [rbp+var_2F8], al
0000000000007afd         call       copy_internal                               ; copy_internal
0000000000007b02         and        r12d, eax
0000000000007b05         movzx      eax, byte [rbp+var_2F9]
0000000000007b0c         add        rsp, 0x20
0000000000007b10         or         byte [r13], al
0000000000007b14         mov        rdi, r14
0000000000007b17         call       sub_30d0                                    ; sub_30d0
0000000000007b1c         mov        rdi, rbx
0000000000007b1f         call       sub_30d0                                    ; sub_30d0
0000000000007b24         cmp        byte [rbp+var_2F9], 0x0
0000000000007b2b         je         loc_7a70

                     loc_7b31:
0000000000007b31         movzx      r14d, byte [rbp+var_370]                    ; CODE XREF=copy_internal+7790
0000000000007b39         mov        rbx, qword [rbp+var_378]
0000000000007b40         mov        r13d, dword [rbp+var_380]

                     loc_7b47:
0000000000007b47         mov        rdi, qword [rbp+var_368]                    ; CODE XREF=copy_internal+13090
0000000000007b4e         call       sub_30d0                                    ; sub_30d0
0000000000007b53         movzx      ecx, byte [rbp+var_315]
0000000000007b5a         mov        rax, qword [rbp+var_338]
0000000000007b61         mov        byte [rax], cl

                     loc_7b63:
0000000000007b63         test       r13b, r13b                                  ; CODE XREF=copy_internal+9541, copy_internal+11355
0000000000007b66         jne        loc_8142

0000000000007b6c         movzx      eax, byte [rbp+var_330]
0000000000007b73         mov        byte [rbp+var_320], 0x0
0000000000007b7a         mov        byte [rbp+var_315], al
0000000000007b80         jmp        loc_623a
0000000000007b85         align      8

                     loc_7b88:
0000000000007b88         cmp        byte [rbx+0x18], 0x0                        ; CODE XREF=copy_internal+3272
0000000000007b8c         je         loc_7f9b

0000000000007b92         mov        r15d, dword [rbx]
0000000000007b95         test       r15d, r15d
0000000000007b98         je         loc_7f9b

0000000000007b9e         test       r13b, r13b
0000000000007ba1         jne        loc_68fa

                     loc_7ba7:
0000000000007ba7         mov        edx, dword [rbp+var_268]                    ; CODE XREF=copy_internal+3304, copy_internal+4841
0000000000007bad         and        edx, 0xf000
0000000000007bb3         cmp        edx, 0x4000
0000000000007bb9         je         loc_8176

                     loc_7bbf:
0000000000007bbf         mov        rdi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+8655, copy_internal+9577
0000000000007bc6         mov        byte [rbp+var_358], r9b
0000000000007bcd         mov        byte [rbp+var_350], r8b
0000000000007bd4         call       last_component                              ; last_component
0000000000007bd9         cmp        byte [rax], 0x2e
0000000000007bdc         mov        r14, rax
0000000000007bdf         movzx      r8d, byte [rbp+var_350]
0000000000007be7         movzx      r9d, byte [rbp+var_358]
0000000000007bef         jne        loc_697d

0000000000007bf5         mov        eax, 0x1
0000000000007bfa         jmp        loc_6942
0000000000007bff         align      1024

                     loc_7c00:
0000000000007c00         mov        rsi, qword [rbp+var_358]                    ; CODE XREF=copy_internal+4256
0000000000007c07         mov        rdi, qword [rbp+var_308]
0000000000007c0e         call       same_name                                   ; same_name
0000000000007c13         test       al, al
0000000000007c15         jne        loc_82ea

0000000000007c1b         mov        eax, dword [rbx+4]
0000000000007c1e         cmp        eax, 0x4
0000000000007c21         je         loc_71a0

0000000000007c27         cmp        eax, 0x3
0000000000007c2a         jne        loc_7c35

0000000000007c2c         test       r13b, r13b
0000000000007c2f         jne        loc_71a0

                     loc_7c35:
0000000000007c35         mov        rdx, qword [rbp+var_358]                    ; CODE XREF=copy_internal+8202
0000000000007c3c         mov        esi, 0x4
0000000000007c41         mov        edi, 0x1
0000000000007c46         call       quotearg_n_style                            ; quotearg_n_style
0000000000007c4b         mov        rdx, qword [rbp+var_308]
0000000000007c52         xor        edi, edi
0000000000007c54         mov        esi, 0x4
0000000000007c59         mov        r13, rax
0000000000007c5c         call       quotearg_n_style                            ; quotearg_n_style
0000000000007c61         lea        rsi, qword [aWillNotCreateH]                ; argument "msgid" for method j_dcgettext, "will not create hard link %s to directory %s"
0000000000007c68         mov        r12, rax
0000000000007c6b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007c6d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007c72         call       j_dcgettext                                 ; dcgettext
0000000000007c77         mov        r8, r13
0000000000007c7a         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000007c7d         mov        rcx, r12
0000000000007c80         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000007c82         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000007c84         xor        eax, eax
0000000000007c86         call       j_error                                     ; error
0000000000007c8b         jmp        loc_6d26

                     loc_7c90:
0000000000007c90         cmp        byte [rbx+0x17], 0x0                        ; CODE XREF=copy_internal+1173
0000000000007c94         je         loc_6d38

0000000000007c9a         mov        qword [rbp+var_358], 0x0
0000000000007ca5         jmp        loc_6d73
0000000000007caa         align      16

                     loc_7cb0:
0000000000007cb0         mov        eax, dword [rbp+var_268]                    ; CODE XREF=copy_internal+6287, copy_internal+6308
0000000000007cb6         xor        esi, esi
0000000000007cb8         cmp        dword [rbx+4], 0x2
0000000000007cbc         mov        rdi, qword [rbp+var_310]
0000000000007cc3         mov        dword [rbp+var_340], eax
0000000000007cc9         movzx      eax, byte [rbx+0x23]
0000000000007ccd         sete       sil
0000000000007cd1         shl        esi, 0x11
0000000000007cd4         mov        byte [rbp+var_338], al
0000000000007cda         xor        eax, eax
0000000000007cdc         call       open_safer                                  ; open_safer
0000000000007ce1         test       eax, eax
0000000000007ce3         mov        dword [rbp+var_320], eax
0000000000007ce9         js         loc_83eb

0000000000007cef         mov        esi, dword [rbp+var_320]                    ; argument "__fildes" for method j___fxstat
0000000000007cf5         lea        rdx, qword [rbp+var_160]                    ; argument "__stat_buf" for method j___fxstat
0000000000007cfc         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
0000000000007d01         call       j___fxstat                                  ; __fxstat
0000000000007d06         test       eax, eax
0000000000007d08         jne        loc_8627

0000000000007d0e         mov        rax, qword [rbp+var_158]
0000000000007d15         cmp        qword [rbp+var_278], rax
0000000000007d1c         jne        loc_7d32

0000000000007d1e         mov        rax, qword [rbp+var_160]
0000000000007d25         cmp        qword [rbp+var_280], rax
0000000000007d2c         je         loc_8a56

                     loc_7d32:
0000000000007d32         mov        rsi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+8444
0000000000007d39         mov        edi, 0x4
0000000000007d3e         call       quotearg_style                              ; quotearg_style
0000000000007d43         lea        rsi, qword [aSkippingFileSA]                ; argument "msgid" for method j_dcgettext, "skipping file %s, as it was replaced while being copied"
0000000000007d4a         mov        r12, rax
0000000000007d4d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007d52         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007d54         call       j_dcgettext                                 ; dcgettext
0000000000007d59         mov        rcx, r12
0000000000007d5c         mov        rdx, rax
0000000000007d5f         xor        esi, esi

                     loc_7d61:
0000000000007d61         xor        edi, edi                                    ; argument "__status" for method j_error, CODE XREF=copy_internal+10822, copy_internal+16319
0000000000007d63         xor        eax, eax
0000000000007d65         call       j_error                                     ; error
0000000000007d6a         xor        r8d, r8d
0000000000007d6d         mov        qword [rbp+var_330], 0x0

                     loc_7d78:
0000000000007d78         mov        edi, dword [rbp+var_320]                    ; argument "__fd" for method j_close, CODE XREF=copy_internal+12977, copy_internal+13058, copy_internal+13274, copy_internal+13502, copy_internal+16473
0000000000007d7e         mov        byte [rbp+var_328], r8b
0000000000007d85         call       j_close                                     ; close
0000000000007d8a         test       eax, eax
0000000000007d8c         movzx      r8d, byte [rbp+var_328]
0000000000007d94         js         loc_87e7

0000000000007d9a         mov        rdi, qword [rbp+var_330]
0000000000007da1         mov        byte [rbp+var_328], r8b
0000000000007da8         call       sub_30d0                                    ; sub_30d0
0000000000007dad         movzx      r8d, byte [rbp+var_328]
0000000000007db5         mov        byte [rbp+var_320], 0x0
0000000000007dbc         test       r8b, r8b
0000000000007dbf         jne        loc_619f

0000000000007dc5         jmp        loc_6bb0
0000000000007dca         align      16

                     loc_7dd0:
0000000000007dd0         mov        eax, dword [rbp+var_268]                    ; CODE XREF=copy_internal+6137
0000000000007dd6         and        eax, 0xf000
0000000000007ddb         cmp        eax, 0x4000
0000000000007de0         je         loc_8170

                     loc_7de6:
0000000000007de6         test       r15d, r15d                                  ; CODE XREF=copy_internal+9568
0000000000007de9         je         loc_7447

0000000000007def         jmp        loc_7bbf
0000000000007df4         align      8

                     loc_7df8:
0000000000007df8         lea        rdx, qword [rbp+var_160]                    ; argument "__stat_buf" for method j___xstat, CODE XREF=copy_internal+3830
0000000000007dff         mov        rsi, r8                                     ; argument "__filename" for method j___xstat
0000000000007e02         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000007e07         call       j___xstat                                   ; __xstat
0000000000007e0c         test       eax, eax
0000000000007e0e         jne        loc_6b1c

0000000000007e14         lea        rdx, qword [rbp+var_D0]                     ; argument "__stat_buf" for method j___xstat
0000000000007e1b         mov        rsi, r12                                    ; argument "__filename" for method j___xstat
0000000000007e1e         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000007e23         call       j___xstat                                   ; __xstat
0000000000007e28         test       eax, eax
0000000000007e2a         jne        loc_6b1c

0000000000007e30         mov        rax, qword [rbp+var_C8]
0000000000007e37         cmp        qword [rbp+var_158], rax
0000000000007e3e         je         loc_8f47

                     loc_7e44:
0000000000007e44         mov        rdi, r12                                    ; CODE XREF=copy_internal+13109
0000000000007e47         call       sub_30d0                                    ; sub_30d0
0000000000007e4c         mov        rdx, qword [rbp+var_308]
0000000000007e53         mov        esi, 0x3
0000000000007e58         xor        edi, edi
0000000000007e5a         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000007e5f         mov        edx, 0x5
0000000000007e64         mov        r12, rax
0000000000007e67         lea        rsi, qword [aSCanMakeRelati]                ; "%s: can make relative symbolic links only in current directory"
0000000000007e6e         jmp        loc_67c8

                     loc_7e73:
0000000000007e73         mov        eax, dword [rbp+var_1D8]                    ; CODE XREF=copy_internal+5548
0000000000007e79         lea        rdx, qword [rbp+var_280]
0000000000007e80         and        eax, 0xf000
0000000000007e85         cmp        eax, 0xa000
0000000000007e8a         jne        loc_71d2

0000000000007e90         mov        rsi, qword [rbp+var_308]
0000000000007e97         mov        rdi, qword [rbp+var_310]
0000000000007e9e         mov        byte [rbp+var_358], r9b
0000000000007ea5         mov        byte [rbp+var_350], r8b
0000000000007eac         call       same_name                                   ; same_name
0000000000007eb1         test       al, al
0000000000007eb3         jne        loc_7220

0000000000007eb9         mov        edi, dword [rbx]
0000000000007ebb         movzx      r8d, byte [rbp+var_350]
0000000000007ec3         movzx      r9d, byte [rbp+var_358]
0000000000007ecb         test       edi, edi
0000000000007ecd         jne        loc_706e

0000000000007ed3         test       r15d, r15d
0000000000007ed6         je         loc_706e

0000000000007edc         movzx      r12d, byte [rbx+0x18]
0000000000007ee1         mov        eax, 0x1
0000000000007ee6         xor        r12d, 0x1
0000000000007eea         jmp        loc_739c
0000000000007eef         align      16

                     loc_7ef0:
0000000000007ef0         mov        r15d, eax                                   ; CODE XREF=copy_internal+1436
0000000000007ef3         movabs     rax, 0xff000000ff00
0000000000007efd         test       qword [rbx+0x20], rax
0000000000007f01         je         loc_61c2

0000000000007f07         movzx      esi, byte [rbx+0x25]
0000000000007f0b         mov        rdi, qword [rbp+var_308]
0000000000007f12         xor        edx, edx
0000000000007f14         mov        rcx, rbx
0000000000007f17         mov        byte [rbp+var_328], r8b
0000000000007f1e         call       set_file_security_ctx                       ; set_file_security_ctx
0000000000007f23         test       al, al
0000000000007f25         mov        r15d, eax
0000000000007f28         movzx      r8d, byte [rbp+var_328]
0000000000007f30         jne        loc_61c2

0000000000007f36         movzx      r14d, byte [rbx+0x26]
0000000000007f3b         test       r14b, r14b
0000000000007f3e         jne        loc_6bb0

0000000000007f44         mov        r15d, r12d
0000000000007f47         jmp        loc_61c2
0000000000007f4c         align      16

                     loc_7f50:
0000000000007f50         lea        rsi, qword [aCopied]                        ; argument "msgid" for method j_dcgettext, "copied ", CODE XREF=copy_internal+2539
0000000000007f57         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007f5c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007f5e         call       j_dcgettext                                 ; dcgettext
0000000000007f63         mov        edi, 0x1
0000000000007f68         mov        rsi, rax
0000000000007f6b         xor        eax, eax
0000000000007f6d         call       j___printf_chk                              ; __printf_chk
0000000000007f72         mov        rdx, qword [rbp+var_350]
0000000000007f79         mov        rsi, qword [rbp+var_308]
0000000000007f80         mov        rdi, qword [rbp+var_310]
0000000000007f87         call       emit_verbose                                ; emit_verbose
0000000000007f8c         mov        dword [rbp+var_320], 0x1
0000000000007f96         jmp        loc_60d0

                     loc_7f9b:
0000000000007f9b         mov        rdx, qword [rbp+var_310]                    ; CODE XREF=copy_internal+8044, copy_internal+8056
0000000000007fa2         mov        esi, 0x4
0000000000007fa7         mov        edi, 0x1
0000000000007fac         call       quotearg_n_style                            ; quotearg_n_style
0000000000007fb1         mov        rdx, qword [rbp+var_308]
0000000000007fb8         mov        esi, 0x4
0000000000007fbd         xor        edi, edi
0000000000007fbf         mov        r12, rax
0000000000007fc2         call       quotearg_n_style                            ; quotearg_n_style
0000000000007fc7         mov        edx, 0x5
0000000000007fcc         mov        rbx, rax
0000000000007fcf         lea        rsi, qword [aCannotOverwrit_17858]          ; "cannot overwrite non-directory %s with directory %s"
0000000000007fd6         jmp        loc_725b

                     loc_7fdb:
0000000000007fdb         cmp        byte [rbx+0x15], 0x0                        ; CODE XREF=copy_internal+6177
0000000000007fdf         jne        loc_7ff9

0000000000007fe1         cmp        byte [rbx+0x22], 0x0
0000000000007fe5         je         loc_83c6

0000000000007feb         cmp        qword [rbp+var_1E0], 0x1
0000000000007ff3         jbe        loc_83c6

                     loc_7ff9:
0000000000007ff9         mov        r14, qword [rbp+var_308]                    ; CODE XREF=copy_internal+9151, copy_internal+10176
0000000000008000         mov        byte [rbp+var_350], r9b                     ; DATA XREF=install_file_in_file+227, install_file_in_file+625, install_file_in_file+652, copy_internal+396, loc_74a8, copy_internal+10171, copy_internal+12145, copy_internal+12169, copy_internal+12278, strmode+13
0000000000008007         mov        rdi, r14                                    ; argument "__name" for method j_unlink
000000000000800a         call       j_unlink                                    ; unlink
000000000000800f         test       eax, eax
0000000000008011         movzx      r9d, byte [rbp+var_350]
0000000000008019         je         loc_8393

000000000000801f         call       j___errno_location                          ; __errno_location
0000000000008024         cmp        dword [rax], 0x2
0000000000008027         mov        r15, rax
000000000000802a         movzx      r9d, byte [rbp+var_350]
0000000000008032         je         loc_8393

0000000000008038         mov        rsi, r14
000000000000803b         mov        edi, 0x4
0000000000008040         call       quotearg_style                              ; quotearg_style
0000000000008045         lea        rsi, qword [aCannotRemoveS]                 ; argument "msgid" for method j_dcgettext, "cannot remove %s"
000000000000804c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000804e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008053         mov        rbx, rax
0000000000008056         call       j_dcgettext                                 ; dcgettext
000000000000805b         mov        esi, dword [r15]                            ; argument "__errnum" for method j_error
000000000000805e         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000008061         mov        rcx, rbx
0000000000008064         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000008066         xor        eax, eax
0000000000008068         call       j_error                                     ; error
000000000000806d         jmp        loc_6466

                     loc_8072:
0000000000008072         lea        rax, qword [rbp+var_D0]                     ; CODE XREF=copy_internal+5192
0000000000008079         mov        rsi, qword [rbp+var_310]                    ; argument "__filename" for method j___lxstat
0000000000008080         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
0000000000008085         mov        rdx, rax                                    ; argument "__stat_buf" for method j___lxstat
0000000000008088         mov        qword [rbp+var_368], rax
000000000000808f         call       j___lxstat                                  ; __lxstat
0000000000008094         test       eax, eax
0000000000008096         movzx      r8d, byte [rbp+var_350]
000000000000809e         movzx      r9d, byte [rbp+var_358]
00000000000080a6         jne        loc_706e

00000000000080ac         xor        ecx, ecx
00000000000080ae         mov        rax, qword [rbp+var_158]
00000000000080b5         cmp        qword [rbp+var_C8], rax
00000000000080bc         jne        loc_80cf

00000000000080be         mov        rax, qword [rbp+var_160]
00000000000080c5         cmp        qword [rbp+var_D0], rax
00000000000080cc         sete       cl

                     loc_80cf:
00000000000080cf         mov        eax, dword [rbp+var_B8]                     ; CODE XREF=copy_internal+9372
00000000000080d5         mov        rdx, qword [rbp+var_368]
00000000000080dc         and        eax, 0xf000
00000000000080e1         cmp        eax, 0xa000
00000000000080e6         jne        loc_71d2

00000000000080ec         mov        eax, dword [rbp+var_148]
00000000000080f2         and        eax, 0xf000
00000000000080f7         cmp        eax, 0xa000
00000000000080fc         jne        loc_71d2

0000000000008102         cmp        byte [rbx+0x15], 0x0
0000000000008106         je         loc_71d2

000000000000810c         jmp        loc_706e
0000000000008111         align      8

                     loc_8118:
0000000000008118         movabs     rax, 0xff000000ff00                         ; CODE XREF=copy_internal+5275
0000000000008122         test       qword [rbx+0x20], rax
0000000000008126         jne        loc_86e0

                     loc_812c:
000000000000812c         mov        byte [rbp+var_330], 0x0                     ; CODE XREF=copy_internal+10967, copy_internal+10983
0000000000008133         mov        dword [rbp+var_35C], 0x0
000000000000813d         jmp        loc_7968

                     loc_8142:
0000000000008142         mov        byte [rbp+var_315], r12b                    ; CODE XREF=copy_internal+8006
0000000000008149         xor        r15d, r15d
000000000000814c         xor        r8d, r8d
000000000000814f         mov        byte [rbp+var_320], 0x0
0000000000008156         jmp        loc_61d4

                     loc_815b:
000000000000815b         mov        rcx, qword [rbp+var_280]                    ; CODE XREF=copy_internal+7514
0000000000008162         cmp        qword [rax], rcx
0000000000008165         jne        loc_7b63

000000000000816b         jmp        loc_7980

                     loc_8170:
0000000000008170         mov        eax, dword [rbp+var_1D8]                    ; CODE XREF=copy_internal+8640

                     loc_8176:
0000000000008176         and        eax, 0xf000                                 ; CODE XREF=copy_internal+8089
000000000000817b         cmp        eax, 0x4000
0000000000008180         je         loc_7de6

0000000000008186         test       r15d, r15d
0000000000008189         jne        loc_7bbf

000000000000818f         mov        rdx, qword [rbp+var_308]
0000000000008196         mov        esi, 0x3
000000000000819b         xor        edi, edi
000000000000819d         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000081a2         mov        rdx, qword [rbp+var_310]
00000000000081a9         mov        esi, 0x3
00000000000081ae         xor        edi, edi
00000000000081b0         mov        r12, rax
00000000000081b3         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000081b8         mov        edx, 0x5
00000000000081bd         mov        rbx, rax
00000000000081c0         lea        rsi, qword [aCannotMoveDire]                ; "cannot move directory onto non-directory: %s -> %s"
00000000000081c7         jmp        loc_725b

                     loc_81cc:
00000000000081cc         mov        edx, dword [rbp+var_35C]                    ; CODE XREF=copy_internal+6338, copy_internal+6351
00000000000081d2         mov        rax, qword [rbp+var_258]
00000000000081d9         lea        rcx, qword [rbp+var_2F0]                    ; argument "__dev" for method j___xmknod
00000000000081e0         mov        rsi, qword [rbp+var_308]                    ; argument "__path" for method j___xmknod
00000000000081e7         xor        edi, edi                                    ; argument "__ver" for method j___xmknod
00000000000081e9         mov        byte [rbp+var_328], r8b
00000000000081f0         not        edx
00000000000081f2         and        edx, dword [rbp+var_314]                    ; argument "__mode" for method j___xmknod
00000000000081f8         mov        qword [rbp+var_2F0], rax
00000000000081ff         call       j___xmknod                                  ; __xmknod
0000000000008204         test       eax, eax
0000000000008206         mov        byte [rbp+var_320], 0x0
000000000000820d         movzx      r8d, byte [rbp+var_328]
0000000000008215         je         loc_619f

000000000000821b         mov        rsi, qword [rbp+var_308]
0000000000008222         mov        edi, 0x4
0000000000008227         call       quotearg_style                              ; quotearg_style
000000000000822c         mov        edx, 0x5
0000000000008231         mov        r13, rax
0000000000008234         lea        rsi, qword [aCannotCreateSp]                ; "cannot create special file %s"
000000000000823b         jmp        loc_70ff

                     loc_8240:
0000000000008240         call       utimens                                     ; utimens, CODE XREF=copy_internal+1649
0000000000008245         test       eax, eax
0000000000008247         je         loc_6305

000000000000824d         jmp        loc_62aa

                     loc_8252:
0000000000008252         mov        rdi, qword [rbx+0x40]                       ; CODE XREF=copy_internal+1511
0000000000008256         mov        rsi, qword [rbp+var_308]
000000000000825d         mov        rdx, r12
0000000000008260         call       record_file                                 ; record_file
0000000000008265         movzx      r8d, byte [rbp+var_328]
000000000000826d         jmp        loc_620d

                     loc_8272:
0000000000008272         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+5566
0000000000008279         mov        rdi, qword [rbp+var_310]
0000000000008280         mov        byte [rbp+var_358], r9b
0000000000008287         mov        byte [rbp+var_350], r8b
000000000000828e         call       same_name                                   ; same_name
0000000000008293         xor        eax, 0x1
0000000000008296         movzx      r8d, byte [rbp+var_350]
000000000000829e         movzx      r9d, byte [rbp+var_358]
00000000000082a6         mov        r12d, eax
00000000000082a9         xor        eax, eax
00000000000082ab         jmp        loc_739c

                     loc_82b0:
00000000000082b0         movzx      r8d, byte [rbp+var_350]                     ; CODE XREF=copy_internal+4734
00000000000082b8         movzx      r9d, byte [rbp+var_358]
00000000000082c0         jmp        loc_68b0

                     loc_82c5:
00000000000082c5         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+7322
00000000000082cc         mov        edi, 0x4
00000000000082d1         call       quotearg_style                              ; quotearg_style
00000000000082d6         mov        edx, 0x5
00000000000082db         mov        r13, rax
00000000000082de         lea        rsi, qword [aCannotStatS]                   ; "cannot stat %s"
00000000000082e5         jmp        loc_70ff

                     loc_82ea:
00000000000082ea         mov        rsi, qword [top_level_src_name]             ; top_level_src_name, CODE XREF=copy_internal+8181
00000000000082f1         mov        edi, 0x4
00000000000082f6         call       quotearg_style                              ; quotearg_style
00000000000082fb         lea        rsi, qword [aWarningSourceD]                ; argument "msgid" for method j_dcgettext, "warning: source directory %s specified more than once"
0000000000008302         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008304         mov        r12, rax
0000000000008307         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000830c         call       j_dcgettext                                 ; dcgettext
0000000000008311         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000008313         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000008316         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000008318         xor        eax, eax
000000000000831a         mov        rcx, r12
000000000000831d         call       j_error                                     ; error
0000000000008322         cmp        byte [rbx+0x18], 0x0
0000000000008326         jne        loc_6ea4

000000000000832c         jmp        loc_6460

                     loc_8331:
0000000000008331         mov        byte [rbp+var_350], r9b                     ; CODE XREF=copy_internal+3569
0000000000008338         call       j___errno_location                          ; __errno_location
000000000000833d         cmp        dword [rax], 0x2
0000000000008340         mov        r12, rax
0000000000008343         movzx      r9d, byte [rbp+var_350]
000000000000834b         je         loc_87b1

0000000000008351         mov        rsi, qword [rbp+var_308]
0000000000008358         mov        edi, 0x4
000000000000835d         call       quotearg_style                              ; quotearg_style
0000000000008362         lea        rsi, qword [aCannotBackupS]                 ; argument "msgid" for method j_dcgettext, "cannot backup %s"
0000000000008369         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000836e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008370         mov        rbx, rax
0000000000008373         call       j_dcgettext                                 ; dcgettext
0000000000008378         mov        esi, dword [r12]                            ; argument "__errnum" for method j_error
000000000000837c         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000837f         mov        rcx, rbx
0000000000008382         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000008384         xor        eax, eax
0000000000008386         xor        r12d, r12d
0000000000008389         call       j_error                                     ; error
000000000000838e         jmp        loc_6466

                     loc_8393:
0000000000008393         movzx      r14d, byte [rbx+0x2e]                       ; CODE XREF=copy_internal+9209, copy_internal+9234
0000000000008398         test       r14b, r14b
000000000000839b         jne        loc_896c

00000000000083a1         test       r13b, r13b
00000000000083a4         jne        loc_8948

00000000000083aa         mov        qword [rbp+var_350], 0x0
00000000000083b5         mov        r14d, 0x1
00000000000083bb         mov        r15d, 0x11
00000000000083c1         jmp        loc_6089

                     loc_83c6:
00000000000083c6         cmp        dword [rbx+4], 0x2                          ; CODE XREF=copy_internal+9157, copy_internal+9171
00000000000083ca         jne        loc_7447

00000000000083d0         mov        eax, dword [rbp+var_268]
00000000000083d6         and        eax, 0xf000
00000000000083db         cmp        eax, 0x8000
00000000000083e0         jne        loc_7ff9

00000000000083e6         jmp        loc_7447

                     loc_83eb:
00000000000083eb         mov        rsi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+8393
00000000000083f2         mov        edi, 0x4
00000000000083f7         call       quotearg_style                              ; quotearg_style
00000000000083fc         mov        edx, 0x5
0000000000008401         mov        r13, rax
0000000000008404         lea        rsi, qword [aCannotOpenSFor]                ; "cannot open %s for reading"
000000000000840b         jmp        loc_70ff

                     loc_8410:
0000000000008410         mov        r8d, dword [rbp+var_314]                    ; CODE XREF=copy_internal+1877
0000000000008417         mov        rdx, qword [rbp+var_308]
000000000000841e         mov        ecx, 0xffffffff
0000000000008423         mov        rdi, qword [rbp+var_310]
000000000000842a         mov        esi, ecx
000000000000842c         call       copy_acl                                    ; copy_acl
0000000000008431         test       eax, eax
0000000000008433         jne        loc_640a

0000000000008439         jmp        loc_6466

                     loc_843e:
000000000000843e         mov        rdx, r12                                    ; argument "__n" for method j_memcmp, CODE XREF=copy_internal+3523
0000000000008441         mov        rdi, r14                                    ; argument "__s1" for method j_memcmp
0000000000008444         mov        byte [rbp+var_350], r9b
000000000000844b         mov        qword [rbp+var_358], r8
0000000000008452         call       j_memcmp                                    ; memcmp
0000000000008457         test       eax, eax
0000000000008459         movzx      r9d, byte [rbp+var_350]
0000000000008461         jne        loc_69e9

0000000000008467         lea        rdi, qword [r14+r12]                        ; argument "__s1" for method j_strcmp
000000000000846b         mov        rsi, r15                                    ; argument "__s2" for method j_strcmp
000000000000846e         call       j_strcmp                                    ; strcmp
0000000000008473         test       eax, eax
0000000000008475         movzx      r9d, byte [rbp+var_350]
000000000000847d         mov        r8, qword [rbp+var_358]
0000000000008484         jne        loc_69e9

000000000000848a         mov        rdi, qword [rbp+var_308]
0000000000008491         or         rcx, 0xffffffffffffffff
0000000000008495         repne scasb al, byte [rdi]
0000000000008497         mov        rax, rcx
000000000000849a         not        rax
000000000000849d         lea        r14, qword [rax-1]
00000000000084a1         lea        rdi, qword [r14+r8+1]
00000000000084a6         call       xmalloc                                     ; xmalloc
00000000000084ab         mov        r15, qword [simple_backup_suffix]           ; simple_backup_suffix
00000000000084b2         mov        rsi, qword [rbp+var_308]                    ; argument "__src" for method j_mempcpy
00000000000084b9         mov        rdx, r14                                    ; argument "__n" for method j_mempcpy
00000000000084bc         mov        rdi, rax                                    ; argument "__dest" for method j_mempcpy
00000000000084bf         mov        r12, rax
00000000000084c2         call       j_mempcpy                                   ; mempcpy
00000000000084c7         mov        rsi, r15                                    ; argument "__src" for method j_strcpy
00000000000084ca         mov        rdi, rax                                    ; argument "__dest" for method j_strcpy
00000000000084cd         call       j_strcpy                                    ; strcpy
00000000000084d2         lea        rdx, qword [rbp+var_D0]                     ; argument "__stat_buf" for method j___xstat
00000000000084d9         mov        rsi, r12                                    ; argument "__filename" for method j___xstat
00000000000084dc         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
00000000000084e1         call       j___xstat                                   ; __xstat
00000000000084e6         mov        rdi, r12
00000000000084e9         mov        r15d, eax
00000000000084ec         call       sub_30d0                                    ; sub_30d0
00000000000084f1         test       r15d, r15d
00000000000084f4         movzx      r9d, byte [rbp+var_350]
00000000000084fc         jne        loc_69e9

0000000000008502         mov        rax, qword [rbp+var_C8]
0000000000008509         cmp        qword [rbp+var_278], rax
0000000000008510         jne        loc_69e9

0000000000008516         mov        rax, qword [rbp+var_D0]
000000000000851d         cmp        qword [rbp+var_280], rax
0000000000008524         jne        loc_69e9

000000000000852a         cmp        byte [rbx+0x18], 0x0
000000000000852e         je         loc_8796

0000000000008534         lea        rsi, qword [aBackingUpSMigh]                ; argument "msgid" for method j_dcgettext, "backing up %s might destroy source;  %s not moved"
000000000000853b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008540         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008542         call       j_dcgettext                                 ; dcgettext
0000000000008547         mov        rbx, rax

                     loc_854a:
000000000000854a         mov        rdx, qword [rbp+var_310]                    ; CODE XREF=copy_internal+11148
0000000000008551         mov        esi, 0x4
0000000000008556         mov        edi, 0x1
000000000000855b         call       quotearg_n_style                            ; quotearg_n_style
0000000000008560         mov        rdx, qword [rbp+var_308]
0000000000008567         mov        r12, rax
000000000000856a         mov        esi, 0x4
000000000000856f         xor        edi, edi
0000000000008571         call       quotearg_n_style                            ; quotearg_n_style
0000000000008576         mov        r8, r12
0000000000008579         mov        rcx, rax
000000000000857c         mov        rdx, rbx                                    ; argument "__format" for method j_error
000000000000857f         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000008581         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000008583         xor        eax, eax
0000000000008585         call       j_error                                     ; error
000000000000858a         xor        r12d, r12d
000000000000858d         jmp        loc_6466

                     loc_8592:
0000000000008592         mov        r12d, dword [rbp+var_35C]                   ; CODE XREF=copy_internal+6321
0000000000008599         mov        rsi, qword [rbp+var_308]                    ; argument "__path" for method j___xmknod
00000000000085a0         lea        rcx, qword [rbp+var_2F8]                    ; argument "__dev" for method j___xmknod
00000000000085a7         xor        edi, edi                                    ; argument "__ver" for method j___xmknod
00000000000085a9         mov        byte [rbp+var_320], r8b
00000000000085b0         mov        qword [rbp+var_2F8], 0x0
00000000000085bb         not        r12d
00000000000085be         and        r12d, dword [rbp+var_314]
00000000000085c5         mov        edx, r12d                                   ; argument "__mode" for method j___xmknod
00000000000085c8         call       j___xmknod                                  ; __xmknod
00000000000085cd         test       eax, eax
00000000000085cf         movzx      r8d, byte [rbp+var_320]
00000000000085d7         je         loc_619f

00000000000085dd         mov        rdi, qword [rbp+var_308]                    ; argument "__path" for method j_mkfifo
00000000000085e4         mov        esi, r12d
00000000000085e7         and        esi, 0xffffefff                             ; argument "__mode" for method j_mkfifo
00000000000085ed         call       j_mkfifo                                    ; mkfifo
00000000000085f2         test       eax, eax
00000000000085f4         movzx      r8d, byte [rbp+var_320]
00000000000085fc         je         loc_619f

0000000000008602         mov        rsi, qword [rbp+var_308]
0000000000008609         mov        edi, 0x4
000000000000860e         call       quotearg_style                              ; quotearg_style
0000000000008613         mov        edx, 0x5
0000000000008618         mov        r13, rax
000000000000861b         lea        rsi, qword [aCannotCreateFi]                ; "cannot create fifo %s"
0000000000008622         jmp        loc_70ff

                     loc_8627:
0000000000008627         mov        rsi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+8424
000000000000862e         mov        edi, 0x4
0000000000008633         call       quotearg_style                              ; quotearg_style
0000000000008638         lea        rsi, qword [aCannotFstatS]                  ; argument "msgid" for method j_dcgettext, "cannot fstat %s"
000000000000863f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008644         mov        r12, rax
0000000000008647         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008649         call       j_dcgettext                                 ; dcgettext
000000000000864e         mov        qword [rbp+var_328], rax
0000000000008655         call       j___errno_location                          ; __errno_location
000000000000865a         mov        rcx, r12
000000000000865d         mov        rdx, qword [rbp+var_328]
0000000000008664         mov        esi, dword [rax]
0000000000008666         jmp        loc_7d61

                     loc_866b:
000000000000866b         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+5775
0000000000008672         mov        rdi, qword [rbp+var_310]
0000000000008679         mov        byte [rbp+var_35C], r9b
0000000000008680         mov        byte [rbp+var_358], r8b
0000000000008687         mov        qword [rbp+var_350], rdx
000000000000868e         call       same_name                                   ; same_name
0000000000008693         test       al, al
0000000000008695         mov        rdx, qword [rbp+var_350]
000000000000869c         movzx      r8d, byte [rbp+var_358]
00000000000086a4         movzx      r9d, byte [rbp+var_35C]
00000000000086ac         je         loc_8f27

00000000000086b2         mov        eax, dword [rdx+0x18]
00000000000086b5         and        eax, 0xf000
00000000000086ba         cmp        eax, 0xa000
00000000000086bf         je         loc_72ec

                     loc_86c5:
00000000000086c5         mov        eax, dword [r12+0x18]                       ; CODE XREF=copy_internal+6844
00000000000086ca         and        eax, 0xf000
00000000000086cf         cmp        eax, 0xa000
00000000000086d4         je         loc_72ec

00000000000086da         jmp        loc_72c4
00000000000086df         align      32

                     loc_86e0:
00000000000086e0         movzx      esi, byte [rbx+0x25]                        ; CODE XREF=copy_internal+9478
00000000000086e4         mov        rdi, qword [rbp+var_308]
00000000000086eb         xor        edx, edx
00000000000086ed         mov        rcx, rbx
00000000000086f0         call       set_file_security_ctx                       ; set_file_security_ctx
00000000000086f5         test       al, al
00000000000086f7         jne        loc_812c

00000000000086fd         cmp        byte [rbx+0x26], 0x0
0000000000008701         jne        loc_6bb0

0000000000008707         jmp        loc_812c

                     loc_870c:
000000000000870c         mov        rdx, qword [rbp+var_1F0]                    ; CODE XREF=copy_internal+7410
0000000000008713         mov        rsi, qword [rbp+var_1E8]
000000000000871a         mov        rdi, qword [rbp+var_308]
0000000000008721         call       remember_copied                             ; remember_copied
0000000000008726         mov        rax, qword [rbp+var_338]
000000000000872d         mov        byte [rax], 0x1
0000000000008730         jmp        loc_7918

                     loc_8735:
0000000000008735         mov        rdx, qword [rbp+var_310]                    ; CODE XREF=copy_internal+6087
000000000000873c         mov        esi, 0x4
0000000000008741         mov        edi, 0x1
0000000000008746         call       quotearg_n_style                            ; quotearg_n_style
000000000000874b         mov        rdx, qword [rbp+var_308]
0000000000008752         mov        esi, 0x4
0000000000008757         xor        edi, edi
0000000000008759         mov        r12, rax
000000000000875c         call       quotearg_n_style                            ; quotearg_n_style
0000000000008761         mov        edx, 0x5
0000000000008766         mov        rbx, rax
0000000000008769         lea        rsi, qword [aWillNotOverwri]                ; "will not overwrite just-created %s with %s"
0000000000008770         jmp        loc_725b

                     loc_8775:
0000000000008775         mov        edx, dword [rbx+0x10]                       ; CODE XREF=copy_internal+1887

                     loc_8778:
0000000000008778         mov        rdi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+11825
000000000000877f         mov        esi, 0xffffffff
0000000000008784         call       set_acl                                     ; set_acl
0000000000008789         test       eax, eax
000000000000878b         jne        loc_5f30

0000000000008791         jmp        loc_6466

                     loc_8796:
0000000000008796         lea        rsi, qword [aBackingUpSMigh_17968]          ; argument "msgid" for method j_dcgettext, "backing up %s might destroy source;  %s not copied", CODE XREF=copy_internal+10510
000000000000879d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000087a2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000087a4         call       j_dcgettext                                 ; dcgettext
00000000000087a9         mov        rbx, rax
00000000000087ac         jmp        loc_854a

                     loc_87b1:
00000000000087b1         mov        qword [rbp+var_350], 0x0                    ; CODE XREF=copy_internal+10027
00000000000087bc         mov        r14d, 0x1
00000000000087c2         mov        r15d, 0x11
00000000000087c8         jmp        loc_5fae

                     loc_87cd:
00000000000087cd         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+7426
00000000000087d4         mov        rdi, qword [rbp+var_310]
00000000000087db         xor        edx, edx
00000000000087dd         call       emit_verbose                                ; emit_verbose
00000000000087e2         jmp        loc_7968

                     loc_87e7:
00000000000087e7         mov        rsi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+8564
00000000000087ee         mov        edi, 0x4
00000000000087f3         call       quotearg_style                              ; quotearg_style
00000000000087f8         lea        rsi, qword [aFailedToCloseS]                ; argument "msgid" for method j_dcgettext, "failed to close %s"
00000000000087ff         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008801         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008806         mov        r12, rax
0000000000008809         call       j_dcgettext                                 ; dcgettext
000000000000880e         mov        r13, rax
0000000000008811         call       j___errno_location                          ; __errno_location
0000000000008816         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000008818         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000881a         mov        rcx, r12
000000000000881d         mov        rdx, r13                                    ; argument "__format" for method j_error
0000000000008820         xor        eax, eax
0000000000008822         call       j_error                                     ; error
0000000000008827         mov        rdi, qword [rbp+var_330]
000000000000882e         call       sub_30d0                                    ; sub_30d0
0000000000008833         jmp        loc_6bb0

                     loc_8838:
0000000000008838         mov        rsi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+7606
000000000000883f         mov        edi, 0x4
0000000000008844         call       quotearg_style                              ; quotearg_style
0000000000008849         lea        rsi, qword [aCannotAccessS]                 ; argument "msgid" for method j_dcgettext, "cannot access %s"
0000000000008850         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008855         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008857         mov        r12, rax
000000000000885a         call       j_dcgettext                                 ; dcgettext
000000000000885f         mov        r15, rax
0000000000008862         call       j___errno_location                          ; __errno_location
0000000000008867         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000008869         mov        rcx, r12
000000000000886c         mov        rdx, r15                                    ; argument "__format" for method j_error
000000000000886f         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000008871         xor        eax, eax
0000000000008873         xor        r12d, r12d
0000000000008876         call       j_error                                     ; error
000000000000887b         jmp        loc_7b63

                     loc_8880:
0000000000008880         mov        rsi, qword [rbp+var_250]                    ; CODE XREF=copy_internal+6364
0000000000008887         mov        rdi, qword [rbp+var_310]
000000000000888e         call       areadlink_with_size                         ; areadlink_with_size
0000000000008893         test       rax, rax
0000000000008896         mov        r12, rax
0000000000008899         je         loc_90e3

000000000000889f         movzx      ecx, byte [rbx+0x16]
00000000000088a3         mov        rdx, qword [rbp+var_308]
00000000000088aa         mov        r8d, 0xffffffff
00000000000088b0         mov        esi, 0xffffff9c
00000000000088b5         mov        rdi, rax
00000000000088b8         call       force_symlinkat                             ; force_symlinkat
00000000000088bd         test       eax, eax
00000000000088bf         mov        dword [rbp+var_320], eax
00000000000088c5         jle        loc_9108

00000000000088cb         cmp        byte [rbx+0x2d], 0x1
00000000000088cf         jne        loc_88da

00000000000088d1         test       r14b, r14b
00000000000088d4         je         loc_94b9

                     loc_88da:
00000000000088da         mov        rdi, r12                                    ; CODE XREF=copy_internal+11439, copy_internal+14505, copy_internal+14540, copy_internal+14561, copy_internal+16647
00000000000088dd         call       sub_30d0                                    ; sub_30d0
00000000000088e2         mov        rsi, qword [rbp+var_308]
00000000000088e9         mov        edi, 0x4
00000000000088ee         call       quotearg_style                              ; quotearg_style
00000000000088f3         lea        rsi, qword [aCannotCreateSy]                ; argument "msgid" for method j_dcgettext, "cannot create symbolic link %s"
00000000000088fa         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000088fc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008901         mov        r12, rax
0000000000008904         call       j_dcgettext                                 ; dcgettext
0000000000008909         mov        esi, dword [rbp+var_320]                    ; argument "__errnum" for method j_error
000000000000890f         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000008912         mov        rcx, r12
0000000000008915         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000008917         xor        eax, eax
0000000000008919         call       j_error                                     ; error
000000000000891e         jmp        loc_6bb0

                     loc_8923:
0000000000008923         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+7394
000000000000892a         mov        edi, 0x4
000000000000892f         call       quotearg_style                              ; quotearg_style
0000000000008934         mov        edx, 0x5
0000000000008939         mov        r13, rax
000000000000893c         lea        rsi, qword [aSettingPermiss]                ; "setting permissions for %s"
0000000000008943         jmp        loc_70ff

                     loc_8948:
0000000000008948         cmp        qword [rbx+0x40], 0x0                       ; CODE XREF=copy_internal+10116
000000000000894d         mov        r14d, r13d
0000000000008950         mov        qword [rbp+var_350], 0x0
000000000000895b         mov        r15d, 0x11
0000000000008961         jne        loc_5fc2

0000000000008967         jmp        loc_6089

                     loc_896c:
000000000000896c         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+10107
0000000000008973         mov        edi, 0x4
0000000000008978         mov        byte [rbp+var_358], r9b
000000000000897f         mov        r15d, 0x11
0000000000008985         call       quotearg_style                              ; quotearg_style
000000000000898a         lea        rsi, qword [aRemovedSn]                     ; argument "msgid" for method j_dcgettext, "removed %s\\n"
0000000000008991         mov        r12, rax
0000000000008994         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008999         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000899b         call       j_dcgettext                                 ; dcgettext
00000000000089a0         mov        rdx, r12
00000000000089a3         mov        rsi, rax
00000000000089a6         mov        edi, 0x1
00000000000089ab         xor        eax, eax
00000000000089ad         call       j___printf_chk                              ; __printf_chk
00000000000089b2         mov        qword [rbp+var_350], 0x0
00000000000089bd         movzx      r9d, byte [rbp+var_358]
00000000000089c5         jmp        loc_5fae

                     loc_89ca:
00000000000089ca         mov        eax, dword [rbp+var_1D0]                    ; CODE XREF=copy_internal+1788
00000000000089d0         cmp        dword [rbp+var_260], eax
00000000000089d6         jne        loc_6322

00000000000089dc         jmp        loc_6367

                     loc_89e1:
00000000000089e1         call       cached_umask                                ; cached_umask, CODE XREF=copy_internal+1911
00000000000089e6         not        eax
00000000000089e8         and        dword [rbp+var_35C], eax
00000000000089ee         je         loc_639d

00000000000089f4         cmp        byte [rbp+var_315], 0x1
00000000000089fb         je         loc_63aa

0000000000008a01         test       r14b, r14b
0000000000008a04         jne        loc_9377

                     loc_8a0a:
0000000000008a0a         mov        eax, dword [rbp+var_1D8]                    ; CODE XREF=copy_internal+14193
0000000000008a10         mov        dword [rbp+var_38C], eax
0000000000008a16         not        eax
0000000000008a18         test       dword [rbp+var_35C], eax
0000000000008a1e         jne        loc_63aa

0000000000008a24         jmp        loc_6466

                     loc_8a29:
0000000000008a29         mov        eax, dword [rbp+var_314]                    ; CODE XREF=copy_internal+1897
0000000000008a2f         mov        edx, 0x1b6
0000000000008a34         mov        ebx, 0x1ff
0000000000008a39         and        eax, 0x7000
0000000000008a3e         cmp        eax, 0x4000
0000000000008a43         cmovne     ebx, edx
0000000000008a46         call       cached_umask                                ; cached_umask
0000000000008a4b         not        eax
0000000000008a4d         mov        edx, eax
0000000000008a4f         and        edx, ebx
0000000000008a51         jmp        loc_8778

                     loc_8a56:
0000000000008a56         and        r12d, 0x1ff                                 ; CODE XREF=copy_internal+8460
0000000000008a5d         test       r14b, r14b
0000000000008a60         mov        dword [rbp+var_3A4], r12d
0000000000008a67         jne        loc_9000

0000000000008a6d         cmp        byte [rbx+0x23], 0x1
0000000000008a71         mov        rdi, qword [rbp+var_308]
0000000000008a78         sbb        esi, esi
0000000000008a7a         xor        eax, eax
0000000000008a7c         and        esi, 0xfffffe00
0000000000008a82         add        esi, 0x201
0000000000008a88         call       open_safer                                  ; open_safer
0000000000008a8d         mov        dword [rbp+var_328], eax
0000000000008a93         call       j___errno_location                          ; __errno_location
0000000000008a98         mov        r12, rax
0000000000008a9b         movabs     rax, 0xff000000ff00
0000000000008aa5         test       qword [rbx+0x20], rax
0000000000008aa9         jne        loc_9335

0000000000008aaf         cmp        dword [rbp+var_328], 0x0
0000000000008ab6         js         loc_9342

                     loc_8abc:
0000000000008abc         mov        dword [rbp+var_378], 0x0                    ; CODE XREF=copy_internal+14728, copy_internal+14755

                     loc_8ac6:
0000000000008ac6         lea        rax, qword [rbp+var_D0]                     ; CODE XREF=copy_internal+14691
0000000000008acd         mov        esi, dword [rbp+var_328]                    ; argument "__fildes" for method j___fxstat
0000000000008ad3         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
0000000000008ad8         mov        rdx, rax                                    ; argument "__stat_buf" for method j___fxstat
0000000000008adb         mov        qword [rbp+var_368], rax
0000000000008ae2         call       j___fxstat                                  ; __fxstat
0000000000008ae7         test       eax, eax
0000000000008ae9         mov        dword [rbp+var_348], eax
0000000000008aef         jne        loc_9696

0000000000008af5         cmp        byte [rbp+var_338], 0x0
0000000000008afc         je         loc_91cf

0000000000008b02         cmp        dword [rbx+0x38], 0x0
0000000000008b06         jne        loc_9964

                     loc_8b0c:
0000000000008b0c         call       j_getpagesize                               ; getpagesize, CODE XREF=copy_internal+15720
0000000000008b11         mov        rcx, qword [rbp+var_98]
0000000000008b18         movsxd     r12, eax
0000000000008b1b         movabs     rax, 0x1ffffffffffe0000
0000000000008b25         mov        r8d, 0x200
0000000000008b2b         mov        edi, dword [rbp+var_320]
0000000000008b31         mov        qword [rbp+var_330], r8
0000000000008b38         lea        rdx, qword [rcx-0x20000]
0000000000008b3f         cmp        rdx, rax
0000000000008b42         mov        eax, 0x20000
0000000000008b47         lea        rdx, qword [rcx-1]
0000000000008b4b         cmovbe     rax, rcx
0000000000008b4f         mov        qword [rbp+var_370], rax
0000000000008b56         movabs     rax, 0x1fffffffffffffff
0000000000008b60         cmp        rdx, rax
0000000000008b63         cmova      rcx, r8
0000000000008b67         xor        edx, edx
0000000000008b69         xor        esi, esi
0000000000008b6b         mov        qword [rbp+var_398], rcx
0000000000008b72         mov        ecx, 0x2
0000000000008b77         call       fdadvise                                    ; fdadvise
0000000000008b7c         mov        r9d, dword [rbp+var_148]
0000000000008b83         mov        r8, qword [rbp+var_330]
0000000000008b8a         and        r9d, 0xf000
0000000000008b91         cmp        r9d, 0x8000
0000000000008b98         je         loc_9a7a

                     loc_8b9e:
0000000000008b9e         mov        eax, dword [rbp+var_B8]                     ; CODE XREF=copy_internal+15993
0000000000008ba4         and        eax, 0xf000
0000000000008ba9         cmp        eax, 0x8000
0000000000008bae         je         loc_9a0f

                     loc_8bb4:
0000000000008bb4         mov        rdi, qword [rbp+var_128]                    ; CODE XREF=copy_internal+15870, copy_internal+15883
0000000000008bbb         movabs     rax, 0x7fffffffffffffff
0000000000008bc5         mov        rsi, qword [rbp+var_370]
0000000000008bcc         sub        rax, r12
0000000000008bcf         mov        dword [rbp+var_380], r9d
0000000000008bd6         mov        r8, rax
0000000000008bd9         movabs     rax, 0x1ffffffffffe0000
0000000000008be3         lea        rdx, qword [rdi-0x20000]
0000000000008bea         mov        qword [rbp+var_330], r8
0000000000008bf1         cmp        rdx, rax
0000000000008bf4         mov        eax, 0x20000
0000000000008bf9         mov        rdx, r8
0000000000008bfc         cmova      rdi, rax
0000000000008c00         call       buffer_lcm                                  ; buffer_lcm
0000000000008c05         mov        r9d, dword [rbp+var_380]
0000000000008c0c         mov        rcx, rax
0000000000008c0f         mov        r8, qword [rbp+var_330]
0000000000008c16         cmp        r9d, 0x8000
0000000000008c1d         je         loc_98ed

                     loc_8c23:
0000000000008c23         mov        rax, qword [rbp+var_370]                    ; CODE XREF=copy_internal+15579, copy_internal+15596
0000000000008c2a         xor        edx, edx
0000000000008c2c         lea        rsi, qword [rcx+rax-1]
0000000000008c31         mov        rax, rsi
0000000000008c34         div        rcx
0000000000008c37         sub        rsi, rdx
0000000000008c3a         mov        qword [rbp+var_370], rsi
0000000000008c41         je         loc_96f1

0000000000008c47         cmp        rsi, r8
0000000000008c4a         ja         loc_96f1

                     loc_8c50:
0000000000008c50         mov        rax, qword [rbp+var_370]                    ; CODE XREF=copy_internal+15064
0000000000008c57         lea        rdi, qword [r12+rax]
0000000000008c5b         call       xmalloc                                     ; xmalloc
0000000000008c60         lea        rcx, qword [rax+r12-1]
0000000000008c65         xor        edx, edx
0000000000008c67         mov        qword [rbp+var_330], rax
0000000000008c6e         mov        rax, rcx
0000000000008c71         div        r12
0000000000008c74         sub        rcx, rdx
0000000000008c77         cmp        dword [rbp+var_348], 0x0
0000000000008c7e         mov        qword [rbp+var_3B0], rcx
0000000000008c85         je         loc_96fd

0000000000008c8b         mov        byte [rbp+var_3A5], 0x0
0000000000008c92         mov        dword [rbp+var_390], 0x1

                     loc_8c9c:
0000000000008c9c         mov        rax, qword [rbp+var_130]                    ; CODE XREF=copy_internal+15957
0000000000008ca3         mov        edi, dword [rbp+var_320]
0000000000008ca9         xor        r12d, r12d
0000000000008cac         mov        qword [rbp+var_380], rax
0000000000008cb3         lea        rax, qword [rbp+var_2F0]
0000000000008cba         mov        rsi, rax
0000000000008cbd         mov        qword [rbp+var_348], rax
0000000000008cc4         call       extent_scan_init                            ; extent_scan_init
0000000000008cc9         lea        rax, qword [rbp+var_2F9]
0000000000008cd0         xor        ecx, ecx
0000000000008cd2         mov        qword [rbp+var_388], rbx
0000000000008cd9         mov        qword [rbp+var_3A0], 0x0
0000000000008ce4         mov        rbx, rcx
0000000000008ce7         mov        dword [rbp+var_360], r13d
0000000000008cee         mov        qword [rbp+var_3B8], rax
0000000000008cf5         lea        rax, qword [rbp+var_2F8]
0000000000008cfc         mov        qword [rbp+var_3C0], rax

                     loc_8d03:
0000000000008d03         mov        rdi, qword [rbp+var_348]                    ; CODE XREF=copy_internal+15351
0000000000008d0a         call       extent_scan_read                            ; extent_scan_read
0000000000008d0f         test       al, al
0000000000008d11         je         loc_9911

0000000000008d17         cmp        qword [rbp+var_2D8], 0x0
0000000000008d1f         je         loc_97ee

0000000000008d25         mov        rdx, rbx
0000000000008d28         mov        rcx, r12
0000000000008d2b         xor        r13d, r13d
0000000000008d2e         xor        eax, eax
0000000000008d30         jmp        loc_8ded
0000000000008d35         align      8

                     loc_8d38:
0000000000008d38         cmp        dword [rbp+var_390], 0x3                    ; CODE XREF=copy_internal+12819, copy_internal+12914
0000000000008d3f         mov        r8d, 0x0
0000000000008d45         cmove      r8, qword [rbp+var_398]

                     loc_8d4d:
0000000000008d4d         sub        rsp, 0x8                                    ; CODE XREF=copy_internal+14785
0000000000008d51         mov        rcx, qword [rbp+var_370]
0000000000008d58         mov        rdx, qword [rbp+var_3B0]
0000000000008d5f         mov        esi, dword [rbp+var_328]
0000000000008d65         mov        edi, dword [rbp+var_320]
0000000000008d6b         mov        r9d, 0x1
0000000000008d71         push       qword [rbp+var_3B8]
0000000000008d77         push       qword [rbp+var_3C0]
0000000000008d7d         push       rbx
0000000000008d7e         push       qword [rbp+var_308]
0000000000008d84         push       qword [rbp+var_310]
0000000000008d8a         call       sparse_copy                                 ; sparse_copy
0000000000008d8f         add        rsp, 0x30
0000000000008d93         test       al, al
0000000000008d95         je         loc_8e98

0000000000008d9b         mov        rax, qword [rbp+var_2F8]
0000000000008da2         lea        rcx, qword [r12+rax]
0000000000008da6         test       rax, rax
0000000000008da9         mov        qword [rbp+var_3A0], rcx
0000000000008db0         je         loc_8dbf

0000000000008db2         movzx      eax, byte [rbp+var_2F9]
0000000000008db9         mov        byte [rbp+var_338], al

                     loc_8dbf:
0000000000008dbf         mov        rcx, qword [rbp+var_3A0]                    ; CODE XREF=copy_internal+12688
0000000000008dc6         cmp        qword [rbp+var_380], rcx
0000000000008dcd         je         loc_97e7

0000000000008dd3         lea        eax, dword [r13+1]
0000000000008dd7         cmp        rax, qword [rbp+var_2D8]
0000000000008dde         mov        rcx, r12
0000000000008de1         mov        rdx, rbx
0000000000008de4         mov        r13, rax
0000000000008de7         jae        loc_97ee

                     loc_8ded:
0000000000008ded         lea        rsi, qword [rax+rax*2]                      ; CODE XREF=copy_internal+12560
0000000000008df1         mov        rax, qword [rbp+var_2C8]
0000000000008df8         lea        rax, qword [rax+rsi*8]
0000000000008dfc         mov        rsi, qword [rbp+var_380]
0000000000008e03         mov        r12, qword [rax]
0000000000008e06         mov        rbx, qword [rax+8]
0000000000008e0a         lea        rax, qword [r12+rbx]
0000000000008e0e         cmp        rsi, rax
0000000000008e11         jge        loc_8e20

0000000000008e13         cmp        r12, rsi
0000000000008e16         cmovg      r12, rsi
0000000000008e1a         sub        rsi, r12
0000000000008e1d         mov        rbx, rsi

                     loc_8e20:
0000000000008e20         mov        rax, r12                                    ; CODE XREF=copy_internal+12785
0000000000008e23         mov        byte [rbp+var_338], 0x0
0000000000008e2a         sub        rax, rcx
0000000000008e2d         mov        rcx, rax
0000000000008e30         sub        rcx, rdx
0000000000008e33         je         loc_8d38

0000000000008e39         mov        edi, dword [rbp+var_320]                    ; argument "__fd" for method j_lseek
0000000000008e3f         xor        edx, edx                                    ; argument "__whence" for method j_lseek
0000000000008e41         mov        rsi, r12                                    ; argument "__offset" for method j_lseek
0000000000008e44         mov        qword [rbp+var_3A0], rcx
0000000000008e4b         call       j_lseek                                     ; lseek
0000000000008e50         test       rax, rax
0000000000008e53         mov        rcx, qword [rbp+var_3A0]
0000000000008e5a         js         loc_9ccf

0000000000008e60         mov        eax, dword [rbp+var_390]
0000000000008e66         cmp        eax, 0x3
0000000000008e69         sete       dl
0000000000008e6c         sub        eax, 0x1
0000000000008e6f         je         loc_95c8

0000000000008e75         mov        rsi, qword [rbp+var_308]
0000000000008e7c         mov        edi, dword [rbp+var_328]
0000000000008e82         movzx      edx, dl
0000000000008e85         call       create_hole                                 ; create_hole
0000000000008e8a         test       al, al
0000000000008e8c         mov        byte [rbp+var_338], al
0000000000008e92         jne        loc_8d38

                     loc_8e98:
0000000000008e98         mov        rbx, qword [rbp+var_388]                    ; CODE XREF=copy_internal+12661
0000000000008e9f         mov        r13d, dword [rbp+var_360]

                     loc_8ea6:
0000000000008ea6         mov        rdi, qword [rbp+var_2C8]                    ; CODE XREF=copy_internal+16171
0000000000008ead         call       sub_30d0                                    ; sub_30d0

                     loc_8eb2:
0000000000008eb2         xor        r8d, r8d                                    ; CODE XREF=copy_internal+13840, copy_internal+14961, copy_internal+15181, copy_internal+15298

                     loc_8eb5:
0000000000008eb5         mov        edi, dword [rbp+var_328]                    ; argument "__fd" for method j_close, CODE XREF=copy_internal+13935, copy_internal+13969, copy_internal+14009, copy_internal+14096, copy_internal+14667, copy_internal+14749, copy_internal+15052, copy_internal+15850, copy_internal+16257, copy_internal+16637
0000000000008ebb         mov        byte [rbp+var_338], r8b
0000000000008ec2         call       j_close                                     ; close
0000000000008ec7         test       eax, eax
0000000000008ec9         movzx      r8d, byte [rbp+var_338]
0000000000008ed1         jns        loc_7d78

0000000000008ed7         mov        rsi, qword [rbp+var_308]
0000000000008ede         mov        edi, 0x4
0000000000008ee3         call       quotearg_style                              ; quotearg_style
0000000000008ee8         lea        rsi, qword [aFailedToCloseS]                ; argument "msgid" for method j_dcgettext, "failed to close %s"
0000000000008eef         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008ef4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008ef6         mov        r12, rax
0000000000008ef9         call       j_dcgettext                                 ; dcgettext
0000000000008efe         mov        qword [rbp+var_328], rax
0000000000008f05         call       j___errno_location                          ; __errno_location
0000000000008f0a         mov        rdx, qword [rbp+var_328]                    ; argument "__format" for method j_error
0000000000008f11         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000008f13         mov        rcx, r12
0000000000008f16         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000008f18         xor        eax, eax
0000000000008f1a         call       j_error                                     ; error
0000000000008f1f         xor        r8d, r8d
0000000000008f22         jmp        loc_7d78

                     loc_8f27:
0000000000008f27         movzx      r12d, byte [rbx+0x18]                       ; CODE XREF=copy_internal+10892
0000000000008f2c         xor        r12d, 0x1
0000000000008f30         jmp        loc_739c

                     loc_8f35:
0000000000008f35         mov        byte [rbp+var_315], 0x0                     ; CODE XREF=copy_internal+7638
0000000000008f3c         mov        r12d, 0x1
0000000000008f42         jmp        loc_7b47

                     loc_8f47:
0000000000008f47         mov        rax, qword [rbp+var_D0]                     ; CODE XREF=copy_internal+8734
0000000000008f4e         cmp        qword [rbp+var_160], rax
0000000000008f55         jne        loc_7e44

0000000000008f5b         jmp        loc_6b1c

                     loc_8f60:
0000000000008f60         mov        rdi, qword [rbp+var_308]                    ; argument "__name" for method j_unlink, CODE XREF=copy_internal+14122
0000000000008f67         call       j_unlink                                    ; unlink
0000000000008f6c         test       eax, eax
0000000000008f6e         jne        loc_9ba6

0000000000008f74         cmp        byte [rbx+0x2e], 0x0
0000000000008f78         je         loc_8fb3

0000000000008f7a         mov        rsi, qword [rbp+var_308]
0000000000008f81         mov        edi, 0x4
0000000000008f86         call       quotearg_style                              ; quotearg_style
0000000000008f8b         lea        rsi, qword [aRemovedSn]                     ; argument "msgid" for method j_dcgettext, "removed %s\\n"
0000000000008f92         mov        r12, rax
0000000000008f95         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008f9a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008f9c         call       j_dcgettext                                 ; dcgettext
0000000000008fa1         mov        rdx, r12
0000000000008fa4         mov        rsi, rax
0000000000008fa7         mov        edi, 0x1
0000000000008fac         xor        eax, eax
0000000000008fae         call       j___printf_chk                              ; __printf_chk

                     loc_8fb3:
0000000000008fb3         movzx      r14d, byte [rbx+0x21]                       ; CODE XREF=copy_internal+13144
0000000000008fb8         mov        eax, dword [rbp+var_35C]
0000000000008fbe         mov        dword [rbp+var_378], eax
0000000000008fc4         test       r14b, r14b
0000000000008fc7         je         loc_900c

0000000000008fc9         mov        edx, dword [rbp+var_3A4]
0000000000008fcf         mov        rsi, qword [rbp+var_308]
0000000000008fd6         mov        r8, rbx
0000000000008fd9         mov        rdi, qword [rbp+var_310]
0000000000008fe0         mov        ecx, 0x1
0000000000008fe5         call       set_process_security_ctx                    ; set_process_security_ctx
0000000000008fea         test       al, al
0000000000008fec         mov        r8d, eax
0000000000008fef         mov        qword [rbp+var_330], 0x0
0000000000008ffa         je         loc_7d78

                     loc_9000:
0000000000009000         mov        eax, dword [rbp+var_35C]                    ; CODE XREF=copy_internal+11847
0000000000009006         mov        dword [rbp+var_378], eax

                     loc_900c:
000000000000900c         mov        eax, dword [rbp+var_378]                    ; CODE XREF=copy_internal+13223, copy_internal+14162
0000000000009012         mov        rdi, qword [rbp+var_308]
0000000000009019         mov        esi, 0xc1
000000000000901e         not        eax
0000000000009020         and        eax, dword [rbp+var_3A4]
0000000000009026         mov        edx, eax
0000000000009028         mov        dword [rbp+var_330], eax
000000000000902e         xor        eax, eax
0000000000009030         call       open_safer                                  ; open_safer
0000000000009035         mov        r14d, eax
0000000000009038         mov        dword [rbp+var_328], eax
000000000000903e         call       j___errno_location                          ; __errno_location
0000000000009043         mov        r8d, dword [rax]
0000000000009046         mov        r12, rax
0000000000009049         mov        eax, r14d
000000000000904c         shr        eax, 0x1f
000000000000904f         cmp        r8d, 0x11
0000000000009053         sete       dl
0000000000009056         and        dl, al
0000000000009058         mov        r14d, edx
000000000000905b         je         loc_9462

0000000000009061         cmp        byte [rbx+0x18], 0x0
0000000000009065         mov        r8d, 0x11
000000000000906b         je         loc_93f5

                     loc_9071:
0000000000009071         mov        r9d, 0x1                                    ; CODE XREF=copy_internal+14697

                     loc_9077:
0000000000009077         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+14136, copy_internal+14146, copy_internal+14448, copy_internal+14484
000000000000907e         mov        edi, 0x4
0000000000009083         mov        byte [rbp+var_330], r9b
000000000000908a         mov        dword [rbp+var_328], r8d
0000000000009091         call       quotearg_style                              ; quotearg_style
0000000000009096         lea        rsi, qword [aCannotCreateRe]                ; argument "msgid" for method j_dcgettext, "cannot create regular file %s"
000000000000909d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000090a2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000090a4         mov        r12, rax
00000000000090a7         call       j_dcgettext                                 ; dcgettext
00000000000090ac         mov        r8d, dword [rbp+var_328]
00000000000090b3         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000090b6         mov        rcx, r12
00000000000090b9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000090bb         xor        eax, eax
00000000000090bd         mov        esi, r8d                                    ; argument "__errnum" for method j_error
00000000000090c0         call       j_error                                     ; error
00000000000090c5         movzx      r9d, byte [rbp+var_330]
00000000000090cd         xor        r8d, r8d
00000000000090d0         mov        qword [rbp+var_330], 0x0
00000000000090db         mov        r14d, r9d
00000000000090de         jmp        loc_7d78

                     loc_90e3:
00000000000090e3         mov        rsi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+11385
00000000000090ea         mov        edi, 0x4
00000000000090ef         call       quotearg_style                              ; quotearg_style
00000000000090f4         mov        edx, 0x5
00000000000090f9         mov        r13, rax
00000000000090fc         lea        rsi, qword [aCannotReadSymb]                ; "cannot read symbolic link %s"
0000000000009103         jmp        loc_70ff

                     loc_9108:
0000000000009108         mov        rdi, r12                                    ; CODE XREF=copy_internal+11429
000000000000910b         call       sub_30d0                                    ; sub_30d0

                     loc_9110:
0000000000009110         movzx      r8d, byte [rbx+0x25]                        ; CODE XREF=copy_internal+14616
0000000000009115         test       r8b, r8b
0000000000009118         jne        loc_6d30

000000000000911e         movzx      eax, byte [rbx+0x1d]
0000000000009122         test       al, al
0000000000009124         mov        byte [rbp+var_320], al
000000000000912a         jne        loc_93a3

0000000000009130         movzx      r8d, byte [rbp+var_320]
0000000000009138         mov        byte [rbp+var_320], 0x1
000000000000913f         jmp        loc_619f

                     loc_9144:
0000000000009144         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=copy_internal+2134
                        ; endp

                     loc_9149:
0000000000009149         mov        rsi, qword [rbp+var_308]                    ; argument "__filename" for method j___xstat, CODE XREF=copy_internal+7019
0000000000009150         lea        rdx, qword [rbp+var_160]                    ; argument "__stat_buf" for method j___xstat
0000000000009157         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
000000000000915c         mov        byte [rbp+var_358], r9b
0000000000009163         mov        byte [rbp+var_350], r8b
000000000000916a         call       j___xstat                                   ; __xstat
000000000000916f         test       eax, eax
0000000000009171         movzx      r8d, byte [rbp+var_350]
0000000000009179         movzx      r9d, byte [rbp+var_358]
0000000000009181         je         loc_7811

0000000000009187         jmp        loc_5e3f

                     loc_918c:
000000000000918c         mov        rsi, qword [rbp+var_310]                    ; argument "__filename" for method j___xstat, CODE XREF=copy_internal+6900
0000000000009193         lea        rdx, qword [rbp+var_D0]                     ; argument "__stat_buf" for method j___xstat
000000000000919a         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
000000000000919f         mov        byte [rbp+var_358], r9b
00000000000091a6         mov        byte [rbp+var_350], r8b
00000000000091ad         call       j___xstat                                   ; __xstat
00000000000091b2         test       eax, eax
00000000000091b4         movzx      r8d, byte [rbp+var_350]
00000000000091bc         movzx      r9d, byte [rbp+var_358]
00000000000091c4         je         loc_777c

00000000000091ca         jmp        loc_5e3f

                     loc_91cf:
00000000000091cf         mov        qword [rbp+var_330], 0x0                    ; CODE XREF=copy_internal+11996, copy_internal+15710

                     loc_91da:
00000000000091da         cmp        byte [rbx+0x1f], 0x0                        ; CODE XREF=copy_internal+15194, copy_internal+15220, copy_internal+15398, copy_internal+15446, copy_internal+15455, copy_internal+15491, copy_internal+15554
00000000000091de         jne        loc_95e6

                     loc_91e4:
00000000000091e4         cmp        byte [rbx+0x1d], 0x0                        ; CODE XREF=copy_internal+14873, copy_internal+14955
00000000000091e8         je         loc_9244

00000000000091ea         mov        eax, dword [rbp+var_B4]
00000000000091f0         cmp        dword [rbp+var_264], eax
00000000000091f6         jne        loc_9206

00000000000091f8         mov        eax, dword [rbp+var_B0]
00000000000091fe         cmp        dword [rbp+var_260], eax
0000000000009204         je         loc_9244

                     loc_9206:
0000000000009206         mov        r9, qword [rbp+var_368]                     ; CODE XREF=copy_internal+13782
000000000000920d         mov        edx, dword [rbp+var_328]
0000000000009213         lea        rcx, qword [rbp+var_280]
000000000000921a         mov        rsi, qword [rbp+var_308]
0000000000009221         movzx      r8d, r14b
0000000000009225         mov        rdi, rbx
0000000000009228         call       set_owner                                   ; set_owner
000000000000922d         cmp        eax, 0xffffffff
0000000000009230         je         loc_8eb2

0000000000009236         test       eax, eax
0000000000009238         jne        loc_9244

000000000000923a         and        dword [rbp+var_340], 0xfffff1ff

                     loc_9244:
0000000000009244         cmp        byte [rbx+0x27], 0x0                        ; CODE XREF=copy_internal+13768, copy_internal+13796, copy_internal+13848
0000000000009248         je         loc_9257

000000000000924a         test       byte [rbp+var_B8], 0x80
0000000000009251         je         loc_9c7e

                     loc_9257:
0000000000009257         movabs     rax, 0xff0000000000ff                       ; CODE XREF=copy_internal+13864, copy_internal+16485, copy_internal+16516, copy_internal+16554
0000000000009261         test       qword [rbx+0x18], rax
0000000000009265         jne        loc_953d

000000000000926b         cmp        byte [rbx+0x2b], 0x0
000000000000926f         jne        loc_9d02

0000000000009275         mov        r12d, r14d
0000000000009278         and        r12b, byte [rbx+0x20]
000000000000927c         jne        loc_9b77

0000000000009282         cmp        dword [rbp+var_378], 0x0
0000000000009289         mov        r8d, 0x1
000000000000928f         je         loc_8eb5

0000000000009295         mov        byte [rbp+var_338], r8b
000000000000929c         call       cached_umask                                ; cached_umask
00000000000092a1         not        eax
00000000000092a3         test       dword [rbp+var_378], eax
00000000000092a9         movzx      r8d, byte [rbp+var_338]
00000000000092b1         je         loc_8eb5

00000000000092b7         mov        edx, dword [rbp+var_3A4]
00000000000092bd         mov        rsi, qword [rbp+var_308]
00000000000092c4         mov        edi, dword [rbp+var_328]
00000000000092ca         call       fchmod_or_lchmod                            ; fchmod_or_lchmod
00000000000092cf         test       eax, eax
00000000000092d1         movzx      r8d, byte [rbp+var_338]
00000000000092d9         je         loc_8eb5

00000000000092df         mov        rsi, qword [rbp+var_308]
00000000000092e6         mov        edi, 0x4
00000000000092eb         call       quotearg_style                              ; quotearg_style
00000000000092f0         lea        rsi, qword [aPreservingPerm]                ; argument "msgid" for method j_dcgettext, "preserving permissions for %s"
00000000000092f7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000092fc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000092fe         mov        r12, rax
0000000000009301         call       j_dcgettext                                 ; dcgettext
0000000000009306         mov        qword [rbp+var_338], rax
000000000000930d         call       j___errno_location                          ; __errno_location
0000000000009312         mov        rdx, qword [rbp+var_338]                    ; argument "__format" for method j_error
0000000000009319         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000931b         mov        rcx, r12
000000000000931e         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000009320         xor        eax, eax
0000000000009322         call       j_error                                     ; error

                     loc_9327:
0000000000009327         movzx      r8d, byte [rbx+0x24]                        ; CODE XREF=copy_internal+14673
000000000000932c         xor        r8d, 0x1
0000000000009330         jmp        loc_8eb5

                     loc_9335:
0000000000009335         cmp        dword [rbp+var_328], 0x0                    ; CODE XREF=copy_internal+11913
000000000000933c         jns        loc_958e

                     loc_9342:
0000000000009342         movzx      r9d, byte [rbx+0x16]                        ; CODE XREF=copy_internal+11926
0000000000009347         test       r9b, r9b
000000000000934a         jne        loc_8f60

0000000000009350         mov        r8d, dword [r12]
0000000000009354         cmp        r8d, 0x2
0000000000009358         jne        loc_9077

000000000000935e         cmp        byte [rbx+0x18], 0x0
0000000000009362         jne        loc_9077

0000000000009368         mov        dword [rbp+var_378], 0x0
0000000000009372         jmp        loc_900c

                     loc_9377:
0000000000009377         mov        rsi, qword [rbp+var_308]                    ; argument "__filename" for method j___lxstat, CODE XREF=copy_internal+11748
000000000000937e         lea        rdx, qword [rbp+var_1F0]                    ; argument "__stat_buf" for method j___lxstat
0000000000009385         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
000000000000938a         call       j___lxstat                                  ; __lxstat
000000000000938f         test       eax, eax
0000000000009391         je         loc_8a0a

0000000000009397         mov        rsi, qword [rbp+var_308]
000000000000939e         jmp        loc_6505

                     loc_93a3:
00000000000093a3         mov        edx, dword [rbp+var_260]                    ; argument "__group" for method j_lchown, CODE XREF=copy_internal+13578
00000000000093a9         mov        esi, dword [rbp+var_264]                    ; argument "__owner" for method j_lchown
00000000000093af         mov        rdi, qword [rbp+var_308]                    ; argument "__file" for method j_lchown
00000000000093b6         mov        byte [rbp+var_328], r8b
00000000000093bd         call       j_lchown                                    ; lchown
00000000000093c2         test       eax, eax
00000000000093c4         movzx      r8d, byte [rbp+var_328]
00000000000093cc         je         loc_619f

00000000000093d2         mov        rdi, rbx
00000000000093d5         call       chown_failure_ok                            ; chown_failure_ok
00000000000093da         test       al, al
00000000000093dc         movzx      r8d, byte [rbp+var_328]
00000000000093e4         je         loc_9be4

00000000000093ea         mov        byte [rbp+var_320], al
00000000000093f0         jmp        loc_619f

                     loc_93f5:
00000000000093f5         mov        rsi, qword [rbp+var_308]                    ; argument "__filename" for method j___lxstat, CODE XREF=copy_internal+13387
00000000000093fc         lea        rdx, qword [rbp+var_D0]                     ; argument "__stat_buf" for method j___lxstat
0000000000009403         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
0000000000009408         mov        dword [rbp+var_348], r8d
000000000000940f         call       j___lxstat                                  ; __lxstat
0000000000009414         test       eax, eax
0000000000009416         mov        r8d, dword [rbp+var_348]
000000000000941d         jne        loc_9462

000000000000941f         mov        eax, dword [rbp+var_B8]
0000000000009425         and        eax, 0xf000
000000000000942a         cmp        eax, 0xa000
000000000000942f         jne        loc_9462

0000000000009431         movzx      r8d, byte [rbx+0x30]
0000000000009436         test       r8b, r8b
0000000000009439         je         loc_9c27

000000000000943f         mov        edx, dword [rbp+var_330]
0000000000009445         mov        rdi, qword [rbp+var_308]
000000000000944c         mov        esi, 0x41
0000000000009451         xor        eax, eax
0000000000009453         call       open_safer                                  ; open_safer
0000000000009458         mov        r8d, dword [r12]
000000000000945c         mov        dword [rbp+var_328], eax

                     loc_9462:
0000000000009462         mov        eax, dword [rbp+var_328]                    ; CODE XREF=copy_internal+13371, copy_internal+14333, copy_internal+14351
0000000000009468         shr        eax, 0x1f
000000000000946b         cmp        r8d, 0x15
000000000000946f         sete       dl
0000000000009472         and        dl, al
0000000000009474         mov        r9d, edx
0000000000009477         je         loc_9576

000000000000947d         mov        rsi, qword [rbp+var_308]
0000000000009484         mov        r8d, 0x15
000000000000948a         cmp        byte [rsi], 0x0
000000000000948d         mov        rdi, rsi
0000000000009490         je         loc_9077

0000000000009496         xor        eax, eax
0000000000009498         or         rcx, 0xffffffffffffffff
000000000000949c         xor        r8d, r8d
000000000000949f         repne scasb al, byte [rdi]
00000000000094a1         mov        rax, rcx
00000000000094a4         not        rax
00000000000094a7         cmp        byte [rsi+rax-2], 0x2f
00000000000094ac         setne      r8b
00000000000094b0         add        r8d, 0x14
00000000000094b4         jmp        loc_9077

                     loc_94b9:
00000000000094b9         mov        eax, dword [rbp+var_1D8]                    ; CODE XREF=copy_internal+11444
00000000000094bf         and        eax, 0xf000
00000000000094c4         cmp        eax, 0xa000
00000000000094c9         jne        loc_88da

00000000000094cf         or         rcx, 0xffffffffffffffff
00000000000094d3         mov        eax, r14d
00000000000094d6         mov        rdi, r12
00000000000094d9         repne scasb al, byte [rdi]
00000000000094db         mov        rsi, qword [rbp+var_1C0]
00000000000094e2         not        rcx
00000000000094e5         lea        rax, qword [rcx-1]
00000000000094e9         cmp        rsi, rax
00000000000094ec         jne        loc_88da

00000000000094f2         mov        rdi, qword [rbp+var_308]
00000000000094f9         call       areadlink_with_size                         ; areadlink_with_size
00000000000094fe         test       rax, rax
0000000000009501         je         loc_88da

0000000000009507         mov        rdi, rax                                    ; argument "__s1" for method j_strcmp
000000000000950a         mov        rsi, r12                                    ; argument "__s2" for method j_strcmp
000000000000950d         mov        qword [rbp+var_328], rax
0000000000009514         call       j_strcmp                                    ; strcmp
0000000000009519         mov        rdx, qword [rbp+var_328]
0000000000009520         test       eax, eax
0000000000009522         mov        rdi, rdx
0000000000009525         jne        loc_9d22

000000000000952b         call       sub_30d0                                    ; sub_30d0
0000000000009530         mov        rdi, r12
0000000000009533         call       sub_30d0                                    ; sub_30d0
0000000000009538         jmp        loc_9110

                     loc_953d:
000000000000953d         mov        r8d, dword [rbp+var_340]                    ; CODE XREF=copy_internal+13893
0000000000009544         mov        ecx, dword [rbp+var_328]
000000000000954a         mov        rdx, qword [rbp+var_308]
0000000000009551         mov        esi, dword [rbp+var_320]
0000000000009557         mov        rdi, qword [rbp+var_310]
000000000000955e         call       copy_acl                                    ; copy_acl
0000000000009563         test       eax, eax
0000000000009565         mov        r8d, 0x1
000000000000956b         je         loc_8eb5

0000000000009571         jmp        loc_9327

                     loc_9576:
0000000000009576         cmp        dword [rbp+var_328], 0x0                    ; CODE XREF=copy_internal+14423
000000000000957d         mov        r14d, 0x1
0000000000009583         jns        loc_8ac6

0000000000009589         jmp        loc_9071

                     loc_958e:
000000000000958e         movzx      esi, byte [rbx+0x25]                        ; CODE XREF=copy_internal+14108
0000000000009592         mov        rdi, qword [rbp+var_308]
0000000000009599         xor        edx, edx
000000000000959b         mov        rcx, rbx
000000000000959e         call       set_file_security_ctx                       ; set_file_security_ctx
00000000000095a3         test       al, al
00000000000095a5         mov        r8d, eax
00000000000095a8         jne        loc_8abc

00000000000095ae         cmp        byte [rbx+0x26], 0x0
00000000000095b2         mov        qword [rbp+var_330], 0x0
00000000000095bd         jne        loc_8eb5

00000000000095c3         jmp        loc_8abc

                     loc_95c8:
00000000000095c8         mov        edi, dword [rbp+var_328]                    ; CODE XREF=copy_internal+12879
00000000000095ce         mov        rsi, rcx
00000000000095d1         call       write_zeros                                 ; write_zeros
00000000000095d6         test       al, al
00000000000095d8         je         loc_9af3

00000000000095de         xor        r8d, r8d
00000000000095e1         jmp        loc_8d4d

                     loc_95e6:
00000000000095e6         mov        rax, qword [rbp+var_238]                    ; CODE XREF=copy_internal+13758
00000000000095ed         mov        rsi, qword [rbp+var_308]
00000000000095f4         lea        rdx, qword [rbp+var_2A0]
00000000000095fb         mov        edi, dword [rbp+var_328]
0000000000009601         mov        qword [rbp+var_2A0], rax
0000000000009608         mov        rax, qword [rbp+var_230]
000000000000960f         mov        qword [rbp+var_298], rax
0000000000009616         mov        rax, qword [rbp+var_228]
000000000000961d         mov        qword [rbp+var_290], rax
0000000000009624         mov        rax, qword [rbp+var_220]
000000000000962b         mov        qword [rbp+var_288], rax
0000000000009632         call       fdutimens                                   ; fdutimens
0000000000009637         test       eax, eax
0000000000009639         je         loc_91e4

000000000000963f         mov        rsi, qword [rbp+var_308]
0000000000009646         mov        edi, 0x4
000000000000964b         call       quotearg_style                              ; quotearg_style
0000000000009650         lea        rsi, qword [aPreservingTime]                ; argument "msgid" for method j_dcgettext, "preserving times for %s"
0000000000009657         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000009659         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000965e         mov        r12, rax
0000000000009661         call       j_dcgettext                                 ; dcgettext
0000000000009666         mov        qword [rbp+var_338], rax
000000000000966d         call       j___errno_location                          ; __errno_location
0000000000009672         mov        rdx, qword [rbp+var_338]                    ; argument "__format" for method j_error
0000000000009679         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000967b         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000967d         xor        eax, eax
000000000000967f         mov        rcx, r12
0000000000009682         call       j_error                                     ; error
0000000000009687         cmp        byte [rbx+0x24], 0x0
000000000000968b         je         loc_91e4

0000000000009691         jmp        loc_8eb2

                     loc_9696:
0000000000009696         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+11983
000000000000969d         mov        edi, 0x4
00000000000096a2         call       quotearg_style                              ; quotearg_style
00000000000096a7         lea        rsi, qword [aCannotFstatS]                  ; argument "msgid" for method j_dcgettext, "cannot fstat %s"
00000000000096ae         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000096b3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000096b5         mov        r12, rax
00000000000096b8         call       j_dcgettext                                 ; dcgettext
00000000000096bd         mov        qword [rbp+var_330], rax
00000000000096c4         call       j___errno_location                          ; __errno_location
00000000000096c9         mov        rdx, qword [rbp+var_330]                    ; argument "__format" for method j_error
00000000000096d0         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000096d2         mov        rcx, r12
00000000000096d5         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000096d7         xor        eax, eax
00000000000096d9         call       j_error                                     ; error
00000000000096de         xor        r8d, r8d
00000000000096e1         mov        qword [rbp+var_330], 0x0
00000000000096ec         jmp        loc_8eb5

                     loc_96f1:
00000000000096f1         mov        qword [rbp+var_370], rcx                    ; CODE XREF=copy_internal+12321, copy_internal+12330
00000000000096f8         jmp        loc_8c50

                     loc_96fd:
00000000000096fd         xor        r9d, r9d                                    ; CODE XREF=copy_internal+12389
0000000000009700         cmp        dword [rbx+0xc], 0x3
0000000000009704         lea        rax, qword [rbp+var_2F0]
000000000000970b         mov        qword [rbp+var_398], 0x0
0000000000009716         mov        qword [rbp+var_348], rax
000000000000971d         sete       r9b

                     loc_9721:
0000000000009721         lea        rax, qword [rbp+var_2F8]                    ; CODE XREF=copy_internal+15679, copy_internal+16078
0000000000009728         sub        rsp, 0x8
000000000000972c         mov        r8, qword [rbp+var_398]
0000000000009733         mov        rcx, qword [rbp+var_370]
000000000000973a         mov        rdx, qword [rbp+var_3B0]
0000000000009741         mov        esi, dword [rbp+var_328]
0000000000009747         mov        edi, dword [rbp+var_320]
000000000000974d         push       rax
000000000000974e         push       qword [rbp+var_348]
0000000000009754         push       0xffffffffffffffff
0000000000009756         push       qword [rbp+var_308]
000000000000975c         push       qword [rbp+var_310]
0000000000009762         call       sparse_copy                                 ; sparse_copy
0000000000009767         add        rsp, 0x30
000000000000976b         test       al, al
000000000000976d         je         loc_8eb2

0000000000009773         cmp        byte [rbp+var_2F8], 0x0
000000000000977a         je         loc_91da

0000000000009780         mov        rsi, qword [rbp+var_2F0]                    ; argument "__length" for method j_ftruncate
0000000000009787         mov        edi, dword [rbp+var_328]                    ; argument "__fd" for method j_ftruncate
000000000000978d         call       j_ftruncate                                 ; ftruncate
0000000000009792         test       eax, eax
0000000000009794         jns        loc_91da

                     loc_979a:
000000000000979a         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+15433, copy_internal+15560
00000000000097a1         mov        edi, 0x4
00000000000097a6         call       quotearg_style                              ; quotearg_style
00000000000097ab         lea        rsi, qword [aFailedToExtend]                ; "failed to extend %s"
00000000000097b2         mov        r12, rax
00000000000097b5         mov        edx, 0x5

                     loc_97ba:
00000000000097ba         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=copy_internal+15529, copy_internal+16210
00000000000097bc         call       j_dcgettext                                 ; dcgettext
00000000000097c1         mov        qword [rbp+var_338], rax
00000000000097c8         call       j___errno_location                          ; __errno_location
00000000000097cd         mov        rdx, qword [rbp+var_338]                    ; argument "__format" for method j_error
00000000000097d4         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000097d6         mov        rcx, r12
00000000000097d9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000097db         xor        eax, eax
00000000000097dd         call       j_error                                     ; error
00000000000097e2         jmp        loc_8eb2

                     loc_97e7:
00000000000097e7         mov        byte [rbp+var_2CF], 0x1                     ; CODE XREF=copy_internal+12717

                     loc_97ee:
00000000000097ee         mov        rdi, qword [rbp+var_2C8]                    ; CODE XREF=copy_internal+12543, copy_internal+12743
00000000000097f5         call       sub_30d0                                    ; sub_30d0
00000000000097fa         cmp        byte [rbp+var_2CF], 0x0
0000000000009801         mov        qword [rbp+var_2C8], 0x0
000000000000980c         mov        qword [rbp+var_2D8], 0x0
0000000000009817         je         loc_8d03

000000000000981d         mov        rbx, qword [rbp+var_388]
0000000000009824         mov        r13d, dword [rbp+var_360]

                     loc_982b:
000000000000982b         mov        rcx, qword [rbp+var_3A0]                    ; CODE XREF=copy_internal+15622
0000000000009832         cmp        qword [rbp+var_380], rcx
0000000000009839         setg       r12b
000000000000983d         jg         loc_984c

000000000000983f         cmp        byte [rbp+var_338], 0x0
0000000000009846         je         loc_91da

                     loc_984c:
000000000000984c         cmp        dword [rbp+var_390], 0x1                    ; CODE XREF=copy_internal+15389
0000000000009853         mov        rsi, qword [rbp+var_380]
000000000000985a         je         loc_98ce

000000000000985c         mov        edi, dword [rbp+var_328]                    ; argument "__fd" for method j_ftruncate
0000000000009862         call       j_ftruncate                                 ; ftruncate
0000000000009867         test       eax, eax
0000000000009869         jne        loc_979a

000000000000986f         cmp        dword [rbp+var_390], 0x3
0000000000009876         jne        loc_91da

000000000000987c         test       r12b, r12b
000000000000987f         je         loc_91da

0000000000009885         mov        rdx, qword [rbp+var_380]
000000000000988c         mov        rsi, qword [rbp+var_3A0]
0000000000009893         mov        edi, dword [rbp+var_328]
0000000000009899         sub        rdx, rsi
000000000000989c         call       punch_hole                                  ; punch_hole
00000000000098a1         test       eax, eax
00000000000098a3         jns        loc_91da

00000000000098a9         mov        rsi, qword [rbp+var_308]
00000000000098b0         mov        edi, 0x4
00000000000098b5         call       quotearg_style                              ; quotearg_style
00000000000098ba         mov        edx, 0x5
00000000000098bf         mov        r12, rax
00000000000098c2         lea        rsi, qword [aErrorDeallocat]                ; "error deallocating %s"
00000000000098c9         jmp        loc_97ba

                     loc_98ce:
00000000000098ce         sub        rsi, qword [rbp+var_3A0]                    ; CODE XREF=copy_internal+15418
00000000000098d5         mov        edi, dword [rbp+var_328]
00000000000098db         call       write_zeros                                 ; write_zeros
00000000000098e0         test       al, al
00000000000098e2         jne        loc_91da

00000000000098e8         jmp        loc_979a

                     loc_98ed:
00000000000098ed         mov        rax, qword [rbp+var_130]                    ; CODE XREF=copy_internal+12285
00000000000098f4         cmp        qword [rbp+var_370], rax
00000000000098fb         jbe        loc_8c23

0000000000009901         add        rax, 0x1
0000000000009905         mov        qword [rbp+var_370], rax
000000000000990c         jmp        loc_8c23

                     loc_9911:
0000000000009911         cmp        byte [rbp+var_2CF], 0x0                     ; CODE XREF=copy_internal+12529
0000000000009918         mov        rbx, qword [rbp+var_388]
000000000000991f         mov        r13d, dword [rbp+var_360]
0000000000009926         jne        loc_982b

000000000000992c         cmp        byte [rbp+var_2D0], 0x0
0000000000009933         je         loc_9b50

0000000000009939         xor        r9d, r9d
000000000000993c         cmp        dword [rbx+0xc], 0x3
0000000000009940         mov        eax, 0x0
0000000000009945         sete       r9b
0000000000009949         cmp        byte [rbp+var_3A5], 0x0
0000000000009950         cmovne     rax, qword [rbp+var_398]
0000000000009958         mov        qword [rbp+var_398], rax
000000000000995f         jmp        loc_9721

                     loc_9964:
0000000000009964         mov        edx, dword [rbp+var_320]                    ; CODE XREF=copy_internal+12006
000000000000996a         mov        edi, dword [rbp+var_328]                    ; argument "__fd" for method j_ioctl
0000000000009970         xor        eax, eax
0000000000009972         mov        esi, 0x40049409                             ; argument "__request" for method j_ioctl
0000000000009977         call       j_ioctl                                     ; ioctl
000000000000997c         test       eax, eax
000000000000997e         je         loc_91cf

0000000000009984         cmp        dword [rbx+0x38], 0x2
0000000000009988         jne        loc_8b0c

000000000000998e         mov        rdx, qword [rbp+var_310]
0000000000009995         mov        esi, 0x4
000000000000999a         mov        edi, 0x1
000000000000999f         call       quotearg_n_style                            ; quotearg_n_style
00000000000099a4         mov        rdx, qword [rbp+var_308]
00000000000099ab         mov        esi, 0x4
00000000000099b0         xor        edi, edi
00000000000099b2         mov        r12, rax
00000000000099b5         call       quotearg_n_style                            ; quotearg_n_style
00000000000099ba         lea        rsi, qword [aFailedToCloneS]                ; argument "msgid" for method j_dcgettext, "failed to clone %s from %s"
00000000000099c1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000099c6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000099c8         mov        qword [rbp+var_338], rax
00000000000099cf         call       j_dcgettext                                 ; dcgettext
00000000000099d4         mov        qword [rbp+var_330], rax
00000000000099db         call       j___errno_location                          ; __errno_location
00000000000099e0         mov        rcx, qword [rbp+var_338]
00000000000099e7         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000099e9         mov        r8, r12
00000000000099ec         mov        rdx, qword [rbp+var_330]                    ; argument "__format" for method j_error
00000000000099f3         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000099f5         xor        eax, eax
00000000000099f7         call       j_error                                     ; error
00000000000099fc         xor        r8d, r8d
00000000000099ff         mov        qword [rbp+var_330], 0x0
0000000000009a0a         jmp        loc_8eb5

                     loc_9a0f:
0000000000009a0f         mov        eax, dword [rbx+0xc]                        ; CODE XREF=copy_internal+12174
0000000000009a12         cmp        eax, 0x3
0000000000009a15         je         loc_9a9e

0000000000009a1b         cmp        eax, 0x2
0000000000009a1e         jne        loc_8bb4

0000000000009a24         test       byte [rbp+var_348], 0x1
0000000000009a2b         je         loc_8bb4

0000000000009a31         mov        rax, qword [rbp+var_370]
0000000000009a38         lea        rdi, qword [r12+rax]
0000000000009a3c         call       xmalloc                                     ; xmalloc
0000000000009a41         lea        rcx, qword [rax+r12-1]
0000000000009a46         mov        qword [rbp+var_330], rax
0000000000009a4d         xor        edx, edx
0000000000009a4f         mov        rax, rcx
0000000000009a52         div        r12
0000000000009a55         sub        rcx, rdx
0000000000009a58         mov        qword [rbp+var_3B0], rcx

                     loc_9a5f:
0000000000009a5f         mov        eax, dword [rbx+0xc]                        ; CODE XREF=copy_internal+16051
0000000000009a62         mov        dword [rbp+var_390], eax
0000000000009a68         movzx      eax, byte [rbp+var_338]
0000000000009a6f         mov        byte [rbp+var_3A5], al
0000000000009a75         jmp        loc_8c9c

                     loc_9a7a:
0000000000009a7a         mov        rax, qword [rbp+var_130]                    ; CODE XREF=copy_internal+12152
0000000000009a81         cqo
0000000000009a83         idiv       r8
0000000000009a86         cmp        qword [rbp+var_120], rax
0000000000009a8d         setl       al
0000000000009a90         movzx      eax, al
0000000000009a93         mov        dword [rbp+var_348], eax
0000000000009a99         jmp        loc_8b9e

                     loc_9a9e:
0000000000009a9e         mov        rax, qword [rbp+var_370]                    ; CODE XREF=copy_internal+15861
0000000000009aa5         lea        rdi, qword [r12+rax]
0000000000009aa9         call       xmalloc                                     ; xmalloc
0000000000009aae         lea        rcx, qword [rax+r12-1]
0000000000009ab3         xor        edx, edx
0000000000009ab5         mov        qword [rbp+var_330], rax
0000000000009abc         mov        rax, rcx
0000000000009abf         div        r12
0000000000009ac2         sub        rcx, rdx
0000000000009ac5         cmp        dword [rbp+var_348], 0x0
0000000000009acc         mov        qword [rbp+var_3B0], rcx
0000000000009ad3         jne        loc_9a5f

0000000000009ad5         xor        r9d, r9d
0000000000009ad8         cmp        dword [rbx+0xc], 0x3
0000000000009adc         lea        rax, qword [rbp+var_2F0]
0000000000009ae3         mov        qword [rbp+var_348], rax
0000000000009aea         sete       r9b
0000000000009aee         jmp        loc_9721

                     loc_9af3:
0000000000009af3         mov        rdx, qword [rbp+var_308]                    ; CODE XREF=copy_internal+14776
0000000000009afa         mov        esi, 0x3
0000000000009aff         xor        edi, edi
0000000000009b01         mov        rbx, qword [rbp+var_388]
0000000000009b08         mov        r13d, dword [rbp+var_360]
0000000000009b0f         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000009b14         lea        rsi, qword [aSWriteFailed]                  ; "%s: write failed"
0000000000009b1b         mov        r12, rax
0000000000009b1e         mov        edx, 0x5

                     loc_9b23:
0000000000009b23         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=copy_internal+16605
0000000000009b25         call       j_dcgettext                                 ; dcgettext
0000000000009b2a         mov        qword [rbp+var_338], rax
0000000000009b31         call       j___errno_location                          ; __errno_location
0000000000009b36         mov        rdx, qword [rbp+var_338]                    ; argument "__format" for method j_error
0000000000009b3d         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000009b3f         mov        rcx, r12
0000000000009b42         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000009b44         xor        eax, eax
0000000000009b46         call       j_error                                     ; error
0000000000009b4b         jmp        loc_8ea6

                     loc_9b50:
0000000000009b50         mov        rdx, qword [rbp+var_310]                    ; CODE XREF=copy_internal+15635
0000000000009b57         mov        esi, 0x3
0000000000009b5c         xor        edi, edi
0000000000009b5e         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000009b63         mov        edx, 0x5
0000000000009b68         mov        r12, rax
0000000000009b6b         lea        rsi, qword [aSFailedToGetEx]                ; "%s: failed to get extents info"
0000000000009b72         jmp        loc_97ba

                     loc_9b77:
0000000000009b77         call       cached_umask                                ; cached_umask, CODE XREF=copy_internal+13916
0000000000009b7c         mov        esi, dword [rbp+var_328]
0000000000009b82         not        eax
0000000000009b84         mov        rdi, qword [rbp+var_308]
0000000000009b8b         mov        edx, eax
0000000000009b8d         mov        r14d, r12d
0000000000009b90         and        edx, 0x1b6
0000000000009b96         call       set_acl                                     ; set_acl
0000000000009b9b         test       eax, eax
0000000000009b9d         sete       r8b
0000000000009ba1         jmp        loc_8eb5

                     loc_9ba6:
0000000000009ba6         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+13134
0000000000009bad         mov        edi, 0x4
0000000000009bb2         call       quotearg_style                              ; quotearg_style
0000000000009bb7         lea        rsi, qword [aCannotRemoveS]                 ; argument "msgid" for method j_dcgettext, "cannot remove %s"
0000000000009bbe         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000009bc3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000009bc5         mov        qword [rbp+var_328], rax
0000000000009bcc         call       j_dcgettext                                 ; dcgettext
0000000000009bd1         mov        rcx, qword [rbp+var_328]
0000000000009bd8         mov        rdx, rax
0000000000009bdb         mov        esi, dword [r12]
0000000000009bdf         jmp        loc_7d61

                     loc_9be4:
0000000000009be4         lea        rsi, qword [aFailedToPreser]                ; argument "msgid" for method j_dcgettext, "failed to preserve ownership for %s", CODE XREF=copy_internal+14276
0000000000009beb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000009bed         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000009bf2         call       j_dcgettext                                 ; dcgettext
0000000000009bf7         mov        r12, rax
0000000000009bfa         call       j___errno_location                          ; __errno_location
0000000000009bff         mov        rcx, qword [rbp+var_308]
0000000000009c06         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000009c08         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000009c0a         xor        eax, eax
0000000000009c0c         mov        rdx, r12                                    ; argument "__format" for method j_error
0000000000009c0f         call       j_error                                     ; error
0000000000009c14         movzx      r8d, byte [rbx+0x24]
0000000000009c19         test       r8b, r8b
0000000000009c1c         jne        loc_6bb0

0000000000009c22         jmp        loc_619f

                     loc_9c27:
0000000000009c27         mov        rsi, qword [rbp+var_308]                    ; CODE XREF=copy_internal+14361
0000000000009c2e         mov        edi, 0x4
0000000000009c33         mov        byte [rbp+var_328], r8b
0000000000009c3a         call       quotearg_style                              ; quotearg_style
0000000000009c3f         lea        rsi, qword [aNotWritingThro]                ; argument "msgid" for method j_dcgettext, "not writing through dangling symlink %s"
0000000000009c46         mov        r12, rax
0000000000009c49         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000009c4e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000009c50         call       j_dcgettext                                 ; dcgettext
0000000000009c55         mov        rcx, r12
0000000000009c58         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000009c5b         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000009c5d         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000009c5f         xor        eax, eax
0000000000009c61         call       j_error                                     ; error
0000000000009c66         mov        qword [rbp+var_330], 0x0
0000000000009c71         movzx      r8d, byte [rbp+var_328]
0000000000009c79         jmp        loc_7d78

                     loc_9c7e:
0000000000009c7e         call       j_geteuid                                   ; geteuid, CODE XREF=copy_internal+13873
0000000000009c83         test       eax, eax
0000000000009c85         je         loc_9257

0000000000009c8b         mov        rsi, qword [rbp+var_308]
0000000000009c92         mov        edi, dword [rbp+var_328]
0000000000009c98         mov        edx, 0x180
0000000000009c9d         call       fchmod_or_lchmod                            ; fchmod_or_lchmod
0000000000009ca2         test       eax, eax
0000000000009ca4         jne        loc_9257

0000000000009caa         mov        edx, dword [rbp+var_378]
0000000000009cb0         mov        rsi, qword [rbp+var_308]
0000000000009cb7         mov        edi, dword [rbp+var_328]
0000000000009cbd         not        edx
0000000000009cbf         and        edx, dword [rbp+var_3A4]
0000000000009cc5         call       fchmod_or_lchmod                            ; fchmod_or_lchmod
0000000000009cca         jmp        loc_9257

                     loc_9ccf:
0000000000009ccf         mov        rsi, qword [rbp+var_310]                    ; CODE XREF=copy_internal+12858
0000000000009cd6         mov        edi, 0x4
0000000000009cdb         mov        rbx, qword [rbp+var_388]
0000000000009ce2         mov        r13d, dword [rbp+var_360]
0000000000009ce9         call       quotearg_style                              ; quotearg_style
0000000000009cee         mov        edx, 0x5
0000000000009cf3         mov        r12, rax
0000000000009cf6         lea        rsi, qword [aCannotLseekS]                  ; "cannot lseek %s"
0000000000009cfd         jmp        loc_9b23

                     loc_9d02:
0000000000009d02         mov        edx, dword [rbx+0x10]                       ; CODE XREF=copy_internal+13903
0000000000009d05         mov        esi, dword [rbp+var_328]
0000000000009d0b         mov        rdi, qword [rbp+var_308]
0000000000009d12         call       set_acl                                     ; set_acl
0000000000009d17         test       eax, eax
0000000000009d19         sete       r8b
0000000000009d1d         jmp        loc_8eb5

                     loc_9d22:
0000000000009d22         call       sub_30d0                                    ; sub_30d0, CODE XREF=copy_internal+14597
0000000000009d27         jmp        loc_88da
0000000000009d2c         align      16                                          ; End of unwind block (FDE at 0x19f54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_11: int8_t, -17


                     copy:
0000000000009d30         sub        rsp, 0x18                                   ; Begin of unwind block (FDE at 0x19f84), CODE XREF=install_file_in_file+125
0000000000009d34         mov        rax, qword [fs:0x28]
0000000000009d3d         mov        qword [rsp+0x18+var_10], rax
0000000000009d42         xor        eax, eax
0000000000009d44         test       rcx, rcx
0000000000009d47         je         loc_9e76

0000000000009d4d         cmp        dword [rcx], 0x3
0000000000009d50         ja         loc_9e57

0000000000009d56         mov        eax, dword [rcx+0xc]
0000000000009d59         lea        r10d, dword [rax-1]
0000000000009d5d         cmp        r10d, 0x2
0000000000009d61         ja         loc_9e38

0000000000009d67         mov        r10d, dword [rcx+0x38]
0000000000009d6b         cmp        r10d, 0x2
0000000000009d6f         ja         loc_9e19

0000000000009d75         cmp        byte [rcx+0x17], 0x0
0000000000009d79         jne        loc_9dd0

                     loc_9d7b:
0000000000009d7b         cmp        eax, 0x2                                    ; CODE XREF=copy+164
0000000000009d7e         je         loc_9d86

0000000000009d80         cmp        r10d, 0x2
0000000000009d84         je         loc_9df5

                     loc_9d86:
0000000000009d86         mov        byte [rsp+0x18+var_11], 0x0                 ; CODE XREF=copy+78
0000000000009d8b         push       r9
0000000000009d8d         movzx      edx, dl
0000000000009d90         push       r8
0000000000009d92         mov        r9, rcx
0000000000009d95         xor        r8d, r8d
0000000000009d98         xor        ecx, ecx
0000000000009d9a         mov        qword [top_level_dst_name], rsi             ; top_level_dst_name
0000000000009da1         mov        qword [top_level_src_name], rdi             ; top_level_src_name
0000000000009da8         lea        rax, qword [rsp+0x28+var_11]
0000000000009dad         push       rax
0000000000009dae         push       0x1
0000000000009db0         call       copy_internal                               ; copy_internal
0000000000009db5         add        rsp, 0x20
0000000000009db9         mov        rsi, qword [rsp+0x18+var_10]
0000000000009dbe         xor        rsi, qword [fs:0x28]
0000000000009dc7         jne        loc_9e14

0000000000009dc9         add        rsp, 0x18
0000000000009dcd         ret
                        ; endp
0000000000009dce         align      16

                     loc_9dd0:
0000000000009dd0         cmp        byte [rcx+0x2c], 0x0                        ; CODE XREF=copy+73
0000000000009dd4         je         loc_9d7b

0000000000009dd6         lea        rcx, qword [__PRETTY_FUNCTION__.7875]       ; argument "__function" for method j___assert_fail, "valid_options"
0000000000009ddd         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/copy.c"
0000000000009de4         lea        rdi, qword [aCohardlinkCosy]                ; argument "__assertion" for method j___assert_fail, "!(co->hard_link && co->symbolic_link)"
0000000000009deb         mov        edx, 0xb8a                                  ; argument "__line" for method j___assert_fail
0000000000009df0         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_9df5:
0000000000009df5         lea        rcx, qword [__PRETTY_FUNCTION__.7875]       ; argument "__function" for method j___assert_fail, "valid_options", CODE XREF=copy+84
0000000000009dfc         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/copy.c"
0000000000009e03         lea        rdi, qword [aCoreflinkmodeR]                ; argument "__assertion" for method j___assert_fail, "! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)"
0000000000009e0a         mov        edx, 0xb8d                                  ; argument "__line" for method j___assert_fail
0000000000009e0f         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_9e14:
0000000000009e14         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=copy+151
                        ; endp

                     loc_9e19:
0000000000009e19         lea        rcx, qword [__PRETTY_FUNCTION__.7875]       ; argument "__function" for method j___assert_fail, "valid_options", CODE XREF=copy+63
0000000000009e20         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/copy.c"
0000000000009e27         lea        rdi, qword [aValidreflinkmo]                ; argument "__assertion" for method j___assert_fail, "VALID_REFLINK_MODE (co->reflink_mode)"
0000000000009e2e         mov        edx, 0xb89                                  ; argument "__line" for method j___assert_fail
0000000000009e33         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_9e38:
0000000000009e38         lea        rcx, qword [__PRETTY_FUNCTION__.7875]       ; argument "__function" for method j___assert_fail, "valid_options", CODE XREF=copy+49
0000000000009e3f         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/copy.c"
0000000000009e46         lea        rdi, qword [aValidsparsemod]                ; argument "__assertion" for method j___assert_fail, "VALID_SPARSE_MODE (co->sparse_mode)"
0000000000009e4d         mov        edx, 0xb88                                  ; argument "__line" for method j___assert_fail
0000000000009e52         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_9e57:
0000000000009e57         lea        rcx, qword [__PRETTY_FUNCTION__.7875]       ; argument "__function" for method j___assert_fail, "valid_options", CODE XREF=copy+32
0000000000009e5e         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/copy.c"
0000000000009e65         lea        rdi, qword [aValidbackuptyp]                ; argument "__assertion" for method j___assert_fail, "VALID_BACKUP_TYPE (co->backup_type)"
0000000000009e6c         mov        edx, 0xb87                                  ; argument "__line" for method j___assert_fail
0000000000009e71         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_9e76:
0000000000009e76         lea        rcx, qword [__PRETTY_FUNCTION__.7875]       ; argument "__function" for method j___assert_fail, "valid_options", CODE XREF=copy+23
0000000000009e7d         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/copy.c"
0000000000009e84         lea        rdi, qword [aCoNull]                        ; argument "__assertion" for method j___assert_fail, "co != NULL"
0000000000009e8b         mov        edx, 0xb86                                  ; argument "__line" for method j___assert_fail
0000000000009e90         call       j___assert_fail                             ; __assert_fail
                        ; endp
0000000000009e95         align      32                                          ; End of unwind block (FDE at 0x19f84)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     src_to_dest_hash:
0000000000009ea0         mov        rax, qword [rdi]                            ; Begin of unwind block (FDE at 0x19fb4), DATA XREF=hash_init+14
0000000000009ea3         xor        edx, edx
0000000000009ea5         div        rsi
0000000000009ea8         mov        rax, rdx
0000000000009eab         ret
                        ; endp
0000000000009eac         align      16                                          ; End of unwind block (FDE at 0x19fb4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     src_to_dest_compare:
0000000000009eb0         xor        eax, eax                                    ; Begin of unwind block (FDE at 0x19fc8), DATA XREF=hash_init+7
0000000000009eb2         mov        rdx, qword [rsi]
0000000000009eb5         cmp        qword [rdi], rdx
0000000000009eb8         je         loc_9ec0

0000000000009eba         ret
                        ; endp
0000000000009ebc         align      64

                     loc_9ec0:
0000000000009ec0         mov        rax, qword [rsi+8]                          ; CODE XREF=src_to_dest_compare+8
0000000000009ec4         cmp        qword [rdi+8], rax
0000000000009ec8         sete       al
0000000000009ecb         ret
                        ; endp
0000000000009ecc         align      16                                          ; End of unwind block (FDE at 0x19fc8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     src_to_dest_free:
0000000000009ed0         push       rbx                                         ; Begin of unwind block (FDE at 0x19fdc), DATA XREF=hash_init
0000000000009ed1         mov        rbx, rdi
0000000000009ed4         mov        rdi, qword [rdi+0x10]
0000000000009ed8         call       sub_30d0                                    ; sub_30d0
0000000000009edd         mov        rdi, rbx
0000000000009ee0         pop        rbx
0000000000009ee1         jmp        sub_30d0                                    ; sub_30d0
                        ; endp
0000000000009ee6         align      16                                          ; End of unwind block (FDE at 0x19fdc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     forget_created:
0000000000009ef0         push       rbx                                         ; Begin of unwind block (FDE at 0x19ff8), CODE XREF=copy_internal+4557, copy_internal+6222
0000000000009ef1         sub        rsp, 0x20
0000000000009ef5         mov        qword [rsp+0x28+var_28], rdi
0000000000009ef9         mov        rdi, qword [src_to_dest]                    ; src_to_dest
0000000000009f00         mov        qword [rsp+0x28+var_20], rsi
0000000000009f05         mov        rsi, rsp
0000000000009f08         mov        qword [rsp+0x28+var_18], 0x0
0000000000009f11         mov        rax, qword [fs:0x28]
0000000000009f1a         mov        qword [rsp+0x28+var_10], rax
0000000000009f1f         xor        eax, eax
0000000000009f21         call       hash_delete                                 ; hash_delete
0000000000009f26         test       rax, rax
0000000000009f29         je         loc_9f3f

0000000000009f2b         mov        rdi, qword [rax+0x10]
0000000000009f2f         mov        rbx, rax
0000000000009f32         call       sub_30d0                                    ; sub_30d0
0000000000009f37         mov        rdi, rbx
0000000000009f3a         call       sub_30d0                                    ; sub_30d0

                     loc_9f3f:
0000000000009f3f         mov        rax, qword [rsp+0x28+var_10]                ; CODE XREF=forget_created+57
0000000000009f44         xor        rax, qword [fs:0x28]
0000000000009f4d         jne        loc_9f55

0000000000009f4f         add        rsp, 0x20
0000000000009f53         pop        rbx
0000000000009f54         ret
                        ; endp

                     loc_9f55:
0000000000009f55         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=forget_created+93
                        ; endp
0000000000009f5a         align      32                                          ; End of unwind block (FDE at 0x19ff8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     src_to_dest_lookup:
0000000000009f60         sub        rsp, 0x28                                   ; Begin of unwind block (FDE at 0x1a01c), CODE XREF=copy_internal+6419, copy_internal+6518
0000000000009f64         mov        qword [rsp+0x28+var_28], rdi
0000000000009f68         mov        rdi, qword [src_to_dest]                    ; src_to_dest
0000000000009f6f         mov        qword [rsp+0x28+var_20], rsi
0000000000009f74         mov        rsi, rsp
0000000000009f77         mov        rax, qword [fs:0x28]
0000000000009f80         mov        qword [rsp+0x28+var_10], rax
0000000000009f85         xor        eax, eax
0000000000009f87         call       hash_lookup                                 ; hash_lookup
0000000000009f8c         test       rax, rax
0000000000009f8f         je         loc_9fb0

0000000000009f91         mov        rax, qword [rax+0x10]

                     loc_9f95:
0000000000009f95         mov        rdx, qword [rsp+0x28+var_10]                ; CODE XREF=src_to_dest_lookup+82
0000000000009f9a         xor        rdx, qword [fs:0x28]
0000000000009fa3         jne        loc_9fb4

0000000000009fa5         add        rsp, 0x28
0000000000009fa9         ret
                        ; endp
0000000000009faa         align      16

                     loc_9fb0:
0000000000009fb0         xor        eax, eax                                    ; CODE XREF=src_to_dest_lookup+47
0000000000009fb2         jmp        loc_9f95

                     loc_9fb4:
0000000000009fb4         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=src_to_dest_lookup+67
                        ; endp
0000000000009fb9         align      64                                          ; End of unwind block (FDE at 0x1a01c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     remember_copied:
0000000000009fc0         push       r13                                         ; Begin of unwind block (FDE at 0x1a038), CODE XREF=copy_internal+716, copy_internal+4209, copy_internal+5405, copy_internal+11009
0000000000009fc2         push       r12
0000000000009fc4         mov        r13, rdi
0000000000009fc7         push       rbp
0000000000009fc8         push       rbx
0000000000009fc9         mov        edi, 0x18                                   ; argument #1 for method xmalloc
0000000000009fce         mov        r12, rsi
0000000000009fd1         mov        rbp, rdx
0000000000009fd4         sub        rsp, 0x8
0000000000009fd8         call       xmalloc                                     ; xmalloc
0000000000009fdd         mov        rdi, r13
0000000000009fe0         mov        rbx, rax
0000000000009fe3         call       xstrdup                                     ; xstrdup
0000000000009fe8         mov        rdi, qword [src_to_dest]                    ; argument #1 for method hash_insert, src_to_dest
0000000000009fef         mov        rsi, rbx                                    ; argument #2 for method hash_insert
0000000000009ff2         mov        qword [rbx+0x10], rax
0000000000009ff6         mov        qword [rbx], r12
0000000000009ff9         mov        qword [rbx+8], rbp
0000000000009ffd         call       hash_insert                                 ; hash_insert
000000000000a002         test       rax, rax
000000000000a005         je         loc_a034

000000000000a007         cmp        rbx, rax
000000000000a00a         mov        rbp, rax
000000000000a00d         je         loc_a030

000000000000a00f         mov        rdi, qword [rbx+0x10]
000000000000a013         call       sub_30d0                                    ; sub_30d0
000000000000a018         mov        rdi, rbx
000000000000a01b         call       sub_30d0                                    ; sub_30d0
000000000000a020         mov        rax, qword [rbp+0x10]

                     loc_a024:
000000000000a024         add        rsp, 0x8                                    ; CODE XREF=remember_copied+114
000000000000a028         pop        rbx
000000000000a029         pop        rbp
000000000000a02a         pop        r12
000000000000a02c         pop        r13
000000000000a02e         ret
                        ; endp
000000000000a02f         align      16

                     loc_a030:
000000000000a030         xor        eax, eax                                    ; CODE XREF=remember_copied+77
000000000000a032         jmp        loc_a024

                     loc_a034:
000000000000a034         call       xalloc_die                                  ; xalloc_die, CODE XREF=remember_copied+69
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_a039:
000000000000a039         nop        dword [rax]                                 ; End of unwind block (FDE at 0x1a038)
                     hash_init:
000000000000a040         lea        r8, qword [src_to_dest_free]                ; Begin of unwind block (FDE at 0x1a074), argument #5 for method hash_initialize, src_to_dest_free, CODE XREF=main+1614
000000000000a047         lea        rcx, qword [src_to_dest_compare]            ; argument #4 for method hash_initialize, src_to_dest_compare
000000000000a04e         lea        rdx, qword [src_to_dest_hash]               ; argument #3 for method hash_initialize, src_to_dest_hash
000000000000a055         sub        rsp, 0x8
000000000000a059         xor        esi, esi                                    ; argument #2 for method hash_initialize
000000000000a05b         mov        edi, 0x67                                   ; argument #1 for method hash_initialize
000000000000a060         call       hash_initialize                             ; hash_initialize
000000000000a065         test       rax, rax
000000000000a068         mov        qword [src_to_dest], rax                    ; src_to_dest
000000000000a06f         je         loc_a076

000000000000a071         add        rsp, 0x8
000000000000a075         ret
                        ; endp

                     loc_a076:
000000000000a076         call       xalloc_die                                  ; xalloc_die, CODE XREF=hash_init+47
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_a07b:
000000000000a07b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x1a074)
                     forget_all:
000000000000a080         mov        rdi, qword [src_to_dest]                    ; Begin of unwind block (FDE at 0x1a090), src_to_dest
000000000000a087         jmp        hash_free                                   ; hash_free
                        ; endp
000000000000a08c         align      16                                          ; End of unwind block (FDE at 0x1a090)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     extent_scan_init:
000000000000a090         mov        dword [rsi], edi                            ; Begin of unwind block (FDE at 0x1a0a4), CODE XREF=copy_internal+12452
000000000000a092         mov        qword [rsi+0x18], 0x0
000000000000a09a         mov        qword [rsi+0x28], 0x0
000000000000a0a2         mov        qword [rsi+8], 0x0
000000000000a0aa         mov        byte [rsi+0x20], 0x0
000000000000a0ae         mov        byte [rsi+0x21], 0x0
000000000000a0b2         mov        dword [rsi+0x10], 0x1
000000000000a0b9         ret
                        ; endp
000000000000a0ba         align      64                                          ; End of unwind block (FDE at 0x1a0a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_1018: int64_t, -4120
        ;    var_1028: int64_t, -4136
        ;    var_1030: int32_t, -4144
        ;    var_1034: int32_t, -4148
        ;    var_1038: int32_t, -4152
        ;    var_1040: int64_t, -4160
        ;    var_1048: int64_t, -4168


                     extent_scan_read:
000000000000a0c0         push       r15                                         ; Begin of unwind block (FDE at 0x1a0b8), CODE XREF=copy_internal+12522
000000000000a0c2         push       r14
000000000000a0c4         xor        r15d, r15d
000000000000a0c7         push       r13
000000000000a0c9         push       r12
000000000000a0cb         mov        r14, rdi
000000000000a0ce         push       rbp
000000000000a0cf         push       rbx
000000000000a0d0         movabs     r13, 0x7fffffffffffffff
000000000000a0da         sub        rsp, 0x1018
000000000000a0e1         mov        rbx, qword [rdi+0x28]
000000000000a0e5         mov        rdx, qword [rdi+8]
000000000000a0e9         mov        rbp, rsp
000000000000a0ec         mov        rax, qword [fs:0x28]
000000000000a0f5         mov        qword [rsp+0x1048+var_40], rax
000000000000a0fd         xor        eax, eax
000000000000a0ff         lea        r12, qword [rbp+0x20]

                     loc_a103:
000000000000a103         xor        eax, eax                                    ; CODE XREF=extent_scan_read+698
000000000000a105         mov        ecx, 0x200
000000000000a10a         mov        rdi, rbp
000000000000a10d         rep stosq  qword [rdi], rax
000000000000a110         mov        eax, dword [r14+0x10]
000000000000a114         mov        edi, dword [r14]                            ; argument "__fd" for method j_ioctl
000000000000a117         mov        esi, 0xc020660b                             ; argument "__request" for method j_ioctl
000000000000a11c         mov        qword [rsp+0x1048+var_1048], rdx
000000000000a120         not        rdx
000000000000a123         mov        dword [rsp+0x1048+var_1030], 0x48
000000000000a12b         mov        qword [rsp+0x1048+var_1040], rdx
000000000000a130         mov        rdx, rbp
000000000000a133         mov        dword [rsp+0x1048+var_1038], eax
000000000000a137         xor        eax, eax
000000000000a139         call       j_ioctl                                     ; ioctl
000000000000a13e         test       eax, eax
000000000000a140         js         loc_a210

000000000000a146         mov        eax, dword [rsp+0x1048+var_1034]
000000000000a14a         test       eax, eax
000000000000a14c         je         loc_a388

000000000000a152         mov        rcx, qword [r14+0x18]
000000000000a156         mov        rdx, rax
000000000000a159         not        rdx
000000000000a15c         cmp        rcx, rdx
000000000000a15f         ja         loc_a39a

000000000000a165         mov        rdi, qword [r14+0x28]
000000000000a169         mov        edx, 0x18
000000000000a16e         add        rcx, rax
000000000000a171         mov        rax, rdx
000000000000a174         xor        esi, esi
000000000000a176         mov        qword [r14+0x18], rcx
000000000000a17a         sub        rbx, rdi
000000000000a17d         mul        rcx
000000000000a180         jo         loc_a3b9

                     loc_a186:
000000000000a186         test       rax, rax                                    ; CODE XREF=extent_scan_read+766
000000000000a189         js         loc_a3c3

000000000000a18f         test       rsi, rsi
000000000000a192         jne        loc_a3c3

000000000000a198         lea        rsi, qword [rcx+rcx*2]
000000000000a19c         shl        rsi, 0x3
000000000000a1a0         call       xrealloc                                    ; xrealloc
000000000000a1a5         mov        r8d, dword [rsp+0x1048+var_1034]
000000000000a1aa         add        rbx, rax
000000000000a1ad         mov        qword [r14+0x28], rax
000000000000a1b1         test       r8d, r8d
000000000000a1b4         je         loc_a2f0

000000000000a1ba         mov        rax, qword [rsp+0x1048+var_1018]
000000000000a1bf         mov        rdx, qword [rsp+0x1048+var_1028]
000000000000a1c4         mov        rcx, r13
000000000000a1c7         sub        rcx, rax
000000000000a1ca         cmp        rdx, rcx
000000000000a1cd         ja         loc_a2aa

000000000000a1d3         xor        ecx, ecx
000000000000a1d5         mov        rsi, r12

                     loc_a1d8:
000000000000a1d8         test       r15d, r15d                                  ; CODE XREF=extent_scan_read+484
000000000000a1db         je         loc_a250

000000000000a1dd         mov        r9d, dword [rsi+0x28]
000000000000a1e1         mov        r10, qword [rbx+8]
000000000000a1e5         mov        rdi, qword [rbx]
000000000000a1e8         mov        r11d, r9d
000000000000a1eb         add        rdi, r10
000000000000a1ee         and        r11d, 0xfffffffe
000000000000a1f2         cmp        dword [rbx+0x10], r11d
000000000000a1f6         je         loc_a2d0

                     loc_a1fc:
000000000000a1fc         cmp        rdi, rdx                                    ; CODE XREF=extent_scan_read+531
000000000000a1ff         jbe        loc_a25d

                     loc_a201:
000000000000a201         mov        r10, rdi                                    ; CODE XREF=extent_scan_read+407
000000000000a204         sub        r10, rdx
000000000000a207         cmp        r10, rax
000000000000a20a         jae        loc_a328

                     loc_a210:
000000000000a210         xor        eax, eax                                    ; CODE XREF=extent_scan_read+128
000000000000a212         cmp        qword [r14+8], 0x0
000000000000a217         jne        loc_a220

000000000000a219         mov        byte [r14+0x20], 0x1
000000000000a21e         xor        eax, eax

                     loc_a220:
000000000000a220         mov        rbx, qword [rsp+0x1048+var_40]              ; CODE XREF=extent_scan_read+343, extent_scan_read+657, extent_scan_read+725
000000000000a228         xor        rbx, qword [fs:0x28]
000000000000a231         jne        loc_a3c8

000000000000a237         add        rsp, 0x1018
000000000000a23e         pop        rbx
000000000000a23f         pop        rbp
000000000000a240         pop        r12
000000000000a242         pop        r13
000000000000a244         pop        r14
000000000000a246         pop        r15
000000000000a248         ret
                        ; endp
000000000000a249         align      16

                     loc_a250:
000000000000a250         mov        rdi, qword [r14+8]                          ; CODE XREF=extent_scan_read+283
000000000000a254         cmp        rdi, rdx
000000000000a257         ja         loc_a201

000000000000a259         mov        r9d, dword [rsi+0x28]

                     loc_a25d:
000000000000a25d         mov        esi, r15d                                   ; CODE XREF=extent_scan_read+319
000000000000a260         add        r15d, 0x1
000000000000a264         lea        rdi, qword [rsi+rsi*2]
000000000000a268         mov        rsi, qword [r14+0x28]
000000000000a26c         lea        rbx, qword [rsi+rdi*8]
000000000000a270         mov        qword [rbx], rdx
000000000000a273         mov        qword [rbx+8], rax
000000000000a277         mov        dword [rbx+0x10], r9d

                     loc_a27b:
000000000000a27b         add        ecx, 0x1                                    ; CODE XREF=extent_scan_read+629
000000000000a27e         cmp        ecx, r8d
000000000000a281         jae        loc_a2f0

                     loc_a283:
000000000000a283         mov        edx, ecx                                    ; CODE XREF=extent_scan_read+554
000000000000a285         mov        rdi, r13
000000000000a288         lea        rax, qword [rdx*8]
000000000000a290         sub        rax, rdx
000000000000a293         lea        rsi, qword [r12+rax*8]
000000000000a297         mov        rax, qword [rsi+0x10]
000000000000a29b         mov        rdx, qword [rsi]
000000000000a29e         sub        rdi, rax
000000000000a2a1         cmp        rdx, rdi
000000000000a2a4         jbe        loc_a1d8

                     loc_a2aa:
000000000000a2aa         lea        rcx, qword [__PRETTY_FUNCTION__.6956]       ; argument "__function" for method j___assert_fail, "extent_scan_read", CODE XREF=extent_scan_read+269
000000000000a2b1         lea        rsi, qword [aCoreutils831sr_18008]          ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/extent-scan.c"
000000000000a2b8         lea        rdi, qword [aFmextentsifelo]                ; argument "__assertion" for method j___assert_fail, "fm_extents[i].fe_logical <= OFF_T_MAX - fm_extents[i].fe_length"
000000000000a2bf         mov        edx, 0x8d                                   ; argument "__line" for method j___assert_fail
000000000000a2c4         call       j___assert_fail                             ; __assert_fail
                        ; endp
000000000000a2c9         align      16

                     loc_a2d0:
000000000000a2d0         cmp        rdi, rdx                                    ; CODE XREF=extent_scan_read+310
000000000000a2d3         jne        loc_a1fc

000000000000a2d9         add        ecx, 0x1
000000000000a2dc         add        rax, r10
000000000000a2df         mov        dword [rbx+0x10], r9d
000000000000a2e3         cmp        ecx, r8d
000000000000a2e6         mov        qword [rbx+8], rax
000000000000a2ea         jb         loc_a283

000000000000a2ec         nop        dword [rax]

                     loc_a2f0:
000000000000a2f0         test       byte [rbx+0x10], 0x1                        ; CODE XREF=extent_scan_read+244, extent_scan_read+449
000000000000a2f4         jne        loc_a340

000000000000a2f6         cmp        r15d, 0x48
000000000000a2fa         movzx      eax, byte [r14+0x21]
000000000000a2ff         jbe        loc_a360

000000000000a301         test       al, al
000000000000a303         jne        loc_a345

000000000000a305         lea        eax, dword [r15-1]
000000000000a309         mov        rdx, qword [r14+0x28]
000000000000a30d         lea        rcx, qword [rax+rax*2]
000000000000a311         mov        qword [r14+0x18], rax
000000000000a315         mov        rax, qword [rdx+rcx*8-0x18]
000000000000a31a         add        rax, qword [rdx+rcx*8-0x10]
000000000000a31f         mov        qword [r14+8], rax
000000000000a323         jmp        loc_a34c
000000000000a325         align      8

                     loc_a328:
000000000000a328         sub        rax, r10                                    ; CODE XREF=extent_scan_read+330
000000000000a32b         mov        qword [rsi], rdi
000000000000a32e         sub        ecx, 0x1
000000000000a331         mov        qword [rsi+0x10], rax
000000000000a335         jmp        loc_a27b
000000000000a33a         align      64

                     loc_a340:
000000000000a340         mov        byte [r14+0x21], 0x1                        ; CODE XREF=extent_scan_read+564

                     loc_a345:
000000000000a345         mov        eax, r15d                                   ; CODE XREF=extent_scan_read+579
000000000000a348         mov        qword [r14+0x18], rax

                     loc_a34c:
000000000000a34c         mov        eax, 0x1                                    ; CODE XREF=extent_scan_read+611, extent_scan_read+681, extent_scan_read+704
000000000000a351         jmp        loc_a220
000000000000a356         align      32

                     loc_a360:
000000000000a360         mov        ecx, r15d                                   ; CODE XREF=extent_scan_read+575
000000000000a363         test       al, al
000000000000a365         mov        qword [r14+0x18], rcx
000000000000a369         jne        loc_a34c

000000000000a36b         mov        rdx, qword [rbx+8]
000000000000a36f         add        rdx, qword [rbx]
000000000000a372         cmp        r15d, 0x47
000000000000a376         mov        qword [r14+8], rdx
000000000000a37a         jbe        loc_a103

000000000000a380         jmp        loc_a34c
000000000000a382         align      8

                     loc_a388:
000000000000a388         cmp        qword [r14+8], 0x0                          ; CODE XREF=extent_scan_read+140
000000000000a38d         mov        byte [r14+0x21], 0x1
000000000000a392         setne      al
000000000000a395         jmp        loc_a220

                     loc_a39a:
000000000000a39a         lea        rcx, qword [__PRETTY_FUNCTION__.6956]       ; argument "__function" for method j___assert_fail, "extent_scan_read", CODE XREF=extent_scan_read+159
000000000000a3a1         lea        rsi, qword [aCoreutils831sr_18008]          ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/extent-scan.c"
000000000000a3a8         lea        rdi, qword [aScaneicountSiz]                ; argument "__assertion" for method j___assert_fail, "scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents"
000000000000a3af         mov        edx, 0x7e                                   ; argument "__line" for method j___assert_fail
000000000000a3b4         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_a3b9:
000000000000a3b9         mov        esi, 0x1                                    ; CODE XREF=extent_scan_read+192
000000000000a3be         jmp        loc_a186

                     loc_a3c3:
000000000000a3c3         call       xalloc_die                                  ; xalloc_die, CODE XREF=extent_scan_read+201, extent_scan_read+210
                        ; endp

                     loc_a3c8:
000000000000a3c8         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=extent_scan_read+369
                        ; endp
000000000000a3cd         align      16                                          ; End of unwind block (FDE at 0x1a0b8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     try_link:
000000000000a3d0         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x1a10c), DATA XREF=force_linkat+113
000000000000a3d3         mov        rcx, rdi                                    ; argument "__to" for method j_linkat
000000000000a3d6         mov        edx, dword [rsi+0x10]                       ; argument "__tofd" for method j_linkat
000000000000a3d9         mov        r8d, dword [rax+0x14]                       ; argument "__flags" for method j_linkat
000000000000a3dd         mov        rsi, qword [rsi+8]                          ; argument "__from" for method j_linkat
000000000000a3e1         mov        edi, dword [rax]                            ; argument "__fromfd" for method j_linkat
000000000000a3e3         jmp        j_linkat                                    ; linkat
                        ; endp
000000000000a3e8         align      16                                          ; End of unwind block (FDE at 0x1a10c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     samedir_template:
000000000000a3f0         push       r12                                         ; Begin of unwind block (FDE at 0x1a120), CODE XREF=force_linkat+91, force_symlinkat+73
000000000000a3f2         push       rbp
000000000000a3f3         mov        rbp, rdi
000000000000a3f6         push       rbx
000000000000a3f7         mov        r12, rsi
000000000000a3fa         call       last_component                              ; last_component
000000000000a3ff         sub        rax, rbp
000000000000a402         lea        rdi, qword [rax+9]
000000000000a406         mov        rbx, rax
000000000000a409         cmp        rdi, 0x100
000000000000a410         jbe        loc_a421

000000000000a412         call       j_malloc                                    ; malloc
000000000000a417         mov        r12, rax
000000000000a41a         xor        eax, eax
000000000000a41c         test       r12, r12
000000000000a41f         je         loc_a443

                     loc_a421:
000000000000a421         mov        rdx, rbx                                    ; argument "__n" for method j_mempcpy, CODE XREF=samedir_template+32
000000000000a424         mov        rsi, rbp                                    ; argument "__src" for method j_mempcpy
000000000000a427         mov        rdi, r12                                    ; argument "__dest" for method j_mempcpy
000000000000a42a         call       j_mempcpy                                   ; mempcpy
000000000000a42f         movabs     rcx, 0x5858585858587543
000000000000a439         mov        byte [rax+8], 0x0
000000000000a43d         mov        qword [rax], rcx
000000000000a440         mov        rax, r12

                     loc_a443:
000000000000a443         pop        rbx                                         ; CODE XREF=samedir_template+47
000000000000a444         pop        rbp
000000000000a445         pop        r12
000000000000a447         ret
                        ; endp
000000000000a448         align      16                                          ; End of unwind block (FDE at 0x1a120)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     try_symlink:
000000000000a450         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x1a14c), DATA XREF=force_symlinkat+95
000000000000a453         mov        rdx, rdi                                    ; argument "__to" for method j_symlinkat
000000000000a456         mov        esi, dword [rsi+8]                          ; argument "__tofd" for method j_symlinkat
000000000000a459         mov        rdi, qword [rax]                            ; argument "__from" for method j_symlinkat
000000000000a45c         jmp        j_symlinkat                                 ; symlinkat
                        ; endp
000000000000a461         align      16                                          ; End of unwind block (FDE at 0x1a14c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_148: int8_t, -328
        ;    var_154: int32_t, -340
        ;    var_158: int32_t, -344
        ;    var_160: int64_t, -352
        ;    var_168: int32_t, -360
        ;    var_16C: int32_t, -364
        ;    var_178: int64_t, -376


                     force_linkat:
000000000000a470         push       r15                                         ; Begin of unwind block (FDE at 0x1a160), CODE XREF=create_hard_link+52
000000000000a472         push       r14
000000000000a474         mov        r14d, edi
000000000000a477         push       r13
000000000000a479         push       r12
000000000000a47b         mov        r13, rsi
000000000000a47e         push       rbp
000000000000a47f         push       rbx
000000000000a480         mov        rbx, rcx
000000000000a483         mov        ebp, edx
000000000000a485         mov        r12d, r8d
000000000000a488         sub        rsp, 0x148
000000000000a48f         mov        ecx, dword [rsp+0x178+arg_0]
000000000000a496         mov        rax, qword [fs:0x28]
000000000000a49f         mov        qword [rsp+0x178+var_40], rax
000000000000a4a7         xor        eax, eax
000000000000a4a9         test       ecx, ecx
000000000000a4ab         js         loc_a560

                     loc_a4b1:
000000000000a4b1         cmp        r9b, 0x1                                    ; CODE XREF=force_linkat+269
000000000000a4b5         jne        loc_a530

000000000000a4b7         cmp        ecx, 0x11
000000000000a4ba         jne        loc_a530

000000000000a4bc         lea        rax, qword [rsp+0x178+var_148]
000000000000a4c1         mov        rdi, rbx
000000000000a4c4         mov        rsi, rax
000000000000a4c7         mov        qword [rsp+0x178+var_178], rax
000000000000a4cb         call       samedir_template                            ; samedir_template
000000000000a4d0         test       rax, rax
000000000000a4d3         mov        r15, rax
000000000000a4d6         je         loc_a5c0

000000000000a4dc         lea        rdx, qword [rsp+0x178+var_168]
000000000000a4e1         lea        rcx, qword [try_link]                       ; try_link
000000000000a4e8         xor        esi, esi
000000000000a4ea         mov        r8d, 0x6
000000000000a4f0         mov        rdi, rax
000000000000a4f3         mov        dword [rsp+0x178+var_168], r14d
000000000000a4f8         mov        qword [rsp+0x178+var_160], r13
000000000000a4fd         mov        dword [rsp+0x178+var_158], ebp
000000000000a501         mov        dword [rsp+0x178+var_154], r12d
000000000000a506         call       try_tempname_len                            ; try_tempname_len
000000000000a50b         test       eax, eax
000000000000a50d         je         loc_a588

000000000000a50f         call       j___errno_location                          ; __errno_location
000000000000a514         mov        ecx, dword [rax]

                     loc_a516:
000000000000a516         cmp        r15, qword [rsp+0x178+var_178]              ; CODE XREF=force_linkat+331
000000000000a51a         je         loc_a530

000000000000a51c         mov        rdi, r15
000000000000a51f         mov        dword [rsp+0x178+var_178], ecx
000000000000a522         call       sub_30d0                                    ; sub_30d0
000000000000a527         mov        ecx, dword [rsp+0x178+var_178]
000000000000a52a         nop        word [rax+rax]

                     loc_a530:
000000000000a530         mov        rbx, qword [rsp+0x178+var_40]               ; CODE XREF=force_linkat+69, force_linkat+74, force_linkat+170, force_linkat+256, force_linkat+343
000000000000a538         xor        rbx, qword [fs:0x28]
000000000000a541         mov        eax, ecx
000000000000a543         jne        loc_a5cc

000000000000a549         add        rsp, 0x148
000000000000a550         pop        rbx
000000000000a551         pop        rbp
000000000000a552         pop        r12
000000000000a554         pop        r13
000000000000a556         pop        r14
000000000000a558         pop        r15
000000000000a55a         ret
                        ; endp
000000000000a55b         align      32

                     loc_a560:
000000000000a560         mov        rcx, rbx                                    ; argument "__to" for method j_linkat, CODE XREF=force_linkat+59
000000000000a563         mov        dword [rsp+0x178+var_178], r9d
000000000000a567         call       j_linkat                                    ; linkat
000000000000a56c         test       eax, eax
000000000000a56e         mov        ecx, eax
000000000000a570         je         loc_a530

000000000000a572         call       j___errno_location                          ; __errno_location
000000000000a577         mov        r9d, dword [rsp+0x178+var_178]
000000000000a57b         mov        ecx, dword [rax]
000000000000a57d         jmp        loc_a4b1
000000000000a582         align      8

                     loc_a588:
000000000000a588         mov        rcx, rbx                                    ; argument "__new" for method j_renameat, CODE XREF=force_linkat+157
000000000000a58b         mov        edx, ebp                                    ; argument "__newfd" for method j_renameat
000000000000a58d         mov        rsi, r15                                    ; argument "__old" for method j_renameat
000000000000a590         mov        edi, ebp                                    ; argument "__oldfd" for method j_renameat
000000000000a592         call       j_renameat                                  ; renameat
000000000000a597         test       eax, eax
000000000000a599         mov        ecx, 0xffffffff
000000000000a59e         je         loc_a5a7

000000000000a5a0         call       j___errno_location                          ; __errno_location
000000000000a5a5         mov        ecx, dword [rax]

                     loc_a5a7:
000000000000a5a7         xor        edx, edx                                    ; argument "__flag" for method j_unlinkat, CODE XREF=force_linkat+302
000000000000a5a9         mov        rsi, r15                                    ; argument "__name" for method j_unlinkat
000000000000a5ac         mov        edi, ebp                                    ; argument "__fd" for method j_unlinkat
000000000000a5ae         mov        dword [rsp+0x178+var_16C], ecx
000000000000a5b2         call       j_unlinkat                                  ; unlinkat
000000000000a5b7         mov        ecx, dword [rsp+0x178+var_16C]
000000000000a5bb         jmp        loc_a516

                     loc_a5c0:
000000000000a5c0         call       j___errno_location                          ; __errno_location, CODE XREF=force_linkat+102
000000000000a5c5         mov        ecx, dword [rax]
000000000000a5c7         jmp        loc_a530

                     loc_a5cc:
000000000000a5cc         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=force_linkat+211
                        ; endp
000000000000a5d1         align      32                                          ; End of unwind block (FDE at 0x1a160)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_138: int8_t, -312
        ;    var_140: int32_t, -320
        ;    var_148: int64_t, -328
        ;    var_14C: int32_t, -332


                     force_symlinkat:
000000000000a5e0         push       r14                                         ; Begin of unwind block (FDE at 0x1a1ac), CODE XREF=copy_internal+3873, copy_internal+11416
000000000000a5e2         push       r13
000000000000a5e4         push       r12
000000000000a5e6         push       rbp
000000000000a5e7         mov        r12, rdi
000000000000a5ea         push       rbx
000000000000a5eb         mov        ebp, esi
000000000000a5ed         mov        rbx, rdx
000000000000a5f0         sub        rsp, 0x130
000000000000a5f7         mov        rax, qword [fs:0x28]
000000000000a600         mov        qword [rsp+0x158+var_30], rax
000000000000a608         xor        eax, eax
000000000000a60a         test       r8d, r8d
000000000000a60d         js         loc_a6b8

                     loc_a613:
000000000000a613         cmp        cl, 0x1                                     ; CODE XREF=force_symlinkat+244
000000000000a616         jne        loc_a688

000000000000a618         cmp        r8d, 0x11
000000000000a61c         jne        loc_a688

000000000000a61e         lea        r14, qword [rsp+0x158+var_138]
000000000000a623         mov        rdi, rbx
000000000000a626         mov        rsi, r14
000000000000a629         call       samedir_template                            ; samedir_template
000000000000a62e         test       rax, rax
000000000000a631         mov        r13, rax
000000000000a634         je         loc_a720

000000000000a63a         lea        rdx, qword [rsp+0x158+var_148]
000000000000a63f         lea        rcx, qword [try_symlink]                    ; try_symlink
000000000000a646         xor        esi, esi
000000000000a648         mov        r8d, 0x6
000000000000a64e         mov        rdi, rax
000000000000a651         mov        qword [rsp+0x158+var_148], r12
000000000000a656         mov        dword [rsp+0x158+var_140], ebp
000000000000a65a         call       try_tempname_len                            ; try_tempname_len
000000000000a65f         test       eax, eax
000000000000a661         je         loc_a6e0

000000000000a663         call       j___errno_location                          ; __errno_location
000000000000a668         mov        r8d, dword [rax]

                     loc_a66b:
000000000000a66b         cmp        r13, r14                                    ; CODE XREF=force_symlinkat+279, force_symlinkat+315
000000000000a66e         je         loc_a688

000000000000a670         mov        rdi, r13
000000000000a673         mov        dword [rsp+0x158+var_14C], r8d
000000000000a678         call       sub_30d0                                    ; sub_30d0
000000000000a67d         mov        r8d, dword [rsp+0x158+var_14C]
000000000000a682         nop        word [rax+rax]

                     loc_a688:
000000000000a688         mov        rbx, qword [rsp+0x158+var_30]               ; CODE XREF=force_symlinkat+54, force_symlinkat+60, force_symlinkat+142, force_symlinkat+230, force_symlinkat+328
000000000000a690         xor        rbx, qword [fs:0x28]
000000000000a699         mov        eax, r8d
000000000000a69c         jne        loc_a72d

000000000000a6a2         add        rsp, 0x130
000000000000a6a9         pop        rbx
000000000000a6aa         pop        rbp
000000000000a6ab         pop        r12
000000000000a6ad         pop        r13
000000000000a6af         pop        r14
000000000000a6b1         ret
                        ; endp
000000000000a6b2         align      8

                     loc_a6b8:
000000000000a6b8         mov        dword [rsp+0x158+var_14C], ecx              ; CODE XREF=force_symlinkat+45
000000000000a6bc         call       j_symlinkat                                 ; symlinkat
000000000000a6c1         test       eax, eax
000000000000a6c3         mov        r8d, eax
000000000000a6c6         je         loc_a688

000000000000a6c8         call       j___errno_location                          ; __errno_location
000000000000a6cd         mov        ecx, dword [rsp+0x158+var_14C]
000000000000a6d1         mov        r8d, dword [rax]
000000000000a6d4         jmp        loc_a613
000000000000a6d9         align      32

                     loc_a6e0:
000000000000a6e0         mov        rcx, rbx                                    ; argument "__new" for method j_renameat, CODE XREF=force_symlinkat+129
000000000000a6e3         mov        edx, ebp                                    ; argument "__newfd" for method j_renameat
000000000000a6e5         mov        rsi, r13                                    ; argument "__old" for method j_renameat
000000000000a6e8         mov        edi, ebp                                    ; argument "__oldfd" for method j_renameat
000000000000a6ea         call       j_renameat                                  ; renameat
000000000000a6ef         test       eax, eax
000000000000a6f1         mov        r8d, 0xffffffff
000000000000a6f7         je         loc_a66b

000000000000a6fd         call       j___errno_location                          ; __errno_location
000000000000a702         mov        r8d, dword [rax]
000000000000a705         xor        edx, edx                                    ; argument "__flag" for method j_unlinkat
000000000000a707         mov        rsi, r13                                    ; argument "__name" for method j_unlinkat
000000000000a70a         mov        edi, ebp                                    ; argument "__fd" for method j_unlinkat
000000000000a70c         mov        dword [rsp+0x158+var_14C], r8d
000000000000a711         call       j_unlinkat                                  ; unlinkat
000000000000a716         mov        r8d, dword [rsp+0x158+var_14C]
000000000000a71b         jmp        loc_a66b

                     loc_a720:
000000000000a720         call       j___errno_location                          ; __errno_location, CODE XREF=force_symlinkat+84
000000000000a725         mov        r8d, dword [rax]
000000000000a728         jmp        loc_a688

                     loc_a72d:
000000000000a72d         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=force_symlinkat+188
                        ; endp
000000000000a732         align      64                                          ; End of unwind block (FDE at 0x1a1ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     copy_acl:
000000000000a740         push       r12                                         ; Begin of unwind block (FDE at 0x1a1f4), CODE XREF=copy_internal+10252, copy_internal+14654
000000000000a742         push       rbp
000000000000a743         mov        r12, rdi
000000000000a746         push       rbx
000000000000a747         mov        rbp, rdx
000000000000a74a         call       qcopy_acl                                   ; qcopy_acl
000000000000a74f         cmp        eax, 0xfffffffe
000000000000a752         mov        ebx, eax
000000000000a754         je         loc_a7a0

000000000000a756         cmp        eax, 0xffffffff
000000000000a759         jne        loc_a792

000000000000a75b         mov        rdi, rbp
000000000000a75e         call       quote                                       ; quote
000000000000a763         lea        rsi, qword [aPreservingPerm]                ; argument "msgid" for method j_dcgettext, "preserving permissions for %s"
000000000000a76a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000a76f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000a771         mov        r12, rax
000000000000a774         call       j_dcgettext                                 ; dcgettext
000000000000a779         mov        rbp, rax
000000000000a77c         call       j___errno_location                          ; __errno_location
000000000000a781         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000a783         mov        rcx, r12
000000000000a786         mov        rdx, rbp                                    ; argument "__format" for method j_error
000000000000a789         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000a78b         xor        eax, eax
000000000000a78d         call       j_error                                     ; error

                     loc_a792:
000000000000a792         mov        eax, ebx                                    ; CODE XREF=copy_acl+25
000000000000a794         pop        rbx
000000000000a795         pop        rbp
000000000000a796         pop        r12
000000000000a798         ret
                        ; endp
000000000000a799         align      32

                     loc_a7a0:
000000000000a7a0         mov        rdi, r12                                    ; CODE XREF=copy_acl+20
000000000000a7a3         call       quote                                       ; quote
000000000000a7a8         mov        rbp, rax
000000000000a7ab         call       j___errno_location                          ; __errno_location
000000000000a7b0         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000a7b2         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x18e60
000000000000a7b9         mov        rcx, rbp
000000000000a7bc         xor        eax, eax
000000000000a7be         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000a7c0         call       j_error                                     ; error
000000000000a7c5         mov        eax, ebx
000000000000a7c7         pop        rbx
000000000000a7c8         pop        rbp
000000000000a7c9         pop        r12
000000000000a7cb         ret
                        ; endp
000000000000a7cc         align      16                                          ; End of unwind block (FDE at 0x1a1f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_acl:
000000000000a7d0         push       r12                                         ; Begin of unwind block (FDE at 0x1a22c), CODE XREF=copy_internal+11108, copy_internal+16246, copy_internal+16626
000000000000a7d2         push       rbp
000000000000a7d3         mov        rbp, rdi
000000000000a7d6         push       rbx
000000000000a7d7         call       qset_acl                                    ; qset_acl
000000000000a7dc         test       eax, eax
000000000000a7de         mov        ebx, eax
000000000000a7e0         je         loc_a819

000000000000a7e2         mov        rdi, rbp
000000000000a7e5         call       quote                                       ; quote
000000000000a7ea         lea        rsi, qword [aSettingPermiss]                ; argument "msgid" for method j_dcgettext, "setting permissions for %s"
000000000000a7f1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000a7f6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000a7f8         mov        r12, rax
000000000000a7fb         call       j_dcgettext                                 ; dcgettext
000000000000a800         mov        rbp, rax
000000000000a803         call       j___errno_location                          ; __errno_location
000000000000a808         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000a80a         mov        rcx, r12
000000000000a80d         mov        rdx, rbp                                    ; argument "__format" for method j_error
000000000000a810         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000a812         xor        eax, eax
000000000000a814         call       j_error                                     ; error

                     loc_a819:
000000000000a819         mov        eax, ebx                                    ; CODE XREF=set_acl+16
000000000000a81b         pop        rbx
000000000000a81c         pop        rbp
000000000000a81d         pop        r12
000000000000a81f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     areadlink_with_size:
000000000000a820         push       r15                                         ; End of unwind block (FDE at 0x1a22c), Begin of unwind block (FDE at 0x1a25c), CODE XREF=copy_internal+11374, copy_internal+14553
000000000000a822         push       r14
000000000000a824         mov        eax, 0x401
000000000000a829         push       r13
000000000000a82b         push       r12
000000000000a82d         mov        r13, rdi
000000000000a830         push       rbp
000000000000a831         push       rbx
000000000000a832         lea        rbx, qword [rsi+1]
000000000000a836         movabs     r14, 0x3fffffffffffffff
000000000000a840         movabs     r15, 0x7ffffffffffffffe
000000000000a84a         sub        rsp, 0x8
000000000000a84e         cmp        rsi, 0x401
000000000000a855         cmovae     rbx, rax
000000000000a859         nop        dword [rax]

                     loc_a860:
000000000000a860         mov        rdi, rbx                                    ; argument "__size" for method j_malloc, CODE XREF=areadlink_with_size+175
000000000000a863         call       j_malloc                                    ; malloc
000000000000a868         test       rax, rax
000000000000a86b         mov        rbp, rax
000000000000a86e         je         loc_a8ab

                     loc_a870:
000000000000a870         mov        rdx, rbx                                    ; argument "__len" for method j_readlink, CODE XREF=areadlink_with_size+137
000000000000a873         mov        rsi, rax                                    ; argument "__buf" for method j_readlink
000000000000a876         mov        rdi, r13                                    ; argument "__path" for method j_readlink
000000000000a879         call       j_readlink                                  ; readlink
000000000000a87e         test       rax, rax
000000000000a881         mov        r12, rax
000000000000a884         js         loc_a8d8

                     loc_a886:
000000000000a886         cmp        rbx, r12                                    ; CODE XREF=areadlink_with_size+192
000000000000a889         ja         loc_a8f0

000000000000a88b         mov        rdi, rbp
000000000000a88e         call       sub_30d0                                    ; sub_30d0
000000000000a893         cmp        rbx, r14
000000000000a896         ja         loc_a8c0

000000000000a898         add        rbx, rbx
000000000000a89b         mov        rdi, rbx                                    ; argument "__size" for method j_malloc
000000000000a89e         call       j_malloc                                    ; malloc
000000000000a8a3         test       rax, rax
000000000000a8a6         mov        rbp, rax
000000000000a8a9         jne        loc_a870

                     loc_a8ab:
000000000000a8ab         add        rsp, 0x8                                    ; CODE XREF=areadlink_with_size+78, areadlink_with_size+204, areadlink_with_size+214, areadlink_with_size+237
000000000000a8af         mov        rax, rbp
000000000000a8b2         pop        rbx
000000000000a8b3         pop        rbp
000000000000a8b4         pop        r12
000000000000a8b6         pop        r13
000000000000a8b8         pop        r14
000000000000a8ba         pop        r15
000000000000a8bc         ret
                        ; endp
000000000000a8bd         align      64

                     loc_a8c0:
000000000000a8c0         cmp        rbx, r15                                    ; CODE XREF=areadlink_with_size+118
000000000000a8c3         ja         loc_a900

000000000000a8c5         movabs     rbx, 0x7fffffffffffffff
000000000000a8cf         jmp        loc_a860
000000000000a8d1         align      8

                     loc_a8d8:
000000000000a8d8         call       j___errno_location                          ; __errno_location, CODE XREF=areadlink_with_size+100
000000000000a8dd         cmp        dword [rax], 0x22
000000000000a8e0         je         loc_a886

000000000000a8e2         mov        rdi, rbp
000000000000a8e5         xor        ebp, ebp
000000000000a8e7         call       sub_30d0                                    ; sub_30d0
000000000000a8ec         jmp        loc_a8ab
000000000000a8ee         align      16

                     loc_a8f0:
000000000000a8f0         mov        byte [rbp+r12], 0x0                         ; CODE XREF=areadlink_with_size+105
000000000000a8f6         jmp        loc_a8ab
000000000000a8f8         align      256

                     loc_a900:
000000000000a900         call       j___errno_location                          ; __errno_location, CODE XREF=areadlink_with_size+163
000000000000a905         xor        ebp, ebp
000000000000a907         mov        dword [rax], 0xc
000000000000a90d         jmp        loc_a8ab
000000000000a90f         align      16                                          ; End of unwind block (FDE at 0x1a25c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_simple_backup_suffix:
000000000000a910         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x1a2ac), CODE XREF=main+1225, backupfile_internal+1508
000000000000a913         push       rbx
000000000000a914         mov        rbx, rdi
000000000000a917         je         loc_a940

                     loc_a919:
000000000000a919         cmp        byte [rbx], 0x0                             ; CODE XREF=set_simple_backup_suffix+68
000000000000a91c         jne        loc_a930

                     loc_a91e:
000000000000a91e         lea        rbx, qword [a831+5]                         ; 0x180c6, CODE XREF=set_simple_backup_suffix+43, set_simple_backup_suffix+66

                     loc_a925:
000000000000a925         mov        qword [simple_backup_suffix], rbx           ; simple_backup_suffix, CODE XREF=set_simple_backup_suffix+45
000000000000a92c         pop        rbx
000000000000a92d         ret
                        ; endp
000000000000a92e         align      16

                     loc_a930:
000000000000a930         mov        rdi, rbx                                    ; CODE XREF=set_simple_backup_suffix+12
000000000000a933         call       last_component                              ; last_component
000000000000a938         cmp        rax, rbx
000000000000a93b         jne        loc_a91e

000000000000a93d         jmp        loc_a925
000000000000a93f         align      64

                     loc_a940:
000000000000a940         lea        rdi, qword [aSimplebackupsu]                ; argument "__name" for method j_getenv, "SIMPLE_BACKUP_SUFFIX", CODE XREF=set_simple_backup_suffix+7
000000000000a947         call       j_getenv                                    ; getenv
000000000000a94c         test       rax, rax
000000000000a94f         mov        rbx, rax
000000000000a952         je         loc_a91e

000000000000a954         jmp        loc_a919
000000000000a956         align      32                                          ; End of unwind block (FDE at 0x1a2ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_44: int32_t, -68
        ;    var_50: int64_t, -80
        ;    var_54: int32_t, -84
        ;    var_55: int8_t, -85
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_94: int32_t, -148
        ;    var_98: int32_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176


                     backupfile_internal:
000000000000a960         push       r15                                         ; Begin of unwind block (FDE at 0x1a2c8), CODE XREF=backup_file_rename+5, find_backup_file_name+6
000000000000a962         push       r14
000000000000a964         push       r13
000000000000a966         push       r12
000000000000a968         push       rbp
000000000000a969         push       rbx
000000000000a96a         mov        rbx, rsi
000000000000a96d         sub        rsp, 0x88
000000000000a974         mov        dword [rsp+0xb8+var_54], edi
000000000000a978         mov        rdi, rsi
000000000000a97b         mov        qword [rsp+0xb8+var_A8], rsi
000000000000a980         mov        dword [rsp+0xb8+var_98], edx
000000000000a984         mov        byte [rsp+0xb8+var_55], cl
000000000000a988         mov        rax, qword [fs:0x28]
000000000000a991         mov        qword [rsp+0xb8+var_40], rax
000000000000a996         xor        eax, eax
000000000000a998         call       last_component                              ; last_component
000000000000a99d         mov        rdi, rax                                    ; argument "__s" for method j_strlen
000000000000a9a0         mov        r14, rax
000000000000a9a3         call       j_strlen                                    ; strlen
000000000000a9a8         mov        rdi, qword [simple_backup_suffix]           ; simple_backup_suffix
000000000000a9af         sub        r14, rbx
000000000000a9b2         add        rax, r14
000000000000a9b5         mov        qword [rsp+0xb8+var_A0], rax
000000000000a9ba         test       rdi, rdi
000000000000a9bd         je         loc_af44

                     loc_a9c3:
000000000000a9c3         call       j_strlen                                    ; strlen, CODE XREF=backupfile_internal+1520
000000000000a9c8         mov        rsi, qword [rsp+0xb8+var_A0]
000000000000a9cd         add        rax, 0x1
000000000000a9d1         cmp        rax, 0x9
000000000000a9d5         mov        qword [rsp+0xb8+var_68], rax
000000000000a9da         lea        rdx, qword [rsi+1]
000000000000a9de         mov        rsi, rax
000000000000a9e1         mov        eax, 0x9
000000000000a9e6         cmovae     rax, rsi
000000000000a9ea         add        rax, rdx
000000000000a9ed         mov        qword [rsp+0xb8+var_80], rdx
000000000000a9f2         mov        rdi, rax                                    ; argument "__size" for method j_malloc
000000000000a9f5         mov        qword [rsp+0xb8+var_78], rax
000000000000a9fa         call       j_malloc                                    ; malloc
000000000000a9ff         test       rax, rax
000000000000aa02         mov        r15, rax
000000000000aa05         je         loc_acf0

000000000000aa0b         lea        rax, qword [rsp+0xb8+var_44]
000000000000aa10         mov        dword [rsp+0xb8+var_44], 0xffffffff
000000000000aa18         mov        qword [rsp+0xb8+var_70], 0x0
000000000000aa21         xor        r13d, r13d
000000000000aa24         mov        qword [rsp+0xb8+var_50], rax

                     loc_aa29:
000000000000aa29         mov        rdx, qword [rsp+0xb8+var_80]                ; argument "__n" for method j_memcpy, CODE XREF=backupfile_internal+870
000000000000aa2e         mov        rsi, qword [rsp+0xb8+var_A8]                ; argument "__src" for method j_memcpy
000000000000aa33         mov        rdi, r15                                    ; argument "__dest" for method j_memcpy
000000000000aa36         call       j_memcpy                                    ; memcpy
000000000000aa3b         cmp        dword [rsp+0xb8+var_98], 0x1
000000000000aa40         je         loc_ad20

000000000000aa46         lea        rbp, qword [r15+r14]
000000000000aa4a         mov        rdi, rbp
000000000000aa4d         call       base_len                                    ; base_len
000000000000aa52         test       r13, r13
000000000000aa55         mov        r12, rax
000000000000aa58         je         loc_ae00

000000000000aa5e         mov        rdi, r13                                    ; argument "__dirp" for method j_rewinddir
000000000000aa61         call       j_rewinddir                                 ; rewinddir

                     loc_aa66:
000000000000aa66         mov        rax, qword [rsp+0xb8+var_78]                ; CODE XREF=backupfile_internal+1249
000000000000aa6b         mov        qword [rsp+0xb8+var_90], 0x1
000000000000aa74         mov        dword [rsp+0xb8+var_94], 0x2
000000000000aa7c         mov        qword [rsp+0xb8+var_88], rax
000000000000aa81         lea        rax, qword [r12+4]
000000000000aa86         mov        qword [rsp+0xb8+var_B0], rax
000000000000aa8b         nop        dword [rax+rax]

                     loc_aa90:
000000000000aa90         mov        rdi, r13                                    ; argument "__dirp" for method j_readdir, CODE XREF=backupfile_internal+338, backupfile_internal+362, backupfile_internal+376, backupfile_internal+438, backupfile_internal+449, backupfile_internal+470, backupfile_internal+502
000000000000aa93         call       j_readdir                                   ; readdir
000000000000aa98         test       rax, rax
000000000000aa9b         je         loc_ac50

                     loc_aaa1:
000000000000aaa1         lea        rbx, qword [rax+0x13]                       ; CODE XREF=backupfile_internal+738
000000000000aaa5         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
000000000000aaa8         call       j_strlen                                    ; strlen
000000000000aaad         cmp        rax, qword [rsp+0xb8+var_B0]
000000000000aab2         jb         loc_aa90

000000000000aab4         lea        rbp, qword [r12+2]
000000000000aab9         lea        rdi, qword [r15+r14]                        ; argument "__s1" for method j_memcmp
000000000000aabd         mov        rsi, rbx                                    ; argument "__s2" for method j_memcmp
000000000000aac0         mov        rdx, rbp                                    ; argument "__n" for method j_memcmp
000000000000aac3         call       j_memcmp                                    ; memcmp
000000000000aac8         test       eax, eax
000000000000aaca         jne        loc_aa90

000000000000aacc         add        rbx, rbp
000000000000aacf         movzx      eax, byte [rbx]
000000000000aad2         lea        edx, dword [rax-0x31]
000000000000aad5         cmp        dl, 0x8
000000000000aad8         ja         loc_aa90

000000000000aada         cmp        al, 0x39
000000000000aadc         movsx      eax, byte [rbx+1]
000000000000aae0         mov        ebp, 0x1
000000000000aae5         sete       r8b
000000000000aae9         mov        ecx, eax
000000000000aaeb         sub        eax, 0x30
000000000000aaee         cmp        eax, 0x9
000000000000aaf1         ja         loc_ab13

000000000000aaf3         nop        dword [rax+rax]

                     loc_aaf8:
000000000000aaf8         cmp        cl, 0x39                                    ; CODE XREF=backupfile_internal+433
000000000000aafb         sete       al
000000000000aafe         add        rbp, 0x1
000000000000ab02         and        r8d, eax
000000000000ab05         movsx      eax, byte [rbx+rbp]
000000000000ab09         mov        ecx, eax
000000000000ab0b         sub        eax, 0x30
000000000000ab0e         cmp        eax, 0x9
000000000000ab11         jbe        loc_aaf8

                     loc_ab13:
000000000000ab13         cmp        cl, 0x7e                                    ; CODE XREF=backupfile_internal+401
000000000000ab16         jne        loc_aa90

000000000000ab1c         cmp        byte [rbx+rbp+1], 0x0
000000000000ab21         jne        loc_aa90

000000000000ab27         mov        rdx, qword [rsp+0xb8+var_90]
000000000000ab2c         cmp        rdx, rbp
000000000000ab2f         jb         loc_ab5c

000000000000ab31         mov        byte [rsp+0xb8+var_60], r8b
000000000000ab36         jne        loc_aa90

000000000000ab3c         mov        rax, qword [rsp+0xb8+var_A0]
000000000000ab41         mov        rsi, rbx                                    ; argument "__s2" for method j_memcmp
000000000000ab44         lea        rdi, qword [r15+rax+2]                      ; argument "__s1" for method j_memcmp
000000000000ab49         call       j_memcmp                                    ; memcmp
000000000000ab4e         test       eax, eax
000000000000ab50         movzx      r8d, byte [rsp+0xb8+var_60]
000000000000ab56         jg         loc_aa90

                     loc_ab5c:
000000000000ab5c         movzx      esi, r8b                                    ; CODE XREF=backupfile_internal+463
000000000000ab60         movzx      r9d, r8b
000000000000ab64         mov        dword [rsp+0xb8+var_94], esi
000000000000ab68         mov        rsi, qword [rsp+0xb8+var_A0]
000000000000ab6d         lea        rax, qword [r9+rbp]
000000000000ab71         mov        qword [rsp+0xb8+var_90], rax
000000000000ab76         lea        rcx, qword [rsi+rax+4]
000000000000ab7b         cmp        rcx, qword [rsp+0xb8+var_88]
000000000000ab80         jbe        loc_aeb8

000000000000ab86         mov        edx, 0x2
000000000000ab8b         xor        esi, esi
000000000000ab8d         mov        rax, rdx
000000000000ab90         mul        rcx
000000000000ab93         jo         loc_af63

                     loc_ab99:
000000000000ab99         test       rax, rax                                    ; CODE XREF=backupfile_internal+1544
000000000000ab9c         js         loc_ae50

000000000000aba2         test       rsi, rsi
000000000000aba5         jne        loc_ae50

000000000000abab         lea        rax, qword [rcx+rcx]
000000000000abaf         mov        qword [rsp+0xb8+var_88], rax

                     loc_abb4:
000000000000abb4         mov        rsi, qword [rsp+0xb8+var_88]                ; argument "__size" for method j_realloc, CODE XREF=backupfile_internal+1269
000000000000abb9         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
000000000000abbc         mov        qword [rsp+0xb8+var_60], r9
000000000000abc1         call       j_realloc                                   ; realloc
000000000000abc6         test       rax, rax
000000000000abc9         mov        r8, rax
000000000000abcc         mov        r9, qword [rsp+0xb8+var_60]
000000000000abd1         je         loc_ae60

                     loc_abd7:
000000000000abd7         mov        rax, qword [rsp+0xb8+var_A0]                ; CODE XREF=backupfile_internal+1371
000000000000abdc         lea        rdx, qword [rbp+2]                          ; argument "__n" for method j_memcpy
000000000000abe0         mov        qword [rsp+0xb8+var_60], r8
000000000000abe5         mov        rsi, rbx                                    ; argument "__src" for method j_memcpy
000000000000abe8         add        rax, r8
000000000000abeb         mov        r8d, 0x7e2e
000000000000abf1         lea        rcx, qword [rax+r9+2]
000000000000abf6         mov        word [rax], r8w
000000000000abfa         mov        byte [rax+2], 0x30
000000000000abfe         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
000000000000ac01         call       j_memcpy                                    ; memcpy
000000000000ac06         add        rbp, rax
000000000000ac09         mov        r8, qword [rsp+0xb8+var_60]
000000000000ac0e         movzx      edx, byte [rbp-1]
000000000000ac12         lea        rax, qword [rbp-1]
000000000000ac16         cmp        dl, 0x39
000000000000ac19         jne        loc_ac2f

000000000000ac1b         nop        dword [rax+rax]

                     loc_ac20:
000000000000ac20         mov        byte [rax], 0x30                            ; CODE XREF=backupfile_internal+717
000000000000ac23         sub        rax, 0x1
000000000000ac27         movzx      edx, byte [rax]
000000000000ac2a         cmp        dl, 0x39
000000000000ac2d         je         loc_ac20

                     loc_ac2f:
000000000000ac2f         add        edx, 0x1                                    ; CODE XREF=backupfile_internal+697
000000000000ac32         mov        rdi, r13                                    ; argument "__dirp" for method j_readdir
000000000000ac35         mov        r15, r8
000000000000ac38         mov        byte [rax], dl
000000000000ac3a         call       j_readdir                                   ; readdir
000000000000ac3f         test       rax, rax
000000000000ac42         jne        loc_aaa1

000000000000ac48         nop        dword [rax+rax]

                     loc_ac50:
000000000000ac50         mov        eax, dword [rsp+0xb8+var_94]                ; CODE XREF=backupfile_internal+315, backupfile_internal+1421
000000000000ac54         cmp        eax, 0x2
000000000000ac57         je         loc_ad40

000000000000ac5d         cmp        eax, 0x3
000000000000ac60         je         loc_ae60

000000000000ac66         cmp        eax, 0x1
000000000000ac69         je         loc_ad70

                     loc_ac6f:
000000000000ac6f         cmp        byte [rsp+0xb8+var_55], 0x0                 ; CODE XREF=backupfile_internal+986, backupfile_internal+1066, backupfile_internal+1175, backupfile_internal+1317, backupfile_internal+1359
000000000000ac74         je         loc_af2e

000000000000ac7a         mov        edx, dword [rsp+0xb8+var_44]
000000000000ac7e         lea        rcx, qword [r15+r14]
000000000000ac82         test       edx, edx
000000000000ac84         jns        loc_ac99

000000000000ac86         mov        dword [rsp+0xb8+var_44], 0xffffff9c
000000000000ac8e         mov        rcx, r15
000000000000ac91         mov        edx, 0xffffff9c
000000000000ac96         xor        r14d, r14d

                     loc_ac99:
000000000000ac99         xor        r8d, r8d                                    ; CODE XREF=backupfile_internal+804
000000000000ac9c         cmp        dword [rsp+0xb8+var_98], 0x1
000000000000aca1         mov        rsi, qword [rsp+0xb8+var_A8]
000000000000aca6         mov        edi, 0xffffff9c
000000000000acab         setne      r8b
000000000000acaf         call       renameatu                                   ; renameatu
000000000000acb4         test       eax, eax
000000000000acb6         je         loc_af2e

000000000000acbc         call       j___errno_location                          ; __errno_location
000000000000acc1         mov        ebp, dword [rax]
000000000000acc3         cmp        ebp, 0x11
000000000000acc6         je         loc_aa29

000000000000accc         test       r13, r13
000000000000accf         mov        rbx, rax
000000000000acd2         je         loc_acdc

000000000000acd4         mov        rdi, r13                                    ; argument "__dirp" for method j_closedir
000000000000acd7         call       j_closedir                                  ; closedir

                     loc_acdc:
000000000000acdc         mov        rdi, r15                                    ; CODE XREF=backupfile_internal+882
000000000000acdf         xor        r15d, r15d
000000000000ace2         call       sub_30d0                                    ; sub_30d0
000000000000ace7         mov        dword [rbx], ebp
000000000000ace9         nop        dword [rax]

                     loc_acf0:
000000000000acf0         mov        rsi, qword [rsp+0xb8+var_40]                ; CODE XREF=backupfile_internal+165, backupfile_internal+1302, backupfile_internal+1489, backupfile_internal+1503
000000000000acf5         xor        rsi, qword [fs:0x28]
000000000000acfe         mov        rax, r15
000000000000ad01         jne        loc_af6d

000000000000ad07         add        rsp, 0x88
000000000000ad0e         pop        rbx
000000000000ad0f         pop        rbp
000000000000ad10         pop        r12
000000000000ad12         pop        r13
000000000000ad14         pop        r14
000000000000ad16         pop        r15
000000000000ad18         ret
                        ; endp
000000000000ad19         align      32

                     loc_ad20:
000000000000ad20         mov        rax, qword [rsp+0xb8+var_A0]                ; CODE XREF=backupfile_internal+224
000000000000ad25         mov        rdx, qword [rsp+0xb8+var_68]                ; argument "__n" for method j_memcpy
000000000000ad2a         mov        rsi, qword [simple_backup_suffix]           ; argument "__src" for method j_memcpy, simple_backup_suffix
000000000000ad31         lea        rdi, qword [r15+rax]                        ; argument "__dest" for method j_memcpy
000000000000ad35         call       j_memcpy                                    ; memcpy
000000000000ad3a         jmp        loc_ac6f
000000000000ad3f         align      64

                     loc_ad40:
000000000000ad40         cmp        dword [rsp+0xb8+var_98], 0x2                ; CODE XREF=backupfile_internal+759
000000000000ad45         jne        loc_ad70

000000000000ad47         mov        rax, qword [rsp+0xb8+var_A0]
000000000000ad4c         mov        rdx, qword [rsp+0xb8+var_68]                ; argument "__n" for method j_memcpy
000000000000ad51         mov        rsi, qword [simple_backup_suffix]           ; argument "__src" for method j_memcpy, simple_backup_suffix
000000000000ad58         lea        rdi, qword [r15+rax]                        ; argument "__dest" for method j_memcpy
000000000000ad5c         call       j_memcpy                                    ; memcpy
000000000000ad61         mov        dword [rsp+0xb8+var_98], 0x1
000000000000ad69         nop        dword [rax]

                     loc_ad70:
000000000000ad70         mov        rdi, r15                                    ; CODE XREF=backupfile_internal+777, backupfile_internal+997
000000000000ad73         call       last_component                              ; last_component
000000000000ad78         mov        rdi, rax
000000000000ad7b         mov        rbx, rax
000000000000ad7e         call       base_len                                    ; base_len
000000000000ad83         cmp        rax, 0xe
000000000000ad87         mov        rbp, rax
000000000000ad8a         jbe        loc_ac6f

000000000000ad90         cmp        qword [rsp+0xb8+var_70], 0x0
000000000000ad96         jne        loc_ae80

000000000000ad9c         mov        edi, dword [rsp+0xb8+var_44]
000000000000ada0         mov        dword [rsp+0xb8+var_B0], edi
000000000000ada4         call       j___errno_location                          ; __errno_location
000000000000ada9         mov        edi, dword [rsp+0xb8+var_B0]
000000000000adad         mov        r12, rax
000000000000adb0         test       edi, edi
000000000000adb2         js         loc_aef2

000000000000adb8         mov        dword [rax], 0x0
000000000000adbe         mov        esi, 0x3                                    ; argument "__name" for method j_fpathconf
000000000000adc3         call       j_fpathconf                                 ; fpathconf
000000000000adc8         mov        ecx, dword [r12]
000000000000adcc         xor        edx, edx
000000000000adce         test       ecx, ecx
000000000000add0         sete       dl
000000000000add3         sub        rax, rdx

                     loc_add6:
000000000000add6         test       rax, rax                                    ; CODE XREF=backupfile_internal+1481
000000000000add9         mov        qword [rsp+0xb8+var_70], rax
000000000000adde         jns        loc_ae80

000000000000ade4         cmp        rax, 0xffffffffffffffff
000000000000ade8         jne        loc_af55

000000000000adee         mov        qword [rsp+0xb8+var_70], 0xffffffffffffffff
000000000000adf7         jmp        loc_ac6f
000000000000adfc         align      512

                     loc_ae00:
000000000000ae00         mov        rcx, qword [rsp+0xb8+var_50]                ; CODE XREF=backupfile_internal+248
000000000000ae05         mov        edi, dword [rsp+0xb8+var_54]
000000000000ae09         mov        r9d, 0x2e
000000000000ae0f         xor        edx, edx
000000000000ae11         movzx      ebx, word [rbp]
000000000000ae15         mov        rsi, r15
000000000000ae18         mov        word [rbp], r9w
000000000000ae1d         call       opendirat                                   ; opendirat
000000000000ae22         test       rax, rax
000000000000ae25         mov        r13, rax
000000000000ae28         lea        rdx, qword [rbp+r12]
000000000000ae2d         je         loc_aec0

000000000000ae33         mov        word [rbp], bx
000000000000ae37         mov        dword [rdx], 0x7e317e2e
000000000000ae3d         mov        byte [rdx+4], 0x0
000000000000ae41         jmp        loc_aa66
000000000000ae46         align      16

                     loc_ae50:
000000000000ae50         mov        qword [rsp+0xb8+var_88], rcx                ; CODE XREF=backupfile_internal+572, backupfile_internal+581
000000000000ae55         jmp        loc_abb4
000000000000ae5a         align      32

                     loc_ae60:
000000000000ae60         mov        rdi, r15                                    ; CODE XREF=backupfile_internal+625, backupfile_internal+768
000000000000ae63         xor        r15d, r15d
000000000000ae66         call       sub_30d0                                    ; sub_30d0
000000000000ae6b         call       j___errno_location                          ; __errno_location
000000000000ae70         mov        dword [rax], 0xc
000000000000ae76         jmp        loc_acf0
000000000000ae7b         align      128

                     loc_ae80:
000000000000ae80         cmp        rbp, qword [rsp+0xb8+var_70]                ; CODE XREF=backupfile_internal+1078, backupfile_internal+1150
000000000000ae85         jbe        loc_ac6f

                     loc_ae8b:
000000000000ae8b         mov        rax, qword [rsp+0xb8+var_A0]                ; CODE XREF=backupfile_internal+1534
000000000000ae90         mov        rsi, qword [rsp+0xb8+var_70]
000000000000ae95         add        rax, r15
000000000000ae98         lea        rdx, qword [rsi-1]
000000000000ae9c         sub        rax, rbx
000000000000ae9f         cmp        rax, rsi
000000000000aea2         cmovae     rax, rdx
000000000000aea6         mov        byte [rbx+rax], 0x7e
000000000000aeaa         mov        byte [rbx+rax+1], 0x0
000000000000aeaf         jmp        loc_ac6f
000000000000aeb4         align      8

                     loc_aeb8:
000000000000aeb8         mov        r8, r15                                     ; CODE XREF=backupfile_internal+544
000000000000aebb         jmp        loc_abd7

                     loc_aec0:
000000000000aec0         mov        qword [rsp+0xb8+var_B0], rdx                ; CODE XREF=backupfile_internal+1229
000000000000aec5         call       j___errno_location                          ; __errno_location
000000000000aeca         cmp        dword [rax], 0xc
000000000000aecd         mov        rdx, qword [rsp+0xb8+var_B0]
000000000000aed2         mov        word [rbp], bx
000000000000aed6         mov        dword [rdx], 0x7e317e2e
000000000000aedc         mov        byte [rdx+4], 0x0
000000000000aee0         sete       al
000000000000aee3         movzx      eax, al
000000000000aee6         add        eax, 0x2
000000000000aee9         mov        dword [rsp+0xb8+var_94], eax
000000000000aeed         jmp        loc_ac50

                     loc_aef2:
000000000000aef2         movzx      edx, word [rbx]                             ; CODE XREF=backupfile_internal+1106
000000000000aef5         mov        esi, 0x2e
000000000000aefa         mov        rdi, r15                                    ; argument "__path" for method j_pathconf
000000000000aefd         mov        word [rbx], si
000000000000af00         mov        dword [rax], 0x0
000000000000af06         mov        esi, 0x3                                    ; argument "__name" for method j_pathconf
000000000000af0b         mov        dword [rsp+0xb8+var_B0], edx
000000000000af0f         call       j_pathconf                                  ; pathconf
000000000000af14         mov        edi, dword [r12]
000000000000af18         mov        edx, dword [rsp+0xb8+var_B0]
000000000000af1c         xor        ecx, ecx
000000000000af1e         test       edi, edi
000000000000af20         mov        word [rbx], dx
000000000000af23         sete       cl
000000000000af26         sub        rax, rcx
000000000000af29         jmp        loc_add6

                     loc_af2e:
000000000000af2e         test       r13, r13                                    ; CODE XREF=backupfile_internal+788, backupfile_internal+854
000000000000af31         je         loc_acf0

000000000000af37         mov        rdi, r13                                    ; argument "__dirp" for method j_closedir
000000000000af3a         call       j_closedir                                  ; closedir
000000000000af3f         jmp        loc_acf0

                     loc_af44:
000000000000af44         call       set_simple_backup_suffix                    ; set_simple_backup_suffix, CODE XREF=backupfile_internal+93
000000000000af49         mov        rdi, qword [simple_backup_suffix]           ; simple_backup_suffix
000000000000af50         jmp        loc_a9c3

                     loc_af55:
000000000000af55         mov        qword [rsp+0xb8+var_70], 0xe                ; CODE XREF=backupfile_internal+1160
000000000000af5e         jmp        loc_ae8b

                     loc_af63:
000000000000af63         mov        esi, 0x1                                    ; CODE XREF=backupfile_internal+563
000000000000af68         jmp        loc_ab99

                     loc_af6d:
000000000000af6d         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=backupfile_internal+929
                        ; endp
000000000000af72         align      128                                         ; End of unwind block (FDE at 0x1a2c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     backup_file_rename:
000000000000af80         mov        ecx, 0x1                                    ; Begin of unwind block (FDE at 0x1a31c), CODE XREF=copy_internal+3550
000000000000af85         jmp        backupfile_internal                         ; backupfile_internal
                        ; endp
000000000000af8a         align      16                                          ; End of unwind block (FDE at 0x1a31c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_version.part.0:
000000000000af90         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x1a334), CODE XREF=get_version+10, j_get_version.part.0
000000000000af94         mov        r9, qword [argmatch_die]                    ; argmatch_die
000000000000af9b         lea        rdx, qword [backup_args]                    ; backup_args
000000000000afa2         lea        rcx, qword [backup_types]                   ; backup_types
000000000000afa9         mov        r8d, 0x4
000000000000afaf         call       __xargmatch_internal                        ; __xargmatch_internal
000000000000afb4         lea        rdx, qword [backup_types]                   ; backup_types
000000000000afbb         mov        eax, dword [rdx+rax*4]
000000000000afbe         add        rsp, 0x8
000000000000afc2         ret
                        ; endp
000000000000afc3         align      16                                          ; End of unwind block (FDE at 0x1a334)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     find_backup_file_name:
000000000000afd0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x1a34c)
000000000000afd4         xor        ecx, ecx                                    ; argument #4 for method backupfile_internal
000000000000afd6         call       backupfile_internal                         ; backupfile_internal
000000000000afdb         test       rax, rax
000000000000afde         je         loc_afe5

000000000000afe0         add        rsp, 0x8
000000000000afe4         ret
                        ; endp

                     loc_afe5:
000000000000afe5         call       xalloc_die                                  ; xalloc_die, CODE XREF=find_backup_file_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_afea:
000000000000afea         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x1a34c)
                     get_version:
000000000000aff0         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x1a368)
000000000000aff3         je         loc_b000

000000000000aff5         cmp        byte [rsi], 0x0
000000000000aff8         je         loc_b000

000000000000affa         jmp        get_version.part.0                          ; get_version.part.0
                        ; endp
000000000000affc         align      4096

                     loc_b000:
000000000000b000         mov        eax, 0x2                                    ; CODE XREF=get_version+3, get_version+8
000000000000b005         ret
                        ; endp
000000000000b006         align      16                                          ; End of unwind block (FDE at 0x1a368)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xget_version:
000000000000b010         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x1a37c), CODE XREF=main+2320
000000000000b013         je         loc_b01a

000000000000b015         cmp        byte [rsi], 0x0
000000000000b018         jne        j_get_version.part.0                        ; get_version.part.0

                     loc_b01a:
000000000000b01a         lea        rdi, qword [aVersioncontrol]                ; argument "__name" for method j_getenv, "VERSION_CONTROL", CODE XREF=xget_version+3
000000000000b021         sub        rsp, 0x8
000000000000b025         call       j_getenv                                    ; getenv
000000000000b02a         test       rax, rax
000000000000b02d         je         loc_b050

000000000000b02f         cmp        byte [rax], 0x0
000000000000b032         je         loc_b050

000000000000b034         lea        rdi, qword [aSimplebackupsu+21]             ; 0x180dd
000000000000b03b         mov        rsi, rax
000000000000b03e         add        rsp, 0x8

                     j_get_version.part.0:        // get_version.part.0
000000000000b042         jmp        get_version.part.0                          ; get_version.part.0, CODE XREF=xget_version+8
                        ; endp
000000000000b047         align      16

                     loc_b050:
000000000000b050         mov        eax, 0x2                                    ; CODE XREF=xget_version+29, xget_version+34
000000000000b055         add        rsp, 0x8
000000000000b059         ret
                        ; endp
000000000000b05a         align      32                                          ; End of unwind block (FDE at 0x1a37c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     buffer_lcm:
000000000000b060         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x1a39c), CODE XREF=copy_internal+12256
000000000000b063         mov        rcx, rdx
000000000000b066         jne        loc_b088

000000000000b068         test       rsi, rsi
000000000000b06b         mov        edi, 0x2000
000000000000b070         cmovne     rdi, rsi

                     loc_b074:
000000000000b074         cmp        rdi, rcx                                    ; CODE XREF=buffer_lcm+43, buffer_lcm+82, buffer_lcm+95
000000000000b077         cmovbe     rcx, rdi
000000000000b07b         mov        r8, rcx

                     loc_b07e:
000000000000b07e         mov        rax, r8                                     ; CODE XREF=buffer_lcm+97
000000000000b081         ret
                        ; endp
000000000000b082         align      8

                     loc_b088:
000000000000b088         test       rsi, rsi                                    ; CODE XREF=buffer_lcm+6
000000000000b08b         je         loc_b074

000000000000b08d         mov        r8, rsi
000000000000b090         mov        rax, rdi

                     loc_b093:
000000000000b093         xor        edx, edx                                    ; CODE XREF=buffer_lcm+110
000000000000b095         div        r8
000000000000b098         test       rdx, rdx
000000000000b09b         jne        loc_b0c8

000000000000b09d         xor        edx, edx
000000000000b09f         mov        rax, rdi
000000000000b0a2         div        r8
000000000000b0a5         mov        r8, rsi
000000000000b0a8         imul       r8, rax
000000000000b0ac         mov        r9, rax
000000000000b0af         cmp        r8, rcx
000000000000b0b2         ja         loc_b074

000000000000b0b4         xor        edx, edx
000000000000b0b6         mov        rax, r8
000000000000b0b9         div        rsi
000000000000b0bc         cmp        rax, r9
000000000000b0bf         jne        loc_b074

000000000000b0c1         jmp        loc_b07e
000000000000b0c3         align      8

                     loc_b0c8:
000000000000b0c8         mov        rax, r8                                     ; CODE XREF=buffer_lcm+59
000000000000b0cb         mov        r8, rdx
000000000000b0ce         jmp        loc_b093


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdin_set_file_name:
000000000000b0d0         mov        qword [file_name], rdi                      ; End of unwind block (FDE at 0x1a39c), Begin of unwind block (FDE at 0x1a3b4), file_name
000000000000b0d7         ret
                        ; endp
000000000000b0d8         align      32                                          ; End of unwind block (FDE at 0x1a3b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdin:
000000000000b0e0         push       r12                                         ; Begin of unwind block (FDE at 0x1a3c8), DATA XREF=main+123
000000000000b0e2         push       rbp
000000000000b0e3         push       rbx
000000000000b0e4         mov        rbx, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5
000000000000b0eb         mov        rdi, rbx
000000000000b0ee         call       freadahead                                  ; freadahead
000000000000b0f3         test       rax, rax
000000000000b0f6         jne        loc_b198

000000000000b0fc         mov        rdi, rbx
000000000000b0ff         call       close_stream                                ; close_stream
000000000000b104         test       eax, eax
000000000000b106         jne        loc_b138

000000000000b108         pop        rbx
000000000000b109         pop        rbp
000000000000b10a         pop        r12
000000000000b10c         jmp        close_stdout                                ; close_stdout
                        ; endp
000000000000b111         align      8

                     loc_b118:
000000000000b118         call       rpl_fflush                                  ; rpl_fflush, CODE XREF=close_stdin+208
000000000000b11d         test       eax, eax
000000000000b11f         mov        rdi, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5
000000000000b126         je         loc_b1b6

000000000000b12c         call       close_stream                                ; close_stream
000000000000b131         nop        dword [rax]

                     loc_b138:
000000000000b138         lea        rsi, qword [aErrorClosingFi]                ; argument "msgid" for method j_dcgettext, "error closing file", CODE XREF=close_stdin+38, close_stdin+221
000000000000b13f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000b141         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000b146         call       j_dcgettext                                 ; dcgettext
000000000000b14b         mov        rbx, qword [file_name]                      ; file_name
000000000000b152         mov        r12, rax
000000000000b155         call       j___errno_location                          ; __errno_location
000000000000b15a         mov        rbp, rax
000000000000b15d         test       rbx, rbx
000000000000b160         je         loc_b1d0

000000000000b162         mov        rdi, rbx
000000000000b165         call       quotearg_colon                              ; quotearg_colon
000000000000b16a         mov        esi, dword [rbp]                            ; argument "__errnum" for method j_error
000000000000b16d         lea        rdx, qword [aSS_18153]                      ; argument "__format" for method j_error, "%s: %s"
000000000000b174         mov        rcx, rax
000000000000b177         mov        r8, r12
000000000000b17a         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000b17c         xor        eax, eax
000000000000b17e         call       j_error                                     ; error

                     loc_b183:
000000000000b183         call       close_stdout                                ; close_stdout, CODE XREF=close_stdin+261
000000000000b188         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure
000000000000b18e         call       j__exit                                     ; _exit
                        ; endp
000000000000b193         align      8

                     loc_b198:
000000000000b198         xor        esi, esi                                    ; CODE XREF=close_stdin+22
000000000000b19a         mov        rdi, rbx
000000000000b19d         mov        edx, 0x1
000000000000b1a2         call       rpl_fseeko                                  ; rpl_fseeko
000000000000b1a7         test       eax, eax
000000000000b1a9         mov        rdi, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5
000000000000b1b0         je         loc_b118

                     loc_b1b6:
000000000000b1b6         call       close_stream                                ; close_stream, CODE XREF=close_stdin+70
000000000000b1bb         test       eax, eax
000000000000b1bd         jne        loc_b138

000000000000b1c3         pop        rbx
000000000000b1c4         pop        rbp
000000000000b1c5         pop        r12
000000000000b1c7         jmp        close_stdout                                ; close_stdout
                        ; endp
000000000000b1cc         align      16

                     loc_b1d0:
000000000000b1d0         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdin+128
000000000000b1d2         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x18e60
000000000000b1d9         mov        rcx, r12
000000000000b1dc         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000b1de         xor        eax, eax
000000000000b1e0         call       j_error                                     ; error
000000000000b1e5         jmp        loc_b183
000000000000b1e7         align      16                                          ; End of unwind block (FDE at 0x1a3c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
000000000000b1f0         mov        qword [file_name_21f5b8], rdi               ; Begin of unwind block (FDE at 0x1a404), file_name_21f5b8
000000000000b1f7         ret
                        ; endp
000000000000b1f8         align      512                                         ; End of unwind block (FDE at 0x1a404)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
000000000000b200         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x1a418), ignore_EPIPE
000000000000b207         ret
                        ; endp
000000000000b208         align      16                                          ; End of unwind block (FDE at 0x1a418)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
000000000000b210         push       rbp                                         ; Begin of unwind block (FDE at 0x1a42c), CODE XREF=close_stdin+44, close_stdin+163, close_stdin+231
000000000000b211         push       rbx
000000000000b212         sub        rsp, 0x8
000000000000b216         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000b21d         call       close_stream                                ; close_stream
000000000000b222         test       eax, eax
000000000000b224         je         loc_b23c

000000000000b226         call       j___errno_location                          ; __errno_location
000000000000b22b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
000000000000b232         mov        rbx, rax
000000000000b235         je         loc_b253

000000000000b237         cmp        dword [rax], 0x20
000000000000b23a         jne        loc_b253

                     loc_b23c:
000000000000b23c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
000000000000b243         call       close_stream                                ; close_stream
000000000000b248         test       eax, eax
000000000000b24a         jne        loc_b292

000000000000b24c         add        rsp, 0x8
000000000000b250         pop        rbx
000000000000b251         pop        rbp
000000000000b252         ret
                        ; endp

                     loc_b253:
000000000000b253         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
000000000000b25a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000b25c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000b261         call       j_dcgettext                                 ; dcgettext
000000000000b266         mov        rdi, qword [file_name_21f5b8]               ; file_name_21f5b8
000000000000b26d         mov        rbp, rax
000000000000b270         test       rdi, rdi
000000000000b273         je         loc_b29d

000000000000b275         call       quotearg_colon                              ; quotearg_colon
000000000000b27a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
000000000000b27c         lea        rdx, qword [aSS_18153]                      ; argument "__format" for method j_error, "%s: %s"
000000000000b283         mov        rcx, rax
000000000000b286         mov        r8, rbp
000000000000b289         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000b28b         xor        eax, eax
000000000000b28d         call       j_error                                     ; error

                     loc_b292:
000000000000b292         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
000000000000b298         call       j__exit                                     ; _exit
                        ; endp

                     loc_b29d:
000000000000b29d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
000000000000b29f         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x18e60
000000000000b2a6         mov        rcx, rax
000000000000b2a9         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000b2ab         xor        eax, eax
000000000000b2ad         call       j_error                                     ; error
000000000000b2b2         jmp        loc_b292
000000000000b2b4         align      64                                          ; End of unwind block (FDE at 0x1a42c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dir_name:
000000000000b2c0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x1a45c), CODE XREF=copy_internal+3795, same_nameat.part.0+43, same_nameat.part.0+95
000000000000b2c4         call       mdir_name                                   ; mdir_name
000000000000b2c9         test       rax, rax
000000000000b2cc         je         loc_b2d3

000000000000b2ce         add        rsp, 0x8
000000000000b2d2         ret
                        ; endp

                     loc_b2d3:
000000000000b2d3         call       xalloc_die                                  ; xalloc_die, CODE XREF=dir_name+12
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_b2d8:
000000000000b2d8         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x1a45c)
                     dir_len:
000000000000b2e0         push       rbp                                         ; Begin of unwind block (FDE at 0x1a47c), CODE XREF=mdir_name+9
000000000000b2e1         push       rbx
000000000000b2e2         xor        ebp, ebp
000000000000b2e4         mov        rbx, rdi
000000000000b2e7         sub        rsp, 0x8
000000000000b2eb         cmp        byte [rdi], 0x2f                            ; argument #1 for method last_component
000000000000b2ee         sete       bpl
000000000000b2f2         call       last_component                              ; last_component
000000000000b2f7         mov        rcx, rax
000000000000b2fa         sub        rcx, rbx
000000000000b2fd         cmp        rcx, rbp
000000000000b300         jbe        loc_b330

000000000000b302         cmp        byte [rax-1], 0x2f
000000000000b306         lea        rdx, qword [rcx-1]
000000000000b30a         je         loc_b31e

000000000000b30c         jmp        loc_b330
000000000000b30e         align      16

                     loc_b310:
000000000000b310         cmp        byte [rbx+rdx-1], 0x2f                      ; CODE XREF=dir_len+65
000000000000b315         lea        rax, qword [rdx-1]
000000000000b319         jne        loc_b323

000000000000b31b         mov        rdx, rax

                     loc_b31e:
000000000000b31e         cmp        rbp, rdx                                    ; CODE XREF=dir_len+42
000000000000b321         jne        loc_b310

                     loc_b323:
000000000000b323         add        rsp, 0x8                                    ; CODE XREF=dir_len+57
000000000000b327         mov        rax, rdx
000000000000b32a         pop        rbx
000000000000b32b         pop        rbp
000000000000b32c         ret
                        ; endp
000000000000b32d         align      16

                     loc_b330:
000000000000b330         add        rsp, 0x8                                    ; CODE XREF=dir_len+32, dir_len+44
000000000000b334         mov        rdx, rcx
000000000000b337         mov        rax, rdx
000000000000b33a         pop        rbx
000000000000b33b         pop        rbp
000000000000b33c         ret
                        ; endp
000000000000b33d         align      64                                          ; End of unwind block (FDE at 0x1a47c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     mdir_name:
000000000000b340         push       rbp                                         ; Begin of unwind block (FDE at 0x1a4b0), CODE XREF=dir_name+4
000000000000b341         push       rbx
000000000000b342         mov        rbp, rdi
000000000000b345         sub        rsp, 0x8
000000000000b349         call       dir_len                                     ; dir_len
000000000000b34e         test       rax, rax
000000000000b351         mov        rbx, rax
000000000000b354         sete       al
000000000000b357         movzx      eax, al
000000000000b35a         lea        rdi, qword [rbx+rax+1]                      ; argument "__size" for method j_malloc
000000000000b35f         call       j_malloc                                    ; malloc
000000000000b364         test       rax, rax
000000000000b367         mov        rcx, rax
000000000000b36a         je         loc_b386

000000000000b36c         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
000000000000b36f         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
000000000000b372         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
000000000000b375         call       j_memcpy                                    ; memcpy
000000000000b37a         test       rbx, rbx
000000000000b37d         mov        rcx, rax
000000000000b380         je         loc_b390

                     loc_b382:
000000000000b382         mov        byte [rcx+rbx], 0x0                         ; CODE XREF=mdir_name+88

                     loc_b386:
000000000000b386         add        rsp, 0x8                                    ; CODE XREF=mdir_name+42
000000000000b38a         mov        rax, rcx
000000000000b38d         pop        rbx
000000000000b38e         pop        rbp
000000000000b38f         ret
                        ; endp

                     loc_b390:
000000000000b390         mov        byte [rax], 0x2e                            ; CODE XREF=mdir_name+64
000000000000b393         mov        ebx, 0x1
000000000000b398         jmp        loc_b382
000000000000b39a         align      32                                          ; End of unwind block (FDE at 0x1a4b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     last_component:
000000000000b3a0         movzx      edx, byte [rdi]                             ; Begin of unwind block (FDE at 0x1a4dc), CODE XREF=main+1699, main+2054, copy_internal+3331, copy_internal+3456, copy_internal+8116, samedir_template+10, set_simple_backup_suffix+35, backupfile_internal+56, backupfile_internal+1043, dir_len+18, mfile_name_concat+23
000000000000b3a3         mov        rax, rdi
000000000000b3a6         cmp        dl, 0x2f
000000000000b3a9         jne        loc_b3bc

000000000000b3ab         nop        dword [rax+rax]

                     loc_b3b0:
000000000000b3b0         add        rax, 0x1                                    ; CODE XREF=last_component+26
000000000000b3b4         movzx      edx, byte [rax]
000000000000b3b7         cmp        dl, 0x2f
000000000000b3ba         je         loc_b3b0

                     loc_b3bc:
000000000000b3bc         test       dl, dl                                      ; CODE XREF=last_component+9
000000000000b3be         je         loc_b3fa

000000000000b3c0         mov        rcx, rax
000000000000b3c3         xor        esi, esi
000000000000b3c5         jmp        loc_b3e5
000000000000b3c7         align      16

                     loc_b3d0:
000000000000b3d0         test       sil, sil                                    ; CODE XREF=last_component+72
000000000000b3d3         je         loc_b3da

000000000000b3d5         mov        rax, rcx
000000000000b3d8         xor        esi, esi

                     loc_b3da:
000000000000b3da         add        rcx, 0x1                                    ; CODE XREF=last_component+51
000000000000b3de         movzx      edx, byte [rcx]
000000000000b3e1         test       dl, dl
000000000000b3e3         je         loc_b3fa

                     loc_b3e5:
000000000000b3e5         cmp        dl, 0x2f                                    ; CODE XREF=last_component+37, last_component+88
000000000000b3e8         jne        loc_b3d0

000000000000b3ea         add        rcx, 0x1
000000000000b3ee         movzx      edx, byte [rcx]
000000000000b3f1         mov        esi, 0x1
000000000000b3f6         test       dl, dl
000000000000b3f8         jne        loc_b3e5

                     loc_b3fa:
000000000000b3fa         ret                                                    ; CODE XREF=last_component+30, last_component+67
                        ; endp
000000000000b3fc         align      1024                                        ; End of unwind block (FDE at 0x1a4dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base_len:
000000000000b400         push       rbx                                         ; Begin of unwind block (FDE at 0x1a4f0), CODE XREF=backupfile_internal+237, backupfile_internal+1054, mfile_name_concat+34, same_nameat+52, same_nameat+63
000000000000b401         mov        rbx, rdi
000000000000b404         call       j_strlen                                    ; strlen
000000000000b409         cmp        rax, 0x1
000000000000b40d         jbe        loc_b41a

000000000000b40f         cmp        byte [rbx+rax-1], 0x2f
000000000000b414         lea        rdx, qword [rax-1]
000000000000b418         je         loc_b428

                     loc_b41a:
000000000000b41a         pop        rbx                                         ; CODE XREF=base_len+13
000000000000b41b         ret
                        ; endp
000000000000b41c         align      32

                     loc_b420:
000000000000b420         mov        rdx, rax                                    ; CODE XREF=base_len+55
000000000000b423         nop        dword [rax+rax]

                     loc_b428:
000000000000b428         cmp        rdx, 0x1                                    ; CODE XREF=base_len+24
000000000000b42c         je         loc_b440

000000000000b42e         cmp        byte [rbx+rdx-1], 0x2f
000000000000b433         lea        rax, qword [rdx-1]
000000000000b437         je         loc_b420

000000000000b439         mov        rax, rdx
000000000000b43c         pop        rbx
000000000000b43d         ret
                        ; endp
000000000000b43e         align      64

                     loc_b440:
000000000000b440         mov        eax, 0x1                                    ; CODE XREF=base_len+44
000000000000b445         pop        rbx
000000000000b446         ret
                        ; endp
000000000000b447         align      16                                          ; End of unwind block (FDE at 0x1a4f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fdadvise:
000000000000b450         jmp        j_posix_fadvise                             ; posix_fadvise, Begin of unwind block (FDE at 0x1a51c), CODE XREF=copy_internal+12119
                        ; endp
000000000000b455         align      32                                          ; End of unwind block (FDE at 0x1a51c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fadvise:
000000000000b460         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x1a530)
000000000000b463         je         loc_b480

000000000000b465         push       rbx
000000000000b466         mov        ebx, esi
000000000000b468         call       j_fileno                                    ; fileno
000000000000b46d         mov        ecx, ebx                                    ; argument "__advise" for method j_posix_fadvise
000000000000b46f         xor        edx, edx                                    ; argument "__len" for method j_posix_fadvise
000000000000b471         xor        esi, esi                                    ; argument "__offset" for method j_posix_fadvise
000000000000b473         pop        rbx
000000000000b474         mov        edi, eax                                    ; argument "__fd" for method j_posix_fadvise
000000000000b476         jmp        j_posix_fadvise                             ; posix_fadvise
                        ; endp
000000000000b47b         align      128

                     loc_b480:
000000000000b480         ret                                                    ; CODE XREF=fadvise+3
                        ; endp
000000000000b482         align      16                                          ; End of unwind block (FDE at 0x1a530)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_28: int64_t, -40
        ;    var_38: int8_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int32_t, -88


                     open_safer:
000000000000b490         sub        rsp, 0x58                                   ; Begin of unwind block (FDE at 0x1a54c), CODE XREF=copy_internal+8380, copy_internal+11880, copy_internal+13328, copy_internal+14387, savewd_chdir+202
000000000000b494         mov        qword [rsp+0x58+var_28], rdx
000000000000b499         xor        edx, edx
000000000000b49b         mov        rax, qword [fs:0x28]
000000000000b4a4         mov        qword [rsp+0x58+var_40], rax
000000000000b4a9         xor        eax, eax
000000000000b4ab         test       sil, 0x40
000000000000b4af         jne        loc_b4d8

                     loc_b4b1:
000000000000b4b1         xor        eax, eax                                    ; CODE XREF=open_safer+103
000000000000b4b3         call       j_open                                      ; open
000000000000b4b8         mov        edi, eax
000000000000b4ba         call       fd_safer                                    ; fd_safer
000000000000b4bf         mov        rcx, qword [rsp+0x58+var_40]
000000000000b4c4         xor        rcx, qword [fs:0x28]
000000000000b4cd         jne        loc_b4f9

000000000000b4cf         add        rsp, 0x58
000000000000b4d3         ret
                        ; endp
000000000000b4d4         align      8

                     loc_b4d8:
000000000000b4d8         lea        rax, qword [rsp+0x58+arg_0]                 ; CODE XREF=open_safer+31
000000000000b4dd         mov        dword [rsp+0x58+var_58], 0x10
000000000000b4e4         mov        edx, dword [rsp+0x58+var_28]
000000000000b4e8         mov        qword [rsp+0x58+var_50], rax
000000000000b4ed         lea        rax, qword [rsp+0x58+var_38]
000000000000b4f2         mov        qword [rsp+0x58+var_48], rax
000000000000b4f7         jmp        loc_b4b1

                     loc_b4f9:
000000000000b4f9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=open_safer+61
                        ; endp
000000000000b4fe         align      256                                         ; End of unwind block (FDE at 0x1a54c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_38: int64_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     record_file:
000000000000b500         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x1a56c), CODE XREF=copy_internal+325, copy_internal+4797, copy_internal+9792
000000000000b503         je         loc_b580

000000000000b505         push       r13
000000000000b507         push       r12
000000000000b509         mov        r13, rdi
000000000000b50c         push       rbp
000000000000b50d         push       rbx
000000000000b50e         mov        r12, rsi
000000000000b511         mov        edi, 0x18                                   ; argument #1 for method xmalloc
000000000000b516         mov        rbp, rdx
000000000000b519         sub        rsp, 0x8
000000000000b51d         call       xmalloc                                     ; xmalloc
000000000000b522         mov        rdi, r12
000000000000b525         mov        rbx, rax
000000000000b528         call       xstrdup                                     ; xstrdup
000000000000b52d         mov        qword [rbx], rax
000000000000b530         mov        rax, qword [rbp+8]
000000000000b534         mov        rsi, rbx                                    ; argument #2 for method hash_insert
000000000000b537         mov        rdi, r13                                    ; argument #1 for method hash_insert
000000000000b53a         mov        qword [rbx+8], rax
000000000000b53e         mov        rax, qword [rbp]
000000000000b542         mov        qword [rbx+0x10], rax
000000000000b546         call       hash_insert                                 ; hash_insert
000000000000b54b         test       rax, rax
000000000000b54e         je         loc_b582

000000000000b550         cmp        rbx, rax
000000000000b553         je         loc_b570

000000000000b555         add        rsp, 0x8
000000000000b559         mov        rdi, rbx
000000000000b55c         pop        rbx
000000000000b55d         pop        rbp
000000000000b55e         pop        r12
000000000000b560         pop        r13
000000000000b562         jmp        triple_free                                 ; triple_free
                        ; endp
000000000000b567         align      16

                     loc_b570:
000000000000b570         add        rsp, 0x8                                    ; CODE XREF=record_file+83
000000000000b574         pop        rbx
000000000000b575         pop        rbp
000000000000b576         pop        r12
000000000000b578         pop        r13
000000000000b57a         ret
                        ; endp
000000000000b57b         align      128

                     loc_b580:
000000000000b580         ret                                                    ; CODE XREF=record_file+3
                        ; endp

                     loc_b582:
000000000000b582         call       xalloc_die                                  ; xalloc_die, CODE XREF=record_file+78
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     sub_b587:
000000000000b587         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x1a56c)
                     seen_file:
000000000000b590         sub        rsp, 0x28                                   ; Begin of unwind block (FDE at 0x1a5cc), CODE XREF=copy_internal+996, copy_internal+2649, copy_internal+6064
000000000000b594         mov        rax, qword [fs:0x28]
000000000000b59d         mov        qword [rsp+0x28+var_10], rax
000000000000b5a2         xor        eax, eax
000000000000b5a4         test       rdi, rdi
000000000000b5a7         je         loc_b5cc

000000000000b5a9         mov        rax, qword [rdx+8]
000000000000b5ad         mov        qword [rsp+0x28+var_28], rsi
000000000000b5b1         mov        rsi, rsp                                    ; argument #2 for method hash_lookup
000000000000b5b4         mov        qword [rsp+0x28+var_20], rax
000000000000b5b9         mov        rax, qword [rdx]
000000000000b5bc         mov        qword [rsp+0x28+var_18], rax
000000000000b5c1         call       hash_lookup                                 ; hash_lookup
000000000000b5c6         test       rax, rax
000000000000b5c9         setne      al

                     loc_b5cc:
000000000000b5cc         mov        rcx, qword [rsp+0x28+var_10]                ; CODE XREF=seen_file+23
000000000000b5d1         xor        rcx, qword [fs:0x28]
000000000000b5da         jne        loc_b5e1

000000000000b5dc         add        rsp, 0x28
000000000000b5e0         ret
                        ; endp

                     loc_b5e1:
000000000000b5e1         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=seen_file+74
                        ; endp
000000000000b5e6         align      16                                          ; End of unwind block (FDE at 0x1a5cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     strmode:
000000000000b5f0         mov        edx, edi                                    ; Begin of unwind block (FDE at 0x1a5ec), CODE XREF=overwrite_ok.isra.12+66, filemodestring+3
000000000000b5f2         mov        eax, 0x2d
000000000000b5f7         and        edx, 0xf000
000000000000b5fd         cmp        edx, 0x8000
000000000000b603         je         loc_b660

000000000000b605         cmp        edx, 0x4000
000000000000b60b         mov        eax, 0x64
000000000000b610         je         loc_b660

000000000000b612         cmp        edx, 0x6000
000000000000b618         mov        eax, 0x62
000000000000b61d         je         loc_b660

000000000000b61f         cmp        edx, 0x2000
000000000000b625         mov        eax, 0x63
000000000000b62a         je         loc_b660

000000000000b62c         cmp        edx, 0xa000
000000000000b632         mov        eax, 0x6c
000000000000b637         je         loc_b660

000000000000b639         cmp        edx, 0x1000
000000000000b63f         mov        eax, 0x70
000000000000b644         je         loc_b660

000000000000b646         cmp        edx, 0xc000
000000000000b64c         mov        eax, 0x73
000000000000b651         mov        edx, 0x3f
000000000000b656         cmovne     eax, edx
000000000000b659         nop        dword [rax]

                     loc_b660:
000000000000b660         mov        byte [rsi], al                              ; CODE XREF=strmode+19, strmode+32, strmode+45, strmode+58, strmode+71, strmode+84
000000000000b662         mov        eax, edi
000000000000b664         and        eax, 0x100
000000000000b669         cmp        eax, 0x1
000000000000b66c         sbb        eax, eax
000000000000b66e         and        eax, 0xffffffbb
000000000000b671         add        eax, 0x72
000000000000b674         mov        byte [rsi+1], al
000000000000b677         mov        eax, edi
000000000000b679         and        eax, 0x80
000000000000b67e         cmp        eax, 0x1
000000000000b681         sbb        eax, eax
000000000000b683         and        eax, 0xffffffb6
000000000000b686         add        eax, 0x77
000000000000b689         mov        byte [rsi+2], al
000000000000b68c         mov        eax, edi
000000000000b68e         and        eax, 0x40
000000000000b691         cmp        eax, 0x1
000000000000b694         sbb        eax, eax
000000000000b696         test       edi, 0x800
000000000000b69c         je         loc_b740

000000000000b6a2         and        eax, 0xffffffe0
000000000000b6a5         add        eax, 0x73

                     loc_b6a8:
000000000000b6a8         mov        byte [rsi+3], al                            ; CODE XREF=strmode+342
000000000000b6ab         mov        eax, edi
000000000000b6ad         and        eax, 0x20
000000000000b6b0         cmp        eax, 0x1
000000000000b6b3         sbb        eax, eax
000000000000b6b5         and        eax, 0xffffffbb
000000000000b6b8         add        eax, 0x72
000000000000b6bb         mov        byte [rsi+4], al
000000000000b6be         mov        eax, edi
000000000000b6c0         and        eax, 0x10
000000000000b6c3         cmp        eax, 0x1
000000000000b6c6         sbb        eax, eax
000000000000b6c8         and        eax, 0xffffffb6
000000000000b6cb         add        eax, 0x77
000000000000b6ce         mov        byte [rsi+5], al
000000000000b6d1         mov        eax, edi
000000000000b6d3         and        eax, 0x8
000000000000b6d6         cmp        eax, 0x1
000000000000b6d9         sbb        eax, eax
000000000000b6db         test       edi, 0x400
000000000000b6e1         je         loc_b768

000000000000b6e7         and        eax, 0xffffffe0
000000000000b6ea         add        eax, 0x73

                     loc_b6ed:
000000000000b6ed         mov        byte [rsi+6], al                            ; CODE XREF=strmode+382
000000000000b6f0         mov        eax, edi
000000000000b6f2         and        eax, 0x4
000000000000b6f5         cmp        eax, 0x1
000000000000b6f8         sbb        eax, eax
000000000000b6fa         and        eax, 0xffffffbb
000000000000b6fd         add        eax, 0x72
000000000000b700         mov        byte [rsi+7], al
000000000000b703         mov        eax, edi
000000000000b705         and        eax, 0x2
000000000000b708         cmp        eax, 0x1
000000000000b70b         sbb        eax, eax
000000000000b70d         and        eax, 0xffffffb6
000000000000b710         add        eax, 0x77
000000000000b713         mov        byte [rsi+8], al
000000000000b716         mov        eax, edi
000000000000b718         and        eax, 0x1
000000000000b71b         cmp        eax, 0x1
000000000000b71e         sbb        eax, eax
000000000000b720         and        edi, 0x200
000000000000b726         je         loc_b750

000000000000b728         and        eax, 0xffffffe0
000000000000b72b         add        eax, 0x74
000000000000b72e         mov        byte [rsi+9], al
000000000000b731         mov        eax, 0x20
000000000000b736         mov        word [rsi+0xa], ax
000000000000b73a         ret
                        ; endp
000000000000b73b         align      64

                     loc_b740:
000000000000b740         and        eax, 0xffffffb5                             ; CODE XREF=strmode+172
000000000000b743         add        eax, 0x78
000000000000b746         jmp        loc_b6a8
000000000000b74b         align      16

                     loc_b750:
000000000000b750         and        eax, 0xffffffb5                             ; CODE XREF=strmode+310
000000000000b753         add        eax, 0x78
000000000000b756         mov        byte [rsi+9], al
000000000000b759         mov        eax, 0x20
000000000000b75e         mov        word [rsi+0xa], ax
000000000000b762         ret
                        ; endp
000000000000b763         align      8

                     loc_b768:
000000000000b768         and        eax, 0xffffffb5                             ; CODE XREF=strmode+241
000000000000b76b         add        eax, 0x78
000000000000b76e         jmp        loc_b6ed
000000000000b773         align      128                                         ; End of unwind block (FDE at 0x1a5ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     filemodestring:
000000000000b780         mov        edi, dword [rdi+0x18]                       ; Begin of unwind block (FDE at 0x1a600), argument "mode" for method strmode
000000000000b783         jmp        strmode                                     ; strmode
                        ; endp
000000000000b788         align      16                                          ; End of unwind block (FDE at 0x1a600)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_41: int8_t, -65
        ;    var_50: int64_t, -80


                     file_name_concat:
000000000000b790         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x1a614), CODE XREF=main+1714, copy_internal+7808, copy_internal+7828
000000000000b794         call       mfile_name_concat                           ; mfile_name_concat
000000000000b799         test       rax, rax
000000000000b79c         je         loc_b7a3

000000000000b79e         add        rsp, 0x8
000000000000b7a2         ret
                        ; endp

                     loc_b7a3:
000000000000b7a3         call       xalloc_die                                  ; xalloc_die, CODE XREF=file_name_concat+12
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_39: int8_t, -57
        ;    var_48: int64_t, -72


                     sub_b7a8:
000000000000b7a8         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x1a614)
                     mfile_name_concat:
000000000000b7b0         push       r15                                         ; Begin of unwind block (FDE at 0x1a634), CODE XREF=file_name_concat+4
000000000000b7b2         push       r14
000000000000b7b4         mov        r15, rdx
000000000000b7b7         push       r13
000000000000b7b9         push       r12
000000000000b7bb         mov        r12, rdi
000000000000b7be         push       rbp
000000000000b7bf         push       rbx
000000000000b7c0         mov        rbp, rsi
000000000000b7c3         sub        rsp, 0x18
000000000000b7c7         call       last_component                              ; last_component
000000000000b7cc         mov        rbx, rax
000000000000b7cf         mov        rdi, rax                                    ; argument #1 for method base_len
000000000000b7d2         call       base_len                                    ; base_len
000000000000b7d7         sub        rbx, r12
000000000000b7da         mov        r13, rax
000000000000b7dd         mov        rdi, rbp                                    ; argument "__s" for method j_strlen
000000000000b7e0         add        rbx, rax
000000000000b7e3         call       j_strlen                                    ; strlen
000000000000b7e8         test       r13, r13
000000000000b7eb         mov        r14, rax
000000000000b7ee         je         loc_b820

000000000000b7f0         cmp        byte [r12+rbx-1], 0x2f
000000000000b7f6         je         loc_b8a0

000000000000b7fc         xor        eax, eax
000000000000b7fe         cmp        byte [rbp], 0x2f
000000000000b802         mov        edx, 0x0
000000000000b807         setne      al
000000000000b80a         mov        qword [rsp+0x48+var_48], rax
000000000000b80e         mov        eax, 0x2f
000000000000b813         cmove      eax, edx
000000000000b816         mov        byte [rsp+0x48+var_39], al
000000000000b81a         jmp        loc_b83e
000000000000b81c         align      32

                     loc_b820:
000000000000b820         xor        eax, eax                                    ; CODE XREF=mfile_name_concat+62
000000000000b822         cmp        byte [rbp], 0x2f
000000000000b826         mov        edx, 0x0
000000000000b82b         sete       al
000000000000b82e         mov        qword [rsp+0x48+var_48], rax
000000000000b832         mov        eax, 0x2e
000000000000b837         cmovne     eax, edx
000000000000b83a         mov        byte [rsp+0x48+var_39], al

                     loc_b83e:
000000000000b83e         lea        rdi, qword [rbx+r14+1]                      ; CODE XREF=mfile_name_concat+106, mfile_name_concat+253
000000000000b843         add        rdi, qword [rsp+0x48+var_48]                ; argument "__size" for method j_malloc
000000000000b847         call       j_malloc                                    ; malloc
000000000000b84c         test       rax, rax
000000000000b84f         mov        r13, rax
000000000000b852         je         loc_b886

000000000000b854         mov        rdi, rax                                    ; argument "__dest" for method j_mempcpy
000000000000b857         mov        rdx, rbx                                    ; argument "__n" for method j_mempcpy
000000000000b85a         mov        rsi, r12                                    ; argument "__src" for method j_mempcpy
000000000000b85d         call       j_mempcpy                                   ; mempcpy
000000000000b862         movzx      ecx, byte [rsp+0x48+var_39]
000000000000b867         mov        rdi, qword [rsp+0x48+var_48]
000000000000b86b         add        rdi, rax
000000000000b86e         test       r15, r15
000000000000b871         mov        byte [rax], cl
000000000000b873         je         loc_b878

000000000000b875         mov        qword [r15], rdi

                     loc_b878:
000000000000b878         mov        rdx, r14                                    ; argument "__n" for method j_mempcpy, CODE XREF=mfile_name_concat+195
000000000000b87b         mov        rsi, rbp                                    ; argument "__src" for method j_mempcpy
000000000000b87e         call       j_mempcpy                                   ; mempcpy
000000000000b883         mov        byte [rax], 0x0

                     loc_b886:
000000000000b886         add        rsp, 0x18                                   ; CODE XREF=mfile_name_concat+162
000000000000b88a         mov        rax, r13
000000000000b88d         pop        rbx
000000000000b88e         pop        rbp
000000000000b88f         pop        r12
000000000000b891         pop        r13
000000000000b893         pop        r14
000000000000b895         pop        r15
000000000000b897         ret
                        ; endp
000000000000b898         align      32

                     loc_b8a0:
000000000000b8a0         mov        qword [rsp+0x48+var_48], 0x0                ; CODE XREF=mfile_name_concat+70
000000000000b8a8         mov        byte [rsp+0x48+var_39], 0x0
000000000000b8ad         jmp        loc_b83e
000000000000b8af         align      16                                          ; End of unwind block (FDE at 0x1a634)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     full_read:
000000000000b8b0         push       r13                                         ; Begin of unwind block (FDE at 0x1a684), CODE XREF=install_file_in_file+863, install_file_in_file+900
000000000000b8b2         push       r12
000000000000b8b4         push       rbp
000000000000b8b5         push       rbx
000000000000b8b6         sub        rsp, 0x8
000000000000b8ba         test       rdx, rdx
000000000000b8bd         je         loc_b921

000000000000b8bf         mov        r13d, edi
000000000000b8c2         mov        rbp, rsi
000000000000b8c5         mov        rbx, rdx
000000000000b8c8         xor        r12d, r12d
000000000000b8cb         jmp        loc_b8e0
000000000000b8cd         align      16

                     loc_b8d0:
000000000000b8d0         test       rax, rax                                    ; CODE XREF=full_read+66
000000000000b8d3         je         loc_b908

000000000000b8d5         add        r12, rax
000000000000b8d8         add        rbp, rax
000000000000b8db         sub        rbx, rax
000000000000b8de         je         loc_b8f4

                     loc_b8e0:
000000000000b8e0         mov        rdx, rbx                                    ; CODE XREF=full_read+27
000000000000b8e3         mov        rsi, rbp
000000000000b8e6         mov        edi, r13d
000000000000b8e9         call       safe_read                                   ; safe_read
000000000000b8ee         cmp        rax, 0xffffffffffffffff
000000000000b8f2         jne        loc_b8d0

                     loc_b8f4:
000000000000b8f4         add        rsp, 0x8                                    ; CODE XREF=full_read+46, full_read+116
000000000000b8f8         mov        rax, r12
000000000000b8fb         pop        rbx
000000000000b8fc         pop        rbp
000000000000b8fd         pop        r12
000000000000b8ff         pop        r13
000000000000b901         ret
                        ; endp
000000000000b902         align      8

                     loc_b908:
000000000000b908         call       j___errno_location                          ; __errno_location, CODE XREF=full_read+35
000000000000b90d         mov        dword [rax], 0x0
000000000000b913         add        rsp, 0x8
000000000000b917         mov        rax, r12
000000000000b91a         pop        rbx
000000000000b91b         pop        rbp
000000000000b91c         pop        r12
000000000000b91e         pop        r13
000000000000b920         ret
                        ; endp

                     loc_b921:
000000000000b921         xor        r12d, r12d                                  ; CODE XREF=full_read+13
000000000000b924         jmp        loc_b8f4
000000000000b926         align      16                                          ; End of unwind block (FDE at 0x1a684)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     full_write:
000000000000b930         push       r13                                         ; Begin of unwind block (FDE at 0x1a6d4), CODE XREF=write_zeros+68, sparse_copy+518
000000000000b932         push       r12
000000000000b934         push       rbp
000000000000b935         push       rbx
000000000000b936         sub        rsp, 0x8
000000000000b93a         test       rdx, rdx
000000000000b93d         je         loc_b9a1

000000000000b93f         mov        r13d, edi
000000000000b942         mov        rbp, rsi
000000000000b945         mov        rbx, rdx
000000000000b948         xor        r12d, r12d
000000000000b94b         jmp        loc_b960
000000000000b94d         align      16

                     loc_b950:
000000000000b950         test       rax, rax                                    ; CODE XREF=full_write+66
000000000000b953         je         loc_b988

000000000000b955         add        r12, rax
000000000000b958         add        rbp, rax
000000000000b95b         sub        rbx, rax
000000000000b95e         je         loc_b974

                     loc_b960:
000000000000b960         mov        rdx, rbx                                    ; CODE XREF=full_write+27
000000000000b963         mov        rsi, rbp
000000000000b966         mov        edi, r13d
000000000000b969         call       safe_write                                  ; safe_write
000000000000b96e         cmp        rax, 0xffffffffffffffff
000000000000b972         jne        loc_b950

                     loc_b974:
000000000000b974         add        rsp, 0x8                                    ; CODE XREF=full_write+46, full_write+116
000000000000b978         mov        rax, r12
000000000000b97b         pop        rbx
000000000000b97c         pop        rbp
000000000000b97d         pop        r12
000000000000b97f         pop        r13
000000000000b981         ret
                        ; endp
000000000000b982         align      8

                     loc_b988:
000000000000b988         call       j___errno_location                          ; __errno_location, CODE XREF=full_write+35
000000000000b98d         mov        dword [rax], 0x1c
000000000000b993         add        rsp, 0x8
000000000000b997         mov        rax, r12
000000000000b99a         pop        rbx
000000000000b99b         pop        rbp
000000000000b99c         pop        r12
000000000000b99e         pop        r13
000000000000b9a0         ret
                        ; endp

                     loc_b9a1:
000000000000b9a1         xor        r12d, r12d                                  ; CODE XREF=full_write+13
000000000000b9a4         jmp        loc_b974
000000000000b9a6         align      16                                          ; End of unwind block (FDE at 0x1a6d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     next_prime:
000000000000b9b0         cmp        rdi, 0xa                                    ; Begin of unwind block (FDE at 0x1a724), CODE XREF=hash_initialize+123, hash_rehash+123
000000000000b9b4         mov        eax, 0xa
000000000000b9b9         movabs     r9, 0xaaaaaaaaaaaaaaab
000000000000b9c3         cmovb      rdi, rax
000000000000b9c7         or         rdi, 0x1
000000000000b9cb         cmp        rdi, 0xffffffffffffffff
000000000000b9cf         je         loc_ba3f

000000000000b9d1         nop        dword [rax]

                     loc_b9d8:
000000000000b9d8         mov        rax, rdi                                    ; CODE XREF=next_prime+141
000000000000b9db         mov        rcx, rdi
000000000000b9de         mul        r9
000000000000b9e1         mov        rax, rdx
000000000000b9e4         shr        rax, 0x1
000000000000b9e7         lea        rax, qword [rax+rax*2]
000000000000b9eb         sub        rcx, rax
000000000000b9ee         cmp        rdi, 0x9
000000000000b9f2         mov        rax, rcx
000000000000b9f5         jbe        loc_ba30

000000000000b9f7         test       rcx, rcx
000000000000b9fa         je         loc_ba35

000000000000b9fc         mov        r8d, 0x10
000000000000ba02         mov        esi, 0x9
000000000000ba07         mov        ecx, 0x3
000000000000ba0c         jmp        loc_ba19
000000000000ba0e         align      16

                     loc_ba10:
000000000000ba10         add        r8, 0x8                                     ; CODE XREF=next_prime+126
000000000000ba14         test       rdx, rdx
000000000000ba17         je         loc_ba35

                     loc_ba19:
000000000000ba19         add        rcx, 0x2                                    ; CODE XREF=next_prime+92
000000000000ba1d         xor        edx, edx
000000000000ba1f         mov        rax, rdi
000000000000ba22         div        rcx
000000000000ba25         add        rsi, r8
000000000000ba28         cmp        rsi, rdi
000000000000ba2b         mov        rax, rdx
000000000000ba2e         jb         loc_ba10

                     loc_ba30:
000000000000ba30         test       rax, rax                                    ; CODE XREF=next_prime+69
000000000000ba33         jne        loc_ba3f

                     loc_ba35:
000000000000ba35         add        rdi, 0x2                                    ; CODE XREF=next_prime+74, next_prime+103
000000000000ba39         cmp        rdi, 0xffffffffffffffff
000000000000ba3d         jne        loc_b9d8

                     loc_ba3f:
000000000000ba3f         mov        rax, rdi                                    ; CODE XREF=next_prime+31, next_prime+131
000000000000ba42         ret
                        ; endp
000000000000ba43         align      16                                          ; End of unwind block (FDE at 0x1a724)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     raw_hasher:
000000000000ba50         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x1a738), DATA XREF=hash_initialize+4
000000000000ba53         xor        edx, edx
000000000000ba55         ror        rax, 0x3
000000000000ba59         div        rsi
000000000000ba5c         mov        rax, rdx
000000000000ba5f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     raw_comparator:
000000000000ba60         cmp        rdi, rsi                                    ; End of unwind block (FDE at 0x1a738), Begin of unwind block (FDE at 0x1a74c), DATA XREF=hash_initialize+48
000000000000ba63         sete       al
000000000000ba66         ret
                        ; endp
000000000000ba67         align      16                                          ; End of unwind block (FDE at 0x1a74c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     safe_hasher:
000000000000ba70         push       rbx                                         ; Begin of unwind block (FDE at 0x1a760), CODE XREF=hash_find_entry+20, transfer_entries+101, transfer_entries+175, hash_lookup+10, hash_get_next+12
000000000000ba71         mov        rbx, rdi
000000000000ba74         mov        rdi, rsi
000000000000ba77         mov        rsi, qword [rbx+0x10]
000000000000ba7b         call       qword [rbx+0x30]
000000000000ba7e         cmp        qword [rbx+0x10], rax
000000000000ba82         jbe        loc_ba8d

000000000000ba84         shl        rax, 0x4
000000000000ba88         add        rax, qword [rbx]
000000000000ba8b         pop        rbx
000000000000ba8c         ret
                        ; endp

                     loc_ba8d:
000000000000ba8d         call       j_abort                                     ; abort, CODE XREF=safe_hasher+18
                        ; endp
000000000000ba92         align      32                                          ; End of unwind block (FDE at 0x1a760)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_find_entry:
000000000000baa0         push       r14                                         ; Begin of unwind block (FDE at 0x1a77c), CODE XREF=hash_insert_if_absent+52, hash_insert_if_absent+463, hash_delete+35
000000000000baa2         push       r13
000000000000baa4         mov        r14, rdx
000000000000baa7         push       r12
000000000000baa9         push       rbp
000000000000baaa         mov        r12, rdi
000000000000baad         push       rbx
000000000000baae         mov        rbp, rsi
000000000000bab1         mov        r13d, ecx
000000000000bab4         call       safe_hasher                                 ; safe_hasher
000000000000bab9         mov        qword [r14], rax
000000000000babc         mov        rsi, qword [rax]
000000000000babf         test       rsi, rsi
000000000000bac2         je         loc_bbb0

000000000000bac8         cmp        rsi, rbp
000000000000bacb         mov        rbx, rax
000000000000bace         je         loc_bb63

000000000000bad4         mov        rdi, rbp
000000000000bad7         call       qword [r12+0x38]
000000000000badc         test       al, al
000000000000bade         jne        loc_bb60

000000000000bae4         mov        rax, qword [rbx+8]
000000000000bae8         test       rax, rax
000000000000baeb         je         loc_bbb0

000000000000baf1         mov        rsi, qword [rax]
000000000000baf4         cmp        rbp, rsi
000000000000baf7         jne        loc_bb19

000000000000baf9         jmp        loc_bb2c
000000000000bafb         align      256

                     loc_bb00:
000000000000bb00         mov        rbx, qword [rbx+8]                          ; CODE XREF=hash_find_entry+131
000000000000bb04         mov        rax, qword [rbx+8]
000000000000bb08         test       rax, rax
000000000000bb0b         je         loc_bbb0

000000000000bb11         mov        rsi, qword [rax]
000000000000bb14         cmp        rsi, rbp
000000000000bb17         je         loc_bb2c

                     loc_bb19:
000000000000bb19         mov        rdi, rbp                                    ; CODE XREF=hash_find_entry+87
000000000000bb1c         call       qword [r12+0x38]
000000000000bb21         test       al, al
000000000000bb23         je         loc_bb00

000000000000bb25         mov        rax, qword [rbx+8]
000000000000bb29         mov        rsi, qword [rax]

                     loc_bb2c:
000000000000bb2c         test       r13b, r13b                                  ; CODE XREF=hash_find_entry+89, hash_find_entry+119
000000000000bb2f         je         loc_bb4e

000000000000bb31         mov        rdx, qword [rax+8]
000000000000bb35         mov        qword [rbx+8], rdx
000000000000bb39         mov        qword [rax], 0x0
000000000000bb40         mov        rdx, qword [r12+0x48]
000000000000bb45         mov        qword [rax+8], rdx
000000000000bb49         mov        qword [r12+0x48], rax

                     loc_bb4e:
000000000000bb4e         pop        rbx                                         ; CODE XREF=hash_find_entry+143, hash_find_entry+198, hash_find_entry+263
000000000000bb4f         mov        rax, rsi
000000000000bb52         pop        rbp
000000000000bb53         pop        r12
000000000000bb55         pop        r13
000000000000bb57         pop        r14
000000000000bb59         ret
                        ; endp
000000000000bb5a         align      32

                     loc_bb60:
000000000000bb60         mov        rsi, qword [rbx]                            ; CODE XREF=hash_find_entry+62

                     loc_bb63:
000000000000bb63         test       r13b, r13b                                  ; CODE XREF=hash_find_entry+46
000000000000bb66         je         loc_bb4e

000000000000bb68         mov        rax, qword [rbx+8]
000000000000bb6c         test       rax, rax
000000000000bb6f         je         loc_bba0

000000000000bb71         movdqu     xmm0, xmmword [rax]
000000000000bb75         movups     xmmword [rbx], xmm0
000000000000bb78         mov        qword [rax], 0x0
000000000000bb7f         mov        rdx, qword [r12+0x48]
000000000000bb84         mov        qword [rax+8], rdx
000000000000bb88         mov        qword [r12+0x48], rax
000000000000bb8d         mov        rax, rsi
000000000000bb90         pop        rbx
000000000000bb91         pop        rbp
000000000000bb92         pop        r12
000000000000bb94         pop        r13
000000000000bb96         pop        r14
000000000000bb98         ret
                        ; endp
000000000000bb99         align      32

                     loc_bba0:
000000000000bba0         mov        qword [rbx], 0x0                            ; CODE XREF=hash_find_entry+207
000000000000bba7         jmp        loc_bb4e
000000000000bba9         align      16

                     loc_bbb0:
000000000000bbb0         xor        esi, esi                                    ; CODE XREF=hash_find_entry+34, hash_find_entry+75, hash_find_entry+107
000000000000bbb2         pop        rbx
000000000000bbb3         mov        rax, rsi
000000000000bbb6         pop        rbp
000000000000bbb7         pop        r12
000000000000bbb9         pop        r13
000000000000bbbb         pop        r14
000000000000bbbd         ret
                        ; endp
000000000000bbbe         align      64                                          ; End of unwind block (FDE at 0x1a77c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     check_tuning.isra.0:
000000000000bbc0         mov        rdx, qword [rdi]                            ; Begin of unwind block (FDE at 0x1a7dc), CODE XREF=hash_initialize+96, hash_initialize+283, hash_insert_if_absent+324, hash_delete+165
000000000000bbc3         lea        rcx, qword [default_tuning]                 ; default_tuning
000000000000bbca         mov        eax, 0x1
000000000000bbcf         cmp        rdx, rcx
000000000000bbd2         je         loc_bc35

000000000000bbd4         movss      xmm0, dword [rdx+8]
000000000000bbd9         ucomiss    xmm0, dword [float_181f4]                   ; float_181f4
000000000000bbe0         jbe        loc_bc30

000000000000bbe2         movss      xmm1, dword [float_181f8]                   ; float_181f8
000000000000bbea         ucomiss    xmm1, xmm0
000000000000bbed         jbe        loc_bc30

000000000000bbef         movss      xmm1, dword [rdx+0xc]
000000000000bbf4         ucomiss    xmm1, dword [float_181fc]                   ; float_181fc
000000000000bbfb         jbe        loc_bc30

000000000000bbfd         movss      xmm1, dword [rdx]
000000000000bc01         ucomiss    xmm1, dword [float_18200]                   ; float_18200
000000000000bc08         jb         loc_bc30

000000000000bc0a         addss      xmm1, dword [float_181f4]                   ; float_181f4
000000000000bc12         movss      xmm2, dword [rdx+4]
000000000000bc17         ucomiss    xmm2, xmm1
000000000000bc1a         jbe        loc_bc30

000000000000bc1c         movss      xmm3, dword [float_18204]                   ; float_18204
000000000000bc24         ucomiss    xmm3, xmm2
000000000000bc27         jb         loc_bc30

000000000000bc29         ucomiss    xmm0, xmm1
000000000000bc2c         ja         loc_bc35

000000000000bc2e         nop

                     loc_bc30:
000000000000bc30         mov        qword [rdi], rcx                            ; CODE XREF=check_tuning.isra.0+32, check_tuning.isra.0+45, check_tuning.isra.0+59, check_tuning.isra.0+72, check_tuning.isra.0+90, check_tuning.isra.0+103
000000000000bc33         xor        eax, eax

                     loc_bc35:
000000000000bc35         ret                                                    ; CODE XREF=check_tuning.isra.0+18, check_tuning.isra.0+108
                        ; endp
000000000000bc37         align      64                                          ; End of unwind block (FDE at 0x1a7dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     transfer_entries:
000000000000bc40         push       r15                                         ; Begin of unwind block (FDE at 0x1a7f0), CODE XREF=hash_rehash+303, hash_rehash+338, hash_rehash+359
000000000000bc42         push       r14
000000000000bc44         push       r13
000000000000bc46         push       r12
000000000000bc48         push       rbp
000000000000bc49         push       rbx
000000000000bc4a         sub        rsp, 0x8
000000000000bc4e         mov        r12, qword [rsi]
000000000000bc51         cmp        r12, qword [rsi+8]
000000000000bc55         jae        loc_bd38

000000000000bc5b         mov        rbp, rdi
000000000000bc5e         mov        r13, rsi
000000000000bc61         mov        r14d, edx
000000000000bc64         nop        dword [rax]

                     loc_bc68:
000000000000bc68         mov        r15, qword [r12]                            ; CODE XREF=transfer_entries+242
000000000000bc6c         test       r15, r15
000000000000bc6f         je         loc_bd2a

000000000000bc75         mov        rbx, qword [r12+8]
000000000000bc7a         test       rbx, rbx
000000000000bc7d         jne        loc_bc9c

000000000000bc7f         jmp        loc_bcdb
000000000000bc81         align      8

                     loc_bc88:
000000000000bc88         mov        rcx, qword [rax+8]                          ; CODE XREF=transfer_entries+114
000000000000bc8c         test       rdx, rdx
000000000000bc8f         mov        qword [rbx+8], rcx
000000000000bc93         mov        qword [rax+8], rbx
000000000000bc97         mov        rbx, rdx
000000000000bc9a         je         loc_bcd7

                     loc_bc9c:
000000000000bc9c         mov        r15, qword [rbx]                            ; CODE XREF=transfer_entries+61, transfer_entries+149
000000000000bc9f         mov        rdi, rbp
000000000000bca2         mov        rsi, r15
000000000000bca5         call       safe_hasher                                 ; safe_hasher
000000000000bcaa         cmp        qword [rax], 0x0
000000000000bcae         mov        rdx, qword [rbx+8]
000000000000bcb2         jne        loc_bc88

000000000000bcb4         mov        qword [rax], r15
000000000000bcb7         add        qword [rbp+0x18], 0x1
000000000000bcbc         test       rdx, rdx
000000000000bcbf         mov        qword [rbx], 0x0
000000000000bcc6         mov        rax, qword [rbp+0x48]
000000000000bcca         mov        qword [rbx+8], rax
000000000000bcce         mov        qword [rbp+0x48], rbx
000000000000bcd2         mov        rbx, rdx
000000000000bcd5         jne        loc_bc9c

                     loc_bcd7:
000000000000bcd7         mov        r15, qword [r12]                            ; CODE XREF=transfer_entries+90

                     loc_bcdb:
000000000000bcdb         test       r14b, r14b                                  ; CODE XREF=transfer_entries+63
000000000000bcde         mov        qword [r12+8], 0x0
000000000000bce7         jne        loc_bd2a

000000000000bce9         mov        rsi, r15
000000000000bcec         mov        rdi, rbp
000000000000bcef         call       safe_hasher                                 ; safe_hasher
000000000000bcf4         cmp        qword [rax], 0x0
000000000000bcf8         mov        rbx, rax
000000000000bcfb         je         loc_bd50

000000000000bcfd         mov        rax, qword [rbp+0x48]
000000000000bd01         test       rax, rax
000000000000bd04         je         loc_bd60

000000000000bd06         mov        rdx, qword [rax+8]
000000000000bd0a         mov        qword [rbp+0x48], rdx

                     loc_bd0e:
000000000000bd0e         mov        rdx, qword [rbx+8]                          ; CODE XREF=transfer_entries+301
000000000000bd12         mov        qword [rax], r15
000000000000bd15         mov        qword [rax+8], rdx
000000000000bd19         mov        qword [rbx+8], rax

                     loc_bd1d:
000000000000bd1d         mov        qword [r12], 0x0                            ; CODE XREF=transfer_entries+280
000000000000bd25         sub        qword [r13+0x18], 0x1

                     loc_bd2a:
000000000000bd2a         add        r12, 0x10                                   ; CODE XREF=transfer_entries+47, transfer_entries+167
000000000000bd2e         cmp        qword [r13+8], r12
000000000000bd32         ja         loc_bc68

                     loc_bd38:
000000000000bd38         add        rsp, 0x8                                    ; CODE XREF=transfer_entries+21
000000000000bd3c         mov        eax, 0x1
000000000000bd41         pop        rbx
000000000000bd42         pop        rbp
000000000000bd43         pop        r12
000000000000bd45         pop        r13
000000000000bd47         pop        r14
000000000000bd49         pop        r15
000000000000bd4b         ret
                        ; endp
000000000000bd4c         align      16

                     loc_bd50:
000000000000bd50         mov        qword [rax], r15                            ; CODE XREF=transfer_entries+187
000000000000bd53         add        qword [rbp+0x18], 0x1
000000000000bd58         jmp        loc_bd1d
000000000000bd5a         align      32

                     loc_bd60:
000000000000bd60         mov        edi, 0x10                                   ; argument "__size" for method j_malloc, CODE XREF=transfer_entries+196
000000000000bd65         call       j_malloc                                    ; malloc
000000000000bd6a         test       rax, rax
000000000000bd6d         jne        loc_bd0e

000000000000bd6f         add        rsp, 0x8
000000000000bd73         xor        eax, eax
000000000000bd75         pop        rbx
000000000000bd76         pop        rbp
000000000000bd77         pop        r12
000000000000bd79         pop        r13
000000000000bd7b         pop        r14
000000000000bd7d         pop        r15
000000000000bd7f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_buckets:
000000000000bd80         mov        rax, qword [rdi+0x10]                       ; End of unwind block (FDE at 0x1a7f0), Begin of unwind block (FDE at 0x1a850)
000000000000bd84         ret
                        ; endp
000000000000bd85         align      16                                          ; End of unwind block (FDE at 0x1a850)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_buckets_used:
000000000000bd90         mov        rax, qword [rdi+0x18]                       ; Begin of unwind block (FDE at 0x1a864)
000000000000bd94         ret
                        ; endp
000000000000bd95         align      32                                          ; End of unwind block (FDE at 0x1a864)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_entries:
000000000000bda0         mov        rax, qword [rdi+0x20]                       ; Begin of unwind block (FDE at 0x1a878)
000000000000bda4         ret
                        ; endp
000000000000bda5         align      16                                          ; End of unwind block (FDE at 0x1a878)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_max_bucket_length:
000000000000bdb0         mov        rsi, qword [rdi]                            ; Begin of unwind block (FDE at 0x1a88c)
000000000000bdb3         mov        rdi, qword [rdi+8]
000000000000bdb7         xor        eax, eax
000000000000bdb9         cmp        rsi, rdi
000000000000bdbc         jae        loc_bdf7

000000000000bdbe         nop

                     loc_bdc0:
000000000000bdc0         cmp        qword [rsi], 0x0                            ; CODE XREF=hash_get_max_bucket_length+67
000000000000bdc4         je         loc_bdec

000000000000bdc6         mov        rdx, qword [rsi+8]
000000000000bdca         mov        ecx, 0x1
000000000000bdcf         test       rdx, rdx
000000000000bdd2         je         loc_bde5

000000000000bdd4         nop        dword [rax]

                     loc_bdd8:
000000000000bdd8         mov        rdx, qword [rdx+8]                          ; CODE XREF=hash_get_max_bucket_length+51
000000000000bddc         add        rcx, 0x1
000000000000bde0         test       rdx, rdx
000000000000bde3         jne        loc_bdd8

                     loc_bde5:
000000000000bde5         cmp        rax, rcx                                    ; CODE XREF=hash_get_max_bucket_length+34
000000000000bde8         cmovb      rax, rcx

                     loc_bdec:
000000000000bdec         add        rsi, 0x10                                   ; CODE XREF=hash_get_max_bucket_length+20
000000000000bdf0         cmp        rsi, rdi
000000000000bdf3         jb         loc_bdc0

000000000000bdf5         ret
                        ; endp

                     loc_bdf7:
000000000000bdf7         ret                                                    ; CODE XREF=hash_get_max_bucket_length+12
                        ; endp
000000000000bdf9         align      512                                         ; End of unwind block (FDE at 0x1a88c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_table_ok:
000000000000be00         mov        rcx, qword [rdi]                            ; Begin of unwind block (FDE at 0x1a8a0)
000000000000be03         mov        r8, qword [rdi+8]
000000000000be07         xor        edx, edx
000000000000be09         xor        esi, esi
000000000000be0b         cmp        rcx, r8
000000000000be0e         jae        loc_be46

                     loc_be10:
000000000000be10         cmp        qword [rcx], 0x0                            ; CODE XREF=hash_table_ok+68
000000000000be14         je         loc_be3d

000000000000be16         mov        rax, qword [rcx+8]
000000000000be1a         add        rsi, 0x1
000000000000be1e         add        rdx, 0x1
000000000000be22         test       rax, rax
000000000000be25         je         loc_be3d

000000000000be27         nop        word [rax+rax]

                     loc_be30:
000000000000be30         mov        rax, qword [rax+8]                          ; CODE XREF=hash_table_ok+59
000000000000be34         add        rdx, 0x1
000000000000be38         test       rax, rax
000000000000be3b         jne        loc_be30

                     loc_be3d:
000000000000be3d         add        rcx, 0x10                                   ; CODE XREF=hash_table_ok+20, hash_table_ok+37
000000000000be41         cmp        rcx, r8
000000000000be44         jb         loc_be10

                     loc_be46:
000000000000be46         xor        eax, eax                                    ; CODE XREF=hash_table_ok+14
000000000000be48         cmp        qword [rdi+0x18], rsi
000000000000be4c         je         loc_be50

000000000000be4e         ret
                        ; endp

                     loc_be50:
000000000000be50         cmp        qword [rdi+0x20], rdx                       ; CODE XREF=hash_table_ok+76
000000000000be54         sete       al
000000000000be57         ret
                        ; endp
000000000000be58         align      32                                          ; End of unwind block (FDE at 0x1a8a0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_print_statistics:
000000000000be60         push       r13                                         ; Begin of unwind block (FDE at 0x1a8b4)
000000000000be62         push       r12
000000000000be64         mov        r12, rsi
000000000000be67         push       rbp
000000000000be68         push       rbx
000000000000be69         xor        ebx, ebx
000000000000be6b         sub        rsp, 0x8
000000000000be6f         mov        rsi, qword [rdi]
000000000000be72         mov        rcx, qword [rdi+0x20]
000000000000be76         mov        rbp, qword [rdi+0x10]
000000000000be7a         mov        r13, qword [rdi+0x18]
000000000000be7e         mov        rdi, qword [rdi+8]
000000000000be82         cmp        rsi, rdi
000000000000be85         jae        loc_bec5

000000000000be87         nop        word [rax+rax]

                     loc_be90:
000000000000be90         cmp        qword [rsi], 0x0                            ; CODE XREF=hash_print_statistics+99
000000000000be94         je         loc_bebc

000000000000be96         mov        rax, qword [rsi+8]
000000000000be9a         mov        edx, 0x1
000000000000be9f         test       rax, rax
000000000000bea2         je         loc_beb5

000000000000bea4         nop        dword [rax]

                     loc_bea8:
000000000000bea8         mov        rax, qword [rax+8]                          ; CODE XREF=hash_print_statistics+83
000000000000beac         add        rdx, 0x1
000000000000beb0         test       rax, rax
000000000000beb3         jne        loc_bea8

                     loc_beb5:
000000000000beb5         cmp        rbx, rdx                                    ; CODE XREF=hash_print_statistics+66
000000000000beb8         cmovb      rbx, rdx

                     loc_bebc:
000000000000bebc         add        rsi, 0x10                                   ; CODE XREF=hash_print_statistics+52
000000000000bec0         cmp        rsi, rdi
000000000000bec3         jb         loc_be90

                     loc_bec5:
000000000000bec5         lea        rdx, qword [aEntriesLun]                    ; "# entries:         %lu\\n", CODE XREF=hash_print_statistics+37
000000000000becc         mov        esi, 0x1
000000000000bed1         mov        rdi, r12
000000000000bed4         xor        eax, eax
000000000000bed6         call       j___fprintf_chk                             ; __fprintf_chk
000000000000bedb         lea        rdx, qword [aBucketsLun]                    ; "# buckets:         %lu\\n"
000000000000bee2         xor        eax, eax
000000000000bee4         mov        rcx, rbp
000000000000bee7         mov        esi, 0x1
000000000000beec         mov        rdi, r12
000000000000beef         call       j___fprintf_chk                             ; __fprintf_chk
000000000000bef4         test       r13, r13
000000000000bef7         js         loc_bf60

000000000000bef9         pxor       xmm0, xmm0
000000000000befd         test       rbp, rbp
000000000000bf00         cvtsi2sd   xmm0, r13
000000000000bf05         mulsd      xmm0, qword [float_18210+8]                 ; 0x18218
000000000000bf0d         js         loc_bf89

                     loc_bf0f:
000000000000bf0f         pxor       xmm1, xmm1                                  ; CODE XREF=hash_print_statistics+295
000000000000bf13         cvtsi2sd   xmm1, rbp

                     loc_bf18:
000000000000bf18         divsd      xmm0, xmm1                                  ; CODE XREF=hash_print_statistics+322
000000000000bf1c         lea        rdx, qword [aBucketsUsedLu2]                ; "# buckets used:    %lu (%.2f%%)\\n"
000000000000bf23         mov        rcx, r13
000000000000bf26         mov        rdi, r12
000000000000bf29         mov        esi, 0x1
000000000000bf2e         mov        eax, 0x1
000000000000bf33         call       j___fprintf_chk                             ; __fprintf_chk
000000000000bf38         add        rsp, 0x8
000000000000bf3c         mov        rcx, rbx
000000000000bf3f         mov        rdi, r12
000000000000bf42         pop        rbx
000000000000bf43         pop        rbp
000000000000bf44         pop        r12
000000000000bf46         pop        r13
000000000000bf48         lea        rdx, qword [aMaxBucketLengt]                ; "max bucket length: %lu\\n"
000000000000bf4f         mov        esi, 0x1
000000000000bf54         xor        eax, eax
000000000000bf56         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
000000000000bf5b         align      32

                     loc_bf60:
000000000000bf60         mov        rax, r13                                    ; CODE XREF=hash_print_statistics+151
000000000000bf63         mov        rdx, r13
000000000000bf66         pxor       xmm0, xmm0
000000000000bf6a         shr        rax, 0x1
000000000000bf6d         and        edx, 0x1
000000000000bf70         or         rax, rdx
000000000000bf73         test       rbp, rbp
000000000000bf76         cvtsi2sd   xmm0, rax
000000000000bf7b         addsd      xmm0, xmm0
000000000000bf7f         mulsd      xmm0, qword [float_18210+8]                 ; 0x18218
000000000000bf87         jns        loc_bf0f

                     loc_bf89:
000000000000bf89         mov        rax, rbp                                    ; CODE XREF=hash_print_statistics+173
000000000000bf8c         pxor       xmm1, xmm1
000000000000bf90         shr        rax, 0x1
000000000000bf93         and        ebp, 0x1
000000000000bf96         or         rax, rbp
000000000000bf99         cvtsi2sd   xmm1, rax
000000000000bf9e         addsd      xmm1, xmm1
000000000000bfa2         jmp        loc_bf18
000000000000bfa7         align      16                                          ; End of unwind block (FDE at 0x1a8b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_lookup:
000000000000bfb0         push       r12                                         ; Begin of unwind block (FDE at 0x1a8f0), CODE XREF=src_to_dest_lookup+39, seen_file+49, utimecmpat+528
000000000000bfb2         push       rbp
000000000000bfb3         mov        r12, rdi
000000000000bfb6         push       rbx
000000000000bfb7         mov        rbp, rsi
000000000000bfba         call       safe_hasher                                 ; safe_hasher
000000000000bfbf         mov        rsi, qword [rax]
000000000000bfc2         test       rsi, rsi
000000000000bfc5         je         loc_bfed

000000000000bfc7         mov        rbx, rax
000000000000bfca         jmp        loc_bfd3
000000000000bfcc         align      16

                     loc_bfd0:
000000000000bfd0         mov        rsi, qword [rbx]                            ; CODE XREF=hash_lookup+59

                     loc_bfd3:
000000000000bfd3         cmp        rsi, rbp                                    ; CODE XREF=hash_lookup+26
000000000000bfd6         je         loc_bfef

000000000000bfd8         mov        rdi, rbp
000000000000bfdb         call       qword [r12+0x38]
000000000000bfe0         test       al, al
000000000000bfe2         jne        loc_c000

000000000000bfe4         mov        rbx, qword [rbx+8]
000000000000bfe8         test       rbx, rbx
000000000000bfeb         jne        loc_bfd0

                     loc_bfed:
000000000000bfed         xor        esi, esi                                    ; CODE XREF=hash_lookup+21

                     loc_bfef:
000000000000bfef         pop        rbx                                         ; CODE XREF=hash_lookup+38
000000000000bff0         mov        rax, rsi
000000000000bff3         pop        rbp
000000000000bff4         pop        r12
000000000000bff6         ret
                        ; endp
000000000000bff7         align      16384

                     loc_c000:
000000000000c000         mov        rsi, qword [rbx]                            ; CODE XREF=hash_lookup+50, DATA XREF=copy_internal+6344, strmode+86
000000000000c003         pop        rbx
000000000000c004         pop        rbp
000000000000c005         mov        rax, rsi
000000000000c008         pop        r12
000000000000c00a         ret
                        ; endp
000000000000c00b         align      16                                          ; End of unwind block (FDE at 0x1a8f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_first:
000000000000c010         cmp        qword [rdi+0x20], 0x0                       ; Begin of unwind block (FDE at 0x1a928)
000000000000c015         je         loc_c043

000000000000c017         mov        rdx, qword [rdi]
000000000000c01a         mov        rcx, qword [rdi+8]
000000000000c01e         cmp        rdx, rcx
000000000000c021         jae        loc_c048

000000000000c023         mov        rax, qword [rdx]
000000000000c026         test       rax, rax
000000000000c029         jne        loc_c046

000000000000c02b         nop        dword [rax+rax]

                     loc_c030:
000000000000c030         add        rdx, 0x10                                   ; CODE XREF=hash_get_first+47
000000000000c034         cmp        rdx, rcx
000000000000c037         jae        loc_c048

000000000000c039         mov        rax, qword [rdx]
000000000000c03c         test       rax, rax
000000000000c03f         je         loc_c030

000000000000c041         ret
                        ; endp

                     loc_c043:
000000000000c043         xor        eax, eax                                    ; CODE XREF=hash_get_first+5
000000000000c045         ret
                        ; endp

                     loc_c046:
000000000000c046         ret                                                    ; CODE XREF=hash_get_first+25
                        ; endp

                     loc_c048:
000000000000c048         sub        rsp, 0x8                                    ; CODE XREF=hash_get_first+17, hash_get_first+39
000000000000c04c         call       j_abort                                     ; abort
                        ; endp
000000000000c051         align      32                                          ; End of unwind block (FDE at 0x1a928)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_next:
000000000000c060         push       rbp                                         ; Begin of unwind block (FDE at 0x1a93c)
000000000000c061         push       rbx
000000000000c062         mov        rbp, rdi
000000000000c065         mov        rbx, rsi
000000000000c068         sub        rsp, 0x8
000000000000c06c         call       safe_hasher                                 ; safe_hasher
000000000000c071         mov        rdx, rax
000000000000c074         mov        rcx, rax
000000000000c077         mov        rax, qword [rdx]
000000000000c07a         mov        rdx, qword [rdx+8]
000000000000c07e         cmp        rax, rbx
000000000000c081         je         loc_c099

000000000000c083         nop        dword [rax+rax]

                     loc_c088:
000000000000c088         test       rdx, rdx                                    ; CODE XREF=hash_get_next+55
000000000000c08b         je         loc_c09e

000000000000c08d         mov        rax, qword [rdx]
000000000000c090         mov        rdx, qword [rdx+8]
000000000000c094         cmp        rax, rbx
000000000000c097         jne        loc_c088

                     loc_c099:
000000000000c099         test       rdx, rdx                                    ; CODE XREF=hash_get_next+33
000000000000c09c         jne        loc_c0c8

                     loc_c09e:
000000000000c09e         mov        rdx, qword [rbp+8]                          ; CODE XREF=hash_get_next+43
000000000000c0a2         jmp        loc_c0b0
000000000000c0a4         align      8

                     loc_c0a8:
000000000000c0a8         mov        rax, qword [rcx]                            ; CODE XREF=hash_get_next+87
000000000000c0ab         test       rax, rax
000000000000c0ae         jne        loc_c0bb

                     loc_c0b0:
000000000000c0b0         add        rcx, 0x10                                   ; CODE XREF=hash_get_next+66
000000000000c0b4         cmp        rdx, rcx
000000000000c0b7         ja         loc_c0a8

000000000000c0b9         xor        eax, eax

                     loc_c0bb:
000000000000c0bb         add        rsp, 0x8                                    ; CODE XREF=hash_get_next+78
000000000000c0bf         pop        rbx
000000000000c0c0         pop        rbp
000000000000c0c1         ret
                        ; endp
000000000000c0c2         align      8

                     loc_c0c8:
000000000000c0c8         mov        rax, qword [rdx]                            ; CODE XREF=hash_get_next+60
000000000000c0cb         add        rsp, 0x8
000000000000c0cf         pop        rbx
000000000000c0d0         pop        rbp
000000000000c0d1         ret
                        ; endp
000000000000c0d2         align      32                                          ; End of unwind block (FDE at 0x1a93c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_entries:
000000000000c0e0         mov        r9, qword [rdi]                             ; Begin of unwind block (FDE at 0x1a970)
000000000000c0e3         cmp        qword [rdi+8], r9
000000000000c0e7         jbe        loc_c142

000000000000c0e9         xor        r8d, r8d

                     loc_c0ec:
000000000000c0ec         mov        rcx, qword [r9]                             ; CODE XREF=hash_get_entries+85
000000000000c0ef         test       rcx, rcx
000000000000c0f2         je         loc_c12d

000000000000c0f4         cmp        rdx, r8
000000000000c0f7         jbe        loc_c137

000000000000c0f9         mov        qword [rsi+r8*8], rcx
000000000000c0fd         mov        rcx, qword [r9+8]
000000000000c101         lea        rax, qword [r8+1]
000000000000c105         test       rcx, rcx
000000000000c108         je         loc_c12a

000000000000c10a         nop        word [rax+rax]

                     loc_c110:
000000000000c110         cmp        rdx, rax                                    ; CODE XREF=hash_get_entries+72
000000000000c113         je         loc_c140

000000000000c115         mov        r8, qword [rcx]
000000000000c118         add        rax, 0x1
000000000000c11c         mov        qword [rsi+rax*8-8], r8
000000000000c121         mov        rcx, qword [rcx+8]
000000000000c125         test       rcx, rcx
000000000000c128         jne        loc_c110

                     loc_c12a:
000000000000c12a         mov        r8, rax                                     ; CODE XREF=hash_get_entries+40

                     loc_c12d:
000000000000c12d         add        r9, 0x10                                    ; CODE XREF=hash_get_entries+18
000000000000c131         cmp        qword [rdi+8], r9
000000000000c135         ja         loc_c0ec

                     loc_c137:
000000000000c137         mov        rax, r8                                     ; CODE XREF=hash_get_entries+23
000000000000c13a         ret
                        ; endp
000000000000c13b         align      64

                     loc_c140:
000000000000c140         ret                                                    ; CODE XREF=hash_get_entries+51
                        ; endp

                     loc_c142:
000000000000c142         xor        eax, eax                                    ; CODE XREF=hash_get_entries+7
000000000000c144         ret
                        ; endp
000000000000c145         align      16                                          ; End of unwind block (FDE at 0x1a970)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_do_for_each:
000000000000c150         push       r15                                         ; Begin of unwind block (FDE at 0x1a984)
000000000000c152         push       r14
000000000000c154         push       r13
000000000000c156         push       r12
000000000000c158         push       rbp
000000000000c159         push       rbx
000000000000c15a         sub        rsp, 0x8
000000000000c15e         mov        r14, qword [rdi]
000000000000c161         cmp        qword [rdi+8], r14
000000000000c165         jbe        loc_c1b6

000000000000c167         mov        r13, rdx
000000000000c16a         mov        r12, rsi
000000000000c16d         mov        r15, rdi
000000000000c170         xor        ebp, ebp

                     loc_c172:
000000000000c172         mov        rdi, qword [r14]                            ; CODE XREF=hash_do_for_each+82
000000000000c175         test       rdi, rdi
000000000000c178         je         loc_c19a

000000000000c17a         mov        rbx, r14
000000000000c17d         jmp        loc_c183
000000000000c17f         align      128

                     loc_c180:
000000000000c180         mov        rdi, qword [rbx]                            ; CODE XREF=hash_do_for_each+72

                     loc_c183:
000000000000c183         mov        rsi, r13                                    ; CODE XREF=hash_do_for_each+45
000000000000c186         call       r12
000000000000c189         test       al, al
000000000000c18b         je         loc_c1a4

000000000000c18d         mov        rbx, qword [rbx+8]
000000000000c191         add        rbp, 0x1
000000000000c195         test       rbx, rbx
000000000000c198         jne        loc_c180

                     loc_c19a:
000000000000c19a         add        r14, 0x10                                   ; CODE XREF=hash_do_for_each+40
000000000000c19e         cmp        qword [r15+8], r14
000000000000c1a2         ja         loc_c172

                     loc_c1a4:
000000000000c1a4         add        rsp, 0x8                                    ; CODE XREF=hash_do_for_each+59, hash_do_for_each+104
000000000000c1a8         mov        rax, rbp
000000000000c1ab         pop        rbx
000000000000c1ac         pop        rbp
000000000000c1ad         pop        r12
000000000000c1af         pop        r13
000000000000c1b1         pop        r14
000000000000c1b3         pop        r15
000000000000c1b5         ret
                        ; endp

                     loc_c1b6:
000000000000c1b6         xor        ebp, ebp                                    ; CODE XREF=hash_do_for_each+21
000000000000c1b8         jmp        loc_c1a4
000000000000c1ba         align      64                                          ; End of unwind block (FDE at 0x1a984)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_string:
000000000000c1c0         movzx      ecx, byte [rdi]                             ; Begin of unwind block (FDE at 0x1a9d0)
000000000000c1c3         xor        edx, edx
000000000000c1c5         test       cl, cl
000000000000c1c7         je         loc_c1ed

000000000000c1c9         nop        dword [rax]

                     loc_c1d0:
000000000000c1d0         mov        rax, rdx                                    ; CODE XREF=hash_string+43
000000000000c1d3         add        rdi, 0x1
000000000000c1d7         shl        rax, 0x5
000000000000c1db         sub        rax, rdx
000000000000c1de         xor        edx, edx
000000000000c1e0         add        rax, rcx
000000000000c1e3         movzx      ecx, byte [rdi]
000000000000c1e6         div        rsi
000000000000c1e9         test       cl, cl
000000000000c1eb         jne        loc_c1d0

                     loc_c1ed:
000000000000c1ed         mov        rax, rdx                                    ; CODE XREF=hash_string+7
000000000000c1f0         ret
                        ; endp
000000000000c1f1         align      512                                         ; End of unwind block (FDE at 0x1a9d0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_reset_tuning:
000000000000c200         movabs     rax, 0x3f80000000000000                     ; Begin of unwind block (FDE at 0x1a9e4)
000000000000c20a         mov        byte [rdi+0x10], 0x0
000000000000c20e         mov        qword [rdi], rax
000000000000c211         movabs     rax, 0x3fb4fdf43f4ccccd
000000000000c21b         mov        qword [rdi+8], rax
000000000000c21f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_initialize:
000000000000c220         push       r15                                         ; End of unwind block (FDE at 0x1a9e4), Begin of unwind block (FDE at 0x1a9f8), CODE XREF=dest_info_init+32, src_info_init+32, hash_init+32, utimecmpat+1627
000000000000c222         push       r14
000000000000c224         lea        rax, qword [raw_hasher]                     ; raw_hasher
000000000000c22b         push       r13
000000000000c22d         push       r12
000000000000c22f         mov        r12, rdx
000000000000c232         push       rbp
000000000000c233         push       rbx
000000000000c234         mov        r13, rcx
000000000000c237         mov        rbp, rdi
000000000000c23a         mov        edi, 0x50                                   ; argument "__size" for method j_malloc
000000000000c23f         mov        r15, rsi
000000000000c242         sub        rsp, 0x8
000000000000c246         test       rdx, rdx
000000000000c249         mov        r14, r8
000000000000c24c         cmove      r12, rax
000000000000c250         lea        rax, qword [raw_comparator]                 ; raw_comparator
000000000000c257         test       rcx, rcx
000000000000c25a         cmove      r13, rax
000000000000c25e         call       j_malloc                                    ; malloc
000000000000c263         test       rax, rax
000000000000c266         mov        rbx, rax
000000000000c269         je         loc_c31a

000000000000c26f         test       r15, r15
000000000000c272         lea        rdi, qword [rax+0x28]
000000000000c276         je         loc_c330

000000000000c27c         mov        qword [rax+0x28], r15
000000000000c280         call       check_tuning.isra.0                         ; check_tuning.isra.0
000000000000c285         test       al, al
000000000000c287         je         loc_c310

000000000000c28d         cmp        byte [r15+0x10], 0x0
000000000000c292         je         loc_c390

                     loc_c298:
000000000000c298         mov        rdi, rbp                                    ; CODE XREF=hash_initialize+362, hash_initialize+421
000000000000c29b         call       next_prime                                  ; next_prime
000000000000c2a0         mov        edx, 0x8
000000000000c2a5         mov        rbp, rax
000000000000c2a8         xor        ecx, ecx
000000000000c2aa         mov        rax, rdx
000000000000c2ad         mul        rbp
000000000000c2b0         jo         loc_c3ca

                     loc_c2b6:
000000000000c2b6         test       rax, rax                                    ; CODE XREF=hash_initialize+431
000000000000c2b9         js         loc_c310

000000000000c2bb         test       rcx, rcx
000000000000c2be         jne        loc_c310

000000000000c2c0         test       rbp, rbp
000000000000c2c3         mov        qword [rbx+0x10], rbp
000000000000c2c7         je         loc_c310

000000000000c2c9         mov        esi, 0x10                                   ; argument "__size" for method j_calloc
000000000000c2ce         mov        rdi, rbp                                    ; argument "__nmemb" for method j_calloc
000000000000c2d1         call       j_calloc                                    ; calloc
000000000000c2d6         test       rax, rax
000000000000c2d9         mov        qword [rbx], rax
000000000000c2dc         je         loc_c310

000000000000c2de         shl        rbp, 0x4
000000000000c2e2         mov        qword [rbx+0x18], 0x0
000000000000c2ea         mov        qword [rbx+0x20], 0x0
000000000000c2f2         add        rbp, rax
000000000000c2f5         mov        qword [rbx+0x30], r12
000000000000c2f9         mov        qword [rbx+0x38], r13
000000000000c2fd         mov        qword [rbx+8], rbp
000000000000c301         mov        qword [rbx+0x40], r14
000000000000c305         mov        qword [rbx+0x48], 0x0
000000000000c30d         jmp        loc_c31a
000000000000c30f         align      16

                     loc_c310:
000000000000c310         mov        rdi, rbx                                    ; CODE XREF=hash_initialize+103, hash_initialize+153, hash_initialize+158, hash_initialize+167, hash_initialize+188, hash_initialize+298, hash_initialize+325
000000000000c313         xor        ebx, ebx
000000000000c315         call       sub_30d0                                    ; sub_30d0

                     loc_c31a:
000000000000c31a         add        rsp, 0x8                                    ; CODE XREF=hash_initialize+73, hash_initialize+237
000000000000c31e         mov        rax, rbx
000000000000c321         pop        rbx
000000000000c322         pop        rbp
000000000000c323         pop        r12
000000000000c325         pop        r13
000000000000c327         pop        r14
000000000000c329         pop        r15
000000000000c32b         ret
                        ; endp
000000000000c32c         align      16

                     loc_c330:
000000000000c330         lea        rax, qword [default_tuning]                 ; default_tuning, CODE XREF=hash_initialize+86
000000000000c337         mov        qword [rbx+0x28], rax
000000000000c33b         call       check_tuning.isra.0                         ; check_tuning.isra.0
000000000000c340         test       al, al
000000000000c342         movss      xmm1, dword [float_18208]                   ; float_18208
000000000000c34a         je         loc_c310

000000000000c34c         test       rbp, rbp
000000000000c34f         js         loc_c39b

                     loc_c351:
000000000000c351         pxor       xmm0, xmm0                                  ; CODE XREF=hash_initialize+377
000000000000c355         cvtsi2ss   xmm0, rbp

                     loc_c35a:
000000000000c35a         divss      xmm0, xmm1                                  ; CODE XREF=hash_initialize+404
000000000000c35e         ucomiss    xmm0, dword [float_1820c]                   ; float_1820c
000000000000c365         jae        loc_c310

000000000000c367         ucomiss    xmm0, dword [float_18210]                   ; float_18210
000000000000c36e         jb         loc_c3c0

000000000000c370         subss      xmm0, dword [float_18210]                   ; float_18210
000000000000c378         movabs     rax, 0x8000000000000000
000000000000c382         cvttss2si  rbp, xmm0
000000000000c387         xor        rbp, rax
000000000000c38a         jmp        loc_c298
000000000000c38f         align      16

                     loc_c390:
000000000000c390         test       rbp, rbp                                    ; CODE XREF=hash_initialize+114
000000000000c393         movss      xmm1, dword [r15+8]
000000000000c399         jns        loc_c351

                     loc_c39b:
000000000000c39b         mov        rax, rbp                                    ; CODE XREF=hash_initialize+303
000000000000c39e         pxor       xmm0, xmm0
000000000000c3a2         shr        rax, 0x1
000000000000c3a5         and        ebp, 0x1
000000000000c3a8         or         rax, rbp
000000000000c3ab         cvtsi2ss   xmm0, rax
000000000000c3b0         addss      xmm0, xmm0
000000000000c3b4         jmp        loc_c35a
000000000000c3b6         align      64

                     loc_c3c0:
000000000000c3c0         cvttss2si  rbp, xmm0                                   ; CODE XREF=hash_initialize+334
000000000000c3c5         jmp        loc_c298

                     loc_c3ca:
000000000000c3ca         mov        ecx, 0x1                                    ; CODE XREF=hash_initialize+144
000000000000c3cf         jmp        loc_c2b6
000000000000c3d4         align      32                                          ; End of unwind block (FDE at 0x1a9f8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_clear:
000000000000c3e0         push       r12                                         ; Begin of unwind block (FDE at 0x1aa44)
000000000000c3e2         push       rbp
000000000000c3e3         mov        rbp, rdi
000000000000c3e6         push       rbx
000000000000c3e7         mov        r12, qword [rdi]
000000000000c3ea         cmp        r12, qword [rdi+8]
000000000000c3ee         jae        loc_c45b

                     loc_c3f0:
000000000000c3f0         cmp        qword [r12], 0x0                            ; CODE XREF=hash_clear+121
000000000000c3f5         je         loc_c451

000000000000c3f7         mov        rbx, qword [r12+8]
000000000000c3fc         mov        rax, qword [rbp+0x40]
000000000000c400         test       rbx, rbx
000000000000c403         je         loc_c435

000000000000c405         nop        dword [rax]

                     loc_c408:
000000000000c408         test       rax, rax                                    ; CODE XREF=hash_clear+83
000000000000c40b         je         loc_c416

000000000000c40d         mov        rdi, qword [rbx]
000000000000c410         call       rax
000000000000c412         mov        rax, qword [rbp+0x40]

                     loc_c416:
000000000000c416         mov        rdx, qword [rbx+8]                          ; CODE XREF=hash_clear+43
000000000000c41a         mov        rcx, qword [rbp+0x48]
000000000000c41e         mov        qword [rbx], 0x0
000000000000c425         test       rdx, rdx
000000000000c428         mov        qword [rbx+8], rcx
000000000000c42c         mov        qword [rbp+0x48], rbx
000000000000c430         mov        rbx, rdx
000000000000c433         jne        loc_c408

                     loc_c435:
000000000000c435         test       rax, rax                                    ; CODE XREF=hash_clear+35
000000000000c438         je         loc_c440

000000000000c43a         mov        rdi, qword [r12]
000000000000c43e         call       rax

                     loc_c440:
000000000000c440         mov        qword [r12], 0x0                            ; CODE XREF=hash_clear+88
000000000000c448         mov        qword [r12+8], 0x0

                     loc_c451:
000000000000c451         add        r12, 0x10                                   ; CODE XREF=hash_clear+21
000000000000c455         cmp        qword [rbp+8], r12
000000000000c459         ja         loc_c3f0

                     loc_c45b:
000000000000c45b         mov        qword [rbp+0x18], 0x0                       ; CODE XREF=hash_clear+14
000000000000c463         mov        qword [rbp+0x20], 0x0
000000000000c46b         pop        rbx
000000000000c46c         pop        rbp
000000000000c46d         pop        r12
000000000000c46f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_free:
000000000000c470         push       r12                                         ; End of unwind block (FDE at 0x1aa44), Begin of unwind block (FDE at 0x1aa70), CODE XREF=forget_all+7
000000000000c472         push       rbp
000000000000c473         mov        r12, rdi
000000000000c476         push       rbx
000000000000c477         cmp        qword [rdi+0x40], 0x0
000000000000c47c         mov        rbp, qword [rdi]
000000000000c47f         mov        rax, qword [rdi+8]
000000000000c483         je         loc_c4d3

000000000000c485         cmp        qword [rdi+0x20], 0x0
000000000000c48a         je         loc_c4d3

000000000000c48c         cmp        rbp, rax
000000000000c48f         jae        loc_c50c

000000000000c491         nop        dword [rax]

                     loc_c498:
000000000000c498         mov        rdi, qword [rbp]                            ; CODE XREF=hash_free+93
000000000000c49c         test       rdi, rdi
000000000000c49f         je         loc_c4c6

000000000000c4a1         mov        rbx, rbp
000000000000c4a4         jmp        loc_c4b3
000000000000c4a6         align      16

                     loc_c4b0:
000000000000c4b0         mov        rdi, qword [rbx]                            ; CODE XREF=hash_free+79

                     loc_c4b3:
000000000000c4b3         call       qword [r12+0x40]                            ; CODE XREF=hash_free+52
000000000000c4b8         mov        rbx, qword [rbx+8]
000000000000c4bc         test       rbx, rbx
000000000000c4bf         jne        loc_c4b0

000000000000c4c1         mov        rax, qword [r12+8]

                     loc_c4c6:
000000000000c4c6         add        rbp, 0x10                                   ; CODE XREF=hash_free+47
000000000000c4ca         cmp        rax, rbp
000000000000c4cd         ja         loc_c498

000000000000c4cf         mov        rbp, qword [r12]

                     loc_c4d3:
000000000000c4d3         cmp        rbp, rax                                    ; CODE XREF=hash_free+19, hash_free+26
000000000000c4d6         jae        loc_c50c

000000000000c4d8         nop        dword [rax+rax]

                     loc_c4e0:
000000000000c4e0         mov        rdi, qword [rbp+8]                          ; CODE XREF=hash_free+154
000000000000c4e4         test       rdi, rdi
000000000000c4e7         je         loc_c501

000000000000c4e9         nop        dword [rax]

                     loc_c4f0:
000000000000c4f0         mov        rbx, qword [rdi+8]                          ; CODE XREF=hash_free+143
000000000000c4f4         call       sub_30d0                                    ; sub_30d0
000000000000c4f9         test       rbx, rbx
000000000000c4fc         mov        rdi, rbx
000000000000c4ff         jne        loc_c4f0

                     loc_c501:
000000000000c501         add        rbp, 0x10                                   ; CODE XREF=hash_free+119
000000000000c505         cmp        qword [r12+8], rbp
000000000000c50a         ja         loc_c4e0

                     loc_c50c:
000000000000c50c         mov        rdi, qword [r12+0x48]                       ; CODE XREF=hash_free+31, hash_free+102
000000000000c511         test       rdi, rdi
000000000000c514         je         loc_c531

000000000000c516         nop        word [cs:rax+rax]

                     loc_c520:
000000000000c520         mov        rbx, qword [rdi+8]                          ; CODE XREF=hash_free+191
000000000000c524         call       sub_30d0                                    ; sub_30d0
000000000000c529         test       rbx, rbx
000000000000c52c         mov        rdi, rbx
000000000000c52f         jne        loc_c520

                     loc_c531:
000000000000c531         mov        rdi, qword [r12]                            ; CODE XREF=hash_free+164
000000000000c535         call       sub_30d0                                    ; sub_30d0
000000000000c53a         pop        rbx
000000000000c53b         mov        rdi, r12
000000000000c53e         pop        rbp
000000000000c53f         pop        r12
000000000000c541         jmp        sub_30d0                                    ; sub_30d0
                        ; endp
000000000000c546         align      16                                          ; End of unwind block (FDE at 0x1aa70)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120


                     hash_rehash:
000000000000c550         push       r12                                         ; Begin of unwind block (FDE at 0x1aa9c), CODE XREF=hash_insert_if_absent+443, hash_delete+271
000000000000c552         push       rbp
000000000000c553         mov        rbp, rdi
000000000000c556         push       rbx
000000000000c557         sub        rsp, 0x60
000000000000c55b         mov        r12, qword [rdi+0x28]
000000000000c55f         mov        rax, qword [fs:0x28]
000000000000c568         mov        qword [rsp+0x78+var_20], rax
000000000000c56d         xor        eax, eax
000000000000c56f         cmp        byte [r12+0x10], 0x0
000000000000c575         jne        loc_c5c8

000000000000c577         test       rsi, rsi
000000000000c57a         js         loc_c6f8

000000000000c580         pxor       xmm0, xmm0
000000000000c584         cvtsi2ss   xmm0, rsi

                     loc_c589:
000000000000c589         divss      xmm0, dword [r12+8]                         ; CODE XREF=hash_rehash+449
000000000000c590         ucomiss    xmm0, dword [float_1820c]                   ; float_1820c
000000000000c597         jae        loc_c6d0

000000000000c59d         ucomiss    xmm0, dword [float_18210]                   ; float_18210
000000000000c5a4         jb         loc_c720

000000000000c5aa         subss      xmm0, dword [float_18210]                   ; float_18210
000000000000c5b2         movabs     rax, 0x8000000000000000
000000000000c5bc         cvttss2si  rsi, xmm0
000000000000c5c1         xor        rsi, rax
000000000000c5c4         nop        dword [rax]

                     loc_c5c8:
000000000000c5c8         mov        rdi, rsi                                    ; CODE XREF=hash_rehash+37, hash_rehash+469
000000000000c5cb         call       next_prime                                  ; next_prime
000000000000c5d0         mov        edx, 0x8
000000000000c5d5         mov        rbx, rax
000000000000c5d8         xor        ecx, ecx
000000000000c5da         mov        rax, rdx
000000000000c5dd         mul        rbx
000000000000c5e0         jo         loc_c77f

                     loc_c5e6:
000000000000c5e6         test       rax, rax                                    ; CODE XREF=hash_rehash+564
000000000000c5e9         mov        eax, 0x1
000000000000c5ee         cmovs      rcx, rax
000000000000c5f2         test       rbx, rbx
000000000000c5f5         je         loc_c6d0

000000000000c5fb         and        ecx, 0x1
000000000000c5fe         jne        loc_c6d0

000000000000c604         cmp        qword [rbp+0x10], rbx
000000000000c608         je         loc_c730

000000000000c60e         mov        esi, 0x10                                   ; argument "__size" for method j_calloc
000000000000c613         mov        rdi, rbx                                    ; argument "__nmemb" for method j_calloc
000000000000c616         call       j_calloc                                    ; calloc
000000000000c61b         test       rax, rax
000000000000c61e         mov        qword [rsp+0x78+var_78], rax
000000000000c622         je         loc_c6d0

000000000000c628         mov        qword [rsp+0x78+var_68], rbx
000000000000c62d         shl        rbx, 0x4
000000000000c631         mov        qword [rsp+0x78+var_50], r12
000000000000c636         add        rbx, rax
000000000000c639         mov        rax, qword [rbp+0x30]
000000000000c63d         mov        r12, rsp
000000000000c640         xor        edx, edx
000000000000c642         mov        rsi, rbp
000000000000c645         mov        rdi, r12
000000000000c648         mov        qword [rsp+0x78+var_70], rbx
000000000000c64d         mov        qword [rsp+0x78+var_60], 0x0
000000000000c656         mov        qword [rsp+0x78+var_48], rax
000000000000c65b         mov        rax, qword [rbp+0x38]
000000000000c65f         mov        qword [rsp+0x78+var_58], 0x0
000000000000c668         mov        qword [rsp+0x78+var_40], rax
000000000000c66d         mov        rax, qword [rbp+0x40]
000000000000c671         mov        qword [rsp+0x78+var_38], rax
000000000000c676         mov        rax, qword [rbp+0x48]
000000000000c67a         mov        qword [rsp+0x78+var_30], rax
000000000000c67f         call       transfer_entries                            ; transfer_entries
000000000000c684         test       al, al
000000000000c686         mov        ebx, eax
000000000000c688         jne        loc_c740

000000000000c68e         mov        rax, qword [rsp+0x78+var_30]
000000000000c693         mov        edx, 0x1
000000000000c698         mov        rsi, r12
000000000000c69b         mov        rdi, rbp
000000000000c69e         mov        qword [rbp+0x48], rax
000000000000c6a2         call       transfer_entries                            ; transfer_entries
000000000000c6a7         test       al, al
000000000000c6a9         je         loc_c789

000000000000c6af         xor        edx, edx
000000000000c6b1         mov        rsi, r12
000000000000c6b4         mov        rdi, rbp
000000000000c6b7         call       transfer_entries                            ; transfer_entries
000000000000c6bc         test       al, al
000000000000c6be         je         loc_c789

000000000000c6c4         mov        rdi, qword [rsp+0x78+var_78]
000000000000c6c8         call       sub_30d0                                    ; sub_30d0
000000000000c6cd         jmp        loc_c6d2
000000000000c6cf         align      16

                     loc_c6d0:
000000000000c6d0         xor        ebx, ebx                                    ; CODE XREF=hash_rehash+71, hash_rehash+165, hash_rehash+174, hash_rehash+210

                     loc_c6d2:
000000000000c6d2         mov        rcx, qword [rsp+0x78+var_20]                ; CODE XREF=hash_rehash+381, hash_rehash+485, hash_rehash+549
000000000000c6d7         xor        rcx, qword [fs:0x28]
000000000000c6e0         mov        eax, ebx
000000000000c6e2         jne        loc_c77a

000000000000c6e8         add        rsp, 0x60
000000000000c6ec         pop        rbx
000000000000c6ed         pop        rbp
000000000000c6ee         pop        r12
000000000000c6f0         ret
                        ; endp
000000000000c6f1         align      8

                     loc_c6f8:
000000000000c6f8         mov        rax, rsi                                    ; CODE XREF=hash_rehash+42
000000000000c6fb         pxor       xmm0, xmm0
000000000000c6ff         shr        rax, 0x1
000000000000c702         and        esi, 0x1
000000000000c705         or         rax, rsi
000000000000c708         cvtsi2ss   xmm0, rax
000000000000c70d         addss      xmm0, xmm0
000000000000c711         jmp        loc_c589
000000000000c716         align      32

                     loc_c720:
000000000000c720         cvttss2si  rsi, xmm0                                   ; CODE XREF=hash_rehash+84
000000000000c725         jmp        loc_c5c8
000000000000c72a         align      16

                     loc_c730:
000000000000c730         mov        ebx, 0x1                                    ; CODE XREF=hash_rehash+184
000000000000c735         jmp        loc_c6d2
000000000000c737         align      64

                     loc_c740:
000000000000c740         mov        rdi, qword [rbp]                            ; CODE XREF=hash_rehash+312
000000000000c744         call       sub_30d0                                    ; sub_30d0
000000000000c749         mov        rax, qword [rsp+0x78+var_78]
000000000000c74d         mov        qword [rbp], rax
000000000000c751         mov        rax, qword [rsp+0x78+var_70]
000000000000c756         mov        qword [rbp+8], rax
000000000000c75a         mov        rax, qword [rsp+0x78+var_68]
000000000000c75f         mov        qword [rbp+0x10], rax
000000000000c763         mov        rax, qword [rsp+0x78+var_60]
000000000000c768         mov        qword [rbp+0x18], rax
000000000000c76c         mov        rax, qword [rsp+0x78+var_30]
000000000000c771         mov        qword [rbp+0x48], rax
000000000000c775         jmp        loc_c6d2

                     loc_c77a:
000000000000c77a         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_rehash+402
                        ; endp

                     loc_c77f:
000000000000c77f         mov        ecx, 0x1                                    ; CODE XREF=hash_rehash+144
000000000000c784         jmp        loc_c5e6

                     loc_c789:
000000000000c789         call       j_abort                                     ; abort, CODE XREF=hash_rehash+345, hash_rehash+366
                        ; endp
000000000000c78e         align      16                                          ; End of unwind block (FDE at 0x1aa9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56


                     hash_insert_if_absent:
000000000000c790         push       r13                                         ; Begin of unwind block (FDE at 0x1aad4), CODE XREF=hash_insert+27
000000000000c792         push       r12
000000000000c794         push       rbp
000000000000c795         push       rbx
000000000000c796         sub        rsp, 0x18
000000000000c79a         mov        rax, qword [fs:0x28]
000000000000c7a3         mov        qword [rsp+0x38+var_30], rax
000000000000c7a8         xor        eax, eax
000000000000c7aa         test       rsi, rsi
000000000000c7ad         je         loc_c96d

000000000000c7b3         mov        r12, rsp
000000000000c7b6         xor        ecx, ecx
000000000000c7b8         mov        r13, rdx
000000000000c7bb         mov        rdx, r12
000000000000c7be         mov        rbx, rdi
000000000000c7c1         mov        rbp, rsi
000000000000c7c4         call       hash_find_entry                             ; hash_find_entry
000000000000c7c9         test       rax, rax
000000000000c7cc         mov        rdx, rax
000000000000c7cf         je         loc_c800

000000000000c7d1         xor        eax, eax
000000000000c7d3         test       r13, r13
000000000000c7d6         je         loc_c7dc

000000000000c7d8         mov        qword [r13], rdx

                     loc_c7dc:
000000000000c7dc         mov        rcx, qword [rsp+0x38+var_30]                ; CODE XREF=hash_insert_if_absent+70, hash_insert_if_absent+233, hash_insert_if_absent+507, hash_insert_if_absent+536
000000000000c7e1         xor        rcx, qword [fs:0x28]
000000000000c7ea         jne        loc_ca0f

000000000000c7f0         add        rsp, 0x18
000000000000c7f4         pop        rbx
000000000000c7f5         pop        rbp
000000000000c7f6         pop        r12
000000000000c7f8         pop        r13
000000000000c7fa         ret
                        ; endp
000000000000c7fb         align      2048

                     loc_c800:
000000000000c800         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_insert_if_absent+63
000000000000c804         test       rax, rax
000000000000c807         js         loc_c880

000000000000c809         pxor       xmm1, xmm1
000000000000c80d         mov        rdx, qword [rbx+0x28]
000000000000c811         cvtsi2ss   xmm1, rax
000000000000c816         mov        rax, qword [rbx+0x10]
000000000000c81a         test       rax, rax
000000000000c81d         js         loc_c8aa

                     loc_c823:
000000000000c823         pxor       xmm0, xmm0                                  ; CODE XREF=hash_insert_if_absent+276
000000000000c827         cvtsi2ss   xmm0, rax

                     loc_c82c:
000000000000c82c         mulss      xmm0, dword [rdx+8]                         ; CODE XREF=hash_insert_if_absent+307
000000000000c831         ucomiss    xmm1, xmm0
000000000000c834         ja         loc_c8d0

                     loc_c83a:
000000000000c83a         mov        r12, qword [rsp+0x38+var_38]                ; CODE XREF=hash_insert_if_absent+392, hash_insert_if_absent+471
000000000000c83e         cmp        qword [r12], 0x0
000000000000c843         je         loc_c978

000000000000c849         mov        rax, qword [rbx+0x48]
000000000000c84d         test       rax, rax
000000000000c850         je         loc_c990

000000000000c856         mov        rdx, qword [rax+8]
000000000000c85a         mov        qword [rbx+0x48], rdx

                     loc_c85e:
000000000000c85e         mov        rdx, qword [r12+8]                          ; CODE XREF=hash_insert_if_absent+525
000000000000c863         mov        qword [rax], rbp
000000000000c866         mov        qword [rax+8], rdx
000000000000c86a         mov        qword [r12+8], rax
000000000000c86f         mov        eax, 0x1
000000000000c874         add        qword [rbx+0x20], 0x1
000000000000c879         jmp        loc_c7dc
000000000000c87e         align      128

                     loc_c880:
000000000000c880         mov        rdx, rax                                    ; CODE XREF=hash_insert_if_absent+119
000000000000c883         pxor       xmm1, xmm1
000000000000c887         and        eax, 0x1
000000000000c88a         shr        rdx, 0x1
000000000000c88d         or         rdx, rax
000000000000c890         mov        rax, qword [rbx+0x10]
000000000000c894         cvtsi2ss   xmm1, rdx
000000000000c899         mov        rdx, qword [rbx+0x28]
000000000000c89d         test       rax, rax
000000000000c8a0         addss      xmm1, xmm1
000000000000c8a4         jns        loc_c823

                     loc_c8aa:
000000000000c8aa         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+141
000000000000c8ad         pxor       xmm0, xmm0
000000000000c8b1         shr        rcx, 0x1
000000000000c8b4         and        eax, 0x1
000000000000c8b7         or         rcx, rax
000000000000c8ba         cvtsi2ss   xmm0, rcx
000000000000c8bf         addss      xmm0, xmm0
000000000000c8c3         jmp        loc_c82c
000000000000c8c8         align      16

                     loc_c8d0:
000000000000c8d0         lea        rdi, qword [rbx+0x28]                       ; CODE XREF=hash_insert_if_absent+164
000000000000c8d4         call       check_tuning.isra.0                         ; check_tuning.isra.0
000000000000c8d9         mov        rax, qword [rbx+0x10]
000000000000c8dd         mov        rdx, qword [rbx+0x28]
000000000000c8e1         test       rax, rax
000000000000c8e4         movss      xmm2, dword [rdx+8]
000000000000c8e9         js         loc_c9b0

000000000000c8ef         pxor       xmm0, xmm0
000000000000c8f3         cvtsi2ss   xmm0, rax

                     loc_c8f8:
000000000000c8f8         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_insert_if_absent+569
000000000000c8fc         test       rax, rax
000000000000c8ff         js         loc_c9d0

000000000000c905         pxor       xmm1, xmm1
000000000000c909         cvtsi2ss   xmm1, rax

                     loc_c90e:
000000000000c90e         movaps     xmm3, xmm2                                  ; CODE XREF=hash_insert_if_absent+601
000000000000c911         mulss      xmm3, xmm0
000000000000c915         ucomiss    xmm1, xmm3
000000000000c918         jbe        loc_c83a

000000000000c91e         cmp        byte [rdx+0x10], 0x0
000000000000c922         mulss      xmm0, dword [rdx+0xc]
000000000000c927         jne        loc_c92d

000000000000c929         mulss      xmm0, xmm2

                     loc_c92d:
000000000000c92d         ucomiss    xmm0, dword [float_1820c]                   ; float_1820c, CODE XREF=hash_insert_if_absent+407
000000000000c934         jae        loc_c9a3

000000000000c936         ucomiss    xmm0, dword [float_18210]                   ; float_18210
000000000000c93d         jae        loc_c9f0

000000000000c943         cvttss2si  rsi, xmm0

                     loc_c948:
000000000000c948         mov        rdi, rbx                                    ; CODE XREF=hash_insert_if_absent+634
000000000000c94b         call       hash_rehash                                 ; hash_rehash
000000000000c950         test       al, al
000000000000c952         je         loc_c9a3

000000000000c954         xor        ecx, ecx
000000000000c956         mov        rdx, r12
000000000000c959         mov        rsi, rbp
000000000000c95c         mov        rdi, rbx
000000000000c95f         call       hash_find_entry                             ; hash_find_entry
000000000000c964         test       rax, rax
000000000000c967         je         loc_c83a

                     loc_c96d:
000000000000c96d         call       j_abort                                     ; abort, CODE XREF=hash_insert_if_absent+29
                        ; endp
000000000000c972         align      8

                     loc_c978:
000000000000c978         mov        qword [r12], rbp                            ; CODE XREF=hash_insert_if_absent+179
000000000000c97c         mov        eax, 0x1
000000000000c981         add        qword [rbx+0x20], 0x1
000000000000c986         add        qword [rbx+0x18], 0x1
000000000000c98b         jmp        loc_c7dc

                     loc_c990:
000000000000c990         mov        edi, 0x10                                   ; argument "__size" for method j_malloc, CODE XREF=hash_insert_if_absent+192
000000000000c995         call       j_malloc                                    ; malloc
000000000000c99a         test       rax, rax
000000000000c99d         jne        loc_c85e

                     loc_c9a3:
000000000000c9a3         mov        eax, 0xffffffff                             ; CODE XREF=hash_insert_if_absent+420, hash_insert_if_absent+450
000000000000c9a8         jmp        loc_c7dc
000000000000c9ad         align      16

                     loc_c9b0:
000000000000c9b0         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+345
000000000000c9b3         pxor       xmm0, xmm0
000000000000c9b7         shr        rcx, 0x1
000000000000c9ba         and        eax, 0x1
000000000000c9bd         or         rcx, rax
000000000000c9c0         cvtsi2ss   xmm0, rcx
000000000000c9c5         addss      xmm0, xmm0
000000000000c9c9         jmp        loc_c8f8
000000000000c9ce         align      16

                     loc_c9d0:
000000000000c9d0         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+367
000000000000c9d3         pxor       xmm1, xmm1
000000000000c9d7         shr        rcx, 0x1
000000000000c9da         and        eax, 0x1
000000000000c9dd         or         rcx, rax
000000000000c9e0         cvtsi2ss   xmm1, rcx
000000000000c9e5         addss      xmm1, xmm1
000000000000c9e9         jmp        loc_c90e
000000000000c9ee         align      16

                     loc_c9f0:
000000000000c9f0         subss      xmm0, dword [float_18210]                   ; float_18210, CODE XREF=hash_insert_if_absent+429
000000000000c9f8         movabs     rax, 0x8000000000000000
000000000000ca02         cvttss2si  rsi, xmm0
000000000000ca07         xor        rsi, rax
000000000000ca0a         jmp        loc_c948

                     loc_ca0f:
000000000000ca0f         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_insert_if_absent+90
                        ; endp
000000000000ca14         align      32                                          ; End of unwind block (FDE at 0x1aad4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24


                     hash_insert:
000000000000ca20         push       rbx                                         ; Begin of unwind block (FDE at 0x1ab10), CODE XREF=remember_copied+61, record_file+70, utimecmpat+194
000000000000ca21         mov        rbx, rsi
000000000000ca24         sub        rsp, 0x10
000000000000ca28         mov        rdx, rsp
000000000000ca2b         mov        rax, qword [fs:0x28]
000000000000ca34         mov        qword [rsp+0x18+var_10], rax
000000000000ca39         xor        eax, eax
000000000000ca3b         call       hash_insert_if_absent                       ; hash_insert_if_absent
000000000000ca40         cmp        eax, 0xffffffff
000000000000ca43         je         loc_ca70

000000000000ca45         test       eax, eax
000000000000ca47         jne        loc_ca4d

000000000000ca49         mov        rbx, qword [rsp+0x18+var_18]

                     loc_ca4d:
000000000000ca4d         mov        rcx, qword [rsp+0x18+var_10]                ; CODE XREF=hash_insert+39, hash_insert+82
000000000000ca52         xor        rcx, qword [fs:0x28]
000000000000ca5b         mov        rax, rbx
000000000000ca5e         jne        loc_ca74

000000000000ca60         add        rsp, 0x10
000000000000ca64         pop        rbx
000000000000ca65         ret
                        ; endp
000000000000ca66         align      16

                     loc_ca70:
000000000000ca70         xor        ebx, ebx                                    ; CODE XREF=hash_insert+35
000000000000ca72         jmp        loc_ca4d

                     loc_ca74:
000000000000ca74         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_insert+62
                        ; endp
000000000000ca79         align      128                                         ; End of unwind block (FDE at 0x1ab10)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     hash_delete:
000000000000ca80         push       r12                                         ; Begin of unwind block (FDE at 0x1ab34), CODE XREF=forget_created+49
000000000000ca82         push       rbp
000000000000ca83         mov        ecx, 0x1
000000000000ca88         push       rbx
000000000000ca89         mov        rbx, rdi
000000000000ca8c         sub        rsp, 0x10
000000000000ca90         mov        rdx, rsp
000000000000ca93         mov        rax, qword [fs:0x28]
000000000000ca9c         mov        qword [rsp+0x28+var_20], rax
000000000000caa1         xor        eax, eax
000000000000caa3         call       hash_find_entry                             ; hash_find_entry
000000000000caa8         test       rax, rax
000000000000caab         mov        rbp, rax
000000000000caae         je         loc_cabf

000000000000cab0         mov        rax, qword [rsp+0x28+var_28]
000000000000cab4         sub        qword [rbx+0x20], 0x1
000000000000cab9         cmp        qword [rax], 0x0
000000000000cabd         je         loc_cae0

                     loc_cabf:
000000000000cabf         mov        rcx, qword [rsp+0x28+var_20]                ; CODE XREF=hash_delete+46, hash_delete+159, hash_delete+229, hash_delete+278, hash_delete+321
000000000000cac4         xor        rcx, qword [fs:0x28]
000000000000cacd         mov        rax, rbp
000000000000cad0         jne        loc_cc7e

000000000000cad6         add        rsp, 0x10
000000000000cada         pop        rbx
000000000000cadb         pop        rbp
000000000000cadc         pop        r12
000000000000cade         ret
                        ; endp
000000000000cadf         align      32

                     loc_cae0:
000000000000cae0         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_delete+61
000000000000cae4         sub        rax, 0x1
000000000000cae8         test       rax, rax
000000000000caeb         mov        qword [rbx+0x18], rax
000000000000caef         js         loc_cbf0

000000000000caf5         pxor       xmm0, xmm0
000000000000caf9         cvtsi2ss   xmm0, rax

                     loc_cafe:
000000000000cafe         mov        rax, qword [rbx+0x10]                       ; CODE XREF=hash_delete+393
000000000000cb02         mov        rdx, qword [rbx+0x28]
000000000000cb06         test       rax, rax
000000000000cb09         js         loc_cbd0

000000000000cb0f         pxor       xmm1, xmm1
000000000000cb13         cvtsi2ss   xmm1, rax

                     loc_cb18:
000000000000cb18         mulss      xmm1, dword [rdx]                           ; CODE XREF=hash_delete+361
000000000000cb1c         ucomiss    xmm1, xmm0
000000000000cb1f         jbe        loc_cabf

000000000000cb21         lea        rdi, qword [rbx+0x28]
000000000000cb25         call       check_tuning.isra.0                         ; check_tuning.isra.0
000000000000cb2a         mov        rax, qword [rbx+0x10]
000000000000cb2e         mov        rdx, qword [rbx+0x28]
000000000000cb32         test       rax, rax
000000000000cb35         js         loc_cc60

000000000000cb3b         pxor       xmm0, xmm0
000000000000cb3f         cvtsi2ss   xmm0, rax

                     loc_cb44:
000000000000cb44         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_delete+505
000000000000cb48         test       rax, rax
000000000000cb4b         js         loc_cc40

000000000000cb51         pxor       xmm1, xmm1
000000000000cb55         cvtsi2ss   xmm1, rax

                     loc_cb5a:
000000000000cb5a         movss      xmm2, dword [rdx]                           ; CODE XREF=hash_delete+473
000000000000cb5e         mulss      xmm2, xmm0
000000000000cb62         ucomiss    xmm2, xmm1
000000000000cb65         jbe        loc_cabf

000000000000cb6b         cmp        byte [rdx+0x10], 0x0
000000000000cb6f         mulss      xmm0, dword [rdx+4]
000000000000cb74         je         loc_cc30

                     loc_cb7a:
000000000000cb7a         ucomiss    xmm0, dword [float_18210]                   ; float_18210, CODE XREF=hash_delete+437
000000000000cb81         jae        loc_cc10

000000000000cb87         cvttss2si  rsi, xmm0

                     loc_cb8c:
000000000000cb8c         mov        rdi, rbx                                    ; CODE XREF=hash_delete+426
000000000000cb8f         call       hash_rehash                                 ; hash_rehash
000000000000cb94         test       al, al
000000000000cb96         jne        loc_cabf

000000000000cb9c         mov        rdi, qword [rbx+0x48]
000000000000cba0         test       rdi, rdi
000000000000cba3         je         loc_cbb9

000000000000cba5         nop        dword [rax]

                     loc_cba8:
000000000000cba8         mov        r12, qword [rdi+8]                          ; CODE XREF=hash_delete+311
000000000000cbac         call       sub_30d0                                    ; sub_30d0
000000000000cbb1         test       r12, r12
000000000000cbb4         mov        rdi, r12
000000000000cbb7         jne        loc_cba8

                     loc_cbb9:
000000000000cbb9         mov        qword [rbx+0x48], 0x0                       ; CODE XREF=hash_delete+291
000000000000cbc1         jmp        loc_cabf
000000000000cbc6         align      16

                     loc_cbd0:
000000000000cbd0         mov        rcx, rax                                    ; CODE XREF=hash_delete+137
000000000000cbd3         pxor       xmm1, xmm1
000000000000cbd7         shr        rcx, 0x1
000000000000cbda         and        eax, 0x1
000000000000cbdd         or         rcx, rax
000000000000cbe0         cvtsi2ss   xmm1, rcx
000000000000cbe5         addss      xmm1, xmm1
000000000000cbe9         jmp        loc_cb18
000000000000cbee         align      16

                     loc_cbf0:
000000000000cbf0         mov        rdx, rax                                    ; CODE XREF=hash_delete+111
000000000000cbf3         pxor       xmm0, xmm0
000000000000cbf7         shr        rdx, 0x1
000000000000cbfa         and        eax, 0x1
000000000000cbfd         or         rdx, rax
000000000000cc00         cvtsi2ss   xmm0, rdx
000000000000cc05         addss      xmm0, xmm0
000000000000cc09         jmp        loc_cafe
000000000000cc0e         align      16

                     loc_cc10:
000000000000cc10         subss      xmm0, dword [float_18210]                   ; float_18210, CODE XREF=hash_delete+257
000000000000cc18         movabs     rax, 0x8000000000000000
000000000000cc22         cvttss2si  rsi, xmm0
000000000000cc27         xor        rsi, rax
000000000000cc2a         jmp        loc_cb8c
000000000000cc2f         align      16

                     loc_cc30:
000000000000cc30         mulss      xmm0, dword [rdx+8]                         ; CODE XREF=hash_delete+244
000000000000cc35         jmp        loc_cb7a
000000000000cc3a         align      64

                     loc_cc40:
000000000000cc40         mov        rcx, rax                                    ; CODE XREF=hash_delete+203
000000000000cc43         pxor       xmm1, xmm1
000000000000cc47         shr        rcx, 0x1
000000000000cc4a         and        eax, 0x1
000000000000cc4d         or         rcx, rax
000000000000cc50         cvtsi2ss   xmm1, rcx
000000000000cc55         addss      xmm1, xmm1
000000000000cc59         jmp        loc_cb5a
000000000000cc5e         align      32

                     loc_cc60:
000000000000cc60         mov        rcx, rax                                    ; CODE XREF=hash_delete+181
000000000000cc63         pxor       xmm0, xmm0
000000000000cc67         shr        rcx, 0x1
000000000000cc6a         and        eax, 0x1
000000000000cc6d         or         rcx, rax
000000000000cc70         cvtsi2ss   xmm0, rcx
000000000000cc75         addss      xmm0, xmm0
000000000000cc79         jmp        loc_cb44

                     loc_cc7e:
000000000000cc7e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_delete+80
                        ; endp
000000000000cc83         align      16                                          ; End of unwind block (FDE at 0x1ab34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_hash:
000000000000cc90         push       rbp                                         ; Begin of unwind block (FDE at 0x1ab6c), DATA XREF=dest_info_init+16
000000000000cc91         push       rbx
000000000000cc92         mov        rbp, rdi
000000000000cc95         mov        rbx, rsi
000000000000cc98         sub        rsp, 0x8
000000000000cc9c         mov        rdi, qword [rdi]
000000000000cc9f         call       hash_pjw                                    ; hash_pjw
000000000000cca4         xor        rax, qword [rbp+8]
000000000000cca8         xor        edx, edx
000000000000ccaa         add        rsp, 0x8
000000000000ccae         div        rbx
000000000000ccb1         pop        rbx
000000000000ccb2         pop        rbp
000000000000ccb3         mov        rax, rdx
000000000000ccb6         ret
                        ; endp
000000000000ccb7         align      64                                          ; End of unwind block (FDE at 0x1ab6c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_hash_no_name:
000000000000ccc0         mov        rax, qword [rdi+8]                          ; Begin of unwind block (FDE at 0x1ab94), DATA XREF=src_info_init+16
000000000000ccc4         xor        edx, edx
000000000000ccc6         div        rsi
000000000000ccc9         mov        rax, rdx
000000000000cccc         ret
                        ; endp
000000000000cccd         align      16                                          ; End of unwind block (FDE at 0x1ab94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_compare:
000000000000ccd0         xor        eax, eax                                    ; Begin of unwind block (FDE at 0x1aba8), DATA XREF=dest_info_init+7, src_info_init+7
000000000000ccd2         mov        rdx, qword [rsi+8]
000000000000ccd6         cmp        qword [rdi+8], rdx
000000000000ccda         je         loc_cce0

                     loc_ccdc:
000000000000ccdc         ret                                                    ; CODE XREF=triple_compare+24
                        ; endp
000000000000ccde         align      32

                     loc_cce0:
000000000000cce0         mov        rcx, qword [rsi+0x10]                       ; CODE XREF=triple_compare+10
000000000000cce4         cmp        qword [rdi+0x10], rcx
000000000000cce8         jne        loc_ccdc

000000000000ccea         sub        rsp, 0x8
000000000000ccee         mov        rsi, qword [rsi]
000000000000ccf1         mov        rdi, qword [rdi]
000000000000ccf4         call       same_name                                   ; same_name
000000000000ccf9         add        rsp, 0x8
000000000000ccfd         ret
                        ; endp
000000000000ccfe         align      256                                         ; End of unwind block (FDE at 0x1aba8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_compare_ino_str:
000000000000cd00         xor        eax, eax                                    ; Begin of unwind block (FDE at 0x1abc0)
000000000000cd02         mov        rdx, qword [rsi+8]
000000000000cd06         cmp        qword [rdi+8], rdx
000000000000cd0a         je         loc_cd10

                     loc_cd0c:
000000000000cd0c         ret                                                    ; CODE XREF=triple_compare_ino_str+24
                        ; endp
000000000000cd0e         align      16

                     loc_cd10:
000000000000cd10         mov        rcx, qword [rsi+0x10]                       ; CODE XREF=triple_compare_ino_str+10
000000000000cd14         cmp        qword [rdi+0x10], rcx
000000000000cd18         jne        loc_cd0c

000000000000cd1a         sub        rsp, 0x8
000000000000cd1e         mov        rsi, qword [rsi]                            ; argument "__s2" for method j_strcmp
000000000000cd21         mov        rdi, qword [rdi]                            ; argument "__s1" for method j_strcmp
000000000000cd24         call       j_strcmp                                    ; strcmp
000000000000cd29         test       eax, eax
000000000000cd2b         sete       al
000000000000cd2e         add        rsp, 0x8
000000000000cd32         ret
                        ; endp
000000000000cd33         align      64                                          ; End of unwind block (FDE at 0x1abc0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_free:
000000000000cd40         push       rbx                                         ; Begin of unwind block (FDE at 0x1abd8), CODE XREF=record_file+98, DATA XREF=dest_info_init, src_info_init
000000000000cd41         mov        rbx, rdi
000000000000cd44         mov        rdi, qword [rdi]
000000000000cd47         call       sub_30d0                                    ; sub_30d0
000000000000cd4c         mov        rdi, rbx
000000000000cd4f         pop        rbx
000000000000cd50         jmp        sub_30d0                                    ; sub_30d0
                        ; endp
000000000000cd55         align      32                                          ; End of unwind block (FDE at 0x1abd8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_44: int32_t, -68
        ;    var_50: int64_t, -80


                     mkancesdirs:
000000000000cd60         push       r15                                         ; Begin of unwind block (FDE at 0x1abf4), CODE XREF=mkancesdirs_safe_wd+71, mkancesdirs_safe_wd+264, make_dir_parents+102
000000000000cd62         push       r14
000000000000cd64         mov        r14, rdx
000000000000cd67         push       r13
000000000000cd69         push       r12
000000000000cd6b         mov        r13, rdi
000000000000cd6e         push       rbp
000000000000cd6f         push       rbx
000000000000cd70         mov        rbp, rdi
000000000000cd73         mov        rbx, rdi
000000000000cd76         xor        r12d, r12d
000000000000cd79         sub        rsp, 0x28
000000000000cd7d         mov        qword [rsp+0x58+var_50], rsi
000000000000cd82         mov        qword [rsp+0x58+var_40], rcx
000000000000cd87         mov        byte [rsp+0x58+var_44], 0x0
000000000000cd8c         nop        dword [rax]

                     loc_cd90:
000000000000cd90         add        rbx, 0x1                                    ; CODE XREF=mkancesdirs+90, mkancesdirs+95, mkancesdirs+247
000000000000cd94         movzx      edx, byte [rbx-1]
000000000000cd98         test       dl, dl
000000000000cd9a         je         loc_ce38

                     loc_cda0:
000000000000cda0         movzx      eax, byte [rbx]                             ; CODE XREF=mkancesdirs+203
000000000000cda3         cmp        al, 0x2f
000000000000cda5         je         loc_ce50

000000000000cdab         test       al, al
000000000000cdad         setne      al
000000000000cdb0         cmp        dl, 0x2f
000000000000cdb3         sete       r15b
000000000000cdb7         and        r15b, al
000000000000cdba         je         loc_cd90

000000000000cdbc         test       r12, r12
000000000000cdbf         je         loc_cd90

000000000000cdc1         mov        rax, r12
000000000000cdc4         sub        rax, rbp
000000000000cdc7         cmp        rax, 0x1
000000000000cdcb         je         loc_ce60

000000000000cdd1         cmp        rax, 0x2
000000000000cdd5         mov        byte [r12], 0x0
000000000000cdda         je         loc_cea5

                     loc_cde0:
000000000000cde0         mov        rdx, qword [rsp+0x58+var_40]                ; CODE XREF=mkancesdirs+267, mkancesdirs+329, mkancesdirs+339
000000000000cde5         mov        rsi, rbp
000000000000cde8         mov        rdi, r13
000000000000cdeb         call       r14
000000000000cdee         test       eax, eax
000000000000cdf0         js         loc_ce70

000000000000cdf2         mov        byte [rsp+0x58+var_44], r15b
000000000000cdf7         mov        edx, 0x1
000000000000cdfc         xor        r15d, r15d

                     loc_cdff:
000000000000cdff         mov        rdi, qword [rsp+0x58+var_50]                ; CODE XREF=mkancesdirs+287, mkancesdirs+355
000000000000ce04         xor        ecx, ecx
000000000000ce06         mov        rsi, rbp
000000000000ce09         call       savewd_chdir                                ; savewd_chdir
000000000000ce0e         cmp        eax, 0xffffffff
000000000000ce11         mov        ebp, eax
000000000000ce13         je         loc_ce88

000000000000ce15         test       eax, eax
000000000000ce17         mov        byte [r12], 0x2f
000000000000ce1c         jne        loc_ce88

                     loc_ce1e:
000000000000ce1e         mov        rbp, rbx                                    ; CODE XREF=mkancesdirs+260
000000000000ce21         add        rbx, 0x1
000000000000ce25         movzx      edx, byte [rbx-1]
000000000000ce29         test       dl, dl
000000000000ce2b         jne        loc_cda0

000000000000ce31         nop        dword [rax]

                     loc_ce38:
000000000000ce38         mov        rax, rbp                                    ; CODE XREF=mkancesdirs+58
000000000000ce3b         sub        rax, r13

                     loc_ce3e:
000000000000ce3e         add        rsp, 0x28                                   ; CODE XREF=mkancesdirs+323
000000000000ce42         pop        rbx
000000000000ce43         pop        rbp
000000000000ce44         pop        r12
000000000000ce46         pop        r13
000000000000ce48         pop        r14
000000000000ce4a         pop        r15
000000000000ce4c         ret
                        ; endp
000000000000ce4d         align      16

                     loc_ce50:
000000000000ce50         cmp        dl, 0x2f                                    ; CODE XREF=mkancesdirs+69
000000000000ce53         cmovne     r12, rbx
000000000000ce57         jmp        loc_cd90
000000000000ce5c         align      32

                     loc_ce60:
000000000000ce60         cmp        byte [rbp], 0x2e                            ; CODE XREF=mkancesdirs+107
000000000000ce64         je         loc_ce1e

000000000000ce66         mov        byte [r12], 0x0
000000000000ce6b         jmp        loc_cde0

                     loc_ce70:
000000000000ce70         call       j___errno_location                          ; __errno_location, CODE XREF=mkancesdirs+144
000000000000ce75         mov        edx, dword [rsp+0x58+var_44]
000000000000ce79         mov        r15d, dword [rax]
000000000000ce7c         and        edx, 0x1
000000000000ce7f         jmp        loc_cdff
000000000000ce84         align      8

                     loc_ce88:
000000000000ce88         test       r15d, r15d                                  ; CODE XREF=mkancesdirs+179, mkancesdirs+188
000000000000ce8b         je         loc_cea0

000000000000ce8d         call       j___errno_location                          ; __errno_location
000000000000ce92         cmp        dword [rax], 0x2
000000000000ce95         jne        loc_cea0

000000000000ce97         mov        dword [rax], r15d
000000000000ce9a         nop        word [rax+rax]

                     loc_cea0:
000000000000cea0         movsxd     rax, ebp                                    ; CODE XREF=mkancesdirs+299, mkancesdirs+309
000000000000cea3         jmp        loc_ce3e

                     loc_cea5:
000000000000cea5         cmp        byte [rbp], 0x2e                            ; CODE XREF=mkancesdirs+122
000000000000cea9         jne        loc_cde0

000000000000ceaf         cmp        byte [rbp+1], 0x2e
000000000000ceb3         jne        loc_cde0

000000000000ceb9         xor        r15d, r15d
000000000000cebc         mov        byte [rsp+0x58+var_44], 0x0
000000000000cec1         xor        edx, edx
000000000000cec3         jmp        loc_cdff
000000000000cec8         align      16                                          ; End of unwind block (FDE at 0x1abf4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_C0: int32_t, -192
        ;    var_D8: int32_t, -216
        ;    var_D9: int8_t, -217
        ;    var_E0: int32_t, -224
        ;    var_E8: int64_t, -232
        ;    var_F0: int64_t, -240
        ;    var_F8: int64_t, -248


                     make_dir_parents:
000000000000ced0         push       r15                                         ; Begin of unwind block (FDE at 0x1ac44), CODE XREF=process_dir+56
000000000000ced2         push       r14
000000000000ced4         mov        r15, rcx
000000000000ced7         push       r13
000000000000ced9         push       r12
000000000000cedb         mov        r14, rsi
000000000000cede         push       rbp
000000000000cedf         push       rbx
000000000000cee0         mov        r13, rdx
000000000000cee3         mov        rbx, rdi
000000000000cee6         mov        r12d, r8d
000000000000cee9         sub        rsp, 0xc8
000000000000cef0         mov        eax, dword [rsp+0xf8+arg_18]
000000000000cef7         mov        dword [rsp+0xf8+var_E0], eax
000000000000cefb         mov        rax, qword [fs:0x28]
000000000000cf04         mov        qword [rsp+0xf8+var_40], rax
000000000000cf0c         xor        eax, eax
000000000000cf0e         cmp        byte [rdi], 0x2f
000000000000cf11         je         loc_cf1c

000000000000cf13         cmp        dword [rsi], 0x4
000000000000cf16         je         loc_d060

                     loc_cf1c:
000000000000cf1c         test       r13, r13                                    ; CODE XREF=make_dir_parents+65, make_dir_parents+405
000000000000cf1f         je         loc_d050

000000000000cf25         mov        rcx, r15
000000000000cf28         mov        rdx, r13
000000000000cf2b         mov        rsi, r14
000000000000cf2e         mov        rdi, rbx
000000000000cf31         mov        qword [rsp+0xf8+var_F0], r9
000000000000cf36         call       mkancesdirs                                 ; mkancesdirs
000000000000cf3b         test       rax, rax
000000000000cf3e         js         loc_d220

000000000000cf44         mov        r9, qword [rsp+0xf8+var_F0]
000000000000cf49         add        rax, rbx
000000000000cf4c         mov        qword [rsp+0xf8+var_F8], rax

                     loc_cf50:
000000000000cf50         cmp        dword [rsp+0xf8+arg_8], 0xffffffff          ; CODE XREF=make_dir_parents+388
000000000000cf58         mov        eax, dword [rsp+0xf8+arg_0]
000000000000cf5f         mov        esi, r12d
000000000000cf62         sete       cl
000000000000cf65         cmp        dword [rsp+0xf8+arg_10], 0xffffffff
000000000000cf6d         sete       dl
000000000000cf70         and        eax, 0xc00
000000000000cf75         and        esi, 0x200
000000000000cf7b         or         eax, esi
000000000000cf7d         and        cl, dl
000000000000cf7f         mov        byte [rsp+0xf8+var_D9], cl
000000000000cf83         jne        loc_d0d0

000000000000cf89         mov        eax, r12d
000000000000cf8c         and        eax, 0xffffffc0
000000000000cf8f         mov        dword [rsp+0xf8+var_F0], eax

                     loc_cf93:
000000000000cf93         mov        esi, dword [rsp+0xf8+var_F0]                ; argument "__mode" for method j_mkdir, CODE XREF=make_dir_parents+618
000000000000cf97         mov        rdi, qword [rsp+0xf8+var_F8]                ; argument "__path" for method j_mkdir
000000000000cf9b         mov        qword [rsp+0xf8+var_E8], r9
000000000000cfa0         call       j_mkdir                                     ; mkdir
000000000000cfa5         test       eax, eax
000000000000cfa7         mov        ebp, eax
000000000000cfa9         mov        r9, qword [rsp+0xf8+var_E8]
000000000000cfae         je         loc_d140

                     loc_cfb4:
000000000000cfb4         call       j___errno_location                          ; __errno_location, CODE XREF=make_dir_parents+537
000000000000cfb9         cmp        byte [rsp+0xf8+var_E0], 0x0
000000000000cfbe         mov        r15, rax
000000000000cfc1         mov        ebp, dword [rax]
000000000000cfc3         je         loc_d260

000000000000cfc9         test       ebp, ebp
000000000000cfcb         je         loc_d11c

000000000000cfd1         cmp        ebp, 0x2
000000000000cfd4         setne      r12b
000000000000cfd8         test       r13, r13
000000000000cfdb         setne      al
000000000000cfde         and        r12b, al
000000000000cfe1         je         loc_d06b

000000000000cfe7         mov        rsi, qword [rsp+0xf8+var_F8]                ; argument "__filename" for method j___xstat
000000000000cfeb         lea        rdx, qword [rsp+0xf8+var_D8]                ; argument "__stat_buf" for method j___xstat
000000000000cff0         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
000000000000cff5         call       j___xstat                                   ; __xstat
000000000000cffa         test       eax, eax
000000000000cffc         je         loc_d240

000000000000d002         cmp        ebp, 0x11
000000000000d005         jne        loc_d06b

000000000000d007         mov        eax, dword [r15]
000000000000d00a         cmp        eax, 0x14
000000000000d00d         je         loc_d06b

000000000000d00f         cmp        eax, 0x2
000000000000d012         je         loc_d06b

000000000000d014         mov        rdi, rbx
000000000000d017         xor        r12d, r12d
000000000000d01a         call       quote                                       ; quote
000000000000d01f         lea        rsi, qword [aCannotStatS]                   ; argument "msgid" for method j_dcgettext, "cannot stat %s"
000000000000d026         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000d02b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000d02d         mov        rbx, rax
000000000000d030         call       j_dcgettext                                 ; dcgettext
000000000000d035         mov        esi, dword [r15]                            ; argument "__errnum" for method j_error
000000000000d038         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000d03b         mov        rcx, rbx
000000000000d03e         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000d040         xor        eax, eax
000000000000d042         call       j_error                                     ; error
000000000000d047         jmp        loc_d09d
000000000000d049         align      16

                     loc_d050:
000000000000d050         mov        qword [rsp+0xf8+var_F8], rbx                ; CODE XREF=make_dir_parents+79
000000000000d054         jmp        loc_cf50
000000000000d059         align      32

                     loc_d060:
000000000000d060         mov        ebp, dword [rsi+4]                          ; CODE XREF=make_dir_parents+70
000000000000d063         test       ebp, ebp
000000000000d065         je         loc_cf1c

                     loc_d06b:
000000000000d06b         mov        rdi, rbx                                    ; CODE XREF=make_dir_parents+273, make_dir_parents+309, make_dir_parents+317, make_dir_parents+322, make_dir_parents+743, make_dir_parents+752, make_dir_parents+769, make_dir_parents+865, make_dir_parents+894
000000000000d06e         xor        r12d, r12d
000000000000d071         call       quote                                       ; quote
000000000000d076         lea        rsi, qword [aCannotCreateDi]                ; argument "msgid" for method j_dcgettext, "cannot create directory %s"
000000000000d07d         mov        rbx, rax
000000000000d080         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000d085         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000d087         call       j_dcgettext                                 ; dcgettext
000000000000d08c         mov        rcx, rbx
000000000000d08f         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000d092         mov        esi, ebp                                    ; argument "__errnum" for method j_error
000000000000d094         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000d096         xor        eax, eax
000000000000d098         call       j_error                                     ; error

                     loc_d09d:
000000000000d09d         mov        rdi, qword [rsp+0xf8+var_40]                ; CODE XREF=make_dir_parents+375, make_dir_parents+594, make_dir_parents+843, make_dir_parents+900
000000000000d0a5         xor        rdi, qword [fs:0x28]
000000000000d0ae         mov        eax, r12d
000000000000d0b1         jne        loc_d285

000000000000d0b7         add        rsp, 0xc8
000000000000d0be         pop        rbx
000000000000d0bf         pop        rbp
000000000000d0c0         pop        r12
000000000000d0c2         pop        r13
000000000000d0c4         pop        r14
000000000000d0c6         pop        r15
000000000000d0c8         ret
                        ; endp
000000000000d0c9         align      16

                     loc_d0d0:
000000000000d0d0         test       eax, eax                                    ; CODE XREF=make_dir_parents+179
000000000000d0d2         jne        loc_d130

000000000000d0d4         mov        rdi, qword [rsp+0xf8+var_F8]                ; argument "__path" for method j_mkdir
000000000000d0d8         mov        esi, r12d                                   ; argument "__mode" for method j_mkdir
000000000000d0db         mov        qword [rsp+0xf8+var_E8], r9
000000000000d0e0         call       j_mkdir                                     ; mkdir
000000000000d0e5         test       eax, eax
000000000000d0e7         mov        ebp, eax
000000000000d0e9         jne        loc_cfb4

000000000000d0ef         mov        eax, r12d
000000000000d0f2         mov        rsi, r15
000000000000d0f5         mov        rdi, rbx
000000000000d0f8         and        eax, 0x1ff
000000000000d0fd         and        eax, dword [rsp+0xf8+arg_0]
000000000000d104         mov        r9, qword [rsp+0xf8+var_E8]
000000000000d109         mov        dword [rsp+0xf8+var_F0], eax
000000000000d10d         call       r9
000000000000d110         mov        esi, dword [rsp+0xf8+var_F0]
000000000000d114         test       esi, esi
000000000000d116         jne        loc_d28a

                     loc_d11c:
000000000000d11c         mov        r12d, 0x1                                   ; CODE XREF=make_dir_parents+251, make_dir_parents+661, make_dir_parents+726, make_dir_parents+852
000000000000d122         jmp        loc_d09d
000000000000d127         align      16

                     loc_d130:
000000000000d130         mov        eax, r12d                                   ; CODE XREF=make_dir_parents+514
000000000000d133         and        eax, 0xffffffed
000000000000d136         mov        dword [rsp+0xf8+var_F0], eax
000000000000d13a         jmp        loc_cf93
000000000000d13f         align      64

                     loc_d140:
000000000000d140         mov        rsi, r15                                    ; CODE XREF=make_dir_parents+222
000000000000d143         mov        rdi, rbx
000000000000d146         call       r9
000000000000d149         mov        edx, 0x3

                     loc_d14e:
000000000000d14e         mov        r15, qword [rsp+0xf8+var_F8]                ; CODE XREF=make_dir_parents+925, make_dir_parents+964
000000000000d152         lea        rcx, qword [rsp+0xf8+var_D8]
000000000000d157         mov        rdi, r14
000000000000d15a         mov        rsi, r15
000000000000d15d         call       savewd_chdir                                ; savewd_chdir
000000000000d162         cmp        eax, 0xffffffff
000000000000d165         jl         loc_d11c

000000000000d167         test       eax, eax
000000000000d169         lea        rax, qword [aCannotAccessS+17]              ; 0x17e63
000000000000d170         mov        r9d, r12d
000000000000d173         cmovne     rax, r15
000000000000d177         sub        rsp, 0x8
000000000000d17b         mov        edx, dword [rsp+0x100+arg_0]
000000000000d182         mov        rsi, rax
000000000000d185         push       rdx
000000000000d186         mov        r8d, dword [rsp+0x108+arg_10]
000000000000d18e         mov        ecx, dword [rsp+0x108+arg_8]
000000000000d195         mov        edx, dword [rsp+0x108+var_F0]
000000000000d199         mov        edi, dword [rsp+0x108+var_D8]
000000000000d19d         call       dirchownmod                                 ; dirchownmod
000000000000d1a2         test       eax, eax
000000000000d1a4         pop        rdx
000000000000d1a5         pop        rcx
000000000000d1a6         je         loc_d11c

000000000000d1ac         test       ebp, ebp
000000000000d1ae         je         loc_d278

000000000000d1b4         cmp        ebp, 0x2
000000000000d1b7         je         loc_d06b

000000000000d1bd         test       r13, r13
000000000000d1c0         je         loc_d06b

000000000000d1c6         call       j___errno_location                          ; __errno_location
000000000000d1cb         cmp        dword [rax], 0x14
000000000000d1ce         mov        r12, rax
000000000000d1d1         je         loc_d06b

                     loc_d1d7:
000000000000d1d7         mov        rdi, rbx                                    ; CODE XREF=make_dir_parents+944
000000000000d1da         call       quote                                       ; quote
000000000000d1df         cmp        byte [rsp+0xf8+var_D9], 0x0
000000000000d1e4         mov        rbx, rax
000000000000d1e7         lea        rsi, qword [aCannotChangeOw_18220]          ; "cannot change owner and permissions of %s"
000000000000d1ee         lea        rax, qword [aCannotChangePe]                ; "cannot change permissions of %s"
000000000000d1f5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000d1fa         cmovne     rsi, rax                                    ; argument "msgid" for method j_dcgettext
000000000000d1fe         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000d200         call       j_dcgettext                                 ; dcgettext
000000000000d205         mov        esi, dword [r12]                            ; argument "__errnum" for method j_error
000000000000d209         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000d20c         mov        rcx, rbx
000000000000d20f         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000d211         xor        eax, eax
000000000000d213         xor        r12d, r12d
000000000000d216         call       j_error                                     ; error
000000000000d21b         jmp        loc_d09d

                     loc_d220:
000000000000d220         cmp        rax, 0xffffffffffffffff                     ; CODE XREF=make_dir_parents+110
000000000000d224         jne        loc_d11c

000000000000d22a         call       j___errno_location                          ; __errno_location
000000000000d22f         mov        ebp, dword [rax]
000000000000d231         jmp        loc_d06b
000000000000d236         align      64

                     loc_d240:
000000000000d240         mov        eax, dword [rsp+0xf8+var_C0]                ; CODE XREF=make_dir_parents+300
000000000000d244         and        eax, 0xf000
000000000000d249         cmp        eax, 0x4000
000000000000d24e         jne        loc_d06b

000000000000d254         jmp        loc_d09d
000000000000d259         align      32

                     loc_d260:
000000000000d260         mov        dword [rsp+0xf8+var_F0], 0xffffffff         ; CODE XREF=make_dir_parents+243
000000000000d268         mov        edx, 0x2
000000000000d26d         jmp        loc_d14e
000000000000d272         align      8

                     loc_d278:
000000000000d278         call       j___errno_location                          ; __errno_location, CODE XREF=make_dir_parents+734
000000000000d27d         mov        r12, rax
000000000000d280         jmp        loc_d1d7

                     loc_d285:
000000000000d285         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=make_dir_parents+481
                        ; endp

                     loc_d28a:
000000000000d28a         mov        dword [rsp+0xf8+var_F0], r12d               ; CODE XREF=make_dir_parents+582
000000000000d28f         mov        edx, 0x3
000000000000d294         jmp        loc_d14e
000000000000d299         align      32                                          ; End of unwind block (FDE at 0x1ac44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     mode_compile:
000000000000d2a0         push       rbp                                         ; Begin of unwind block (FDE at 0x1aca4), CODE XREF=main+1354
000000000000d2a1         push       rbx
000000000000d2a2         mov        rbx, rdi
000000000000d2a5         sub        rsp, 0x8
000000000000d2a9         movsx      eax, byte [rdi]
000000000000d2ac         lea        edx, dword [rax-0x30]
000000000000d2af         cmp        dl, 0x7
000000000000d2b2         jbe        loc_d368

000000000000d2b8         test       al, al
000000000000d2ba         mov        rcx, rdi
000000000000d2bd         mov        edi, 0x1
000000000000d2c2         je         loc_d2eb

000000000000d2c4         nop        dword [rax]

                     loc_d2c8:
000000000000d2c8         mov        edx, eax                                    ; CODE XREF=mode_compile+73
000000000000d2ca         and        edx, 0xffffffef
000000000000d2cd         cmp        dl, 0x2d
000000000000d2d0         sete       dl
000000000000d2d3         cmp        al, 0x2b
000000000000d2d5         sete       al
000000000000d2d8         add        rcx, 0x1
000000000000d2dc         or         eax, edx
000000000000d2de         movzx      eax, al
000000000000d2e1         add        rdi, rax
000000000000d2e4         movzx      eax, byte [rcx]
000000000000d2e7         test       al, al
000000000000d2e9         jne        loc_d2c8

                     loc_d2eb:
000000000000d2eb         mov        edx, 0x10                                   ; CODE XREF=mode_compile+34
000000000000d2f0         xor        ecx, ecx
000000000000d2f2         mov        rax, rdx
000000000000d2f5         mul        rdi
000000000000d2f8         jo         loc_d60f

                     loc_d2fe:
000000000000d2fe         test       rax, rax                                    ; CODE XREF=mode_compile+884
000000000000d301         js         loc_d619

000000000000d307         test       rcx, rcx
000000000000d30a         jne        loc_d619

000000000000d310         shl        rdi, 0x4                                    ; argument #1 for method xmalloc
000000000000d314         lea        rbp, qword [switch_table_1824c]             ; switch_table_1824c
000000000000d31b         call       xmalloc                                     ; xmalloc
000000000000d320         xor        esi, esi

                     loc_d322:
000000000000d322         xor        r11d, r11d                                  ; CODE XREF=sub_d61e+15

                     loc_d325:
000000000000d325         movzx      r9d, byte [rbx]                             ; CODE XREF=mode_compile+746
000000000000d329         cmp        r9b, 0x61
000000000000d32d         je         loc_d580

000000000000d333         jle        loc_d3a0

000000000000d335         cmp        r9b, 0x6f
000000000000d339         je         loc_d5b0

000000000000d33f         cmp        r9b, 0x75
000000000000d343         je         loc_d5a0

000000000000d349         cmp        r9b, 0x67
000000000000d34d         je         loc_d590

                     loc_d353:
000000000000d353         mov        rdi, rax                                    ; CODE XREF=mode_compile+272, mode_compile+440, mode_compile+462, mode_compile+475, sub_d61e+23
000000000000d356         call       sub_30d0                                    ; sub_30d0
000000000000d35b         xor        eax, eax

                     loc_d35d:
000000000000d35d         add        rsp, 0x8                                    ; CODE XREF=sub_d61e+38
000000000000d361         pop        rbx
000000000000d362         pop        rbp
000000000000d363         ret
                        ; endp
000000000000d364         align      8

                     loc_d368:
000000000000d368         mov        rdx, rdi                                    ; CODE XREF=mode_compile+18
000000000000d36b         xor        ebp, ebp
000000000000d36d         jmp        loc_d37f
000000000000d36f         align      16

                     loc_d370:
000000000000d370         movsx      eax, byte [rdx]                             ; CODE XREF=mode_compile+237
000000000000d373         lea        ecx, dword [rax-0x30]
000000000000d376         cmp        cl, 0x7
000000000000d379         ja         loc_d5c0

                     loc_d37f:
000000000000d37f         lea        ebp, dword [rax+rbp*8-0x30]                 ; CODE XREF=mode_compile+205
000000000000d383         add        rdx, 0x1
000000000000d387         cmp        ebp, 0xfff
000000000000d38d         jbe        loc_d370

                     loc_d38f:
000000000000d38f         add        rsp, 0x8                                    ; CODE XREF=mode_compile+802
000000000000d393         xor        eax, eax
000000000000d395         pop        rbx
000000000000d396         pop        rbp
000000000000d397         ret
                        ; endp
000000000000d398         align      32

                     loc_d3a0:
000000000000d3a0         cmp        r9b, 0x2d                                   ; CODE XREF=mode_compile+147
000000000000d3a4         je         loc_d3b2

000000000000d3a6         cmp        r9b, 0x3d
000000000000d3aa         je         loc_d3b2

000000000000d3ac         cmp        r9b, 0x2b
000000000000d3b0         jne        loc_d353

                     loc_d3b2:
000000000000d3b2         lea        rdi, qword [rsi+1]                          ; CODE XREF=mode_compile+260, mode_compile+266
000000000000d3b6         shl        rsi, 0x4
000000000000d3ba         add        rsi, rax
000000000000d3bd         jmp        loc_d424
000000000000d3bf         align      64

                     loc_d3c0:
000000000000d3c0         cmp        dl, 0x6f                                    ; CODE XREF=mode_compile+405
000000000000d3c3         lea        r8, qword [rbx+2]
000000000000d3c7         je         loc_d560

000000000000d3cd         cmp        dl, 0x75
000000000000d3d0         mov        r10d, 0x1c0
000000000000d3d6         jne        loc_d4b0

                     loc_d3dc:
000000000000d3dc         mov        byte [rsi], r9b                             ; CODE XREF=mode_compile+710, mode_compile+730
000000000000d3df         mov        byte [rsi+1], 0x3
000000000000d3e3         movzx      r9d, byte [rbx+2]
000000000000d3e8         mov        dword [rsi+4], r11d
000000000000d3ec         mov        rbx, r8
000000000000d3ef         mov        dword [rsi+8], r10d

                     loc_d3f3:
000000000000d3f3         mov        edx, r10d                                   ; CODE XREF=mode_compile+621
000000000000d3f6         and        edx, r11d
000000000000d3f9         test       r11d, r11d
000000000000d3fc         cmovne     r10d, edx

                     loc_d400:
000000000000d400         mov        edx, r9d                                    ; CODE XREF=mode_compile+517
000000000000d403         mov        dword [rsi+0xc], r10d
000000000000d407         add        rsi, 0x10
000000000000d40b         and        edx, 0xffffffef
000000000000d40e         lea        rcx, qword [rdi+1]
000000000000d412         cmp        dl, 0x2d
000000000000d415         je         loc_d421

000000000000d417         cmp        r9b, 0x2b
000000000000d41b         jne        loc_d620

                     loc_d421:
000000000000d421         mov        rdi, rcx                                    ; CODE XREF=mode_compile+373

                     loc_d424:
000000000000d424         movsx      edx, byte [rbx+1]                           ; CODE XREF=mode_compile+285
000000000000d428         lea        rcx, qword [rbx+1]
000000000000d42c         cmp        dl, 0x67
000000000000d42f         je         loc_d570

000000000000d435         jg         loc_d3c0

000000000000d437         lea        r8d, dword [rdx-0x30]
000000000000d43b         cmp        r8b, 0x7
000000000000d43f         ja         loc_d4b0

000000000000d441         xor        r8d, r8d
000000000000d444         nop        dword [rax]

                     loc_d448:
000000000000d448         lea        r8d, dword [rdx+r8*8-0x30]                  ; CODE XREF=mode_compile+457
000000000000d44d         add        rcx, 0x1
000000000000d451         cmp        r8d, 0xfff
000000000000d458         ja         loc_d353

000000000000d45e         movsx      edx, byte [rcx]
000000000000d461         lea        r10d, dword [rdx-0x30]
000000000000d465         cmp        r10b, 0x7
000000000000d469         jbe        loc_d448

000000000000d46b         test       r11d, r11d
000000000000d46e         jne        loc_d353

000000000000d474         test       dl, dl
000000000000d476         je         loc_d481

000000000000d478         cmp        dl, 0x2c
000000000000d47b         jne        loc_d353

                     loc_d481:
000000000000d481         mov        byte [rsi], r9b                             ; CODE XREF=mode_compile+470
000000000000d484         mov        byte [rsi+1], 0x1
000000000000d488         mov        r9d, edx
000000000000d48b         mov        dword [rsi+4], 0xfff
000000000000d492         mov        dword [rsi+8], r8d
000000000000d496         mov        rbx, rcx
000000000000d499         mov        r11d, 0xfff
000000000000d49f         mov        r10d, 0xfff
000000000000d4a5         jmp        loc_d400
000000000000d4aa         align      16

                     loc_d4b0:
000000000000d4b0         lea        r8d, dword [rdx-0x58]                       ; CODE XREF=mode_compile+310, mode_compile+415
000000000000d4b4         xor        r10d, r10d
000000000000d4b7         mov        ebx, 0x1
000000000000d4bc         cmp        r8b, 0x20
000000000000d4c0         ja         loc_d4f9

000000000000d4c2         nop        word [rax+rax]

                     loc_d4c8:
000000000000d4c8         movzx      r8d, r8b                                    ; CODE XREF=mode_compile+599
000000000000d4cc         movsxd     r8, dword [rbp+r8*4]
000000000000d4d1         add        r8, rbp
000000000000d4d4         jmp        r8                                          ; switch statement using table at 0x1824c, with 33 cases, 0xd4e0,0xd4f9,0xd518,0xd520,0xd530,0xd540,0xd550
000000000000d4d7         align      32

                     loc_d4e0:
000000000000d4e0         mov        ebx, 0x2                                    ; case 0, CODE XREF=mode_compile+564
000000000000d4e5         nop        dword [rax]

                     loc_d4e8:
000000000000d4e8         add        rcx, 0x1                                    ; CODE XREF=mode_compile+636, mode_compile+644, mode_compile+663, mode_compile+679, mode_compile+695
000000000000d4ec         movzx      edx, byte [rcx]
000000000000d4ef         lea        r8d, dword [rdx-0x58]
000000000000d4f3         cmp        r8b, 0x20
000000000000d4f7         jbe        loc_d4c8

                     loc_d4f9:
000000000000d4f9         mov        byte [rsi], r9b                             ; case 30, CODE XREF=mode_compile+544, mode_compile+564
000000000000d4fc         mov        byte [rsi+1], bl
000000000000d4ff         mov        r9d, edx
000000000000d502         mov        dword [rsi+4], r11d
000000000000d506         mov        dword [rsi+8], r10d
000000000000d50a         mov        rbx, rcx
000000000000d50d         jmp        loc_d3f3
000000000000d512         align      8

                     loc_d518:
000000000000d518         or         r10d, 0x49                                  ; case 32, CODE XREF=mode_compile+564
000000000000d51c         jmp        loc_d4e8
000000000000d51e         align      32

                     loc_d520:
000000000000d520         or         r10b, 0x92                                  ; case 31, CODE XREF=mode_compile+564
000000000000d524         jmp        loc_d4e8
000000000000d526         align      16

                     loc_d530:
000000000000d530         or         r10d, 0x200                                 ; case 28, CODE XREF=mode_compile+564
000000000000d537         jmp        loc_d4e8
000000000000d539         align      64

                     loc_d540:
000000000000d540         or         r10d, 0xc00                                 ; case 27, CODE XREF=mode_compile+564
000000000000d547         jmp        loc_d4e8
000000000000d549         align      16

                     loc_d550:
000000000000d550         or         r10d, 0x124                                 ; case 26, CODE XREF=mode_compile+564
000000000000d557         jmp        loc_d4e8
000000000000d559         align      32

                     loc_d560:
000000000000d560         mov        r10d, 0x7                                   ; CODE XREF=mode_compile+295
000000000000d566         jmp        loc_d3dc
000000000000d56b         align      16

                     loc_d570:
000000000000d570         lea        r8, qword [rbx+2]                           ; CODE XREF=mode_compile+399
000000000000d574         mov        r10d, 0x38
000000000000d57a         jmp        loc_d3dc
000000000000d57f         align      128

                     loc_d580:
000000000000d580         mov        r11d, 0xfff                                 ; CODE XREF=mode_compile+141

                     loc_d586:
000000000000d586         add        rbx, 0x1                                    ; CODE XREF=mode_compile+759, mode_compile+775, mode_compile+791
000000000000d58a         jmp        loc_d325
000000000000d58f         align      16

                     loc_d590:
000000000000d590         or         r11d, 0x438                                 ; CODE XREF=mode_compile+173
000000000000d597         jmp        loc_d586
000000000000d599         align      32

                     loc_d5a0:
000000000000d5a0         or         r11d, 0x9c0                                 ; CODE XREF=mode_compile+163
000000000000d5a7         jmp        loc_d586
000000000000d5a9         align      16

                     loc_d5b0:
000000000000d5b0         or         r11d, 0x207                                 ; CODE XREF=mode_compile+153
000000000000d5b7         jmp        loc_d586
000000000000d5b9         align      64

                     loc_d5c0:
000000000000d5c0         test       al, al                                      ; CODE XREF=mode_compile+217
000000000000d5c2         jne        loc_d38f

000000000000d5c8         sub        rdx, rbx
000000000000d5cb         mov        ebx, ebp
000000000000d5cd         mov        eax, 0xfff
000000000000d5d2         and        ebx, 0xc00
000000000000d5d8         mov        edi, 0x20                                   ; argument #1 for method xmalloc
000000000000d5dd         or         ebx, 0x3ff
000000000000d5e3         cmp        rdx, 0x5
000000000000d5e7         cmovge     ebx, eax
000000000000d5ea         call       xmalloc                                     ; xmalloc
000000000000d5ef         mov        edx, 0x13d
000000000000d5f4         mov        dword [rax+4], 0xfff
000000000000d5fb         mov        dword [rax+8], ebp
000000000000d5fe         mov        word [rax], dx
000000000000d601         mov        dword [rax+0xc], ebx
000000000000d604         mov        byte [rax+0x11], 0x0
000000000000d608         add        rsp, 0x8
000000000000d60c         pop        rbx
000000000000d60d         pop        rbp
000000000000d60e         ret
                        ; endp

                     loc_d60f:
000000000000d60f         mov        ecx, 0x1                                    ; CODE XREF=mode_compile+88
000000000000d614         jmp        loc_d2fe

                     loc_d619:
000000000000d619         call       xalloc_die                                  ; xalloc_die, CODE XREF=mode_compile+97, mode_compile+106
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_d61e:
000000000000d61e         nop
                        ; endp

                     loc_d620:
000000000000d620         cmp        r9b, 0x2c                                   ; CODE XREF=mode_compile+379
000000000000d624         jne        loc_d632

000000000000d626         add        rbx, 0x1
000000000000d62a         mov        rsi, rdi
000000000000d62d         jmp        loc_d322

                     loc_d632:
000000000000d632         test       r9b, r9b                                    ; CODE XREF=sub_d61e+6
000000000000d635         jne        loc_d353

000000000000d63b         shl        rdi, 0x4
000000000000d63f         mov        byte [rax+rdi+1], 0x0
000000000000d644         jmp        loc_d35d
000000000000d649         align      16                                          ; End of unwind block (FDE at 0x1aca4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_90: int32_t, -144


                     mode_create_from_ref:
000000000000d650         push       rbx                                         ; Begin of unwind block (FDE at 0x1acec)
000000000000d651         mov        rsi, rdi                                    ; argument "__filename" for method j___xstat
000000000000d654         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
000000000000d659         sub        rsp, 0xa0
000000000000d660         mov        rdx, rsp                                    ; argument "__stat_buf" for method j___xstat
000000000000d663         mov        rax, qword [fs:0x28]
000000000000d66c         mov        qword [rsp+0xa8+var_10], rax
000000000000d674         xor        eax, eax
000000000000d676         call       j___xstat                                   ; __xstat
000000000000d67b         test       eax, eax
000000000000d67d         jne        loc_d6d0

000000000000d67f         mov        ebx, dword [rsp+0xa8+var_90]
000000000000d683         mov        edi, 0x20
000000000000d688         call       xmalloc                                     ; xmalloc
000000000000d68d         mov        edx, 0x13d
000000000000d692         mov        dword [rax+4], 0xfff
000000000000d699         mov        dword [rax+0xc], 0xfff
000000000000d6a0         mov        word [rax], dx
000000000000d6a3         mov        dword [rax+8], ebx
000000000000d6a6         mov        byte [rax+0x11], 0x0

                     loc_d6aa:
000000000000d6aa         mov        rcx, qword [rsp+0xa8+var_10]                ; CODE XREF=mode_create_from_ref+130
000000000000d6b2         xor        rcx, qword [fs:0x28]
000000000000d6bb         jne        loc_d6d4

000000000000d6bd         add        rsp, 0xa0
000000000000d6c4         pop        rbx
000000000000d6c5         ret
                        ; endp
000000000000d6c6         align      16

                     loc_d6d0:
000000000000d6d0         xor        eax, eax                                    ; CODE XREF=mode_create_from_ref+45
000000000000d6d2         jmp        loc_d6aa

                     loc_d6d4:
000000000000d6d4         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=mode_create_from_ref+107
                        ; endp
000000000000d6d9         align      32                                          ; End of unwind block (FDE at 0x1acec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     mode_adjust:
000000000000d6e0         movzx      r10d, byte [rcx+1]                          ; Begin of unwind block (FDE at 0x1ad10), CODE XREF=main+1383, main+1413
000000000000d6e5         mov        eax, edi
000000000000d6e7         and        eax, 0xfff
000000000000d6ec         test       r10b, r10b
000000000000d6ef         je         loc_d840

000000000000d6f5         cmp        sil, 0x1
000000000000d6f9         push       r12
000000000000d6fb         push       rbp
000000000000d6fc         push       rbx
000000000000d6fd         sbb        ebx, ebx
000000000000d6ff         movzx      ebp, sil
000000000000d703         not        ebx
000000000000d705         xor        r11d, r11d
000000000000d708         and        ebx, 0xc00
000000000000d70e         jmp        loc_d74a

                     loc_d710:
000000000000d710         mov        edi, r9d                                    ; CODE XREF=mode_adjust+212
000000000000d713         or         edi, edx
000000000000d715         not        edi
000000000000d717         and        esi, edi
000000000000d719         cmp        r12b, 0x2d
000000000000d71d         je         loc_d830

000000000000d723         cmp        r12b, 0x3d
000000000000d727         je         loc_d7db

                     loc_d72d:
000000000000d72d         cmp        r12b, 0x2b                                  ; CODE XREF=mode_adjust+234
000000000000d731         jne        loc_d738

000000000000d733         or         r11d, esi
000000000000d736         or         eax, esi

                     loc_d738:
000000000000d738         add        rcx, 0x10                                   ; CODE XREF=mode_adjust+81, mode_adjust+343
000000000000d73c         movzx      r10d, byte [rcx+1]
000000000000d741         test       r10b, r10b
000000000000d744         je         loc_d7fc

                     loc_d74a:
000000000000d74a         mov        r9d, dword [rcx+0xc]                        ; CODE XREF=mode_adjust+46, mode_adjust+278
000000000000d74e         mov        edi, dword [rcx+4]
000000000000d751         mov        esi, dword [rcx+8]
000000000000d754         not        r9d
000000000000d757         and        r9d, ebx
000000000000d75a         cmp        r10b, 0x2
000000000000d75e         je         loc_d810

000000000000d764         cmp        r10b, 0x3
000000000000d768         jne        loc_d7a8

000000000000d76a         and        esi, eax
000000000000d76c         mov        r10d, esi
000000000000d76f         and        r10d, 0x124
000000000000d776         cmp        r10d, 0x1
000000000000d77a         sbb        r10d, r10d
000000000000d77d         not        r10d
000000000000d780         and        r10d, 0x124
000000000000d787         mov        r12d, r10d
000000000000d78a         or         r12b, 0x92
000000000000d78e         test       sil, 0x92
000000000000d792         cmovne     r10d, r12d
000000000000d796         mov        r12d, r10d
000000000000d799         or         r12d, 0x49
000000000000d79d         test       sil, 0x49
000000000000d7a1         cmovne     r10d, r12d
000000000000d7a5         or         esi, r10d

                     loc_d7a8:
000000000000d7a8         mov        r10d, r9d                                   ; CODE XREF=mode_adjust+136, mode_adjust+325
000000000000d7ab         test       edi, edi
000000000000d7ad         movzx      r12d, byte [rcx]
000000000000d7b1         not        r10d
000000000000d7b4         je         loc_d710

000000000000d7ba         and        r10d, edi
000000000000d7bd         and        esi, r10d
000000000000d7c0         cmp        r12b, 0x2d
000000000000d7c4         je         loc_d830

000000000000d7c6         cmp        r12b, 0x3d
000000000000d7ca         jne        loc_d72d

000000000000d7d0         not        edi
000000000000d7d2         or         r9d, edi
000000000000d7d5         mov        r10d, r9d
000000000000d7d8         not        r10d

                     loc_d7db:
000000000000d7db         and        r10d, 0xfff                                 ; CODE XREF=mode_adjust+71
000000000000d7e2         add        rcx, 0x10
000000000000d7e6         and        eax, r9d
000000000000d7e9         or         r11d, r10d
000000000000d7ec         movzx      r10d, byte [rcx+1]
000000000000d7f1         or         eax, esi
000000000000d7f3         test       r10b, r10b
000000000000d7f6         jne        loc_d74a

                     loc_d7fc:
000000000000d7fc         test       r8, r8                                      ; CODE XREF=mode_adjust+100
000000000000d7ff         je         loc_d804

000000000000d801         mov        dword [r8], r11d

                     loc_d804:
000000000000d804         pop        rbx                                         ; CODE XREF=mode_adjust+287
000000000000d805         pop        rbp
000000000000d806         pop        r12
000000000000d808         ret
                        ; endp
000000000000d809         align      16

                     loc_d810:
000000000000d810         mov        r12d, eax                                   ; CODE XREF=mode_adjust+126
000000000000d813         mov        r10d, esi
000000000000d816         and        r12d, 0x49
000000000000d81a         or         r10d, 0x49
000000000000d81e         or         r12d, ebp
000000000000d821         cmovne     esi, r10d
000000000000d825         jmp        loc_d7a8
000000000000d827         align      16

                     loc_d830:
000000000000d830         or         r11d, esi                                   ; CODE XREF=mode_adjust+61, mode_adjust+228
000000000000d833         not        esi
000000000000d835         and        eax, esi
000000000000d837         jmp        loc_d738
000000000000d83c         align      64

                     loc_d840:
000000000000d840         xor        r11d, r11d                                  ; CODE XREF=mode_adjust+15
000000000000d843         test       r8, r8
000000000000d846         je         loc_d84b

000000000000d848         mov        dword [r8], r11d

                     loc_d84b:
000000000000d84b         ret                                                    ; CODE XREF=mode_adjust+358
                        ; endp
000000000000d84d         align      16                                          ; End of unwind block (FDE at 0x1ad10)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     opendirat:
000000000000d850         push       r13                                         ; Begin of unwind block (FDE at 0x1ad44), CODE XREF=backupfile_internal+1213
000000000000d852         push       r12
000000000000d854         or         edx, 0x90900
000000000000d85a         push       rbp
000000000000d85b         push       rbx
000000000000d85c         xor        eax, eax
000000000000d85e         mov        r12, rcx
000000000000d861         sub        rsp, 0x8
000000000000d865         call       openat_safer                                ; openat_safer
000000000000d86a         test       eax, eax
000000000000d86c         js         loc_d8c0

000000000000d86e         mov        edi, eax                                    ; argument "__fd" for method j_fdopendir
000000000000d870         mov        ebx, eax
000000000000d872         call       j_fdopendir                                 ; fdopendir
000000000000d877         test       rax, rax
000000000000d87a         mov        rbp, rax
000000000000d87d         je         loc_d898

000000000000d87f         mov        dword [r12], ebx
000000000000d883         add        rsp, 0x8
000000000000d887         mov        rax, rbp
000000000000d88a         pop        rbx
000000000000d88b         pop        rbp
000000000000d88c         pop        r12
000000000000d88e         pop        r13
000000000000d890         ret
                        ; endp
000000000000d891         align      8

                     loc_d898:
000000000000d898         call       j___errno_location                          ; __errno_location, CODE XREF=opendirat+45
000000000000d89d         mov        r13d, dword [rax]
000000000000d8a0         mov        r12, rax
000000000000d8a3         mov        edi, ebx                                    ; argument "__fd" for method j_close
000000000000d8a5         call       j_close                                     ; close
000000000000d8aa         mov        rax, rbp
000000000000d8ad         mov        dword [r12], r13d
000000000000d8b1         add        rsp, 0x8
000000000000d8b5         pop        rbx
000000000000d8b6         pop        rbp
000000000000d8b7         pop        r12
000000000000d8b9         pop        r13
000000000000d8bb         ret
                        ; endp
000000000000d8bc         align      64

                     loc_d8c0:
000000000000d8c0         add        rsp, 0x8                                    ; CODE XREF=opendirat+28
000000000000d8c4         xor        ebp, ebp
000000000000d8c6         pop        rbx
000000000000d8c7         mov        rax, rbp
000000000000d8ca         pop        rbp
000000000000d8cb         pop        r12
000000000000d8cd         pop        r13
000000000000d8cf         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
000000000000d8d0         test       rdi, rdi                                    ; End of unwind block (FDE at 0x1ad44), Begin of unwind block (FDE at 0x1ada4), CODE XREF=main+70
000000000000d8d3         push       rbx
000000000000d8d4         je         loc_d94d

000000000000d8d6         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
000000000000d8db         mov        rbx, rdi
000000000000d8de         call       j_strrchr                                   ; strrchr
000000000000d8e3         test       rax, rax
000000000000d8e6         je         loc_d93d

000000000000d8e8         lea        r8, qword [rax+1]
000000000000d8ec         mov        rdx, r8
000000000000d8ef         sub        rdx, rbx
000000000000d8f2         cmp        rdx, 0x6
000000000000d8f6         jle        loc_d93d

000000000000d8f8         lea        rsi, qword [rax-6]
000000000000d8fc         lea        rdi, qword [aLibs]                          ; "/.libs/"
000000000000d903         mov        ecx, 0x7
000000000000d908         rep  cmpsb byte [rsi], byte [rdi]
000000000000d90a         seta       dl
000000000000d90d         sbb        dl, 0x0
000000000000d910         test       dl, dl
000000000000d912         jne        loc_d93d

000000000000d914         lea        rdi, qword [aLibs+8]                        ; 0x18310
000000000000d91b         mov        ecx, 0x3
000000000000d920         mov        rsi, r8
000000000000d923         mov        rbx, r8
000000000000d926         rep  cmpsb byte [rsi], byte [rdi]
000000000000d928         seta       dl
000000000000d92b         sbb        dl, 0x0
000000000000d92e         test       dl, dl
000000000000d930         jne        loc_d93d

000000000000d932         lea        rbx, qword [rax+4]
000000000000d936         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_d93d:
000000000000d93d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
000000000000d944         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
000000000000d94b         pop        rbx
000000000000d94c         ret
                        ; endp

                     loc_d94d:
000000000000d94d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
000000000000d954         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
000000000000d95b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
000000000000d960         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
000000000000d965         call       j_fwrite                                    ; fwrite
000000000000d96a         call       j_abort                                     ; abort
                        ; endp
000000000000d96f         align      16                                          ; End of unwind block (FDE at 0x1ada4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_24: int8_t, -36


                     qcopy_acl:
000000000000d970         push       r12                                         ; Begin of unwind block (FDE at 0x1adc4), CODE XREF=copy_acl+10
000000000000d972         push       rbp
000000000000d973         mov        r12d, ecx
000000000000d976         push       rbx
000000000000d977         mov        rbp, rdx
000000000000d97a         mov        edx, r8d
000000000000d97d         sub        rsp, 0x10
000000000000d981         lea        rbx, qword [rsp+0x28+var_24]
000000000000d986         mov        rax, qword [fs:0x28]
000000000000d98f         mov        qword [rsp+0x28+var_20], rax
000000000000d994         xor        eax, eax
000000000000d996         mov        rcx, rbx
000000000000d999         call       get_permissions                             ; get_permissions
000000000000d99e         test       eax, eax
000000000000d9a0         jne        loc_d9d8

000000000000d9a2         mov        rsi, rbp
000000000000d9a5         mov        rdi, rbx
000000000000d9a8         mov        edx, r12d
000000000000d9ab         call       set_permissions                             ; set_permissions
000000000000d9b0         mov        rdi, rbx
000000000000d9b3         mov        ebp, eax
000000000000d9b5         call       free_permission_context                     ; free_permission_context

                     loc_d9ba:
000000000000d9ba         mov        rcx, qword [rsp+0x28+var_20]                ; CODE XREF=qcopy_acl+109
000000000000d9bf         xor        rcx, qword [fs:0x28]
000000000000d9c8         mov        eax, ebp
000000000000d9ca         jne        loc_d9df

000000000000d9cc         add        rsp, 0x10
000000000000d9d0         pop        rbx
000000000000d9d1         pop        rbp
000000000000d9d2         pop        r12
000000000000d9d4         ret
                        ; endp
000000000000d9d5         align      8

                     loc_d9d8:
000000000000d9d8         mov        ebp, 0xfffffffe                             ; CODE XREF=qcopy_acl+48
000000000000d9dd         jmp        loc_d9ba

                     loc_d9df:
000000000000d9df         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=qcopy_acl+90
                        ; endp
000000000000d9e4         align      16                                          ; End of unwind block (FDE at 0x1adc4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_24: int32_t, -36


                     qset_acl:
000000000000d9f0         push       rbp                                         ; Begin of unwind block (FDE at 0x1adfc), CODE XREF=set_owner+301, set_acl+7
000000000000d9f1         push       rbx
000000000000d9f2         sub        rsp, 0x18
000000000000d9f6         lea        rbx, qword [rsp+0x28+var_24]
000000000000d9fb         mov        dword [rsp+0x28+var_24], edx
000000000000d9ff         mov        edx, esi
000000000000da01         mov        rsi, rdi
000000000000da04         mov        rdi, rbx
000000000000da07         mov        rax, qword [fs:0x28]
000000000000da10         mov        qword [rsp+0x28+var_20], rax
000000000000da15         xor        eax, eax
000000000000da17         call       set_permissions                             ; set_permissions
000000000000da1c         mov        rdi, rbx
000000000000da1f         mov        ebp, eax
000000000000da21         call       free_permission_context                     ; free_permission_context
000000000000da26         mov        rcx, qword [rsp+0x28+var_20]
000000000000da2b         xor        rcx, qword [fs:0x28]
000000000000da34         jne        loc_da3f

000000000000da36         add        rsp, 0x18
000000000000da3a         mov        eax, ebp
000000000000da3c         pop        rbx
000000000000da3d         pop        rbp
000000000000da3e         ret
                        ; endp

                     loc_da3f:
000000000000da3f         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=qset_acl+68
                        ; endp
000000000000da44         align      16                                          ; End of unwind block (FDE at 0x1adfc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
000000000000da50         push       rbp                                         ; Begin of unwind block (FDE at 0x1ae2c), CODE XREF=sub_e280+2597, sub_e280+2619
000000000000da51         push       rbx
000000000000da52         mov        rbp, rdi
000000000000da55         mov        ebx, esi
000000000000da57         sub        rsp, 0x8
000000000000da5b         call       locale_charset                              ; locale_charset
000000000000da60         movzx      edx, byte [rax]
000000000000da63         and        edx, 0xffffffdf
000000000000da66         cmp        dl, 0x55
000000000000da69         je         loc_dae0

000000000000da6b         cmp        dl, 0x47
000000000000da6e         je         loc_da90

                     loc_da70:
000000000000da70         lea        rax, qword [aLibs+27]                       ; 0x18323, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
000000000000da77         lea        rdx, qword [aLibs+29]                       ; 0x18325
000000000000da7e         cmp        ebx, 0x9
000000000000da81         cmovne     rax, rdx
000000000000da85         add        rsp, 0x8
000000000000da89         pop        rbx
000000000000da8a         pop        rbp
000000000000da8b         ret
                        ; endp
000000000000da8c         align      16

                     loc_da90:
000000000000da90         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
000000000000da94         and        edx, 0xffffffdf
000000000000da97         cmp        dl, 0x42
000000000000da9a         jne        loc_da70

000000000000da9c         cmp        byte [rax+2], 0x31
000000000000daa0         jne        loc_da70

000000000000daa2         cmp        byte [rax+3], 0x38
000000000000daa6         jne        loc_da70

000000000000daa8         cmp        byte [rax+4], 0x30
000000000000daac         jne        loc_da70

000000000000daae         cmp        byte [rax+5], 0x33
000000000000dab2         jne        loc_da70

000000000000dab4         cmp        byte [rax+6], 0x30
000000000000dab8         jne        loc_da70

000000000000daba         cmp        byte [rax+7], 0x0
000000000000dabe         jne        loc_da70

000000000000dac0         cmp        byte [rbp], 0x60
000000000000dac4         lea        rax, qword [aLibs+20]                       ; 0x1831c
000000000000dacb         lea        rdx, qword [aLibs+24]                       ; 0x18320
000000000000dad2         cmovne     rax, rdx
000000000000dad6         add        rsp, 0x8
000000000000dada         pop        rbx
000000000000dadb         pop        rbp
000000000000dadc         ret
                        ; endp
000000000000dadd         align      32

                     loc_dae0:
000000000000dae0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
000000000000dae4         and        edx, 0xffffffdf
000000000000dae7         cmp        dl, 0x54
000000000000daea         jne        loc_da70

000000000000daec         movzx      edx, byte [rax+2]
000000000000daf0         and        edx, 0xffffffdf
000000000000daf3         cmp        dl, 0x46
000000000000daf6         jne        loc_da70

000000000000dafc         cmp        byte [rax+3], 0x2d
000000000000db00         jne        loc_da70

000000000000db06         cmp        byte [rax+4], 0x38
000000000000db0a         jne        loc_da70

000000000000db10         cmp        byte [rax+5], 0x0
000000000000db14         jne        loc_da70

000000000000db1a         cmp        byte [rbp], 0x60
000000000000db1e         lea        rax, qword [aLibs+12]                       ; 0x18314
000000000000db25         lea        rdx, qword [aLibs+16]                       ; 0x18318
000000000000db2c         cmovne     rax, rdx
000000000000db30         add        rsp, 0x8
000000000000db34         pop        rbx
000000000000db35         pop        rbp
000000000000db36         ret
                        ; endp
000000000000db37         align      64                                          ; End of unwind block (FDE at 0x1ae2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
000000000000db40         push       r15                                         ; Begin of unwind block (FDE at 0x1ae70), CODE XREF=sub_e280+1165, sub_e280+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
000000000000db42         push       r14
000000000000db44         mov        r15d, r8d
000000000000db47         push       r13
000000000000db49         push       r12
000000000000db4b         mov        r14, rdi
000000000000db4e         push       rbp
000000000000db4f         push       rbx
000000000000db50         mov        ebx, r9d
000000000000db53         mov        r13, rsi
000000000000db56         mov        rbp, rcx
000000000000db59         and        ebx, 0x2
000000000000db5c         sub        rsp, 0xb8
000000000000db63         mov        rax, qword [rsp+0xe8+arg_0]
000000000000db6b         mov        qword [rsp+0xe8+var_D8], rdx
000000000000db70         mov        dword [rsp+0xe8+var_E0], r8d
000000000000db75         mov        dword [rsp+0xe8+var_70], r9d
000000000000db7a         mov        qword [rsp+0xe8+var_C8], rax
000000000000db7f         mov        rax, qword [rsp+0xe8+arg_8]
000000000000db87         mov        qword [rsp+0xe8+var_80], rax
000000000000db8c         mov        rax, qword [rsp+0xe8+arg_10]
000000000000db94         mov        qword [rsp+0xe8+var_88], rax
000000000000db99         mov        rax, qword [fs:0x28]
000000000000dba2         mov        qword [rsp+0xe8+var_40], rax
000000000000dbaa         xor        eax, eax
000000000000dbac         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
000000000000dbb1         cmp        r15d, 0xa
000000000000dbb5         mov        qword [rsp+0xe8+var_90], rax
000000000000dbba         ja         loc_ed6f

000000000000dbc0         lea        rcx, qword [switch_table_18380]             ; switch_table_18380
000000000000dbc7         mov        edx, r15d
000000000000dbca         movsxd     rax, dword [rcx+rdx*4]
000000000000dbce         add        rax, rcx
000000000000dbd1         jmp        rax                                         ; switch statement using table at 0x18380, with 11 cases, 0xdbd3,0xe7a4,0xe800,0xe855,0xe89a,0xe8d4,0xe97a,0xe9b4,0xeba8

                     loc_dbd3:
000000000000dbd3         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_e280+1318
000000000000dbd8         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000dbdd         xor        r12d, r12d
000000000000dbe0         mov        qword [rsp+0xe8+var_98], 0x0
000000000000dbe9         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000dbee         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_dbf3:
000000000000dbf3         lea        rax, qword [aLibs+29]                       ; 0x18325, CODE XREF=sub_e280+1876
000000000000dbfa         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000dc03         xor        r15d, r15d
000000000000dc06         mov        dword [rsp+0xe8+var_E0], 0x2
000000000000dc0e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_dc13:
000000000000dc13         xor        r11d, r11d                                  ; CODE XREF=sub_e280+180, sub_e280+1400, sub_e280+1488, sub_e280+1557, sub_e280+1615, sub_e280+1781, sub_e280+1839, sub_e280+2408, sub_e280+2485
000000000000dc16         mov        rax, rbp
000000000000dc19         mov        r8d, r12d
000000000000dc1c         mov        rbp, r11
000000000000dc1f         mov        r11, rax
000000000000dc22         nop        word [rax+rax]

                     loc_dc28:
000000000000dc28         cmp        r11, rbp                                    ; CODE XREF=sub_dd30+194
000000000000dc2b         setne      r12b
000000000000dc2f         cmp        r11, 0xffffffffffffffff
000000000000dc33         jne        loc_dc42

000000000000dc35         mov        rax, qword [rsp+0xe8+var_D8]
000000000000dc3a         cmp        byte [rax+rbp], 0x0
000000000000dc3e         setne      r12b

                     loc_dc42:
000000000000dc42         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
000000000000dc45         je         loc_e2a0

000000000000dc4b         cmp        dword [rsp+0xe8+var_E0], 0x2
000000000000dc50         mov        rdi, qword [rsp+0xe8+var_D8]
000000000000dc55         lea        r9, qword [rdi+rbp]
000000000000dc59         setne      al
000000000000dc5c         and        al, byte [rsp+0xe8+var_DB]
000000000000dc60         mov        r10d, eax
000000000000dc63         je         loc_dd10

000000000000dc69         mov        rax, qword [rsp+0xe8+var_D0]
000000000000dc6e         test       rax, rax
000000000000dc71         je         loc_e0a0

000000000000dc77         cmp        r11, 0xffffffffffffffff
000000000000dc7b         lea        rbx, qword [rbp+rax]
000000000000dc80         jne        loc_dcb0

000000000000dc82         cmp        rax, 0x1
000000000000dc86         jbe        loc_dcb0

000000000000dc88         mov        byte [rsp+0xe8+var_B0], r8b
000000000000dc8d         mov        byte [rsp+0xe8+var_B8], r10b
000000000000dc92         mov        qword [rsp+0xe8+var_C0], r9
000000000000dc97         call       j_strlen                                    ; strlen
000000000000dc9c         movzx      r8d, byte [rsp+0xe8+var_B0]
000000000000dca2         movzx      r10d, byte [rsp+0xe8+var_B8]
000000000000dca8         mov        r11, rax
000000000000dcab         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_dcb0:
000000000000dcb0         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
000000000000dcb3         mov        byte [rsp+0xe8+var_C0], r10b
000000000000dcb8         ja         loc_e270

000000000000dcbe         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
000000000000dcc3         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
000000000000dcc8         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
000000000000dccb         mov        qword [rsp+0xe8+var_A8], r11
000000000000dcd0         mov        byte [rsp+0xe8+var_B0], r8b
000000000000dcd5         mov        qword [rsp+0xe8+var_B8], r9
000000000000dcda         call       j_memcmp                                    ; memcmp
000000000000dcdf         test       eax, eax
000000000000dce1         mov        r9, qword [rsp+0xe8+var_B8]
000000000000dce6         movzx      r8d, byte [rsp+0xe8+var_B0]
000000000000dcec         mov        r11, qword [rsp+0xe8+var_A8]
000000000000dcf1         jne        loc_e270

000000000000dcf7         cmp        byte [rsp+0xe8+var_D9], 0x0
000000000000dcfc         movzx      r10d, byte [rsp+0xe8+var_C0]
000000000000dd02         jne        loc_ec85

000000000000dd08         nop        dword [rax+rax]

                     loc_dd10:
000000000000dd10         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_e260+19
000000000000dd14         cmp        bl, 0x7e
000000000000dd17         ja         loc_e038

000000000000dd1d         lea        rcx, qword [switch_table_18380+44]          ; 0x183ac
000000000000dd24         movzx      edx, bl
000000000000dd27         movsxd     rax, dword [rcx+rdx*4]
000000000000dd2b         add        rax, rcx
000000000000dd2e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_dd30:
000000000000dd30         xor        r10d, r10d
000000000000dd33         cmp        r11, 0x1
000000000000dd37         setne      al
000000000000dd3a         cmp        r11, 0xffffffffffffffff
000000000000dd3e         jne        loc_dd4c

000000000000dd40         mov        rax, qword [rsp+arg_8]
000000000000dd45         cmp        byte [rax+1], 0x0
000000000000dd49         setne      al

                     loc_dd4c:
000000000000dd4c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_dd30+14
000000000000dd51         sete       dl
000000000000dd54         test       al, al
000000000000dd56         je         loc_dfa8

                     loc_dd5c:
000000000000dd5c         xor        r12d, r12d                                  ; CODE XREF=sub_dfa0+11
000000000000dd5f         xor        eax, eax
000000000000dd61         nop        dword [rax]
                        ; endp

                     loc_dd68:
000000000000dd68         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_df50+50, sub_e020+119
000000000000dd6d         jne        loc_de82

000000000000dd73         test       dl, dl
000000000000dd75         jne        loc_de82

                     loc_dd7b:
000000000000dd7b         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_de30+87
000000000000dd80         test       rsi, rsi
000000000000dd83         je         loc_dd99

000000000000dd85         mov        edx, ebx
000000000000dd87         shr        dl, 0x5
000000000000dd8a         movzx      edx, dl
000000000000dd8d         mov        edx, dword [rsi+rdx*4]
000000000000dd90         bt         edx, ebx
000000000000dd93         jb         loc_dee3

                     loc_dd99:
000000000000dd99         test       r10b, r10b                                  ; CODE XREF=sub_dd30+83, sub_de30+93
000000000000dd9c         jne        loc_dee3

000000000000dda2         xor        eax, 0x1
000000000000dda5         add        rbp, 0x1
000000000000dda9         and        eax, r8d

                     loc_ddac:
000000000000ddac         test       al, al                                      ; CODE XREF=sub_e280+936
000000000000ddae         je         loc_ddd0

000000000000ddb0         cmp        r13, r15
000000000000ddb3         jbe        loc_ddba

000000000000ddb5         mov        byte [r14+r15], 0x27

                     loc_ddba:
000000000000ddba         lea        rax, qword [r15+1]                          ; CODE XREF=sub_dd30+131
000000000000ddbe         cmp        r13, rax
000000000000ddc1         jbe        loc_ddc9

000000000000ddc3         mov        byte [r14+r15+1], 0x27

                     loc_ddc9:
000000000000ddc9         add        r15, 0x2                                    ; CODE XREF=sub_dd30+145
000000000000ddcd         xor        r8d, r8d

                     loc_ddd0:
000000000000ddd0         cmp        r15, r13                                    ; CODE XREF=sub_dd30+126, sub_de30+275, sub_e280+869
000000000000ddd3         jae        loc_ddd9

000000000000ddd5         mov        byte [r14+r15], bl

                     loc_ddd9:
000000000000ddd9         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_dd30+163
000000000000ddde         add        r15, 0x1
000000000000dde2         mov        eax, 0x0
000000000000dde7         test       r12b, r12b
000000000000ddea         cmove      edi, eax
000000000000dded         mov        byte [rsp+0xe8+var_DA], dil
000000000000ddf2         jmp        loc_dc28
000000000000ddf7         align      512


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_de00:
000000000000de00         xor        r10d, r10d
000000000000de03         mov        eax, dword [rsp+arg_0]
000000000000de07         cmp        eax, 0x2
000000000000de0a         je         loc_e3c8

000000000000de10         cmp        eax, 0x5
000000000000de13         je         loc_e388

000000000000de19         cmp        eax, 0x2
000000000000de1c         mov        ebx, 0x3f
000000000000de21         sete       dl
000000000000de24         xor        r12d, r12d
000000000000de27         xor        eax, eax
000000000000de29         jmp        sub_dd30+56
                        ; endp
000000000000de2e         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_de30:
000000000000de30         xor        r10d, r10d
000000000000de33         cmp        dword [rsp+arg_0], 0x2
000000000000de38         je         loc_e340

000000000000de3e         mov        byte [rsp+arg_74], r12b
000000000000de43         xor        edx, edx
000000000000de45         xor        eax, eax
000000000000de47         mov        ebx, 0x27
000000000000de4c         jmp        sub_dd30+56
                        ; endp
000000000000de51         nop        dword [rax]
000000000000de58         mov        edx, 0x9
000000000000de5d         mov        ebx, 0x74

                     loc_de62:
000000000000de62         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_dff0+10, sub_e0e0+37, sub_e220+53
000000000000de67         sete       al
000000000000de6a         and        al, byte [rsp+arg_7]
000000000000de6e         jne        sub_dfa0+30

000000000000de74         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_de30+114
000000000000de79         jne        loc_dee0

                     loc_de7b:
000000000000de7b         mov        ebx, edx                                    ; CODE XREF=sub_df50+18
000000000000de7d         xor        r12d, r12d
000000000000de80         xor        eax, eax
                        ; endp

                     loc_de82:
000000000000de82         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_dd30+61, sub_dd30+69
000000000000de87         jne        loc_dd7b

000000000000de8d         jmp        loc_dd99
000000000000de92         nop        word [rax+rax]
000000000000de98         mov        edx, 0x8
000000000000de9d         mov        ebx, 0x62
000000000000dea2         jmp        sub_de30+68
000000000000dea4         nop        dword [rax]
000000000000dea8         cmp        dword [rsp+8], 0x2
000000000000dead         je         sub_e280                                    ; sub_e280
000000000000deb3         cmp        byte [rsp+0xd], 0x0
000000000000deb8         je         sub_e0c0+16

                     loc_debe:
000000000000debe         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_e0c0+8
000000000000dec3         je         loc_e0d0

000000000000dec9         cmp        qword [rsp+arg_10], 0x0
000000000000decf         jne        loc_e28b

000000000000ded5         mov        ebx, 0x5c
000000000000deda         nop        word [rax+rax]
                        ; endp

                     loc_dee0:
000000000000dee0         xor        r12d, r12d                                  ; CODE XREF=sub_de30+73, sub_e220+29
                        ; endp

                     loc_dee3:
000000000000dee3         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_dd30+99, sub_dd30+108
000000000000dee8         sete       dl
000000000000deeb         cmp        byte [rsp+0xe8+var_D9], 0x0
000000000000def0         mov        eax, edx
000000000000def2         jne        loc_e748

000000000000def8         mov        eax, r8d
000000000000defb         xor        eax, 0x1
000000000000defe         and        al, dl
000000000000df00         je         loc_df31

000000000000df02         cmp        r13, r15
000000000000df05         jbe        loc_df0c

000000000000df07         mov        byte [r14+r15], 0x27

                     loc_df0c:
000000000000df0c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_de30+213
000000000000df10         cmp        r13, rdx
000000000000df13         jbe        loc_df1b

000000000000df15         mov        byte [r14+r15+1], 0x24

                     loc_df1b:
000000000000df1b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_de30+227
000000000000df1f         cmp        r13, rdx
000000000000df22         jbe        loc_df2a

000000000000df24         mov        byte [r14+r15+2], 0x27

                     loc_df2a:
000000000000df2a         add        r15, 0x3                                    ; CODE XREF=sub_de30+242
000000000000df2e         mov        r8d, eax

                     loc_df31:
000000000000df31         cmp        r13, r15                                    ; CODE XREF=sub_de30+208
000000000000df34         jbe        loc_df3b

000000000000df36         mov        byte [r14+r15], 0x5c

                     loc_df3b:
000000000000df3b         add        r15, 0x1                                    ; CODE XREF=sub_de30+260
000000000000df3f         add        rbp, 0x1
000000000000df43         jmp        loc_ddd0
000000000000df48         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_df50:
000000000000df50         cmp        byte [rsp+arg_5], 0x0
000000000000df55         jne        loc_e123

000000000000df5b         xor        edx, edx
000000000000df5d         test       byte [rsp+arg_70], 0x1
000000000000df62         je         loc_de7b

000000000000df68         add        rbp, 0x1
000000000000df6c         jmp        quotearg_buffer_restyled+232
                        ; endp
000000000000df71         nop        dword [rax]
000000000000df78         cmp        dword [rsp+8], 0x2
000000000000df7d         sete       dl
000000000000df80         xor        eax, eax
000000000000df82         jmp        sub_dd30+56
000000000000df87         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_df90:
000000000000df90         mov        edx, 0x7
000000000000df95         mov        ebx, 0x61
000000000000df9a         jmp        sub_de30+68
                        ; endp
000000000000df9f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_dfa0:
000000000000dfa0         cmp        dword [rsp+8], 0x2
000000000000dfa5         sete       dl
                        ; endp

                     loc_dfa8:
000000000000dfa8         test       rbp, rbp                                    ; CODE XREF=sub_dd30+38, sub_e1c0+35
000000000000dfab         jne        loc_dd5c

000000000000dfb1         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_e1f0+43
000000000000dfb6         and        al, dl
000000000000dfb8         je         sub_dd30+56

000000000000dfbe         mov        rbp, r11
000000000000dfc1         mov        dword [rsp+arg_0], 0x2
000000000000dfc9         jmp        sub_e280+1097
                        ; endp
000000000000dfce         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_dfd0:
000000000000dfd0         cmp        dword [rsp+arg_0], 0x2
000000000000dfd5         sete       dl
000000000000dfd8         xor        r12d, r12d
000000000000dfdb         jmp        sub_dfa0+17
                        ; endp
000000000000dfdd         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_dfe0:
000000000000dfe0         cmp        dword [rsp+arg_0], 0x2
000000000000dfe5         mov        ebx, 0x20
000000000000dfea         sete       dl
000000000000dfed         jmp        sub_dfa0+17
                        ; endp
000000000000dfef         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_dff0:
000000000000dff0         mov        edx, 0xd
000000000000dff5         mov        ebx, 0x72
000000000000dffa         jmp        loc_de62
000000000000dfff         align      8192


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_e000:
000000000000e000         mov        edx, 0xc
000000000000e005         mov        ebx, 0x66
000000000000e00a         jmp        sub_de30+68
                        ; endp
000000000000e00f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_e010:
000000000000e010         mov        edx, 0xb
000000000000e015         mov        ebx, 0x76
000000000000e01a         jmp        sub_de30+68
                        ; endp
000000000000e01f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_e020:
000000000000e020         mov        edx, 0xa
000000000000e025         mov        ebx, 0x6e
000000000000e02a         jmp        sub_de30+50
                        ; endp
000000000000e02f         align      16

                     loc_e030:
000000000000e030         xor        r10d, r10d                                  ; CODE XREF=sub_e020+135
000000000000e033         nop        dword [rax+rax]

                     loc_e038:
000000000000e038         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
000000000000e03e         jne        loc_e3e8

000000000000e044         mov        qword [rsp+0xe8+var_B0], r11
000000000000e049         mov        byte [rsp+0xe8+var_B8], r8b
000000000000e04e         mov        byte [rsp+0xe8+var_C0], r10b
000000000000e053         call       j___ctype_b_loc                             ; __ctype_b_loc
000000000000e058         mov        rcx, qword [rax]
000000000000e05b         movzx      edx, bl
000000000000e05e         movzx      r10d, byte [rsp+0xe8+var_C0]
000000000000e064         movzx      r8d, byte [rsp+0xe8+var_B8]
000000000000e06a         mov        r11, qword [rsp+0xe8+var_B0]
000000000000e06f         mov        edi, 0x1
000000000000e074         movzx      eax, word [rcx+rdx*2]
000000000000e078         and        ax, 0x4000
000000000000e07c         setne      r12b
000000000000e080         sete       al
000000000000e083         and        al, byte [rsp+0xe8+var_DB]

                     loc_e087:
000000000000e087         test       al, al                                      ; CODE XREF=sub_e280+2221
000000000000e089         jne        loc_ea21

000000000000e08f         cmp        dword [rsp+0xe8+var_E0], 0x2
000000000000e094         sete       dl
000000000000e097         jmp        loc_dd68
000000000000e09c         align      32

                     loc_e0a0:
000000000000e0a0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
000000000000e0a4         cmp        bl, 0x7e
000000000000e0a7         ja         loc_e030

000000000000e0a9         lea        rcx, qword [switch_table_18380+552]         ; 0x185a8
000000000000e0b0         movzx      edx, bl
000000000000e0b3         movsxd     rax, dword [rcx+rdx*4]
000000000000e0b7         add        rax, rcx
000000000000e0ba         jmp        rax
                        ; endp
000000000000e0bc         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_e0c0:
000000000000e0c0         xor        r10d, r10d
000000000000e0c3         cmp        byte [rsp+arg_5], 0x0
000000000000e0c8         jne        loc_debe

000000000000e0ce         nop

                     loc_e0d0:
000000000000e0d0         mov        edx, 0x5c                                   ; CODE XREF=sub_de30+136, sub_de30+147
000000000000e0d5         mov        ebx, 0x5c
000000000000e0da         jmp        sub_de30+68
                        ; endp
000000000000e0df         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_e0e0:
000000000000e0e0         mov        edx, 0xc
000000000000e0e5         xor        r10d, r10d
000000000000e0e8         mov        ebx, 0x66
000000000000e0ed         jmp        sub_de30+68
                        ; endp
000000000000e0f2         nop        word [rax+rax]
000000000000e0f8         mov        edx, 0xa
000000000000e0fd         xor        r10d, r10d
000000000000e100         mov        ebx, 0x6e
000000000000e105         jmp        sub_de30+50
000000000000e10a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_e110:
000000000000e110         mov        ebx, 0x61
000000000000e115         jmp        sub_de30+176
                        ; endp
000000000000e11a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_e120:
000000000000e120         xor        r10d, r10d
                        ; endp

                     loc_e123:
000000000000e123         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_df50+5
000000000000e128         sete       dl
000000000000e12b         cmp        byte [rsp+arg_7], 0x0
000000000000e130         jne        loc_ecca

000000000000e136         mov        eax, r8d
000000000000e139         mov        rcx, r15
000000000000e13c         xor        eax, 0x1
000000000000e13f         and        al, dl
000000000000e141         je         loc_e170

000000000000e143         cmp        r13, r15
000000000000e146         jbe        loc_e14d

000000000000e148         mov        byte [r14+r15], 0x27

                     loc_e14d:
000000000000e14d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_e120+38
000000000000e151         cmp        r13, rcx
000000000000e154         jbe        loc_e15c

000000000000e156         mov        byte [r14+r15+1], 0x24

                     loc_e15c:
000000000000e15c         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_e120+52
000000000000e160         cmp        r13, rcx
000000000000e163         ja         loc_e799

                     loc_e169:
000000000000e169         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_e280+1311
000000000000e16d         mov        r8d, eax

                     loc_e170:
000000000000e170         cmp        r13, rcx                                    ; CODE XREF=sub_e120+33
000000000000e173         jbe        loc_e17a

000000000000e175         mov        byte [r14+rcx], 0x5c

                     loc_e17a:
000000000000e17a         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_e120+83
000000000000e17f         lea        r15, qword [rcx+1]
000000000000e183         je         loc_e789

000000000000e189         lea        rax, qword [rbp+1]
000000000000e18d         cmp        rax, r11
000000000000e190         jae        loc_e1ab

000000000000e192         mov        rax, qword [rsp+arg_8]
000000000000e197         movzx      eax, byte [rax+rbp+1]
000000000000e19c         mov        byte [rsp+arg_20], al
000000000000e1a0         sub        eax, 0x30
000000000000e1a3         cmp        al, 0x9
000000000000e1a5         jbe        loc_e9d9

                     loc_e1ab:
000000000000e1ab         mov        eax, r12d                                   ; CODE XREF=sub_e120+112
000000000000e1ae         mov        ebx, 0x30
000000000000e1b3         xor        r12d, r12d
000000000000e1b6         jmp        sub_dd30+56
                        ; endp
000000000000e1bb         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_e1c0:
000000000000e1c0         cmp        dword [rsp+arg_0], 0x2
000000000000e1c5         mov        r12d, r10d
000000000000e1c8         sete       dl
000000000000e1cb         xor        r10d, r10d
000000000000e1ce         xor        eax, eax
000000000000e1d0         jmp        sub_dd30+56
                        ; endp
000000000000e1d5         nop        dword [rax]
000000000000e1d8         cmp        dword [rsp+8], 0x2
000000000000e1dd         sete       dl
000000000000e1e0         xor        r10d, r10d
000000000000e1e3         jmp        sub_dfa0+8
000000000000e1e8         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_e1f0:
000000000000e1f0         cmp        dword [rsp+8], 0x2
000000000000e1f5         sete       dl
000000000000e1f8         xor        r10d, r10d
000000000000e1fb         xor        r12d, r12d
000000000000e1fe         jmp        sub_dfa0+17
                        ; endp
000000000000e203         nop        dword [rax+rax]
000000000000e208         cmp        dword [rsp+8], 0x2
000000000000e20d         mov        r12d, r10d
000000000000e210         mov        ebx, 0x20
000000000000e215         sete       dl
000000000000e218         xor        r10d, r10d
000000000000e21b         jmp        sub_dfa0+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_e220:
000000000000e220         mov        edx, 0xd
000000000000e225         xor        r10d, r10d
000000000000e228         mov        ebx, 0x72
000000000000e22d         jmp        sub_de30+50
                        ; endp
000000000000e232         nop        word [rax+rax]
000000000000e238         mov        ebx, 0x76
000000000000e23d         jmp        sub_de30+176
000000000000e242         nop        word [rax+rax]
000000000000e248         mov        edx, 0x9
000000000000e24d         xor        r10d, r10d
000000000000e250         mov        ebx, 0x74
000000000000e255         jmp        sub_de30+50
000000000000e25a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_e260:
000000000000e260         mov        ebx, 0x62
000000000000e265         jmp        sub_de30+176
                        ; endp
000000000000e26a         nop        word [rax+rax]

                     loc_e270:
000000000000e270         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
000000000000e273         jmp        loc_dd10
000000000000e278         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_e280:
000000000000e280         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_de30+125
000000000000e285         jne        sub_e280+2416
                        ; endp

                     loc_e28b:
000000000000e28b         add        rbp, 0x1                                    ; CODE XREF=sub_de30+159
000000000000e28f         mov        eax, r8d
000000000000e292         xor        r12d, r12d
000000000000e295         mov        ebx, 0x5c
000000000000e29a         jmp        sub_dd30+124
                        ; endp
000000000000e29f         align      32

                     loc_e2a0:
000000000000e2a0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
000000000000e2a5         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000e2aa         mov        r12d, r8d
000000000000e2ad         mov        rbp, r11
000000000000e2b0         sete       dl
000000000000e2b3         mov        eax, ebx
000000000000e2b5         test       r15, r15
000000000000e2b8         sete       cl
000000000000e2bb         and        eax, edx
000000000000e2bd         and        al, cl
000000000000e2bf         jne        loc_ed26

000000000000e2c5         mov        eax, ebx
000000000000e2c7         xor        eax, 0x1
000000000000e2ca         and        dl, al
000000000000e2cc         je         loc_ec3c

000000000000e2d2         cmp        byte [rsp+0xe8+var_6C], 0x0
000000000000e2d7         je         loc_ec3a

000000000000e2dd         cmp        byte [rsp+0xe8+var_DA], 0x0
000000000000e2e2         jne        loc_ecdd

000000000000e2e8         test       r13, r13
000000000000e2eb         sete       al
000000000000e2ee         cmp        qword [rsp+0xe8+var_98], 0x0
000000000000e2f4         setne      dl
000000000000e2f7         and        al, dl
000000000000e2f9         je         loc_ed1c

000000000000e2ff         mov        r13, qword [rsp+0xe8+var_98]

                     loc_e304:
000000000000e304         lea        rbx, qword [aLibs+29]                       ; 0x18325, CODE XREF=sub_e280+2781
000000000000e30b         mov        byte [r14], 0x27
000000000000e30f         mov        dword [rsp+0xe8+var_E0], 0x2
000000000000e317         mov        r15d, 0x1
000000000000e31d         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000e326         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000e32b         mov        qword [rsp+0xe8+var_A0], rbx
000000000000e330         mov        byte [rsp+0xe8+var_6C], al
000000000000e334         jmp        loc_dc13
000000000000e339         align      64

                     loc_e340:
000000000000e340         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_de30+8
000000000000e345         jne        sub_e280+2416

000000000000e34b         test       r13, r13
000000000000e34e         je         loc_e750

000000000000e354         xor        edx, edx
000000000000e356         cmp        qword [rsp+arg_48], 0x0
000000000000e35c         jne        loc_e750

                     loc_e362:
000000000000e362         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_e280+1284, sub_e280+2794
000000000000e367         add        r15, 0x3
000000000000e36b         xor        eax, eax
000000000000e36d         mov        byte [rsp+arg_74], r12b
000000000000e372         xor        r8d, r8d
000000000000e375         mov        r13, rdx
000000000000e378         mov        ebx, 0x27
000000000000e37d         jmp        sub_dd30+105
                        ; endp
000000000000e382         align      8

                     loc_e388:
000000000000e388         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_de00+19
000000000000e38d         je         loc_e3b0

000000000000e38f         lea        rcx, qword [rbp+2]
000000000000e393         cmp        rcx, r11
000000000000e396         jae        loc_e3b0

000000000000e398         mov        rax, qword [rsp+arg_8]
000000000000e39d         cmp        byte [rax+rbp+1], 0x3f
000000000000e3a2         je         loc_eb32

000000000000e3a8         nop        dword [rax+rax]

                     loc_e3b0:
000000000000e3b0         xor        edx, edx                                    ; CODE XREF=sub_e280+269, sub_e280+278, sub_e280+2233, sub_e280+2253
000000000000e3b2         xor        r12d, r12d
000000000000e3b5         xor        eax, eax
000000000000e3b7         mov        ebx, 0x3f
000000000000e3bc         jmp        sub_dd30+56
                        ; endp
000000000000e3c1         align      8

                     loc_e3c8:
000000000000e3c8         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_de00+10
000000000000e3cd         jne        loc_ebf0

000000000000e3d3         xor        r12d, r12d
000000000000e3d6         xor        eax, eax
000000000000e3d8         mov        ebx, 0x3f
000000000000e3dd         jmp        sub_dd30+105
                        ; endp
000000000000e3e2         align      8

                     loc_e3e8:
000000000000e3e8         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_e020+30
000000000000e3f0         cmp        r11, 0xffffffffffffffff
000000000000e3f4         mov        qword [rsp+0xe8+var_48], 0x0
000000000000e400         mov        qword [rsp+0xe8+var_C0], rax
000000000000e405         jne        loc_e434

000000000000e407         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
000000000000e40c         mov        byte [rsp+0xe8+var_A8], r8b
000000000000e411         mov        byte [rsp+0xe8+var_B0], r10b
000000000000e416         mov        qword [rsp+0xe8+var_B8], r9
000000000000e41b         call       j_strlen                                    ; strlen
000000000000e420         movzx      r8d, byte [rsp+0xe8+var_A8]
000000000000e426         movzx      r10d, byte [rsp+0xe8+var_B0]
000000000000e42c         mov        r11, rax
000000000000e42f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_e434:
000000000000e434         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_e280+389
000000000000e43c         xor        ecx, ecx
000000000000e43e         mov        byte [rsp+0xe8+var_6A], bl
000000000000e442         mov        byte [rsp+0xe8+var_6B], r8b
000000000000e447         mov        rbx, rcx
000000000000e44a         mov        qword [rsp+0xe8+var_60], r9
000000000000e452         mov        qword [rsp+0xe8+var_B0], rax
000000000000e457         mov        byte [rsp+0xe8+var_69], r10b
000000000000e45c         mov        qword [rsp+0xe8+var_68], r15
000000000000e464         mov        qword [rsp+0xe8+var_A8], r14
000000000000e469         mov        qword [rsp+0xe8+var_78], r13
000000000000e46e         mov        qword [rsp+0xe8+var_B8], r11

                     loc_e473:
000000000000e473         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_e280+623
000000000000e478         lea        r14, qword [rbp+rbx]
000000000000e47d         mov        rdx, qword [rsp+0xe8+var_B8]
000000000000e482         mov        rcx, qword [rsp+0xe8+var_C0]
000000000000e487         mov        rdi, qword [rsp+0xe8+var_B0]
000000000000e48c         lea        r13, qword [rax+r14]
000000000000e490         sub        rdx, r14
000000000000e493         mov        rsi, r13
000000000000e496         call       rpl_mbrtowc                                 ; rpl_mbrtowc
000000000000e49b         test       rax, rax
000000000000e49e         mov        r15, rax
000000000000e4a1         je         loc_e4f1

000000000000e4a3         cmp        rax, 0xffffffffffffffff
000000000000e4a7         je         loc_eac5

000000000000e4ad         cmp        rax, 0xfffffffffffffffe
000000000000e4b1         je         loc_ea51

000000000000e4b7         cmp        dword [rsp+0xe8+var_E0], 0x2
000000000000e4bc         sete       al
000000000000e4bf         and        al, byte [rsp+0xe8+var_D9]
000000000000e4c3         jne        loc_e660

                     loc_e4c9:
000000000000e4c9         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_e280+996, sub_e280+1031
000000000000e4d0         call       j_iswprint                                  ; iswprint
000000000000e4d5         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
000000000000e4da         test       eax, eax
000000000000e4dc         mov        eax, 0x0
000000000000e4e1         cmove      r12d, eax
000000000000e4e5         add        rbx, r15
000000000000e4e8         call       j_mbsinit                                   ; mbsinit
000000000000e4ed         test       eax, eax
000000000000e4ef         je         loc_e473

                     loc_e4f1:
000000000000e4f1         mov        edx, r12d                                   ; CODE XREF=sub_e280+545
000000000000e4f4         mov        rdi, rbx
000000000000e4f7         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000e4fd         xor        edx, 0x1
000000000000e500         movzx      ebx, byte [rsp+0xe8+var_6A]
000000000000e505         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000e50b         and        dl, byte [rsp+0xe8+var_DB]
000000000000e50f         mov        r15, qword [rsp+0xe8+var_68]
000000000000e517         mov        r14, qword [rsp+0xe8+var_A8]
000000000000e51c         mov        r13, qword [rsp+0xe8+var_78]
000000000000e521         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_e526:
000000000000e526         cmp        rdi, 0x1                                    ; CODE XREF=sub_e280+2112, sub_e280+2168
000000000000e52a         jbe        loc_eb2b

                     loc_e530:
000000000000e530         mov        rcx, rdi                                    ; CODE XREF=sub_e280+1961
000000000000e533         xor        esi, esi
000000000000e535         movzx      r9d, byte [rsp+0xe8+var_D9]
000000000000e53b         add        rcx, rbp
000000000000e53e         mov        rdi, qword [rsp+0xe8+var_D8]
000000000000e543         jmp        loc_e5fe
000000000000e548         align      16

                     loc_e550:
000000000000e550         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_e280+896
000000000000e555         sete       al
000000000000e558         test       r9b, r9b
000000000000e55b         jne        loc_ea10

000000000000e561         mov        esi, r8d
000000000000e564         xor        esi, 0x1
000000000000e567         and        al, sil
000000000000e56a         je         loc_e59b

000000000000e56c         cmp        r13, r15
000000000000e56f         jbe        loc_e576

000000000000e571         mov        byte [r14+r15], 0x27

                     loc_e576:
000000000000e576         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_e280+751
000000000000e57a         cmp        r13, rsi
000000000000e57d         jbe        loc_e585

000000000000e57f         mov        byte [r14+r15+1], 0x24

                     loc_e585:
000000000000e585         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_e280+765
000000000000e589         cmp        r13, rsi
000000000000e58c         jbe        loc_e594

000000000000e58e         mov        byte [r14+r15+2], 0x27

                     loc_e594:
000000000000e594         add        r15, 0x3                                    ; CODE XREF=sub_e280+780
000000000000e598         mov        r8d, eax

                     loc_e59b:
000000000000e59b         cmp        r13, r15                                    ; CODE XREF=sub_e280+746
000000000000e59e         jbe        loc_e5a5

000000000000e5a0         mov        byte [r14+r15], 0x5c

                     loc_e5a5:
000000000000e5a5         lea        rax, qword [r15+1]                          ; CODE XREF=sub_e280+798
000000000000e5a9         cmp        r13, rax
000000000000e5ac         jbe        loc_e5bb

000000000000e5ae         mov        eax, ebx
000000000000e5b0         shr        al, 0x6
000000000000e5b3         add        eax, 0x30
000000000000e5b6         mov        byte [r14+r15+1], al

                     loc_e5bb:
000000000000e5bb         lea        rax, qword [r15+2]                          ; CODE XREF=sub_e280+812
000000000000e5bf         cmp        r13, rax
000000000000e5c2         jbe        loc_e5d4

000000000000e5c4         mov        eax, ebx
000000000000e5c6         shr        al, 0x3
000000000000e5c9         and        eax, 0x7
000000000000e5cc         add        eax, 0x30
000000000000e5cf         mov        byte [r14+r15+2], al

                     loc_e5d4:
000000000000e5d4         and        ebx, 0x7                                    ; CODE XREF=sub_e280+834
000000000000e5d7         add        rbp, 0x1
000000000000e5db         add        r15, 0x3
000000000000e5df         add        ebx, 0x30
000000000000e5e2         cmp        rbp, rcx
000000000000e5e5         jae        loc_ddd0

000000000000e5eb         mov        esi, edx

                     loc_e5ed:
000000000000e5ed         cmp        r13, r15                                    ; CODE XREF=sub_e280+985, sub_e280+1969
000000000000e5f0         jbe        loc_e5f6

000000000000e5f2         mov        byte [r14+r15], bl

                     loc_e5f6:
000000000000e5f6         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_e280+880
000000000000e5fa         add        r15, 0x1

                     loc_e5fe:
000000000000e5fe         test       dl, dl                                      ; CODE XREF=sub_e280+707
000000000000e600         jne        loc_e550

000000000000e606         mov        eax, esi
000000000000e608         xor        eax, 0x1
000000000000e60b         and        eax, r8d
000000000000e60e         test       r10b, r10b
000000000000e611         je         loc_e621

000000000000e613         cmp        r13, r15
000000000000e616         jbe        loc_e61d

000000000000e618         mov        byte [r14+r15], 0x5c

                     loc_e61d:
000000000000e61d         add        r15, 0x1                                    ; CODE XREF=sub_e280+918

                     loc_e621:
000000000000e621         add        rbp, 0x1                                    ; CODE XREF=sub_e280+913
000000000000e625         cmp        rbp, rcx
000000000000e628         jae        loc_ddac

000000000000e62e         test       al, al
000000000000e630         je         loc_ea2e

000000000000e636         cmp        r13, r15
000000000000e639         jbe        loc_e640

000000000000e63b         mov        byte [r14+r15], 0x27

                     loc_e640:
000000000000e640         lea        rax, qword [r15+1]                          ; CODE XREF=sub_e280+953
000000000000e644         cmp        r13, rax
000000000000e647         jbe        loc_e64f

000000000000e649         mov        byte [r14+r15+1], 0x27

                     loc_e64f:
000000000000e64f         add        r15, 0x2                                    ; CODE XREF=sub_e280+967
000000000000e653         xor        r10d, r10d
000000000000e656         xor        r8d, r8d
000000000000e659         jmp        loc_e5ed
000000000000e65b         align      32

                     loc_e660:
000000000000e660         cmp        r15, 0x1                                    ; CODE XREF=sub_e280+579
000000000000e664         je         loc_e4c9

000000000000e66a         mov        rdi, qword [rsp+0xe8+var_D8]
000000000000e66f         lea        rcx, qword [rdi+r15]
000000000000e673         lea        rdx, qword [rdi+r14+1]
000000000000e678         lea        r8, qword [rcx+r14]
000000000000e67c         jmp        loc_e68d
000000000000e67e         align      128

                     loc_e680:
000000000000e680         add        rdx, 0x1                                    ; CODE XREF=sub_e280+1046, sub_e280+1072
000000000000e684         cmp        r8, rdx
000000000000e687         je         loc_e4c9

                     loc_e68d:
000000000000e68d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_e280+1020
000000000000e690         sub        ecx, 0x5b
000000000000e693         cmp        cl, 0x21
000000000000e696         ja         loc_e680

000000000000e698         mov        esi, 0x1
000000000000e69d         shl        rsi, cl
000000000000e6a0         mov        rcx, rsi
000000000000e6a3         movabs     rsi, 0x20000002b
000000000000e6ad         test       rcx, rsi
000000000000e6b0         je         loc_e680

000000000000e6b2         mov        r14, qword [rsp+0xe8+var_A8]
000000000000e6b7         mov        r13, qword [rsp+0xe8+var_78]
000000000000e6bc         mov        rbp, qword [rsp+0xe8+var_B8]
000000000000e6c1         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_e6c9:
000000000000e6c9         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_e280+1227, sub_e280+1948, sub_e280+2585, sub_e280+2734
000000000000e6ce         je         loc_e6e0

000000000000e6d0         test       al, al
000000000000e6d2         mov        eax, 0x4
000000000000e6d7         cmove      eax, dword [rsp+0xe8+var_E0]
000000000000e6dc         mov        dword [rsp+0xe8+var_E0], eax

                     loc_e6e0:
000000000000e6e0         sub        rsp, 0x8                                    ; CODE XREF=sub_e280+1102
000000000000e6e4         mov        rcx, rbp
000000000000e6e7         mov        rsi, r13
000000000000e6ea         push       qword [rsp+0xf0+var_88]
000000000000e6ee         push       qword [rsp+0xf8+var_80]
000000000000e6f2         mov        rdi, r14
000000000000e6f5         push       0x0
000000000000e6f7         mov        r9d, dword [rsp+0x108+var_70]
000000000000e6ff         mov        r8d, dword [rsp+0x108+var_E0]
000000000000e704         mov        rdx, qword [rsp+0x108+var_D8]
000000000000e709         and        r9d, 0xfffffffd
000000000000e70d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000e712         add        rsp, 0x20
000000000000e716         mov        r15, rax

                     loc_e719:
000000000000e719         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_e280+2549, sub_e280+2560, sub_e280+2711
000000000000e721         xor        rbx, qword [fs:0x28]
000000000000e72a         mov        rax, r15
000000000000e72d         jne        loc_ed33

000000000000e733         add        rsp, 0xb8
000000000000e73a         pop        rbx
000000000000e73b         pop        rbp
000000000000e73c         pop        r12
000000000000e73e         pop        r13
000000000000e740         pop        r14
000000000000e742         pop        r15
000000000000e744         ret
                        ; endp
000000000000e745         align      8

                     loc_e748:
000000000000e748         mov        rbp, r11                                    ; CODE XREF=sub_de30+194
000000000000e74b         jmp        loc_e6c9

                     loc_e750:
000000000000e750         cmp        r13, r15                                    ; CODE XREF=sub_e280+206, sub_e280+220
000000000000e753         jbe        loc_e75a

000000000000e755         mov        byte [r14+r15], 0x27

                     loc_e75a:
000000000000e75a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_e280+1235
000000000000e75e         cmp        r13, rax
000000000000e761         jbe        loc_e769

000000000000e763         mov        byte [r14+r15+1], 0x5c

                     loc_e769:
000000000000e769         lea        rax, qword [r15+2]                          ; CODE XREF=sub_e280+1249
000000000000e76d         cmp        r13, rax
000000000000e770         jbe        loc_ed62

000000000000e776         mov        rdx, r13
000000000000e779         mov        byte [r14+r15+2], 0x27
000000000000e77f         mov        r13, qword [rsp+arg_48]
000000000000e784         jmp        loc_e362

                     loc_e789:
000000000000e789         mov        eax, r12d                                   ; CODE XREF=sub_e120+99
000000000000e78c         mov        ebx, 0x30
000000000000e791         xor        r12d, r12d
000000000000e794         jmp        sub_dd30+105
                        ; endp

                     loc_e799:
000000000000e799         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_e120+67
000000000000e79f         jmp        loc_e169

                     loc_e7a4:
000000000000e7a4         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
000000000000e7a6         jne        loc_dbd3

000000000000e7ac         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_e7b1:
000000000000e7b1         test       r13, r13                                    ; CODE XREF=sub_e280+2749
000000000000e7b4         jne        loc_ed4a

000000000000e7ba         lea        rax, qword [aLibs+29]                       ; 0x18325
000000000000e7c1         mov        qword [rsp+0xe8+var_98], 0x0
000000000000e7ca         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000e7cf         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000e7d4         xor        r12d, r12d
000000000000e7d7         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000e7dc         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000e7e5         mov        qword [rsp+0xe8+var_A0], rax
000000000000e7ea         mov        r15d, 0x1
000000000000e7f0         mov        dword [rsp+0xe8+var_E0], 0x2
000000000000e7f8         jmp        loc_dc13
000000000000e7fd         align      2048

                     loc_e800:
000000000000e800         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
000000000000e802         jne        loc_ebfd

000000000000e808         test       r13, r13
000000000000e80b         je         loc_ea36

000000000000e811         mov        byte [r14], 0x22
000000000000e815         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000e81a         xor        r12d, r12d
000000000000e81d         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000e822         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_e82b:
000000000000e82b         lea        rax, qword [aLibs+27]                       ; 0x18323, CODE XREF=sub_e280+1996
000000000000e832         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000e837         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000e83c         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000e845         mov        r15d, 0x1
000000000000e84b         mov        qword [rsp+0xe8+var_A0], rax
000000000000e850         jmp        loc_dc13

                     loc_e855:
000000000000e855         lea        rax, qword [aLibs+27]                       ; case 6, 0x18323, CODE XREF=quotearg_buffer_restyled+145
000000000000e85c         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000e861         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000e866         xor        r12d, r12d
000000000000e869         mov        qword [rsp+0xe8+var_98], 0x0
000000000000e872         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000e877         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000e87c         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000e885         xor        r15d, r15d
000000000000e888         mov        qword [rsp+0xe8+var_A0], rax
000000000000e88d         mov        dword [rsp+0xe8+var_E0], 0x5
000000000000e895         jmp        loc_dc13

                     loc_e89a:
000000000000e89a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
000000000000e89f         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000e8a4         xor        r12d, r12d
000000000000e8a7         mov        qword [rsp+0xe8+var_98], 0x0
000000000000e8b0         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000e8b5         xor        r15d, r15d
000000000000e8b8         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000e8bd         mov        qword [rsp+0xe8+var_D0], 0x0
000000000000e8c6         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000e8cf         jmp        loc_dc13

                     loc_e8d4:
000000000000e8d4         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
000000000000e8d9         je         loc_e931

000000000000e8db         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x18327
000000000000e8e2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000e8e4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000e8e9         call       j_dcgettext                                 ; dcgettext
000000000000e8ee         mov        rcx, rax
000000000000e8f1         mov        qword [rsp+0xe8+var_80], rax
000000000000e8f6         lea        rax, qword [aLibs+31]                       ; 0x18327
000000000000e8fd         cmp        rcx, rax
000000000000e900         je         loc_ec9e

                     loc_e906:
000000000000e906         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x18325, CODE XREF=sub_e280+2607
000000000000e90d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000e90f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000e914         call       j_dcgettext                                 ; dcgettext
000000000000e919         mov        rcx, rax
000000000000e91c         mov        qword [rsp+0xe8+var_88], rax
000000000000e921         lea        rax, qword [aLibs+29]                       ; 0x18325
000000000000e928         cmp        rcx, rax
000000000000e92b         je         loc_ecb4

                     loc_e931:
000000000000e931         xor        r15d, r15d                                  ; CODE XREF=sub_e280+1625, sub_e280+2629
000000000000e934         test       ebx, ebx
000000000000e936         je         loc_eafd

                     loc_e93c:
000000000000e93c         test       ebx, ebx                                    ; CODE XREF=sub_e280+2183, sub_e280+2214
000000000000e93e         mov        rbx, qword [rsp+0xe8+var_88]
000000000000e943         setne      byte [rsp+0xe8+var_D9]
000000000000e948         xor        r12d, r12d
000000000000e94b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
000000000000e94e         call       j_strlen                                    ; strlen
000000000000e953         mov        qword [rsp+0xe8+var_A0], rbx
000000000000e958         mov        qword [rsp+0xe8+var_D0], rax
000000000000e95d         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000e962         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000e967         mov        qword [rsp+0xe8+var_98], 0x0
000000000000e970         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000e975         jmp        loc_dc13

                     loc_e97a:
000000000000e97a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
000000000000e97f         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000e984         xor        r12d, r12d
000000000000e987         mov        qword [rsp+0xe8+var_98], 0x0
000000000000e990         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000e995         xor        r15d, r15d
000000000000e998         mov        byte [rsp+0xe8+var_DB], 0x0
000000000000e99d         mov        qword [rsp+0xe8+var_D0], 0x0
000000000000e9a6         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000e9af         jmp        loc_dc13

                     loc_e9b4:
000000000000e9b4         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
000000000000e9b9         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000e9be         xor        r12d, r12d
000000000000e9c1         mov        qword [rsp+0xe8+var_98], 0x0
000000000000e9ca         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000e9cf         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000e9d4         jmp        loc_dbf3

                     loc_e9d9:
000000000000e9d9         cmp        r13, r15                                    ; CODE XREF=sub_e120+133
000000000000e9dc         jbe        loc_e9e3

000000000000e9de         mov        byte [r14+r15], 0x30

                     loc_e9e3:
000000000000e9e3         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_e280+1884
000000000000e9e7         cmp        r13, rax
000000000000e9ea         jbe        loc_e9f2

000000000000e9ec         mov        byte [r14+rcx+2], 0x30

                     loc_e9f2:
000000000000e9f2         mov        eax, r12d                                   ; CODE XREF=sub_e280+1898
000000000000e9f5         lea        r15, qword [rcx+3]
000000000000e9f9         xor        r12d, r12d
000000000000e9fc         mov        ebx, 0x30
000000000000ea01         jmp        sub_dd30+56
                        ; endp
000000000000ea06         align      16

                     loc_ea10:
000000000000ea10         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_e280+731
000000000000ea15         mov        rbp, r11
000000000000ea18         mov        byte [rsp+0xe8+var_DB], bl
000000000000ea1c         jmp        loc_e6c9

                     loc_ea21:
000000000000ea21         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_e020+105
000000000000ea26         xor        r12d, r12d
000000000000ea29         jmp        loc_e530

                     loc_ea2e:
000000000000ea2e         xor        r10d, r10d                                  ; CODE XREF=sub_e280+944
000000000000ea31         jmp        loc_e5ed

                     loc_ea36:
000000000000ea36         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_e280+1419
000000000000ea3f         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000ea44         xor        r12d, r12d
000000000000ea47         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000ea4c         jmp        loc_e82b

                     loc_ea51:
000000000000ea51         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_e280+561
000000000000ea56         mov        rsi, r14
000000000000ea59         mov        rcx, r13
000000000000ea5c         mov        rax, rbx
000000000000ea5f         mov        rdi, rbx
000000000000ea62         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000ea68         movzx      ebx, byte [rsp+0xe8+var_6A]
000000000000ea6d         mov        r9, qword [rsp+0xe8+var_60]
000000000000ea75         cmp        rsi, r11
000000000000ea78         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000ea7e         mov        r15, qword [rsp+0xe8+var_68]
000000000000ea86         mov        r14, qword [rsp+0xe8+var_A8]
000000000000ea8b         mov        r13, qword [rsp+0xe8+var_78]
000000000000ea90         jae        loc_eab8

000000000000ea92         cmp        byte [rcx], 0x0
000000000000ea95         jne        loc_eaa7

000000000000ea97         jmp        loc_eab8
000000000000ea99         align      32

                     loc_eaa0:
000000000000eaa0         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_e280+2099
000000000000eaa5         je         loc_eab5

                     loc_eaa7:
000000000000eaa7         add        rax, 0x1                                    ; CODE XREF=sub_e280+2069
000000000000eaab         lea        rdx, qword [rbp+rax]
000000000000eab0         cmp        r11, rdx
000000000000eab3         ja         loc_eaa0

                     loc_eab5:
000000000000eab5         mov        rdi, rax                                    ; CODE XREF=sub_e280+2085

                     loc_eab8:
000000000000eab8         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_e280+2064, sub_e280+2071
000000000000eabd         xor        r12d, r12d
000000000000eac0         jmp        loc_e526

                     loc_eac5:
000000000000eac5         mov        rdi, rbx                                    ; CODE XREF=sub_e280+551
000000000000eac8         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000eace         movzx      ebx, byte [rsp+0xe8+var_6A]
000000000000ead3         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000ead9         mov        r15, qword [rsp+0xe8+var_68]
000000000000eae1         xor        r12d, r12d
000000000000eae4         mov        r14, qword [rsp+0xe8+var_A8]
000000000000eae9         mov        r13, qword [rsp+0xe8+var_78]
000000000000eaee         mov        r11, qword [rsp+0xe8+var_B8]
000000000000eaf3         movzx      edx, byte [rsp+0xe8+var_DB]
000000000000eaf8         jmp        loc_e526

                     loc_eafd:
000000000000eafd         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_e280+1718
000000000000eb02         movzx      eax, byte [rdx]
000000000000eb05         test       al, al
000000000000eb07         je         loc_e93c

000000000000eb0d         nop        dword [rax]

                     loc_eb10:
000000000000eb10         cmp        r13, r15                                    ; CODE XREF=sub_e280+2212
000000000000eb13         jbe        loc_eb19

000000000000eb15         mov        byte [r14+r15], al

                     loc_eb19:
000000000000eb19         add        r15, 0x1                                    ; CODE XREF=sub_e280+2195
000000000000eb1d         movzx      eax, byte [rdx+r15]
000000000000eb22         test       al, al
000000000000eb24         jne        loc_eb10

000000000000eb26         jmp        loc_e93c

                     loc_eb2b:
000000000000eb2b         mov        eax, edx                                    ; CODE XREF=sub_e280+682
000000000000eb2d         jmp        loc_e087

                     loc_eb32:
000000000000eb32         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_e280+290
000000000000eb36         cmp        bl, 0x3e
000000000000eb39         ja         loc_e3b0

000000000000eb3f         movabs     rax, 0x7000a38200000000
000000000000eb49         bt         rax, rbx
000000000000eb4d         jae        loc_e3b0

000000000000eb53         cmp        byte [rsp+arg_7], 0x0
000000000000eb58         jne        loc_ed42

000000000000eb5e         cmp        r13, r15
000000000000eb61         jbe        loc_eb68

000000000000eb63         mov        byte [r14+r15], 0x3f

                     loc_eb68:
000000000000eb68         lea        rax, qword [r15+1]                          ; CODE XREF=sub_e280+2273
000000000000eb6c         cmp        r13, rax
000000000000eb6f         jbe        loc_eb77

000000000000eb71         mov        byte [r14+r15+1], 0x22

                     loc_eb77:
000000000000eb77         lea        rax, qword [r15+2]                          ; CODE XREF=sub_e280+2287
000000000000eb7b         cmp        r13, rax
000000000000eb7e         jbe        loc_eb86

000000000000eb80         mov        byte [r14+r15+2], 0x22

                     loc_eb86:
000000000000eb86         lea        rax, qword [r15+3]                          ; CODE XREF=sub_e280+2302
000000000000eb8a         cmp        r13, rax
000000000000eb8d         jbe        loc_eb95

000000000000eb8f         mov        byte [r14+r15+3], 0x3f

                     loc_eb95:
000000000000eb95         add        r15, 0x4                                    ; CODE XREF=sub_e280+2317
000000000000eb99         xor        edx, edx
000000000000eb9b         xor        r12d, r12d
000000000000eb9e         xor        eax, eax
000000000000eba0         mov        rbp, rcx
000000000000eba3         jmp        sub_dd30+56
                        ; endp

                     loc_eba8:
000000000000eba8         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
000000000000ebaa         je         loc_ed38

000000000000ebb0         lea        rax, qword [aLibs+29]                       ; 0x18325
000000000000ebb7         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000ebbc         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000ebc1         xor        r12d, r12d
000000000000ebc4         mov        qword [rsp+0xe8+var_98], 0x0
000000000000ebcd         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000ebd2         mov        byte [rsp+0xe8+var_DB], 0x0
000000000000ebd7         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000ebe0         xor        r15d, r15d
000000000000ebe3         mov        qword [rsp+0xe8+var_A0], rax
000000000000ebe8         jmp        loc_dc13
000000000000ebed         align      16

                     loc_ebf0:
000000000000ebf0         mov        rbp, r11                                    ; CODE XREF=sub_e280+333
000000000000ebf3         movzx      eax, byte [rsp+arg_7]
000000000000ebf8         jmp        sub_e280+1097
                        ; endp

                     loc_ebfd:
000000000000ebfd         lea        rax, qword [aLibs+27]                       ; 0x18323, CODE XREF=sub_e280+1410
000000000000ec04         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000ec09         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000ec0e         xor        r12d, r12d
000000000000ec11         mov        qword [rsp+0xe8+var_98], 0x0
000000000000ec1a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000ec1f         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000ec24         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000ec2d         xor        r15d, r15d
000000000000ec30         mov        qword [rsp+0xe8+var_A0], rax
000000000000ec35         jmp        loc_dc13

                     loc_ec3a:
000000000000ec3a         mov        eax, edx                                    ; CODE XREF=sub_e280+87

                     loc_ec3c:
000000000000ec3c         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_e280+76, sub_e280+2721
000000000000ec41         test       rbx, rbx
000000000000ec44         je         loc_ec72

000000000000ec46         test       al, al
000000000000ec48         je         loc_ec72

000000000000ec4a         movzx      ecx, byte [rbx]
000000000000ec4d         mov        rax, rbx
000000000000ec50         test       cl, cl
000000000000ec52         je         loc_ec72

000000000000ec54         mov        rdx, r15
000000000000ec57         sub        rax, r15

                     loc_ec5a:
000000000000ec5a         cmp        r13, rdx                                    ; CODE XREF=sub_e280+2541
000000000000ec5d         jbe        loc_ec63

000000000000ec5f         mov        byte [r14+rdx], cl

                     loc_ec63:
000000000000ec63         add        rdx, 0x1                                    ; CODE XREF=sub_e280+2525
000000000000ec67         movzx      ecx, byte [rax+rdx]
000000000000ec6b         test       cl, cl
000000000000ec6d         jne        loc_ec5a

000000000000ec6f         mov        r15, rdx

                     loc_ec72:
000000000000ec72         cmp        r13, r15                                    ; CODE XREF=sub_e280+2500, sub_e280+2504, sub_e280+2514
000000000000ec75         jbe        loc_e719

000000000000ec7b         mov        byte [r14+r15], 0x0
000000000000ec80         jmp        loc_e719

                     loc_ec85:
000000000000ec85         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
000000000000ec8a         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000ec8f         mov        rbp, r11
000000000000ec92         sete       al
000000000000ec95         mov        byte [rsp+0xe8+var_DB], bl
000000000000ec99         jmp        loc_e6c9

                     loc_ec9e:
000000000000ec9e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_e280+1664
000000000000eca2         mov        rdi, rcx
000000000000eca5         call       gettext_quote.part.1                        ; gettext_quote.part.1
000000000000ecaa         mov        qword [rsp+0xe8+var_80], rax
000000000000ecaf         jmp        loc_e906

                     loc_ecb4:
000000000000ecb4         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_e280+1707
000000000000ecb8         mov        rdi, rcx
000000000000ecbb         call       gettext_quote.part.1                        ; gettext_quote.part.1
000000000000ecc0         mov        qword [rsp+0xe8+var_88], rax
000000000000ecc5         jmp        loc_e931

                     loc_ecca:
000000000000ecca         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_e120+16
000000000000eccf         mov        rbp, r11
000000000000ecd2         mov        eax, edx
000000000000ecd4         mov        byte [rsp+arg_5], bl
000000000000ecd8         jmp        sub_e280+1097
                        ; endp

                     loc_ecdd:
000000000000ecdd         sub        rsp, 0x8                                    ; CODE XREF=sub_e280+98
000000000000ece1         mov        r8d, 0x5
000000000000ece7         mov        rcx, r11
000000000000ecea         push       qword [rsp+0xf0+var_88]
000000000000ecee         push       qword [rsp+0xf8+var_80]
000000000000ecf2         mov        rdi, r14
000000000000ecf5         push       qword [rsp+0x100+var_C8]
000000000000ecf9         mov        r9d, dword [rsp+0x108+var_70]
000000000000ed01         mov        rdx, qword [rsp+0x108+var_D8]
000000000000ed06         mov        rsi, qword [rsp+0x108+var_98]
000000000000ed0b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000ed10         add        rsp, 0x20
000000000000ed14         mov        r15, rax
000000000000ed17         jmp        loc_e719

                     loc_ed1c:
000000000000ed1c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_e280+121
000000000000ed21         jmp        loc_ec3c

                     loc_ed26:
000000000000ed26         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_e280+63
000000000000ed2e         jmp        loc_e6c9

                     loc_ed33:
000000000000ed33         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_e280+1197
                        ; endp

                     loc_ed38:
000000000000ed38         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_e280+2346
000000000000ed3d         jmp        loc_e7b1

                     loc_ed42:
000000000000ed42         mov        rbp, r11                                    ; CODE XREF=sub_e280+2264
000000000000ed45         jmp        sub_e280+1120
                        ; endp

                     loc_ed4a:
000000000000ed4a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_e280+1332
000000000000ed4f         xor        eax, eax
000000000000ed51         xor        r12d, r12d
000000000000ed54         mov        qword [rsp+0xe8+var_98], 0x0
000000000000ed5d         jmp        loc_e304

                     loc_ed62:
000000000000ed62         mov        rdx, r13                                    ; CODE XREF=sub_e280+1264
000000000000ed65         mov        r13, qword [rsp+arg_48]
000000000000ed6a         jmp        loc_e362

                     loc_ed6f:
000000000000ed6f         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
000000000000ed74         align      128                                         ; End of unwind block (FDE at 0x1ae70)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
000000000000ed80         push       r15                                         ; Begin of unwind block (FDE at 0x1aee8), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
000000000000ed82         push       r14
000000000000ed84         movsxd     r15, edi
000000000000ed87         push       r13
000000000000ed89         push       r12
000000000000ed8b         mov        r14, rdx
000000000000ed8e         push       rbp
000000000000ed8f         push       rbx
000000000000ed90         mov        rbp, rcx
000000000000ed93         sub        rsp, 0x28
000000000000ed97         mov        qword [rsp+0x58+var_50], rsi
000000000000ed9c         call       j___errno_location                          ; __errno_location
000000000000eda1         mov        r13, rax
000000000000eda4         mov        eax, dword [rax]
000000000000eda6         test       r15d, r15d
000000000000eda9         mov        rbx, qword [slotvec]                        ; slotvec
000000000000edb0         mov        dword [rsp+0x58+var_40], eax
000000000000edb4         js         loc_ef21

000000000000edba         cmp        dword [nslots], r15d                        ; nslots
000000000000edc1         jg         loc_ee25

000000000000edc3         cmp        r15d, 0x7fffffff
000000000000edca         je         loc_ef26

000000000000edd0         lea        r12d, dword [r15+1]
000000000000edd4         lea        rax, qword [slotvec0]                       ; slotvec0
000000000000eddb         movsxd     rsi, r12d
000000000000edde         shl        rsi, 0x4
000000000000ede2         cmp        rbx, rax
000000000000ede5         je         loc_ef00

000000000000edeb         mov        rdi, rbx
000000000000edee         call       xrealloc                                    ; xrealloc
000000000000edf3         mov        rbx, rax
000000000000edf6         mov        qword [slotvec], rax                        ; slotvec

                     loc_edfd:
000000000000edfd         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
000000000000ee04         mov        edx, r12d
000000000000ee07         xor        esi, esi                                    ; argument "__c" for method j_memset
000000000000ee09         sub        edx, edi
000000000000ee0b         shl        rdi, 0x4
000000000000ee0f         movsxd     rdx, edx
000000000000ee12         add        rdi, rbx                                    ; argument "__s" for method j_memset
000000000000ee15         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
000000000000ee19         call       j_memset                                    ; memset
000000000000ee1e         mov        dword [nslots], r12d                        ; nslots

                     loc_ee25:
000000000000ee25         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
000000000000ee28         shl        r15, 0x4
000000000000ee2c         sub        rsp, 0x8
000000000000ee30         add        rbx, r15
000000000000ee33         lea        r15, qword [rbp+8]
000000000000ee37         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
000000000000ee3b         mov        r11, qword [rbx]
000000000000ee3e         mov        r12, qword [rbx+8]
000000000000ee42         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
000000000000ee45         or         eax, 0x1
000000000000ee48         mov        dword [rsp+0x60+var_3C], eax
000000000000ee4c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000ee4f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
000000000000ee52         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
000000000000ee55         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
000000000000ee57         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
000000000000ee5a         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
000000000000ee5f         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
000000000000ee62         mov        qword [rsp+0x78+var_48], r11
000000000000ee67         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000ee6c         add        rsp, 0x20
000000000000ee70         mov        r11, qword [rsp+0x58+var_48]
000000000000ee75         cmp        r11, rax
000000000000ee78         ja         loc_eee1

000000000000ee7a         lea        rsi, qword [rax+1]
000000000000ee7e         lea        rax, qword [slot0]                          ; slot0
000000000000ee85         cmp        r12, rax
000000000000ee88         mov        qword [rbx], rsi
000000000000ee8b         je         loc_ee9f

000000000000ee8d         mov        rdi, r12
000000000000ee90         mov        qword [rsp+0x58+var_48], rsi
000000000000ee95         call       sub_30d0                                    ; sub_30d0
000000000000ee9a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_ee9f:
000000000000ee9f         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
000000000000eea2         mov        qword [rsp+0x58+var_48], rsi
000000000000eea7         call       xmalloc                                     ; xmalloc
000000000000eeac         sub        rsp, 0x8
000000000000eeb0         mov        qword [rbx+8], rax
000000000000eeb4         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
000000000000eeb8         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000eebb         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
000000000000eebe         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
000000000000eec1         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
000000000000eec3         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
000000000000eec8         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
000000000000eecb         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
000000000000eed0         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
000000000000eed5         mov        r12, rax
000000000000eed8         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000eedd         add        rsp, 0x20

                     loc_eee1:
000000000000eee1         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
000000000000eee5         mov        dword [r13], eax
000000000000eee9         add        rsp, 0x28
000000000000eeed         mov        rax, r12
000000000000eef0         pop        rbx
000000000000eef1         pop        rbp
000000000000eef2         pop        r12
000000000000eef4         pop        r13
000000000000eef6         pop        r14
000000000000eef8         pop        r15
000000000000eefa         ret
                        ; endp
000000000000eefb         align      256

                     loc_ef00:
000000000000ef00         xor        edi, edi                                    ; CODE XREF=quotearg_n_options+101
000000000000ef02         call       xrealloc                                    ; xrealloc
000000000000ef07         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
000000000000ef0f         mov        rbx, rax
000000000000ef12         mov        qword [slotvec], rax                        ; slotvec
000000000000ef19         movups     xmmword [rax], xmm0
000000000000ef1c         jmp        loc_edfd

                     loc_ef21:
000000000000ef21         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_ef26:
000000000000ef26         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_ef2b:
000000000000ef2b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x1aee8)
                     clone_quoting_options:
000000000000ef30         push       r12                                         ; Begin of unwind block (FDE at 0x1af54)
000000000000ef32         push       rbp
000000000000ef33         push       rbx
000000000000ef34         mov        rbx, rdi
000000000000ef37         call       j___errno_location                          ; __errno_location
000000000000ef3c         mov        r12d, dword [rax]
000000000000ef3f         mov        rbp, rax
000000000000ef42         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000ef49         test       rbx, rbx
000000000000ef4c         mov        esi, 0x38
000000000000ef51         cmove      rbx, rax
000000000000ef55         mov        rdi, rbx
000000000000ef58         call       xmemdup                                     ; xmemdup
000000000000ef5d         mov        dword [rbp], r12d
000000000000ef61         pop        rbx
000000000000ef62         pop        rbp
000000000000ef63         pop        r12
000000000000ef65         ret
                        ; endp
000000000000ef66         align      16                                          ; End of unwind block (FDE at 0x1af54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
000000000000ef70         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x1af80), default_quoting_options
000000000000ef77         test       rdi, rdi
000000000000ef7a         cmove      rdi, rax
000000000000ef7e         mov        eax, dword [rdi]
000000000000ef80         ret
                        ; endp
000000000000ef81         align      16                                          ; End of unwind block (FDE at 0x1af80)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
000000000000ef90         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x1af94), default_quoting_options
000000000000ef97         test       rdi, rdi
000000000000ef9a         cmove      rdi, rax
000000000000ef9e         mov        dword [rdi], esi
000000000000efa0         ret
                        ; endp
000000000000efa1         align      16                                          ; End of unwind block (FDE at 0x1af94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
000000000000efb0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x1afa8), default_quoting_options
000000000000efb7         test       rdi, rdi
000000000000efba         mov        ecx, esi
000000000000efbc         cmove      rdi, rax
000000000000efc0         mov        eax, esi
000000000000efc2         and        ecx, 0x1f
000000000000efc5         shr        al, 0x5
000000000000efc8         movzx      eax, al
000000000000efcb         lea        rdi, qword [rdi+rax*4+8]
000000000000efd0         mov        esi, dword [rdi]
000000000000efd2         mov        eax, esi
000000000000efd4         shr        eax, cl
000000000000efd6         xor        edx, eax
000000000000efd8         and        eax, 0x1
000000000000efdb         and        edx, 0x1
000000000000efde         shl        edx, cl
000000000000efe0         xor        edx, esi
000000000000efe2         mov        dword [rdi], edx
000000000000efe4         ret
                        ; endp
000000000000efe5         align      16                                          ; End of unwind block (FDE at 0x1afa8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
000000000000eff0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x1afbc), default_quoting_options
000000000000eff7         test       rdi, rdi
000000000000effa         cmove      rdi, rax
000000000000effe         mov        eax, dword [rdi+4]
000000000000f001         mov        dword [rdi+4], esi
000000000000f004         ret
                        ; endp
000000000000f005         align      16                                          ; End of unwind block (FDE at 0x1afbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
000000000000f010         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x1afd0), default_quoting_options
000000000000f017         test       rdi, rdi
000000000000f01a         cmove      rdi, rax
000000000000f01e         test       rsi, rsi
000000000000f021         mov        dword [rdi], 0xa
000000000000f027         je         loc_f037

000000000000f029         test       rdx, rdx
000000000000f02c         je         loc_f037

000000000000f02e         mov        qword [rdi+0x28], rsi
000000000000f032         mov        qword [rdi+0x30], rdx
000000000000f036         ret
                        ; endp

                     loc_f037:
000000000000f037         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
000000000000f03b         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
000000000000f040         push       r15                                         ; End of unwind block (FDE at 0x1afd0), Begin of unwind block (FDE at 0x1afe4)
000000000000f042         push       r14
000000000000f044         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000f04b         push       r13
000000000000f04d         push       r12
000000000000f04f         mov        r13, rdi
000000000000f052         push       rbp
000000000000f053         push       rbx
000000000000f054         mov        rbx, r8
000000000000f057         mov        r14, rsi
000000000000f05a         mov        r15, rdx
000000000000f05d         sub        rsp, 0x18
000000000000f061         test       r8, r8
000000000000f064         cmove      rbx, rax
000000000000f068         mov        qword [rsp+0x48+var_40], rcx
000000000000f06d         call       j___errno_location                          ; __errno_location
000000000000f072         mov        r12d, dword [rax]
000000000000f075         mov        rbp, rax
000000000000f078         lea        rax, qword [rbx+8]
000000000000f07c         sub        rsp, 0x8
000000000000f080         mov        r9d, dword [rbx+4]
000000000000f084         push       qword [rbx+0x30]
000000000000f087         mov        r8d, dword [rbx]
000000000000f08a         push       qword [rbx+0x28]
000000000000f08d         mov        rdx, r15
000000000000f090         push       rax
000000000000f091         mov        rcx, qword [rsp+0x68+var_40]
000000000000f096         mov        rsi, r14
000000000000f099         mov        rdi, r13
000000000000f09c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000f0a1         mov        dword [rbp], r12d
000000000000f0a5         add        rsp, 0x38
000000000000f0a9         pop        rbx
000000000000f0aa         pop        rbp
000000000000f0ab         pop        r12
000000000000f0ad         pop        r13
000000000000f0af         pop        r14
000000000000f0b1         pop        r15
000000000000f0b3         ret
                        ; endp
000000000000f0b4         align      64                                          ; End of unwind block (FDE at 0x1afe4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
000000000000f0c0         push       r15                                         ; Begin of unwind block (FDE at 0x1b038), CODE XREF=quotearg_alloc+5
000000000000f0c2         push       r14
000000000000f0c4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000f0cb         push       r13
000000000000f0cd         push       r12
000000000000f0cf         mov        r12, rdx
000000000000f0d2         push       rbp
000000000000f0d3         push       rbx
000000000000f0d4         mov        rbx, rcx
000000000000f0d7         mov        r14, rdi
000000000000f0da         mov        r15, rsi
000000000000f0dd         sub        rsp, 0x38
000000000000f0e1         test       rcx, rcx
000000000000f0e4         cmove      rbx, rax
000000000000f0e8         xor        ebp, ebp
000000000000f0ea         call       j___errno_location                          ; __errno_location
000000000000f0ef         test       r12, r12
000000000000f0f2         mov        r13, rax
000000000000f0f5         mov        eax, dword [rax]
000000000000f0f7         sete       bpl
000000000000f0fb         or         ebp, dword [rbx+4]
000000000000f0fe         lea        r10, qword [rbx+8]
000000000000f102         sub        rsp, 0x8
000000000000f106         mov        r8d, dword [rbx]
000000000000f109         mov        rcx, r15
000000000000f10c         mov        dword [rsp+0x70+var_5C], eax
000000000000f110         push       qword [rbx+0x30]
000000000000f113         mov        rdx, r14
000000000000f116         push       qword [rbx+0x28]
000000000000f119         push       r10
000000000000f11b         xor        esi, esi
000000000000f11d         mov        r9d, ebp
000000000000f120         xor        edi, edi
000000000000f122         mov        qword [rsp+0x88+var_48], r10
000000000000f127         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000f12c         lea        rsi, qword [rax+1]
000000000000f130         mov        qword [rsp+0x88+var_40], rax
000000000000f135         add        rsp, 0x20
000000000000f139         mov        rdi, rsi
000000000000f13c         mov        qword [rsp+0x68+var_50], rsi
000000000000f141         call       xmalloc                                     ; xmalloc
000000000000f146         mov        qword [rsp+0x68+var_58], rax
000000000000f14b         sub        rsp, 0x8
000000000000f14f         push       qword [rbx+0x30]
000000000000f152         push       qword [rbx+0x28]
000000000000f155         mov        r10, qword [rsp+0x80+var_48]
000000000000f15a         mov        r9d, ebp
000000000000f15d         mov        r8d, dword [rbx]
000000000000f160         mov        rcx, r15
000000000000f163         mov        rdx, r14
000000000000f166         mov        rdi, rax
000000000000f169         push       r10
000000000000f16b         mov        rsi, qword [rsp+0x88+var_50]
000000000000f170         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000f175         mov        eax, dword [rsp+0x88+var_5C]
000000000000f179         add        rsp, 0x20
000000000000f17d         test       r12, r12
000000000000f180         mov        dword [r13], eax
000000000000f184         je         loc_f18f

000000000000f186         mov        r11, qword [rsp+0x68+var_40]
000000000000f18b         mov        qword [r12], r11

                     loc_f18f:
000000000000f18f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
000000000000f194         add        rsp, 0x38
000000000000f198         pop        rbx
000000000000f199         pop        rbp
000000000000f19a         pop        r12
000000000000f19c         pop        r13
000000000000f19e         pop        r14
000000000000f1a0         pop        r15
000000000000f1a2         ret
                        ; endp
000000000000f1a3         align      16                                          ; End of unwind block (FDE at 0x1b038)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
000000000000f1b0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x1b0a4)
000000000000f1b3         xor        edx, edx
000000000000f1b5         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
000000000000f1ba         align      64                                          ; End of unwind block (FDE at 0x1b0a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
000000000000f1c0         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x1b0b8), nslots
000000000000f1c6         push       r12
000000000000f1c8         mov        r12, qword [slotvec]                        ; slotvec
000000000000f1cf         push       rbp
000000000000f1d0         push       rbx
000000000000f1d1         cmp        eax, 0x1
000000000000f1d4         jle        loc_f201

000000000000f1d6         sub        eax, 0x2
000000000000f1d9         lea        rbx, qword [r12+0x18]
000000000000f1de         shl        rax, 0x4
000000000000f1e2         lea        rbp, qword [r12+rax+0x28]
000000000000f1e7         nop        word [rax+rax]

                     loc_f1f0:
000000000000f1f0         mov        rdi, qword [rbx]                            ; CODE XREF=quotearg_free+63
000000000000f1f3         add        rbx, 0x10
000000000000f1f7         call       sub_30d0                                    ; sub_30d0
000000000000f1fc         cmp        rbx, rbp
000000000000f1ff         jne        loc_f1f0

                     loc_f201:
000000000000f201         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
000000000000f206         lea        rbx, qword [slot0]                          ; slot0
000000000000f20d         cmp        rdi, rbx
000000000000f210         je         loc_f229

000000000000f212         call       sub_30d0                                    ; sub_30d0
000000000000f217         mov        qword [slotvec0], 0x100                     ; slotvec0
000000000000f222         mov        qword [slotvec0+8], rbx                     ; 0x21d0b8

                     loc_f229:
000000000000f229         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
000000000000f230         cmp        r12, rbx
000000000000f233         je         loc_f244

000000000000f235         mov        rdi, r12
000000000000f238         call       sub_30d0                                    ; sub_30d0
000000000000f23d         mov        qword [slotvec], rbx                        ; slotvec

                     loc_f244:
000000000000f244         pop        rbx                                         ; CODE XREF=quotearg_free+115
000000000000f245         mov        dword [nslots], 0x1                         ; nslots
000000000000f24f         pop        rbp
000000000000f250         pop        r12
000000000000f252         ret
                        ; endp
000000000000f253         align      32                                          ; End of unwind block (FDE at 0x1b0b8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
000000000000f260         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x1b0e4), default_quoting_options
000000000000f267         mov        rdx, 0xffffffffffffffff
000000000000f26e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000f273         align      128                                         ; End of unwind block (FDE at 0x1b0e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
000000000000f280         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x1b0f8), default_quoting_options
000000000000f287         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000f28c         align      16                                          ; End of unwind block (FDE at 0x1b0f8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
000000000000f290         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x1b10c), default_quoting_options
000000000000f297         mov        rsi, rdi
000000000000f29a         mov        rdx, 0xffffffffffffffff
000000000000f2a1         xor        edi, edi
000000000000f2a3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000f2a8         align      16                                          ; End of unwind block (FDE at 0x1b10c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
000000000000f2b0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x1b120), default_quoting_options
000000000000f2b7         mov        rdx, rsi
000000000000f2ba         mov        rsi, rdi
000000000000f2bd         xor        edi, edi
000000000000f2bf         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000f2c4         align      16                                          ; End of unwind block (FDE at 0x1b120)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
000000000000f2d0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x1b134), CODE XREF=emit_verbose+23, emit_verbose+41, create_hard_link+181, create_hard_link+199, set_file_security_ctx+46, copy_internal+1022, copy_internal+1044, copy_internal+3909, copy_internal+3931, copy_internal+4074, copy_internal+4096
000000000000f2d4         mov        rax, rdx
000000000000f2d7         mov        rdx, qword [fs:0x28]
000000000000f2e0         mov        qword [rsp+0x48+var_10], rdx
000000000000f2e5         xor        edx, edx
000000000000f2e7         cmp        esi, 0xa
000000000000f2ea         je         loc_f354

000000000000f2ec         mov        dword [rsp+0x48+var_48], esi
000000000000f2ef         mov        rcx, rsp
000000000000f2f2         mov        rdx, 0xffffffffffffffff
000000000000f2f9         mov        rsi, rax
000000000000f2fc         mov        qword [rsp+0x48+var_44], 0x0
000000000000f305         mov        qword [rsp+0x48+var_3C], 0x0
000000000000f30e         mov        qword [rsp+0x48+var_34], 0x0
000000000000f317         mov        qword [rsp+0x48+var_2C], 0x0
000000000000f320         mov        qword [rsp+0x48+var_24], 0x0
000000000000f329         mov        qword [rsp+0x48+var_1C], 0x0
000000000000f332         mov        dword [rsp+0x48+var_14], 0x0
000000000000f33a         call       quotearg_n_options                          ; quotearg_n_options
000000000000f33f         mov        rcx, qword [rsp+0x48+var_10]
000000000000f344         xor        rcx, qword [fs:0x28]
000000000000f34d         jne        loc_f359

000000000000f34f         add        rsp, 0x48
000000000000f353         ret
                        ; endp

                     loc_f354:
000000000000f354         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_f359:
000000000000f359         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
000000000000f35e         align      32                                          ; End of unwind block (FDE at 0x1b134)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
000000000000f360         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x1b150), CODE XREF=quotearg_style_mem+10
000000000000f364         mov        rax, rdx
000000000000f367         mov        rdx, rcx
000000000000f36a         mov        rcx, qword [fs:0x28]
000000000000f373         mov        qword [rsp+0x48+var_10], rcx
000000000000f378         xor        ecx, ecx
000000000000f37a         cmp        esi, 0xa
000000000000f37d         je         loc_f3e0

000000000000f37f         mov        dword [rsp+0x48+var_48], esi
000000000000f382         mov        rcx, rsp
000000000000f385         mov        rsi, rax
000000000000f388         mov        qword [rsp+0x48+var_44], 0x0
000000000000f391         mov        qword [rsp+0x48+var_3C], 0x0
000000000000f39a         mov        qword [rsp+0x48+var_34], 0x0
000000000000f3a3         mov        qword [rsp+0x48+var_2C], 0x0
000000000000f3ac         mov        qword [rsp+0x48+var_24], 0x0
000000000000f3b5         mov        qword [rsp+0x48+var_1C], 0x0
000000000000f3be         mov        dword [rsp+0x48+var_14], 0x0
000000000000f3c6         call       quotearg_n_options                          ; quotearg_n_options
000000000000f3cb         mov        rdx, qword [rsp+0x48+var_10]
000000000000f3d0         xor        rdx, qword [fs:0x28]
000000000000f3d9         jne        loc_f3e5

000000000000f3db         add        rsp, 0x48
000000000000f3df         ret
                        ; endp

                     loc_f3e0:
000000000000f3e0         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_f3e5:
000000000000f3e5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
000000000000f3ea         align      16                                          ; End of unwind block (FDE at 0x1b150)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
000000000000f3f0         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x1b16c), CODE XREF=main+2186, main+2740, main+2796, main+2852, main+3001, main+3094, main+3259, mkancesdirs_safe_wd+94, mkancesdirs_safe_wd+342, mkancesdirs_safe_wd+407, announce_mkdir.part.9+9
000000000000f3f3         mov        esi, edi
000000000000f3f5         xor        edi, edi
000000000000f3f7         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
000000000000f3fc         align      1024                                        ; End of unwind block (FDE at 0x1b16c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
000000000000f400         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x1b180)
000000000000f403         mov        rdx, rsi
000000000000f406         mov        esi, edi
000000000000f408         xor        edi, edi
000000000000f40a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
000000000000f40f         align      16                                          ; End of unwind block (FDE at 0x1b180)

                     quotearg_char_mem:
000000000000f410         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x1b194), CODE XREF=quotearg_char+11
000000000000f414         mov        ecx, edx
000000000000f416         mov        rax, qword [fs:0x28]
000000000000f41f         mov        qword [rsp+0x48+var_10], rax
000000000000f424         xor        eax, eax
000000000000f426         mov        rax, qword [qword_21f710]                   ; qword_21f710
000000000000f42d         mov        r8, rsp
000000000000f430         and        ecx, 0x1f
000000000000f433         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
000000000000f43b         mov        qword [rsp+0x48+var_18], rax
000000000000f440         mov        eax, edx
000000000000f442         movaps     xmmword [rsp+0x48+var_48], xmm0
000000000000f446         shr        al, 0x5
000000000000f449         movzx      eax, al
000000000000f44c         lea        r9, qword [r8+rax*4+8]
000000000000f451         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x21f6f0
000000000000f459         movaps     xmmword [rsp+0x48+var_38], xmm0
000000000000f45e         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x21f700
000000000000f466         movaps     xmmword [rsp+0x48+var_28], xmm0
000000000000f46b         mov        edx, dword [r9]
000000000000f46e         mov        eax, edx
000000000000f470         shr        eax, cl
000000000000f472         not        eax
000000000000f474         and        eax, 0x1
000000000000f477         shl        eax, cl
000000000000f479         mov        rcx, r8
000000000000f47c         xor        eax, edx
000000000000f47e         mov        rdx, rsi
000000000000f481         mov        rsi, rdi
000000000000f484         mov        dword [r9], eax
000000000000f487         xor        edi, edi
000000000000f489         call       quotearg_n_options                          ; quotearg_n_options
000000000000f48e         mov        rsi, qword [rsp+0x48+var_10]
000000000000f493         xor        rsi, qword [fs:0x28]
000000000000f49c         jne        loc_f4a3

000000000000f49e         add        rsp, 0x48
000000000000f4a2         ret
                        ; endp

                     loc_f4a3:
000000000000f4a3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
000000000000f4a8         align      16                                          ; End of unwind block (FDE at 0x1b194)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
000000000000f4b0         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x1b1b0)
000000000000f4b4         mov        rsi, 0xffffffffffffffff
000000000000f4bb         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
000000000000f4c0         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x1b1b0), Begin of unwind block (FDE at 0x1b1c4), CODE XREF=close_stdin+133, close_stdout+101
000000000000f4c5         mov        rsi, 0xffffffffffffffff
000000000000f4cc         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
000000000000f4d1         align      32                                          ; End of unwind block (FDE at 0x1b1c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
000000000000f4e0         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x1b1d8)
000000000000f4e5         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
000000000000f4ea         align      16                                          ; End of unwind block (FDE at 0x1b1d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
000000000000f4f0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x1b1ec), CODE XREF=copy_internal+8762, copy_internal+9597, copy_internal+9619, copy_internal+16111, copy_internal+16190
000000000000f4f4         mov        rax, rdx
000000000000f4f7         mov        rdx, qword [fs:0x28]
000000000000f500         mov        qword [rsp+0x48+var_10], rdx
000000000000f505         xor        edx, edx
000000000000f507         cmp        esi, 0xa
000000000000f50a         je         loc_f574

000000000000f50c         mov        dword [rsp+0x48+var_48], esi
000000000000f50f         mov        rcx, rsp
000000000000f512         mov        rdx, 0xffffffffffffffff
000000000000f519         mov        rsi, rax
000000000000f51c         mov        qword [rsp+0x48+var_44], 0x0
000000000000f525         mov        qword [rsp+0x48+var_3C], 0x4000000
000000000000f52e         mov        qword [rsp+0x48+var_34], 0x0
000000000000f537         mov        qword [rsp+0x48+var_2C], 0x0
000000000000f540         mov        qword [rsp+0x48+var_24], 0x0
000000000000f549         mov        qword [rsp+0x48+var_1C], 0x0
000000000000f552         mov        dword [rsp+0x48+var_14], 0x0
000000000000f55a         call       quotearg_n_options                          ; quotearg_n_options
000000000000f55f         mov        rcx, qword [rsp+0x48+var_10]
000000000000f564         xor        rcx, qword [fs:0x28]
000000000000f56d         jne        loc_f579

000000000000f56f         add        rsp, 0x48
000000000000f573         ret
                        ; endp

                     loc_f574:
000000000000f574         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_f579:
000000000000f579         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
000000000000f57e         align      128                                         ; End of unwind block (FDE at 0x1b1ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom_mem:
000000000000f580         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x1b208), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
000000000000f584         mov        r9, rcx
000000000000f587         mov        rcx, qword [qword_21f710]                   ; qword_21f710
000000000000f58e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
000000000000f596         mov        rax, qword [fs:0x28]
000000000000f59f         mov        qword [rsp+0x48+var_10], rax
000000000000f5a4         xor        eax, eax
000000000000f5a6         movaps     xmmword [rsp+0x48+var_48], xmm0
000000000000f5aa         test       rsi, rsi
000000000000f5ad         mov        qword [rsp+0x48+var_18], rcx
000000000000f5b2         mov        dword [rsp+0x48+var_48], 0xa
000000000000f5b9         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x21f6f0
000000000000f5c1         movaps     xmmword [rsp+0x48+var_38], xmm0
000000000000f5c6         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x21f700
000000000000f5ce         movaps     xmmword [rsp+0x48+var_28], xmm0
000000000000f5d3         je         loc_f607

000000000000f5d5         test       rdx, rdx
000000000000f5d8         je         loc_f607

000000000000f5da         mov        qword [rsp+0x48+var_20], rsi
000000000000f5df         mov        qword [rsp+0x48+var_18], rdx
000000000000f5e4         mov        rcx, rsp
000000000000f5e7         mov        rdx, r8
000000000000f5ea         mov        rsi, r9
000000000000f5ed         call       quotearg_n_options                          ; quotearg_n_options
000000000000f5f2         mov        rdi, qword [rsp+0x48+var_10]
000000000000f5f7         xor        rdi, qword [fs:0x28]
000000000000f600         jne        loc_f60c

000000000000f602         add        rsp, 0x48
000000000000f606         ret
                        ; endp

                     loc_f607:
000000000000f607         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_f60c:
000000000000f60c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
000000000000f611         align      32                                          ; End of unwind block (FDE at 0x1b208)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_custom:
000000000000f620         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x1b224)
000000000000f627         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
000000000000f62c         align      16                                          ; End of unwind block (FDE at 0x1b224)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
000000000000f630         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x1b238)
000000000000f633         mov        r8, 0xffffffffffffffff
000000000000f63a         mov        rdx, rsi
000000000000f63d         mov        rsi, rdi
000000000000f640         xor        edi, edi
000000000000f642         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
000000000000f647         align      16                                          ; End of unwind block (FDE at 0x1b238)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
000000000000f650         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x1b24c)
000000000000f653         mov        rcx, rdx
000000000000f656         mov        rdx, rsi
000000000000f659         mov        rsi, rdi
000000000000f65c         xor        edi, edi
000000000000f65e         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
000000000000f663         align      16                                          ; End of unwind block (FDE at 0x1b24c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
000000000000f670         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x1b260), quote_quoting_options
000000000000f677         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000f67c         align      128                                         ; End of unwind block (FDE at 0x1b260)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
000000000000f680         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x1b274), quote_quoting_options
000000000000f687         mov        rdx, rsi
000000000000f68a         mov        rsi, rdi
000000000000f68d         xor        edi, edi
000000000000f68f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000f694         align      32                                          ; End of unwind block (FDE at 0x1b274)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
000000000000f6a0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x1b288), quote_quoting_options, CODE XREF=argmatch_invalid+46
000000000000f6a7         mov        rdx, 0xffffffffffffffff
000000000000f6ae         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000f6b3         align      64                                          ; End of unwind block (FDE at 0x1b288)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
000000000000f6c0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x1b29c), quote_quoting_options, CODE XREF=main+1961, main+2530, main+2631, main+3198, copy_acl+30, copy_acl+99, set_acl+21, make_dir_parents+330, make_dir_parents+417, make_dir_parents+778, argmatch_valid+90
000000000000f6c7         mov        rsi, rdi
000000000000f6ca         mov        rdx, 0xffffffffffffffff
000000000000f6d1         xor        edi, edi
000000000000f6d3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000f6d8         align      32                                          ; End of unwind block (FDE at 0x1b29c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_C0: int32_t, -192
        ;    var_D8: int8_t, -216
        ;    var_150: int32_t, -336
        ;    var_168: int8_t, -360
        ;    var_170: int64_t, -368
        ;    var_174: int32_t, -372


                     renameatu:
000000000000f6e0         push       r15                                         ; Begin of unwind block (FDE at 0x1b2b4), CODE XREF=copy_internal+819, backupfile_internal+847
000000000000f6e2         push       r14
000000000000f6e4         mov        r9d, r8d
000000000000f6e7         push       r13
000000000000f6e9         push       r12
000000000000f6eb         mov        r14d, edx
000000000000f6ee         push       rbp
000000000000f6ef         push       rbx
000000000000f6f0         mov        r12, rsi
000000000000f6f3         mov        r13, rcx
000000000000f6f6         mov        ebp, r8d
000000000000f6f9         mov        r8, rcx
000000000000f6fc         sub        rsp, 0x148
000000000000f703         mov        ecx, edx
000000000000f705         mov        rdx, rsi
000000000000f708         mov        rax, qword [fs:0x28]
000000000000f711         mov        qword [rsp+0x178+var_40], rax
000000000000f719         xor        eax, eax
000000000000f71b         mov        esi, edi
000000000000f71d         mov        dword [rsp+0x178+var_174], edi
000000000000f721         mov        edi, 0x13c                                  ; argument "__sysno" for method j_syscall
000000000000f726         call       j_syscall                                   ; syscall
000000000000f72b         mov        rbx, rax
000000000000f72e         mov        r15d, eax
000000000000f731         call       j___errno_location                          ; __errno_location
000000000000f736         test       ebx, ebx
000000000000f738         js         loc_f770

                     loc_f73a:
000000000000f73a         mov        rdx, qword [rsp+0x178+var_40]               ; CODE XREF=renameatu+166, renameatu+248, renameatu+274, renameatu+363, renameatu+431, renameatu+453, renameatu+608
000000000000f742         xor        rdx, qword [fs:0x28]
000000000000f74b         mov        eax, r15d
000000000000f74e         jne        loc_f945

000000000000f754         add        rsp, 0x148
000000000000f75b         pop        rbx
000000000000f75c         pop        rbp
000000000000f75d         pop        r12
000000000000f75f         pop        r13
000000000000f761         pop        r14
000000000000f763         pop        r15
000000000000f765         ret
                        ; endp
000000000000f766         align      16

                     loc_f770:
000000000000f770         mov        r9, rax                                     ; CODE XREF=renameatu+88
000000000000f773         mov        eax, dword [rax]
000000000000f775         lea        ecx, dword [rax-0x16]
000000000000f778         and        ecx, 0xffffffef
000000000000f77b         setne      bl
000000000000f77e         cmp        eax, 0x5f
000000000000f781         setne      al
000000000000f784         and        bl, al
000000000000f786         jne        loc_f73a

000000000000f788         test       ebp, ebp
000000000000f78a         jne        loc_f7e0

                     loc_f78c:
000000000000f78c         mov        rdi, r12                                    ; argument "__s" for method j_strlen, CODE XREF=renameatu+541
000000000000f78f         mov        qword [rsp+0x178+var_170], r9
000000000000f794         call       j_strlen                                    ; strlen
000000000000f799         mov        rdi, r13                                    ; argument "__s" for method j_strlen
000000000000f79c         mov        rbp, rax
000000000000f79f         call       j_strlen                                    ; strlen
000000000000f7a4         test       rbp, rbp
000000000000f7a7         je         loc_f7c3

000000000000f7a9         test       rax, rax
000000000000f7ac         mov        r9, qword [rsp+0x178+var_170]
000000000000f7b1         je         loc_f7c3

000000000000f7b3         cmp        byte [r12+rbp-1], 0x2f
000000000000f7b9         je         loc_f800

000000000000f7bb         cmp        byte [r13+rax-1], 0x2f
000000000000f7c1         je         loc_f800

                     loc_f7c3:
000000000000f7c3         mov        edi, dword [rsp+0x178+var_174]              ; argument "__oldfd" for method j_renameat, CODE XREF=renameatu+199, renameatu+209, renameatu+348, renameatu+524, renameatu+591
000000000000f7c7         mov        rcx, r13                                    ; argument "__new" for method j_renameat
000000000000f7ca         mov        edx, r14d                                   ; argument "__newfd" for method j_renameat
000000000000f7cd         mov        rsi, r12                                    ; argument "__old" for method j_renameat
000000000000f7d0         call       j_renameat                                  ; renameat
000000000000f7d5         mov        r15d, eax
000000000000f7d8         jmp        loc_f73a
000000000000f7dd         align      32

                     loc_f7e0:
000000000000f7e0         and        ebp, 0xfffffffe                             ; CODE XREF=renameatu+170
000000000000f7e3         je         loc_f850

000000000000f7e5         mov        dword [r9], 0x5f
000000000000f7ec         mov        r15d, 0xffffffff
000000000000f7f2         jmp        loc_f73a
000000000000f7f7         align      2048

                     loc_f800:
000000000000f800         mov        esi, dword [rsp+0x178+var_174]              ; argument "__fildes" for method j___fxstatat, CODE XREF=renameatu+217, renameatu+225
000000000000f804         lea        rcx, qword [rsp+0x178+var_168]              ; argument "__stat_buf" for method j___fxstatat
000000000000f809         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
000000000000f80f         mov        rdx, r12                                    ; argument "__filename" for method j___fxstatat
000000000000f812         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
000000000000f817         mov        qword [rsp+0x178+var_170], r9
000000000000f81c         call       j___fxstatat                                ; __fxstatat
000000000000f821         test       eax, eax
000000000000f823         jne        loc_f889

000000000000f825         test       bl, bl
000000000000f827         mov        r9, qword [rsp+0x178+var_170]
000000000000f82c         je         loc_f8aa

000000000000f82e         mov        eax, dword [rsp+0x178+var_150]
000000000000f832         and        eax, 0xf000
000000000000f837         cmp        eax, 0x4000
000000000000f83c         je         loc_f7c3

000000000000f83e         mov        dword [r9], 0x2
000000000000f845         mov        r15d, 0xffffffff
000000000000f84b         jmp        loc_f73a

                     loc_f850:
000000000000f850         lea        rcx, qword [rsp+0x178+var_D8]               ; argument "__stat_buf" for method j___fxstatat, CODE XREF=renameatu+259
000000000000f858         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
000000000000f85e         mov        rdx, r13                                    ; argument "__filename" for method j___fxstatat
000000000000f861         mov        esi, r14d                                   ; argument "__fildes" for method j___fxstatat
000000000000f864         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
000000000000f869         mov        qword [rsp+0x178+var_170], r9
000000000000f86e         call       j___fxstatat                                ; __fxstatat
000000000000f873         test       eax, eax
000000000000f875         mov        r9, qword [rsp+0x178+var_170]
000000000000f87a         je         loc_f898

000000000000f87c         mov        eax, dword [r9]
000000000000f87f         cmp        eax, 0x4b
000000000000f882         je         loc_f898

000000000000f884         cmp        eax, 0x2
000000000000f887         je         loc_f8f8

                     loc_f889:
000000000000f889         mov        r15d, 0xffffffff                            ; CODE XREF=renameatu+323, renameatu+506, renameatu+522, renameatu+572
000000000000f88f         jmp        loc_f73a
000000000000f894         align      8

                     loc_f898:
000000000000f898         mov        dword [r9], 0x11                            ; CODE XREF=renameatu+410, renameatu+418
000000000000f89f         mov        r15d, 0xffffffff
000000000000f8a5         jmp        loc_f73a

                     loc_f8aa:
000000000000f8aa         lea        rcx, qword [rsp+0x178+var_D8]               ; argument "__stat_buf" for method j___fxstatat, CODE XREF=renameatu+332
000000000000f8b2         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
000000000000f8b8         mov        rdx, r13                                    ; argument "__filename" for method j___fxstatat
000000000000f8bb         mov        esi, r14d                                   ; argument "__fildes" for method j___fxstatat
000000000000f8be         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
000000000000f8c3         mov        qword [rsp+0x178+var_170], r9
000000000000f8c8         call       j___fxstatat                                ; __fxstatat
000000000000f8cd         test       eax, eax
000000000000f8cf         mov        r9, qword [rsp+0x178+var_170]
000000000000f8d4         je         loc_f902

000000000000f8d6         cmp        dword [r9], 0x2
000000000000f8da         jne        loc_f889

000000000000f8dc         mov        eax, dword [rsp+0x178+var_150]
000000000000f8e0         and        eax, 0xf000
000000000000f8e5         cmp        eax, 0x4000
000000000000f8ea         jne        loc_f889

000000000000f8ec         jmp        loc_f7c3
000000000000f8f1         align      8

                     loc_f8f8:
000000000000f8f8         mov        ebx, 0x1                                    ; CODE XREF=renameatu+423
000000000000f8fd         jmp        loc_f78c

                     loc_f902:
000000000000f902         mov        eax, dword [rsp+0x178+var_C0]               ; CODE XREF=renameatu+500
000000000000f909         and        eax, 0xf000
000000000000f90e         cmp        eax, 0x4000
000000000000f913         je         loc_f921

000000000000f915         mov        dword [r9], 0x14
000000000000f91c         jmp        loc_f889

                     loc_f921:
000000000000f921         mov        eax, dword [rsp+0x178+var_150]              ; CODE XREF=renameatu+563
000000000000f925         and        eax, 0xf000
000000000000f92a         cmp        eax, 0x4000
000000000000f92f         je         loc_f7c3

000000000000f935         mov        dword [r9], 0x15
000000000000f93c         or         r15d, 0xffffffff
000000000000f940         jmp        loc_f73a

                     loc_f945:
000000000000f945         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=renameatu+110
                        ; endp
000000000000f94a         align      16                                          ; End of unwind block (FDE at 0x1b2b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     safe_read:
000000000000f950         push       r13                                         ; Begin of unwind block (FDE at 0x1b304), CODE XREF=full_read+57
000000000000f952         push       r12
000000000000f954         mov        r13d, edi
000000000000f957         push       rbp
000000000000f958         push       rbx
000000000000f959         mov        r12, rsi
000000000000f95c         mov        rbx, rdx
000000000000f95f         sub        rsp, 0x8
000000000000f963         nop        dword [rax+rax]

                     loc_f968:
000000000000f968         mov        rdx, rbx                                    ; argument "__nbytes" for method j_read, CODE XREF=safe_read+56, safe_read+77
000000000000f96b         mov        rsi, r12                                    ; argument "__buf" for method j_read
000000000000f96e         mov        edi, r13d                                   ; argument "__fd" for method j_read
000000000000f971         call       j_read                                      ; read
000000000000f976         test       rax, rax
000000000000f979         mov        rbp, rax
000000000000f97c         jns        loc_f9a0

000000000000f97e         call       j___errno_location                          ; __errno_location
000000000000f983         mov        eax, dword [rax]
000000000000f985         cmp        eax, 0x4
000000000000f988         je         loc_f968

000000000000f98a         cmp        rbx, 0x7ff00000
000000000000f991         jbe        loc_f9a0

000000000000f993         cmp        eax, 0x16
000000000000f996         jne        loc_f9a0

000000000000f998         mov        ebx, 0x7ff00000
000000000000f99d         jmp        loc_f968
000000000000f99f         align      32

                     loc_f9a0:
000000000000f9a0         add        rsp, 0x8                                    ; CODE XREF=safe_read+44, safe_read+65, safe_read+70
000000000000f9a4         mov        rax, rbp
000000000000f9a7         pop        rbx
000000000000f9a8         pop        rbp
000000000000f9a9         pop        r12
000000000000f9ab         pop        r13
000000000000f9ad         ret
                        ; endp
000000000000f9ae         align      16                                          ; End of unwind block (FDE at 0x1b304)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     safe_write:
000000000000f9b0         push       r13                                         ; Begin of unwind block (FDE at 0x1b33c), CODE XREF=full_write+57
000000000000f9b2         push       r12
000000000000f9b4         mov        r13d, edi
000000000000f9b7         push       rbp
000000000000f9b8         push       rbx
000000000000f9b9         mov        r12, rsi
000000000000f9bc         mov        rbx, rdx
000000000000f9bf         sub        rsp, 0x8
000000000000f9c3         nop        dword [rax+rax]

                     loc_f9c8:
000000000000f9c8         mov        rdx, rbx                                    ; argument "__n" for method j_write, CODE XREF=safe_write+56, safe_write+77
000000000000f9cb         mov        rsi, r12                                    ; argument "__buf" for method j_write
000000000000f9ce         mov        edi, r13d                                   ; argument "__fd" for method j_write
000000000000f9d1         call       j_write                                     ; write
000000000000f9d6         test       rax, rax
000000000000f9d9         mov        rbp, rax
000000000000f9dc         jns        loc_fa00

000000000000f9de         call       j___errno_location                          ; __errno_location
000000000000f9e3         mov        eax, dword [rax]
000000000000f9e5         cmp        eax, 0x4
000000000000f9e8         je         loc_f9c8

000000000000f9ea         cmp        eax, 0x16
000000000000f9ed         jne        loc_fa00

000000000000f9ef         cmp        rbx, 0x7ff00000
000000000000f9f6         jbe        loc_fa00

000000000000f9f8         mov        ebx, 0x7ff00000
000000000000f9fd         jmp        loc_f9c8
000000000000f9ff         align      512

                     loc_fa00:
000000000000fa00         add        rsp, 0x8                                    ; CODE XREF=safe_write+44, safe_write+61, safe_write+70
000000000000fa04         mov        rax, rbp
000000000000fa07         pop        rbx
000000000000fa08         pop        rbp
000000000000fa09         pop        r12
000000000000fa0b         pop        r13
000000000000fa0d         ret
                        ; endp
000000000000fa0e         align      16                                          ; End of unwind block (FDE at 0x1b33c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_150: int64_t, -336
        ;    var_158: int64_t, -344


                     same_nameat.part.0:
000000000000fa10         push       r13                                         ; Begin of unwind block (FDE at 0x1b374), CODE XREF=same_nameat+141
000000000000fa12         push       r12
000000000000fa14         mov        r13d, edi
000000000000fa17         push       rbp
000000000000fa18         push       rbx
000000000000fa19         mov        rdi, rsi
000000000000fa1c         mov        ebp, edx
000000000000fa1e         mov        r12, rcx
000000000000fa21         sub        rsp, 0x138
000000000000fa28         mov        rax, qword [fs:0x28]
000000000000fa31         mov        qword [rsp+0x158+var_30], rax
000000000000fa39         xor        eax, eax
000000000000fa3b         call       dir_name                                    ; dir_name
000000000000fa40         mov        rcx, rsp                                    ; argument "__stat_buf" for method j___fxstatat
000000000000fa43         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
000000000000fa49         mov        rdx, rax                                    ; argument "__filename" for method j___fxstatat
000000000000fa4c         mov        esi, r13d                                   ; argument "__fildes" for method j___fxstatat
000000000000fa4f         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
000000000000fa54         mov        rbx, rax
000000000000fa57         call       j___fxstatat                                ; __fxstatat
000000000000fa5c         test       eax, eax
000000000000fa5e         jne        loc_fb10

                     loc_fa64:
000000000000fa64         mov        rdi, rbx                                    ; CODE XREF=same_nameat.part.0+285
000000000000fa67         call       sub_30d0                                    ; sub_30d0
000000000000fa6c         mov        rdi, r12
000000000000fa6f         call       dir_name                                    ; dir_name
000000000000fa74         lea        rcx, qword [rsp+0x158+var_C8]               ; argument "__stat_buf" for method j___fxstatat
000000000000fa7c         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
000000000000fa82         mov        rdx, rax                                    ; argument "__filename" for method j___fxstatat
000000000000fa85         mov        esi, ebp                                    ; argument "__fildes" for method j___fxstatat
000000000000fa87         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
000000000000fa8c         mov        rbx, rax
000000000000fa8f         call       j___fxstatat                                ; __fxstatat
000000000000fa94         test       eax, eax
000000000000fa96         jne        loc_fae8

                     loc_fa98:
000000000000fa98         xor        ebp, ebp                                    ; CODE XREF=same_nameat.part.0+245
000000000000fa9a         mov        rax, qword [rsp+0x158+var_C0]
000000000000faa2         cmp        qword [rsp+0x158+var_150], rax
000000000000faa7         jne        loc_fab9

000000000000faa9         mov        rax, qword [rsp+0x158+var_C8]
000000000000fab1         cmp        qword [rsp+0x158+var_158], rax
000000000000fab5         sete       bpl

                     loc_fab9:
000000000000fab9         mov        rdi, rbx                                    ; CODE XREF=same_nameat.part.0+151
000000000000fabc         call       sub_30d0                                    ; sub_30d0
000000000000fac1         mov        rdx, qword [rsp+0x158+var_30]
000000000000fac9         xor        rdx, qword [fs:0x28]
000000000000fad2         mov        eax, ebp
000000000000fad4         jne        loc_fb32

000000000000fad6         add        rsp, 0x138
000000000000fadd         pop        rbx
000000000000fade         pop        rbp
000000000000fadf         pop        r12
000000000000fae1         pop        r13
000000000000fae3         ret
                        ; endp
000000000000fae4         align      8

                     loc_fae8:
000000000000fae8         call       j___errno_location                          ; __errno_location, CODE XREF=same_nameat.part.0+134
000000000000faed         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000faef         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x18e60
000000000000faf6         mov        rcx, rbx
000000000000faf9         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000fafe         xor        eax, eax
000000000000fb00         call       j_error                                     ; error
000000000000fb05         jmp        loc_fa98
000000000000fb07         align      16

                     loc_fb10:
000000000000fb10         call       j___errno_location                          ; __errno_location, CODE XREF=same_nameat.part.0+78
000000000000fb15         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000fb17         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x18e60
000000000000fb1e         mov        rcx, rbx
000000000000fb21         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000fb26         xor        eax, eax
000000000000fb28         call       j_error                                     ; error
000000000000fb2d         jmp        loc_fa64

                     loc_fb32:
000000000000fb32         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=same_nameat.part.0+196
                        ; endp
000000000000fb37         align      64                                          ; End of unwind block (FDE at 0x1b374)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60


                     same_nameat:
000000000000fb40         push       r15                                         ; Begin of unwind block (FDE at 0x1b3b0), CODE XREF=same_name+13
000000000000fb42         push       r14
000000000000fb44         mov        r15d, edx
000000000000fb47         push       r13
000000000000fb49         push       r12
000000000000fb4b         push       rbp
000000000000fb4c         push       rbx
000000000000fb4d         mov        rbp, rcx
000000000000fb50         mov        rbx, rsi
000000000000fb53         sub        rsp, 0x18
000000000000fb57         mov        dword [rsp+0x48+var_3C], edi
000000000000fb5b         mov        rdi, rsi
000000000000fb5e         call       last_component                              ; last_component
000000000000fb63         mov        rdi, rbp
000000000000fb66         mov        r12, rax
000000000000fb69         call       last_component                              ; last_component
000000000000fb6e         mov        rdi, r12
000000000000fb71         mov        r13, rax
000000000000fb74         call       base_len                                    ; base_len
000000000000fb79         mov        rdi, r13
000000000000fb7c         mov        r14, rax
000000000000fb7f         call       base_len                                    ; base_len
000000000000fb84         cmp        r14, rax
000000000000fb87         je         loc_fba0

                     loc_fb89:
000000000000fb89         add        rsp, 0x18                                   ; CODE XREF=same_nameat+112
000000000000fb8d         xor        eax, eax
000000000000fb8f         pop        rbx
000000000000fb90         pop        rbp
000000000000fb91         pop        r12
000000000000fb93         pop        r13
000000000000fb95         pop        r14
000000000000fb97         pop        r15
000000000000fb99         ret
                        ; endp
000000000000fb9a         align      32

                     loc_fba0:
000000000000fba0         mov        rdx, r14                                    ; argument "__n" for method j_memcmp, CODE XREF=same_nameat+71
000000000000fba3         mov        rsi, r13                                    ; argument "__s2" for method j_memcmp
000000000000fba6         mov        rdi, r12                                    ; argument "__s1" for method j_memcmp
000000000000fba9         call       j_memcmp                                    ; memcmp
000000000000fbae         test       eax, eax
000000000000fbb0         jne        loc_fb89

000000000000fbb2         mov        edi, dword [rsp+0x48+var_3C]
000000000000fbb6         add        rsp, 0x18
000000000000fbba         mov        rcx, rbp
000000000000fbbd         mov        edx, r15d
000000000000fbc0         mov        rsi, rbx
000000000000fbc3         pop        rbx
000000000000fbc4         pop        rbp
000000000000fbc5         pop        r12
000000000000fbc7         pop        r13
000000000000fbc9         pop        r14
000000000000fbcb         pop        r15
000000000000fbcd         jmp        same_nameat.part.0                          ; same_nameat.part.0
                        ; endp
000000000000fbd2         align      32                                          ; End of unwind block (FDE at 0x1b3b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     same_name:
000000000000fbe0         mov        edx, 0xffffff9c                             ; Begin of unwind block (FDE at 0x1b410), CODE XREF=copy_internal+4249, copy_internal+5975, copy_internal+8174, copy_internal+8844, copy_internal+9838, copy_internal+10862, triple_compare+36
000000000000fbe5         mov        rcx, rsi
000000000000fbe8         mov        rsi, rdi
000000000000fbeb         mov        edi, edx
000000000000fbed         jmp        same_nameat                                 ; same_nameat
                        ; endp
000000000000fbf2         align      1024                                        ; End of unwind block (FDE at 0x1b410)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     direntry_cmp_inode:
000000000000fc00         mov        rax, qword [rsi+8]                          ; Begin of unwind block (FDE at 0x1b424)
000000000000fc04         cmp        qword [rdi+8], rax
000000000000fc08         jb         loc_fc18

000000000000fc0a         seta       al
000000000000fc0d         movzx      eax, al
000000000000fc10         ret
                        ; endp
000000000000fc11         align      8

                     loc_fc18:
000000000000fc18         mov        eax, 0xffffffff                             ; CODE XREF=direntry_cmp_inode+8
000000000000fc1d         ret
                        ; endp
000000000000fc1e         align      32                                          ; End of unwind block (FDE at 0x1b424)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     direntry_cmp_name:
000000000000fc20         mov        rsi, qword [rsi]                            ; Begin of unwind block (FDE at 0x1b438), argument "__s2" for method j_strcmp
000000000000fc23         mov        rdi, qword [rdi]                            ; argument "__s1" for method j_strcmp
000000000000fc26         jmp        j_strcmp                                    ; strcmp
                        ; endp
000000000000fc2b         align      16                                          ; End of unwind block (FDE at 0x1b438)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112


                     streamsavedir:
000000000000fc30         push       r15                                         ; Begin of unwind block (FDE at 0x1b44c), CODE XREF=savedir+24
000000000000fc32         lea        rax, qword [comparison_function_table]      ; comparison_function_table
000000000000fc39         push       r14
000000000000fc3b         push       r13
000000000000fc3d         push       r12
000000000000fc3f         mov        esi, esi
000000000000fc41         push       rbp
000000000000fc42         push       rbx
000000000000fc43         sub        rsp, 0x48
000000000000fc47         mov        rax, qword [rax+rsi*8]
000000000000fc4b         test       rdi, rdi
000000000000fc4e         mov        qword [rsp+0x78+var_70], rax
000000000000fc53         je         loc_ff5d

000000000000fc59         mov        rbx, rdi
000000000000fc5c         xor        r14d, r14d
000000000000fc5f         xor        r12d, r12d
000000000000fc62         call       j___errno_location                          ; __errno_location
000000000000fc67         xor        r13d, r13d
000000000000fc6a         mov        rbp, rax
000000000000fc6d         mov        qword [rsp+0x78+var_50], 0x0
000000000000fc76         mov        qword [rsp+0x78+var_68], 0x0
000000000000fc7f         mov        qword [rsp+0x78+var_58], 0x0
000000000000fc88         jmp        loc_fc94
000000000000fc8a         align      16

                     loc_fc90:
000000000000fc90         test       al, al                                      ; CODE XREF=streamsavedir+137, streamsavedir+276
000000000000fc92         jne        loc_fcc9

                     loc_fc94:
000000000000fc94         mov        dword [rbp], 0x0                            ; CODE XREF=streamsavedir+88, streamsavedir+151, streamsavedir+262, streamsavedir+636
000000000000fc9b         mov        rdi, rbx                                    ; argument "__dirp" for method j_readdir
000000000000fc9e         call       j_readdir                                   ; readdir
000000000000fca3         test       rax, rax
000000000000fca6         mov        rcx, rax
000000000000fca9         je         loc_fd50

000000000000fcaf         lea        r15, qword [rax+0x13]
000000000000fcb3         movzx      eax, byte [rax+0x13]
000000000000fcb7         cmp        al, 0x2e
000000000000fcb9         jne        loc_fc90

000000000000fcbb         cmp        byte [rcx+0x14], 0x2e
000000000000fcbf         je         loc_fd40

000000000000fcc1         movzx      eax, byte [rcx+0x14]
000000000000fcc5         test       al, al
000000000000fcc7         je         loc_fc94

                     loc_fcc9:
000000000000fcc9         mov        rdi, r15                                    ; argument "__s" for method j_strlen, CODE XREF=streamsavedir+98
000000000000fccc         mov        qword [rsp+0x78+var_48], rcx
000000000000fcd1         call       j_strlen                                    ; strlen
000000000000fcd6         add        rax, 0x1
000000000000fcda         cmp        qword [rsp+0x78+var_70], 0x0
000000000000fce0         mov        qword [rsp+0x78+var_60], rax
000000000000fce5         je         loc_fe28

000000000000fceb         cmp        r12, qword [rsp+0x78+var_50]
000000000000fcf0         lea        rax, qword [r12+1]
000000000000fcf5         mov        rcx, qword [rsp+0x78+var_48]
000000000000fcfa         mov        qword [rsp+0x78+var_40], rax
000000000000fcff         je         loc_feb1

                     loc_fd05:
000000000000fd05         shl        r12, 0x4                                    ; CODE XREF=streamsavedir+718
000000000000fd09         mov        rdi, r15
000000000000fd0c         add        r12, qword [rsp+0x78+var_68]
000000000000fd11         mov        qword [rsp+0x78+var_48], rcx
000000000000fd16         call       xstrdup                                     ; xstrdup
000000000000fd1b         mov        rcx, qword [rsp+0x78+var_48]
000000000000fd20         add        r14, qword [rsp+0x78+var_60]
000000000000fd25         mov        qword [r12], rax
000000000000fd29         mov        rax, qword [rcx]
000000000000fd2c         mov        qword [r12+8], rax
000000000000fd31         mov        r12, qword [rsp+0x78+var_40]
000000000000fd36         jmp        loc_fc94
000000000000fd3b         align      64

                     loc_fd40:
000000000000fd40         movzx      eax, byte [rcx+0x15]                        ; CODE XREF=streamsavedir+143
000000000000fd44         jmp        loc_fc90
000000000000fd49         align      16

                     loc_fd50:
000000000000fd50         mov        ebx, dword [rbp]                            ; CODE XREF=streamsavedir+121
000000000000fd53         test       ebx, ebx
000000000000fd55         jne        loc_ff40

000000000000fd5b         cmp        qword [rsp+0x78+var_70], 0x0
000000000000fd61         je         loc_fe10

000000000000fd67         test       r12, r12
000000000000fd6a         lea        rbx, qword [r14+1]
000000000000fd6e         jne        loc_fda0

000000000000fd70         mov        rdi, rbx                                    ; argument #1 for method xmalloc
000000000000fd73         call       xmalloc                                     ; xmalloc
000000000000fd78         mov        r13, rax
000000000000fd7b         mov        rbx, rax

                     loc_fd7e:
000000000000fd7e         mov        rdi, qword [rsp+0x78+var_68]                ; CODE XREF=streamsavedir+470
000000000000fd83         call       sub_30d0                                    ; sub_30d0

                     loc_fd88:
000000000000fd88         mov        byte [rbx], 0x0                             ; CODE XREF=streamsavedir+496, streamsavedir+746

                     loc_fd8b:
000000000000fd8b         add        rsp, 0x48                                   ; CODE XREF=sub_ff3e+26, sub_ff3e+34
000000000000fd8f         mov        rax, r13
000000000000fd92         pop        rbx
000000000000fd93         pop        rbp
000000000000fd94         pop        r12
000000000000fd96         pop        r13
000000000000fd98         pop        r14
000000000000fd9a         pop        r15
000000000000fd9c         ret
                        ; endp
000000000000fd9d         align      32

                     loc_fda0:
000000000000fda0         mov        r15, qword [rsp+0x78+var_68]                ; CODE XREF=streamsavedir+318
000000000000fda5         mov        rcx, qword [rsp+0x78+var_70]                ; argument "__compar" for method j_qsort
000000000000fdaa         mov        rsi, r12                                    ; argument "__nmemb" for method j_qsort
000000000000fdad         mov        edx, 0x10                                   ; argument "__size" for method j_qsort
000000000000fdb2         shl        r12, 0x4
000000000000fdb6         mov        rdi, r15                                    ; argument "__base" for method j_qsort
000000000000fdb9         mov        rbp, r15
000000000000fdbc         add        r12, r15
000000000000fdbf         call       j_qsort                                     ; qsort
000000000000fdc4         mov        rdi, rbx                                    ; argument #1 for method xmalloc
000000000000fdc7         xor        ebx, ebx
000000000000fdc9         call       xmalloc                                     ; xmalloc
000000000000fdce         mov        r13, rax
000000000000fdd1         nop        dword [rax]

                     loc_fdd8:
000000000000fdd8         mov        rsi, qword [rbp]                            ; argument "__src" for method j_stpcpy, CODE XREF=streamsavedir+465
000000000000fddc         lea        r14, qword [r13+rbx]
000000000000fde1         add        rbp, 0x10
000000000000fde5         mov        rdi, r14                                    ; argument "__dest" for method j_stpcpy
000000000000fde8         call       j_stpcpy                                    ; stpcpy
000000000000fded         mov        rdi, qword [rbp-0x10]
000000000000fdf1         sub        rax, r14
000000000000fdf4         lea        rbx, qword [rbx+rax+1]
000000000000fdf9         call       sub_30d0                                    ; sub_30d0
000000000000fdfe         cmp        r12, rbp
000000000000fe01         jne        loc_fdd8

000000000000fe03         add        rbx, r13
000000000000fe06         jmp        loc_fd7e
000000000000fe0b         align      16

                     loc_fe10:
000000000000fe10         cmp        qword [rsp+0x78+var_58], r14                ; CODE XREF=streamsavedir+305
000000000000fe15         je         loc_ff03

000000000000fe1b         lea        rbx, qword [r13+r14]
000000000000fe20         jmp        loc_fd88
000000000000fe25         align      8

                     loc_fe28:
000000000000fe28         mov        rsi, qword [rsp+0x78+var_60]                ; CODE XREF=streamsavedir+181
000000000000fe2d         mov        rax, qword [rsp+0x78+var_58]
000000000000fe32         mov        rdx, rsi
000000000000fe35         sub        rax, r14
000000000000fe38         add        rdx, r14
000000000000fe3b         mov        qword [rsp+0x78+var_48], rdx
000000000000fe40         setb       dl
000000000000fe43         cmp        rax, rsi
000000000000fe46         movzx      edx, dl
000000000000fe49         ja         loc_fe95

000000000000fe4b         test       rdx, rdx
000000000000fe4e         jne        loc_ff39

000000000000fe54         test       r13, r13
000000000000fe57         mov        rdx, qword [rsp+0x78+var_48]
000000000000fe5c         je         loc_ff1f

000000000000fe62         movabs     rax, 0x5555555555555553
000000000000fe6c         cmp        rdx, rax
000000000000fe6f         ja         loc_ff39

000000000000fe75         mov        rax, rdx
000000000000fe78         shr        rax, 0x1
000000000000fe7b         lea        rax, qword [rdx+rax+1]
000000000000fe80         mov        qword [rsp+0x78+var_58], rax

                     loc_fe85:
000000000000fe85         mov        rsi, qword [rsp+0x78+var_58]                ; CODE XREF=streamsavedir+771
000000000000fe8a         mov        rdi, r13
000000000000fe8d         call       xrealloc                                    ; xrealloc
000000000000fe92         mov        r13, rax

                     loc_fe95:
000000000000fe95         mov        rdx, qword [rsp+0x78+var_60]                ; argument "__n" for method j_memcpy, CODE XREF=streamsavedir+537
000000000000fe9a         lea        rdi, qword [r13+r14]                        ; argument "__dest" for method j_memcpy
000000000000fe9f         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
000000000000fea2         call       j_memcpy                                    ; memcpy
000000000000fea7         mov        r14, qword [rsp+0x78+var_48]
000000000000feac         jmp        loc_fc94

                     loc_feb1:
000000000000feb1         cmp        qword [rsp+0x78+var_68], 0x0                ; CODE XREF=streamsavedir+207
000000000000feb7         je         loc_ff65

000000000000febd         movabs     rax, 0x555555555555554
000000000000fec7         cmp        r12, rax
000000000000feca         ja         loc_ff39

000000000000fecc         mov        rax, r12
000000000000fecf         shr        rax, 0x1
000000000000fed2         add        rax, qword [rsp+0x78+var_40]
000000000000fed7         mov        qword [rsp+0x78+var_50], rax

                     loc_fedc:
000000000000fedc         mov        rsi, qword [rsp+0x78+var_50]                ; CODE XREF=sub_ff3e+94
000000000000fee1         mov        rdi, qword [rsp+0x78+var_68]
000000000000fee6         mov        qword [rsp+0x78+var_48], rcx
000000000000feeb         shl        rsi, 0x4
000000000000feef         call       xrealloc                                    ; xrealloc
000000000000fef4         mov        rcx, qword [rsp+0x78+var_48]
000000000000fef9         mov        qword [rsp+0x78+var_68], rax
000000000000fefe         jmp        loc_fd05

                     loc_ff03:
000000000000ff03         mov        rbx, qword [rsp+0x78+var_58]                ; CODE XREF=streamsavedir+485
000000000000ff08         mov        rdi, r13
000000000000ff0b         lea        rsi, qword [rbx+1]
000000000000ff0f         call       xrealloc                                    ; xrealloc
000000000000ff14         mov        r13, rax
000000000000ff17         add        rbx, rax
000000000000ff1a         jmp        loc_fd88

                     loc_ff1f:
000000000000ff1f         test       rdx, rdx                                    ; CODE XREF=streamsavedir+556
000000000000ff22         mov        eax, 0x80
000000000000ff27         cmovne     rax, rdx
000000000000ff2b         test       rax, rax
000000000000ff2e         mov        qword [rsp+0x78+var_58], rax
000000000000ff33         jns        loc_fe85

                     loc_ff39:
000000000000ff39         call       xalloc_die                                  ; xalloc_die, CODE XREF=streamsavedir+542, streamsavedir+575, streamsavedir+666, sub_ff3e+77, sub_ff3e+82
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_ff3e:
000000000000ff3e         nop
                        ; endp

                     loc_ff40:
000000000000ff40         mov        rdi, qword [rsp+0x78+var_68]                ; CODE XREF=streamsavedir+293
000000000000ff45         call       sub_30d0                                    ; sub_30d0
000000000000ff4a         mov        rdi, r13
000000000000ff4d         xor        r13d, r13d
000000000000ff50         call       sub_30d0                                    ; sub_30d0
000000000000ff55         mov        dword [rbp], ebx
000000000000ff58         jmp        loc_fd8b

                     loc_ff5d:
000000000000ff5d         xor        r13d, r13d                                  ; CODE XREF=streamsavedir+35
000000000000ff60         jmp        loc_fd8b

                     loc_ff65:
000000000000ff65         test       r12, r12                                    ; CODE XREF=streamsavedir+647
000000000000ff68         mov        eax, 0x8
000000000000ff6d         mov        edx, 0x10
000000000000ff72         cmovne     rax, r12
000000000000ff76         xor        esi, esi
000000000000ff78         mov        rdi, rax
000000000000ff7b         mov        qword [rsp+0x78+var_50], rax
000000000000ff80         mov        rax, rdx
000000000000ff83         mul        rdi
000000000000ff86         jo         loc_ffa1

                     loc_ff88:
000000000000ff88         test       rax, rax                                    ; CODE XREF=sub_ff3e+104
000000000000ff8b         js         loc_ff39

000000000000ff8d         test       rsi, rsi
000000000000ff90         jne        loc_ff39

000000000000ff92         lea        rax, qword [r12+1]
000000000000ff97         mov        qword [rsp+0x78+var_40], rax
000000000000ff9c         jmp        loc_fedc

                     loc_ffa1:
000000000000ffa1         mov        esi, 0x1                                    ; CODE XREF=sub_ff3e+72
000000000000ffa6         jmp        loc_ff88
000000000000ffa8         align      16                                          ; End of unwind block (FDE at 0x1b44c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     savedir:
000000000000ffb0         push       r12                                         ; Begin of unwind block (FDE at 0x1b49c), CODE XREF=copy_internal+7591
000000000000ffb2         push       rbp
000000000000ffb3         mov        ebp, esi
000000000000ffb5         push       rbx
000000000000ffb6         call       opendir_safer                               ; opendir_safer
000000000000ffbb         test       rax, rax
000000000000ffbe         je         loc_ffe8

000000000000ffc0         mov        esi, ebp
000000000000ffc2         mov        rbx, rax
000000000000ffc5         mov        rdi, rax
000000000000ffc8         call       streamsavedir                               ; streamsavedir
000000000000ffcd         mov        rdi, rbx                                    ; argument "__dirp" for method j_closedir
000000000000ffd0         mov        rbp, rax
000000000000ffd3         call       j_closedir                                  ; closedir
000000000000ffd8         test       eax, eax
000000000000ffda         jne        loc_fff0

                     loc_ffdc:
000000000000ffdc         mov        rax, rbp                                    ; CODE XREF=savedir+58, savedir+88
000000000000ffdf         pop        rbx
000000000000ffe0         pop        rbp
000000000000ffe1         pop        r12
000000000000ffe3         ret
                        ; endp
000000000000ffe4         align      8

                     loc_ffe8:
000000000000ffe8         xor        ebp, ebp                                    ; CODE XREF=savedir+14
000000000000ffea         jmp        loc_ffdc
000000000000ffec         align      16

                     loc_fff0:
000000000000fff0         call       j___errno_location                          ; __errno_location, CODE XREF=savedir+42
000000000000fff5         mov        r12d, dword [rax]
000000000000fff8         mov        rbx, rax
000000000000fffb         mov        rdi, rbp
000000000000fffe         call       sub_30d0                                    ; sub_30d0
0000000000010003         xor        ebp, ebp
0000000000010005         mov        dword [rbx], r12d
0000000000010008         jmp        loc_ffdc
000000000001000a         align      16                                          ; End of unwind block (FDE at 0x1b49c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     savewd_init:
0000000000010010         mov        dword [rdi], 0x0                            ; Begin of unwind block (FDE at 0x1b4cc)
0000000000010016         ret
                        ; endp
0000000000010017         align      32                                          ; End of unwind block (FDE at 0x1b4cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     savewd_errno:
0000000000010020         xor        eax, eax                                    ; Begin of unwind block (FDE at 0x1b4e0)
0000000000010022         cmp        dword [rdi], 0x4
0000000000010025         je         loc_10030

0000000000010027         ret
                        ; endp
0000000000010029         align      16

                     loc_10030:
0000000000010030         mov        eax, dword [rdi+4]                          ; CODE XREF=savewd_errno+5
0000000000010033         ret
                        ; endp
0000000000010034         align      64                                          ; End of unwind block (FDE at 0x1b4e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     savewd_chdir:
0000000000010040         test       rcx, rcx                                    ; Begin of unwind block (FDE at 0x1b4f4), CODE XREF=mkancesdirs+169, make_dir_parents+653
0000000000010043         push       r14
0000000000010045         mov        r14d, edx
0000000000010048         push       r13
000000000001004a         mov        r13, rsi
000000000001004d         push       r12
000000000001004f         mov        r12, rdi
0000000000010052         push       rbp
0000000000010053         mov        rbp, rcx
0000000000010056         push       rbx
0000000000010057         je         loc_10178

000000000001005d         mov        esi, edx
000000000001005f         mov        rdi, r13
0000000000010062         shl        esi, 0x11
0000000000010065         and        esi, 0x20000
000000000001006b         or         esi, 0x10900
0000000000010071         call       j___open_2                                  ; __open_2
0000000000010076         mov        dword [rbp], eax
0000000000010079         mov        ebx, eax
000000000001007b         call       j___errno_location                          ; __errno_location
0000000000010080         mov        eax, dword [rax]
0000000000010082         mov        dword [rbp+4], eax

                     loc_10085:
0000000000010085         test       ebx, ebx                                    ; CODE XREF=savewd_chdir+353
0000000000010087         js         loc_100c8

0000000000010089         and        r14d, 0x2
000000000001008d         je         loc_100d6

                     loc_1008f:
000000000001008f         test       rbp, rbp                                    ; case 5, CODE XREF=savewd_chdir+275, savewd_chdir+424, savewd_chdir+439
0000000000010092         sete       al
0000000000010095         xor        r14d, r14d

                     loc_10098:
0000000000010098         test       ebx, ebx                                    ; CODE XREF=savewd_chdir+374, savewd_chdir+567
000000000001009a         js         loc_100b6

000000000001009c         test       al, al
000000000001009e         je         loc_100b6

00000000000100a0         call       j___errno_location                          ; __errno_location
00000000000100a5         mov        r12d, dword [rax]
00000000000100a8         mov        rbp, rax
00000000000100ab         mov        edi, ebx                                    ; argument "__fd" for method j_close
00000000000100ad         call       j_close                                     ; close
00000000000100b2         mov        dword [rbp], r12d

                     loc_100b6:
00000000000100b6         pop        rbx                                         ; CODE XREF=savewd_chdir+90, savewd_chdir+94, savewd_chdir+614
00000000000100b7         mov        eax, r14d
00000000000100ba         pop        rbp
00000000000100bb         pop        r12
00000000000100bd         pop        r13
00000000000100bf         pop        r14
00000000000100c1         ret
                        ; endp
00000000000100c2         align      8

                     loc_100c8:
00000000000100c8         call       j___errno_location                          ; __errno_location, CODE XREF=savewd_chdir+71
00000000000100cd         cmp        dword [rax], 0xd
00000000000100d0         jne        loc_102a0

                     loc_100d6:
00000000000100d6         mov        ecx, dword [r12]                            ; CODE XREF=savewd_chdir+77, savewd_chdir+320
00000000000100da         cmp        ecx, 0x5
00000000000100dd         ja         loc_102ca

00000000000100e3         mov        eax, 0x1
00000000000100e8         shl        rax, cl
00000000000100eb         test       al, 0x36
00000000000100ed         jne        loc_10124

00000000000100ef         test       al, 0x8
00000000000100f1         jne        loc_101c0

00000000000100f7         test       ecx, ecx
00000000000100f9         jne        loc_102ca

00000000000100ff         lea        rdi, qword [aCannotAccessS+17]              ; 0x17e63
0000000000010106         xor        esi, esi
0000000000010108         xor        eax, eax
000000000001010a         call       open_safer                                  ; open_safer
000000000001010f         test       eax, eax
0000000000010111         js         loc_10220

0000000000010117         mov        dword [r12], 0x1
000000000001011f         mov        dword [r12+4], eax

                     loc_10124:
0000000000010124         test       ebx, ebx                                    ; CODE XREF=savewd_chdir+173, savewd_chdir+510, savewd_chdir+550, savewd_chdir+593
0000000000010126         js         loc_10158

                     loc_10128:
0000000000010128         mov        edi, ebx                                    ; argument "__fd" for method j_fchdir, CODE XREF=savewd_chdir+399
000000000001012a         call       j_fchdir                                    ; fchdir
000000000001012f         test       eax, eax
0000000000010131         mov        r14d, eax
0000000000010134         jne        loc_101b0

                     loc_10136:
0000000000010136         cmp        dword [r12], 0x5                            ; CODE XREF=savewd_chdir+293
000000000001013b         ja         loc_102ab

0000000000010141         mov        eax, dword [r12]
0000000000010145         lea        rdx, qword [switch_table_18850]             ; switch_table_18850
000000000001014c         movsxd     rax, dword [rdx+rax*4]
0000000000010150         add        rax, rdx
0000000000010153         jmp        rax                                         ; switch statement using table at 0x18850, with 6 cases, 0x1008f,0x101e0,0x101f0,0x102ab
0000000000010155         align      8

                     loc_10158:
0000000000010158         mov        rdi, r13                                    ; argument "__path" for method j_chdir, CODE XREF=savewd_chdir+230, savewd_chdir+405
000000000001015b         call       j_chdir                                     ; chdir
0000000000010160         test       eax, eax
0000000000010162         mov        r14d, eax
0000000000010165         je         loc_10136

0000000000010167         pop        rbx
0000000000010168         mov        eax, r14d
000000000001016b         pop        rbp
000000000001016c         pop        r12
000000000001016e         pop        r13
0000000000010170         pop        r14
0000000000010172         ret
                        ; endp
0000000000010173         align      8

                     loc_10178:
0000000000010178         test       dl, 0x1                                     ; CODE XREF=savewd_chdir+23
000000000001017b         mov        ebx, 0xffffffff
0000000000010180         je         loc_100d6

0000000000010186         mov        esi, edx
0000000000010188         mov        rdi, r13
000000000001018b         shl        esi, 0x11
000000000001018e         and        esi, 0x20000
0000000000010194         or         esi, 0x10900
000000000001019a         call       j___open_2                                  ; __open_2
000000000001019f         mov        ebx, eax
00000000000101a1         jmp        loc_10085
00000000000101a6         align      16

                     loc_101b0:
00000000000101b0         test       rbp, rbp                                    ; CODE XREF=savewd_chdir+244
00000000000101b3         sete       al
00000000000101b6         jmp        loc_10098
00000000000101bb         align      64

                     loc_101c0:
00000000000101c0         mov        edx, dword [r12+4]                          ; CODE XREF=savewd_chdir+177
00000000000101c5         test       edx, edx
00000000000101c7         js         loc_10259

00000000000101cd         test       ebx, ebx
00000000000101cf         jns        loc_10128

00000000000101d5         jmp        loc_10158
00000000000101d7         align      32

                     loc_101e0:
00000000000101e0         mov        dword [r12], 0x2                            ; case 1, CODE XREF=savewd_chdir+275
00000000000101e8         jmp        loc_1008f
00000000000101ed         align      16

                     loc_101f0:
00000000000101f0         mov        eax, dword [r12+4]                          ; case 3, CODE XREF=savewd_chdir+275
00000000000101f5         test       eax, eax
00000000000101f7         je         loc_1008f

00000000000101fd         lea        rcx, qword [__PRETTY_FUNCTION__.4461]       ; argument "__function" for method j___assert_fail, "savewd_chdir"
0000000000010204         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/savewd.c"
000000000001020b         lea        rdi, qword [aWdvalchild0]                   ; argument "__assertion" for method j___assert_fail, "wd->val.child == 0"
0000000000010212         mov        edx, 0x9b                                   ; argument "__line" for method j___assert_fail
0000000000010217         call       j___assert_fail                             ; __assert_fail
                        ; endp
000000000001021c         align      32

                     loc_10220:
0000000000010220         call       j___errno_location                          ; __errno_location, CODE XREF=savewd_chdir+209
0000000000010225         mov        eax, dword [rax]
0000000000010227         cmp        eax, 0xd
000000000001022a         je         loc_10248

000000000001022c         cmp        eax, 0x74
000000000001022f         je         loc_10248

0000000000010231         mov        dword [r12], 0x4
0000000000010239         mov        dword [r12+4], eax
000000000001023e         jmp        loc_10124
0000000000010243         align      8

                     loc_10248:
0000000000010248         mov        dword [r12], 0x3                            ; CODE XREF=savewd_chdir+490, savewd_chdir+495
0000000000010250         mov        dword [r12+4], 0xffffffff

                     loc_10259:
0000000000010259         call       j_fork                                      ; fork, CODE XREF=savewd_chdir+391
000000000001025e         cmp        eax, 0x0
0000000000010261         mov        dword [r12+4], eax
0000000000010266         je         loc_10124

000000000001026c         mov        eax, 0x1
0000000000010271         mov        r14d, 0xfffffffe
0000000000010277         jg         loc_10098

000000000001027d         mov        dword [r12], 0x4
0000000000010285         call       j___errno_location                          ; __errno_location
000000000001028a         mov        eax, dword [rax]
000000000001028c         mov        dword [r12+4], eax
0000000000010291         jmp        loc_10124
0000000000010296         align      32

                     loc_102a0:
00000000000102a0         mov        r14d, 0xffffffff                            ; CODE XREF=savewd_chdir+144
00000000000102a6         jmp        loc_100b6

                     loc_102ab:
00000000000102ab         lea        rcx, qword [__PRETTY_FUNCTION__.4461]       ; case 0, argument "__function" for method j___assert_fail, "savewd_chdir", CODE XREF=savewd_chdir+251, savewd_chdir+275
00000000000102b2         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/savewd.c"
00000000000102b9         lea        rdi, qword [aWdvalchild0_18817+16]          ; argument "__assertion" for method j___assert_fail, 0x18827
00000000000102c0         mov        edx, 0x9f                                   ; argument "__line" for method j___assert_fail
00000000000102c5         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_102ca:
00000000000102ca         lea        rcx, qword [__PRETTY_FUNCTION__.4446]       ; argument "__function" for method j___assert_fail, "savewd_save", CODE XREF=savewd_chdir+157, savewd_chdir+185
00000000000102d1         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/savewd.c"
00000000000102d8         lea        rdi, qword [aWdvalchild0_18817+16]          ; argument "__assertion" for method j___assert_fail, 0x18827
00000000000102df         mov        edx, 0x63                                   ; argument "__line" for method j___assert_fail
00000000000102e4         call       j___assert_fail                             ; __assert_fail
                        ; endp
00000000000102e9         align      16                                          ; End of unwind block (FDE at 0x1b4f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_24: int32_t, -36


                     savewd_restore:
00000000000102f0         push       r12                                         ; Begin of unwind block (FDE at 0x1b544), CODE XREF=mkancesdirs_safe_wd+154, mkancesdirs_safe_wd+287, savewd_process_files+345
00000000000102f2         push       rbp
00000000000102f3         push       rbx
00000000000102f4         sub        rsp, 0x10
00000000000102f8         mov        rax, qword [fs:0x28]
0000000000010301         mov        qword [rsp+0x28+var_20], rax
0000000000010306         xor        eax, eax
0000000000010308         cmp        dword [rdi], 0x4
000000000001030b         ja         loc_1041d

0000000000010311         mov        eax, dword [rdi]
0000000000010313         lea        rdx, qword [switch_table_18868]             ; switch_table_18868
000000000001031a         mov        rbx, rdi
000000000001031d         movsxd     rax, dword [rdx+rax*4]
0000000000010321         add        rax, rdx
0000000000010324         jmp        rax                                         ; switch statement using table at 0x18868, with 5 cases, 0x10330,0x10343,0x10368,0x103c0
0000000000010326         align      16

                     loc_10330:
0000000000010330         mov        ebp, dword [rdi+4]                          ; case 3, CODE XREF=savewd_restore+52
0000000000010333         cmp        ebp, 0x0
0000000000010336         je         loc_1043c

000000000001033c         lea        r12, qword [rsp+0x28+var_24]
0000000000010341         jg         loc_1038a

                     loc_10343:
0000000000010343         xor        eax, eax                                    ; case 1, CODE XREF=savewd_restore+52

                     loc_10345:
0000000000010345         mov        rcx, qword [rsp+0x28+var_20]                ; CODE XREF=savewd_restore+141, savewd_restore+200, savewd_restore+226
000000000001034a         xor        rcx, qword [fs:0x28]
0000000000010353         jne        loc_10418

0000000000010359         add        rsp, 0x10
000000000001035d         pop        rbx
000000000001035e         pop        rbp
000000000001035f         pop        r12
0000000000010361         ret
                        ; endp
0000000000010362         align      8

                     loc_10368:
0000000000010368         mov        r12d, dword [rdi+4]                         ; case 4, CODE XREF=savewd_restore+52
000000000001036c         call       j___errno_location                          ; __errno_location
0000000000010371         mov        rbp, rax

                     loc_10374:
0000000000010374         mov        dword [rbp], r12d                           ; CODE XREF=savewd_restore+260
0000000000010378         mov        eax, 0xffffffff
000000000001037d         jmp        loc_10345
000000000001037f         align      128

                     loc_10380:
0000000000010380         call       j___errno_location                          ; __errno_location, CODE XREF=savewd_restore+168
0000000000010385         cmp        dword [rax], 0x4
0000000000010388         jne        loc_103f9

                     loc_1038a:
000000000001038a         xor        edx, edx                                    ; argument "__options" for method j_waitpid, CODE XREF=savewd_restore+81
000000000001038c         mov        rsi, r12                                    ; argument "__stat_loc" for method j_waitpid
000000000001038f         mov        edi, ebp                                    ; argument "__pid" for method j_waitpid
0000000000010391         call       j_waitpid                                   ; waitpid
0000000000010396         test       eax, eax
0000000000010398         js         loc_10380

000000000001039a         mov        eax, dword [rsp+0x28+var_24]
000000000001039e         mov        dword [rbx+4], 0xffffffff
00000000000103a5         mov        edi, eax
00000000000103a7         and        edi, 0x7f
00000000000103aa         je         loc_103b5

00000000000103ac         call       j_raise                                     ; raise
00000000000103b1         mov        eax, dword [rsp+0x28+var_24]

                     loc_103b5:
00000000000103b5         movzx      eax, ah                                     ; CODE XREF=savewd_restore+186
00000000000103b8         jmp        loc_10345
00000000000103ba         align      64

                     loc_103c0:
00000000000103c0         mov        edi, dword [rdi+4]                          ; case 2, argument "__fd" for method j_fchdir, CODE XREF=savewd_restore+52
00000000000103c3         call       j_fchdir                                    ; fchdir
00000000000103c8         test       eax, eax
00000000000103ca         jne        loc_103d7

00000000000103cc         mov        dword [rbx], 0x1
00000000000103d2         jmp        loc_10345

                     loc_103d7:
00000000000103d7         call       j___errno_location                          ; __errno_location, CODE XREF=savewd_restore+218
00000000000103dc         mov        edi, dword [rbx+4]                          ; argument "__fd" for method j_close
00000000000103df         mov        r12d, dword [rax]
00000000000103e2         mov        rbp, rax
00000000000103e5         call       j_close                                     ; close
00000000000103ea         mov        dword [rbx], 0x4
00000000000103f0         mov        dword [rbx+4], r12d
00000000000103f4         jmp        loc_10374

                     loc_103f9:
00000000000103f9         lea        rcx, qword [__PRETTY_FUNCTION__.4477]       ; argument "__function" for method j___assert_fail, "savewd_restore", CODE XREF=savewd_restore+152
0000000000010400         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/savewd.c"
0000000000010407         lea        rdi, qword [aErrnolocation4]                ; argument "__assertion" for method j___assert_fail, "(*__errno_location ()) == 4"
000000000001040e         mov        edx, 0xd8                                   ; argument "__line" for method j___assert_fail
0000000000010413         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_10418:
0000000000010418         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=savewd_restore+99
                        ; endp

                     loc_1041d:
000000000001041d         lea        rcx, qword [__PRETTY_FUNCTION__.4477]       ; argument "__function" for method j___assert_fail, "savewd_restore", CODE XREF=savewd_restore+27
0000000000010424         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/savewd.c"
000000000001042b         lea        rdi, qword [aWdvalchild0_18817+16]          ; argument "__assertion" for method j___assert_fail, 0x18827
0000000000010432         mov        edx, 0xe2                                   ; argument "__line" for method j___assert_fail
0000000000010437         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_1043c:
000000000001043c         mov        edi, esi                                    ; argument "__status" for method j__exit, CODE XREF=savewd_restore+70
000000000001043e         call       j__exit                                     ; _exit
                        ; endp
0000000000010443         align      16                                          ; End of unwind block (FDE at 0x1b544)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     savewd_finish:
0000000000010450         push       rbx                                         ; Begin of unwind block (FDE at 0x1b578), CODE XREF=mkancesdirs_safe_wd+162, mkancesdirs_safe_wd+238, mkancesdirs_safe_wd+306, savewd_process_files+144
0000000000010451         cmp        dword [rdi], 0x4
0000000000010454         ja         loc_104a6

0000000000010456         mov        eax, dword [rdi]
0000000000010458         lea        rdx, qword [switch_table_1887c]             ; switch_table_1887c
000000000001045f         mov        rbx, rdi
0000000000010462         movsxd     rax, dword [rdx+rax*4]
0000000000010466         add        rax, rdx
0000000000010469         jmp        rax                                         ; switch statement using table at 0x1887c, with 5 cases, 0x10470,0x10478,0x10480
000000000001046b         align      16

                     loc_10470:
0000000000010470         mov        edi, dword [rdi+4]                          ; case 2, argument "__fd" for method j_close, CODE XREF=savewd_finish+25
0000000000010473         call       j_close                                     ; close

                     loc_10478:
0000000000010478         mov        dword [rbx], 0x5                            ; case 4, CODE XREF=savewd_finish+25, savewd_finish+53
000000000001047e         pop        rbx
000000000001047f         ret
                        ; endp

                     loc_10480:
0000000000010480         mov        eax, dword [rdi+4]                          ; case 3, CODE XREF=savewd_finish+25
0000000000010483         test       eax, eax
0000000000010485         js         loc_10478

0000000000010487         lea        rcx, qword [__PRETTY_FUNCTION__.4491]       ; argument "__function" for method j___assert_fail, "savewd_finish"
000000000001048e         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/savewd.c"
0000000000010495         lea        rdi, qword [aWdvalchild0_18817]             ; argument "__assertion" for method j___assert_fail, "wd->val.child < 0"
000000000001049c         mov        edx, 0xf7                                   ; argument "__line" for method j___assert_fail
00000000000104a1         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_104a6:
00000000000104a6         lea        rcx, qword [__PRETTY_FUNCTION__.4491]       ; argument "__function" for method j___assert_fail, "savewd_finish", CODE XREF=savewd_finish+4
00000000000104ad         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/savewd.c"
00000000000104b4         lea        rdi, qword [aWdvalchild0_18817+16]          ; argument "__assertion" for method j___assert_fail, 0x18827
00000000000104bb         mov        edx, 0xfb                                   ; argument "__line" for method j___assert_fail
00000000000104c0         call       j___assert_fail                             ; __assert_fail
                        ; endp
00000000000104c5         align      16                                          ; End of unwind block (FDE at 0x1b578)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_44: int32_t, -68
        ;    var_48: int32_t, -72
        ;    var_4C: int32_t, -76
        ;    var_50: int32_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96


                     savewd_process_files:
00000000000104d0         push       r15                                         ; Begin of unwind block (FDE at 0x1b594), CODE XREF=main+2282
00000000000104d2         push       r14
00000000000104d4         mov        eax, edi
00000000000104d6         push       r13
00000000000104d8         push       r12
00000000000104da         sub        eax, 0x1
00000000000104dd         push       rbp
00000000000104de         push       rbx
00000000000104df         mov        r12, rcx
00000000000104e2         mov        rbp, rdx
00000000000104e5         sub        rsp, 0x38
00000000000104e9         mov        rcx, qword [fs:0x28]
00000000000104f2         mov        qword [rsp+0x68+var_40], rcx
00000000000104f7         xor        ecx, ecx
00000000000104f9         test       eax, eax
00000000000104fb         mov        dword [rsp+0x68+var_50], edi
00000000000104ff         mov        qword [rsp+0x68+var_58], rsi
0000000000010504         mov        dword [rsp+0x68+var_48], 0x0
000000000001050c         mov        dword [rsp+0x68+var_4C], eax
0000000000010510         js         loc_10552

0000000000010512         mov        r13d, eax
0000000000010515         cdqe
0000000000010517         lea        rdx, qword [rax*8]
000000000001051f         mov        rax, qword [rsi+rax*8]
0000000000010523         cmp        byte [rax], 0x2f
0000000000010526         jne        loc_105d8

000000000001052c         lea        rax, qword [rsi+rdx-8]
0000000000010531         jmp        loc_10548
0000000000010533         align      8

                     loc_10538:
0000000000010538         mov        rdx, qword [rax]                            ; CODE XREF=savewd_process_files+128
000000000001053b         sub        rax, 0x8
000000000001053f         cmp        byte [rdx], 0x2f
0000000000010542         jne        loc_105d8

                     loc_10548:
0000000000010548         sub        r13d, 0x1                                   ; CODE XREF=savewd_process_files+97
000000000001054c         cmp        r13d, 0xffffffff
0000000000010550         jne        loc_10538

                     loc_10552:
0000000000010552         lea        rbx, qword [rsp+0x68+var_48]                ; CODE XREF=savewd_process_files+64, savewd_process_files+267
0000000000010557         xor        r15d, r15d
000000000001055a         xor        r13d, r13d

                     loc_1055d:
000000000001055d         mov        rdi, rbx                                    ; CODE XREF=savewd_process_files+366
0000000000010560         call       savewd_finish                               ; savewd_finish
0000000000010565         cmp        dword [rsp+0x68+var_50], r13d
000000000001056a         jle        loc_105ab

000000000001056c         mov        ecx, dword [rsp+0x68+var_4C]
0000000000010570         mov        rdi, qword [rsp+0x68+var_58]
0000000000010575         movsxd     rax, r13d
0000000000010578         sub        ecx, r13d
000000000001057b         lea        r14, qword [rdi+rax*8]
000000000001057f         mov        r13, rcx
0000000000010582         add        r13, rax
0000000000010585         lea        r13, qword [rdi+r13*8+8]
000000000001058a         nop        word [rax+rax]

                     loc_10590:
0000000000010590         mov        rdi, qword [r14]                            ; CODE XREF=savewd_process_files+217
0000000000010593         mov        rdx, r12
0000000000010596         mov        rsi, rbx
0000000000010599         call       rbp
000000000001059b         cmp        r15d, eax
000000000001059e         cmovl      r15d, eax
00000000000105a2         add        r14, 0x8
00000000000105a6         cmp        r14, r13
00000000000105a9         jne        loc_10590

                     loc_105ab:
00000000000105ab         mov        rcx, qword [rsp+0x68+var_40]                ; CODE XREF=savewd_process_files+154
00000000000105b0         xor        rcx, qword [fs:0x28]
00000000000105b9         mov        eax, r15d
00000000000105bc         jne        loc_10657

00000000000105c2         add        rsp, 0x38
00000000000105c6         pop        rbx
00000000000105c7         pop        rbp
00000000000105c8         pop        r12
00000000000105ca         pop        r13
00000000000105cc         pop        r14
00000000000105ce         pop        r15
00000000000105d0         ret
                        ; endp
00000000000105d1         align      8

                     loc_105d8:
00000000000105d8         test       r13d, r13d                                  ; CODE XREF=savewd_process_files+86, savewd_process_files+114
00000000000105db         jle        loc_10552

00000000000105e1         mov        rcx, qword [rsp+0x68+var_58]
00000000000105e6         lea        eax, dword [r13-1]
00000000000105ea         xor        r15d, r15d
00000000000105ed         lea        rbx, qword [rsp+0x68+var_48]
00000000000105f2         lea        rax, qword [rcx+rax*8+8]
00000000000105f7         mov        r14, rcx
00000000000105fa         mov        qword [rsp+0x68+var_60], rax
00000000000105ff         xor        eax, eax
0000000000010601         jmp        loc_10648
0000000000010603         align      8

                     loc_10608:
0000000000010608         mov        rdx, r12                                    ; CODE XREF=savewd_process_files+379, savewd_process_files+389
000000000001060b         mov        rsi, rbx
000000000001060e         mov        rdi, qword [r14]
0000000000010611         call       rbp
0000000000010613         cmp        r15d, eax
0000000000010616         cmovl      r15d, eax

                     loc_1061a:
000000000001061a         mov        rax, qword [r14+8]                          ; CODE XREF=savewd_process_files+387
000000000001061e         cmp        byte [rax], 0x2f
0000000000010621         je         loc_10635

0000000000010623         mov        esi, r15d
0000000000010626         mov        rdi, rbx
0000000000010629         call       savewd_restore                              ; savewd_restore
000000000001062e         cmp        r15d, eax
0000000000010631         cmovl      r15d, eax

                     loc_10635:
0000000000010635         add        r14, 0x8                                    ; CODE XREF=savewd_process_files+337
0000000000010639         cmp        r14, qword [rsp+0x68+var_60]
000000000001063e         je         loc_1055d

0000000000010644         mov        eax, dword [rsp+0x68+var_48]

                     loc_10648:
0000000000010648         cmp        eax, 0x3                                    ; CODE XREF=savewd_process_files+305
000000000001064b         jne        loc_10608

000000000001064d         mov        eax, dword [rsp+0x68+var_44]
0000000000010651         test       eax, eax
0000000000010653         jg         loc_1061a

0000000000010655         jmp        loc_10608

                     loc_10657:
0000000000010657         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=savewd_process_files+236
                        ; endp
000000000001065c         align      32                                          ; End of unwind block (FDE at 0x1b594)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     try_nocreate:
0000000000010660         push       rbx                                         ; Begin of unwind block (FDE at 0x1b5e4), DATA XREF=gen_tempname_len+61
0000000000010661         mov        rsi, rdi                                    ; argument "__filename" for method j___lxstat
0000000000010664         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
0000000000010669         sub        rsp, 0xa0
0000000000010670         mov        rdx, rsp                                    ; argument "__stat_buf" for method j___lxstat
0000000000010673         mov        rax, qword [fs:0x28]
000000000001067c         mov        qword [rsp+0xa8+var_10], rax
0000000000010684         xor        eax, eax
0000000000010686         call       j___lxstat                                  ; __lxstat
000000000001068b         mov        ebx, eax
000000000001068d         call       j___errno_location                          ; __errno_location
0000000000010692         test       ebx, ebx
0000000000010694         je         loc_106b0

0000000000010696         mov        edx, dword [rax]
0000000000010698         cmp        edx, 0x4b
000000000001069b         je         loc_106b0

000000000001069d         xor        eax, eax
000000000001069f         cmp        edx, 0x2
00000000000106a2         setne      al
00000000000106a5         neg        eax
00000000000106a7         jmp        loc_106bb
00000000000106a9         align      16

                     loc_106b0:
00000000000106b0         mov        dword [rax], 0x11                           ; CODE XREF=try_nocreate+52, try_nocreate+59
00000000000106b6         mov        eax, 0xffffffff

                     loc_106bb:
00000000000106bb         mov        rcx, qword [rsp+0xa8+var_10]                ; CODE XREF=try_nocreate+71
00000000000106c3         xor        rcx, qword [fs:0x28]
00000000000106cc         jne        loc_106d7

00000000000106ce         add        rsp, 0xa0
00000000000106d5         pop        rbx
00000000000106d6         ret
                        ; endp

                     loc_106d7:
00000000000106d7         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=try_nocreate+108
                        ; endp
00000000000106dc         align      32                                          ; End of unwind block (FDE at 0x1b5e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     try_dir:
00000000000106e0         mov        esi, 0x1c0                                  ; Begin of unwind block (FDE at 0x1b608), argument "__mode" for method j_mkdir, DATA XREF=gen_tempname_len+117
00000000000106e5         jmp        j_mkdir                                     ; mkdir
                        ; endp
00000000000106ea         align      16                                          ; End of unwind block (FDE at 0x1b608)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     try_file:
00000000000106f0         mov        esi, dword [rsi]                            ; Begin of unwind block (FDE at 0x1b61c), DATA XREF=gen_tempname_len+85
00000000000106f2         mov        edx, 0x180
00000000000106f7         xor        eax, eax
00000000000106f9         and        sil, 0x3c
00000000000106fd         or         sil, 0xc2                                   ; argument "__oflag" for method j_open
0000000000010701         jmp        j_open                                      ; open
                        ; endp
0000000000010706         align      16                                          ; End of unwind block (FDE at 0x1b61c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104


                     try_tempname_len:
0000000000010710         push       r15                                         ; Begin of unwind block (FDE at 0x1b630), CODE XREF=force_linkat+150, force_symlinkat+122, gen_tempname_len+68, gen_tempname_len+92, gen_tempname_len+124, try_tempname+6
0000000000010712         push       r14
0000000000010714         mov        r15, rdi
0000000000010717         push       r13
0000000000010719         push       r12
000000000001071b         mov        r14, r8
000000000001071e         push       rbp
000000000001071f         push       rbx
0000000000010720         mov        ebp, esi
0000000000010722         sub        rsp, 0x38
0000000000010726         mov        qword [rsp+0x68+var_50], rdx
000000000001072b         mov        qword [rsp+0x68+var_68], rdi
000000000001072f         mov        qword [rsp+0x68+var_48], rcx
0000000000010734         call       j___errno_location                          ; __errno_location
0000000000010739         mov        qword [rsp+0x68+var_60], rax
000000000001073e         mov        eax, dword [rax]
0000000000010740         mov        rdi, r15                                    ; argument "__s" for method j_strlen
0000000000010743         mov        dword [rsp+0x68+var_3C], eax
0000000000010747         call       j_strlen                                    ; strlen
000000000001074c         movsxd     rsi, ebp
000000000001074f         lea        rdx, qword [rsi+r14]
0000000000010753         cmp        rdx, rax
0000000000010756         ja         loc_1086b

000000000001075c         sub        rax, r14
000000000001075f         mov        rbx, rax
0000000000010762         sub        rbx, rsi
0000000000010765         lea        rsi, qword [aSimplebackupsu+19]             ; argument "__accept" for method j_strspn, 0x180db
000000000001076c         lea        rax, qword [r15+rbx]
0000000000010770         mov        rdi, rax                                    ; argument "__s" for method j_strspn
0000000000010773         mov        qword [rsp+0x68+var_58], rax
0000000000010778         call       j_strspn                                    ; strspn
000000000001077d         cmp        r14, rax
0000000000010780         ja         loc_1086b

0000000000010786         xor        edi, edi
0000000000010788         mov        rsi, r14
000000000001078b         call       randint_all_new                             ; randint_all_new
0000000000010790         test       rax, rax
0000000000010793         mov        rbp, rax
0000000000010796         je         loc_1087d

000000000001079c         mov        rax, qword [rsp+0x68+var_68]
00000000000107a0         lea        r12, qword [letters]                        ; "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
00000000000107a7         mov        r13d, 0x3a2f8
00000000000107ad         add        rax, r14
00000000000107b0         add        rbx, rax
00000000000107b3         nop        dword [rax+rax]

                     loc_107b8:
00000000000107b8         test       r14, r14                                    ; CODE XREF=try_tempname_len+253
00000000000107bb         mov        r15, qword [rsp+0x68+var_58]
00000000000107c0         je         loc_107e7

00000000000107c2         nop        word [rax+rax]

                     loc_107c8:
00000000000107c8         mov        esi, 0x3d                                   ; CODE XREF=try_tempname_len+213
00000000000107cd         mov        rdi, rbp
00000000000107d0         add        r15, 0x1
00000000000107d4         call       randint_genmax                              ; randint_genmax
00000000000107d9         movzx      eax, byte [r12+rax]
00000000000107de         mov        byte [r15-1], al
00000000000107e2         cmp        r15, rbx
00000000000107e5         jne        loc_107c8

                     loc_107e7:
00000000000107e7         mov        rsi, qword [rsp+0x68+var_50]                ; CODE XREF=try_tempname_len+176
00000000000107ec         mov        rdi, qword [rsp+0x68+var_68]
00000000000107f0         mov        rax, qword [rsp+0x68+var_48]
00000000000107f5         call       rax
00000000000107f7         test       eax, eax
00000000000107f9         mov        edx, eax
00000000000107fb         jns        loc_10829

00000000000107fd         mov        rax, qword [rsp+0x68+var_60]
0000000000010802         mov        ecx, dword [rax]
0000000000010804         cmp        ecx, 0x11
0000000000010807         jne        loc_10864

0000000000010809         sub        r13d, 0x1
000000000001080d         jne        loc_107b8

000000000001080f         mov        rdi, rbp
0000000000010812         call       randint_all_free                            ; randint_all_free
0000000000010817         mov        rax, qword [rsp+0x68+var_60]
000000000001081c         mov        edx, 0xffffffff
0000000000010821         mov        dword [rax], 0x11
0000000000010827         jmp        loc_10853

                     loc_10829:
0000000000010829         mov        rcx, qword [rsp+0x68+var_60]                ; CODE XREF=try_tempname_len+235
000000000001082e         mov        eax, dword [rsp+0x68+var_3C]
0000000000010832         mov        dword [rcx], eax
0000000000010834         mov        ecx, eax

                     loc_10836:
0000000000010836         mov        rdi, rbp                                    ; CODE XREF=try_tempname_len+345
0000000000010839         mov        dword [rsp+0x68+var_58], edx
000000000001083d         mov        dword [rsp+0x68+var_68], ecx
0000000000010840         call       randint_all_free                            ; randint_all_free
0000000000010845         mov        rax, qword [rsp+0x68+var_60]
000000000001084a         mov        ecx, dword [rsp+0x68+var_68]
000000000001084d         mov        edx, dword [rsp+0x68+var_58]
0000000000010851         mov        dword [rax], ecx

                     loc_10853:
0000000000010853         add        rsp, 0x38                                   ; CODE XREF=try_tempname_len+279, try_tempname_len+363, try_tempname_len+370
0000000000010857         mov        eax, edx
0000000000010859         pop        rbx
000000000001085a         pop        rbp
000000000001085b         pop        r12
000000000001085d         pop        r13
000000000001085f         pop        r14
0000000000010861         pop        r15
0000000000010863         ret
                        ; endp

                     loc_10864:
0000000000010864         mov        edx, 0xffffffff                             ; CODE XREF=try_tempname_len+247
0000000000010869         jmp        loc_10836

                     loc_1086b:
000000000001086b         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=try_tempname_len+70, try_tempname_len+112
0000000000010870         mov        edx, 0xffffffff
0000000000010875         mov        dword [rax], 0x16
000000000001087b         jmp        loc_10853

                     loc_1087d:
000000000001087d         mov        edx, 0xffffffff                             ; CODE XREF=try_tempname_len+134
0000000000010882         jmp        loc_10853
0000000000010884         align      16                                          ; End of unwind block (FDE at 0x1b630)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_C: int32_t, -12


                     gen_tempname_len:
0000000000010890         sub        rsp, 0x18                                   ; Begin of unwind block (FDE at 0x1b67c), CODE XREF=gen_tempname+6
0000000000010894         cmp        ecx, 0x1
0000000000010897         mov        dword [rsp+0x18+var_C], edx
000000000001089b         je         loc_10900

000000000001089d         cmp        ecx, 0x2
00000000000108a0         je         loc_108c8

00000000000108a2         test       ecx, ecx
00000000000108a4         je         loc_108e0

00000000000108a6         lea        rcx, qword [__PRETTY_FUNCTION__.5642]       ; argument "__function" for method j___assert_fail, "gen_tempname_len"
00000000000108ad         lea        rsi, qword [aCoreutils831li_188d0]          ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/tempname.c"
00000000000108b4         lea        rdi, qword [aInvalidKindInG]                ; argument "__assertion" for method j___assert_fail, "! \\\"invalid KIND in __gen_tempname\\\""
00000000000108bb         mov        edx, 0x147                                  ; argument "__line" for method j___assert_fail
00000000000108c0         call       j___assert_fail                             ; __assert_fail
                        ; endp
00000000000108c5         align      8

                     loc_108c8:
00000000000108c8         lea        rdx, qword [rsp+0x18+var_C]                 ; CODE XREF=gen_tempname_len+16
00000000000108cd         lea        rcx, qword [try_nocreate]                   ; try_nocreate
00000000000108d4         call       try_tempname_len                            ; try_tempname_len
00000000000108d9         add        rsp, 0x18
00000000000108dd         ret
                        ; endp
00000000000108de         align      32

                     loc_108e0:
00000000000108e0         lea        rdx, qword [rsp+0x18+var_C]                 ; CODE XREF=gen_tempname_len+20
00000000000108e5         lea        rcx, qword [try_file]                       ; try_file
00000000000108ec         call       try_tempname_len                            ; try_tempname_len
00000000000108f1         add        rsp, 0x18
00000000000108f5         ret
                        ; endp
00000000000108f6         align      256

                     loc_10900:
0000000000010900         lea        rdx, qword [rsp+0x18+var_C]                 ; CODE XREF=gen_tempname_len+11, DATA XREF=savewd_chdir+43, savewd_chdir+340
0000000000010905         lea        rcx, qword [try_dir]                        ; try_dir
000000000001090c         call       try_tempname_len                            ; try_tempname_len
0000000000010911         add        rsp, 0x18
0000000000010915         ret
                        ; endp
0000000000010916         align      32                                          ; End of unwind block (FDE at 0x1b67c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gen_tempname:
0000000000010920         mov        r8d, 0x6                                    ; Begin of unwind block (FDE at 0x1b6a0)
0000000000010926         jmp        gen_tempname_len                            ; gen_tempname_len
                        ; endp
000000000001092b         align      16                                          ; End of unwind block (FDE at 0x1b6a0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     try_tempname:
0000000000010930         mov        r8d, 0x6                                    ; Begin of unwind block (FDE at 0x1b6b4)
0000000000010936         jmp        try_tempname_len                            ; try_tempname_len
                        ; endp
000000000001093b         align      64                                          ; End of unwind block (FDE at 0x1b6b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fd_safer:
0000000000010940         push       r13                                         ; Begin of unwind block (FDE at 0x1b6cc), CODE XREF=open_safer+42, openat_safer+41
0000000000010942         push       r12
0000000000010944         push       rbp
0000000000010945         push       rbx
0000000000010946         mov        ebx, edi
0000000000010948         sub        rsp, 0x8
000000000001094c         cmp        edi, 0x2
000000000001094f         ja         loc_10972

0000000000010951         call       dup_safer                                   ; dup_safer
0000000000010956         mov        r12d, eax
0000000000010959         call       j___errno_location                          ; __errno_location
000000000001095e         mov        r13d, dword [rax]
0000000000010961         mov        rbp, rax
0000000000010964         mov        edi, ebx                                    ; argument "__fd" for method j_close
0000000000010966         call       j_close                                     ; close
000000000001096b         mov        ebx, r12d
000000000001096e         mov        dword [rbp], r13d

                     loc_10972:
0000000000010972         add        rsp, 0x8                                    ; CODE XREF=fd_safer+15
0000000000010976         mov        eax, ebx
0000000000010978         pop        rbx
0000000000010979         pop        rbp
000000000001097a         pop        r12
000000000001097c         pop        r13
000000000001097e         ret
                        ; endp
000000000001097f         align      128                                         ; End of unwind block (FDE at 0x1b6cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dev_info_hash:
0000000000010980         mov        rax, qword [rdi]                            ; Begin of unwind block (FDE at 0x1b704), DATA XREF=utimecmpat+1591
0000000000010983         xor        edx, edx
0000000000010985         div        rsi
0000000000010988         mov        rax, rdx
000000000001098b         ret
                        ; endp
000000000001098c         align      16                                          ; End of unwind block (FDE at 0x1b704)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dev_info_compare:
0000000000010990         mov        rax, qword [rsi]                            ; Begin of unwind block (FDE at 0x1b718), DATA XREF=utimecmpat+1598
0000000000010993         cmp        qword [rdi], rax
0000000000010996         sete       al
0000000000010999         ret
                        ; endp
000000000001099a         align      32                                          ; End of unwind block (FDE at 0x1b718)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_D8: int8_t, -216
        ;    var_E0: int64_t, -224
        ;    var_E8: int64_t, -232
        ;    var_F0: int64_t, -240
        ;    var_F8: int64_t, -248
        ;    var_FC: int8_t, -252
        ;    var_100: int32_t, -256
        ;    var_108: int64_t, -264
        ;    var_110: int64_t, -272
        ;    var_118: int64_t, -280
        ;    var_11C: int32_t, -284
        ;    var_120: int32_t, -288
        ;    var_128: int64_t, -296
        ;    var_130: int64_t, -304
        ;    var_138: int64_t, -312
        ;    var_140: int64_t, -320
        ;    var_148: int64_t, -328
        ;    var_150: int64_t, -336


                     utimecmpat:
00000000000109a0         push       r15                                         ; Begin of unwind block (FDE at 0x1b72c), CODE XREF=utimecmp+17
00000000000109a2         push       r14
00000000000109a4         push       r13
00000000000109a6         push       r12
00000000000109a8         push       rbp
00000000000109a9         push       rbx
00000000000109aa         mov        ebx, r8d
00000000000109ad         and        ebx, 0x1
00000000000109b0         sub        rsp, 0x128
00000000000109b7         mov        r13, qword [rcx+0x60]
00000000000109bb         mov        r14, qword [rdx+0x58]
00000000000109bf         mov        rax, qword [fs:0x28]
00000000000109c8         mov        qword [rsp+0x158+var_40], rax
00000000000109d0         xor        eax, eax
00000000000109d2         test       ebx, ebx
00000000000109d4         mov        r12, qword [rcx+0x58]
00000000000109d8         mov        r15, qword [rdx+0x60]
00000000000109dc         mov        r9d, r13d
00000000000109df         je         loc_10ac8

00000000000109e5         cmp        r14, r12
00000000000109e8         mov        r10d, edi
00000000000109eb         sete       byte [rsp+0x158+var_120]
00000000000109f0         movzx      edi, byte [rsp+0x158+var_120]
00000000000109f5         cmp        r15d, r13d
00000000000109f8         sete       al
00000000000109fb         and        al, dil
00000000000109fe         mov        byte [rsp+0x158+var_150], al
0000000000010a02         jne        loc_10b10

0000000000010a08         lea        rax, qword [r12-1]
0000000000010a0d         cmp        rax, r14
0000000000010a10         jg         loc_10b18

0000000000010a16         lea        rax, qword [r14-1]
0000000000010a1a         cmp        rax, r12
0000000000010a1d         jg         loc_10adf

0000000000010a23         mov        rbp, rdx
0000000000010a26         mov        rdx, qword [ht.5307]                        ; ht.5307
0000000000010a2d         mov        r11, rsi
0000000000010a30         test       rdx, rdx
0000000000010a33         je         loc_10fd0

                     loc_10a39:
0000000000010a39         mov        rsi, qword [new_dst_res.5308]               ; new_dst_res.5308, CODE XREF=utimecmpat+1660
0000000000010a40         test       rsi, rsi
0000000000010a43         je         loc_10b20

                     loc_10a49:
0000000000010a49         mov        rax, qword [rbp]                            ; CODE XREF=utimecmpat+460
0000000000010a4d         mov        rdi, rdx
0000000000010a50         mov        qword [rsp+0x158+var_130], r11
0000000000010a55         mov        dword [rsp+0x158+var_138], r10d
0000000000010a5a         mov        dword [rsp+0x158+var_140], r9d
0000000000010a5f         mov        qword [rsi], rax
0000000000010a62         call       hash_insert                                 ; hash_insert
0000000000010a67         test       rax, rax
0000000000010a6a         mov        qword [rsp+0x158+var_148], rax
0000000000010a6f         mov        r9d, dword [rsp+0x158+var_140]
0000000000010a74         mov        r10d, dword [rsp+0x158+var_138]
0000000000010a79         mov        r11, qword [rsp+0x158+var_130]
0000000000010a7e         je         loc_10b78

0000000000010a84         cmp        qword [new_dst_res.5308], rax               ; new_dst_res.5308
0000000000010a8b         je         loc_11030

                     loc_10a91:
0000000000010a91         mov        rax, qword [rsp+0x158+var_148]              ; CODE XREF=utimecmpat+561, utimecmpat+1691
0000000000010a96         cmp        byte [rax+0xc], 0x0
0000000000010a9a         mov        esi, dword [rax+8]
0000000000010a9d         mov        dword [rsp+0x158+var_140], esi
0000000000010aa1         je         loc_10bfa

0000000000010aa7         xor        eax, eax
0000000000010aa9         cmp        esi, 0x77359400
0000000000010aaf         sete       al
0000000000010ab2         not        eax
0000000000010ab4         cdqe
0000000000010ab6         and        r12, rax
0000000000010ab9         mov        eax, r9d
0000000000010abc         mov        r9d, r13d
0000000000010abf         cdq
0000000000010ac0         idiv       esi
0000000000010ac2         sub        r9d, edx
0000000000010ac5         nop        dword [rax]

                     loc_10ac8:
0000000000010ac8         cmp        r12, r14                                    ; CODE XREF=utimecmpat+63, utimecmpat+1572
0000000000010acb         jg         loc_10b18

0000000000010acd         mov        ebx, 0x1
0000000000010ad2         jl         loc_10adf

0000000000010ad4         cmp        r9d, r15d
0000000000010ad7         jg         loc_10b18

0000000000010ad9         setl       bl
0000000000010adc         movzx      ebx, bl

                     loc_10adf:
0000000000010adf         mov        rsi, qword [rsp+0x158+var_40]               ; CODE XREF=utimecmpat+125, utimecmpat+306, utimecmpat+370, utimecmpat+381, utimecmpat+1126, utimecmpat+1142, utimecmpat+1302
0000000000010ae7         xor        rsi, qword [fs:0x28]
0000000000010af0         mov        eax, ebx
0000000000010af2         jne        loc_110c8

0000000000010af8         add        rsp, 0x128
0000000000010aff         pop        rbx
0000000000010b00         pop        rbp
0000000000010b01         pop        r12
0000000000010b03         pop        r13
0000000000010b05         pop        r14
0000000000010b07         pop        r15
0000000000010b09         ret
                        ; endp
0000000000010b0a         align      16

                     loc_10b10:
0000000000010b10         xor        ebx, ebx                                    ; CODE XREF=utimecmpat+98
0000000000010b12         jmp        loc_10adf
0000000000010b14         align      8

                     loc_10b18:
0000000000010b18         mov        ebx, 0xffffffff                             ; CODE XREF=utimecmpat+112, utimecmpat+299, utimecmpat+311, utimecmpat+1151, utimecmpat+1175
0000000000010b1d         jmp        loc_10adf
0000000000010b1f         align      32

                     loc_10b20:
0000000000010b20         mov        edi, 0x10                                   ; argument "__size" for method j_malloc, CODE XREF=utimecmpat+163
0000000000010b25         mov        qword [rsp+0x158+var_130], r11
0000000000010b2a         mov        dword [rsp+0x158+var_138], r10d
0000000000010b2f         mov        dword [rsp+0x158+var_140], r9d
0000000000010b34         mov        qword [rsp+0x158+var_148], rdx
0000000000010b39         call       j_malloc                                    ; malloc
0000000000010b3e         test       rax, rax
0000000000010b41         mov        rsi, rax
0000000000010b44         mov        qword [new_dst_res.5308], rax               ; new_dst_res.5308
0000000000010b4b         mov        rdx, qword [rsp+0x158+var_148]
0000000000010b50         mov        r9d, dword [rsp+0x158+var_140]
0000000000010b55         mov        r10d, dword [rsp+0x158+var_138]
0000000000010b5a         mov        r11, qword [rsp+0x158+var_130]
0000000000010b5f         je         loc_10b88

0000000000010b61         mov        dword [rax+8], 0x77359400
0000000000010b68         mov        byte [rax+0xc], 0x0
0000000000010b6c         jmp        loc_10a49
0000000000010b71         align      8

                     loc_10b78:
0000000000010b78         mov        rdx, qword [ht.5307]                        ; ht.5307, CODE XREF=utimecmpat+222
0000000000010b7f         test       rdx, rdx
0000000000010b82         je         loc_11022

                     loc_10b88:
0000000000010b88         lea        rcx, qword [rsp+0x158+var_108]              ; CODE XREF=utimecmpat+447
0000000000010b8d         mov        rax, qword [rbp]
0000000000010b91         mov        rdi, rdx
0000000000010b94         mov        qword [rsp+0x158+var_128], r11
0000000000010b99         mov        dword [rsp+0x158+var_130], r10d
0000000000010b9e         mov        rsi, rcx
0000000000010ba1         mov        dword [rsp+0x158+var_138], r9d
0000000000010ba6         mov        qword [rsp+0x158+var_140], rcx
0000000000010bab         mov        qword [rsp+0x158+var_108], rax
0000000000010bb0         call       hash_lookup                                 ; hash_lookup
0000000000010bb5         test       rax, rax
0000000000010bb8         mov        qword [rsp+0x158+var_148], rax
0000000000010bbd         mov        rcx, qword [rsp+0x158+var_140]
0000000000010bc2         mov        r9d, dword [rsp+0x158+var_138]
0000000000010bc7         mov        r10d, dword [rsp+0x158+var_130]
0000000000010bcc         mov        r11, qword [rsp+0x158+var_128]
0000000000010bd1         jne        loc_10a91

0000000000010bd7         nop        word [rax+rax]

                     loc_10be0:
0000000000010be0         mov        dword [rsp+0x158+var_100], 0x77359400       ; CODE XREF=utimecmpat+1671
0000000000010be8         mov        byte [rsp+0x158+var_FC], 0x0
0000000000010bed         mov        dword [rsp+0x158+var_140], 0x77359400
0000000000010bf5         mov        qword [rsp+0x158+var_148], rcx

                     loc_10bfa:
0000000000010bfa         mov        rcx, qword [rbp+0x50]                       ; CODE XREF=utimecmpat+257
0000000000010bfe         mov        eax, 0x66666667
0000000000010c03         mov        rsi, qword [rbp+0x70]
0000000000010c07         imul       ecx
0000000000010c09         mov        eax, ecx
0000000000010c0b         mov        qword [rsp+0x158+var_130], rcx
0000000000010c10         sar        eax, 0x1f
0000000000010c13         sar        edx, 0x2
0000000000010c16         sub        edx, eax
0000000000010c18         lea        eax, dword [rdx+rdx*4]
0000000000010c1b         mov        dword [rsp+0x158+var_138], edx
0000000000010c1f         add        eax, eax
0000000000010c21         sub        ecx, eax
0000000000010c23         mov        eax, 0x66666667
0000000000010c28         imul       esi
0000000000010c2a         mov        eax, esi
0000000000010c2c         sar        eax, 0x1f
0000000000010c2f         sar        edx, 0x2
0000000000010c32         mov        edi, edx
0000000000010c34         sub        edi, eax
0000000000010c36         lea        eax, dword [rdi+rdi*4]
0000000000010c39         add        eax, eax
0000000000010c3b         sub        esi, eax
0000000000010c3d         mov        eax, 0x66666667
0000000000010c42         imul       r15d
0000000000010c45         mov        eax, r15d
0000000000010c48         or         ecx, esi
0000000000010c4a         sar        eax, 0x1f
0000000000010c4d         mov        esi, r15d
0000000000010c50         sar        edx, 0x2
0000000000010c53         mov        r8d, edx
0000000000010c56         sub        r8d, eax
0000000000010c59         lea        eax, dword [r8+r8*4]
0000000000010c5d         add        eax, eax
0000000000010c5f         sub        esi, eax
0000000000010c61         or         ecx, esi
0000000000010c63         jne        loc_10fb8

0000000000010c69         cmp        dword [rsp+0x158+var_140], 0xa
0000000000010c6e         mov        rax, qword [rbp+0x48]
0000000000010c72         mov        ecx, edi
0000000000010c74         mov        edx, dword [rsp+0x158+var_138]
0000000000010c78         mov        esi, r8d
0000000000010c7b         mov        qword [rsp+0x158+var_110], rax
0000000000010c80         mov        dword [rsp+0x158+var_128], edx
0000000000010c84         jle        loc_11098

0000000000010c8a         mov        eax, 0x66666667
0000000000010c8f         imul       edi
0000000000010c91         mov        eax, edi
0000000000010c93         sar        eax, 0x1f
0000000000010c96         sar        edx, 0x2
0000000000010c99         sub        edx, eax
0000000000010c9b         lea        eax, dword [rdx+rdx*4]
0000000000010c9e         add        eax, eax
0000000000010ca0         sub        edi, eax
0000000000010ca2         mov        eax, 0x66666667
0000000000010ca7         imul       dword [rsp+0x158+var_138]
0000000000010cab         mov        eax, dword [rsp+0x158+var_138]
0000000000010caf         sar        eax, 0x1f
0000000000010cb2         sar        edx, 0x2
0000000000010cb5         sub        edx, eax
0000000000010cb7         lea        eax, dword [rdx+rdx*4]
0000000000010cba         mov        edx, dword [rsp+0x158+var_138]
0000000000010cbe         mov        dword [rsp+0x158+var_138], 0xa
0000000000010cc6         add        eax, eax
0000000000010cc8         sub        edx, eax
0000000000010cca         mov        eax, 0x66666667
0000000000010ccf         or         edi, edx
0000000000010cd1         imul       r8d
0000000000010cd4         mov        eax, r8d
0000000000010cd7         mov        dword [rsp+0x158+var_11C], edi
0000000000010cdb         sar        eax, 0x1f
0000000000010cde         mov        edi, 0x66666667
0000000000010ce3         sar        edx, 0x2
0000000000010ce6         sub        edx, eax
0000000000010ce8         lea        eax, dword [rdx+rdx*4]
0000000000010ceb         mov        edx, 0x8
0000000000010cf0         add        eax, eax
0000000000010cf2         sub        r8d, eax
0000000000010cf5         mov        eax, dword [rsp+0x158+var_11C]
0000000000010cf9         or         eax, r8d
0000000000010cfc         jne        loc_110b4

0000000000010d02         mov        dword [rsp+0x158+var_11C], r9d
0000000000010d07         mov        qword [rsp+0x158+var_118], r14
0000000000010d0c         mov        r9d, 0xa
0000000000010d12         mov        r8d, dword [rsp+0x158+var_128]
0000000000010d17         mov        qword [rsp+0x158+var_138], r12
0000000000010d1c         mov        r14d, edx
0000000000010d1f         mov        qword [rsp+0x158+var_128], rbp

                     loc_10d24:
0000000000010d24         mov        eax, r8d                                    ; CODE XREF=utimecmpat+1054
0000000000010d27         sar        r8d, 0x1f
0000000000010d2b         lea        ebp, dword [r9+r9*4]
0000000000010d2f         imul       edi
0000000000010d31         mov        eax, ecx
0000000000010d33         sar        ecx, 0x1f
0000000000010d36         add        ebp, ebp
0000000000010d38         mov        r9d, ebp
0000000000010d3b         sar        edx, 0x2
0000000000010d3e         sub        edx, r8d
0000000000010d41         mov        r8d, edx
0000000000010d44         imul       edi
0000000000010d46         mov        eax, esi
0000000000010d48         sar        esi, 0x1f
0000000000010d4b         sar        edx, 0x2
0000000000010d4e         sub        edx, ecx
0000000000010d50         mov        ecx, edx
0000000000010d52         imul       edi
0000000000010d54         sar        edx, 0x2
0000000000010d57         sub        edx, esi
0000000000010d59         cmp        ebp, dword [rsp+0x158+var_140]
0000000000010d5d         mov        esi, edx
0000000000010d5f         jge        loc_11040

0000000000010d65         mov        eax, r8d
0000000000010d68         mov        r12d, r8d
0000000000010d6b         imul       edi
0000000000010d6d         mov        eax, r8d
0000000000010d70         sar        eax, 0x1f
0000000000010d73         sar        edx, 0x2
0000000000010d76         sub        edx, eax
0000000000010d78         lea        eax, dword [rdx+rdx*4]
0000000000010d7b         add        eax, eax
0000000000010d7d         sub        r12d, eax
0000000000010d80         mov        eax, ecx
0000000000010d82         imul       edi
0000000000010d84         mov        eax, ecx
0000000000010d86         sar        eax, 0x1f
0000000000010d89         sar        edx, 0x2
0000000000010d8c         sub        edx, eax
0000000000010d8e         lea        eax, dword [rdx+rdx*4]
0000000000010d91         mov        edx, ecx
0000000000010d93         add        eax, eax
0000000000010d95         sub        edx, eax
0000000000010d97         mov        eax, esi
0000000000010d99         or         r12d, edx
0000000000010d9c         imul       edi
0000000000010d9e         mov        eax, esi
0000000000010da0         sar        eax, 0x1f
0000000000010da3         sar        edx, 0x2
0000000000010da6         sub        edx, eax
0000000000010da8         lea        eax, dword [rdx+rdx*4]
0000000000010dab         mov        edx, esi
0000000000010dad         add        eax, eax
0000000000010daf         sub        edx, eax
0000000000010db1         or         r12d, edx
0000000000010db4         jne        loc_11040

0000000000010dba         sub        r14d, 0x1
0000000000010dbe         jne        loc_10d24

0000000000010dc4         mov        r14, qword [rsp+0x158+var_118]
0000000000010dc9         mov        rbp, qword [rsp+0x158+var_128]
0000000000010dce         mov        rax, qword [rsp+0x158+var_110]
0000000000010dd3         mov        r12, qword [rsp+0x158+var_138]
0000000000010dd8         mov        r9d, dword [rsp+0x158+var_11C]
0000000000010ddd         or         rax, r14
0000000000010de0         or         rax, qword [rbp+0x68]
0000000000010de4         test       al, 0x1
0000000000010de6         mov        rax, qword [rsp+0x158+var_148]
0000000000010deb         je         loc_11078

0000000000010df1         mov        dword [rax+8], 0x3b9aca00
0000000000010df8         mov        dword [rsp+0x158+var_138], 0x3b9aca00
0000000000010e00         mov        rax, r12

                     loc_10e03:
0000000000010e03         cmp        r14, r12                                    ; CODE XREF=utimecmpat+1747, utimecmpat+1779, utimecmpat+1807, utimecmpat+1827
0000000000010e06         jg         loc_10adf

0000000000010e0c         cmp        r15d, r13d
0000000000010e0f         jl         loc_10e1c

0000000000010e11         cmp        byte [rsp+0x158+var_120], 0x0
0000000000010e16         jne        loc_10adf

                     loc_10e1c:
0000000000010e1c         cmp        r14, rax                                    ; CODE XREF=utimecmpat+1135
0000000000010e1f         jl         loc_10b18

0000000000010e25         jne        loc_10e3d

0000000000010e27         mov        eax, r9d
0000000000010e2a         cdq
0000000000010e2b         idiv       dword [rsp+0x158+var_138]
0000000000010e2f         mov        eax, r13d
0000000000010e32         sub        eax, edx
0000000000010e34         cmp        eax, r15d
0000000000010e37         jg         loc_10b18

                     loc_10e3d:
0000000000010e3d         mov        rax, qword [rsp+0x158+var_110]              ; CODE XREF=utimecmpat+1157
0000000000010e42         mov        edx, 0x38e38e39
0000000000010e47         lea        rbp, qword [rsp+0x158+var_F8]
0000000000010e4c         mov        rsi, r11                                    ; argument "__path" for method j_utimensat
0000000000010e4f         mov        edi, r10d                                   ; argument "__fd" for method j_utimensat
0000000000010e52         mov        ecx, 0x100                                  ; argument "__flags" for method j_utimensat
0000000000010e57         mov        dword [rsp+0x158+var_140], r9d
0000000000010e5c         mov        dword [rsp+0x158+var_120], r10d
0000000000010e61         mov        qword [rsp+0x158+var_F8], rax
0000000000010e66         movsxd     rax, dword [rsp+0x158+var_130]
0000000000010e6b         mov        qword [rsp+0x158+var_F0], rax
0000000000010e70         movzx      eax, byte [rsp+0x158+var_150]
0000000000010e75         mov        qword [rsp+0x158+var_150], r11
0000000000010e7a         or         rax, r14
0000000000010e7d         mov        qword [rsp+0x158+var_E8], rax
0000000000010e82         mov        eax, dword [rsp+0x158+var_138]
0000000000010e86         mul        edx
0000000000010e88         mov        eax, edx
0000000000010e8a         mov        rdx, rbp                                    ; argument "__times" for method j_utimensat
0000000000010e8d         shr        eax, 0x1
0000000000010e8f         add        eax, r15d
0000000000010e92         cdqe
0000000000010e94         mov        qword [rsp+0x158+var_E0], rax
0000000000010e99         call       j_utimensat                                 ; utimensat
0000000000010e9e         test       eax, eax
0000000000010ea0         mov        r10d, dword [rsp+0x158+var_120]
0000000000010ea5         mov        r11, qword [rsp+0x158+var_150]
0000000000010eaa         mov        r9d, dword [rsp+0x158+var_140]
0000000000010eaf         je         loc_10ebb

                     loc_10eb1:
0000000000010eb1         mov        ebx, 0xfffffffe                             ; CODE XREF=utimecmpat+1889
0000000000010eb6         jmp        loc_10adf

                     loc_10ebb:
0000000000010ebb         lea        rcx, qword [rsp+0x158+var_D8]               ; argument "__stat_buf" for method j___fxstatat, CODE XREF=utimecmpat+1295
0000000000010ec3         mov        rdx, r11                                    ; argument "__filename" for method j___fxstatat
0000000000010ec6         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
0000000000010ecc         mov        esi, r10d                                   ; argument "__fildes" for method j___fxstatat
0000000000010ecf         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
0000000000010ed4         mov        dword [rsp+0x158+var_140], r9d
0000000000010ed9         mov        qword [rsp+0x158+var_150], r11
0000000000010ede         mov        dword [rsp+0x158+var_120], r10d
0000000000010ee3         call       j___fxstatat                                ; __fxstatat
0000000000010ee8         mov        rcx, qword [rsp+0x158+var_78]
0000000000010ef0         mov        r8d, eax
0000000000010ef3         mov        rax, qword [rsp+0x158+var_80]
0000000000010efb         movsxd     rdx, r15d
0000000000010efe         mov        r10d, dword [rsp+0x158+var_120]
0000000000010f03         mov        r11, qword [rsp+0x158+var_150]
0000000000010f08         mov        r9d, dword [rsp+0x158+var_140]
0000000000010f0d         xor        rcx, rdx
0000000000010f10         xor        rax, r14
0000000000010f13         or         rax, rcx
0000000000010f16         movsxd     rcx, r8d
0000000000010f19         or         rax, rcx
0000000000010f1c         jne        loc_110cd

                     loc_10f22:
0000000000010f22         mov        ecx, dword [rsp+0x158+var_80]               ; CODE XREF=utimecmpat+1895
0000000000010f29         mov        esi, 0xa
0000000000010f2e         and        ecx, 0x1
0000000000010f31         imul       ecx, ecx, 0x3b9aca00
0000000000010f37         add        ecx, dword [rsp+0x158+var_78]
0000000000010f3e         mov        eax, ecx
0000000000010f40         cdq
0000000000010f41         idiv       esi
0000000000010f43         test       edx, edx
0000000000010f45         jne        loc_11115

0000000000010f4b         cmp        dword [rsp+0x158+var_138], 0xa
0000000000010f50         je         loc_10f8d

0000000000010f52         mov        r8d, 0x9
0000000000010f58         mov        esi, 0xa
0000000000010f5d         mov        edi, 0xa
0000000000010f62         jmp        loc_10f6d

                     loc_10f64:
0000000000010f64         imul       esi, esi, 0xa                               ; CODE XREF=utimecmpat+1507
0000000000010f67         cmp        esi, dword [rsp+0x158+var_138]
0000000000010f6b         je         loc_10f8d

                     loc_10f6d:
0000000000010f6d         mov        eax, ecx                                    ; CODE XREF=utimecmpat+1474
0000000000010f6f         cdq
0000000000010f70         idiv       edi
0000000000010f72         cdq
0000000000010f73         mov        ecx, eax
0000000000010f75         idiv       edi
0000000000010f77         test       edx, edx
0000000000010f79         jne        loc_1110c

0000000000010f7f         sub        r8d, 0x1
0000000000010f83         jne        loc_10f64

0000000000010f85         mov        dword [rsp+0x158+var_138], 0x77359400

                     loc_10f8d:
0000000000010f8d         mov        esi, dword [rsp+0x158+var_138]              ; CODE XREF=utimecmpat+1456, utimecmpat+1483, utimecmpat+1904, utimecmpat+1913
0000000000010f91         xor        eax, eax
0000000000010f93         cmp        esi, 0x77359400
0000000000010f99         mov        ebx, esi
0000000000010f9b         sete       al
0000000000010f9e         not        eax
0000000000010fa0         cdqe
0000000000010fa2         and        r12, rax
0000000000010fa5         mov        eax, r9d
0000000000010fa8         mov        r9d, r13d
0000000000010fab         cdq
0000000000010fac         idiv       esi
0000000000010fae         sub        r9d, edx
0000000000010fb1         nop        dword [rax]

                     loc_10fb8:
0000000000010fb8         mov        rax, qword [rsp+0x158+var_148]              ; CODE XREF=utimecmpat+707
0000000000010fbd         mov        dword [rax+8], ebx
0000000000010fc0         mov        byte [rax+0xc], 0x1
0000000000010fc4         jmp        loc_10ac8
0000000000010fc9         align      16

                     loc_10fd0:
0000000000010fd0         mov        r8, qword [qword_21cfd0]                    ; qword_21cfd0, CODE XREF=utimecmpat+147
0000000000010fd7         lea        rdx, qword [dev_info_hash]                  ; dev_info_hash
0000000000010fde         lea        rcx, qword [dev_info_compare]               ; dev_info_compare
0000000000010fe5         mov        qword [rsp+0x158+var_138], rsi
0000000000010fea         mov        edi, 0x10
0000000000010fef         xor        esi, esi
0000000000010ff1         mov        dword [rsp+0x158+var_140], r10d
0000000000010ff6         mov        dword [rsp+0x158+var_148], r13d
0000000000010ffb         call       hash_initialize                             ; hash_initialize
0000000000011000         test       rax, rax
0000000000011003         mov        rdx, rax
0000000000011006         mov        qword [ht.5307], rax                        ; ht.5307
000000000001100d         mov        r9d, dword [rsp+0x158+var_148]
0000000000011012         mov        r10d, dword [rsp+0x158+var_140]
0000000000011017         mov        r11, qword [rsp+0x158+var_138]
000000000001101c         jne        loc_10a39

                     loc_11022:
0000000000011022         lea        rcx, qword [rsp+0x158+var_108]              ; CODE XREF=utimecmpat+482
0000000000011027         jmp        loc_10be0
000000000001102c         align      16

                     loc_11030:
0000000000011030         mov        qword [new_dst_res.5308], 0x0               ; new_dst_res.5308, CODE XREF=utimecmpat+235
000000000001103b         jmp        loc_10a91

                     loc_11040:
0000000000011040         cmp        ebp, 0x77359400                             ; CODE XREF=utimecmpat+959, utimecmpat+1044
0000000000011046         mov        r12, qword [rsp+0x158+var_138]
000000000001104b         mov        rsi, qword [rsp+0x158+var_148]
0000000000011050         sete       byte [rsp+0x158+var_150]
0000000000011055         movzx      eax, byte [rsp+0x158+var_150]
000000000001105a         mov        dword [rsp+0x158+var_138], r9d
000000000001105f         mov        r14, qword [rsp+0x158+var_118]
0000000000011064         mov        r9d, dword [rsp+0x158+var_11C]
0000000000011069         mov        dword [rsi+8], ebp
000000000001106c         not        eax
000000000001106e         cdqe
0000000000011070         and        rax, r12
0000000000011073         jmp        loc_10e03

                     loc_11078:
0000000000011078         mov        dword [rax+8], 0x77359400                   ; CODE XREF=utimecmpat+1099
000000000001107f         mov        rax, r12
0000000000011082         mov        byte [rsp+0x158+var_150], 0x1
0000000000011087         and        rax, 0xfffffffffffffffe
000000000001108b         mov        dword [rsp+0x158+var_138], 0x77359400
0000000000011093         jmp        loc_10e03

                     loc_11098:
0000000000011098         mov        rax, qword [rsp+0x158+var_148]              ; CODE XREF=utimecmpat+740
000000000001109d         mov        dword [rsp+0x158+var_138], 0xa
00000000000110a5         mov        dword [rax+8], 0xa
00000000000110ac         mov        rax, r12
00000000000110af         jmp        loc_10e03

                     loc_110b4:
00000000000110b4         mov        rax, qword [rsp+0x158+var_148]              ; CODE XREF=utimecmpat+860
00000000000110b9         mov        dword [rax+8], 0xa
00000000000110c0         mov        rax, r12
00000000000110c3         jmp        loc_10e03

                     loc_110c8:
00000000000110c8         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=utimecmpat+338
                        ; endp

                     loc_110cd:
00000000000110cd         mov        qword [rsp+0x158+var_E0], rdx               ; CODE XREF=utimecmpat+1404
00000000000110d2         mov        ecx, 0x100                                  ; argument "__flags" for method j_utimensat
00000000000110d7         mov        rdx, rbp                                    ; argument "__times" for method j_utimensat
00000000000110da         mov        rsi, r11                                    ; argument "__path" for method j_utimensat
00000000000110dd         mov        edi, r10d                                   ; argument "__fd" for method j_utimensat
00000000000110e0         mov        dword [rsp+0x158+var_150], r8d
00000000000110e5         mov        dword [rsp+0x158+var_120], r9d
00000000000110ea         mov        qword [rsp+0x158+var_E8], r14
00000000000110ef         call       j_utimensat                                 ; utimensat
00000000000110f4         mov        r8d, dword [rsp+0x158+var_150]
00000000000110f9         mov        r9d, dword [rsp+0x158+var_120]
00000000000110fe         test       r8d, r8d
0000000000011101         jne        loc_10eb1

0000000000011107         jmp        loc_10f22

                     loc_1110c:
000000000001110c         mov        dword [rsp+0x158+var_138], esi              ; CODE XREF=utimecmpat+1497
0000000000011110         jmp        loc_10f8d

                     loc_11115:
0000000000011115         mov        dword [rsp+0x158+var_138], ebx              ; CODE XREF=utimecmpat+1445
0000000000011119         jmp        loc_10f8d
000000000001111e         align      32                                          ; End of unwind block (FDE at 0x1b72c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     utimecmp:
0000000000011120         mov        r8d, ecx                                    ; Begin of unwind block (FDE at 0x1b77c), CODE XREF=copy_internal+651
0000000000011123         mov        rcx, rdx
0000000000011126         mov        rdx, rsi
0000000000011129         mov        rsi, rdi
000000000001112c         mov        edi, 0xffffff9c
0000000000011131         jmp        utimecmpat                                  ; utimecmpat
                        ; endp
0000000000011136         align      64                                          ; End of unwind block (FDE at 0x1b77c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_19: int8_t, -25


                     update_timespec:
0000000000011140         push       rbp                                         ; Begin of unwind block (FDE at 0x1b794), CODE XREF=fdutimens+612, lutimens+197
0000000000011141         push       rbx
0000000000011142         mov        rbp, rdi
0000000000011145         sub        rsp, 0x18
0000000000011149         mov        rbx, qword [rsi]
000000000001114c         mov        rax, qword [rbx+8]
0000000000011150         mov        rdx, qword [rbx+0x18]
0000000000011154         cmp        rax, 0x3ffffffe
000000000001115a         je         loc_111c0

000000000001115c         cmp        rax, 0x3fffffff
0000000000011162         je         loc_11180

0000000000011164         cmp        rdx, 0x3ffffffe
000000000001116b         je         loc_1119e

                     loc_1116d:
000000000001116d         xor        eax, eax                                    ; CODE XREF=update_timespec+92
000000000001116f         cmp        rdx, 0x3fffffff
0000000000011176         je         loc_111e8

                     loc_11178:
0000000000011178         add        rsp, 0x18                                   ; CODE XREF=update_timespec+140, update_timespec+166, update_timespec+209
000000000001117c         pop        rbx
000000000001117d         pop        rbp
000000000001117e         ret
                        ; endp
000000000001117f         align      128

                     loc_11180:
0000000000011180         cmp        rdx, 0x3fffffff                             ; CODE XREF=update_timespec+34
0000000000011187         je         loc_11208

0000000000011189         mov        rdi, rbx
000000000001118c         call       gettime                                     ; gettime
0000000000011191         mov        rdx, qword [rbx+0x18]
0000000000011195         cmp        rdx, 0x3ffffffe
000000000001119c         jne        loc_1116d

                     loc_1119e:
000000000001119e         mov        rax, qword [rbp+0x60]                       ; CODE XREF=update_timespec+43
00000000000111a2         mov        rdx, qword [rbp+0x58]
00000000000111a6         mov        qword [rbx+0x18], rax
00000000000111aa         mov        qword [rbx+0x10], rdx
00000000000111ae         add        rsp, 0x18
00000000000111b2         xor        eax, eax
00000000000111b4         pop        rbx
00000000000111b5         pop        rbp
00000000000111b6         ret
                        ; endp
00000000000111b7         align      64

                     loc_111c0:
00000000000111c0         cmp        rdx, 0x3ffffffe                             ; CODE XREF=update_timespec+26
00000000000111c7         mov        eax, 0x1
00000000000111cc         je         loc_11178

00000000000111ce         mov        rax, qword [rdi+0x50]
00000000000111d2         mov        rcx, qword [rdi+0x48]
00000000000111d6         mov        qword [rbx+8], rax
00000000000111da         xor        eax, eax
00000000000111dc         cmp        rdx, 0x3fffffff
00000000000111e3         mov        qword [rbx], rcx
00000000000111e6         jne        loc_11178

                     loc_111e8:
00000000000111e8         lea        rdi, qword [rbx+0x10]                       ; CODE XREF=update_timespec+54
00000000000111ec         mov        byte [rsp+0x28+var_19], al
00000000000111f0         call       gettime                                     ; gettime
00000000000111f5         movzx      eax, byte [rsp+0x28+var_19]
00000000000111fa         add        rsp, 0x18
00000000000111fe         pop        rbx
00000000000111ff         pop        rbp
0000000000011200         ret
                        ; endp
0000000000011201         align      8

                     loc_11208:
0000000000011208         mov        qword [rsi], 0x0                            ; CODE XREF=update_timespec+71
000000000001120f         xor        eax, eax
0000000000011211         jmp        loc_11178
0000000000011216         align      32                                          ; End of unwind block (FDE at 0x1b794)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     validate_timespec:
0000000000011220         mov        r9, qword [rdi+8]                           ; Begin of unwind block (FDE at 0x1b7d8), CODE XREF=fdutimens+77, lutimens+71
0000000000011224         lea        rcx, qword [r9-0x3ffffffe]
000000000001122b         cmp        rcx, 0x1
000000000001122f         jbe        loc_1123a

0000000000011231         cmp        r9, 0x3b9ac9ff
0000000000011238         ja         loc_112b0

                     loc_1123a:
000000000001123a         mov        rdx, qword [rdi+0x18]                       ; CODE XREF=validate_timespec+15
000000000001123e         lea        r8, qword [rdx-0x3ffffffe]
0000000000011245         cmp        r8, 0x1
0000000000011249         jbe        loc_11254

000000000001124b         cmp        rdx, 0x3b9ac9ff
0000000000011252         ja         loc_112b0

                     loc_11254:
0000000000011254         xor        esi, esi                                    ; CODE XREF=validate_timespec+41
0000000000011256         xor        r10d, r10d
0000000000011259         cmp        rcx, 0x1
000000000001125d         ja         loc_11279

000000000001125f         xor        esi, esi
0000000000011261         cmp        r9, 0x3ffffffe
0000000000011268         mov        qword [rdi], 0x0
000000000001126f         sete       sil
0000000000011273         mov        r10d, 0x1

                     loc_11279:
0000000000011279         cmp        r8, 0x1                                     ; CODE XREF=validate_timespec+61
000000000001127d         ja         loc_1129b

000000000001127f         xor        eax, eax
0000000000011281         cmp        rdx, 0x3ffffffe
0000000000011288         mov        qword [rdi+0x10], 0x0
0000000000011290         sete       al
0000000000011293         mov        r10d, 0x1
0000000000011299         add        esi, eax

                     loc_1129b:
000000000001129b         xor        eax, eax                                    ; CODE XREF=validate_timespec+93
000000000001129d         cmp        esi, 0x1
00000000000112a0         sete       al
00000000000112a3         add        eax, r10d
00000000000112a6         ret
                        ; endp
00000000000112a7         align      16

                     loc_112b0:
00000000000112b0         sub        rsp, 0x8                                    ; CODE XREF=validate_timespec+24, validate_timespec+50
00000000000112b4         call       j___errno_location                          ; __errno_location
00000000000112b9         mov        dword [rax], 0x16
00000000000112bf         mov        eax, 0xffffffff
00000000000112c4         add        rsp, 0x8
00000000000112c8         ret
                        ; endp
00000000000112c9         align      16                                          ; End of unwind block (FDE at 0x1b7d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     lutimensat:
00000000000112d0         mov        ecx, 0x100                                  ; Begin of unwind block (FDE at 0x1b7f0), argument "__flags" for method j_utimensat
00000000000112d5         jmp        j_utimensat                                 ; utimensat
                        ; endp
00000000000112da         align      32                                          ; End of unwind block (FDE at 0x1b7f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_C8: int8_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: -216
        ;    var_E0: int64_t, -224
        ;    var_E8: int8_t, -232
        ;    var_F0: int64_t, -240
        ;    var_F8: int64_t, -248
        ;    var_100: int64_t, -256
        ;    var_108: int64_t, -264
        ;    var_118: -280
        ;    var_128: int8_t, -296
        ;    var_130: int64_t, -304


                     fdutimens:
00000000000112e0         push       r14                                         ; Begin of unwind block (FDE at 0x1b804), CODE XREF=copy_internal+14866, lutimens+241
00000000000112e2         push       r13
00000000000112e4         push       r12
00000000000112e6         push       rbp
00000000000112e7         mov        r12, rsi
00000000000112ea         push       rbx
00000000000112eb         mov        ebx, edi
00000000000112ed         sub        rsp, 0x110
00000000000112f4         mov        rax, qword [fs:0x28]
00000000000112fd         mov        qword [rsp+0x138+var_30], rax
0000000000011305         xor        eax, eax
0000000000011307         test       rdx, rdx
000000000001130a         je         loc_115d0

0000000000011310         movdqu     xmm0, xmmword [rdx]
0000000000011314         lea        rdi, qword [rsp+0x138+var_128]
0000000000011319         movaps     xmmword [rsp+0x138+var_128], xmm0
000000000001131e         mov        qword [rsp+0x138+var_130], rdi
0000000000011323         movdqu     xmm0, xmmword [rdx+0x10]
0000000000011328         movaps     xmmword [rsp+0x138+var_118], xmm0
000000000001132d         call       validate_timespec                           ; validate_timespec
0000000000011332         test       eax, eax
0000000000011334         mov        r13d, eax
0000000000011337         js         loc_116f3

                     loc_1133d:
000000000001133d         test       ebx, ebx                                    ; CODE XREF=fdutimens+764
000000000001133f         jns        loc_1134a

0000000000011341         test       r12, r12
0000000000011344         je         loc_116e8

                     loc_1134a:
000000000001134a         mov        eax, dword [utimensat_works_really]         ; utimensat_works_really, CODE XREF=fdutimens+95
0000000000011350         test       eax, eax
0000000000011352         js         loc_11388

0000000000011354         cmp        r13d, 0x2
0000000000011358         je         loc_11560

000000000001135e         mov        rsi, qword [rsp+0x138+var_130]

                     loc_11363:
0000000000011363         test       ebx, ebx                                    ; CODE XREF=fdutimens+711, fdutimens+741, fdutimens+1021
0000000000011365         js         loc_11690

000000000001136b         mov        edi, ebx                                    ; argument "__fd" for method j_futimens
000000000001136d         call       j_futimens                                  ; futimens
0000000000011372         cmp        eax, 0x0
0000000000011375         mov        ebp, eax
0000000000011377         jle        loc_116ad

                     loc_1137d:
000000000001137d         call       j___errno_location                          ; __errno_location, CODE XREF=fdutimens+967
0000000000011382         mov        dword [rax], 0x26

                     loc_11388:
0000000000011388         test       r13d, r13d                                  ; CODE XREF=fdutimens+114, fdutimens+1113
000000000001138b         mov        dword [utimensat_works_really], 0xffffffff  ; utimensat_works_really
0000000000011395         mov        dword [lutimensat_works_really], 0xffffffff ; lutimensat_works_really
000000000001139f         jne        loc_11500

                     loc_113a5:
00000000000113a5         mov        rsi, qword [rsp+0x138+var_130]              ; CODE XREF=fdutimens+619
00000000000113aa         test       rsi, rsi
00000000000113ad         je         loc_11640

00000000000113b3         mov        rax, qword [rsi]
00000000000113b6         mov        rdi, qword [rsi+8]
00000000000113ba         movabs     rcx, 0x20c49ba5e353f7cf
00000000000113c4         lea        r13, qword [rsp+0x138+var_108]
00000000000113c9         mov        qword [rsp+0x138+var_108], rax
00000000000113ce         mov        rax, rdi
00000000000113d1         sar        rdi, 0x3f
00000000000113d5         imul       rcx
00000000000113d8         mov        rax, qword [rsi+0x10]
00000000000113dc         mov        rsi, qword [rsi+0x18]
00000000000113e0         mov        qword [rsp+0x138+var_F8], rax
00000000000113e5         mov        rax, rsi
00000000000113e8         sar        rsi, 0x3f
00000000000113ec         sar        rdx, 0x7
00000000000113f0         sub        rdx, rdi
00000000000113f3         mov        qword [rsp+0x138+var_100], rdx
00000000000113f8         imul       rcx
00000000000113fb         mov        rcx, rdx
00000000000113fe         sar        rcx, 0x7
0000000000011402         sub        rcx, rsi
0000000000011405         mov        qword [rsp+0x138+var_F0], rcx

                     loc_1140a:
000000000001140a         test       ebx, ebx                                    ; CODE XREF=fdutimens+867
000000000001140c         mov        rdx, r13
000000000001140f         js         loc_115e8

0000000000011415         xor        esi, esi                                    ; argument "__file" for method j_futimesat
0000000000011417         mov        edi, ebx                                    ; argument "__fd" for method j_futimesat
0000000000011419         call       j_futimesat                                 ; futimesat
000000000001141e         test       eax, eax
0000000000011420         mov        ebp, eax
0000000000011422         jne        loc_11620

0000000000011428         test       r13, r13
000000000001142b         je         loc_115f7

0000000000011431         cmp        qword [r13+8], 0x7a11f
0000000000011439         setg       r12b
000000000001143d         cmp        qword [r13+0x18], 0x7a11f
0000000000011445         setg       r14b
0000000000011449         test       r12b, r12b
000000000001144c         jne        loc_11457

000000000001144e         test       r14b, r14b
0000000000011451         je         loc_115f7

                     loc_11457:
0000000000011457         lea        rdx, qword [rsp+0x138+var_C8]               ; argument "__stat_buf" for method j___fxstat, CODE XREF=fdutimens+364
000000000001145c         mov        esi, ebx                                    ; argument "__fildes" for method j___fxstat
000000000001145e         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
0000000000011463         call       j___fxstat                                  ; __fxstat
0000000000011468         test       eax, eax
000000000001146a         jne        loc_115f7

0000000000011470         mov        rdx, qword [rsp+0x138+var_70]
0000000000011478         sub        rdx, qword [r13+0x10]
000000000001147c         mov        rax, qword [rsp+0x138+var_80]
0000000000011484         sub        rax, qword [r13]
0000000000011488         movdqa     xmm0, xmmword [r13]
000000000001148e         cmp        rdx, 0x1
0000000000011492         sete       dl
0000000000011495         movaps     xmmword [rsp+0x138+var_E8], xmm0
000000000001149a         and        r14d, edx
000000000001149d         cmp        rax, 0x1
00000000000114a1         movdqa     xmm0, xmmword [r13+0x10]
00000000000114a7         movaps     xmmword [rsp+0x138+var_D8], xmm0
00000000000114ac         jne        loc_11700

00000000000114b2         test       r12b, r12b
00000000000114b5         je         loc_11700

00000000000114bb         cmp        qword [rsp+0x138+var_78], 0x0
00000000000114c4         jne        loc_11700

00000000000114ca         test       r14b, r14b
00000000000114cd         mov        qword [rsp+0x138+var_E0], 0x0
00000000000114d6         je         loc_114e7

00000000000114d8         cmp        qword [rsp+0x138+var_68], 0x0
00000000000114e1         je         loc_11718

                     loc_114e7:
00000000000114e7         lea        rdx, qword [rsp+0x138+var_E8]               ; argument "__tvp" for method j_futimesat, CODE XREF=fdutimens+502, fdutimens+1089
00000000000114ec         xor        esi, esi                                    ; argument "__file" for method j_futimesat
00000000000114ee         mov        edi, ebx                                    ; argument "__fd" for method j_futimesat
00000000000114f0         call       j_futimesat                                 ; futimesat

                     loc_114f5:
00000000000114f5         xor        ebp, ebp                                    ; CODE XREF=fdutimens+1059, fdutimens+1074
00000000000114f7         jmp        loc_115f7
00000000000114fc         align      256

                     loc_11500:
0000000000011500         cmp        r13d, 0x3                                   ; CODE XREF=fdutimens+191
0000000000011504         je         loc_1152c

0000000000011506         test       ebx, ebx
0000000000011508         lea        rdx, qword [rsp+0x138+var_C8]
000000000001150d         js         loc_11650

0000000000011513         mov        esi, ebx                                    ; argument "__fildes" for method j___fxstat
0000000000011515         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
000000000001151a         call       j___fxstat                                  ; __fxstat
000000000001151f         test       eax, eax
0000000000011521         setne      al

                     loc_11524:
0000000000011524         test       al, al                                      ; CODE XREF=fdutimens+898
0000000000011526         jne        loc_116f3

                     loc_1152c:
000000000001152c         cmp        qword [rsp+0x138+var_130], 0x0              ; CODE XREF=fdutimens+548
0000000000011532         je         loc_11640

0000000000011538         lea        rsi, qword [rsp+0x138+var_130]
000000000001153d         lea        rdi, qword [rsp+0x138+var_C8]
0000000000011542         xor        ebp, ebp
0000000000011544         call       update_timespec                             ; update_timespec
0000000000011549         test       al, al
000000000001154b         je         loc_113a5

0000000000011551         jmp        loc_115f7
0000000000011556         align      32

                     loc_11560:
0000000000011560         test       ebx, ebx                                    ; CODE XREF=fdutimens+120
0000000000011562         lea        rdx, qword [rsp+0x138+var_C8]
0000000000011567         js         loc_11670

000000000001156d         mov        esi, ebx                                    ; argument "__fildes" for method j___fxstat
000000000001156f         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
0000000000011574         call       j___fxstat                                  ; __fxstat
0000000000011579         test       eax, eax
000000000001157b         setne      al

                     loc_1157e:
000000000001157e         test       al, al                                      ; CODE XREF=fdutimens+930
0000000000011580         jne        loc_116f3

0000000000011586         mov        rsi, qword [rsp+0x138+var_130]
000000000001158b         cmp        qword [rsi+8], 0x3ffffffe
0000000000011593         je         loc_116c0

0000000000011599         cmp        qword [rsi+0x18], 0x3ffffffe
00000000000115a1         mov        r13d, 0x3
00000000000115a7         jne        loc_11363

00000000000115ad         mov        rax, qword [rsp+0x138+var_68]
00000000000115b5         mov        rdx, qword [rsp+0x138+var_70]
00000000000115bd         mov        qword [rsi+0x18], rax
00000000000115c1         mov        qword [rsi+0x10], rdx
00000000000115c5         jmp        loc_11363
00000000000115ca         align      16

                     loc_115d0:
00000000000115d0         mov        qword [rsp+0x138+var_130], 0x0              ; CODE XREF=fdutimens+42
00000000000115d9         xor        r13d, r13d
00000000000115dc         jmp        loc_1133d
00000000000115e1         align      8

                     loc_115e8:
00000000000115e8         mov        rsi, r12                                    ; argument "__file" for method j_futimesat, CODE XREF=fdutimens+303
00000000000115eb         mov        edi, 0xffffff9c                             ; argument "__fd" for method j_futimesat
00000000000115f0         call       j_futimesat                                 ; futimesat
00000000000115f5         mov        ebp, eax

                     loc_115f7:
00000000000115f7         mov        rcx, qword [rsp+0x138+var_30]               ; CODE XREF=fdutimens+331, fdutimens+369, fdutimens+394, fdutimens+535, fdutimens+625, fdutimens+840, fdutimens+855, fdutimens+985, fdutimens+1048
00000000000115ff         xor        rcx, qword [fs:0x28]
0000000000011608         mov        eax, ebp
000000000001160a         jne        loc_11726

0000000000011610         add        rsp, 0x110
0000000000011617         pop        rbx
0000000000011618         pop        rbp
0000000000011619         pop        r12
000000000001161b         pop        r13
000000000001161d         pop        r14
000000000001161f         ret
                        ; endp

                     loc_11620:
0000000000011620         test       r12, r12                                    ; CODE XREF=fdutimens+322
0000000000011623         mov        ebp, 0xffffffff
0000000000011628         je         loc_115f7

000000000001162a         mov        rsi, r13                                    ; argument "__tvp" for method j_utimes
000000000001162d         mov        rdi, r12                                    ; argument "__file" for method j_utimes
0000000000011630         call       j_utimes                                    ; utimes
0000000000011635         mov        ebp, eax
0000000000011637         jmp        loc_115f7
0000000000011639         align      64

                     loc_11640:
0000000000011640         xor        r13d, r13d                                  ; CODE XREF=fdutimens+205, fdutimens+594
0000000000011643         jmp        loc_1140a
0000000000011648         align      16

                     loc_11650:
0000000000011650         mov        rsi, r12                                    ; argument "__filename" for method j___xstat, CODE XREF=fdutimens+557
0000000000011653         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000011658         call       j___xstat                                   ; __xstat
000000000001165d         test       eax, eax
000000000001165f         setne      al
0000000000011662         jmp        loc_11524
0000000000011667         align      16

                     loc_11670:
0000000000011670         mov        rsi, r12                                    ; argument "__filename" for method j___xstat, CODE XREF=fdutimens+647
0000000000011673         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000011678         call       j___xstat                                   ; __xstat
000000000001167d         test       eax, eax
000000000001167f         setne      al
0000000000011682         jmp        loc_1157e
0000000000011687         align      16

                     loc_11690:
0000000000011690         xor        ecx, ecx                                    ; argument "__flags" for method j_utimensat, CODE XREF=fdutimens+133
0000000000011692         mov        rdx, rsi                                    ; argument "__times" for method j_utimensat
0000000000011695         mov        edi, 0xffffff9c                             ; argument "__fd" for method j_utimensat
000000000001169a         mov        rsi, r12                                    ; argument "__path" for method j_utimensat
000000000001169d         call       j_utimensat                                 ; utimensat
00000000000116a2         cmp        eax, 0x0
00000000000116a5         mov        ebp, eax
00000000000116a7         jg         loc_1137d

                     loc_116ad:
00000000000116ad         jne        loc_1172b                                   ; CODE XREF=fdutimens+151

                     loc_116af:
00000000000116af         mov        dword [utimensat_works_really], 0x1         ; utimensat_works_really, CODE XREF=fdutimens+1107
00000000000116b9         jmp        loc_115f7
00000000000116be         align      64

                     loc_116c0:
00000000000116c0         mov        rax, qword [rsp+0x138+var_78]               ; CODE XREF=fdutimens+691
00000000000116c8         mov        rdx, qword [rsp+0x138+var_80]
00000000000116d0         mov        r13d, 0x3
00000000000116d6         mov        qword [rsi], rdx
00000000000116d9         mov        qword [rsi+8], rax
00000000000116dd         jmp        loc_11363
00000000000116e2         align      8

                     loc_116e8:
00000000000116e8         call       j___errno_location                          ; __errno_location, CODE XREF=fdutimens+100
00000000000116ed         mov        dword [rax], 0x9

                     loc_116f3:
00000000000116f3         mov        ebp, 0xffffffff                             ; CODE XREF=fdutimens+87, fdutimens+582, fdutimens+672
00000000000116f8         jmp        loc_115f7
00000000000116fd         align      256

                     loc_11700:
0000000000011700         test       r14b, r14b                                  ; CODE XREF=fdutimens+460, fdutimens+469, fdutimens+484
0000000000011703         je         loc_114f5

0000000000011709         cmp        qword [rsp+0x138+var_68], 0x0
0000000000011712         jne        loc_114f5

                     loc_11718:
0000000000011718         mov        qword [rsp+0x138+var_D0], 0x0               ; CODE XREF=fdutimens+513
0000000000011721         jmp        loc_114e7

                     loc_11726:
0000000000011726         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=fdutimens+810
                        ; endp

                     loc_1172b:
000000000001172b         call       j___errno_location                          ; __errno_location, CODE XREF=loc_116ad
0000000000011730         cmp        dword [rax], 0x26
0000000000011733         jne        loc_116af

0000000000011739         jmp        loc_11388
000000000001173e         align      64                                          ; End of unwind block (FDE at 0x1b804)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     utimens:
0000000000011740         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x1b84c), CODE XREF=install_file_in_file+304, copy_internal+9760
0000000000011743         mov        rsi, rdi
0000000000011746         mov        edi, 0xffffffff
000000000001174b         jmp        fdutimens                                   ; fdutimens
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_A0: int32_t, -160
        ;    var_B8: int8_t, -184
        ;    var_C8: -200
        ;    var_D8: int8_t, -216
        ;    var_E0: int64_t, -224


                     lutimens:
0000000000011750         push       r12                                         ; End of unwind block (FDE at 0x1b84c), Begin of unwind block (FDE at 0x1b860), CODE XREF=copy_internal+1655
0000000000011752         push       rbp
0000000000011753         mov        r12, rdi
0000000000011756         push       rbx
0000000000011757         sub        rsp, 0xd0
000000000001175e         mov        rax, qword [fs:0x28]
0000000000011767         mov        qword [rsp+0xe8+var_20], rax
000000000001176f         xor        eax, eax
0000000000011771         test       rsi, rsi
0000000000011774         je         loc_11870

000000000001177a         movdqu     xmm0, xmmword [rsi]
000000000001177e         lea        rdi, qword [rsp+0xe8+var_D8]
0000000000011783         movaps     xmmword [rsp+0xe8+var_D8], xmm0
0000000000011788         mov        qword [rsp+0xe8+var_E0], rdi
000000000001178d         movdqu     xmm0, xmmword [rsi+0x10]
0000000000011792         movaps     xmmword [rsp+0xe8+var_C8], xmm0
0000000000011797         call       validate_timespec                           ; validate_timespec
000000000001179c         test       eax, eax
000000000001179e         mov        ebx, eax
00000000000117a0         js         loc_118b0

00000000000117a6         mov        eax, dword [lutimensat_works_really]        ; lutimensat_works_really
00000000000117ac         test       eax, eax
00000000000117ae         js         loc_117e6

00000000000117b0         cmp        ebx, 0x2
00000000000117b3         je         loc_118e0

00000000000117b9         mov        rdx, qword [rsp+0xe8+var_E0]

                     loc_117be:
00000000000117be         mov        ecx, 0x100                                  ; argument "__flags" for method j_utimensat, CODE XREF=lutimens+309, lutimens+450, lutimens+480, lutimens+561
00000000000117c3         mov        rsi, r12                                    ; argument "__path" for method j_utimensat
00000000000117c6         mov        edi, 0xffffff9c                             ; argument "__fd" for method j_utimensat
00000000000117cb         call       j_utimensat                                 ; utimensat
00000000000117d0         cmp        eax, 0x0
00000000000117d3         mov        ebp, eax
00000000000117d5         jle        loc_118c0

00000000000117db         call       j___errno_location                          ; __errno_location
00000000000117e0         mov        dword [rax], 0x26

                     loc_117e6:
00000000000117e6         test       ebx, ebx                                    ; CODE XREF=lutimens+94, lutimens+601
00000000000117e8         mov        dword [lutimensat_works_really], 0xffffffff ; lutimensat_works_really
00000000000117f2         je         loc_11895

00000000000117f8         cmp        ebx, 0x3
00000000000117fb         jne        loc_11938

0000000000011801         cmp        qword [rsp+0xe8+var_E0], 0x0
0000000000011807         je         loc_11820

                     loc_11809:
0000000000011809         lea        rsi, qword [rsp+0xe8+var_E0]                ; CODE XREF=lutimens+520
000000000001180e         lea        rdi, qword [rsp+0xe8+var_B8]
0000000000011813         xor        ebp, ebp
0000000000011815         call       update_timespec                             ; update_timespec
000000000001181a         test       al, al
000000000001181c         jne        loc_11848

000000000001181e         nop

                     loc_11820:
0000000000011820         mov        eax, dword [rsp+0xe8+var_A0]                ; CODE XREF=lutimens+183, lutimens+345, lutimens+526
0000000000011824         and        eax, 0xf000
0000000000011829         cmp        eax, 0xa000
000000000001182e         je         loc_11986

0000000000011834         mov        rdx, qword [rsp+0xe8+var_E0]
0000000000011839         mov        rsi, r12
000000000001183c         mov        edi, 0xffffffff
0000000000011841         call       fdutimens                                   ; fdutimens
0000000000011846         mov        ebp, eax

                     loc_11848:
0000000000011848         mov        rcx, qword [rsp+0xe8+var_20]                ; CODE XREF=lutimens+204, lutimens+357, lutimens+394
0000000000011850         xor        rcx, qword [fs:0x28]
0000000000011859         mov        eax, ebp
000000000001185b         jne        loc_11996

0000000000011861         add        rsp, 0xd0
0000000000011868         pop        rbx
0000000000011869         pop        rbp
000000000001186a         pop        r12
000000000001186c         ret
                        ; endp
000000000001186d         align      16

                     loc_11870:
0000000000011870         mov        ecx, dword [lutimensat_works_really]        ; lutimensat_works_really, CODE XREF=lutimens+36
0000000000011876         xor        edx, edx
0000000000011878         xor        ebx, ebx
000000000001187a         mov        qword [rsp+0xe8+var_E0], 0x0
0000000000011883         test       ecx, ecx
0000000000011885         jns        loc_117be

000000000001188b         mov        dword [lutimensat_works_really], 0xffffffff ; lutimensat_works_really

                     loc_11895:
0000000000011895         lea        rdx, qword [rsp+0xe8+var_B8]                ; argument "__stat_buf" for method j___lxstat, CODE XREF=lutimens+162
000000000001189a         mov        rsi, r12                                    ; argument "__filename" for method j___lxstat
000000000001189d         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
00000000000118a2         call       j___lxstat                                  ; __lxstat
00000000000118a7         test       eax, eax
00000000000118a9         je         loc_11820

00000000000118af         nop

                     loc_118b0:
00000000000118b0         mov        ebp, 0xffffffff                             ; CODE XREF=lutimens+80, lutimens+420, lutimens+508, lutimens+577
00000000000118b5         jmp        loc_11848
00000000000118b7         align      64

                     loc_118c0:
00000000000118c0         jne        loc_1199b                                   ; CODE XREF=lutimens+133

                     loc_118c6:
00000000000118c6         mov        dword [utimensat_works_really], 0x1         ; utimensat_works_really, CODE XREF=lutimens+595
00000000000118d0         mov        dword [lutimensat_works_really], 0x1        ; lutimensat_works_really
00000000000118da         jmp        loc_11848
00000000000118df         align      32

                     loc_118e0:
00000000000118e0         lea        rdx, qword [rsp+0xe8+var_B8]                ; argument "__stat_buf" for method j___lxstat, CODE XREF=lutimens+99
00000000000118e5         mov        rsi, r12                                    ; argument "__filename" for method j___lxstat
00000000000118e8         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
00000000000118ed         call       j___lxstat                                  ; __lxstat
00000000000118f2         test       eax, eax
00000000000118f4         jne        loc_118b0

00000000000118f6         mov        rdx, qword [rsp+0xe8+var_E0]
00000000000118fb         cmp        qword [rdx+8], 0x3ffffffe
0000000000011903         je         loc_11968

0000000000011905         cmp        qword [rdx+0x18], 0x3ffffffe
000000000001190d         mov        ebx, 0x3
0000000000011912         jne        loc_117be

0000000000011918         mov        rax, qword [rsp+0xe8+var_58]
0000000000011920         mov        rcx, qword [rsp+0xe8+var_60]
0000000000011928         mov        qword [rdx+0x18], rax
000000000001192c         mov        qword [rdx+0x10], rcx
0000000000011930         jmp        loc_117be
0000000000011935         align      8

                     loc_11938:
0000000000011938         lea        rdx, qword [rsp+0xe8+var_B8]                ; argument "__stat_buf" for method j___lxstat, CODE XREF=lutimens+171
000000000001193d         mov        rsi, r12                                    ; argument "__filename" for method j___lxstat
0000000000011940         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
0000000000011945         call       j___lxstat                                  ; __lxstat
000000000001194a         test       eax, eax
000000000001194c         jne        loc_118b0

0000000000011952         cmp        qword [rsp+0xe8+var_E0], 0x0
0000000000011958         jne        loc_11809

000000000001195e         jmp        loc_11820
0000000000011963         align      8

                     loc_11968:
0000000000011968         mov        rax, qword [rsp+0xe8+var_68]                ; CODE XREF=lutimens+435
0000000000011970         mov        rcx, qword [rsp+0xe8+var_70]
0000000000011975         mov        ebx, 0x3
000000000001197a         mov        qword [rdx], rcx
000000000001197d         mov        qword [rdx+8], rax
0000000000011981         jmp        loc_117be

                     loc_11986:
0000000000011986         call       j___errno_location                          ; __errno_location, CODE XREF=lutimens+222
000000000001198b         mov        dword [rax], 0x26
0000000000011991         jmp        loc_118b0

                     loc_11996:
0000000000011996         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=lutimens+267
                        ; endp

                     loc_1199b:
000000000001199b         call       j___errno_location                          ; __errno_location, CODE XREF=loc_118c0
00000000000119a0         cmp        dword [rax], 0x26
00000000000119a3         jne        loc_118c6

00000000000119a9         jmp        loc_117e6
00000000000119ae         align      16                                          ; End of unwind block (FDE at 0x1b860)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
00000000000119b0         push       r15                                         ; Begin of unwind block (FDE at 0x1b89c), CODE XREF=j_version_etc_arn, version_etc_va+75, version_etc+161
00000000000119b2         push       r14
00000000000119b4         push       r13
00000000000119b6         push       r12
00000000000119b8         mov        r12, r9
00000000000119bb         push       rbp
00000000000119bc         push       rbx
00000000000119bd         mov        rbp, rdi
00000000000119c0         mov        rbx, r8
00000000000119c3         sub        rsp, 0x28
00000000000119c7         test       rsi, rsi
00000000000119ca         je         loc_11ae8

00000000000119d0         mov        r8, rdx
00000000000119d3         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
00000000000119da         mov        r9, rcx
00000000000119dd         xor        eax, eax
00000000000119df         mov        rcx, rsi
00000000000119e2         mov        esi, 0x1
00000000000119e7         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_119ec:
00000000000119ec         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x18992, CODE XREF=version_etc_arn+337
00000000000119f3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000119f5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000119fa         call       j_dcgettext                                 ; dcgettext
00000000000119ff         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000011a06         mov        rcx, rax
0000000000011a09         mov        r8d, 0x7e3
0000000000011a0f         mov        esi, 0x1
0000000000011a14         mov        rdi, rbp
0000000000011a17         xor        eax, eax
0000000000011a19         call       j___fprintf_chk                             ; __fprintf_chk
0000000000011a1e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000011a25         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000011a27         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000011a2c         call       j_dcgettext                                 ; dcgettext
0000000000011a31         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000011a34         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000011a37         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000011a3c         cmp        r12, 0x9
0000000000011a40         ja         loc_11d80

0000000000011a46         lea        rdx, qword [switch_table_18c74]             ; switch_table_18c74
0000000000011a4d         movsxd     rax, dword [rdx+r12*4]
0000000000011a51         add        rax, rdx
0000000000011a54         jmp        rax                                         ; switch statement using table at 0x18c74, with 10 cases, 0x11a60,0x11ad6,0x11b10,0x11b68,0x11ba8,0x11bf0,0x11c40,0x11c98,0x11cc8,0x11d30
0000000000011a56         align      32

                     loc_11a60:
0000000000011a60         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000011a64         mov        rax, qword [rbx+0x10]
0000000000011a68         lea        rsi, qword [aWrittenBySSSns_18b88]          ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
0000000000011a6f         mov        r8, qword [rbx+8]
0000000000011a73         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000011a78         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000011a7a         mov        r13, qword [rbx+0x30]
0000000000011a7e         mov        r12, qword [rbx+0x28]
0000000000011a82         mov        qword [rsp+0x58+var_48], r9
0000000000011a87         mov        r15, qword [rbx+0x20]
0000000000011a8b         mov        r14, qword [rbx+0x18]
0000000000011a8f         mov        qword [rsp+0x58+var_58], rax
0000000000011a93         mov        qword [rsp+0x58+var_50], r8
0000000000011a98         mov        rbx, qword [rbx]
0000000000011a9b         call       j_dcgettext                                 ; dcgettext
0000000000011aa0         sub        rsp, 0x8

                     loc_11aa4:
0000000000011aa4         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000011aa9         mov        rdx, rax
0000000000011aac         mov        rcx, rbx
0000000000011aaf         mov        esi, 0x1
0000000000011ab4         mov        rdi, rbp
0000000000011ab7         xor        eax, eax
0000000000011ab9         push       r9
0000000000011abb         push       r13
0000000000011abd         push       r12
0000000000011abf         push       r15
0000000000011ac1         push       r14
0000000000011ac3         mov        r9, qword [rsp+0x88+var_58]
0000000000011ac8         mov        r8, qword [rsp+0x88+var_50]
0000000000011acd         call       j___fprintf_chk                             ; __fprintf_chk
0000000000011ad2         add        rsp, 0x30

                     loc_11ad6:
0000000000011ad6         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
0000000000011ada         pop        rbx
0000000000011adb         pop        rbp
0000000000011adc         pop        r12
0000000000011ade         pop        r13
0000000000011ae0         pop        r14
0000000000011ae2         pop        r15
0000000000011ae4         ret
                        ; endp
0000000000011ae5         align      8

                     loc_11ae8:
0000000000011ae8         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
0000000000011aeb         mov        rcx, rdx
0000000000011aee         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000011af5         mov        esi, 0x1
0000000000011afa         xor        eax, eax
0000000000011afc         call       j___fprintf_chk                             ; __fprintf_chk
0000000000011b01         jmp        loc_119ec
0000000000011b06         align      16

                     loc_11b10:
0000000000011b10         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000011b14         mov        r9, qword [rbx+0x38]
0000000000011b18         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
0000000000011b1f         mov        rax, qword [rbx+0x10]
0000000000011b23         mov        r8, qword [rbx+8]
0000000000011b27         mov        edx, 0x5
0000000000011b2c         mov        r13, qword [rbx+0x30]
0000000000011b30         mov        r12, qword [rbx+0x28]
0000000000011b34         mov        r15, qword [rbx+0x20]
0000000000011b38         mov        r14, qword [rbx+0x18]
0000000000011b3c         mov        rbx, qword [rbx]
0000000000011b3f         mov        qword [rsp+0x58+var_40], r10
0000000000011b44         mov        qword [rsp+0x58+var_48], r9
0000000000011b49         mov        qword [rsp+0x58+var_58], rax
0000000000011b4d         mov        qword [rsp+0x58+var_50], r8

                     loc_11b52:
0000000000011b52         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000011b54         call       j_dcgettext                                 ; dcgettext
0000000000011b59         mov        r10, qword [rsp+0x58+var_40]
0000000000011b5e         push       r10
0000000000011b60         jmp        loc_11aa4
0000000000011b65         align      8

                     loc_11b68:
0000000000011b68         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
0000000000011b6b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000011b72         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000011b77         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000011b79         call       j_dcgettext                                 ; dcgettext
0000000000011b7e         add        rsp, 0x28
0000000000011b82         mov        rcx, rbx
0000000000011b85         mov        rdi, rbp
0000000000011b88         pop        rbx
0000000000011b89         pop        rbp
0000000000011b8a         pop        r12
0000000000011b8c         pop        r13
0000000000011b8e         pop        r14
0000000000011b90         pop        r15
0000000000011b92         mov        rdx, rax
0000000000011b95         mov        esi, 0x1
0000000000011b9a         xor        eax, eax
0000000000011b9c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000011ba1         align      8

                     loc_11ba8:
0000000000011ba8         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
0000000000011bac         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000011bb3         mov        rbx, qword [rbx]
0000000000011bb6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000011bbb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000011bbd         call       j_dcgettext                                 ; dcgettext
0000000000011bc2         add        rsp, 0x28
0000000000011bc6         mov        r8, r12
0000000000011bc9         mov        rcx, rbx
0000000000011bcc         mov        rdi, rbp
0000000000011bcf         mov        rdx, rax
0000000000011bd2         mov        esi, 0x1
0000000000011bd7         pop        rbx
0000000000011bd8         pop        rbp
0000000000011bd9         pop        r12
0000000000011bdb         pop        r13
0000000000011bdd         pop        r14
0000000000011bdf         pop        r15
0000000000011be1         xor        eax, eax
0000000000011be3         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000011be8         align      16

                     loc_11bf0:
0000000000011bf0         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000011bf4         mov        r12, qword [rbx+8]
0000000000011bf8         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
0000000000011bff         mov        rbx, qword [rbx]
0000000000011c02         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000011c07         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000011c09         call       j_dcgettext                                 ; dcgettext
0000000000011c0e         add        rsp, 0x28
0000000000011c12         mov        r9, r13
0000000000011c15         mov        r8, r12
0000000000011c18         mov        rcx, rbx
0000000000011c1b         mov        rdi, rbp
0000000000011c1e         mov        rdx, rax
0000000000011c21         pop        rbx
0000000000011c22         pop        rbp
0000000000011c23         pop        r12
0000000000011c25         pop        r13
0000000000011c27         pop        r14
0000000000011c29         pop        r15
0000000000011c2b         mov        esi, 0x1
0000000000011c30         xor        eax, eax
0000000000011c32         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000011c37         align      64

                     loc_11c40:
0000000000011c40         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000011c47         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000011c4c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000011c4e         mov        r14, qword [rbx+0x18]
0000000000011c52         mov        r13, qword [rbx+0x10]
0000000000011c56         mov        r12, qword [rbx+8]
0000000000011c5a         mov        rbx, qword [rbx]
0000000000011c5d         call       j_dcgettext                                 ; dcgettext
0000000000011c62         sub        rsp, 0x8

                     loc_11c66:
0000000000011c66         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000011c68         mov        rdx, rax
0000000000011c6b         mov        r9, r13
0000000000011c6e         mov        r8, r12
0000000000011c71         mov        rcx, rbx
0000000000011c74         mov        rdi, rbp
0000000000011c77         mov        esi, 0x1
0000000000011c7c         xor        eax, eax
0000000000011c7e         call       j___fprintf_chk                             ; __fprintf_chk
0000000000011c83         pop        rax
0000000000011c84         pop        rdx
0000000000011c85         add        rsp, 0x28
0000000000011c89         pop        rbx
0000000000011c8a         pop        rbp
0000000000011c8b         pop        r12
0000000000011c8d         pop        r13
0000000000011c8f         pop        r14
0000000000011c91         pop        r15
0000000000011c93         ret
                        ; endp
0000000000011c94         align      8

                     loc_11c98:
0000000000011c98         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
0000000000011c9c         lea        rsi, qword [aWrittenBySSSns_18b08]          ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000011ca3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000011ca8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000011caa         mov        r14, qword [rbx+0x18]
0000000000011cae         mov        r13, qword [rbx+0x10]
0000000000011cb2         mov        r12, qword [rbx+8]
0000000000011cb6         mov        rbx, qword [rbx]
0000000000011cb9         call       j_dcgettext                                 ; dcgettext
0000000000011cbe         push       r15
0000000000011cc0         jmp        loc_11c66
0000000000011cc2         align      8

                     loc_11cc8:
0000000000011cc8         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
0000000000011ccc         mov        r12, qword [rbx+0x28]
0000000000011cd0         lea        rsi, qword [aWrittenBySSSns_18b30]          ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000011cd7         mov        r15, qword [rbx+0x20]
0000000000011cdb         mov        r14, qword [rbx+0x18]
0000000000011cdf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000011ce4         mov        r13, qword [rbx+0x10]
0000000000011ce8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000011cea         mov        rbx, qword [rbx]
0000000000011ced         mov        qword [rsp+0x58+var_58], r8
0000000000011cf1         call       j_dcgettext                                 ; dcgettext
0000000000011cf6         sub        rsp, 0x8
0000000000011cfa         mov        r9, r13
0000000000011cfd         push       r12
0000000000011cff         push       r15
0000000000011d01         push       r14

                     loc_11d03:
0000000000011d03         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000011d08         mov        rcx, rbx
0000000000011d0b         mov        rdx, rax
0000000000011d0e         mov        rdi, rbp
0000000000011d11         mov        esi, 0x1
0000000000011d16         xor        eax, eax
0000000000011d18         call       j___fprintf_chk                             ; __fprintf_chk
0000000000011d1d         add        rsp, 0x20
0000000000011d21         add        rsp, 0x28
0000000000011d25         pop        rbx
0000000000011d26         pop        rbp
0000000000011d27         pop        r12
0000000000011d29         pop        r13
0000000000011d2b         pop        r14
0000000000011d2d         pop        r15
0000000000011d2f         ret
                        ; endp

                     loc_11d30:
0000000000011d30         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000011d34         mov        r13, qword [rbx+0x30]
0000000000011d38         lea        rsi, qword [aWrittenBySSSns_18b58]          ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
0000000000011d3f         mov        r12, qword [rbx+0x28]
0000000000011d43         mov        r15, qword [rbx+0x20]
0000000000011d47         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000011d4c         mov        r14, qword [rbx+0x18]
0000000000011d50         mov        r8, qword [rbx+8]
0000000000011d54         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000011d56         mov        qword [rsp+0x58+var_50], r9
0000000000011d5b         mov        rbx, qword [rbx]
0000000000011d5e         mov        qword [rsp+0x58+var_58], r8
0000000000011d62         call       j_dcgettext                                 ; dcgettext
0000000000011d67         push       r13
0000000000011d69         push       r12
0000000000011d6b         push       r15
0000000000011d6d         push       r14
0000000000011d6f         mov        r9, qword [rsp+0x78+var_50]
0000000000011d74         jmp        loc_11d03
0000000000011d76         align      128

                     loc_11d80:
0000000000011d80         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000011d84         mov        r9, qword [rbx+0x38]
0000000000011d88         mov        edx, 0x5
0000000000011d8d         mov        rax, qword [rbx+0x10]
0000000000011d91         mov        r8, qword [rbx+8]
0000000000011d95         lea        rsi, qword [aWrittenBySSSns_18bf0]          ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
0000000000011d9c         mov        r13, qword [rbx+0x30]
0000000000011da0         mov        r12, qword [rbx+0x28]
0000000000011da4         mov        r15, qword [rbx+0x20]
0000000000011da8         mov        r14, qword [rbx+0x18]
0000000000011dac         mov        qword [rsp+0x58+var_40], r10
0000000000011db1         mov        qword [rsp+0x58+var_48], r9
0000000000011db6         mov        qword [rsp+0x58+var_58], rax
0000000000011dba         mov        qword [rsp+0x58+var_50], r8
0000000000011dbf         mov        rbx, qword [rbx]
0000000000011dc2         jmp        loc_11b52
0000000000011dc7         align      16                                          ; End of unwind block (FDE at 0x1b89c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000011dd0         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x1b9b0)
0000000000011dd3         cmp        qword [r8], 0x0
0000000000011dd7         je         j_version_etc_arn                           ; version_etc_arn

0000000000011dd9         nop        dword [rax]

                     loc_11de0:
0000000000011de0         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000011de4         cmp        qword [r8+r9*8], 0x0
0000000000011de9         jne        loc_11de0

                     j_version_etc_arn:        // version_etc_arn
0000000000011deb         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000011df0         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x1b9b0), Begin of unwind block (FDE at 0x1b9c4)
0000000000011df4         mov        r10, r8
0000000000011df7         xor        r9d, r9d
0000000000011dfa         mov        rax, qword [fs:0x28]
0000000000011e03         mov        qword [rsp+0x68+var_10], rax
0000000000011e08         xor        eax, eax
0000000000011e0a         mov        r8, rsp
0000000000011e0d         nop        dword [rax]

                     loc_11e10:
0000000000011e10         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000011e13         cmp        eax, 0x2f
0000000000011e16         ja         loc_11e5a

0000000000011e18         mov        r11d, eax
0000000000011e1b         add        r11, qword [r10+0x10]
0000000000011e1f         add        eax, 0x8
0000000000011e22         mov        dword [r10], eax

                     loc_11e25:
0000000000011e25         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000011e28         test       rax, rax
0000000000011e2b         mov        qword [r8+r9*8], rax
0000000000011e2f         je         loc_11e3b

0000000000011e31         add        r9, 0x1
0000000000011e35         cmp        r9, 0xa
0000000000011e39         jne        loc_11e10

                     loc_11e3b:
0000000000011e3b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000011e40         mov        rax, qword [rsp+0x68+var_10]
0000000000011e45         xor        rax, qword [fs:0x28]
0000000000011e4e         jne        loc_11e55

0000000000011e50         add        rsp, 0x68
0000000000011e54         ret
                        ; endp

                     loc_11e55:
0000000000011e55         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_11e5a:
0000000000011e5a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
0000000000011e5e         lea        rax, qword [r11+8]
0000000000011e62         mov        qword [r10+8], rax
0000000000011e66         jmp        loc_11e25
0000000000011e68         align      16                                          ; End of unwind block (FDE at 0x1b9c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000011e70         push       rbp                                         ; Begin of unwind block (FDE at 0x1b9e0), CODE XREF=main+868
0000000000011e71         push       rbx
0000000000011e72         mov        r10d, 0x20
0000000000011e78         xor        r11d, r11d
0000000000011e7b         sub        rsp, 0xb8
0000000000011e82         mov        rax, qword [fs:0x28]
0000000000011e8b         mov        qword [rsp+0xc8+var_50], rax
0000000000011e90         xor        eax, eax
0000000000011e92         lea        rax, qword [rsp+0xc8+arg_0]
0000000000011e9a         mov        qword [rsp+0xc8+var_28], r8
0000000000011ea2         lea        rbx, qword [rsp+0xc8+arg_0]
0000000000011eaa         lea        r8, qword [rsp+0xc8+var_A8]
0000000000011eaf         mov        qword [rsp+0xc8+var_20], r9
0000000000011eb7         mov        dword [rsp+0xc8+var_C0], 0x20
0000000000011ebf         mov        qword [rsp+0xc8+var_B8], rax
0000000000011ec4         lea        rax, qword [rsp+0xc8+var_48]
0000000000011ecc         xor        r9d, r9d
0000000000011ecf         mov        qword [rsp+0xc8+var_B0], rax
0000000000011ed4         mov        rbp, rax
0000000000011ed7         nop        word [rax+rax]

                     loc_11ee0:
0000000000011ee0         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000011ee4         ja         loc_11f3c

0000000000011ee6         mov        eax, r10d
0000000000011ee9         mov        r11d, 0x1
0000000000011eef         add        r10d, 0x8
0000000000011ef3         add        rax, rbp

                     loc_11ef6:
0000000000011ef6         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000011ef9         test       rax, rax
0000000000011efc         mov        qword [r8+r9*8], rax
0000000000011f00         je         loc_11f0c

0000000000011f02         add        r9, 0x1
0000000000011f06         cmp        r9, 0xa
0000000000011f0a         jne        loc_11ee0

                     loc_11f0c:
0000000000011f0c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
0000000000011f0f         jne        loc_11f35

                     loc_11f11:
0000000000011f11         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000011f16         mov        rax, qword [rsp+0xc8+var_50]
0000000000011f1b         xor        rax, qword [fs:0x28]
0000000000011f24         jne        loc_11f30

0000000000011f26         add        rsp, 0xb8
0000000000011f2d         pop        rbx
0000000000011f2e         pop        rbp
0000000000011f2f         ret
                        ; endp

                     loc_11f30:
0000000000011f30         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_11f35:
0000000000011f35         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
0000000000011f3a         jmp        loc_11f11

                     loc_11f3c:
0000000000011f3c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
0000000000011f3f         add        rbx, 0x8
0000000000011f43         jmp        loc_11ef6
0000000000011f45         align      16                                          ; End of unwind block (FDE at 0x1b9e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000011f50         push       rbx                                         ; Begin of unwind block (FDE at 0x1ba0c)
0000000000011f51         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000011f58         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000011f5d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000011f5f         call       j_dcgettext                                 ; dcgettext
0000000000011f64         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
0000000000011f6b         mov        rsi, rax
0000000000011f6e         mov        edi, 0x1
0000000000011f73         xor        eax, eax
0000000000011f75         call       j___printf_chk                              ; __printf_chk
0000000000011f7a         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000011f81         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000011f86         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000011f88         call       j_dcgettext                                 ; dcgettext
0000000000011f8d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000011f94         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x16506
0000000000011f9b         mov        rsi, rax
0000000000011f9e         mov        edi, 0x1
0000000000011fa3         xor        eax, eax
0000000000011fa5         call       j___printf_chk                              ; __printf_chk
0000000000011faa         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000011fb1         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000011fb8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000011fba         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000011fbf         call       j_dcgettext                                 ; dcgettext
0000000000011fc4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000011fc7         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000011fca         pop        rbx
0000000000011fcb         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     can_write_any_file:
0000000000011fd0         cmp        byte [initialized.3064], 0x0                ; End of unwind block (FDE at 0x1ba0c), Begin of unwind block (FDE at 0x1ba2c), initialized.3064, CODE XREF=writable_destination+18
0000000000011fd7         je         loc_11fe8

0000000000011fd9         movzx      eax, byte [can_write.3065]                  ; can_write.3065
0000000000011fe0         ret
                        ; endp
0000000000011fe1         align      8

                     loc_11fe8:
0000000000011fe8         sub        rsp, 0x8                                    ; CODE XREF=can_write_any_file+7
0000000000011fec         call       j_geteuid                                   ; geteuid
0000000000011ff1         test       eax, eax
0000000000011ff3         mov        byte [initialized.3064], 0x1                ; initialized.3064
0000000000011ffa         sete       al
0000000000011ffd         mov        byte [can_write.3065], al                   ; can_write.3065
0000000000012003         add        rsp, 0x8
0000000000012007         ret
                        ; endp
0000000000012008         align      16                                          ; End of unwind block (FDE at 0x1ba2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000012010         push       rbx                                         ; Begin of unwind block (FDE at 0x1ba44), CODE XREF=copy_internal+10374, copy_internal+12347, copy_internal+15900, copy_internal+16009, remember_copied+24, record_file+29, mode_compile+123, mode_compile+842, mode_create_from_ref+56, quotearg_n_options+295, quotearg_alloc_mem+129
0000000000012011         mov        rbx, rdi
0000000000012014         call       j_malloc                                    ; malloc
0000000000012019         test       rax, rax
000000000001201c         jne        loc_12023

000000000001201e         test       rbx, rbx
0000000000012021         jne        loc_12025

                     loc_12023:
0000000000012023         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000012024         ret
                        ; endp

                     loc_12025:
0000000000012025         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1202a:
000000000001202a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x1ba44)
                     xnmalloc:
0000000000012030         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x1ba60)
0000000000012033         mul        rsi
0000000000012036         mov        rdi, rax
0000000000012039         seto       al
000000000001203c         test       rdi, rdi
000000000001203f         js         loc_1204b

0000000000012041         movzx      eax, al
0000000000012044         test       rax, rax
0000000000012047         jne        loc_1204b

0000000000012049         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_1204b:
000000000001204b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
000000000001204f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_12054:
0000000000012054         nop                                                    ; End of unwind block (FDE at 0x1ba60)
0000000000012056         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000012060         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x1ba74)
                        ; endp
0000000000012062         align      16                                          ; End of unwind block (FDE at 0x1ba74)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000012070         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x1ba88), CODE XREF=extent_scan_read+224, quotearg_n_options+110, quotearg_n_options+386, streamsavedir+605, streamsavedir+703, streamsavedir+735, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000012073         push       rbx
0000000000012074         mov        rbx, rsi
0000000000012077         jne        loc_1207e

0000000000012079         test       rdi, rdi
000000000001207c         jne        loc_12098

                     loc_1207e:
000000000001207e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000012081         call       j_realloc                                   ; realloc
0000000000012086         test       rax, rax
0000000000012089         jne        loc_12090

000000000001208b         test       rbx, rbx
000000000001208e         jne        loc_120a1

                     loc_12090:
0000000000012090         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000012091         ret
                        ; endp
0000000000012092         align      8

                     loc_12098:
0000000000012098         call       sub_30d0                                    ; sub_30d0, CODE XREF=xrealloc+12
000000000001209d         xor        eax, eax
000000000001209f         pop        rbx
00000000000120a0         ret
                        ; endp

                     loc_120a1:
00000000000120a1         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_120a6:
00000000000120a6         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x1ba88)
                     xnrealloc:
00000000000120b0         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x1baac)
00000000000120b3         mul        rdx
00000000000120b6         mov        rsi, rax
00000000000120b9         seto       al
00000000000120bc         test       rsi, rsi
00000000000120bf         js         loc_120cb

00000000000120c1         movzx      eax, al
00000000000120c4         test       rax, rax
00000000000120c7         jne        loc_120cb

00000000000120c9         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_120cb:
00000000000120cb         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
00000000000120cf         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_120d4:
00000000000120d4         nop                                                    ; End of unwind block (FDE at 0x1baac)
00000000000120d6         nop        word [cs:rax+rax]
                     x2nrealloc:
00000000000120e0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x1bac0)
00000000000120e3         mov        r9, rdx
00000000000120e6         mov        rcx, qword [rsi]
00000000000120e9         je         loc_12120

00000000000120eb         xor        edx, edx
00000000000120ed         movabs     rax, 0x5555555555555554
00000000000120f7         div        r9
00000000000120fa         cmp        rax, rcx
00000000000120fd         jbe        loc_1213b

00000000000120ff         mov        rax, rcx
0000000000012102         shr        rax, 0x1
0000000000012105         lea        rcx, qword [rax+rcx+1]

                     loc_1210a:
000000000001210a         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
000000000001210d         imul       rcx, r9
0000000000012111         mov        rsi, rcx
0000000000012114         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000012119         align      32

                     loc_12120:
0000000000012120         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000012123         je         loc_12148

                     loc_12125:
0000000000012125         mov        rax, rcx                                    ; CODE XREF=sub_12144+28
0000000000012128         mul        r9
000000000001212b         seto       dl
000000000001212e         test       rax, rax
0000000000012131         movzx      edx, dl
0000000000012134         js         loc_1213b

0000000000012136         test       rdx, rdx
0000000000012139         je         loc_1210a

                     loc_1213b:
000000000001213b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
000000000001213f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_12144:
0000000000012144         nop        dword [rax]
                        ; endp

                     loc_12148:
0000000000012148         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
000000000001214a         mov        eax, 0x80
000000000001214f         xor        r8d, r8d
0000000000012152         div        r9
0000000000012155         test       rax, rax
0000000000012158         sete       r8b
000000000001215c         lea        rcx, qword [r8+rax]
0000000000012160         jmp        loc_12125
0000000000012162         align      16                                          ; End of unwind block (FDE at 0x1bac0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000012170         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x1bad8)
0000000000012173         mov        rax, qword [rsi]
0000000000012176         je         loc_121a0

0000000000012178         movabs     rdx, 0x5555555555555553
0000000000012182         cmp        rax, rdx
0000000000012185         ja         loc_121b1

0000000000012187         mov        rdx, rax
000000000001218a         shr        rdx, 0x1
000000000001218d         lea        rax, qword [rdx+rax+1]

                     loc_12192:
0000000000012192         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000012195         mov        rsi, rax
0000000000012198         jmp        xrealloc                                    ; xrealloc
                        ; endp
000000000001219d         align      32

                     loc_121a0:
00000000000121a0         test       rax, rax                                    ; CODE XREF=x2realloc+6
00000000000121a3         mov        edx, 0x80
00000000000121a8         cmove      rax, rdx
00000000000121ac         test       rax, rax
00000000000121af         jns        loc_12192

                     loc_121b1:
00000000000121b1         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
00000000000121b5         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_121ba:
00000000000121ba         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x1bad8)
                     xzalloc:
00000000000121c0         push       rbx                                         ; Begin of unwind block (FDE at 0x1baf0)
00000000000121c1         mov        rbx, rdi
00000000000121c4         call       xmalloc                                     ; xmalloc
00000000000121c9         mov        rdx, rbx                                    ; argument "__n" for method j_memset
00000000000121cc         xor        esi, esi                                    ; argument "__c" for method j_memset
00000000000121ce         mov        rdi, rax                                    ; argument "__s" for method j_memset
00000000000121d1         pop        rbx
00000000000121d2         jmp        j_memset                                    ; memset
                        ; endp
00000000000121d7         align      32                                          ; End of unwind block (FDE at 0x1baf0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
00000000000121e0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x1bb0c)
00000000000121e3         sub        rsp, 0x8
00000000000121e7         mul        rsi
00000000000121ea         seto       dl
00000000000121ed         test       rax, rax
00000000000121f0         js         loc_12209

00000000000121f2         movzx      edx, dl
00000000000121f5         test       rdx, rdx
00000000000121f8         jne        loc_12209

00000000000121fa         call       j_calloc                                    ; calloc
00000000000121ff         test       rax, rax
0000000000012202         je         loc_12209

0000000000012204         add        rsp, 0x8
0000000000012208         ret
                        ; endp

                     loc_12209:
0000000000012209         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1220e:
000000000001220e         nop                                                    ; End of unwind block (FDE at 0x1bb0c)
                        ; endp

                     xmemdup:
0000000000012210         push       rbp                                         ; Begin of unwind block (FDE at 0x1bb28), CODE XREF=clone_quoting_options+40, xstrdup+17
0000000000012211         push       rbx
0000000000012212         mov        rbp, rdi
0000000000012215         mov        rdi, rsi
0000000000012218         mov        rbx, rsi
000000000001221b         sub        rsp, 0x8
000000000001221f         call       xmalloc                                     ; xmalloc
0000000000012224         add        rsp, 0x8
0000000000012228         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
000000000001222b         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
000000000001222e         pop        rbx
000000000001222f         pop        rbp
0000000000012230         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000012233         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000012238         align      64                                          ; End of unwind block (FDE at 0x1bb28)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000012240         push       rbx                                         ; Begin of unwind block (FDE at 0x1bb50), CODE XREF=main+648, remember_copied+35, record_file+40, streamsavedir+230
0000000000012241         mov        rbx, rdi
0000000000012244         call       j_strlen                                    ; strlen
0000000000012249         mov        rdi, rbx
000000000001224c         lea        rsi, qword [rax+1]
0000000000012250         pop        rbx
0000000000012251         jmp        xmemdup                                     ; xmemdup
0000000000012253         align      32                                          ; End of unwind block (FDE at 0x1bb50)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000012260         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x1bb6c), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=remember_copied+116, hash_init+54, extent_scan_read+771, find_backup_file_name+21, dir_name+19, record_file+130, file_name_concat+19, mode_compile+889, quotearg_n_options+422, streamsavedir+777, xmalloc+21
0000000000012267         sub        rsp, 0x8
000000000001226b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000012270         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000012272         call       j_dcgettext                                 ; dcgettext
0000000000012277         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
000000000001227d         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x18e60
0000000000012284         mov        rcx, rax
0000000000012287         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000012289         xor        eax, eax
000000000001228b         call       j_error                                     ; error
0000000000012290         call       j_abort                                     ; abort
                        ; endp
0000000000012295         align      32                                          ; End of unwind block (FDE at 0x1bb6c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     xstrtoul:
00000000000122a0         push       r15                                         ; Begin of unwind block (FDE at 0x1bb84), CODE XREF=main+2495, main+2596
00000000000122a2         push       r14
00000000000122a4         push       r13
00000000000122a6         push       r12
00000000000122a8         push       rbp
00000000000122a9         push       rbx
00000000000122aa         sub        rsp, 0x28
00000000000122ae         mov        rax, qword [fs:0x28]
00000000000122b7         mov        qword [rsp+0x58+var_40], rax
00000000000122bc         xor        eax, eax
00000000000122be         cmp        edx, 0x24
00000000000122c1         ja         loc_12625

00000000000122c7         lea        rax, qword [rsp+0x58+var_48]
00000000000122cc         mov        r15, rsi
00000000000122cf         test       rsi, rsi
00000000000122d2         mov        rbp, rdi
00000000000122d5         mov        dword [rsp+0x58+var_50], edx
00000000000122d9         mov        r14, rcx
00000000000122dc         mov        r13, r8
00000000000122df         cmove      r15, rax
00000000000122e3         call       j___errno_location                          ; __errno_location
00000000000122e8         mov        dword [rax], 0x0
00000000000122ee         mov        r12, rax
00000000000122f1         movzx      ebx, byte [rbp]
00000000000122f5         call       j___ctype_b_loc                             ; __ctype_b_loc
00000000000122fa         mov        edx, dword [rsp+0x58+var_50]
00000000000122fe         mov        rsi, qword [rax]
0000000000012301         mov        rax, rbp
0000000000012304         jmp        loc_12317
0000000000012306         align      16

                     loc_12310:
0000000000012310         add        rax, 0x1                                    ; CODE XREF=xstrtoul+127
0000000000012314         movzx      ebx, byte [rax]

                     loc_12317:
0000000000012317         movzx      ecx, bl                                     ; CODE XREF=xstrtoul+100
000000000001231a         test       byte [rsi+rcx*2+1], 0x20
000000000001231f         jne        loc_12310

0000000000012321         cmp        bl, 0x2d
0000000000012324         je         loc_12378

0000000000012326         mov        rsi, r15                                    ; argument "__endptr" for method j_strtoul
0000000000012329         mov        rdi, rbp                                    ; argument "__nptr" for method j_strtoul
000000000001232c         call       j_strtoul                                   ; strtoul
0000000000012331         mov        rcx, qword [r15]
0000000000012334         mov        rbx, rax
0000000000012337         cmp        rcx, rbp
000000000001233a         je         loc_12368

000000000001233c         mov        eax, dword [r12]
0000000000012340         test       eax, eax
0000000000012342         je         loc_123a8

0000000000012344         cmp        eax, 0x22
0000000000012347         mov        ebp, 0x1
000000000001234c         jne        loc_12378

                     loc_1234e:
000000000001234e         test       r13, r13                                    ; CODE XREF=xstrtoul+266
0000000000012351         je         loc_1235c

0000000000012353         movzx      r12d, byte [rcx]
0000000000012357         test       r12b, r12b
000000000001235a         jne        loc_123d7

                     loc_1235c:
000000000001235c         mov        qword [r14], rbx                            ; CODE XREF=xstrtoul+177
000000000001235f         jmp        loc_1237d
0000000000012361         align      8

                     loc_12368:
0000000000012368         test       r13, r13                                    ; CODE XREF=xstrtoul+154
000000000001236b         mov        qword [rsp+0x58+var_50], rcx
0000000000012370         jne        loc_123b0

0000000000012372         nop        word [rax+rax]

                     loc_12378:
0000000000012378         mov        ebp, 0x4                                    ; CODE XREF=xstrtoul+132, xstrtoul+172, xstrtoul+280, xstrtoul+309

                     loc_1237d:
000000000001237d         mov        rdi, qword [rsp+0x58+var_40]                ; CODE XREF=xstrtoul+191, xstrtoul+535, xstrtoul+546
0000000000012382         xor        rdi, qword [fs:0x28]
000000000001238b         mov        eax, ebp
000000000001238d         jne        loc_12620

0000000000012393         add        rsp, 0x28
0000000000012397         pop        rbx
0000000000012398         pop        rbp
0000000000012399         pop        r12
000000000001239b         pop        r13
000000000001239d         pop        r14
000000000001239f         pop        r15
00000000000123a1         ret
                        ; endp
00000000000123a2         align      8

                     loc_123a8:
00000000000123a8         xor        ebp, ebp                                    ; CODE XREF=xstrtoul+162
00000000000123aa         jmp        loc_1234e
00000000000123ac         align      16

                     loc_123b0:
00000000000123b0         movzx      r12d, byte [rbp]                            ; CODE XREF=xstrtoul+208
00000000000123b5         test       r12b, r12b
00000000000123b8         je         loc_12378

00000000000123ba         movsx      esi, r12b                                   ; argument "__c" for method j_strchr
00000000000123be         mov        rdi, r13                                    ; argument "__s" for method j_strchr
00000000000123c1         xor        ebp, ebp
00000000000123c3         call       j_strchr                                    ; strchr
00000000000123c8         test       rax, rax
00000000000123cb         mov        ebx, 0x1
00000000000123d0         mov        rcx, qword [rsp+0x58+var_50]
00000000000123d5         je         loc_12378

                     loc_123d7:
00000000000123d7         movsx      esi, r12b                                   ; argument "__c" for method j_strchr, CODE XREF=xstrtoul+186
00000000000123db         mov        rdi, r13                                    ; argument "__s" for method j_strchr
00000000000123de         mov        qword [rsp+0x58+var_50], rcx
00000000000123e3         call       j_strchr                                    ; strchr
00000000000123e8         test       rax, rax
00000000000123eb         mov        rcx, qword [rsp+0x58+var_50]
00000000000123f0         je         loc_124bc

00000000000123f6         lea        eax, dword [r12-0x45]
00000000000123fb         cmp        al, 0x2f
00000000000123fd         ja         loc_12450

00000000000123ff         movabs     rdx, 0x814400308945
0000000000012409         bt         rdx, rax
000000000001240d         jae        loc_12450

000000000001240f         mov        esi, 0x30                                   ; argument "__c" for method j_strchr
0000000000012414         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000012417         mov        qword [rsp+0x58+var_50], rcx
000000000001241c         call       j_strchr                                    ; strchr
0000000000012421         test       rax, rax
0000000000012424         mov        rcx, qword [rsp+0x58+var_50]
0000000000012429         je         loc_12450

000000000001242b         movzx      eax, byte [rcx+1]
000000000001242f         cmp        al, 0x44
0000000000012431         je         loc_1243f

0000000000012433         cmp        al, 0x69
0000000000012435         je         loc_12608

000000000001243b         cmp        al, 0x42
000000000001243d         jne        loc_12450

                     loc_1243f:
000000000001243f         mov        edi, 0x2                                    ; CODE XREF=xstrtoul+401
0000000000012444         mov        esi, 0x3e8
0000000000012449         jmp        loc_1245a
000000000001244b         align      16

                     loc_12450:
0000000000012450         mov        edi, 0x1                                    ; CODE XREF=xstrtoul+349, xstrtoul+365, xstrtoul+393, xstrtoul+413
0000000000012455         mov        esi, 0x400

                     loc_1245a:
000000000001245a         sub        r12d, 0x42                                  ; CODE XREF=xstrtoul+425, xstrtoul+891
000000000001245e         cmp        r12b, 0x35
0000000000012462         ja         loc_124bc

0000000000012464         lea        rdx, qword [switch_table_18d28]             ; switch_table_18d28
000000000001246b         movzx      r12d, r12b
000000000001246f         movsxd     rax, dword [rdx+r12*4]
0000000000012473         add        rax, rdx
0000000000012476         jmp        rax                                         ; switch statement using table at 0x18d28, with 54 cases, 0x12478,0x124a0,0x124bc,0x124c7,0x124dd,0x124f4,0x1251a,0x1253f,0x1255f,0x12580,0x125a3,0x125c6,0x125dc

                     loc_12478:
0000000000012478         mov        rax, rbx                                    ; case 43, CODE XREF=xstrtoul+470
000000000001247b         mul        rsi
000000000001247e         jo         loc_12671

0000000000012484         xor        r8d, r8d

                     loc_12487:
0000000000012487         mul        rsi                                         ; CODE XREF=xstrtoul+846, xstrtoul+862, xstrtoul+987
000000000001248a         jo         loc_12662

0000000000012490         mov        rbx, rax

                     loc_12493:
0000000000012493         or         ebp, r8d                                    ; CODE XREF=xstrtoul+972
0000000000012496         nop        word [cs:rax+rax]

                     loc_124a0:
00000000000124a0         movsxd     rdi, edi                                    ; case 33, CODE XREF=xstrtoul+470, xstrtoul+571, xstrtoul+594, xstrtoul+632, xstrtoul+712, xstrtoul+727, xstrtoul+823
00000000000124a3         mov        eax, ebp
00000000000124a5         add        rcx, rdi
00000000000124a8         or         eax, 0x2
00000000000124ab         mov        qword [r15], rcx
00000000000124ae         cmp        byte [rcx], 0x0
00000000000124b1         mov        qword [r14], rbx
00000000000124b4         cmovne     ebp, eax
00000000000124b7         jmp        loc_1237d

                     loc_124bc:
00000000000124bc         mov        qword [r14], rbx                            ; case 52, CODE XREF=xstrtoul+336, xstrtoul+450, xstrtoul+470
00000000000124bf         or         ebp, 0x2
00000000000124c2         jmp        loc_1237d

                     loc_124c7:
00000000000124c7         mov        edx, 0x2                                    ; case 53, CODE XREF=xstrtoul+470
00000000000124cc         mov        rax, rdx
00000000000124cf         mul        rbx
00000000000124d2         jo         loc_1256e

00000000000124d8         add        rbx, rbx
00000000000124db         jmp        loc_124a0

                     loc_124dd:
00000000000124dd         mov        edx, 0x200                                  ; case 32, CODE XREF=xstrtoul+470
00000000000124e2         mov        rax, rdx
00000000000124e5         mul        rbx
00000000000124e8         jo         loc_1256e

00000000000124ee         shl        rbx, 0x9
00000000000124f2         jmp        loc_124a0

                     loc_124f4:
00000000000124f4         mov        r8d, 0x7                                    ; case 24, CODE XREF=xstrtoul+470
00000000000124fa         xor        r9d, r9d
00000000000124fd         nop        dword [rax]

                     loc_12500:
0000000000012500         mov        rax, rbx                                    ; CODE XREF=xstrtoul+627
0000000000012503         mul        rsi
0000000000012506         mov        rbx, rax
0000000000012509         jo         loc_1269e

                     loc_1250f:
000000000001250f         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+1032
0000000000012513         jne        loc_12500

                     loc_12515:
0000000000012515         or         ebp, r9d                                    ; CODE XREF=xstrtoul+669, xstrtoul+701, xstrtoul+766, xstrtoul+801
0000000000012518         jmp        loc_124a0

                     loc_1251a:
000000000001251a         mov        r8d, 0x8                                    ; case 23, CODE XREF=xstrtoul+470
0000000000012520         xor        r9d, r9d
0000000000012523         nop        dword [rax+rax]

                     loc_12528:
0000000000012528         mov        rax, rbx                                    ; CODE XREF=xstrtoul+667
000000000001252b         mul        rsi
000000000001252e         mov        rbx, rax
0000000000012531         jo         loc_12680

                     loc_12537:
0000000000012537         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+1002
000000000001253b         jne        loc_12528

000000000001253d         jmp        loc_12515

                     loc_1253f:
000000000001253f         mov        r8d, 0x4                                    ; case 50, CODE XREF=xstrtoul+470
0000000000012545         xor        r9d, r9d

                     loc_12548:
0000000000012548         mov        rax, rbx                                    ; CODE XREF=xstrtoul+699
000000000001254b         mul        rsi
000000000001254e         mov        rbx, rax
0000000000012551         jo         loc_12653

                     loc_12557:
0000000000012557         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+957
000000000001255b         jne        loc_12548

000000000001255d         jmp        loc_12515

                     loc_1255f:
000000000001255f         mov        rax, rbx                                    ; case 41, CODE XREF=xstrtoul+470
0000000000012562         mul        rsi
0000000000012565         mov        rbx, rax
0000000000012568         jno        loc_124a0

                     loc_1256e:
000000000001256e         mov        ebp, 0x1                                    ; CODE XREF=xstrtoul+562, xstrtoul+584, xstrtoul+817
0000000000012573         or         rbx, 0xffffffffffffffff
0000000000012577         jmp        loc_124a0
000000000001257c         align      128

                     loc_12580:
0000000000012580         mov        r8d, 0x5                                    ; case 14, CODE XREF=xstrtoul+470
0000000000012586         xor        r9d, r9d

                     loc_12589:
0000000000012589         mov        rax, rbx                                    ; CODE XREF=xstrtoul+764
000000000001258c         mul        rsi
000000000001258f         mov        rbx, rax
0000000000012592         jo         loc_1268f

                     loc_12598:
0000000000012598         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+1017
000000000001259c         jne        loc_12589

000000000001259e         jmp        loc_12515

                     loc_125a3:
00000000000125a3         mov        r8d, 0x6                                    ; case 3, CODE XREF=xstrtoul+470
00000000000125a9         xor        r9d, r9d

                     loc_125ac:
00000000000125ac         mov        rax, rbx                                    ; CODE XREF=xstrtoul+799
00000000000125af         mul        rsi
00000000000125b2         mov        rbx, rax
00000000000125b5         jo         loc_12644

                     loc_125bb:
00000000000125bb         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+942
00000000000125bf         jne        loc_125ac

00000000000125c1         jmp        loc_12515

                     loc_125c6:
00000000000125c6         mov        edx, 0x400                                  ; case 0, CODE XREF=xstrtoul+470
00000000000125cb         mov        rax, rdx
00000000000125ce         mul        rbx
00000000000125d1         jo         loc_1256e

00000000000125d3         shl        rbx, 0xa
00000000000125d7         jmp        loc_124a0

                     loc_125dc:
00000000000125dc         mov        rax, rbx                                    ; case 37, CODE XREF=xstrtoul+470
00000000000125df         mul        rsi
00000000000125e2         jo         loc_126ad

00000000000125e8         xor        r8d, r8d

                     loc_125eb:
00000000000125eb         mul        rsi                                         ; CODE XREF=xstrtoul+1047
00000000000125ee         jno        loc_12487

00000000000125f4         mov        r8d, 0x1
00000000000125fa         or         rax, 0xffffffffffffffff
00000000000125fe         jmp        loc_12487
0000000000012603         align      8

                     loc_12608:
0000000000012608         xor        edi, edi                                    ; CODE XREF=xstrtoul+405
000000000001260a         cmp        byte [rcx+2], 0x42
000000000001260e         mov        esi, 0x400
0000000000012613         sete       dil
0000000000012617         lea        edi, dword [rdi+rdi+1]
000000000001261b         jmp        loc_1245a

                     loc_12620:
0000000000012620         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xstrtoul+237
                        ; endp

                     loc_12625:
0000000000012625         lea        rcx, qword [__PRETTY_FUNCTION__.4162]       ; argument "__function" for method j___assert_fail, "xstrtoul", CODE XREF=xstrtoul+33
000000000001262c         lea        rsi, qword [aCoreutils831li_18ce0]          ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/xstrtol.c"
0000000000012633         lea        rdi, qword [a0StrtolbaseStr]                ; argument "__assertion" for method j___assert_fail, "0 <= strtol_base && strtol_base <= 36"
000000000001263a         mov        edx, 0x54                                   ; argument "__line" for method j___assert_fail
000000000001263f         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_12644:
0000000000012644         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+789
000000000001264a         or         rbx, 0xffffffffffffffff
000000000001264e         jmp        loc_125bb

                     loc_12653:
0000000000012653         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+689
0000000000012659         or         rbx, 0xffffffffffffffff
000000000001265d         jmp        loc_12557

                     loc_12662:
0000000000012662         mov        r8d, 0x1                                    ; CODE XREF=xstrtoul+490
0000000000012668         or         rbx, 0xffffffffffffffff
000000000001266c         jmp        loc_12493

                     loc_12671:
0000000000012671         or         rax, 0xffffffffffffffff                     ; CODE XREF=xstrtoul+478
0000000000012675         mov        r8d, 0x1
000000000001267b         jmp        loc_12487

                     loc_12680:
0000000000012680         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+657
0000000000012686         or         rbx, 0xffffffffffffffff
000000000001268a         jmp        loc_12537

                     loc_1268f:
000000000001268f         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+754
0000000000012695         or         rbx, 0xffffffffffffffff
0000000000012699         jmp        loc_12598

                     loc_1269e:
000000000001269e         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+617
00000000000126a4         or         rbx, 0xffffffffffffffff
00000000000126a8         jmp        loc_1250f

                     loc_126ad:
00000000000126ad         mov        r8d, 0x1                                    ; CODE XREF=xstrtoul+834
00000000000126b3         or         rax, 0xffffffffffffffff
00000000000126b7         jmp        loc_125eb
00000000000126bc         align      64                                          ; End of unwind block (FDE at 0x1bb84)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32


                     yesno:
00000000000126c0         push       rbx                                         ; Begin of unwind block (FDE at 0x1bbd4), CODE XREF=overwrite_ok.isra.12+270
00000000000126c1         mov        edx, 0xa                                    ; argument "__delimiter" for method j___getdelim
00000000000126c6         xor        ebx, ebx
00000000000126c8         sub        rsp, 0x20
00000000000126cc         mov        rcx, qword [stdin@@GLIBC_2.2.5]             ; argument "__stream" for method j___getdelim, stdin@@GLIBC_2.2.5
00000000000126d3         lea        rsi, qword [rsp+0x28+var_18]                ; argument "__n" for method j___getdelim
00000000000126d8         lea        rdi, qword [rsp+0x28+var_20]                ; argument "__lineptr" for method j___getdelim
00000000000126dd         mov        qword [rsp+0x28+var_20], 0x0
00000000000126e6         mov        rax, qword [fs:0x28]
00000000000126ef         mov        qword [rsp+0x28+var_10], rax
00000000000126f4         xor        eax, eax
00000000000126f6         mov        qword [rsp+0x28+var_18], 0x0
00000000000126ff         call       j___getdelim                                ; __getdelim
0000000000012704         test       rax, rax
0000000000012707         jle        loc_12722

0000000000012709         mov        rdi, qword [rsp+0x28+var_20]
000000000001270e         lea        rax, qword [rdi+rax-1]
0000000000012713         cmp        byte [rax], 0xa
0000000000012716         je         loc_12748

                     loc_12718:
0000000000012718         call       j_rpmatch                                   ; rpmatch, CODE XREF=yesno+144
000000000001271d         test       eax, eax
000000000001271f         setg       bl

                     loc_12722:
0000000000012722         mov        rdi, qword [rsp+0x28+var_20]                ; CODE XREF=yesno+71
0000000000012727         call       sub_30d0                                    ; sub_30d0
000000000001272c         mov        rdx, qword [rsp+0x28+var_10]
0000000000012731         xor        rdx, qword [fs:0x28]
000000000001273a         mov        eax, ebx
000000000001273c         jne        loc_12752

000000000001273e         add        rsp, 0x20
0000000000012742         pop        rbx
0000000000012743         ret
                        ; endp
0000000000012744         align      8

                     loc_12748:
0000000000012748         mov        byte [rax], 0x0                             ; CODE XREF=yesno+86
000000000001274b         mov        rdi, qword [rsp+0x28+var_20]
0000000000012750         jmp        loc_12718

                     loc_12752:
0000000000012752         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=yesno+124
                        ; endp
0000000000012757         align      32                                          ; End of unwind block (FDE at 0x1bbd4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000012760         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x1bbfc), CODE XREF=close_stdin+56, rpl_fclose+31
0000000000012763         push       rbx
0000000000012764         mov        rbx, rdi
0000000000012767         je         loc_1277a

0000000000012769         call       j___freading                                ; __freading
000000000001276e         test       eax, eax
0000000000012770         je         loc_1277a

0000000000012772         test       dword [rbx], 0x100
0000000000012778         jne        loc_12788

                     loc_1277a:
000000000001277a         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
000000000001277d         pop        rbx
000000000001277e         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000012783         align      8

                     loc_12788:
0000000000012788         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
000000000001278b         mov        edx, 0x1
0000000000012790         xor        esi, esi
0000000000012792         call       rpl_fseeko                                  ; rpl_fseeko
0000000000012797         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
000000000001279a         pop        rbx
000000000001279b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     freadahead:
00000000000127a0         xor        eax, eax                                    ; End of unwind block (FDE at 0x1bbfc), Begin of unwind block (FDE at 0x1bc1c), CODE XREF=close_stdin+14
00000000000127a2         mov        rcx, qword [rdi+0x20]
00000000000127a6         cmp        qword [rdi+0x28], rcx
00000000000127aa         ja         loc_127c7

00000000000127ac         mov        rax, qword [rdi+0x10]
00000000000127b0         sub        rax, qword [rdi+8]
00000000000127b4         test       dword [rdi], 0x100
00000000000127ba         je         loc_127c7

00000000000127bc         mov        rdx, qword [rdi+0x58]
00000000000127c0         sub        rdx, qword [rdi+0x48]
00000000000127c4         add        rax, rdx

                     loc_127c7:
00000000000127c7         ret                                                    ; CODE XREF=freadahead+10, freadahead+26
                        ; endp
00000000000127c9         align      16                                          ; End of unwind block (FDE at 0x1bc1c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
00000000000127d0         mov        rax, qword [rdi+8]                          ; Begin of unwind block (FDE at 0x1bc34), CODE XREF=close_stdin+194, rpl_fflush+50
00000000000127d4         cmp        qword [rdi+0x10], rax
00000000000127d8         je         loc_127e0

                     j_j_fseeko:        // fseeko
00000000000127da         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
00000000000127df         align      32

                     loc_127e0:
00000000000127e0         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
00000000000127e4         cmp        qword [rdi+0x28], rax
00000000000127e8         jne        j_j_fseeko                                  ; fseeko

00000000000127ea         cmp        qword [rdi+0x48], 0x0
00000000000127ef         jne        j_j_fseeko                                  ; fseeko

00000000000127f1         push       r12
00000000000127f3         push       rbp
00000000000127f4         mov        r12d, edx
00000000000127f7         push       rbx
00000000000127f8         mov        rbp, rsi
00000000000127fb         mov        rbx, rdi
00000000000127fe         call       j_fileno                                    ; fileno
0000000000012803         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000012806         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000012809         mov        edi, eax                                    ; argument "__fd" for method j_lseek
000000000001280b         call       j_lseek                                     ; lseek
0000000000012810         cmp        rax, 0xffffffffffffffff
0000000000012814         je         loc_12822

0000000000012816         and        dword [rbx], 0xffffffef
0000000000012819         mov        qword [rbx+0x90], rax
0000000000012820         xor        eax, eax

                     loc_12822:
0000000000012822         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000012823         pop        rbp
0000000000012824         pop        r12
0000000000012826         ret
                        ; endp
0000000000012827         align      16                                          ; End of unwind block (FDE at 0x1bc34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000012830         push       r13                                         ; Begin of unwind block (FDE at 0x1bc64), CODE XREF=sub_e280+534
0000000000012832         push       r12
0000000000012834         mov        r13, rsi
0000000000012837         push       rbp
0000000000012838         push       rbx
0000000000012839         mov        rbx, rdi
000000000001283c         mov        r12, rdx
000000000001283f         sub        rsp, 0x18
0000000000012843         mov        rax, qword [fs:0x28]
000000000001284c         mov        qword [rsp+0x38+var_30], rax
0000000000012851         xor        eax, eax
0000000000012853         lea        rax, qword [rsp+0x38+var_34]
0000000000012858         test       rdi, rdi
000000000001285b         cmove      rbx, rax
000000000001285f         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000012862         call       j_mbrtowc                                   ; mbrtowc
0000000000012867         cmp        rax, 0xfffffffffffffffd
000000000001286b         mov        rbp, rax
000000000001286e         jbe        loc_12890

0000000000012870         test       r12, r12
0000000000012873         je         loc_12890

0000000000012875         xor        edi, edi
0000000000012877         call       hard_locale                                 ; hard_locale
000000000001287c         test       al, al
000000000001287e         jne        loc_12890

0000000000012880         movzx      eax, byte [r13]
0000000000012885         mov        ebp, 0x1
000000000001288a         mov        dword [rbx], eax
000000000001288c         nop        dword [rax]

                     loc_12890:
0000000000012890         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000012895         xor        rdx, qword [fs:0x28]
000000000001289e         mov        rax, rbp
00000000000128a1         jne        loc_128ae

00000000000128a3         add        rsp, 0x18
00000000000128a7         pop        rbx
00000000000128a8         pop        rbp
00000000000128a9         pop        r12
00000000000128ab         pop        r13
00000000000128ad         ret
                        ; endp

                     loc_128ae:
00000000000128ae         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
00000000000128b3         align      64                                          ; End of unwind block (FDE at 0x1bc64)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_808: int8_t, -2056
        ;    var_810: int64_t, -2064


                     rpl_vfprintf:
00000000000128c0         push       r13                                         ; Begin of unwind block (FDE at 0x1bca4), CODE XREF=prog_fprintf+197
00000000000128c2         push       r12
00000000000128c4         mov        rax, rsi
00000000000128c7         push       rbp
00000000000128c8         push       rbx
00000000000128c9         mov        r13, rdi
00000000000128cc         sub        rsp, 0x7f8
00000000000128d3         lea        r12, qword [rsp+0x818+var_808]
00000000000128d8         lea        rsi, qword [rsp+0x818+var_810]
00000000000128dd         mov        qword [rsp+0x818+var_810], 0x7d0
00000000000128e6         mov        rcx, qword [fs:0x28]
00000000000128ef         mov        qword [rsp+0x818+var_30], rcx
00000000000128f7         xor        ecx, ecx
00000000000128f9         mov        rdi, r12
00000000000128fc         mov        rcx, rdx
00000000000128ff         mov        rdx, rax
0000000000012902         call       vasnprintf                                  ; vasnprintf
0000000000012907         test       rax, rax
000000000001290a         mov        rbx, qword [rsp+0x818+var_810]
000000000001290f         je         loc_1299e

0000000000012915         mov        rcx, r13                                    ; argument "__s" for method j_fwrite
0000000000012918         mov        rdx, rbx                                    ; argument "__n" for method j_fwrite
000000000001291b         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000012920         mov        rdi, rax                                    ; argument "__ptr" for method j_fwrite
0000000000012923         mov        rbp, rax
0000000000012926         call       j_fwrite                                    ; fwrite
000000000001292b         cmp        rax, rbx
000000000001292e         jb         loc_12970

0000000000012930         cmp        rbp, r12
0000000000012933         je         loc_1293d

0000000000012935         mov        rdi, rbp
0000000000012938         call       sub_30d0                                    ; sub_30d0

                     loc_1293d:
000000000001293d         cmp        rbx, 0x7fffffff                             ; CODE XREF=rpl_vfprintf+115
0000000000012944         ja         loc_12993

                     loc_12946:
0000000000012946         mov        rcx, qword [rsp+0x818+var_30]               ; CODE XREF=rpl_vfprintf+184, rpl_vfprintf+209, rpl_vfprintf+235
000000000001294e         xor        rcx, qword [fs:0x28]
0000000000012957         mov        eax, ebx
0000000000012959         jne        loc_129ad

000000000001295b         add        rsp, 0x7f8
0000000000012962         pop        rbx
0000000000012963         pop        rbp
0000000000012964         pop        r12
0000000000012966         pop        r13
0000000000012968         ret
                        ; endp
0000000000012969         align      16

                     loc_12970:
0000000000012970         cmp        rbp, r12                                    ; CODE XREF=rpl_vfprintf+110
0000000000012973         mov        ebx, 0xffffffff
0000000000012978         je         loc_12946

000000000001297a         call       j___errno_location                          ; __errno_location
000000000001297f         mov        r13d, dword [rax]
0000000000012982         mov        r12, rax
0000000000012985         mov        rdi, rbp
0000000000012988         call       sub_30d0                                    ; sub_30d0
000000000001298d         mov        dword [r12], r13d
0000000000012991         jmp        loc_12946

                     loc_12993:
0000000000012993         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_vfprintf+132
0000000000012998         mov        dword [rax], 0x4b

                     loc_1299e:
000000000001299e         mov        rdi, r13                                    ; CODE XREF=rpl_vfprintf+79
00000000000129a1         mov        ebx, 0xffffffff
00000000000129a6         call       fseterr                                     ; fseterr
00000000000129ab         jmp        loc_12946

                     loc_129ad:
00000000000129ad         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_vfprintf+153
                        ; endp
00000000000129b2         align      64                                          ; End of unwind block (FDE at 0x1bca4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     free_permission_context:
00000000000129c0         ret                                                    ; Begin of unwind block (FDE at 0x1bce4), CODE XREF=qcopy_acl+69, qset_acl+49
                        ; endp
00000000000129c2         align      16                                          ; End of unwind block (FDE at 0x1bce4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_permissions:
00000000000129d0         mov        dword [rcx], edx                            ; Begin of unwind block (FDE at 0x1bcfc), CODE XREF=qcopy_acl+41
00000000000129d2         xor        eax, eax
00000000000129d4         ret
                        ; endp
00000000000129d5         align      32                                          ; End of unwind block (FDE at 0x1bcfc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     chmod_or_fchmod:
00000000000129e0         mov        eax, esi                                    ; Begin of unwind block (FDE at 0x1bd14), CODE XREF=set_permissions+14
00000000000129e2         mov        esi, edx
00000000000129e4         cmp        eax, 0xffffffff
00000000000129e7         je         j_j_chmod                                   ; chmod

00000000000129e9         mov        edi, eax                                    ; argument "__fd" for method j_fchmod
00000000000129eb         jmp        j_fchmod                                    ; fchmod
                        ; endp

                     j_j_chmod:        // chmod
00000000000129f0         jmp        j_chmod                                     ; chmod, CODE XREF=chmod_or_fchmod+7
                        ; endp
00000000000129f5         align      512                                         ; End of unwind block (FDE at 0x1bd14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_permissions:
0000000000012a00         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x1bd28), CODE XREF=qcopy_acl+59, qset_acl+39
0000000000012a04         mov        rax, rsi
0000000000012a07         mov        esi, edx
0000000000012a09         mov        edx, dword [rdi]
0000000000012a0b         mov        rdi, rax
0000000000012a0e         call       chmod_or_fchmod                             ; chmod_or_fchmod
0000000000012a13         test       eax, eax
0000000000012a15         setne      al
0000000000012a18         add        rsp, 0x8
0000000000012a1c         movzx      eax, al
0000000000012a1f         neg        eax
0000000000012a21         ret
                        ; endp
0000000000012a22         align      16                                          ; End of unwind block (FDE at 0x1bd28)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __argmatch_die:
0000000000012a30         mov        edi, 0x1                                    ; Begin of unwind block (FDE at 0x1bd44), argument #1 for method usage, DATA XREF=argmatch_die
0000000000012a35         jmp        usage                                       ; usage
                        ; endp
0000000000012a3a         align      64                                          ; End of unwind block (FDE at 0x1bd44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_41: int8_t, -65
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     argmatch:
0000000000012a40         push       r15                                         ; Begin of unwind block (FDE at 0x1bd58), CODE XREF=__xargmatch_internal+44
0000000000012a42         push       r14
0000000000012a44         mov        r15, rsi
0000000000012a47         push       r13
0000000000012a49         push       r12
0000000000012a4b         mov        r13, rcx
0000000000012a4e         push       rbp
0000000000012a4f         push       rbx
0000000000012a50         mov        rbp, rdx
0000000000012a53         sub        rsp, 0x28
0000000000012a57         mov        qword [rsp+0x58+var_50], rdi
0000000000012a5c         mov        qword [rsp+0x58+var_40], rdx
0000000000012a61         call       j_strlen                                    ; strlen
0000000000012a66         mov        r14, qword [r15]
0000000000012a69         mov        qword [rsp+0x58+var_58], 0xffffffffffffffff
0000000000012a71         test       r14, r14
0000000000012a74         je         loc_12b2d

0000000000012a7a         mov        r12, rax
0000000000012a7d         mov        byte [rsp+0x58+var_41], 0x0
0000000000012a82         xor        ebx, ebx
0000000000012a84         jmp        loc_12ad7
0000000000012a86         align      16

                     loc_12a90:
0000000000012a90         mov        rax, qword [rsp+0x58+var_40]                ; CODE XREF=argmatch+189
0000000000012a95         test       rax, rax
0000000000012a98         je         loc_12b40

0000000000012a9e         mov        rdi, qword [rsp+0x58+var_58]
0000000000012aa2         mov        rdx, r13                                    ; argument "__n" for method j_memcmp
0000000000012aa5         mov        rsi, rbp                                    ; argument "__s2" for method j_memcmp
0000000000012aa8         imul       rdi, r13
0000000000012aac         add        rdi, rax                                    ; argument "__s1" for method j_memcmp
0000000000012aaf         call       j_memcmp                                    ; memcmp
0000000000012ab4         test       eax, eax
0000000000012ab6         movzx      eax, byte [rsp+0x58+var_41]
0000000000012abb         mov        ecx, 0x1
0000000000012ac0         cmovne     eax, ecx
0000000000012ac3         mov        byte [rsp+0x58+var_41], al

                     loc_12ac7:
0000000000012ac7         add        rbx, 0x1                                    ; CODE XREF=argmatch+169, argmatch+261
0000000000012acb         add        rbp, r13
0000000000012ace         mov        r14, qword [r15+rbx*8]
0000000000012ad2         test       r14, r14
0000000000012ad5         je         loc_12b18

                     loc_12ad7:
0000000000012ad7         mov        rsi, qword [rsp+0x58+var_50]                ; argument "__s2" for method j_strncmp, CODE XREF=argmatch+68, argmatch+209
0000000000012adc         mov        rdx, r12                                    ; argument "__n" for method j_strncmp
0000000000012adf         mov        rdi, r14                                    ; argument "__s1" for method j_strncmp
0000000000012ae2         call       j_strncmp                                   ; strncmp
0000000000012ae7         test       eax, eax
0000000000012ae9         jne        loc_12ac7

0000000000012aeb         mov        rdi, r14                                    ; argument "__s" for method j_strlen
0000000000012aee         call       j_strlen                                    ; strlen
0000000000012af3         cmp        rax, r12
0000000000012af6         je         loc_12b50

0000000000012af8         cmp        qword [rsp+0x58+var_58], 0xffffffffffffffff
0000000000012afd         jne        loc_12a90

0000000000012aff         mov        qword [rsp+0x58+var_58], rbx
0000000000012b03         add        rbx, 0x1
0000000000012b07         add        rbp, r13
0000000000012b0a         mov        r14, qword [r15+rbx*8]
0000000000012b0e         test       r14, r14
0000000000012b11         jne        loc_12ad7

0000000000012b13         nop        dword [rax+rax]

                     loc_12b18:
0000000000012b18         cmp        byte [rsp+0x58+var_41], 0x0                 ; CODE XREF=argmatch+149
0000000000012b1d         mov        rax, 0xfffffffffffffffe
0000000000012b24         cmove      rax, qword [rsp+0x58+var_58]
0000000000012b29         mov        qword [rsp+0x58+var_58], rax

                     loc_12b2d:
0000000000012b2d         mov        rax, qword [rsp+0x58+var_58]                ; CODE XREF=argmatch+52, argmatch+276
0000000000012b31         add        rsp, 0x28
0000000000012b35         pop        rbx
0000000000012b36         pop        rbp
0000000000012b37         pop        r12
0000000000012b39         pop        r13
0000000000012b3b         pop        r14
0000000000012b3d         pop        r15
0000000000012b3f         ret
                        ; endp

                     loc_12b40:
0000000000012b40         mov        byte [rsp+0x58+var_41], 0x1                 ; CODE XREF=argmatch+88
0000000000012b45         jmp        loc_12ac7
0000000000012b47         align      16

                     loc_12b50:
0000000000012b50         mov        qword [rsp+0x58+var_58], rbx                ; CODE XREF=argmatch+182
0000000000012b54         jmp        loc_12b2d
0000000000012b56         align      32                                          ; End of unwind block (FDE at 0x1bd58)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argmatch_invalid:
0000000000012b60         cmp        rdx, 0xffffffffffffffff                     ; Begin of unwind block (FDE at 0x1bda4), CODE XREF=__xargmatch_internal+78
0000000000012b64         push       r12
0000000000012b66         mov        edx, 0x5
0000000000012b6b         push       rbp
0000000000012b6c         mov        r12, rsi
0000000000012b6f         push       rbx
0000000000012b70         mov        rbp, rdi
0000000000012b73         je         loc_12bc0

0000000000012b75         lea        rsi, qword [aAmbiguousArgum]                ; argument "msgid" for method j_dcgettext, "ambiguous argument %s for %s"
0000000000012b7c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000012b7e         call       j_dcgettext                                 ; dcgettext
0000000000012b83         mov        rbx, rax

                     loc_12b86:
0000000000012b86         mov        rsi, rbp                                    ; CODE XREF=argmatch_invalid+113
0000000000012b89         mov        edi, 0x1
0000000000012b8e         call       quote_n                                     ; quote_n
0000000000012b93         mov        rdx, r12
0000000000012b96         mov        rbp, rax
0000000000012b99         mov        esi, 0x8
0000000000012b9e         xor        edi, edi
0000000000012ba0         call       quotearg_n_style                            ; quotearg_n_style
0000000000012ba5         mov        r8, rbp
0000000000012ba8         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000012bab         mov        rcx, rax
0000000000012bae         pop        rbx
0000000000012baf         pop        rbp
0000000000012bb0         pop        r12
0000000000012bb2         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000012bb4         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000012bb6         xor        eax, eax
0000000000012bb8         jmp        j_error                                     ; error
                        ; endp
0000000000012bbd         align      64

                     loc_12bc0:
0000000000012bc0         lea        rsi, qword [aInvalidArgumen]                ; argument "msgid" for method j_dcgettext, "invalid argument %s for %s", CODE XREF=argmatch_invalid+19
0000000000012bc7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000012bc9         call       j_dcgettext                                 ; dcgettext
0000000000012bce         mov        rbx, rax
0000000000012bd1         jmp        loc_12b86
0000000000012bd3         align      32                                          ; End of unwind block (FDE at 0x1bda4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argmatch_valid:
0000000000012be0         push       r15                                         ; Begin of unwind block (FDE at 0x1bdd0), CODE XREF=__xargmatch_internal+92
0000000000012be2         push       r14
0000000000012be4         mov        r14, rdi
0000000000012be7         push       r13
0000000000012be9         push       r12
0000000000012beb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000012bed         push       rbp
0000000000012bee         push       rbx
0000000000012bef         mov        rbp, rsi
0000000000012bf2         lea        rsi, qword [aValidArguments]                ; argument "msgid" for method j_dcgettext, "Valid arguments are:"
0000000000012bf9         mov        r12, rdx
0000000000012bfc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000012c01         sub        rsp, 0x8
0000000000012c05         mov        rbx, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000012c0c         call       j_dcgettext                                 ; dcgettext
0000000000012c11         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000012c14         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000012c17         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000012c1c         mov        r15, qword [r14]
0000000000012c1f         test       r15, r15
0000000000012c22         je         loc_12cb8

0000000000012c28         xor        r13d, r13d
0000000000012c2b         xor        ebx, ebx
0000000000012c2d         jmp        loc_12c68
0000000000012c2f         align      16

                     loc_12c30:
0000000000012c30         mov        rdi, r15                                    ; CODE XREF=argmatch_valid+139, argmatch_valid+157
0000000000012c33         add        rbx, 0x1
0000000000012c37         mov        r13, rbp
0000000000012c3a         call       quote                                       ; quote
0000000000012c3f         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000012c46         lea        rdx, qword [aNS]                            ; "\\n  - %s"
0000000000012c4d         mov        rcx, rax
0000000000012c50         mov        esi, 0x1
0000000000012c55         xor        eax, eax
0000000000012c57         add        rbp, r12
0000000000012c5a         call       j___fprintf_chk                             ; __fprintf_chk
0000000000012c5f         mov        r15, qword [r14+rbx*8]
0000000000012c63         test       r15, r15
0000000000012c66         je         loc_12cb8

                     loc_12c68:
0000000000012c68         test       rbx, rbx                                    ; CODE XREF=argmatch_valid+77, argmatch_valid+210
0000000000012c6b         je         loc_12c30

0000000000012c6d         mov        rdx, r12                                    ; argument "__n" for method j_memcmp
0000000000012c70         mov        rsi, rbp                                    ; argument "__s2" for method j_memcmp
0000000000012c73         mov        rdi, r13                                    ; argument "__s1" for method j_memcmp
0000000000012c76         call       j_memcmp                                    ; memcmp
0000000000012c7b         test       eax, eax
0000000000012c7d         jne        loc_12c30

0000000000012c7f         mov        rdi, r15
0000000000012c82         add        rbx, 0x1
0000000000012c86         add        rbp, r12
0000000000012c89         call       quote                                       ; quote
0000000000012c8e         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000012c95         lea        rdx, qword [aNS+8]                          ; 0x18e5e
0000000000012c9c         mov        rcx, rax
0000000000012c9f         mov        esi, 0x1
0000000000012ca4         xor        eax, eax
0000000000012ca6         call       j___fprintf_chk                             ; __fprintf_chk
0000000000012cab         mov        r15, qword [r14+rbx*8]
0000000000012caf         test       r15, r15
0000000000012cb2         jne        loc_12c68

0000000000012cb4         nop        dword [rax]

                     loc_12cb8:
0000000000012cb8         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=argmatch_valid+66, argmatch_valid+134
0000000000012cbf         mov        rax, qword [rdi+0x28]
0000000000012cc3         cmp        rax, qword [rdi+0x30]
0000000000012cc7         jae        loc_12ce8

0000000000012cc9         lea        rdx, qword [rax+1]
0000000000012ccd         mov        qword [rdi+0x28], rdx
0000000000012cd1         mov        byte [rax], 0xa
0000000000012cd4         add        rsp, 0x8
0000000000012cd8         pop        rbx
0000000000012cd9         pop        rbp
0000000000012cda         pop        r12
0000000000012cdc         pop        r13
0000000000012cde         pop        r14
0000000000012ce0         pop        r15
0000000000012ce2         ret
                        ; endp
0000000000012ce3         align      8

                     loc_12ce8:
0000000000012ce8         add        rsp, 0x8                                    ; CODE XREF=argmatch_valid+231
0000000000012cec         mov        esi, 0xa                                    ; argument #2 for method j___overflow
0000000000012cf1         pop        rbx
0000000000012cf2         pop        rbp
0000000000012cf3         pop        r12
0000000000012cf5         pop        r13
0000000000012cf7         pop        r14
0000000000012cf9         pop        r15
0000000000012cfb         jmp        j___overflow                                ; __overflow
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __xargmatch_internal:
0000000000012d00         push       r15                                         ; End of unwind block (FDE at 0x1bdd0), Begin of unwind block (FDE at 0x1be30), CODE XREF=get_version.part.0+31
0000000000012d02         push       r14
0000000000012d04         mov        r14, rdi
0000000000012d07         push       r13
0000000000012d09         push       r12
0000000000012d0b         mov        r12, rsi
0000000000012d0e         push       rbp
0000000000012d0f         push       rbx
0000000000012d10         mov        rbp, rcx
0000000000012d13         mov        rbx, rdx
0000000000012d16         mov        rcx, r8
0000000000012d19         mov        rdx, rbp
0000000000012d1c         sub        rsp, 0x8
0000000000012d20         mov        rsi, rbx
0000000000012d23         mov        rdi, r12
0000000000012d26         mov        r15, r8
0000000000012d29         mov        r13, r9
0000000000012d2c         call       argmatch                                    ; argmatch
0000000000012d31         test       rax, rax
0000000000012d34         js         loc_12d45

                     loc_12d36:
0000000000012d36         add        rsp, 0x8                                    ; CODE XREF=__xargmatch_internal+107
0000000000012d3a         pop        rbx
0000000000012d3b         pop        rbp
0000000000012d3c         pop        r12
0000000000012d3e         pop        r13
0000000000012d40         pop        r14
0000000000012d42         pop        r15
0000000000012d44         ret
                        ; endp

                     loc_12d45:
0000000000012d45         mov        rdx, rax                                    ; CODE XREF=__xargmatch_internal+52
0000000000012d48         mov        rsi, r12
0000000000012d4b         mov        rdi, r14
0000000000012d4e         call       argmatch_invalid                            ; argmatch_invalid
0000000000012d53         mov        rdx, r15
0000000000012d56         mov        rsi, rbp
0000000000012d59         mov        rdi, rbx
0000000000012d5c         call       argmatch_valid                              ; argmatch_valid
0000000000012d61         call       r13
0000000000012d64         mov        rax, 0xffffffffffffffff
0000000000012d6b         jmp        loc_12d36
0000000000012d6d         align      16                                          ; End of unwind block (FDE at 0x1be30)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argmatch_to_argument:
0000000000012d70         push       r14                                         ; Begin of unwind block (FDE at 0x1be7c)
0000000000012d72         push       r13
0000000000012d74         push       r12
0000000000012d76         push       rbp
0000000000012d77         push       rbx
0000000000012d78         mov        r14, qword [rsi]
0000000000012d7b         test       r14, r14
0000000000012d7e         je         loc_12db1

0000000000012d80         mov        r12, rcx
0000000000012d83         mov        r13, rdi
0000000000012d86         mov        rbp, rdx
0000000000012d89         lea        rbx, qword [rsi+8]
0000000000012d8d         jmp        loc_12d9f
0000000000012d8f         align      16

                     loc_12d90:
0000000000012d90         mov        r14, qword [rbx]                            ; CODE XREF=argmatch_to_argument+63
0000000000012d93         add        rbp, r12
0000000000012d96         add        rbx, 0x8
0000000000012d9a         test       r14, r14
0000000000012d9d         je         loc_12db1

                     loc_12d9f:
0000000000012d9f         mov        rdx, r12                                    ; argument "__n" for method j_memcmp, CODE XREF=argmatch_to_argument+29
0000000000012da2         mov        rsi, rbp                                    ; argument "__s2" for method j_memcmp
0000000000012da5         mov        rdi, r13                                    ; argument "__s1" for method j_memcmp
0000000000012da8         call       j_memcmp                                    ; memcmp
0000000000012dad         test       eax, eax
0000000000012daf         jne        loc_12d90

                     loc_12db1:
0000000000012db1         pop        rbx                                         ; CODE XREF=argmatch_to_argument+14, argmatch_to_argument+45
0000000000012db2         mov        rax, r14
0000000000012db5         pop        rbp
0000000000012db6         pop        r12
0000000000012db8         pop        r13
0000000000012dba         pop        r14
0000000000012dbc         ret
                        ; endp
0000000000012dbd         align      64                                          ; End of unwind block (FDE at 0x1be7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000012dc0         push       r12                                         ; Begin of unwind block (FDE at 0x1bebc), CODE XREF=close_stdin+31, close_stdin+76, close_stdin+214, close_stdout+13, close_stdout+51
0000000000012dc2         push       rbp
0000000000012dc3         mov        rbp, rdi
0000000000012dc6         push       rbx
0000000000012dc7         call       j___fpending                                ; __fpending
0000000000012dcc         mov        ebx, dword [rbp]
0000000000012dcf         mov        rdi, rbp
0000000000012dd2         mov        r12, rax
0000000000012dd5         call       rpl_fclose                                  ; rpl_fclose
0000000000012dda         and        ebx, 0x20
0000000000012ddd         test       ebx, ebx
0000000000012ddf         jne        loc_12df8

0000000000012de1         test       eax, eax
0000000000012de3         je         loc_12def

0000000000012de5         test       r12, r12
0000000000012de8         mov        eax, 0xffffffff
0000000000012ded         je         loc_12e28

                     loc_12def:
0000000000012def         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000012df0         pop        rbp
0000000000012df1         pop        r12
0000000000012df3         ret
                        ; endp
0000000000012df4         align      8

                     loc_12df8:
0000000000012df8         test       eax, eax                                    ; CODE XREF=close_stream+31
0000000000012dfa         jne        loc_12e18

0000000000012dfc         call       j___errno_location                          ; __errno_location
0000000000012e01         mov        dword [rax], 0x0
0000000000012e07         mov        eax, 0xffffffff
0000000000012e0c         pop        rbx
0000000000012e0d         pop        rbp
0000000000012e0e         pop        r12
0000000000012e10         ret
                        ; endp
0000000000012e11         align      8

                     loc_12e18:
0000000000012e18         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000012e19         mov        eax, 0xffffffff
0000000000012e1e         pop        rbp
0000000000012e1f         pop        r12
0000000000012e21         ret
                        ; endp
0000000000012e22         align      8

                     loc_12e28:
0000000000012e28         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
0000000000012e2d         cmp        dword [rax], 0x9
0000000000012e30         pop        rbx
0000000000012e31         pop        rbp
0000000000012e32         pop        r12
0000000000012e34         setne      al
0000000000012e37         movzx      eax, al
0000000000012e3a         neg        eax
0000000000012e3c         ret
                        ; endp
0000000000012e3d         align      64                                          ; End of unwind block (FDE at 0x1bebc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     opendir_safer:
0000000000012e40         push       r14                                         ; Begin of unwind block (FDE at 0x1bf0c), CODE XREF=savedir+6
0000000000012e42         push       r13
0000000000012e44         push       r12
0000000000012e46         push       rbp
0000000000012e47         push       rbx
0000000000012e48         call       j_opendir                                   ; opendir
0000000000012e4d         test       rax, rax
0000000000012e50         mov        rbx, rax
0000000000012e53         je         loc_12e62

0000000000012e55         mov        rdi, rax                                    ; argument "__dirp" for method j_dirfd
0000000000012e58         call       j_dirfd                                     ; dirfd
0000000000012e5d         cmp        eax, 0x2
0000000000012e60         jbe        loc_12e70

                     loc_12e62:
0000000000012e62         mov        rax, rbx                                    ; CODE XREF=opendir_safer+19
0000000000012e65         pop        rbx
0000000000012e66         pop        rbp
0000000000012e67         pop        r12
0000000000012e69         pop        r13
0000000000012e6b         pop        r14
0000000000012e6d         ret
                        ; endp
0000000000012e6e         align      16

                     loc_12e70:
0000000000012e70         mov        edi, eax                                    ; CODE XREF=opendir_safer+32
0000000000012e72         mov        edx, 0x3
0000000000012e77         mov        esi, 0x406
0000000000012e7c         xor        eax, eax
0000000000012e7e         call       rpl_fcntl                                   ; rpl_fcntl
0000000000012e83         mov        r12d, eax
0000000000012e86         call       j___errno_location                          ; __errno_location
0000000000012e8b         test       r12d, r12d
0000000000012e8e         mov        rbp, rax
0000000000012e91         jns        loc_12eb8

0000000000012e93         mov        r14d, dword [rax]
0000000000012e96         xor        r13d, r13d

                     loc_12e99:
0000000000012e99         mov        rdi, rbx                                    ; argument "__dirp" for method j_closedir, CODE XREF=opendir_safer+138, opendir_safer+148
0000000000012e9c         mov        rbx, r13
0000000000012e9f         call       j_closedir                                  ; closedir
0000000000012ea4         mov        dword [rbp], r14d
0000000000012ea8         mov        rax, rbx
0000000000012eab         pop        rbx
0000000000012eac         pop        rbp
0000000000012ead         pop        r12
0000000000012eaf         pop        r13
0000000000012eb1         pop        r14
0000000000012eb3         ret
                        ; endp
0000000000012eb4         align      8

                     loc_12eb8:
0000000000012eb8         mov        edi, r12d                                   ; argument "__fd" for method j_fdopendir, CODE XREF=opendir_safer+81
0000000000012ebb         call       j_fdopendir                                 ; fdopendir
0000000000012ec0         test       rax, rax
0000000000012ec3         mov        r13, rax
0000000000012ec6         mov        r14d, dword [rbp]
0000000000012eca         jne        loc_12e99

0000000000012ecc         mov        edi, r12d                                   ; argument "__fd" for method j_close
0000000000012ecf         call       j_close                                     ; close
0000000000012ed4         jmp        loc_12e99
0000000000012ed6         align      32                                          ; End of unwind block (FDE at 0x1bf0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettime:
0000000000012ee0         mov        rsi, rdi                                    ; Begin of unwind block (FDE at 0x1bf5c), argument "__tp" for method j_clock_gettime, CODE XREF=update_timespec+76, update_timespec+176
0000000000012ee3         xor        edi, edi                                    ; argument "__clock_id" for method j_clock_gettime
0000000000012ee5         jmp        j_clock_gettime                             ; clock_gettime
                        ; endp
0000000000012eea         align      16                                          ; End of unwind block (FDE at 0x1bf5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     current_timespec:
0000000000012ef0         sub        rsp, 0x28                                   ; Begin of unwind block (FDE at 0x1bf70)
0000000000012ef4         xor        edi, edi                                    ; argument "__clock_id" for method j_clock_gettime
0000000000012ef6         mov        rsi, rsp                                    ; argument "__tp" for method j_clock_gettime
0000000000012ef9         mov        rax, qword [fs:0x28]
0000000000012f02         mov        qword [rsp+0x28+var_10], rax
0000000000012f07         xor        eax, eax
0000000000012f09         call       j_clock_gettime                             ; clock_gettime
0000000000012f0e         mov        rcx, qword [rsp+0x28+var_10]
0000000000012f13         xor        rcx, qword [fs:0x28]
0000000000012f1c         mov        rax, qword [rsp+0x28+var_28]
0000000000012f20         mov        rdx, qword [rsp+0x28+var_20]
0000000000012f25         jne        loc_12f2c

0000000000012f27         add        rsp, 0x28
0000000000012f2b         ret
                        ; endp

                     loc_12f2c:
0000000000012f2c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=current_timespec+53
                        ; endp
0000000000012f31         align      64                                          ; End of unwind block (FDE at 0x1bf70)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000012f40         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x1bf8c), CODE XREF=rpl_mbrtowc+71
0000000000012f44         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000012f46         call       j_setlocale                                 ; setlocale
0000000000012f4b         mov        rdx, rax
0000000000012f4e         mov        eax, 0x1
0000000000012f53         test       rdx, rdx
0000000000012f56         je         loc_12f75

0000000000012f58         lea        rdi, qword [aNS+13]                         ; 0x18e63
0000000000012f5f         mov        ecx, 0x2
0000000000012f64         mov        rsi, rdx
0000000000012f67         rep  cmpsb byte [rsi], byte [rdi]
0000000000012f69         seta       cl
0000000000012f6c         sbb        cl, 0x0
0000000000012f6f         xor        eax, eax
0000000000012f71         test       cl, cl
0000000000012f73         jne        loc_12f80

                     loc_12f75:
0000000000012f75         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000012f79         ret
                        ; endp
0000000000012f7a         align      128

                     loc_12f80:
0000000000012f80         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000012f87         mov        ecx, 0x6
0000000000012f8c         mov        rsi, rdx
0000000000012f8f         rep  cmpsb byte [rsi], byte [rdi]
0000000000012f91         seta       al
0000000000012f94         sbb        al, 0x0
0000000000012f96         test       al, al
0000000000012f98         setne      al
0000000000012f9b         add        rsp, 0x8
0000000000012f9f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_pjw:
0000000000012fa0         movsx      rcx, byte [rdi]                             ; End of unwind block (FDE at 0x1bf8c), Begin of unwind block (FDE at 0x1bfac), CODE XREF=triple_hash+15
0000000000012fa4         test       cl, cl
0000000000012fa6         je         loc_12fd0

0000000000012fa8         xor        eax, eax
0000000000012faa         nop        word [rax+rax]

                     loc_12fb0:
0000000000012fb0         rol        rax, 0x9                                    ; CODE XREF=hash_pjw+33
0000000000012fb4         add        rdi, 0x1
0000000000012fb8         add        rax, rcx
0000000000012fbb         movsx      rcx, byte [rdi]
0000000000012fbf         test       cl, cl
0000000000012fc1         jne        loc_12fb0

0000000000012fc3         xor        edx, edx
0000000000012fc5         div        rsi
0000000000012fc8         mov        rax, rdx
0000000000012fcb         ret
                        ; endp
0000000000012fcc         align      16

                     loc_12fd0:
0000000000012fd0         xor        edx, edx                                    ; CODE XREF=hash_pjw+6
0000000000012fd2         mov        rax, rdx
0000000000012fd5         ret
                        ; endp
0000000000012fd6         align      32                                          ; End of unwind block (FDE at 0x1bfac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000012fe0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x1bfc4), CODE XREF=gettext_quote.part.1+11
0000000000012fe4         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000012fe9         call       j_nl_langinfo                               ; nl_langinfo
0000000000012fee         test       rax, rax
0000000000012ff1         je         loc_13010

0000000000012ff3         cmp        byte [rax], 0x0
0000000000012ff6         lea        rdx, qword [aAscii]                         ; "ASCII"
0000000000012ffd         cmove      rax, rdx
0000000000013001         add        rsp, 0x8
0000000000013005         ret
                        ; endp
0000000000013006         align      16

                     loc_13010:
0000000000013010         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000013017         add        rsp, 0x8
000000000001301b         ret
                        ; endp
000000000001301c         align      32                                          ; End of unwind block (FDE at 0x1bfc4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_B8: int32_t, -184
        ;    var_BC: int32_t, -188
        ;    var_C0: int32_t, -192
        ;    var_D8: int8_t, -216
        ;    var_DC: int32_t, -220


                     dirchownmod:
0000000000013020         push       r15                                         ; Begin of unwind block (FDE at 0x1bfe4), CODE XREF=make_dir_parents+717
0000000000013022         push       r14
0000000000013024         mov        r15d, edx
0000000000013027         push       r13
0000000000013029         push       r12
000000000001302b         mov        r13d, ecx
000000000001302e         push       rbp
000000000001302f         push       rbx
0000000000013030         mov        ebp, edi
0000000000013032         mov        r12, rsi
0000000000013035         mov        r14d, r9d
0000000000013038         sub        rsp, 0xb8
000000000001303f         mov        rax, qword [fs:0x28]
0000000000013048         mov        qword [rsp+0xe8+var_40], rax
0000000000013050         xor        eax, eax
0000000000013052         test       edi, edi
0000000000013054         mov        dword [rsp+0xe8+var_DC], r8d
0000000000013059         lea        rdx, qword [rsp+0xe8+var_D8]
000000000001305e         js         loc_13130

0000000000013064         mov        esi, edi                                    ; argument "__fildes" for method j___fxstat
0000000000013066         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
000000000001306b         call       j___fxstat                                  ; __fxstat
0000000000013070         test       eax, eax
0000000000013072         mov        ebx, eax
0000000000013074         mov        r8d, dword [rsp+0xe8+var_DC]
0000000000013079         jne        loc_13220

000000000001307f         mov        ecx, dword [rsp+0xe8+var_C0]
0000000000013083         mov        eax, ecx
0000000000013085         and        eax, 0xf000
000000000001308a         cmp        eax, 0x4000
000000000001308f         jne        loc_130e0

                     loc_13091:
0000000000013091         cmp        r13d, 0xffffffff                            ; CODE XREF=dirchownmod+309
0000000000013095         je         loc_13170

000000000001309b         cmp        dword [rsp+0xe8+var_BC], r13d
00000000000130a0         je         loc_13170

                     loc_130a6:
00000000000130a6         test       ebp, ebp                                    ; CODE XREF=dirchownmod+347
00000000000130a8         mov        dword [rsp+0xe8+var_DC], ecx
00000000000130ac         mov        edx, r8d
00000000000130af         mov        esi, r13d
00000000000130b2         jns        loc_131c0

00000000000130b8         cmp        r15d, 0xffffffff
00000000000130bc         mov        rdi, r12
00000000000130bf         je         loc_13200

00000000000130c5         call       j_lchown                                    ; lchown
00000000000130ca         mov        ecx, dword [rsp+0xe8+var_DC]
00000000000130ce         mov        ebx, eax

                     loc_130d0:
00000000000130d0         test       ebx, ebx                                    ; CODE XREF=dirchownmod+491
00000000000130d2         jne        loc_13104

00000000000130d4         jmp        loc_131d1
00000000000130d9         align      32

                     loc_130e0:
00000000000130e0         call       j___errno_location                          ; __errno_location, CODE XREF=dirchownmod+111
00000000000130e5         mov        r13d, 0x14
00000000000130eb         mov        r12, rax
00000000000130ee         mov        dword [rax], 0x14
00000000000130f4         mov        ebx, 0xffffffff

                     loc_130f9:
00000000000130f9         mov        edi, ebp                                    ; argument "__fd" for method j_close, CODE XREF=dirchownmod+523
00000000000130fb         call       j_close                                     ; close
0000000000013100         mov        dword [r12], r13d

                     loc_13104:
0000000000013104         mov        rcx, qword [rsp+0xe8+var_40]                ; CODE XREF=dirchownmod+178, dirchownmod+291, dirchownmod+329, dirchownmod+405, dirchownmod+452, dirchownmod+473
000000000001310c         xor        rcx, qword [fs:0x28]
0000000000013115         mov        eax, ebx
0000000000013117         jne        loc_13230

000000000001311d         add        rsp, 0xb8
0000000000013124         pop        rbx
0000000000013125         pop        rbp
0000000000013126         pop        r12
0000000000013128         pop        r13
000000000001312a         pop        r14
000000000001312c         pop        r15
000000000001312e         ret
                        ; endp
000000000001312f         align      16

                     loc_13130:
0000000000013130         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat, CODE XREF=dirchownmod+62
0000000000013135         call       j___xstat                                   ; __xstat
000000000001313a         test       eax, eax
000000000001313c         mov        ebx, eax
000000000001313e         mov        r8d, dword [rsp+0xe8+var_DC]
0000000000013143         jne        loc_13104

0000000000013145         mov        ecx, dword [rsp+0xe8+var_C0]
0000000000013149         mov        eax, ecx
000000000001314b         and        eax, 0xf000
0000000000013150         cmp        eax, 0x4000
0000000000013155         je         loc_13091

000000000001315b         call       j___errno_location                          ; __errno_location
0000000000013160         or         ebx, 0xffffffff
0000000000013163         mov        dword [rax], 0x14
0000000000013169         jmp        loc_13104
000000000001316b         align      16

                     loc_13170:
0000000000013170         cmp        r8d, 0xffffffff                             ; CODE XREF=dirchownmod+117, dirchownmod+128
0000000000013174         je         loc_13181

0000000000013176         cmp        dword [rsp+0xe8+var_B8], r8d
000000000001317b         jne        loc_130a6

                     loc_13181:
0000000000013181         xor        edx, edx                                    ; CODE XREF=dirchownmod+340, dirchownmod+436

                     loc_13183:
0000000000013183         mov        eax, ecx                                    ; CODE XREF=dirchownmod+446
0000000000013185         xor        eax, r14d
0000000000013188         or         eax, edx
000000000001318a         test       dword [rsp+0xe8+arg_0], eax
0000000000013191         je         loc_131e0

0000000000013193         mov        esi, dword [rsp+0xe8+arg_0]
000000000001319a         and        ecx, 0xfff
00000000000131a0         not        esi
00000000000131a2         and        esi, ecx
00000000000131a4         or         esi, r14d
00000000000131a7         test       ebp, ebp
00000000000131a9         jns        loc_13210

00000000000131ab         mov        rdi, r12                                    ; argument "__file" for method j_chmod
00000000000131ae         call       j_chmod                                     ; chmod
00000000000131b3         mov        ebx, eax
00000000000131b5         jmp        loc_13104
00000000000131ba         align      64

                     loc_131c0:
00000000000131c0         mov        edi, ebp                                    ; argument "__fd" for method j_fchown, CODE XREF=dirchownmod+146
00000000000131c2         call       j_fchown                                    ; fchown
00000000000131c7         test       eax, eax
00000000000131c9         mov        ebx, eax
00000000000131cb         mov        ecx, dword [rsp+0xe8+var_DC]
00000000000131cf         jne        loc_13220

                     loc_131d1:
00000000000131d1         test       cl, 0x49                                    ; CODE XREF=dirchownmod+180
00000000000131d4         je         loc_13181

00000000000131d6         mov        edx, ecx
00000000000131d8         and        edx, 0xc00
00000000000131de         jmp        loc_13183

                     loc_131e0:
00000000000131e0         xor        ebx, ebx                                    ; CODE XREF=dirchownmod+369
00000000000131e2         test       ebp, ebp
00000000000131e4         js         loc_13104

00000000000131ea         nop        word [rax+rax]

                     loc_131f0:
00000000000131f0         mov        edi, ebp                                    ; argument "__fd" for method j_close, CODE XREF=dirchownmod+507
00000000000131f2         call       j_close                                     ; close
00000000000131f7         mov        ebx, eax
00000000000131f9         jmp        loc_13104
00000000000131fe         align      512

                     loc_13200:
0000000000013200         call       j_chown                                     ; chown, CODE XREF=dirchownmod+159
0000000000013205         mov        ecx, dword [rsp+0xe8+var_DC]
0000000000013209         mov        ebx, eax
000000000001320b         jmp        loc_130d0

                     loc_13210:
0000000000013210         mov        edi, ebp                                    ; argument "__fd" for method j_fchmod, CODE XREF=dirchownmod+393
0000000000013212         call       j_fchmod                                    ; fchmod
0000000000013217         test       eax, eax
0000000000013219         mov        ebx, eax
000000000001321b         je         loc_131f0

000000000001321d         nop        dword [rax]

                     loc_13220:
0000000000013220         call       j___errno_location                          ; __errno_location, CODE XREF=dirchownmod+89, dirchownmod+431
0000000000013225         mov        r12, rax
0000000000013228         mov        r13d, dword [rax]
000000000001322b         jmp        loc_130f9

                     loc_13230:
0000000000013230         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=dirchownmod+247
                        ; endp
0000000000013235         align      64                                          ; End of unwind block (FDE at 0x1bfe4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_38: int8_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int32_t, -88


                     openat_safer:
0000000000013240         sub        rsp, 0x58                                   ; Begin of unwind block (FDE at 0x1c034), CODE XREF=opendirat+21
0000000000013244         mov        qword [rsp+0x58+var_20], rcx
0000000000013249         xor        ecx, ecx
000000000001324b         mov        rax, qword [fs:0x28]
0000000000013254         mov        qword [rsp+0x58+var_40], rax
0000000000013259         xor        eax, eax
000000000001325b         test       dl, 0x40
000000000001325e         jne        loc_13288

                     loc_13260:
0000000000013260         xor        eax, eax                                    ; CODE XREF=openat_safer+103
0000000000013262         call       j_openat                                    ; openat
0000000000013267         mov        edi, eax
0000000000013269         call       fd_safer                                    ; fd_safer
000000000001326e         mov        rsi, qword [rsp+0x58+var_40]
0000000000013273         xor        rsi, qword [fs:0x28]
000000000001327c         jne        loc_132a9

000000000001327e         add        rsp, 0x58
0000000000013282         ret
                        ; endp
0000000000013283         align      8

                     loc_13288:
0000000000013288         lea        rax, qword [rsp+0x58+arg_0]                 ; CODE XREF=openat_safer+30
000000000001328d         mov        dword [rsp+0x58+var_58], 0x18
0000000000013294         mov        ecx, dword [rsp+0x58+var_20]
0000000000013298         mov        qword [rsp+0x58+var_50], rax
000000000001329d         lea        rax, qword [rsp+0x58+var_38]
00000000000132a2         mov        qword [rsp+0x58+var_48], rax
00000000000132a7         jmp        loc_13260

                     loc_132a9:
00000000000132a9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=openat_safer+60
                        ; endp
00000000000132ae         align      16                                          ; End of unwind block (FDE at 0x1c034)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randint_new:
00000000000132b0         push       rbx                                         ; Begin of unwind block (FDE at 0x1c054)
00000000000132b1         mov        rbx, rdi
00000000000132b4         mov        edi, 0x18
00000000000132b9         call       xmalloc                                     ; xmalloc
00000000000132be         mov        qword [rax], rbx
00000000000132c1         mov        qword [rax+0x10], 0x0
00000000000132c9         mov        qword [rax+8], 0x0
00000000000132d1         pop        rbx
00000000000132d2         ret
                        ; endp
00000000000132d3         align      32                                          ; End of unwind block (FDE at 0x1c054)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randint_all_new:
00000000000132e0         push       rbx                                         ; Begin of unwind block (FDE at 0x1c070), CODE XREF=try_tempname_len+123
00000000000132e1         call       randread_new                                ; randread_new
00000000000132e6         test       rax, rax
00000000000132e9         je         loc_13310

00000000000132eb         mov        rbx, rax
00000000000132ee         mov        edi, 0x18
00000000000132f3         call       xmalloc                                     ; xmalloc
00000000000132f8         mov        qword [rax], rbx
00000000000132fb         mov        qword [rax+0x10], 0x0
0000000000013303         mov        qword [rax+8], 0x0
000000000001330b         pop        rbx
000000000001330c         ret
                        ; endp
000000000001330d         align      16

                     loc_13310:
0000000000013310         xor        eax, eax                                    ; CODE XREF=randint_all_new+9
0000000000013312         pop        rbx
0000000000013313         ret
                        ; endp
0000000000013314         align      32                                          ; End of unwind block (FDE at 0x1c070)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randint_get_source:
0000000000013320         mov        rax, qword [rdi]                            ; Begin of unwind block (FDE at 0x1c090)
0000000000013323         ret
                        ; endp
0000000000013324         align      16                                          ; End of unwind block (FDE at 0x1c090)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     randint_genmax:
0000000000013330         push       r15                                         ; Begin of unwind block (FDE at 0x1c0a4), CODE XREF=try_tempname_len+196
0000000000013332         push       r14
0000000000013334         lea        r15, qword [rsi+1]
0000000000013338         push       r13
000000000001333a         push       r12
000000000001333c         mov        r13, rdi
000000000001333f         push       rbp
0000000000013340         push       rbx
0000000000013341         mov        r14, rsi
0000000000013344         sub        rsp, 0x28
0000000000013348         mov        rbp, qword [rdi+8]
000000000001334c         mov        rbx, qword [rdi+0x10]
0000000000013350         mov        rax, qword [fs:0x28]
0000000000013359         mov        qword [rsp+0x58+var_40], rax
000000000001335e         xor        eax, eax
0000000000013360         mov        rax, qword [rdi]
0000000000013363         lea        r12, qword [rsp+0x58+var_48]
0000000000013368         mov        qword [rsp+0x58+var_50], rax
000000000001336d         jmp        loc_133a5
000000000001336f         align      16

                     loc_13370:
0000000000013370         cmp        rbx, r14                                    ; CODE XREF=randint_genmax+120
0000000000013373         je         loc_133ff

                     loc_13379:
0000000000013379         mov        rax, rbx                                    ; CODE XREF=randint_genmax+201
000000000001337c         xor        edx, edx
000000000001337e         sub        rax, r14
0000000000013381         div        r15
0000000000013384         sub        rbx, rdx
0000000000013387         mov        rdi, rdx
000000000001338a         mov        rsi, rax
000000000001338d         xor        edx, edx
000000000001338f         mov        rax, rbp
0000000000013392         div        r15
0000000000013395         cmp        rbp, rbx
0000000000013398         jbe        loc_13438

000000000001339e         lea        rbx, qword [rdi-1]
00000000000133a2         mov        rbp, rdx

                     loc_133a5:
00000000000133a5         cmp        rbx, r14                                    ; CODE XREF=randint_genmax+61
00000000000133a8         jae        loc_13370

00000000000133aa         mov        rax, rbx
00000000000133ad         xor        edx, edx
00000000000133af         nop

                     loc_133b0:
00000000000133b0         shl        rax, 0x8                                    ; CODE XREF=randint_genmax+145
00000000000133b4         add        rdx, 0x1
00000000000133b8         add        rax, 0xff
00000000000133be         cmp        r14, rax
00000000000133c1         ja         loc_133b0

00000000000133c3         mov        rdi, qword [rsp+0x58+var_50]
00000000000133c8         mov        rsi, r12
00000000000133cb         call       randread                                    ; randread
00000000000133d0         mov        rax, r12
00000000000133d3         nop        dword [rax+rax]

                     loc_133d8:
00000000000133d8         movzx      edx, byte [rax]                             ; CODE XREF=randint_genmax+196
00000000000133db         shl        rbx, 0x8
00000000000133df         shl        rbp, 0x8
00000000000133e3         add        rbx, 0xff
00000000000133ea         add        rax, 0x1
00000000000133ee         add        rbp, rdx
00000000000133f1         cmp        r14, rbx
00000000000133f4         ja         loc_133d8

00000000000133f6         cmp        rbx, r14
00000000000133f9         jne        loc_13379

                     loc_133ff:
00000000000133ff         mov        qword [r13+0x10], 0x0                       ; CODE XREF=randint_genmax+67
0000000000013407         mov        qword [r13+8], 0x0

                     loc_1340f:
000000000001340f         mov        rcx, qword [rsp+0x58+var_40]                ; CODE XREF=randint_genmax+275
0000000000013414         xor        rcx, qword [fs:0x28]
000000000001341d         mov        rax, rbp
0000000000013420         jne        loc_13445

0000000000013422         add        rsp, 0x28
0000000000013426         pop        rbx
0000000000013427         pop        rbp
0000000000013428         pop        r12
000000000001342a         pop        r13
000000000001342c         pop        r14
000000000001342e         pop        r15
0000000000013430         ret
                        ; endp
0000000000013431         align      8

                     loc_13438:
0000000000013438         mov        qword [r13+8], rax                          ; CODE XREF=randint_genmax+104
000000000001343c         mov        qword [r13+0x10], rsi
0000000000013440         mov        rbp, rdx
0000000000013443         jmp        loc_1340f

                     loc_13445:
0000000000013445         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=randint_genmax+240
                        ; endp
000000000001344a         align      16                                          ; End of unwind block (FDE at 0x1c0a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randint_free:
0000000000013450         push       rbx                                         ; Begin of unwind block (FDE at 0x1c0f0)
0000000000013451         mov        rdx, 0xffffffffffffffff
0000000000013458         mov        rbx, rdi
000000000001345b         mov        esi, 0x18
0000000000013460         call       j___explicit_bzero_chk                      ; __explicit_bzero_chk
0000000000013465         mov        rdi, rbx
0000000000013468         pop        rbx
0000000000013469         jmp        sub_30d0                                    ; sub_30d0
                        ; endp
000000000001346e         align      16                                          ; End of unwind block (FDE at 0x1c0f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randint_all_free:
0000000000013470         push       r13                                         ; Begin of unwind block (FDE at 0x1c10c), CODE XREF=try_tempname_len+258, try_tempname_len+304
0000000000013472         push       r12
0000000000013474         push       rbp
0000000000013475         push       rbx
0000000000013476         mov        rbx, rdi
0000000000013479         sub        rsp, 0x8
000000000001347d         mov        rdi, qword [rdi]
0000000000013480         call       randread_free                               ; randread_free
0000000000013485         mov        r12d, eax
0000000000013488         call       j___errno_location                          ; __errno_location
000000000001348d         mov        r13d, dword [rax]
0000000000013490         mov        rdi, rbx
0000000000013493         mov        rdx, 0xffffffffffffffff
000000000001349a         mov        esi, 0x18
000000000001349f         mov        rbp, rax
00000000000134a2         call       j___explicit_bzero_chk                      ; __explicit_bzero_chk
00000000000134a7         mov        rdi, rbx
00000000000134aa         call       sub_30d0                                    ; sub_30d0
00000000000134af         mov        dword [rbp], r13d
00000000000134b3         add        rsp, 0x8
00000000000134b7         mov        eax, r12d
00000000000134ba         pop        rbx
00000000000134bb         pop        rbp
00000000000134bc         pop        r12
00000000000134be         pop        r13
00000000000134c0         ret
                        ; endp
00000000000134c1         align      16                                          ; End of unwind block (FDE at 0x1c10c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randread_error:
00000000000134d0         push       rbp                                         ; Begin of unwind block (FDE at 0x1c144), DATA XREF=randread_new+90, randread_new+196, randread_new+348
00000000000134d1         push       rbx
00000000000134d2         sub        rsp, 0x8
00000000000134d6         test       rdi, rdi
00000000000134d9         je         loc_13518

00000000000134db         call       quote                                       ; quote
00000000000134e0         mov        rbp, rax
00000000000134e3         call       j___errno_location                          ; __errno_location
00000000000134e8         cmp        dword [rax], 0x0
00000000000134eb         mov        rbx, rax
00000000000134ee         mov        edx, 0x5
00000000000134f3         je         loc_1351d

00000000000134f5         lea        rsi, qword [aSReadError]                    ; argument "msgid" for method j_dcgettext, "%s: read error"
00000000000134fc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000134fe         call       j_dcgettext                                 ; dcgettext

                     loc_13503:
0000000000013503         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure, CODE XREF=randread_error+91
0000000000013509         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
000000000001350b         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000001350e         mov        rcx, rbp
0000000000013511         xor        eax, eax
0000000000013513         call       j_error                                     ; error

                     loc_13518:
0000000000013518         call       j_abort                                     ; abort, CODE XREF=randread_error+9
                        ; endp

                     loc_1351d:
000000000001351d         lea        rsi, qword [aSEndOfFile]                    ; argument "msgid" for method j_dcgettext, "%s: end of file", CODE XREF=randread_error+35
0000000000013524         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000013526         call       j_dcgettext                                 ; dcgettext
000000000001352b         jmp        loc_13503
000000000001352d         align      16                                          ; End of unwind block (FDE at 0x1c144)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_58: int32_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104


                     randread_new:
0000000000013530         push       r15                                         ; Begin of unwind block (FDE at 0x1c164), CODE XREF=randint_all_new+1
0000000000013532         push       r14
0000000000013534         push       r13
0000000000013536         push       r12
0000000000013538         push       rbp
0000000000013539         push       rbx
000000000001353a         sub        rsp, 0x38
000000000001353e         mov        rax, qword [fs:0x28]
0000000000013547         mov        qword [rsp+0x68+var_40], rax
000000000001354c         xor        eax, eax
000000000001354e         test       rsi, rsi
0000000000013551         je         loc_13678

0000000000013557         test       rdi, rdi
000000000001355a         mov        r12, rdi
000000000001355d         mov        rbp, rsi
0000000000013560         je         loc_135e0

0000000000013562         lea        rsi, qword [aDevurandom+13]                 ; 0x18e9d
0000000000013569         call       fopen_safer                                 ; fopen_safer
000000000001356e         test       rax, rax
0000000000013571         mov        r13, rax
0000000000013574         je         loc_13778

000000000001357a         mov        edi, 0x1038
000000000001357f         call       xmalloc                                     ; xmalloc
0000000000013584         mov        rbx, rax
0000000000013587         mov        qword [rax], r13
000000000001358a         lea        rax, qword [randread_error]                 ; randread_error
0000000000013591         cmp        rbp, 0x1000
0000000000013598         mov        ecx, 0x1000
000000000001359d         lea        rsi, qword [rbx+0x18]                       ; argument "__buf" for method j_setvbuf
00000000000135a1         cmovbe     rcx, rbp                                    ; argument "__n" for method j_setvbuf
00000000000135a5         mov        qword [rbx+8], rax
00000000000135a9         mov        qword [rbx+0x10], r12
00000000000135ad         xor        edx, edx                                    ; argument "__modes" for method j_setvbuf
00000000000135af         mov        rdi, r13                                    ; argument "__stream" for method j_setvbuf
00000000000135b2         call       j_setvbuf                                   ; setvbuf

                     loc_135b7:
00000000000135b7         mov        rdx, qword [rsp+0x68+var_40]                ; CODE XREF=randread_new+317, randread_new+367, randread_new+586
00000000000135bc         xor        rdx, qword [fs:0x28]
00000000000135c5         mov        rax, rbx
00000000000135c8         jne        loc_1377f

00000000000135ce         add        rsp, 0x38
00000000000135d2         pop        rbx
00000000000135d3         pop        rbp
00000000000135d4         pop        r12
00000000000135d6         pop        r13
00000000000135d8         pop        r14
00000000000135da         pop        r15
00000000000135dc         ret
                        ; endp
00000000000135dd         align      32

                     loc_135e0:
00000000000135e0         mov        edi, 0x1038                                 ; CODE XREF=randread_new+48
00000000000135e5         call       xmalloc                                     ; xmalloc
00000000000135ea         mov        rbx, rax
00000000000135ed         mov        qword [rax], 0x0
00000000000135f4         lea        rax, qword [randread_error]                 ; randread_error
00000000000135fb         lea        rdi, qword [aDevurandom]                    ; argument "__file" for method j_open, "/dev/urandom"
0000000000013602         xor        esi, esi                                    ; argument "__oflag" for method j_open
0000000000013604         mov        qword [rbx+0x10], 0x0
000000000001360c         mov        qword [rbx+8], rax
0000000000013610         mov        qword [rbx+0x18], 0x0
0000000000013618         xor        eax, eax
000000000001361a         call       j_open                                      ; open
000000000001361f         test       eax, eax
0000000000013621         lea        r13, qword [rbx+0x20]
0000000000013625         mov        r15d, eax
0000000000013628         js         loc_136a8

000000000001362a         cmp        rbp, 0x800
0000000000013631         mov        rdx, rbp
0000000000013634         mov        r14d, 0x800
000000000001363a         cmova      rdx, r14
000000000001363e         mov        ecx, 0x1018
0000000000013643         mov        rsi, r13
0000000000013646         mov        edi, eax
0000000000013648         call       j___read_chk                                ; __read_chk
000000000001364d         mov        edi, r15d                                   ; argument "__fd" for method j_close
0000000000013650         mov        rbp, rax
0000000000013653         call       j_close                                     ; close
0000000000013658         cmp        rbp, 0x7ff
000000000001365f         jle        loc_13784

                     loc_13665:
0000000000013665         mov        rdi, r13                                    ; CODE XREF=randread_new+502, randread_new+547, randread_new+573, randread_new+663, randread_new+742, randread_new+798
0000000000013668         call       isaac_seed                                  ; isaac_seed
000000000001366d         jmp        loc_135b7
0000000000013672         align      8

                     loc_13678:
0000000000013678         mov        edi, 0x1038                                 ; CODE XREF=randread_new+33
000000000001367d         call       xmalloc                                     ; xmalloc
0000000000013682         mov        rbx, rax
0000000000013685         mov        qword [rax], 0x0
000000000001368c         lea        rax, qword [randread_error]                 ; randread_error
0000000000013693         mov        qword [rbx+0x10], 0x0
000000000001369b         mov        qword [rbx+8], rax
000000000001369f         jmp        loc_135b7
00000000000136a4         align      8

                     loc_136a8:
00000000000136a8         lea        r12, qword [rsp+0x68+var_58]                ; CODE XREF=randread_new+248
00000000000136ad         xor        esi, esi                                    ; argument "__tz" for method j_gettimeofday
00000000000136af         mov        r14d, 0x18
00000000000136b5         mov        rdi, r12                                    ; argument "__tv" for method j_gettimeofday
00000000000136b8         call       j_gettimeofday                              ; gettimeofday
00000000000136bd         movdqa     xmm0, xmmword [rsp+0x68+var_58]
00000000000136c3         movups     xmmword [rbx+0x20], xmm0
00000000000136c7         call       j_getpid                                    ; getpid
00000000000136cc         mov        dword [rbx+0x30], eax
00000000000136cf         mov        dword [rsp+0x68+var_58], eax
00000000000136d3         call       j_getppid                                   ; getppid
00000000000136d8         mov        dword [rsp+0x68+var_58], eax
00000000000136dc         mov        dword [rbx+0x34], eax

                     loc_136df:
00000000000136df         mov        ebp, 0x800                                  ; CODE XREF=randread_new+804
00000000000136e4         mov        eax, 0x4
00000000000136e9         sub        rbp, r14
00000000000136ec         cmp        rbp, 0x4
00000000000136f0         cmova      rbp, rax
00000000000136f4         call       j_getuid                                    ; getuid
00000000000136f9         test       ebp, ebp
00000000000136fb         mov        dword [rsp+0x68+var_58], eax
00000000000136ff         lea        rcx, qword [r13+r14]
0000000000013704         mov        esi, ebp
0000000000013706         je         loc_1371c

0000000000013708         xor        eax, eax

                     loc_1370a:
000000000001370a         mov        edx, eax                                    ; CODE XREF=randread_new+490
000000000001370c         add        eax, 0x1
000000000001370f         movzx      edi, byte [r12+rdx]
0000000000013714         cmp        eax, esi
0000000000013716         mov        byte [rcx+rdx], dil
000000000001371a         jb         loc_1370a

                     loc_1371c:
000000000001371c         add        rbp, r14                                    ; CODE XREF=randread_new+470
000000000001371f         cmp        rbp, 0x7ff
0000000000013726         ja         loc_13665

000000000001372c         call       j_getgid                                    ; getgid
0000000000013731         mov        dword [rsp+0x68+var_58], eax
0000000000013735         mov        eax, 0x800
000000000001373a         mov        edx, 0x4
000000000001373f         sub        rax, rbp
0000000000013742         lea        rcx, qword [r13+rbp]
0000000000013747         cmp        rax, 0x4
000000000001374b         cmova      rax, rdx
000000000001374f         test       eax, eax
0000000000013751         mov        esi, eax
0000000000013753         je         loc_13665

0000000000013759         xor        eax, eax

                     loc_1375b:
000000000001375b         mov        edx, eax                                    ; CODE XREF=randread_new+571
000000000001375d         add        eax, 0x1
0000000000013760         movzx      edi, byte [r12+rdx]
0000000000013765         cmp        eax, esi
0000000000013767         mov        byte [rcx+rdx], dil
000000000001376b         jb         loc_1375b

000000000001376d         jmp        loc_13665
0000000000013772         align      8

                     loc_13778:
0000000000013778         xor        ebx, ebx                                    ; CODE XREF=randread_new+68
000000000001377a         jmp        loc_135b7

                     loc_1377f:
000000000001377f         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=randread_new+152
                        ; endp

                     loc_13784:
0000000000013784         test       rbp, rbp                                    ; CODE XREF=randread_new+303
0000000000013787         mov        r15, r14
000000000001378a         mov        eax, 0x10
000000000001378f         cmovs      rbp, r12
0000000000013793         lea        r12, qword [rsp+0x68+var_58]
0000000000013798         sub        r15, rbp
000000000001379b         cmp        r15, 0x10
000000000001379f         mov        rdi, r12                                    ; argument "__tv" for method j_gettimeofday
00000000000137a2         cmova      r15, rax
00000000000137a6         xor        esi, esi                                    ; argument "__tz" for method j_gettimeofday
00000000000137a8         call       j_gettimeofday                              ; gettimeofday
00000000000137ad         lea        rax, qword [r13+rbp]
00000000000137b2         add        rbp, r15
00000000000137b5         mov        ecx, r15d
00000000000137b8         cmp        rbp, 0x7ff
00000000000137bf         mov        rsi, r12
00000000000137c2         mov        rdi, rax
00000000000137c5         rep movsb  byte [rdi], byte [rsi]
00000000000137c7         ja         loc_13665

00000000000137cd         mov        r15, r14
00000000000137d0         mov        r8d, 0x4
00000000000137d6         sub        r15, rbp
00000000000137d9         mov        qword [rsp+0x68+var_60], r8
00000000000137de         cmp        r15, 0x4
00000000000137e2         cmova      r15, r8
00000000000137e6         lea        rdx, qword [rbp+r15]
00000000000137eb         add        rbp, r13
00000000000137ee         mov        qword [rsp+0x68+var_68], rdx
00000000000137f2         call       j_getpid                                    ; getpid
00000000000137f7         mov        rdx, qword [rsp+0x68+var_68]
00000000000137fb         mov        dword [rsp+0x68+var_58], eax
00000000000137ff         mov        ecx, r15d
0000000000013802         mov        rdi, rbp
0000000000013805         mov        rsi, r12
0000000000013808         mov        r8, qword [rsp+0x68+var_60]
000000000001380d         rep movsb  byte [rdi], byte [rsi]
000000000001380f         cmp        rdx, 0x7ff
0000000000013816         jg         loc_13665

000000000001381c         sub        r14, rdx
000000000001381f         cmp        r14, 0x4
0000000000013823         cmova      r14, r8
0000000000013827         call       j_getppid                                   ; getppid
000000000001382c         mov        rdx, qword [rsp+0x68+var_68]
0000000000013830         mov        dword [rsp+0x68+var_58], eax
0000000000013834         mov        ecx, r14d
0000000000013837         mov        rsi, r12
000000000001383a         lea        rax, qword [r13+rdx]
000000000001383f         add        r14, rdx
0000000000013842         cmp        r14, 0x7ff
0000000000013849         mov        rdi, rax
000000000001384c         rep movsb  byte [rdi], byte [rsi]
000000000001384e         ja         loc_13665

0000000000013854         jmp        loc_136df
0000000000013859         align      32                                          ; End of unwind block (FDE at 0x1c164)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randread_set_handler:
0000000000013860         mov        qword [rdi+8], rsi                          ; Begin of unwind block (FDE at 0x1c1b0)
0000000000013864         ret
                        ; endp
0000000000013865         align      16                                          ; End of unwind block (FDE at 0x1c1b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randread_set_handler_arg:
0000000000013870         mov        qword [rdi+0x10], rsi                       ; Begin of unwind block (FDE at 0x1c1c4)
0000000000013874         ret
                        ; endp
0000000000013875         align      128                                         ; End of unwind block (FDE at 0x1c1c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     randread:
0000000000013880         push       r15                                         ; Begin of unwind block (FDE at 0x1c1d8), CODE XREF=randint_genmax+155
0000000000013882         push       r14
0000000000013884         push       r13
0000000000013886         push       r12
0000000000013888         mov        r12, rdi
000000000001388b         push       rbp
000000000001388c         push       rbx
000000000001388d         mov        rbp, rdx
0000000000013890         mov        rbx, rsi
0000000000013893         sub        rsp, 0x18
0000000000013897         mov        rcx, qword [rdi]
000000000001389a         test       rcx, rcx
000000000001389d         mov        qword [rsp+0x48+var_40], rcx
00000000000138a2         je         loc_13908

00000000000138a4         call       j___errno_location                          ; __errno_location
00000000000138a9         mov        rcx, qword [rsp+0x48+var_40]
00000000000138ae         mov        r13, rax
00000000000138b1         jmp        loc_138d6
00000000000138b3         align      8

                     loc_138b8:
00000000000138b8         mov        rax, qword [r12]                            ; CODE XREF=randread+112
00000000000138bc         mov        rdi, qword [r12+0x10]
00000000000138c1         mov        eax, dword [rax]
00000000000138c3         and        eax, 0x20
00000000000138c6         cmovne     eax, edx
00000000000138c9         mov        dword [r13], eax
00000000000138cd         call       qword [r12+8]
00000000000138d2         mov        rcx, qword [r12]

                     loc_138d6:
00000000000138d6         mov        rdx, rbp                                    ; argument "__n" for method j_fread_unlocked, CODE XREF=randread+49
00000000000138d9         mov        rdi, rbx                                    ; argument "__ptr" for method j_fread_unlocked
00000000000138dc         mov        esi, 0x1                                    ; argument "__size" for method j_fread_unlocked
00000000000138e1         call       j_fread_unlocked                            ; fread_unlocked
00000000000138e6         add        rbx, rax
00000000000138e9         sub        rbp, rax
00000000000138ec         mov        edx, dword [r13]
00000000000138f0         jne        loc_138b8

                     loc_138f2:
00000000000138f2         add        rsp, 0x18                                   ; CODE XREF=randread+366
00000000000138f6         pop        rbx
00000000000138f7         pop        rbp
00000000000138f8         pop        r12
00000000000138fa         pop        r13
00000000000138fc         pop        r14
00000000000138fe         pop        r15
0000000000013900         ret
                        ; endp
0000000000013901         align      8

                     loc_13908:
0000000000013908         mov        r14, qword [rdi+0x18]                       ; CODE XREF=randread+34
000000000001390c         lea        rax, qword [rdi+0x838]
0000000000013913         lea        r13, qword [rdi+0x20]
0000000000013917         mov        qword [rsp+0x48+var_40], rax
000000000001391c         cmp        rdx, r14
000000000001391f         jbe        loc_13a02

                     loc_13925:
0000000000013925         mov        esi, 0x800                                  ; CODE XREF=randread+330
000000000001392a         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
000000000001392d         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
0000000000013930         sub        rsi, r14
0000000000013933         add        rsi, qword [rsp+0x48+var_40]                ; argument "__src" for method j_memcpy
0000000000013938         add        rbx, r14
000000000001393b         sub        rbp, r14
000000000001393e         call       j_memcpy                                    ; memcpy
0000000000013943         test       bl, 0x7
0000000000013946         jne        loc_139b0

0000000000013948         cmp        rbp, 0x7ff
000000000001394f         jbe        loc_139f3

0000000000013955         lea        r15, qword [rbp-0x800]
000000000001395c         mov        r14, r15
000000000001395f         and        r14d, 0x7ff
0000000000013966         jmp        loc_1397c
0000000000013968         align      16

                     loc_13970:
0000000000013970         cmp        r15, r14                                    ; CODE XREF=randread+276
0000000000013973         je         loc_139b0

0000000000013975         sub        r15, 0x800

                     loc_1397c:
000000000001397c         mov        rsi, rbx                                    ; CODE XREF=randread+230
000000000001397f         mov        rdi, r13
0000000000013982         add        rbx, 0x800
0000000000013989         call       isaac_refill                                ; isaac_refill
000000000001398e         test       r15, r15
0000000000013991         mov        rbp, r15
0000000000013994         jne        loc_13970

0000000000013996         mov        qword [r12+0x18], 0x0
000000000001399f         add        rsp, 0x18
00000000000139a3         pop        rbx
00000000000139a4         pop        rbp
00000000000139a5         pop        r12
00000000000139a7         pop        r13
00000000000139a9         pop        r14
00000000000139ab         pop        r15
00000000000139ad         ret
                        ; endp
00000000000139ae         align      16

                     loc_139b0:
00000000000139b0         mov        rsi, qword [rsp+0x48+var_40]                ; CODE XREF=randread+198, randread+243
00000000000139b5         mov        rdi, r13
00000000000139b8         mov        r14d, 0x800
00000000000139be         call       isaac_refill                                ; isaac_refill
00000000000139c3         cmp        rbp, 0x800
00000000000139ca         ja         loc_13925

                     loc_139d0:
00000000000139d0         mov        r14d, 0x800                                 ; CODE XREF=randread+384

                     loc_139d6:
00000000000139d6         mov        rsi, qword [rsp+0x48+var_40]                ; argument "__src" for method j_memcpy, CODE XREF=randread+404
00000000000139db         mov        rdx, rbp                                    ; argument "__n" for method j_memcpy
00000000000139de         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
00000000000139e1         sub        r14, rbp
00000000000139e4         call       j_memcpy                                    ; memcpy
00000000000139e9         mov        qword [r12+0x18], r14
00000000000139ee         jmp        loc_138f2

                     loc_139f3:
00000000000139f3         mov        rsi, qword [rsp+0x48+var_40]                ; CODE XREF=randread+207
00000000000139f8         mov        rdi, r13
00000000000139fb         call       isaac_refill                                ; isaac_refill
0000000000013a00         jmp        loc_139d0

                     loc_13a02:
0000000000013a02         mov        r15, rax                                    ; CODE XREF=randread+159
0000000000013a05         sub        r15, r14
0000000000013a08         lea        rax, qword [r15+0x800]
0000000000013a0f         mov        qword [rsp+0x48+var_40], rax
0000000000013a14         jmp        loc_139d6
0000000000013a16         align      32                                          ; End of unwind block (FDE at 0x1c1d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randread_free:
0000000000013a20         push       rbp                                         ; Begin of unwind block (FDE at 0x1c23c), CODE XREF=randint_all_free+16
0000000000013a21         push       rbx
0000000000013a22         mov        rdx, 0xffffffffffffffff
0000000000013a29         mov        rbx, rdi
0000000000013a2c         mov        esi, 0x1038
0000000000013a31         sub        rsp, 0x8
0000000000013a35         mov        rbp, qword [rdi]
0000000000013a38         call       j___explicit_bzero_chk                      ; __explicit_bzero_chk
0000000000013a3d         mov        rdi, rbx
0000000000013a40         call       sub_30d0                                    ; sub_30d0
0000000000013a45         test       rbp, rbp
0000000000013a48         je         loc_13a60

0000000000013a4a         add        rsp, 0x8
0000000000013a4e         mov        rdi, rbp
0000000000013a51         pop        rbx
0000000000013a52         pop        rbp
0000000000013a53         jmp        rpl_fclose                                  ; rpl_fclose
0000000000013a58         align      32

                     loc_13a60:
0000000000013a60         add        rsp, 0x8                                    ; CODE XREF=randread_free+40
0000000000013a64         xor        eax, eax
0000000000013a66         pop        rbx
0000000000013a67         pop        rbp
0000000000013a68         ret
                        ; endp
0000000000013a69         align      16                                          ; End of unwind block (FDE at 0x1c23c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     isaac_refill:
0000000000013a70         mov        rax, qword [rdi+0x810]                      ; Begin of unwind block (FDE at 0x1c274), CODE XREF=randread+265, randread+318, randread+379
0000000000013a77         mov        rdx, qword [rdi+0x800]
0000000000013a7e         lea        r9, qword [rdi+0x400]
0000000000013a85         lea        rcx, qword [rax+1]
0000000000013a89         mov        rax, rdi
0000000000013a8c         mov        qword [rdi+0x810], rcx
0000000000013a93         add        rcx, qword [rdi+0x808]
0000000000013a9a         nop        word [rax+rax]

                     loc_13aa0:
0000000000013aa0         mov        r8, rdx                                     ; CODE XREF=isaac_refill+329
0000000000013aa3         shl        r8, 0x15
0000000000013aa7         xor        rdx, r8
0000000000013aaa         mov        r8, qword [rax]
0000000000013aad         not        rdx
0000000000013ab0         add        rdx, qword [rax+0x400]
0000000000013ab7         mov        r10, r8
0000000000013aba         and        r10d, 0x7f8
0000000000013ac1         mov        r11, qword [rdi+r10]
0000000000013ac5         mov        r10, rdx
0000000000013ac8         shr        r10, 0x5
0000000000013acc         add        r11, rdx
0000000000013acf         xor        rdx, r10
0000000000013ad2         add        rcx, r11
0000000000013ad5         mov        qword [rax], rcx
0000000000013ad8         shr        rcx, 0x8
0000000000013adc         and        ecx, 0x7f8
0000000000013ae2         mov        r11, qword [rdi+rcx]
0000000000013ae6         add        r11, r8
0000000000013ae9         mov        qword [rsi], r11
0000000000013aec         add        rdx, qword [rax+0x408]
0000000000013af3         mov        rcx, qword [rax+8]
0000000000013af7         mov        r10, rdx
0000000000013afa         mov        rdx, rcx
0000000000013afd         and        edx, 0x7f8
0000000000013b03         mov        r8, qword [rdi+rdx]
0000000000013b07         mov        rdx, r10
0000000000013b0a         shl        rdx, 0xc
0000000000013b0e         xor        rdx, r10
0000000000013b11         add        r8, r10
0000000000013b14         add        r8, r11
0000000000013b17         mov        qword [rax+8], r8
0000000000013b1b         shr        r8, 0x8
0000000000013b1f         and        r8d, 0x7f8
0000000000013b26         add        rcx, qword [rdi+r8]
0000000000013b2a         mov        qword [rsi+8], rcx
0000000000013b2e         mov        r8, qword [rax+0x10]
0000000000013b32         mov        r11, rcx
0000000000013b35         add        rdx, qword [rax+0x410]
0000000000013b3c         mov        rcx, r8
0000000000013b3f         and        ecx, 0x7f8
0000000000013b45         mov        r10, qword [rdi+rcx]
0000000000013b49         add        r10, rdx
0000000000013b4c         mov        rcx, r10
0000000000013b4f         add        rcx, r11
0000000000013b52         mov        qword [rax+0x10], rcx
0000000000013b56         shr        rcx, 0x8
0000000000013b5a         and        ecx, 0x7f8
0000000000013b60         mov        r10, qword [rdi+rcx]
0000000000013b64         mov        rcx, rdx
0000000000013b67         shr        rcx, 0x21
0000000000013b6b         xor        rdx, rcx
0000000000013b6e         add        r10, r8
0000000000013b71         mov        qword [rsi+0x10], r10
0000000000013b75         mov        rcx, qword [rax+0x18]
0000000000013b79         add        rdx, qword [rax+0x418]
0000000000013b80         mov        r8, rcx
0000000000013b83         and        r8d, 0x7f8
0000000000013b8a         mov        r11, qword [rdi+r8]
0000000000013b8e         add        r11, rdx
0000000000013b91         mov        r8, r11
0000000000013b94         add        r8, r10
0000000000013b97         add        rax, 0x20
0000000000013b9b         add        rsi, 0x20
0000000000013b9f         mov        qword [rax-8], r8
0000000000013ba3         shr        r8, 0x8
0000000000013ba7         and        r8d, 0x7f8
0000000000013bae         add        rcx, qword [rdi+r8]
0000000000013bb2         mov        qword [rsi-8], rcx
0000000000013bb6         cmp        rax, r9
0000000000013bb9         jb         loc_13aa0

0000000000013bbf         lea        r9, qword [rdi+0x800]
0000000000013bc6         nop        word [cs:rax+rax]

                     loc_13bd0:
0000000000013bd0         mov        r8, rdx                                     ; CODE XREF=isaac_refill+633
0000000000013bd3         shl        r8, 0x15
0000000000013bd7         xor        rdx, r8
0000000000013bda         mov        r8, qword [rax]
0000000000013bdd         not        rdx
0000000000013be0         add        rdx, qword [rax-0x400]
0000000000013be7         mov        r10, r8
0000000000013bea         and        r10d, 0x7f8
0000000000013bf1         mov        r11, qword [rdi+r10]
0000000000013bf5         mov        r10, rdx
0000000000013bf8         shr        r10, 0x5
0000000000013bfc         add        r11, rdx
0000000000013bff         xor        rdx, r10
0000000000013c02         add        rcx, r11
0000000000013c05         mov        qword [rax], rcx
0000000000013c08         shr        rcx, 0x8
0000000000013c0c         and        ecx, 0x7f8
0000000000013c12         mov        r11, qword [rdi+rcx]
0000000000013c16         add        r11, r8
0000000000013c19         mov        qword [rsi], r11
0000000000013c1c         add        rdx, qword [rax-0x3f8]
0000000000013c23         mov        rcx, qword [rax+8]
0000000000013c27         mov        r10, rdx
0000000000013c2a         mov        rdx, rcx
0000000000013c2d         and        edx, 0x7f8
0000000000013c33         mov        r8, qword [rdi+rdx]
0000000000013c37         mov        rdx, r10
0000000000013c3a         shl        rdx, 0xc
0000000000013c3e         xor        rdx, r10
0000000000013c41         add        r8, r10
0000000000013c44         add        r8, r11
0000000000013c47         mov        qword [rax+8], r8
0000000000013c4b         shr        r8, 0x8
0000000000013c4f         and        r8d, 0x7f8
0000000000013c56         add        rcx, qword [rdi+r8]
0000000000013c5a         mov        qword [rsi+8], rcx
0000000000013c5e         mov        r8, qword [rax+0x10]
0000000000013c62         mov        r11, rcx
0000000000013c65         add        rdx, qword [rax-0x3f0]
0000000000013c6c         mov        rcx, r8
0000000000013c6f         and        ecx, 0x7f8
0000000000013c75         mov        r10, qword [rdi+rcx]
0000000000013c79         add        r10, rdx
0000000000013c7c         mov        rcx, r10
0000000000013c7f         add        rcx, r11
0000000000013c82         mov        qword [rax+0x10], rcx
0000000000013c86         shr        rcx, 0x8
0000000000013c8a         and        ecx, 0x7f8
0000000000013c90         mov        r10, qword [rdi+rcx]
0000000000013c94         mov        rcx, rdx
0000000000013c97         shr        rcx, 0x21
0000000000013c9b         xor        rdx, rcx
0000000000013c9e         add        r10, r8
0000000000013ca1         mov        qword [rsi+0x10], r10
0000000000013ca5         mov        rcx, qword [rax+0x18]
0000000000013ca9         add        rdx, qword [rax-0x3e8]
0000000000013cb0         mov        r8, rcx
0000000000013cb3         and        r8d, 0x7f8
0000000000013cba         mov        r11, qword [rdi+r8]
0000000000013cbe         add        r11, rdx
0000000000013cc1         mov        r8, r11
0000000000013cc4         add        r8, r10
0000000000013cc7         add        rax, 0x20
0000000000013ccb         add        rsi, 0x20
0000000000013ccf         mov        qword [rax-8], r8
0000000000013cd3         shr        r8, 0x8
0000000000013cd7         and        r8d, 0x7f8
0000000000013cde         add        rcx, qword [rdi+r8]
0000000000013ce2         mov        qword [rsi-8], rcx
0000000000013ce6         cmp        rax, r9
0000000000013ce9         jb         loc_13bd0

0000000000013cef         mov        qword [rdi+0x800], rdx
0000000000013cf6         mov        qword [rdi+0x808], rcx
0000000000013cfd         ret
                        ; endp
0000000000013cfe         align      256                                         ; End of unwind block (FDE at 0x1c274)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     isaac_seed:
0000000000013d00         push       r13                                         ; Begin of unwind block (FDE at 0x1c288), CODE XREF=randread_new+312
0000000000013d02         push       r12
0000000000013d04         lea        r12, qword [rdi+0x800]
0000000000013d0b         push       rbp
0000000000013d0c         mov        rdx, rdi
0000000000013d0f         push       rbx
0000000000013d10         mov        rax, rdi
0000000000013d13         movabs     rcx, 0x98f5704f6c44c0ab
0000000000013d1d         movabs     r10, 0xae985bf2cbfc89ed
0000000000013d27         movabs     rbp, 0x48fe4a0fa5a09315
0000000000013d31         movabs     rsi, 0x82f053db8355e0ce
0000000000013d3b         movabs     r8, 0xb29b2e824a595524
0000000000013d45         movabs     rbx, 0x8c0ea5053d4712a0
0000000000013d4f         movabs     r11, 0xb9f8b322c73ac862
0000000000013d59         movabs     r9, 0x647c4677a2884b7c
0000000000013d63         nop        dword [rax+rax]

                     loc_13d68:
0000000000013d68         add        rsi, qword [rax+0x20]                       ; CODE XREF=isaac_seed+314
0000000000013d6c         add        rcx, qword [rax+0x38]
0000000000013d70         mov        r13, qword [rax]
0000000000013d73         add        rbp, qword [rax+0x28]
0000000000013d77         add        r10, qword [rax+0x30]
0000000000013d7b         sub        r13, rsi
0000000000013d7e         add        r9, r13
0000000000013d81         mov        r13, rcx
0000000000013d84         shr        r13, 0x9
0000000000013d88         add        rcx, r9
0000000000013d8b         xor        rbp, r13
0000000000013d8e         mov        r13, qword [rax+8]
0000000000013d92         sub        r13, rbp
0000000000013d95         add        r11, r13
0000000000013d98         mov        r13, r9
0000000000013d9b         shl        r13, 0x9
0000000000013d9f         add        r9, r11
0000000000013da2         xor        r10, r13
0000000000013da5         mov        r13, qword [rax+0x10]
0000000000013da9         sub        r13, r10
0000000000013dac         add        rbx, r13
0000000000013daf         mov        r13, r11
0000000000013db2         shr        r13, 0x17
0000000000013db6         add        r11, rbx
0000000000013db9         xor        rcx, r13
0000000000013dbc         mov        r13, qword [rax+0x18]
0000000000013dc0         sub        r13, rcx
0000000000013dc3         add        r8, r13
0000000000013dc6         mov        r13, rbx
0000000000013dc9         shl        r13, 0xf
0000000000013dcd         add        rbx, r8
0000000000013dd0         xor        r9, r13
0000000000013dd3         mov        r13, r8
0000000000013dd6         sub        rsi, r9
0000000000013dd9         shr        r13, 0xe
0000000000013ddd         mov        qword [rax], r9
0000000000013de0         xor        r11, r13
0000000000013de3         mov        r13, rsi
0000000000013de6         add        r8, rsi
0000000000013de9         sub        rbp, r11
0000000000013dec         shl        r13, 0x14
0000000000013df0         mov        qword [rax+8], r11
0000000000013df4         xor        rbx, r13
0000000000013df7         lea        r13, qword [rsi+rbp]
0000000000013dfb         mov        rsi, rbp
0000000000013dfe         sub        r10, rbx
0000000000013e01         shr        rsi, 0x11
0000000000013e05         mov        qword [rax+0x10], rbx
0000000000013e09         xor        r8, rsi
0000000000013e0c         mov        rsi, r10
0000000000013e0f         add        rbp, r10
0000000000013e12         sub        rcx, r8
0000000000013e15         shl        rsi, 0xe
0000000000013e19         mov        qword [rax+0x18], r8
0000000000013e1d         xor        rsi, r13
0000000000013e20         add        r10, rcx
0000000000013e23         mov        qword [rax+0x28], rbp
0000000000013e27         mov        qword [rax+0x20], rsi
0000000000013e2b         mov        qword [rax+0x30], r10
0000000000013e2f         add        rax, 0x40
0000000000013e33         mov        qword [rax-8], rcx
0000000000013e37         cmp        r12, rax
0000000000013e3a         jne        loc_13d68

                     loc_13e40:
0000000000013e40         add        rsi, qword [rdx+0x20]                       ; CODE XREF=isaac_seed+530
0000000000013e44         add        rcx, qword [rdx+0x38]
0000000000013e48         mov        r12, qword [rdx]
0000000000013e4b         add        rbp, qword [rdx+0x28]
0000000000013e4f         add        r10, qword [rdx+0x30]
0000000000013e53         sub        r12, rsi
0000000000013e56         add        r9, r12
0000000000013e59         mov        r12, rcx
0000000000013e5c         shr        r12, 0x9
0000000000013e60         add        rcx, r9
0000000000013e63         xor        rbp, r12
0000000000013e66         mov        r12, qword [rdx+8]
0000000000013e6a         sub        r12, rbp
0000000000013e6d         add        r11, r12
0000000000013e70         mov        r12, r9
0000000000013e73         shl        r12, 0x9
0000000000013e77         add        r9, r11
0000000000013e7a         xor        r10, r12
0000000000013e7d         mov        r12, qword [rdx+0x10]
0000000000013e81         sub        r12, r10
0000000000013e84         add        rbx, r12
0000000000013e87         mov        r12, r11
0000000000013e8a         shr        r12, 0x17
0000000000013e8e         add        r11, rbx
0000000000013e91         xor        rcx, r12
0000000000013e94         mov        r12, qword [rdx+0x18]
0000000000013e98         sub        r12, rcx
0000000000013e9b         add        r8, r12
0000000000013e9e         mov        r12, rbx
0000000000013ea1         shl        r12, 0xf
0000000000013ea5         add        rbx, r8
0000000000013ea8         xor        r9, r12
0000000000013eab         mov        r12, r8
0000000000013eae         sub        rsi, r9
0000000000013eb1         shr        r12, 0xe
0000000000013eb5         mov        qword [rdx], r9
0000000000013eb8         xor        r11, r12
0000000000013ebb         mov        r12, rsi
0000000000013ebe         add        r8, rsi
0000000000013ec1         sub        rbp, r11
0000000000013ec4         shl        r12, 0x14
0000000000013ec8         mov        qword [rdx+8], r11
0000000000013ecc         xor        rbx, r12
0000000000013ecf         lea        r12, qword [rsi+rbp]
0000000000013ed3         mov        rsi, rbp
0000000000013ed6         sub        r10, rbx
0000000000013ed9         shr        rsi, 0x11
0000000000013edd         mov        qword [rdx+0x10], rbx
0000000000013ee1         xor        r8, rsi
0000000000013ee4         mov        rsi, r10
0000000000013ee7         add        rbp, r10
0000000000013eea         sub        rcx, r8
0000000000013eed         shl        rsi, 0xe
0000000000013ef1         mov        qword [rdx+0x18], r8
0000000000013ef5         xor        rsi, r12
0000000000013ef8         add        r10, rcx
0000000000013efb         mov        qword [rdx+0x28], rbp
0000000000013eff         mov        qword [rdx+0x20], rsi
0000000000013f03         mov        qword [rdx+0x30], r10
0000000000013f07         add        rdx, 0x40
0000000000013f0b         mov        qword [rdx-8], rcx
0000000000013f0f         cmp        rax, rdx
0000000000013f12         jne        loc_13e40

0000000000013f18         pop        rbx
0000000000013f19         mov        qword [rdi+0x810], 0x0
0000000000013f24         mov        qword [rdi+0x808], 0x0
0000000000013f2f         pop        rbp
0000000000013f30         mov        qword [rdi+0x800], 0x0
0000000000013f3b         pop        r12
0000000000013f3d         pop        r13
0000000000013f3f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dup_safer:
0000000000013f40         mov        edx, 0x3                                    ; End of unwind block (FDE at 0x1c288), Begin of unwind block (FDE at 0x1c2bc), CODE XREF=fd_safer+17, fopen_safer+50
0000000000013f45         xor        esi, esi
0000000000013f47         xor        eax, eax
0000000000013f49         jmp        rpl_fcntl                                   ; rpl_fcntl
                        ; endp
0000000000013f4e         align      16                                          ; End of unwind block (FDE at 0x1c2bc)

                     rpl_fclose:
0000000000013f50         push       r12                                         ; Begin of unwind block (FDE at 0x1c2d4), CODE XREF=close_stream+21, randread_free+51, fopen_safer+65, fopen_safer+134
0000000000013f52         push       rbp
0000000000013f53         push       rbx
0000000000013f54         mov        rbx, rdi
0000000000013f57         call       j_fileno                                    ; fileno
0000000000013f5c         test       eax, eax
0000000000013f5e         mov        rdi, rbx
0000000000013f61         js         loc_13fb7

0000000000013f63         call       j___freading                                ; __freading
0000000000013f68         test       eax, eax
0000000000013f6a         jne        loc_13f98

                     loc_13f6c:
0000000000013f6c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
0000000000013f6f         call       rpl_fflush                                  ; rpl_fflush
0000000000013f74         test       eax, eax
0000000000013f76         je         loc_13fb4

0000000000013f78         call       j___errno_location                          ; __errno_location
0000000000013f7d         mov        r12d, dword [rax]
0000000000013f80         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000013f83         mov        rbp, rax
0000000000013f86         call       j_fclose                                    ; fclose
0000000000013f8b         test       r12d, r12d
0000000000013f8e         jne        loc_13fc0

                     loc_13f90:
0000000000013f90         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000013f91         pop        rbp
0000000000013f92         pop        r12
0000000000013f94         ret
                        ; endp
0000000000013f95         align      8

                     loc_13f98:
0000000000013f98         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
0000000000013f9b         call       j_fileno                                    ; fileno
0000000000013fa0         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000013fa2         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000013fa7         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000013fa9         call       j_lseek                                     ; lseek
0000000000013fae         cmp        rax, 0xffffffffffffffff
0000000000013fb2         jne        loc_13f6c

                     loc_13fb4:
0000000000013fb4         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_13fb7:
0000000000013fb7         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000013fb8         pop        rbp
0000000000013fb9         pop        r12
0000000000013fbb         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_13fc0:
0000000000013fc0         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
0000000000013fc4         mov        eax, 0xffffffff
0000000000013fc9         jmp        loc_13f90
0000000000013fcb         align      16                                          ; End of unwind block (FDE at 0x1c2d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int32_t, -104


                     rpl_fcntl:
0000000000013fd0         push       r12                                         ; Begin of unwind block (FDE at 0x1c30c), CODE XREF=opendir_safer+62, dup_safer+9
0000000000013fd2         push       rbp
0000000000013fd3         mov        ebp, edi
0000000000013fd5         push       rbx
0000000000013fd6         sub        rsp, 0x50
0000000000013fda         mov        rax, qword [fs:0x28]
0000000000013fe3         mov        qword [rsp+0x68+var_50], rax
0000000000013fe8         xor        eax, eax
0000000000013fea         lea        rax, qword [rsp+0x68+arg_0]
0000000000013fef         test       esi, esi
0000000000013ff1         mov        qword [rsp+0x68+var_38], rdx
0000000000013ff6         mov        qword [rsp+0x68+var_30], rcx
0000000000013ffb         mov        qword [rsp+0x68+var_28], r8
0000000000014000         mov        qword [rsp+0x68+var_60], rax
0000000000014005         lea        rax, qword [rsp+0x68+var_48]
000000000001400a         mov        qword [rsp+0x68+var_20], r9
000000000001400f         mov        dword [rsp+0x68+var_68], 0x10
0000000000014016         mov        qword [rsp+0x68+var_58], rax
000000000001401b         je         loc_14222

0000000000014021         cmp        esi, 0x406
0000000000014027         jne        loc_14070

0000000000014029         mov        rax, qword [rsp+0x68+var_58]
000000000001402e         cmp        dword [have_dupfd_cloexec.3326], 0x0        ; have_dupfd_cloexec.3326
0000000000014035         mov        dword [rsp+0x68+var_68], 0x18
000000000001403c         mov        r12d, dword [rax+0x10]
0000000000014040         mov        edx, r12d
0000000000014043         js         loc_14173

0000000000014049         xor        eax, eax
000000000001404b         mov        esi, 0x406                                  ; argument "__cmd" for method j_fcntl
0000000000014050         call       j_fcntl                                     ; fcntl
0000000000014055         test       eax, eax
0000000000014057         mov        ebx, eax
0000000000014059         js         loc_141e8

                     loc_1405f:
000000000001405f         mov        dword [have_dupfd_cloexec.3326], 0x1        ; have_dupfd_cloexec.3326, CODE XREF=rpl_fcntl+544
0000000000014069         jmp        loc_140b0
000000000001406b         align      16

                     loc_14070:
0000000000014070         cmp        esi, 0xb                                    ; CODE XREF=rpl_fcntl+87
0000000000014073         je         loc_140a0

0000000000014075         jg         loc_140d0

0000000000014077         cmp        esi, 0x4
000000000001407a         je         loc_14150

0000000000014080         jg         loc_14140

0000000000014086         cmp        esi, 0x2
0000000000014089         je         loc_14150

000000000001408f         jg         loc_140a0

0000000000014091         cmp        esi, 0x1
0000000000014094         jne        loc_140f8

0000000000014096         nop        word [cs:rax+rax]

                     loc_140a0:
00000000000140a0         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl, CODE XREF=rpl_fcntl+163, rpl_fcntl+191, rpl_fcntl+278, rpl_fcntl+344, rpl_fcntl+358, rpl_fcntl+371
00000000000140a2         xor        eax, eax
00000000000140a4         call       j_fcntl                                     ; fcntl
00000000000140a9         mov        ebx, eax
00000000000140ab         nop        dword [rax+rax]

                     loc_140b0:
00000000000140b0         mov        rcx, qword [rsp+0x68+var_50]                ; CODE XREF=rpl_fcntl+153, rpl_fcntl+327, rpl_fcntl+414, rpl_fcntl+432, rpl_fcntl+445, rpl_fcntl+491, rpl_fcntl+524, rpl_fcntl+568, rpl_fcntl+613
00000000000140b5         xor        rcx, qword [fs:0x28]
00000000000140be         mov        eax, ebx
00000000000140c0         jne        loc_1421d

00000000000140c6         add        rsp, 0x50
00000000000140ca         pop        rbx
00000000000140cb         pop        rbp
00000000000140cc         pop        r12
00000000000140ce         ret
                        ; endp
00000000000140cf         align      16

                     loc_140d0:
00000000000140d0         cmp        esi, 0x407                                  ; CODE XREF=rpl_fcntl+165
00000000000140d6         jg         loc_14120

00000000000140d8         cmp        esi, 0x406
00000000000140de         jge        loc_14150

00000000000140e0         cmp        esi, 0x401
00000000000140e6         je         loc_140a0

00000000000140e8         cmp        esi, 0x402
00000000000140ee         je         loc_14150

00000000000140f0         cmp        esi, 0x400
00000000000140f6         je         loc_14150

                     loc_140f8:
00000000000140f8         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+196, rpl_fcntl+356, rpl_fcntl+382
00000000000140fb         cmp        eax, 0x2f
00000000000140fe         ja         loc_1423a

0000000000014104         add        rax, qword [rsp+0x68+var_58]

                     loc_14109:
0000000000014109         mov        rdx, qword [rax]                            ; CODE XREF=rpl_fcntl+623
000000000001410c         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
000000000001410e         xor        eax, eax
0000000000014110         call       j_fcntl                                     ; fcntl
0000000000014115         mov        ebx, eax
0000000000014117         jmp        loc_140b0
0000000000014119         align      32

                     loc_14120:
0000000000014120         cmp        esi, 0x409                                  ; CODE XREF=rpl_fcntl+262
0000000000014126         je         loc_14150

0000000000014128         jl         loc_140a0

000000000001412e         cmp        esi, 0x40a
0000000000014134         jne        loc_140f8

0000000000014136         jmp        loc_140a0
000000000001413b         align      64

                     loc_14140:
0000000000014140         cmp        esi, 0x9                                    ; CODE XREF=rpl_fcntl+176
0000000000014143         je         loc_140a0

0000000000014149         jg         loc_14150

000000000001414b         cmp        esi, 0x8
000000000001414e         jne        loc_140f8

                     loc_14150:
0000000000014150         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+170, rpl_fcntl+185, rpl_fcntl+270, rpl_fcntl+286, rpl_fcntl+294, rpl_fcntl+342, rpl_fcntl+377
0000000000014153         cmp        eax, 0x2f
0000000000014156         ja         loc_14244

000000000001415c         add        rax, qword [rsp+0x68+var_58]

                     loc_14161:
0000000000014161         mov        edx, dword [rax]                            ; CODE XREF=rpl_fcntl+633
0000000000014163         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
0000000000014165         xor        eax, eax
0000000000014167         call       j_fcntl                                     ; fcntl
000000000001416c         mov        ebx, eax
000000000001416e         jmp        loc_140b0

                     loc_14173:
0000000000014173         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl, CODE XREF=rpl_fcntl+115
0000000000014175         xor        eax, eax
0000000000014177         call       j_fcntl                                     ; fcntl
000000000001417c         test       eax, eax
000000000001417e         mov        ebx, eax
0000000000014180         js         loc_140b0                                   ; DATA XREF=vasnprintf+1016

0000000000014186         cmp        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
000000000001418d         jne        loc_140b0

                     loc_14193:
0000000000014193         xor        eax, eax                                    ; CODE XREF=rpl_fcntl+584
0000000000014195         mov        esi, 0x1                                    ; argument "__cmd" for method j_fcntl
000000000001419a         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
000000000001419c         call       j_fcntl                                     ; fcntl
00000000000141a1         test       eax, eax
00000000000141a3         js         loc_141c1

00000000000141a5         or         eax, 0x1
00000000000141a8         mov        esi, 0x2                                    ; argument "__cmd" for method j_fcntl
00000000000141ad         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
00000000000141af         mov        edx, eax
00000000000141b1         xor        eax, eax
00000000000141b3         call       j_fcntl                                     ; fcntl
00000000000141b8         cmp        eax, 0xffffffff
00000000000141bb         jne        loc_140b0

                     loc_141c1:
00000000000141c1         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+467
00000000000141c6         mov        r12d, dword [rax]
00000000000141c9         mov        rbp, rax
00000000000141cc         mov        edi, ebx                                    ; argument "__fd" for method j_close
00000000000141ce         call       j_close                                     ; close
00000000000141d3         mov        ebx, 0xffffffff
00000000000141d8         mov        dword [rbp], r12d
00000000000141dc         jmp        loc_140b0
00000000000141e1         align      8

                     loc_141e8:
00000000000141e8         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+137
00000000000141ed         cmp        dword [rax], 0x16
00000000000141f0         jne        loc_1405f

00000000000141f6         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
00000000000141f8         xor        eax, eax
00000000000141fa         mov        edx, r12d
00000000000141fd         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
00000000000141ff         call       j_fcntl                                     ; fcntl
0000000000014204         test       eax, eax
0000000000014206         mov        ebx, eax
0000000000014208         js         loc_140b0

000000000001420e         mov        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
0000000000014218         jmp        loc_14193

                     loc_1421d:
000000000001421d         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_fcntl+240
                        ; endp

                     loc_14222:
0000000000014222         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=rpl_fcntl+75
0000000000014227         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
0000000000014229         mov        edx, dword [rax+0x10]
000000000001422c         xor        eax, eax
000000000001422e         call       j_fcntl                                     ; fcntl
0000000000014233         mov        ebx, eax
0000000000014235         jmp        loc_140b0

                     loc_1423a:
000000000001423a         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+302
000000000001423f         jmp        loc_14109

                     loc_14244:
0000000000014244         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+390
0000000000014249         jmp        loc_14161
000000000001424e         align      16                                          ; End of unwind block (FDE at 0x1c30c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fseterr:
0000000000014250         or         dword [rdi], 0x20                           ; Begin of unwind block (FDE at 0x1c344), CODE XREF=rpl_vfprintf+230
0000000000014253         ret
                        ; endp
0000000000014254         align      32                                          ; End of unwind block (FDE at 0x1c344)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_28: int8_t, -40
        ;    var_38: int64_t, -56
        ;    var_2A8: int64_t, -680
        ;    var_2B0: int64_t, -688
        ;    var_2B8: int64_t, -696
        ;    var_2C0: int64_t, -704
        ;    var_3A8: int64_t, -936
        ;    var_3B0: int8_t, -944
        ;    var_3B4: int32_t, -948
        ;    var_3B8: int32_t, -952
        ;    var_3BC: int32_t, -956
        ;    var_3C8: int64_t, -968
        ;    var_3D0: int64_t, -976
        ;    var_3D8: int64_t, -984
        ;    var_3E0: int64_t, -992
        ;    var_3E8: int64_t, -1000
        ;    var_3F0: int64_t, -1008
        ;    var_3F8: int64_t, -1016
        ;    var_400: int64_t, -1024
        ;    var_408: int64_t, -1032
        ;    var_410: int64_t, -1040
        ;    var_418: int64_t, -1048
        ;    var_420: int64_t, -1056
        ;    var_421: int8_t, -1057
        ;    var_424: int32_t, -1060
        ;    var_430: int64_t, -1072
        ;    var_440: -1088
        ;    var_450: -1104


                     vasnprintf:
0000000000014260         push       rbp                                         ; Begin of unwind block (FDE at 0x1c35c), CODE XREF=rpl_vfprintf+66
0000000000014261         mov        rbp, rsp
0000000000014264         push       r15
0000000000014266         push       r14
0000000000014268         push       r13
000000000001426a         push       r12
000000000001426c         lea        r14, qword [rbp+var_3B0]
0000000000014273         push       rbx
0000000000014274         mov        rbx, rdx
0000000000014277         mov        r12, rcx
000000000001427a         mov        rdx, r14
000000000001427d         sub        rsp, 0x408
0000000000014284         mov        qword [rbp+var_418], rsi
000000000001428b         lea        rsi, qword [rbp+var_2C0]
0000000000014292         mov        qword [rbp+var_3E8], rdi
0000000000014299         mov        rdi, rbx
000000000001429c         mov        qword [rbp+var_410], r14
00000000000142a3         mov        rax, qword [fs:0x28]
00000000000142ac         mov        qword [rbp+var_38], rax
00000000000142b0         xor        eax, eax
00000000000142b2         mov        qword [rbp+var_408], rsi
00000000000142b9         call       printf_parse                                ; printf_parse
00000000000142be         test       eax, eax
00000000000142c0         js         loc_15128

00000000000142c6         mov        rsi, r14
00000000000142c9         mov        rdi, r12
00000000000142cc         call       printf_fetchargs                            ; printf_fetchargs
00000000000142d1         test       eax, eax
00000000000142d3         js         loc_15190

00000000000142d9         mov        rax, qword [rbp+var_2B0]
00000000000142e0         mov        rdx, 0xffffffffffffffff
00000000000142e7         add        rax, 0x7
00000000000142eb         cmp        rax, 0x6
00000000000142ef         cmovbe     rax, rdx
00000000000142f3         add        rax, qword [rbp+var_2A8]
00000000000142fa         jb         loc_14d28

0000000000014300         mov        rdi, rax
0000000000014303         xor        r8d, r8d
0000000000014306         add        rdi, 0x6
000000000001430a         setb       r8b
000000000001430e         jb         loc_14d28

0000000000014314         cmp        rdi, 0xf9f
000000000001431b         jbe        loc_14468

0000000000014321         cmp        rdi, 0xffffffffffffffff
0000000000014325         mov        qword [rbp+var_3C8], r8
000000000001432c         je         loc_14d28

0000000000014332         call       j_malloc                                    ; malloc
0000000000014337         test       rax, rax
000000000001433a         mov        qword [rbp+var_3D8], rax
0000000000014341         je         loc_14d28

0000000000014347         mov        r8, qword [rbp+var_3C8]
000000000001434e         mov        qword [rbp+var_420], rax

                     loc_14355:
0000000000014355         xor        r12d, r12d                                  ; CODE XREF=vasnprintf+558
0000000000014358         cmp        qword [rbp+var_3E8], 0x0
0000000000014360         je         loc_1436c

0000000000014362         mov        rax, qword [rbp+var_418]
0000000000014369         mov        r12, qword [rax]

                     loc_1436c:
000000000001436c         mov        r13, qword [rbp+var_2B8]                    ; CODE XREF=vasnprintf+256
0000000000014373         lea        rax, qword [rbp+var_3BC]
000000000001437a         mov        r15, qword [rbp+var_3E8]
0000000000014381         mov        qword [rbp+var_400], 0x0
000000000001438c         mov        qword [rbp+var_3F0], rax
0000000000014393         mov        rax, rbx
0000000000014396         mov        rbx, r8
0000000000014399         mov        rcx, qword [r13]
000000000001439d         mov        r8, rax
00000000000143a0         cmp        rcx, r8
00000000000143a3         je         loc_14d11

                     loc_143a9:
00000000000143a9         sub        rcx, r8                                     ; CODE XREF=vasnprintf+2731
00000000000143ac         mov        rax, rbx
00000000000143af         add        rax, rcx
00000000000143b2         mov        r14, rax
00000000000143b5         jae        loc_14498

00000000000143bb         cmp        r12, 0xffffffffffffffff
00000000000143bf         je         loc_14e90

                     loc_143c5:
00000000000143c5         call       j___errno_location                          ; __errno_location, CODE XREF=vasnprintf+1250, vasnprintf+2694, loc_14dd0, vasnprintf+2950, vasnprintf+3039, loc_14f28, vasnprintf+3299, vasnprintf+3309, vasnprintf+3371, vasnprintf+3515, loc_15140
00000000000143ca         mov        qword [rbp+var_3C8], rax

                     loc_143d1:
00000000000143d1         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+1600, vasnprintf+1618, vasnprintf+1668, vasnprintf+2558, vasnprintf+4338
00000000000143d8         je         loc_143e3

00000000000143da         test       r15, r15
00000000000143dd         jne        loc_14ec0

                     loc_143e3:
00000000000143e3         mov        rax, qword [rbp+var_420]                    ; CODE XREF=vasnprintf+376, vasnprintf+3176
00000000000143ea         test       rax, rax
00000000000143ed         je         loc_143f7

00000000000143ef         mov        rdi, rax
00000000000143f2         call       sub_30d0                                    ; sub_30d0

                     loc_143f7:
00000000000143f7         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+397, vasnprintf+2772
00000000000143fe         mov        rdi, qword [rbp+var_2B8]
0000000000014405         add        rax, 0x20
0000000000014409         cmp        rdi, rax
000000000001440c         je         loc_14413

000000000001440e         call       sub_30d0                                    ; sub_30d0

                     loc_14413:
0000000000014413         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+428
000000000001441a         mov        rdi, qword [rbp+var_3A8]
0000000000014421         add        rax, 0x10
0000000000014425         cmp        rdi, rax
0000000000014428         je         loc_1442f

000000000001442a         call       sub_30d0                                    ; sub_30d0

                     loc_1442f:
000000000001442f         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+456
0000000000014436         xor        r15d, r15d
0000000000014439         mov        dword [rax], 0xc

                     loc_1443f:
000000000001443f         mov        rdi, qword [rbp+var_38]                     ; CODE XREF=vasnprintf+1978, vasnprintf+3774, vasnprintf+3787, vasnprintf+3958, vasnprintf+4183
0000000000014443         xor        rdi, qword [fs:0x28]
000000000001444c         mov        rax, r15
000000000001444f         jne        loc_15357

0000000000014455         lea        rsp, qword [rbp+var_28]
0000000000014459         pop        rbx
000000000001445a         pop        r12
000000000001445c         pop        r13
000000000001445e         pop        r14
0000000000014460         pop        r15
0000000000014462         pop        rbp
0000000000014463         ret
                        ; endp
0000000000014464         align      8

                     loc_14468:
0000000000014468         add        rax, 0x24                                   ; CODE XREF=vasnprintf+187
000000000001446c         mov        qword [rbp+var_420], 0x0
0000000000014477         and        rax, 0xfffffffffffffff0
000000000001447b         sub        rsp, rax
000000000001447e         lea        rax, qword [rsp+0x430+var_421]
0000000000014483         and        rax, 0xfffffffffffffff0
0000000000014487         mov        qword [rbp+var_3D8], rax
000000000001448e         jmp        loc_14355
0000000000014493         align      8

                     loc_14498:
0000000000014498         cmp        r12, rax                                    ; CODE XREF=vasnprintf+341
000000000001449b         jae        loc_14504

000000000001449d         test       r12, r12
00000000000144a0         jne        loc_14dd0

00000000000144a6         cmp        rax, 0xc
00000000000144aa         ja         loc_14de2

00000000000144b0         mov        r12d, 0xc

                     loc_144b6:
00000000000144b6         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+2940
00000000000144bd         sete       dl
00000000000144c0         test       r15, r15
00000000000144c3         je         loc_14e08

                     loc_144c9:
00000000000144c9         test       dl, dl                                      ; CODE XREF=vasnprintf+2972
00000000000144cb         jne        loc_14e08

00000000000144d1         mov        rsi, r12                                    ; argument "__size" for method j_realloc
00000000000144d4         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
00000000000144d7         mov        qword [rbp+var_3D0], r8
00000000000144de         mov        qword [rbp+var_3C8], rcx
00000000000144e5         call       j_realloc                                   ; realloc
00000000000144ea         test       rax, rax
00000000000144ed         mov        rcx, qword [rbp+var_3C8]
00000000000144f4         mov        r8, qword [rbp+var_3D0]
00000000000144fb         je         loc_14eab

0000000000014501         mov        r15, rax

                     loc_14504:
0000000000014504         lea        rdi, qword [r15+rbx]                        ; argument "__dest" for method j_memcpy, CODE XREF=vasnprintf+571, vasnprintf+3107, vasnprintf+3123, vasnprintf+3571
0000000000014508         mov        rdx, rcx                                    ; argument "__n" for method j_memcpy
000000000001450b         mov        rsi, r8                                     ; argument "__src" for method j_memcpy
000000000001450e         call       j_memcpy                                    ; memcpy

                     loc_14513:
0000000000014513         mov        rax, qword [rbp+var_400]                    ; CODE XREF=vasnprintf+2740
000000000001451a         cmp        qword [rbp+var_2C0], rax
0000000000014521         je         loc_151db

0000000000014527         movzx      edx, byte [r13+0x48]
000000000001452c         mov        rax, qword [r13+0x50]
0000000000014530         cmp        dl, 0x25
0000000000014533         je         loc_14cc8

0000000000014539         cmp        rax, 0xffffffffffffffff
000000000001453d         je         loc_15186

0000000000014543         mov        r8, qword [rbp+var_3A8]
000000000001454a         shl        rax, 0x5
000000000001454e         add        rax, r8
0000000000014551         cmp        dl, 0x6e
0000000000014554         mov        edi, dword [rax]
0000000000014556         mov        dword [rbp+var_3D0], edi
000000000001455c         je         loc_14d40

0000000000014562         mov        eax, dword [r13+0x10]
0000000000014566         mov        rdi, qword [rbp+var_3D8]
000000000001456d         test       al, 0x1
000000000001456f         mov        byte [rdi], 0x25
0000000000014572         lea        rbx, qword [rdi+1]
0000000000014576         je         loc_14587

0000000000014578         mov        rdi, qword [rbp+var_3D8]
000000000001457f         lea        rbx, qword [rdi+2]
0000000000014583         mov        byte [rdi+1], 0x27

                     loc_14587:
0000000000014587         test       al, 0x2                                     ; CODE XREF=vasnprintf+790
0000000000014589         je         loc_14592

000000000001458b         mov        byte [rbx], 0x2d
000000000001458e         add        rbx, 0x1

                     loc_14592:
0000000000014592         test       al, 0x4                                     ; CODE XREF=vasnprintf+809
0000000000014594         je         loc_1459d

0000000000014596         mov        byte [rbx], 0x2b
0000000000014599         add        rbx, 0x1

                     loc_1459d:
000000000001459d         test       al, 0x8                                     ; CODE XREF=vasnprintf+820
000000000001459f         je         loc_145a8

00000000000145a1         mov        byte [rbx], 0x20
00000000000145a4         add        rbx, 0x1

                     loc_145a8:
00000000000145a8         test       al, 0x10                                    ; CODE XREF=vasnprintf+831
00000000000145aa         je         loc_145b3

00000000000145ac         mov        byte [rbx], 0x23
00000000000145af         add        rbx, 0x1

                     loc_145b3:
00000000000145b3         test       al, 0x40                                    ; CODE XREF=vasnprintf+842
00000000000145b5         je         loc_145be

00000000000145b7         mov        byte [rbx], 0x49
00000000000145ba         add        rbx, 0x1

                     loc_145be:
00000000000145be         test       al, 0x20                                    ; CODE XREF=vasnprintf+853
00000000000145c0         je         loc_145c9

00000000000145c2         mov        byte [rbx], 0x30
00000000000145c5         add        rbx, 0x1

                     loc_145c9:
00000000000145c9         mov        rsi, qword [r13+0x18]                       ; CODE XREF=vasnprintf+864
00000000000145cd         mov        rdx, qword [r13+0x20]
00000000000145d1         cmp        rsi, rdx
00000000000145d4         je         loc_14606

00000000000145d6         mov        rcx, rdx
00000000000145d9         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
00000000000145dc         mov        qword [rbp+var_3E0], r8
00000000000145e3         sub        rcx, rsi
00000000000145e6         mov        rdx, rcx                                    ; argument "__n" for method j_memcpy
00000000000145e9         mov        qword [rbp+var_3C8], rcx
00000000000145f0         call       j_memcpy                                    ; memcpy
00000000000145f5         mov        rcx, qword [rbp+var_3C8]
00000000000145fc         mov        r8, qword [rbp+var_3E0]
0000000000014603         add        rbx, rcx

                     loc_14606:
0000000000014606         mov        rsi, qword [r13+0x30]                       ; CODE XREF=vasnprintf+884
000000000001460a         mov        rdx, qword [r13+0x38]
000000000001460e         cmp        rsi, rdx
0000000000014611         je         loc_14643

0000000000014613         mov        rcx, rdx
0000000000014616         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
0000000000014619         mov        qword [rbp+var_3E0], r8
0000000000014620         sub        rcx, rsi
0000000000014623         mov        rdx, rcx                                    ; argument "__n" for method j_memcpy
0000000000014626         mov        qword [rbp+var_3C8], rcx
000000000001462d         call       j_memcpy                                    ; memcpy
0000000000014632         mov        rcx, qword [rbp+var_3C8]
0000000000014639         mov        r8, qword [rbp+var_3E0]
0000000000014640         add        rbx, rcx

                     loc_14643:
0000000000014643         mov        edi, dword [rbp+var_3D0]                    ; CODE XREF=vasnprintf+945
0000000000014649         cmp        edi, 0x10
000000000001464c         ja         loc_1467b

000000000001464e         mov        eax, 0x1
0000000000014653         mov        ecx, edi
0000000000014655         shl        rax, cl
0000000000014658         test       eax, 0x14180
000000000001465d         jne        loc_14674

000000000001465f         test       ah, 0x10
0000000000014662         jne        loc_14fc0

0000000000014668         test       ah, 0x6
000000000001466b         je         loc_1467b

000000000001466d         mov        byte [rbx], 0x6c
0000000000014670         add        rbx, 0x1

                     loc_14674:
0000000000014674         mov        byte [rbx], 0x6c                            ; CODE XREF=vasnprintf+1021
0000000000014677         add        rbx, 0x1

                     loc_1467b:
000000000001467b         movzx      eax, byte [r13+0x48]                        ; CODE XREF=vasnprintf+1004, vasnprintf+1035, vasnprintf+3431
0000000000014680         mov        byte [rbx+1], 0x0
0000000000014684         mov        byte [rbx], al
0000000000014686         mov        rax, qword [r13+0x28]
000000000001468a         cmp        rax, 0xffffffffffffffff
000000000001468e         je         loc_14dc0

0000000000014694         shl        rax, 0x5
0000000000014698         add        rax, r8
000000000001469b         cmp        dword [rax], 0x5
000000000001469e         jne        loc_15186

00000000000146a4         mov        eax, dword [rax+0x10]
00000000000146a7         mov        dword [rbp+var_3E0], 0x1
00000000000146b1         mov        dword [rbp+var_3B8], eax

                     loc_146b7:
00000000000146b7         mov        rax, qword [r13+0x40]                       ; CODE XREF=vasnprintf+2922
00000000000146bb         cmp        rax, 0xffffffffffffffff
00000000000146bf         je         loc_146ec

00000000000146c1         shl        rax, 0x5
00000000000146c5         add        r8, rax
00000000000146c8         cmp        dword [r8], 0x5
00000000000146cc         jne        loc_15186

00000000000146d2         mov        eax, dword [rbp+var_3E0]
00000000000146d8         mov        edx, dword [r8+0x10]
00000000000146dc         mov        dword [rbp+rax*4+var_3B8], edx
00000000000146e3         lea        eax, dword [rax+1]
00000000000146e6         mov        dword [rbp+var_3E0], eax

                     loc_146ec:
00000000000146ec         mov        rax, r14                                    ; CODE XREF=vasnprintf+1119
00000000000146ef         xor        edx, edx
00000000000146f1         add        rax, 0x2
00000000000146f5         jb         loc_1535c

00000000000146fb         cmp        r12, rax
00000000000146fe         jae        loc_1474b

0000000000014700         test       r12, r12
0000000000014703         jne        loc_14f28

0000000000014709         cmp        rax, 0xc
000000000001470d         ja         loc_14f40

0000000000014713         mov        r12d, 0xc

                     loc_14719:
0000000000014719         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+3284
0000000000014720         sete       dl
0000000000014723         test       r15, r15
0000000000014726         je         loc_14f70

                     loc_1472c:
000000000001472c         test       dl, dl                                      ; CODE XREF=vasnprintf+3331
000000000001472e         jne        loc_14f70

0000000000014734         mov        rsi, r12                                    ; argument "__size" for method j_realloc
0000000000014737         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
000000000001473a         call       j_realloc                                   ; realloc
000000000001473f         test       rax, rax
0000000000014742         je         loc_143c5

0000000000014748         mov        r15, rax

                     loc_1474b:
000000000001474b         mov        byte [r15+r14], 0x0                         ; CODE XREF=vasnprintf+1182, vasnprintf+3411, vasnprintf+3795, vasnprintf+4357
0000000000014750         call       j___errno_location                          ; __errno_location
0000000000014755         mov        qword [rbp+var_3C8], rax
000000000001475c         mov        eax, dword [rax]
000000000001475e         mov        qword [rbp+var_3F8], rbx
0000000000014765         mov        dword [rbp+var_424], eax
000000000001476b         nop        dword [rax+rax]

                     loc_14770:
0000000000014770         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+1591, vasnprintf+1677, vasnprintf+2598, vasnprintf+2652, vasnprintf+2755, vasnprintf+4332
0000000000014777         mov        rbx, r12
000000000001477a         mov        r10d, 0x7fffffff
0000000000014780         sub        rbx, r14
0000000000014783         mov        dword [rbp+var_3BC], 0xffffffff
000000000001478d         cmp        rbx, 0x7fffffff
0000000000014794         mov        dword [rax], 0x0
000000000001479a         mov        eax, dword [rbp+var_3D0]
00000000000147a0         cmovbe     r10, rbx
00000000000147a4         cmp        eax, 0x11
00000000000147a7         ja         loc_15186

00000000000147ad         lea        rsi, qword [switch_table_18ea0]             ; switch_table_18ea0
00000000000147b4         movsxd     rax, dword [rsi+rax*4]
00000000000147b8         add        rax, rsi
00000000000147bb         jmp        rax                                         ; switch statement using table at 0x18ea0, with 18 cases, 0x147c0,0x148f8,0x14a20,0x14aa8,0x14b28,0x14b68,0x14bf0,0x14c20,0x15186
00000000000147bd         align      64

                     loc_147c0:
00000000000147c0         mov        rax, qword [r13+0x50]                       ; case 17, CODE XREF=vasnprintf+1371
00000000000147c4         lea        rdi, qword [r15+r14]
00000000000147c8         shl        rax, 0x5
00000000000147cc         add        rax, qword [rbp+var_3A8]
00000000000147d3         mov        r9, qword [rax+0x10]
00000000000147d7         mov        eax, dword [rbp+var_3E0]
00000000000147dd         cmp        eax, 0x1
00000000000147e0         je         loc_14ca8

00000000000147e6         cmp        eax, 0x2
00000000000147e9         je         loc_14c90

00000000000147ef         sub        rsp, 0x8
00000000000147f3         push       qword [rbp+var_3F0]

                     loc_147f9:
00000000000147f9         mov        r8, qword [rbp+var_3D8]                     ; CODE XREF=vasnprintf+3262
0000000000014800         mov        rsi, r10
0000000000014803         mov        rcx, 0xffffffffffffffff
000000000001480a         mov        edx, 0x1
000000000001480f         xor        eax, eax
0000000000014811         mov        qword [rbp+var_430], r10
0000000000014818         call       j___snprintf_chk                            ; __snprintf_chk
000000000001481d         pop        rsi
000000000001481e         pop        rdi
000000000001481f         mov        r10, qword [rbp+var_430]

                     loc_14826:
0000000000014826         mov        ecx, dword [rbp+var_3BC]                    ; CODE XREF=vasnprintf+2109, vasnprintf+2238, vasnprintf+2433, vasnprintf+3237
000000000001482c         test       ecx, ecx
000000000001482e         js         loc_1496c

                     loc_14834:
0000000000014834         movsxd     rdx, ecx                                    ; CODE XREF=vasnprintf+1798
0000000000014837         cmp        rdx, r10
000000000001483a         jae        loc_1484a

000000000001483c         add        rdx, r15
000000000001483f         cmp        byte [rdx+r14], 0x0
0000000000014844         jne        loc_15186

                     loc_1484a:
000000000001484a         cmp        ecx, eax                                    ; CODE XREF=vasnprintf+1498
000000000001484c         jge        loc_14856

                     loc_1484e:
000000000001484e         mov        dword [rbp+var_3BC], eax                    ; CODE XREF=vasnprintf+1823
0000000000014854         mov        ecx, eax

                     loc_14856:
0000000000014856         lea        eax, dword [rcx+1]                          ; CODE XREF=vasnprintf+1516
0000000000014859         cmp        rax, r10
000000000001485c         jb         loc_15090

0000000000014862         cmp        rbx, 0x7ffffffe
0000000000014869         ja         loc_150b0

000000000001486f         lea        rsi, qword [r12+r12]
0000000000014873         lea        edx, dword [rcx+2]
0000000000014876         test       r12, r12
0000000000014879         mov        rax, 0xffffffffffffffff
0000000000014880         cmovns     rax, rsi
0000000000014884         add        rdx, r14
0000000000014887         jb         loc_15348

000000000001488d         cmp        rax, rdx
0000000000014890         cmovb      rax, rdx
0000000000014894         cmp        r12, rax
0000000000014897         jae        loc_14770

000000000001489d         test       r12, r12
00000000000148a0         js         loc_143d1

00000000000148a6         cmp        rsi, rax
00000000000148a9         mov        r12, rsi
00000000000148ac         jae        loc_148bb

00000000000148ae         cmp        rax, 0xffffffffffffffff
00000000000148b2         je         loc_143d1

00000000000148b8         mov        r12, rax

                     loc_148bb:
00000000000148bb         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+1612
00000000000148c2         sete       bl
00000000000148c5         test       r15, r15
00000000000148c8         je         loc_14c50

00000000000148ce         test       bl, bl
00000000000148d0         jne        loc_14c50

00000000000148d6         mov        rsi, r12                                    ; argument "__size" for method j_realloc
00000000000148d9         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
00000000000148dc         call       j_realloc                                   ; realloc
00000000000148e1         test       rax, rax
00000000000148e4         je         loc_143d1

00000000000148ea         mov        r15, rax
00000000000148ed         jmp        loc_14770
00000000000148f2         align      8

                     loc_148f8:
00000000000148f8         mov        rax, qword [r13+0x50]                       ; case 14, CODE XREF=vasnprintf+1371
00000000000148fc         lea        rdi, qword [r15+r14]
0000000000014900         shl        rax, 0x5
0000000000014904         add        rax, qword [rbp+var_3A8]
000000000001490b         mov        r9d, dword [rax+0x10]
000000000001490f         mov        eax, dword [rbp+var_3E0]
0000000000014915         cmp        eax, 0x1
0000000000014918         je         loc_14b50

                     loc_1491e:
000000000001491e         cmp        eax, 0x2                                    ; CODE XREF=vasnprintf+2281, vasnprintf+2481, vasnprintf+2529
0000000000014921         je         loc_14b98

                     loc_14927:
0000000000014927         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+2350
000000000001492b         push       qword [rbp+var_3F0]

                     loc_14931:
0000000000014931         mov        r8, qword [rbp+var_3D8]                     ; CODE XREF=vasnprintf+2303
0000000000014938         mov        rcx, 0xffffffffffffffff
000000000001493f         mov        edx, 0x1
0000000000014944         mov        rsi, r10
0000000000014947         xor        eax, eax
0000000000014949         mov        qword [rbp+var_430], r10
0000000000014950         call       j___snprintf_chk                            ; __snprintf_chk
0000000000014955         pop        rdx
0000000000014956         pop        rcx
0000000000014957         mov        ecx, dword [rbp+var_3BC]
000000000001495d         mov        r10, qword [rbp+var_430]
0000000000014964         test       ecx, ecx
0000000000014966         jns        loc_14834

                     loc_1496c:
000000000001496c         mov        rdi, qword [rbp+var_3F8]                    ; CODE XREF=vasnprintf+1486
0000000000014973         cmp        byte [rdi+1], 0x0
0000000000014977         jne        loc_14cb8

000000000001497d         test       eax, eax
000000000001497f         jns        loc_1484e

0000000000014985         mov        rax, qword [rbp+var_3C8]
000000000001498c         mov        ebx, dword [rax]
000000000001498e         test       ebx, ebx
0000000000014990         jne        loc_149b0

0000000000014992         movzx      eax, byte [r13+0x48]
0000000000014997         mov        ebx, 0x16
000000000001499c         and        eax, 0xffffffef
000000000001499f         cmp        al, 0x63
00000000000149a1         mov        eax, 0x54
00000000000149a6         cmove      ebx, eax
00000000000149a9         nop        dword [rax]

                     loc_149b0:
00000000000149b0         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+1840
00000000000149b7         je         loc_149c2

00000000000149b9         test       r15, r15
00000000000149bc         jne        loc_1516c

                     loc_149c2:
00000000000149c2         mov        rax, qword [rbp+var_420]                    ; CODE XREF=vasnprintf+1879, vasnprintf+3860
00000000000149c9         test       rax, rax
00000000000149cc         je         loc_149d6

00000000000149ce         mov        rdi, rax
00000000000149d1         call       sub_30d0                                    ; sub_30d0

                     loc_149d6:
00000000000149d6         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+1900
00000000000149dd         mov        rdi, qword [rbp+var_2B8]
00000000000149e4         add        rax, 0x20
00000000000149e8         cmp        rdi, rax
00000000000149eb         je         loc_149f2

00000000000149ed         call       sub_30d0                                    ; sub_30d0

                     loc_149f2:
00000000000149f2         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+1931
00000000000149f9         mov        rdi, qword [rbp+var_3A8]
0000000000014a00         add        rax, 0x10
0000000000014a04         cmp        rdi, rax
0000000000014a07         je         loc_14a0e

0000000000014a09         call       sub_30d0                                    ; sub_30d0

                     loc_14a0e:
0000000000014a0e         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+1959
0000000000014a15         xor        r15d, r15d
0000000000014a18         mov        dword [rax], ebx
0000000000014a1a         jmp        loc_1443f
0000000000014a1f         align      32

                     loc_14a20:
0000000000014a20         mov        rax, qword [r13+0x50]                       ; case 12, CODE XREF=vasnprintf+1371
0000000000014a24         lea        rdi, qword [r15+r14]
0000000000014a28         shl        rax, 0x5
0000000000014a2c         add        rax, qword [rbp+var_3A8]
0000000000014a33         fld        tword [rax+0x10]
0000000000014a36         mov        eax, dword [rbp+var_3E0]
0000000000014a3c         cmp        eax, 0x1
0000000000014a3f         je         loc_15070

0000000000014a45         cmp        eax, 0x2
0000000000014a48         jne        loc_14f10

0000000000014a4e         mov        eax, dword [rbp+var_3B4]
0000000000014a54         sub        rsp, 0x8
0000000000014a58         push       qword [rbp+var_3F0]
0000000000014a5e         mov        r9d, dword [rbp+var_3B8]
0000000000014a65         mov        r8, qword [rbp+var_3D8]
0000000000014a6c         mov        rsi, r10
0000000000014a6f         sub        rsp, 0x18
0000000000014a73         mov        rcx, 0xffffffffffffffff
0000000000014a7a         mov        edx, 0x1
0000000000014a7f         fstp       tword [rsp+0x458+var_450]
0000000000014a83         push       rax
0000000000014a84         xor        eax, eax
0000000000014a86         mov        qword [rbp+var_430], r10
0000000000014a8d         call       j___snprintf_chk                            ; __snprintf_chk
0000000000014a92         add        rsp, 0x30
0000000000014a96         mov        r10, qword [rbp+var_430]
0000000000014a9d         jmp        loc_14826
0000000000014aa2         align      8

                     loc_14aa8:
0000000000014aa8         mov        rax, qword [r13+0x50]                       ; case 11, CODE XREF=vasnprintf+1371
0000000000014aac         lea        rdi, qword [r15+r14]
0000000000014ab0         shl        rax, 0x5
0000000000014ab4         add        rax, qword [rbp+var_3A8]
0000000000014abb         movsd      xmm0, qword [rax+0x10]
0000000000014ac0         mov        eax, dword [rbp+var_3E0]
0000000000014ac6         cmp        eax, 0x1
0000000000014ac9         je         loc_15060

0000000000014acf         cmp        eax, 0x2
0000000000014ad2         jne        loc_14ed0

0000000000014ad8         mov        eax, dword [rbp+var_3B4]
0000000000014ade         push       qword [rbp+var_3F0]
0000000000014ae4         push       rax

                     loc_14ae5:
0000000000014ae5         mov        r9d, dword [rbp+var_3B8]                    ; CODE XREF=vasnprintf+3594
0000000000014aec         mov        r8, qword [rbp+var_3D8]
0000000000014af3         mov        rsi, r10
0000000000014af6         mov        rcx, 0xffffffffffffffff
0000000000014afd         mov        edx, 0x1
0000000000014b02         mov        eax, 0x1
0000000000014b07         mov        qword [rbp+var_430], r10
0000000000014b0e         call       j___snprintf_chk                            ; __snprintf_chk
0000000000014b13         pop        r8
0000000000014b15         mov        r10, qword [rbp+var_430]
0000000000014b1c         pop        r9
0000000000014b1e         jmp        loc_14826
0000000000014b23         align      8

                     loc_14b28:
0000000000014b28         mov        rax, qword [r13+0x50]                       ; case 4, CODE XREF=vasnprintf+1371
0000000000014b2c         lea        rdi, qword [r15+r14]
0000000000014b30         shl        rax, 0x5
0000000000014b34         add        rax, qword [rbp+var_3A8]
0000000000014b3b         movzx      r9d, word [rax+0x10]
0000000000014b40         mov        eax, dword [rbp+var_3E0]
0000000000014b46         cmp        eax, 0x1
0000000000014b49         jne        loc_1491e

0000000000014b4f         nop

                     loc_14b50:
0000000000014b50         push       qword [rbp+var_3F0]                         ; CODE XREF=vasnprintf+1720, vasnprintf+2345, vasnprintf+2487, vasnprintf+2535
0000000000014b56         push       r9

                     loc_14b58:
0000000000014b58         mov        r9d, dword [rbp+var_3B8]                    ; CODE XREF=vasnprintf+2640
0000000000014b5f         jmp        loc_14931
0000000000014b64         align      8

                     loc_14b68:
0000000000014b68         mov        rax, qword [r13+0x50]                       ; case 3, CODE XREF=vasnprintf+1371
0000000000014b6c         lea        rdi, qword [r15+r14]
0000000000014b70         shl        rax, 0x5
0000000000014b74         add        rax, qword [rbp+var_3A8]
0000000000014b7b         movsx      r9d, word [rax+0x10]
0000000000014b80         mov        eax, dword [rbp+var_3E0]
0000000000014b86         cmp        eax, 0x1
0000000000014b89         je         loc_14b50

0000000000014b8b         cmp        eax, 0x2
0000000000014b8e         jne        loc_14927

0000000000014b94         nop        dword [rax]

                     loc_14b98:
0000000000014b98         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+1729
0000000000014b9c         push       qword [rbp+var_3F0]
0000000000014ba2         push       r9

                     loc_14ba4:
0000000000014ba4         mov        eax, dword [rbp+var_3B4]                    ; CODE XREF=vasnprintf+2620
0000000000014baa         push       rax

                     loc_14bab:
0000000000014bab         mov        r9d, dword [rbp+var_3B8]                    ; CODE XREF=vasnprintf+3617
0000000000014bb2         mov        r8, qword [rbp+var_3D8]
0000000000014bb9         mov        rsi, r10
0000000000014bbc         mov        rcx, 0xffffffffffffffff
0000000000014bc3         mov        edx, 0x1
0000000000014bc8         xor        eax, eax
0000000000014bca         mov        qword [rbp+var_430], r10
0000000000014bd1         call       j___snprintf_chk                            ; __snprintf_chk
0000000000014bd6         add        rsp, 0x20
0000000000014bda         mov        r10, qword [rbp+var_430]
0000000000014be1         jmp        loc_14826
0000000000014be6         align      16

                     loc_14bf0:
0000000000014bf0         mov        rax, qword [r13+0x50]                       ; case 2, CODE XREF=vasnprintf+1371
0000000000014bf4         lea        rdi, qword [r15+r14]
0000000000014bf8         shl        rax, 0x5
0000000000014bfc         add        rax, qword [rbp+var_3A8]
0000000000014c03         movzx      r9d, byte [rax+0x10]
0000000000014c08         mov        eax, dword [rbp+var_3E0]
0000000000014c0e         cmp        eax, 0x1
0000000000014c11         jne        loc_1491e

0000000000014c17         jmp        loc_14b50
0000000000014c1c         align      32

                     loc_14c20:
0000000000014c20         mov        rax, qword [r13+0x50]                       ; case 1, CODE XREF=vasnprintf+1371
0000000000014c24         lea        rdi, qword [r15+r14]
0000000000014c28         shl        rax, 0x5
0000000000014c2c         add        rax, qword [rbp+var_3A8]
0000000000014c33         movsx      r9d, byte [rax+0x10]
0000000000014c38         mov        eax, dword [rbp+var_3E0]
0000000000014c3e         cmp        eax, 0x1
0000000000014c41         jne        loc_1491e

0000000000014c47         jmp        loc_14b50
0000000000014c4c         align      16

                     loc_14c50:
0000000000014c50         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+1640, vasnprintf+1648
0000000000014c53         call       j_malloc                                    ; malloc
0000000000014c58         test       rax, rax
0000000000014c5b         mov        rcx, rax
0000000000014c5e         je         loc_143d1

0000000000014c64         test       r14, r14
0000000000014c67         je         loc_14d20

0000000000014c6d         test       bl, bl
0000000000014c6f         je         loc_14d20

0000000000014c75         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
0000000000014c78         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
0000000000014c7b         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000014c7e         call       j_memcpy                                    ; memcpy
0000000000014c83         mov        r15, rax
0000000000014c86         jmp        loc_14770
0000000000014c8b         align      16

                     loc_14c90:
0000000000014c90         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+1417
0000000000014c94         push       qword [rbp+var_3F0]
0000000000014c9a         push       r9
0000000000014c9c         jmp        loc_14ba4
0000000000014ca1         align      8

                     loc_14ca8:
0000000000014ca8         push       qword [rbp+var_3F0]                         ; CODE XREF=vasnprintf+1408
0000000000014cae         push       r9
0000000000014cb0         jmp        loc_14b58
0000000000014cb5         align      8

                     loc_14cb8:
0000000000014cb8         mov        byte [rdi+1], 0x0                           ; CODE XREF=vasnprintf+1815
0000000000014cbc         jmp        loc_14770
0000000000014cc1         align      8

                     loc_14cc8:
0000000000014cc8         cmp        rax, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+723
0000000000014ccc         jne        loc_15186

0000000000014cd2         mov        rax, r14
0000000000014cd5         add        rax, 0x1
0000000000014cd9         mov        rbx, rax
0000000000014cdc         jae        loc_14d68

0000000000014ce2         cmp        r12, 0xffffffffffffffff
0000000000014ce6         jne        loc_143c5

0000000000014cec         mov        rbx, r12

                     loc_14cef:
0000000000014cef         mov        byte [r15+r14], 0x25                        ; CODE XREF=vasnprintf+2827, vasnprintf+2904, vasnprintf+3555, vasnprintf+3847

                     loc_14cf4:
0000000000014cf4         mov        r8, qword [r13+8]                           ; CODE XREF=vasnprintf+3142, vasnprintf+3446, vasnprintf+3462, vasnprintf+3479, vasnprintf+3653
0000000000014cf8         add        r13, 0x58
0000000000014cfc         mov        rcx, qword [r13]
0000000000014d00         add        qword [rbp+var_400], 0x1
0000000000014d08         cmp        rcx, r8
0000000000014d0b         jne        loc_143a9

                     loc_14d11:
0000000000014d11         mov        r14, rbx                                    ; CODE XREF=vasnprintf+323
0000000000014d14         jmp        loc_14513
0000000000014d19         align      32

                     loc_14d20:
0000000000014d20         mov        r15, rcx                                    ; CODE XREF=vasnprintf+2567, vasnprintf+2575
0000000000014d23         jmp        loc_14770

                     loc_14d28:
0000000000014d28         call       j___errno_location                          ; __errno_location, CODE XREF=vasnprintf+154, vasnprintf+174, vasnprintf+204, vasnprintf+225
0000000000014d2d         mov        qword [rbp+var_3C8], rax
0000000000014d34         jmp        loc_143f7
0000000000014d39         align      64

                     loc_14d40:
0000000000014d40         mov        edx, edi                                    ; CODE XREF=vasnprintf+764
0000000000014d42         sub        edx, 0x12
0000000000014d45         cmp        edx, 0x4
0000000000014d48         ja         loc_15186

0000000000014d4e         lea        rdi, qword [switch_table_18ee8]             ; switch_table_18ee8
0000000000014d55         mov        rax, qword [rax+0x10]
0000000000014d59         movsxd     rdx, dword [rdi+rdx*4]
0000000000014d5d         add        rdx, rdi
0000000000014d60         jmp        rdx                                         ; switch statement using table at 0x18ee8, with 5 cases, 0x14ea0,0x14fd0,0x14fe0,0x14ff0
0000000000014d62         align      8

                     loc_14d68:
0000000000014d68         cmp        r12, rax                                    ; CODE XREF=vasnprintf+2684
0000000000014d6b         jae        loc_14cef

0000000000014d6d         test       r12, r12
0000000000014d70         jne        loc_15140

0000000000014d76         cmp        rax, 0xc
0000000000014d7a         ja         loc_15152

0000000000014d80         mov        r12d, 0xc

                     loc_14d86:
0000000000014d86         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+3820, vasnprintf+3839
0000000000014d8d         sete       dl
0000000000014d90         test       r15, r15
0000000000014d93         je         loc_15000

0000000000014d99         test       dl, dl
0000000000014d9b         jne        loc_15000

0000000000014da1         mov        rsi, r12                                    ; argument "__size" for method j_realloc
0000000000014da4         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
0000000000014da7         call       j_realloc                                   ; realloc
0000000000014dac         test       rax, rax
0000000000014daf         je         loc_14eab

0000000000014db5         mov        r15, rax
0000000000014db8         jmp        loc_14cef
0000000000014dbd         align      64

                     loc_14dc0:
0000000000014dc0         mov        dword [rbp+var_3E0], 0x0                    ; CODE XREF=vasnprintf+1070
0000000000014dca         jmp        loc_146b7
0000000000014dcf         align      16

                     loc_14dd0:
0000000000014dd0         js         loc_143c5                                   ; CODE XREF=vasnprintf+576

0000000000014dd6         add        r12, r12
0000000000014dd9         cmp        r12, rax
0000000000014ddc         jae        loc_144b6

                     loc_14de2:
0000000000014de2         cmp        rax, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+586
0000000000014de6         je         loc_143c5

0000000000014dec         cmp        r15, qword [rbp+var_3E8]
0000000000014df3         mov        r12, rax
0000000000014df6         sete       dl
0000000000014df9         test       r15, r15
0000000000014dfc         jne        loc_144c9

0000000000014e02         nop        word [rax+rax]

                     loc_14e08:
0000000000014e08         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+611, vasnprintf+619
0000000000014e0b         mov        qword [rbp+var_3E0], r8
0000000000014e12         mov        byte [rbp+var_3D0], dl
0000000000014e18         mov        qword [rbp+var_3C8], rcx
0000000000014e1f         call       j_malloc                                    ; malloc
0000000000014e24         test       rax, rax
0000000000014e27         mov        r9, rax
0000000000014e2a         mov        rcx, qword [rbp+var_3C8]
0000000000014e31         movzx      edx, byte [rbp+var_3D0]
0000000000014e38         mov        r8, qword [rbp+var_3E0]
0000000000014e3f         je         loc_143c5

0000000000014e45         test       rbx, rbx
0000000000014e48         je         loc_15050

0000000000014e4e         test       dl, dl
0000000000014e50         je         loc_15050

0000000000014e56         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
0000000000014e59         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
0000000000014e5c         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000014e5f         mov        qword [rbp+var_3D0], r8
0000000000014e66         mov        qword [rbp+var_3C8], rcx
0000000000014e6d         call       j_memcpy                                    ; memcpy
0000000000014e72         mov        rcx, qword [rbp+var_3C8]
0000000000014e79         mov        r15, rax
0000000000014e7c         mov        r8, qword [rbp+var_3D0]
0000000000014e83         jmp        loc_14504
0000000000014e88         align      16

                     loc_14e90:
0000000000014e90         mov        r14, r12                                    ; CODE XREF=vasnprintf+351
0000000000014e93         jmp        loc_14504
0000000000014e98         align      32

                     loc_14ea0:
0000000000014ea0         mov        qword [rax], r14                            ; case 4, CODE XREF=vasnprintf+2816
0000000000014ea3         mov        rbx, r14
0000000000014ea6         jmp        loc_14cf4

                     loc_14eab:
0000000000014eab         call       j___errno_location                          ; __errno_location, CODE XREF=vasnprintf+667, vasnprintf+2895, vasnprintf+4051
0000000000014eb0         mov        qword [rbp+var_3C8], rax
0000000000014eb7         nop        word [rax+rax]

                     loc_14ec0:
0000000000014ec0         mov        rdi, r15                                    ; CODE XREF=vasnprintf+381
0000000000014ec3         call       sub_30d0                                    ; sub_30d0
0000000000014ec8         jmp        loc_143e3
0000000000014ecd         align      16

                     loc_14ed0:
0000000000014ed0         mov        r9, qword [rbp+var_3F0]                     ; CODE XREF=vasnprintf+2162
0000000000014ed7         mov        r8, qword [rbp+var_3D8]
0000000000014ede         mov        rsi, r10
0000000000014ee1         mov        rcx, 0xffffffffffffffff
0000000000014ee8         mov        edx, 0x1
0000000000014eed         mov        eax, 0x1
0000000000014ef2         mov        qword [rbp+var_430], r10
0000000000014ef9         call       j___snprintf_chk                            ; __snprintf_chk
0000000000014efe         mov        r10, qword [rbp+var_430]
0000000000014f05         jmp        loc_14826
0000000000014f0a         align      16

                     loc_14f10:
0000000000014f10         sub        rsp, 0x10                                   ; CODE XREF=vasnprintf+2024
0000000000014f14         mov        r9, qword [rbp+var_3F0]
0000000000014f1b         fstp       tword [rsp+0x440+var_440]
0000000000014f1e         jmp        loc_147f9
0000000000014f23         align      8

                     loc_14f28:
0000000000014f28         js         loc_143c5                                   ; CODE XREF=vasnprintf+1187

0000000000014f2e         add        r12, r12
0000000000014f31         cmp        r12, rax
0000000000014f34         jae        loc_14719

0000000000014f3a         nop        word [rax+rax]

                     loc_14f40:
0000000000014f40         test       rdx, rdx                                    ; CODE XREF=vasnprintf+1197, vasnprintf+4372
0000000000014f43         jne        loc_143c5

0000000000014f49         cmp        rax, 0xffffffffffffffff
0000000000014f4d         je         loc_143c5

0000000000014f53         cmp        r15, qword [rbp+var_3E8]
0000000000014f5a         mov        r12, rax
0000000000014f5d         sete       dl
0000000000014f60         test       r15, r15
0000000000014f63         jne        loc_1472c

0000000000014f69         nop        dword [rax]

                     loc_14f70:
0000000000014f70         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+1222, vasnprintf+1230
0000000000014f73         mov        byte [rbp+var_3C8], dl
0000000000014f79         call       j_malloc                                    ; malloc
0000000000014f7e         test       rax, rax
0000000000014f81         mov        rcx, rax
0000000000014f84         movzx      edx, byte [rbp+var_3C8]
0000000000014f8b         je         loc_143c5

0000000000014f91         test       r14, r14
0000000000014f94         je         loc_15130

0000000000014f9a         test       dl, dl
0000000000014f9c         je         loc_15130

0000000000014fa2         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
0000000000014fa5         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
0000000000014fa8         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000014fab         call       j_memcpy                                    ; memcpy
0000000000014fb0         mov        r15, rax
0000000000014fb3         jmp        loc_1474b
0000000000014fb8         align      64

                     loc_14fc0:
0000000000014fc0         mov        byte [rbx], 0x4c                            ; CODE XREF=vasnprintf+1026
0000000000014fc3         add        rbx, 0x1
0000000000014fc7         jmp        loc_1467b
0000000000014fcc         align      16

                     loc_14fd0:
0000000000014fd0         mov        byte [rax], r14b                            ; case 0, CODE XREF=vasnprintf+2816
0000000000014fd3         mov        rbx, r14
0000000000014fd6         jmp        loc_14cf4
0000000000014fdb         align      32

                     loc_14fe0:
0000000000014fe0         mov        dword [rax], r14d                           ; case 2, CODE XREF=vasnprintf+2816
0000000000014fe3         mov        rbx, r14
0000000000014fe6         jmp        loc_14cf4
0000000000014feb         align      16

                     loc_14ff0:
0000000000014ff0         mov        word [rax], r14w                            ; case 1, CODE XREF=vasnprintf+2816
0000000000014ff4         mov        rbx, r14
0000000000014ff7         jmp        loc_14cf4
0000000000014ffc         align      4096

                     loc_15000:
0000000000015000         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+2867, vasnprintf+2875
0000000000015003         mov        byte [rbp+var_3C8], dl
0000000000015009         call       j_malloc                                    ; malloc
000000000001500e         test       rax, rax
0000000000015011         mov        rcx, rax
0000000000015014         movzx      edx, byte [rbp+var_3C8]
000000000001501b         je         loc_143c5

0000000000015021         test       r14, r14
0000000000015024         je         loc_15164

000000000001502a         test       dl, dl
000000000001502c         je         loc_15164

0000000000015032         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
0000000000015035         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
0000000000015038         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
000000000001503b         call       j_memcpy                                    ; memcpy
0000000000015040         mov        r15, rax
0000000000015043         jmp        loc_14cef
0000000000015048         align      16

                     loc_15050:
0000000000015050         mov        r15, r9                                     ; CODE XREF=vasnprintf+3048, vasnprintf+3056
0000000000015053         jmp        loc_14504
0000000000015058         align      32

                     loc_15060:
0000000000015060         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+2153
0000000000015064         push       qword [rbp+var_3F0]
000000000001506a         jmp        loc_14ae5
000000000001506f         align      16

                     loc_15070:
0000000000015070         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+2015
0000000000015074         push       qword [rbp+var_3F0]
000000000001507a         sub        rsp, 0x10
000000000001507e         fstp       tword [rsp+0x450+var_450]
0000000000015081         jmp        loc_14bab
0000000000015086         align      16

                     loc_15090:
0000000000015090         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+1532
0000000000015097         mov        edi, dword [rbp+var_424]
000000000001509d         movsxd     rbx, ecx
00000000000150a0         add        rbx, r14
00000000000150a3         mov        dword [rax], edi
00000000000150a5         jmp        loc_14cf4
00000000000150aa         align      16

                     loc_150b0:
00000000000150b0         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+1545
00000000000150b7         je         loc_150c2

00000000000150b9         test       r15, r15
00000000000150bc         jne        loc_15179

                     loc_150c2:
00000000000150c2         mov        rax, qword [rbp+var_420]                    ; CODE XREF=vasnprintf+3671, vasnprintf+3873
00000000000150c9         test       rax, rax
00000000000150cc         je         loc_150d6

00000000000150ce         mov        rdi, rax
00000000000150d1         call       sub_30d0                                    ; sub_30d0

                     loc_150d6:
00000000000150d6         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+3692
00000000000150dd         mov        rdi, qword [rbp+var_2B8]
00000000000150e4         add        rax, 0x20
00000000000150e8         cmp        rdi, rax
00000000000150eb         je         loc_150f2

00000000000150ed         call       sub_30d0                                    ; sub_30d0

                     loc_150f2:
00000000000150f2         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+3723
00000000000150f9         mov        rdi, qword [rbp+var_3A8]
0000000000015100         add        rax, 0x10
0000000000015104         cmp        rdi, rax
0000000000015107         je         loc_1510e

0000000000015109         call       sub_30d0                                    ; sub_30d0

                     loc_1510e:
000000000001510e         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+3751
0000000000015115         xor        r15d, r15d
0000000000015118         mov        dword [rax], 0x4b
000000000001511e         jmp        loc_1443f
0000000000015123         align      8

                     loc_15128:
0000000000015128         xor        r15d, r15d                                  ; CODE XREF=vasnprintf+96
000000000001512b         jmp        loc_1443f

                     loc_15130:
0000000000015130         mov        r15, rcx                                    ; CODE XREF=vasnprintf+3380, vasnprintf+3388
0000000000015133         jmp        loc_1474b
0000000000015138         align      64

                     loc_15140:
0000000000015140         js         loc_143c5                                   ; CODE XREF=vasnprintf+2832

0000000000015146         add        r12, r12
0000000000015149         cmp        r12, rax
000000000001514c         jae        loc_14d86

                     loc_15152:
0000000000015152         cmp        rax, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+2842
0000000000015156         je         loc_143c5

000000000001515c         mov        r12, rax
000000000001515f         jmp        loc_14d86

                     loc_15164:
0000000000015164         mov        r15, rcx                                    ; CODE XREF=vasnprintf+3524, vasnprintf+3532
0000000000015167         jmp        loc_14cef

                     loc_1516c:
000000000001516c         mov        rdi, r15                                    ; CODE XREF=vasnprintf+1884
000000000001516f         call       sub_30d0                                    ; sub_30d0
0000000000015174         jmp        loc_149c2

                     loc_15179:
0000000000015179         mov        rdi, r15                                    ; CODE XREF=vasnprintf+3676
000000000001517c         call       sub_30d0                                    ; sub_30d0
0000000000015181         jmp        loc_150c2

                     loc_15186:
0000000000015186         call       j_abort                                     ; abort, case 0, CODE XREF=vasnprintf+733, vasnprintf+1086, vasnprintf+1132, vasnprintf+1351, vasnprintf+1371, vasnprintf+1508, vasnprintf+2668, vasnprintf+2792
                        ; endp
000000000001518b         align      16

                     loc_15190:
0000000000015190         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+115
0000000000015197         mov        rdi, qword [rbp+var_2B8]
000000000001519e         add        rax, 0x20
00000000000151a2         cmp        rdi, rax
00000000000151a5         je         loc_151ac

00000000000151a7         call       sub_30d0                                    ; sub_30d0

                     loc_151ac:
00000000000151ac         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+3909
00000000000151b3         mov        rdi, qword [rbp+var_3A8]
00000000000151ba         add        rax, 0x10
00000000000151be         cmp        rdi, rax
00000000000151c1         je         loc_151c8

00000000000151c3         call       sub_30d0                                    ; sub_30d0

                     loc_151c8:
00000000000151c8         call       j___errno_location                          ; __errno_location, CODE XREF=vasnprintf+3937
00000000000151cd         xor        r15d, r15d
00000000000151d0         mov        dword [rax], 0x16
00000000000151d6         jmp        loc_1443f

                     loc_151db:
00000000000151db         mov        rbx, r14                                    ; CODE XREF=vasnprintf+705
00000000000151de         xor        eax, eax
00000000000151e0         add        rbx, 0x1
00000000000151e4         jb         loc_152f0

00000000000151ea         cmp        r12, rbx
00000000000151ed         jae        loc_1523c

00000000000151ef         test       r12, r12
00000000000151f2         jne        loc_15329

00000000000151f8         cmp        rbx, 0xc
00000000000151fc         ja         loc_1530e

0000000000015202         mov        r12d, 0xc

                     loc_15208:
0000000000015208         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+4292, vasnprintf+4309
000000000001520f         sete       r13b
0000000000015213         test       r15, r15
0000000000015216         je         loc_152bc

000000000001521c         test       r13b, r13b
000000000001521f         jne        loc_152bc

0000000000015225         mov        rsi, r12                                    ; argument "__size" for method j_realloc
0000000000015228         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
000000000001522b         call       j_realloc                                   ; realloc
0000000000015230         test       rax, rax
0000000000015233         je         loc_14eab

0000000000015239         mov        r15, rax

                     loc_1523c:
000000000001523c         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+3981, vasnprintf+4235, vasnprintf+4249, vasnprintf+4323
0000000000015243         mov        byte [r15+r14], 0x0
0000000000015248         je         loc_15261

000000000001524a         cmp        r12, rbx
000000000001524d         jbe        loc_15261

000000000001524f         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
0000000000015252         mov        rsi, rbx                                    ; argument "__size" for method j_realloc
0000000000015255         call       j_realloc                                   ; realloc
000000000001525a         test       rax, rax
000000000001525d         cmovne     r15, rax

                     loc_15261:
0000000000015261         mov        rax, qword [rbp+var_420]                    ; CODE XREF=vasnprintf+4072, vasnprintf+4077
0000000000015268         test       rax, rax
000000000001526b         je         loc_15275

000000000001526d         mov        rdi, rax
0000000000015270         call       sub_30d0                                    ; sub_30d0

                     loc_15275:
0000000000015275         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+4107
000000000001527c         mov        rdi, qword [rbp+var_2B8]
0000000000015283         add        rax, 0x20
0000000000015287         cmp        rdi, rax
000000000001528a         je         loc_15291

000000000001528c         call       sub_30d0                                    ; sub_30d0

                     loc_15291:
0000000000015291         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+4138
0000000000015298         mov        rdi, qword [rbp+var_3A8]
000000000001529f         add        rax, 0x10
00000000000152a3         cmp        rdi, rax
00000000000152a6         je         loc_152ad

00000000000152a8         call       sub_30d0                                    ; sub_30d0

                     loc_152ad:
00000000000152ad         mov        rax, qword [rbp+var_418]                    ; CODE XREF=vasnprintf+4166
00000000000152b4         mov        qword [rax], r14
00000000000152b7         jmp        loc_1443f

                     loc_152bc:
00000000000152bc         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+4022, vasnprintf+4031
00000000000152bf         call       j_malloc                                    ; malloc
00000000000152c4         test       rax, rax
00000000000152c7         mov        rcx, rax
00000000000152ca         je         loc_143c5

00000000000152d0         test       r14, r14
00000000000152d3         je         loc_15340

00000000000152d5         test       r13b, r13b
00000000000152d8         je         loc_15340

00000000000152da         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
00000000000152dd         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
00000000000152e0         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
00000000000152e3         call       j_memcpy                                    ; memcpy
00000000000152e8         mov        r15, rax
00000000000152eb         jmp        loc_1523c

                     loc_152f0:
00000000000152f0         cmp        r12, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+3972
00000000000152f4         mov        eax, 0x1
00000000000152f9         je         loc_1523c

00000000000152ff         test       r12, r12
0000000000015302         je         loc_143c5

0000000000015308         js         loc_143c5

                     loc_1530e:
000000000001530e         test       rax, rax                                    ; CODE XREF=vasnprintf+3996, vasnprintf+4315
0000000000015311         jne        loc_143c5

0000000000015317         cmp        rbx, 0xffffffffffffffff
000000000001531b         je         loc_143c5

0000000000015321         mov        r12, rbx
0000000000015324         jmp        loc_15208

                     loc_15329:
0000000000015329         js         loc_143c5                                   ; CODE XREF=vasnprintf+3986

000000000001532f         add        r12, r12
0000000000015332         cmp        r12, rbx
0000000000015335         jae        loc_15208

000000000001533b         jmp        loc_1530e
000000000001533d         align      64

                     loc_15340:
0000000000015340         mov        r15, rcx                                    ; CODE XREF=vasnprintf+4211, vasnprintf+4216
0000000000015343         jmp        loc_1523c

                     loc_15348:
0000000000015348         cmp        r12, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+1575
000000000001534c         je         loc_14770

0000000000015352         jmp        loc_143d1

                     loc_15357:
0000000000015357         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=vasnprintf+495
                        ; endp

                     loc_1535c:
000000000001535c         cmp        r12, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+1173
0000000000015360         mov        edx, 0x1
0000000000015365         je         loc_1474b

000000000001536b         test       r12, r12
000000000001536e         je         loc_143c5

0000000000015374         jns        loc_14f40

000000000001537a         jmp        loc_143c5
000000000001537f         align      128                                         ; End of unwind block (FDE at 0x1c35c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fopen_safer:
0000000000015380         push       r12                                         ; Begin of unwind block (FDE at 0x1c38c), CODE XREF=randread_new+57
0000000000015382         push       rbp
0000000000015383         mov        rbp, rsi
0000000000015386         push       rbx
0000000000015387         call       j_fopen                                     ; fopen
000000000001538c         test       rax, rax
000000000001538f         mov        rbx, rax
0000000000015392         je         loc_153a1

0000000000015394         mov        rdi, rax                                    ; argument "__stream" for method j_fileno
0000000000015397         call       j_fileno                                    ; fileno
000000000001539c         cmp        eax, 0x2
000000000001539f         jbe        loc_153b0

                     loc_153a1:
00000000000153a1         mov        rax, rbx                                    ; CODE XREF=fopen_safer+18, fopen_safer+91, fopen_safer+115, fopen_safer+145
00000000000153a4         pop        rbx
00000000000153a5         pop        rbp
00000000000153a6         pop        r12
00000000000153a8         ret
                        ; endp
00000000000153a9         align      16

                     loc_153b0:
00000000000153b0         mov        edi, eax                                    ; CODE XREF=fopen_safer+31
00000000000153b2         call       dup_safer                                   ; dup_safer
00000000000153b7         test       eax, eax
00000000000153b9         mov        r12d, eax
00000000000153bc         js         loc_153f8

00000000000153be         mov        rdi, rbx
00000000000153c1         call       rpl_fclose                                  ; rpl_fclose
00000000000153c6         test       eax, eax
00000000000153c8         jne        loc_153dd

00000000000153ca         mov        rsi, rbp                                    ; argument "__modes" for method j_fdopen
00000000000153cd         mov        edi, r12d                                   ; argument "__fd" for method j_fdopen
00000000000153d0         call       j_fdopen                                    ; fdopen
00000000000153d5         test       rax, rax
00000000000153d8         mov        rbx, rax
00000000000153db         jne        loc_153a1

                     loc_153dd:
00000000000153dd         call       j___errno_location                          ; __errno_location, CODE XREF=fopen_safer+72
00000000000153e2         mov        ebp, dword [rax]
00000000000153e4         mov        rbx, rax
00000000000153e7         mov        edi, r12d                                   ; argument "__fd" for method j_close
00000000000153ea         call       j_close                                     ; close
00000000000153ef         mov        dword [rbx], ebp
00000000000153f1         xor        ebx, ebx
00000000000153f3         jmp        loc_153a1
00000000000153f5         align      8

                     loc_153f8:
00000000000153f8         call       j___errno_location                          ; __errno_location, CODE XREF=fopen_safer+60
00000000000153fd         mov        r12d, dword [rax]
0000000000015400         mov        rbp, rax
0000000000015403         mov        rdi, rbx
0000000000015406         call       rpl_fclose                                  ; rpl_fclose
000000000001540b         xor        ebx, ebx
000000000001540d         mov        dword [rbp], r12d
0000000000015411         jmp        loc_153a1
0000000000015413         align      32                                          ; End of unwind block (FDE at 0x1c38c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     printf_fetchargs:
0000000000015420         cmp        qword [rsi], 0x0                            ; Begin of unwind block (FDE at 0x1c3bc), CODE XREF=vasnprintf+108
0000000000015424         mov        rax, qword [rsi+8]
0000000000015428         je         loc_1548d

000000000001542a         lea        r8, qword [aNull+20]                        ; 0x18f10
0000000000015431         lea        r10, qword [wide_null_string.2696]          ; wide_null_string.2696
0000000000015438         lea        r9, qword [aNull]                           ; "(NULL)"
000000000001543f         xor        ecx, ecx
0000000000015441         nop        dword [rax]
0000000000015448         cmp        dword [rax], 0x16
000000000001544b         ja         loc_15490

000000000001544d         mov        edx, dword [rax]
000000000001544f         movsxd     rdx, dword [r8+rdx*4]
0000000000015453         add        rdx, r8
0000000000015456         jmp        rdx
                        ; endp
0000000000015458         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15460:
0000000000015460         mov        rdx, qword [rdi+8]
0000000000015464         add        rdx, 0xf
0000000000015468         and        rdx, 0xfffffffffffffff0
000000000001546c         lea        r11, qword [rdx+0x10]
0000000000015470         mov        qword [rdi+8], r11
0000000000015474         fld        tword [rdx]
0000000000015476         fstp       tword [rax+0x10]
0000000000015479         nop        dword [rax]
0000000000015480         add        rcx, 0x1                                    ; CODE XREF=sub_15496+137, sub_15496+183
0000000000015484         add        rax, 0x20
0000000000015488         cmp        qword [rsi], rcx
000000000001548b         ja         printf_fetchargs+40
                        ; endp

                     loc_1548d:
000000000001548d         xor        eax, eax                                    ; CODE XREF=printf_fetchargs+8
000000000001548f         ret
                        ; endp

                     loc_15490:
0000000000015490         mov        eax, 0xffffffff                             ; CODE XREF=printf_fetchargs+43
0000000000015495         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15496:
0000000000015496         mov        r11d, dword [rdi]
0000000000015499         cmp        r11d, 0x2f
000000000001549d         ja         loc_155da

00000000000154a3         mov        edx, r11d
00000000000154a6         add        rdx, qword [rdi+0x10]
00000000000154aa         add        r11d, 0x8
00000000000154ae         mov        dword [rdi], r11d

                     loc_154b1:
00000000000154b1         mov        rdx, qword [rdx]                            ; CODE XREF=sub_15580+102
00000000000154b4         mov        qword [rax+0x10], rdx
00000000000154b8         jmp        sub_15460+32
                        ; endp
00000000000154ba         mov        r11d, dword [rdi]
00000000000154bd         cmp        r11d, 0x2f
00000000000154c1         ja         sub_155fc                                   ; sub_155fc
00000000000154c7         mov        edx, r11d
00000000000154ca         add        rdx, qword [rdi+0x10]
00000000000154ce         add        r11d, 0x8
00000000000154d2         mov        dword [rdi], r11d

                     loc_154d5:
00000000000154d5         mov        edx, dword [rdx]                            ; CODE XREF=sub_155fc+12
00000000000154d7         mov        dword [rax+0x10], edx
00000000000154da         jmp        sub_15460+32
                        ; endp
00000000000154dc         mov        r11d, dword [rdi]
00000000000154df         cmp        r11d, 0x2f
00000000000154e3         ja         sub_155eb                                   ; sub_155eb
00000000000154e9         mov        edx, r11d
00000000000154ec         add        rdx, qword [rdi+0x10]
00000000000154f0         add        r11d, 0x8
00000000000154f4         mov        dword [rdi], r11d

                     loc_154f7:
00000000000154f7         mov        edx, dword [rdx]                            ; CODE XREF=sub_155eb+12
00000000000154f9         mov        byte [rax+0x10], dl
00000000000154fc         jmp        sub_15460+32
                        ; endp
00000000000154fe         mov        r11d, dword [rdi]
0000000000015501         cmp        r11d, 0x2f
0000000000015505         ja         sub_15580+42
000000000001550b         mov        edx, r11d
000000000001550e         add        rdx, qword [rdi+0x10]
0000000000015512         add        r11d, 0x8
0000000000015516         mov        dword [rdi], r11d
0000000000015519         mov        edx, dword [rdx]                            ; CODE XREF=sub_15580+54
000000000001551b         mov        word [rax+0x10], dx
000000000001551f         jmp        sub_15460+32
0000000000015524         mov        r11d, dword [rdi]
0000000000015527         cmp        r11d, 0x2f
000000000001552b         ja         sub_15580+59
0000000000015531         mov        edx, r11d
0000000000015534         add        rdx, qword [rdi+0x10]
0000000000015538         add        r11d, 0x8
000000000001553c         mov        dword [rdi], r11d
000000000001553f         mov        rdx, qword [rdx]                            ; CODE XREF=sub_15580+71
0000000000015542         test       rdx, rdx
0000000000015545         cmove      rdx, r9
0000000000015549         mov        qword [rax+0x10], rdx
000000000001554d         jmp        sub_15460+32
0000000000015552         mov        r11d, dword [rdi+4]
0000000000015556         cmp        r11d, 0xaf
000000000001555d         ja         sub_1560d                                   ; sub_1560d
0000000000015563         mov        edx, r11d
0000000000015566         add        rdx, qword [rdi+0x10]
000000000001556a         add        r11d, 0x10
000000000001556e         mov        dword [rdi+4], r11d

                     loc_15572:
0000000000015572         movsd      xmm0, qword [rdx]                           ; CODE XREF=sub_1560d+12
0000000000015576         movsd      qword [rax+0x10], xmm0
000000000001557b         jmp        sub_15460+32
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15580:
0000000000015580         mov        r11d, dword [rdi]
0000000000015583         cmp        r11d, 0x2f
0000000000015587         ja         loc_155cc

0000000000015589         mov        edx, r11d
000000000001558c         add        rdx, qword [rdi+0x10]
0000000000015590         add        r11d, 0x8
0000000000015594         mov        dword [rdi], r11d

                     loc_15597:
0000000000015597         mov        rdx, qword [rdx]                            ; CODE XREF=sub_15580+88
000000000001559a         test       rdx, rdx
000000000001559d         cmove      rdx, r10
00000000000155a1         mov        qword [rax+0x10], rdx
00000000000155a5         jmp        sub_15460+32
                        ; endp
00000000000155aa         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_15496+111
00000000000155ae         lea        r11, qword [rdx+8]
00000000000155b2         mov        qword [rdi+8], r11
00000000000155b6         jmp        sub_15496+131
00000000000155bb         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_15496+149
00000000000155bf         lea        r11, qword [rdx+8]
00000000000155c3         mov        qword [rdi+8], r11
00000000000155c7         jmp        sub_15496+169

                     loc_155cc:
00000000000155cc         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_15580+7
00000000000155d0         lea        r11, qword [rdx+8]
00000000000155d4         mov        qword [rdi+8], r11
00000000000155d8         jmp        loc_15597

                     loc_155da:
00000000000155da         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_15496+7
00000000000155de         lea        r11, qword [rdx+8]
00000000000155e2         mov        qword [rdi+8], r11
00000000000155e6         jmp        loc_154b1


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_155eb:
00000000000155eb         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_15496+77
00000000000155ef         lea        r11, qword [rdx+8]
00000000000155f3         mov        qword [rdi+8], r11
00000000000155f7         jmp        loc_154f7


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_155fc:
00000000000155fc         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_15496+43
0000000000015600         lea        r11, qword [rdx+8]
0000000000015604         mov        qword [rdi+8], r11
0000000000015608         jmp        loc_154d5


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1560d:
000000000001560d         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_15496+199
0000000000015611         lea        r11, qword [rdx+8]
0000000000015615         mov        qword [rdi+8], r11
0000000000015619         jmp        loc_15572


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1561e:
000000000001561e         nop                                                    ; End of unwind block (FDE at 0x1c3bc)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128


                     printf_parse:
0000000000015620         push       r15                                         ; Begin of unwind block (FDE at 0x1c3d4), CODE XREF=vasnprintf+89
0000000000015622         push       r14
0000000000015624         lea        rcx, qword [rsi+0x20]
0000000000015628         push       r13
000000000001562a         push       r12
000000000001562c         lea        rax, qword [rdx+0x10]
0000000000015630         push       rbp
0000000000015631         push       rbx
0000000000015632         mov        r14, rsi
0000000000015635         mov        r15, rdx
0000000000015638         xor        ebx, ebx
000000000001563a         mov        r9d, 0x7
0000000000015640         sub        rsp, 0x58
0000000000015644         mov        r10d, 0x7
000000000001564a         mov        qword [rsi], 0x0
0000000000015651         mov        qword [rsi+8], rcx
0000000000015655         mov        qword [rsp+0x88+var_60], rcx
000000000001565a         mov        r8, 0xffffffffffffffff
0000000000015661         mov        qword [rdx], 0x0
0000000000015668         mov        qword [rsp+0x88+var_80], rax
000000000001566d         mov        qword [rdx+8], rax
0000000000015671         mov        qword [rsp+0x88+var_70], 0x0
000000000001567a         mov        qword [rsp+0x88+var_78], 0x0
0000000000015683         mov        qword [rsp+0x88+var_68], 0x0
000000000001568c         jmp        loc_1569b
000000000001568e         align      16

                     loc_15690:
0000000000015690         cmp        al, 0x25                                    ; CODE XREF=printf_parse+128
0000000000015692         lea        rbp, qword [rdi+1]
0000000000015696         je         loc_156d8

                     loc_15698:
0000000000015698         mov        rdi, rbp                                    ; CODE XREF=printf_parse+859, printf_parse+868

                     loc_1569b:
000000000001569b         movzx      eax, byte [rdi]                             ; CODE XREF=printf_parse+108
000000000001569e         test       al, al
00000000000156a0         jne        loc_15690

00000000000156a2         lea        rax, qword [rbx+rbx*4]
00000000000156a6         lea        rax, qword [rbx+rax*2]
00000000000156aa         mov        qword [rcx+rax*8], rdi
00000000000156ae         mov        rax, qword [rsp+0x88+var_78]
00000000000156b3         mov        qword [r14+0x10], rax
00000000000156b7         mov        rax, qword [rsp+0x88+var_70]
00000000000156bc         mov        qword [r14+0x18], rax
00000000000156c0         xor        eax, eax

                     loc_156c2:
00000000000156c2         add        rsp, 0x58                                   ; CODE XREF=printf_parse+2174, printf_parse+2844
00000000000156c6         pop        rbx
00000000000156c7         pop        rbp
00000000000156c8         pop        r12
00000000000156ca         pop        r13
00000000000156cc         pop        r14
00000000000156ce         pop        r15
00000000000156d0         ret
                        ; endp
00000000000156d1         align      8

                     loc_156d8:
00000000000156d8         lea        rax, qword [rbx+rbx*4]                      ; CODE XREF=printf_parse+118
00000000000156dc         mov        r13, r8
00000000000156df         lea        rax, qword [rbx+rax*2]
00000000000156e3         lea        r12, qword [rcx+rax*8]
00000000000156e7         mov        qword [r12], rdi
00000000000156eb         mov        dword [r12+0x10], 0x0
00000000000156f4         mov        qword [r12+0x18], 0x0
00000000000156fd         mov        qword [r12+0x20], 0x0
0000000000015706         mov        qword [r12+0x28], r8
000000000001570b         mov        qword [r12+0x30], 0x0
0000000000015714         mov        qword [r12+0x38], 0x0
000000000001571d         mov        qword [r12+0x40], r8
0000000000015722         mov        qword [r12+0x50], r8
0000000000015727         movzx      ebx, byte [rdi+1]
000000000001572b         lea        eax, dword [rbx-0x30]
000000000001572e         cmp        al, 0x9
0000000000015730         ja         loc_1576e

0000000000015732         jmp        loc_15b6a
0000000000015737         align      64

                     loc_15740:
0000000000015740         cmp        bl, 0x2d                                    ; CODE XREF=printf_parse+344
0000000000015743         je         loc_15788

0000000000015745         cmp        bl, 0x2b
0000000000015748         je         loc_15790

000000000001574a         cmp        bl, 0x20
000000000001574d         je         loc_157a0

000000000001574f         cmp        bl, 0x23
0000000000015752         je         loc_157b0

0000000000015754         cmp        bl, 0x30
0000000000015757         je         loc_157c0

0000000000015759         cmp        bl, 0x49
000000000001575c         jne        loc_157d0

000000000001575e         or         dword [r12+0x10], 0x40
0000000000015764         nop        dword [rax]

                     loc_15768:
0000000000015768         movzx      ebx, byte [rax]                             ; CODE XREF=printf_parse+352, printf_parse+366, printf_parse+374, printf_parse+390, printf_parse+406, printf_parse+422
000000000001576b         mov        rbp, rax

                     loc_1576e:
000000000001576e         lea        rax, qword [rbp+1]                          ; CODE XREF=printf_parse+272, printf_parse+1381, printf_parse+1490
0000000000015772         cmp        bl, 0x27
0000000000015775         mov        rdx, rax
0000000000015778         jne        loc_15740

000000000001577a         or         dword [r12+0x10], 0x1
0000000000015780         jmp        loc_15768
0000000000015782         align      8

                     loc_15788:
0000000000015788         or         dword [r12+0x10], 0x2                       ; CODE XREF=printf_parse+291
000000000001578e         jmp        loc_15768

                     loc_15790:
0000000000015790         or         dword [r12+0x10], 0x4                       ; CODE XREF=printf_parse+296
0000000000015796         jmp        loc_15768
0000000000015798         align      32

                     loc_157a0:
00000000000157a0         or         dword [r12+0x10], 0x8                       ; CODE XREF=printf_parse+301
00000000000157a6         jmp        loc_15768
00000000000157a8         align      16

                     loc_157b0:
00000000000157b0         or         dword [r12+0x10], 0x10                      ; CODE XREF=printf_parse+306
00000000000157b6         jmp        loc_15768
00000000000157b8         align      64

                     loc_157c0:
00000000000157c0         or         dword [r12+0x10], 0x20                      ; CODE XREF=printf_parse+311
00000000000157c6         jmp        loc_15768
00000000000157c8         align      16

                     loc_157d0:
00000000000157d0         cmp        bl, 0x2a                                    ; CODE XREF=printf_parse+316
00000000000157d3         je         loc_15989

00000000000157d9         lea        ecx, dword [rbx-0x30]
00000000000157dc         cmp        cl, 0x9
00000000000157df         jbe        loc_15bf7

                     loc_157e5:
00000000000157e5         cmp        bl, 0x2e                                    ; CODE XREF=printf_parse+1577, printf_parse+2412
00000000000157e8         je         loc_15abf

                     loc_157ee:
00000000000157ee         xor        eax, eax                                    ; CODE XREF=printf_parse+1177, printf_parse+1349, printf_parse+1648, printf_parse+2650
00000000000157f0         mov        esi, 0x1
00000000000157f5         jmp        loc_15827
00000000000157f7         align      2048

                     loc_15800:
0000000000015800         cmp        bl, 0x4c                                    ; CODE XREF=printf_parse+526
0000000000015803         je         loc_15840

0000000000015805         cmp        bl, 0x6c
0000000000015808         je         loc_15820

000000000001580a         cmp        bl, 0x6a
000000000001580d         je         loc_15820

000000000001580f         mov        edx, ebx
0000000000015811         and        edx, 0xffffffdf
0000000000015814         cmp        dl, 0x5a
0000000000015817         je         loc_15820

0000000000015819         cmp        bl, 0x74
000000000001581c         jne        loc_15848

000000000001581e         nop

                     loc_15820:
0000000000015820         add        eax, 0x8                                    ; CODE XREF=printf_parse+488, printf_parse+493, printf_parse+503

                     loc_15823:
0000000000015823         movzx      ebx, byte [rbp]                             ; CODE XREF=printf_parse+539, printf_parse+547

                     loc_15827:
0000000000015827         add        rbp, 0x1                                    ; CODE XREF=printf_parse+469
000000000001582b         cmp        bl, 0x68
000000000001582e         jne        loc_15800

0000000000015830         mov        ecx, eax
0000000000015832         mov        edx, esi
0000000000015834         and        ecx, 0x1
0000000000015837         shl        edx, cl
0000000000015839         or         eax, edx
000000000001583b         jmp        loc_15823
000000000001583d         align      64

                     loc_15840:
0000000000015840         or         eax, 0x4                                    ; CODE XREF=printf_parse+483
0000000000015843         jmp        loc_15823
0000000000015845         align      8

                     loc_15848:
0000000000015848         lea        edx, dword [rbx-0x25]                       ; CODE XREF=printf_parse+508
000000000001584b         cmp        dl, 0x53
000000000001584e         ja         loc_15e6b

0000000000015854         lea        rcx, qword [switch_table_18f8c]             ; switch_table_18f8c
000000000001585b         movzx      edx, dl
000000000001585e         movsxd     rdx, dword [rcx+rdx*4]
0000000000015862         add        rdx, rcx
0000000000015865         jmp        rdx                                         ; switch statement using table at 0x18f8c, with 84 cases, 0x15867,0x158db,0x15d1c,0x15d68,0x15d7b,0x15dc8,0x15ddb,0x15dfc,0x15e0c,0x15e60,0x15e6b

                     loc_15867:
0000000000015867         mov        r11d, 0x10                                  ; case 46, CODE XREF=printf_parse+581
000000000001586d         mov        ebx, 0x73
0000000000015872         nop        word [rax+rax]

                     loc_15878:
0000000000015878         cmp        r13, 0xffffffffffffffff                     ; CODE XREF=printf_parse+1797, printf_parse+1805, printf_parse+1820, printf_parse+1834, printf_parse+1853, printf_parse+1878, printf_parse+1892, printf_parse+1900, printf_parse+1915, printf_parse+1929, printf_parse+1952
000000000001587c         je         loc_15f37

0000000000015882         mov        qword [r12+0x50], r13

                     loc_15887:
0000000000015887         cmp        r9, r13                                     ; CODE XREF=printf_parse+2361
000000000001588a         mov        rcx, qword [r15+8]
000000000001588e         jbe        loc_15eb0

                     loc_15894:
0000000000015894         mov        rax, qword [r15]                            ; CODE XREF=printf_parse+2322
0000000000015897         mov        rdx, rax
000000000001589a         shl        rdx, 0x5
000000000001589e         add        rdx, rcx
00000000000158a1         cmp        rax, r13
00000000000158a4         ja         loc_158c6

00000000000158a6         nop        word [cs:rax+rax]

                     loc_158b0:
00000000000158b0         add        rax, 0x1                                    ; CODE XREF=printf_parse+673
00000000000158b4         mov        dword [rdx], 0x0
00000000000158ba         add        rdx, 0x20
00000000000158be         cmp        rax, r13
00000000000158c1         jbe        loc_158b0

00000000000158c3         mov        qword [r15], rax

                     loc_158c6:
00000000000158c6         shl        r13, 0x5                                    ; CODE XREF=printf_parse+644
00000000000158ca         lea        rax, qword [rcx+r13]
00000000000158ce         mov        edx, dword [rax]
00000000000158d0         test       edx, edx
00000000000158d2         jne        loc_15ea3

00000000000158d8         mov        dword [rax], r11d

                     loc_158db:
00000000000158db         mov        byte [r12+0x48], bl                         ; case 0, CODE XREF=printf_parse+581, printf_parse+2182
00000000000158e0         mov        rax, qword [r14]
00000000000158e3         mov        qword [r12+8], rbp
00000000000158e8         lea        rbx, qword [rax+1]
00000000000158ec         cmp        r10, rbx
00000000000158ef         mov        qword [r14], rbx
00000000000158f2         ja         loc_15980

00000000000158f8         test       r10, r10
00000000000158fb         js         loc_162a7

0000000000015901         add        r10, r10
0000000000015904         movabs     rax, 0x2e8ba2e8ba2e8ba
000000000001590e         cmp        r10, rax
0000000000015911         ja         loc_162a7

0000000000015917         lea        rax, qword [r10+r10*4]
000000000001591b         mov        rdi, qword [r14+8]
000000000001591f         cmp        qword [rsp+0x88+var_60], rdi
0000000000015924         mov        qword [rsp+0x88+var_48], r9
0000000000015929         mov        qword [rsp+0x88+var_50], r10
000000000001592e         lea        rax, qword [r10+rax*2]
0000000000015932         mov        qword [rsp+0x88+var_58], r8
0000000000015937         lea        rsi, qword [rax*8]
000000000001593f         je         loc_15ffd

0000000000015945         call       j_realloc                                   ; realloc
000000000001594a         test       rax, rax
000000000001594d         mov        rcx, rax
0000000000015950         mov        r8, qword [rsp+0x88+var_58]
0000000000015955         mov        r10, qword [rsp+0x88+var_50]
000000000001595a         mov        r9, qword [rsp+0x88+var_48]
000000000001595f         je         loc_162a7

0000000000015965         mov        rax, qword [rsp+0x88+var_60]
000000000001596a         cmp        rax, qword [r14+8]
000000000001596e         mov        rbx, qword [r14]
0000000000015971         je         loc_16020

                     loc_15977:
0000000000015977         mov        qword [r14+8], rcx                          ; CODE XREF=printf_parse+2621
000000000001597b         jmp        loc_15698

                     loc_15980:
0000000000015980         mov        rcx, qword [r14+8]                          ; CODE XREF=printf_parse+722
0000000000015984         jmp        loc_15698

                     loc_15989:
0000000000015989         mov        rsi, qword [rsp+0x88+var_78]                ; CODE XREF=printf_parse+435
000000000001598e         mov        ecx, 0x1
0000000000015993         mov        qword [r12+0x18], rbp
0000000000015998         mov        qword [r12+0x20], rax
000000000001599d         test       rsi, rsi
00000000000159a0         cmovne     rcx, rsi
00000000000159a4         mov        qword [rsp+0x88+var_78], rcx
00000000000159a9         movzx      ecx, byte [rbp+1]
00000000000159ad         lea        esi, dword [rcx-0x30]
00000000000159b0         cmp        sil, 0x9
00000000000159b4         jbe        loc_15c95

                     loc_159ba:
00000000000159ba         mov        rsi, qword [rsp+0x88+var_68]                ; CODE XREF=printf_parse+1677
00000000000159bf         cmp        rsi, 0xffffffffffffffff
00000000000159c3         lea        rdx, qword [rsi+1]
00000000000159c7         mov        qword [r12+0x28], rsi
00000000000159cc         je         loc_15e6b

00000000000159d2         mov        rbx, qword [rsp+0x88+var_68]
00000000000159d7         mov        rbp, rax
00000000000159da         mov        qword [rsp+0x88+var_68], rdx

                     loc_159df:
00000000000159df         cmp        r9, rbx                                     ; CODE XREF=printf_parse+1783
00000000000159e2         mov        rcx, qword [r15+8]
00000000000159e6         ja         loc_16062

00000000000159ec         add        r9, r9
00000000000159ef         lea        rax, qword [rbx+1]
00000000000159f3         cmp        r9, rbx
00000000000159f6         cmovbe     r9, rax
00000000000159fa         movabs     rax, 0x7ffffffffffffff
0000000000015a04         cmp        r9, rax
0000000000015a07         ja         loc_162ab

0000000000015a0d         mov        rsi, r9
0000000000015a10         mov        qword [rsp+0x88+var_48], r9
0000000000015a15         mov        qword [rsp+0x88+var_50], r10
0000000000015a1a         shl        rsi, 0x5
0000000000015a1e         cmp        qword [rsp+0x88+var_80], rcx
0000000000015a23         mov        qword [rsp+0x88+var_58], r8
0000000000015a28         je         loc_16141

0000000000015a2e         mov        rdi, rcx                                    ; argument "__ptr" for method j_realloc
0000000000015a31         call       j_realloc                                   ; realloc
0000000000015a36         mov        rdx, qword [r15+8]
0000000000015a3a         mov        r8, qword [rsp+0x88+var_58]
0000000000015a3f         mov        rcx, rax
0000000000015a42         mov        r10, qword [rsp+0x88+var_50]
0000000000015a47         mov        r9, qword [rsp+0x88+var_48]

                     loc_15a4c:
0000000000015a4c         test       rcx, rcx                                    ; CODE XREF=printf_parse+2880
0000000000015a4f         je         loc_16307

0000000000015a55         cmp        qword [rsp+0x88+var_80], rdx
0000000000015a5a         mov        rax, qword [r15]
0000000000015a5d         je         loc_1621b

                     loc_15a63:
0000000000015a63         mov        qword [r15+8], rcx                          ; CODE XREF=printf_parse+3123

                     loc_15a67:
0000000000015a67         mov        rdx, rax                                    ; CODE XREF=printf_parse+2629
0000000000015a6a         shl        rdx, 0x5
0000000000015a6e         add        rdx, rcx
0000000000015a71         cmp        rax, rbx
0000000000015a74         ja         loc_15a96

0000000000015a76         nop        word [cs:rax+rax]

                     loc_15a80:
0000000000015a80         add        rax, 0x1                                    ; CODE XREF=printf_parse+1137
0000000000015a84         mov        dword [rdx], 0x0
0000000000015a8a         add        rdx, 0x20
0000000000015a8e         cmp        rax, rbx
0000000000015a91         jbe        loc_15a80

0000000000015a93         mov        qword [r15], rax

                     loc_15a96:
0000000000015a96         shl        rbx, 0x5                                    ; CODE XREF=printf_parse+1108
0000000000015a9a         lea        rax, qword [rcx+rbx]
0000000000015a9e         mov        edx, dword [rax]
0000000000015aa0         test       edx, edx
0000000000015aa2         jne        loc_15f7b

0000000000015aa8         mov        dword [rax], 0x5
0000000000015aae         movzx      ebx, byte [rbp]
0000000000015ab2         lea        rdx, qword [rbp+1]
0000000000015ab6         cmp        bl, 0x2e
0000000000015ab9         jne        loc_157ee

                     loc_15abf:
0000000000015abf         cmp        byte [rbp+1], 0x2a                          ; CODE XREF=printf_parse+456
0000000000015ac3         mov        qword [r12+0x30], rbp
0000000000015ac8         jne        loc_15c4e

0000000000015ace         mov        rsi, qword [rsp+0x88+var_70]
0000000000015ad3         lea        r11, qword [rbp+2]
0000000000015ad7         mov        eax, 0x2
0000000000015adc         mov        qword [r12+0x38], r11
0000000000015ae1         cmp        rsi, 0x2
0000000000015ae5         cmovae     rax, rsi
0000000000015ae9         mov        qword [rsp+0x88+var_70], rax
0000000000015aee         movsx      eax, byte [rbp+2]
0000000000015af2         lea        edx, dword [rax-0x30]
0000000000015af5         cmp        dl, 0x9
0000000000015af8         jbe        loc_1618c

                     loc_15afe:
0000000000015afe         mov        rbx, qword [r12+0x40]                       ; CODE XREF=printf_parse+2946
0000000000015b03         cmp        rbx, 0xffffffffffffffff
0000000000015b07         je         loc_16165

                     loc_15b0d:
0000000000015b0d         cmp        r9, rbx                                     ; CODE XREF=printf_parse+2919, printf_parse+3161
0000000000015b10         mov        rcx, qword [r15+8]
0000000000015b14         jbe        loc_1607f

0000000000015b1a         mov        rax, qword [r15]

                     loc_15b1d:
0000000000015b1d         mov        rdx, rax                                    ; CODE XREF=printf_parse+2788
0000000000015b20         shl        rdx, 0x5
0000000000015b24         add        rdx, rcx
0000000000015b27         cmp        rax, rbx
0000000000015b2a         ja         loc_15b46

0000000000015b2c         nop        dword [rax]

                     loc_15b30:
0000000000015b30         add        rax, 0x1                                    ; CODE XREF=printf_parse+1313
0000000000015b34         mov        dword [rdx], 0x0
0000000000015b3a         add        rdx, 0x20
0000000000015b3e         cmp        rax, rbx
0000000000015b41         jbe        loc_15b30

0000000000015b43         mov        qword [r15], rax

                     loc_15b46:
0000000000015b46         shl        rbx, 0x5                                    ; CODE XREF=printf_parse+1290
0000000000015b4a         lea        rax, qword [rcx+rbx]
0000000000015b4e         mov        edx, dword [rax]
0000000000015b50         test       edx, edx
0000000000015b52         jne        loc_1606a

0000000000015b58         mov        dword [rax], 0x5
0000000000015b5e         mov        rbp, r11
0000000000015b61         movzx      ebx, byte [r11]
0000000000015b65         jmp        loc_157ee

                     loc_15b6a:
0000000000015b6a         mov        rax, rbp                                    ; CODE XREF=printf_parse+274
0000000000015b6d         nop        dword [rax]

                     loc_15b70:
0000000000015b70         add        rax, 0x1                                    ; CODE XREF=printf_parse+1373
0000000000015b74         movzx      edx, byte [rax]
0000000000015b77         lea        ecx, dword [rdx-0x30]
0000000000015b7a         cmp        cl, 0x9
0000000000015b7d         jbe        loc_15b70

0000000000015b7f         cmp        dl, 0x24
0000000000015b82         mov        r13, r8
0000000000015b85         jne        loc_1576e

0000000000015b8b         xor        edx, edx

                     loc_15b8d:
0000000000015b8d         movsx      eax, bl                                     ; CODE XREF=printf_parse+1463
0000000000015b90         movabs     rdi, 0x1999999999999999
0000000000015b9a         mov        rsi, r8
0000000000015b9d         sub        eax, 0x30
0000000000015ba0         cmp        rdx, rdi
0000000000015ba3         cdqe
0000000000015ba5         ja         loc_15bae

0000000000015ba7         lea        rsi, qword [rdx+rdx*4]
0000000000015bab         add        rsi, rsi

                     loc_15bae:
0000000000015bae         mov        rcx, rbp                                    ; CODE XREF=printf_parse+1413

                     loc_15bb1:
0000000000015bb1         add        rax, rsi                                    ; CODE XREF=printf_parse+2390
0000000000015bb4         movzx      ebx, byte [rbp+1]
0000000000015bb8         setb       sil
0000000000015bbc         add        rbp, 0x1
0000000000015bc0         mov        rdx, rax
0000000000015bc3         movzx      esi, sil
0000000000015bc7         test       rsi, rsi
0000000000015bca         lea        edi, dword [rbx-0x30]
0000000000015bcd         jne        loc_15f5e

0000000000015bd3         cmp        dil, 0x9
0000000000015bd7         jbe        loc_15b8d

0000000000015bd9         mov        r13, rax
0000000000015bdc         sub        r13, 0x1
0000000000015be0         cmp        r13, 0xfffffffffffffffd
0000000000015be4         ja         loc_15e6b

0000000000015bea         lea        rbp, qword [rcx+2]
0000000000015bee         movzx      ebx, byte [rcx+2]
0000000000015bf2         jmp        loc_1576e

                     loc_15bf7:
0000000000015bf7         mov        qword [r12+0x18], rbp                       ; CODE XREF=printf_parse+447
0000000000015bfc         movzx      edi, byte [rbp]
0000000000015c00         mov        rsi, rbp
0000000000015c03         lea        ecx, dword [rdi-0x30]
0000000000015c06         cmp        cl, 0x9
0000000000015c09         jbe        loc_15c17

0000000000015c0b         jmp        loc_15c40
0000000000015c0d         align      16

                     loc_15c10:
0000000000015c10         mov        rbp, rax                                    ; CODE XREF=printf_parse+1536
0000000000015c13         add        rax, 0x1

                     loc_15c17:
0000000000015c17         movzx      edi, byte [rax]                             ; CODE XREF=printf_parse+1513
0000000000015c1a         lea        edx, dword [rdi-0x30]
0000000000015c1d         cmp        dl, 0x9
0000000000015c20         jbe        loc_15c10

0000000000015c22         mov        rcx, rax
0000000000015c25         lea        rdx, qword [rbp+2]
0000000000015c29         mov        rbp, rax
0000000000015c2c         sub        rcx, rsi
0000000000015c2f         mov        rsi, qword [rsp+0x88+var_78]
0000000000015c34         cmp        rsi, rcx
0000000000015c37         cmovae     rcx, rsi
0000000000015c3b         mov        qword [rsp+0x88+var_78], rcx

                     loc_15c40:
0000000000015c40         mov        qword [r12+0x20], rbp                       ; CODE XREF=printf_parse+1515
0000000000015c45         movzx      ebx, byte [rbp]
0000000000015c49         jmp        loc_157e5

                     loc_15c4e:
0000000000015c4e         movzx      eax, byte [rbp+1]                           ; CODE XREF=printf_parse+1192
0000000000015c52         sub        eax, 0x30
0000000000015c55         cmp        al, 0x9
0000000000015c57         ja         loc_15c6e

0000000000015c59         nop        dword [rax]

                     loc_15c60:
0000000000015c60         add        rdx, 0x1                                    ; CODE XREF=printf_parse+1612
0000000000015c64         movzx      eax, byte [rdx]
0000000000015c67         sub        eax, 0x30
0000000000015c6a         cmp        al, 0x9
0000000000015c6c         jbe        loc_15c60

                     loc_15c6e:
0000000000015c6e         mov        rsi, qword [rsp+0x88+var_70]                ; CODE XREF=printf_parse+1591
0000000000015c73         mov        rax, rdx
0000000000015c76         mov        qword [r12+0x38], rdx
0000000000015c7b         sub        rax, rbp
0000000000015c7e         movzx      ebx, byte [rdx]
0000000000015c81         mov        rbp, rdx
0000000000015c84         cmp        rsi, rax
0000000000015c87         cmovae     rax, rsi
0000000000015c8b         mov        qword [rsp+0x88+var_70], rax
0000000000015c90         jmp        loc_157ee

                     loc_15c95:
0000000000015c95         mov        rsi, rax                                    ; CODE XREF=printf_parse+916

                     loc_15c98:
0000000000015c98         add        rsi, 0x1                                    ; CODE XREF=printf_parse+1671
0000000000015c9c         movzx      edi, byte [rsi]
0000000000015c9f         lea        r11d, dword [rdi-0x30]
0000000000015ca3         cmp        r11b, 0x9
0000000000015ca7         jbe        loc_15c98

0000000000015ca9         cmp        dil, 0x24
0000000000015cad         jne        loc_159ba

0000000000015cb3         xor        esi, esi

                     loc_15cb5:
0000000000015cb5         movsx      eax, cl                                     ; CODE XREF=printf_parse+1758
0000000000015cb8         movabs     rdi, 0x1999999999999999
0000000000015cc2         mov        rcx, r8
0000000000015cc5         sub        eax, 0x30
0000000000015cc8         cmp        rsi, rdi
0000000000015ccb         cdqe
0000000000015ccd         ja         loc_15cd6

0000000000015ccf         lea        rcx, qword [rsi+rsi*4]
0000000000015cd3         add        rcx, rcx

                     loc_15cd6:
0000000000015cd6         mov        rbp, rdx                                    ; CODE XREF=printf_parse+1709

                     loc_15cd9:
0000000000015cd9         xor        r11d, r11d                                  ; CODE XREF=printf_parse+3062
0000000000015cdc         add        rax, rcx
0000000000015cdf         movzx      ecx, byte [rdx+1]
0000000000015ce3         setb       r11b
0000000000015ce7         add        rdx, 0x1
0000000000015ceb         mov        rsi, rax
0000000000015cee         test       r11, r11
0000000000015cf1         lea        edi, dword [rcx-0x30]
0000000000015cf4         jne        loc_161fe

0000000000015cfa         cmp        dil, 0x9
0000000000015cfe         jbe        loc_15cb5

0000000000015d00         lea        rbx, qword [rax-1]
0000000000015d04         cmp        rbx, 0xfffffffffffffffd
0000000000015d08         ja         loc_15e6b

0000000000015d0e         mov        qword [r12+0x28], rbx
0000000000015d13         add        rbp, 0x2
0000000000015d17         jmp        loc_159df

                     loc_15d1c:
0000000000015d1c         cmp        eax, 0xf                                    ; case 73, CODE XREF=printf_parse+581
0000000000015d1f         mov        r11d, 0x16
0000000000015d25         jg         loc_15878

0000000000015d2b         test       al, 0x4
0000000000015d2d         jne        loc_15878

0000000000015d33         cmp        eax, 0x7
0000000000015d36         mov        r11d, 0x15
0000000000015d3c         jg         loc_15878

0000000000015d42         test       al, 0x2
0000000000015d44         mov        r11d, 0x12
0000000000015d4a         jne        loc_15878

0000000000015d50         xor        r11d, r11d
0000000000015d53         test       al, 0x1
0000000000015d55         sete       r11b
0000000000015d59         add        r11d, 0x13
0000000000015d5d         jmp        loc_15878
0000000000015d62         align      8

                     loc_15d68:
0000000000015d68         xor        r11d, r11d                                  ; case 62, CODE XREF=printf_parse+581
0000000000015d6b         cmp        eax, 0x7
0000000000015d6e         setg       r11b
0000000000015d72         add        r11d, 0xd
0000000000015d76         jmp        loc_15878

                     loc_15d7b:
0000000000015d7b         cmp        eax, 0xf                                    ; case 68, CODE XREF=printf_parse+581
0000000000015d7e         mov        r11d, 0x9
0000000000015d84         jg         loc_15878

0000000000015d8a         test       al, 0x4
0000000000015d8c         jne        loc_15878

0000000000015d92         cmp        eax, 0x7
0000000000015d95         mov        r11d, 0x7
0000000000015d9b         jg         loc_15878

0000000000015da1         test       al, 0x2
0000000000015da3         mov        r11d, 0x1
0000000000015da9         jne        loc_15878

0000000000015daf         and        eax, 0x1
0000000000015db2         cmp        eax, 0x1
0000000000015db5         sbb        r11d, r11d
0000000000015db8         and        r11d, 0x2
0000000000015dbc         add        r11d, 0x3
0000000000015dc0         jmp        loc_15878
0000000000015dc5         align      8

                     loc_15dc8:
0000000000015dc8         xor        r11d, r11d                                  ; case 78, CODE XREF=printf_parse+581
0000000000015dcb         cmp        eax, 0x7
0000000000015dce         setg       r11b
0000000000015dd2         add        r11d, 0xf
0000000000015dd6         jmp        loc_15878

                     loc_15ddb:
0000000000015ddb         cmp        eax, 0xf                                    ; case 66, CODE XREF=printf_parse+581
0000000000015dde         mov        r11d, 0xc
0000000000015de4         jg         loc_15878

0000000000015dea         xor        r11d, r11d
0000000000015ded         test       al, 0x4
0000000000015def         setne      r11b
0000000000015df3         add        r11d, 0xb
0000000000015df7         jmp        loc_15878

                     loc_15dfc:
0000000000015dfc         mov        r11d, 0xe                                   ; case 30, CODE XREF=printf_parse+581
0000000000015e02         mov        ebx, 0x63
0000000000015e07         jmp        loc_15878

                     loc_15e0c:
0000000000015e0c         cmp        eax, 0xf                                    ; case 83, CODE XREF=printf_parse+581
0000000000015e0f         mov        r11d, 0xa
0000000000015e15         jg         loc_15878

0000000000015e1b         test       al, 0x4
0000000000015e1d         jne        loc_15878

0000000000015e23         cmp        eax, 0x7
0000000000015e26         mov        r11d, 0x8
0000000000015e2c         jg         loc_15878

0000000000015e32         test       al, 0x2
0000000000015e34         mov        r11d, 0x2
0000000000015e3a         jne        loc_15878

0000000000015e40         and        eax, 0x1
0000000000015e43         cmp        eax, 0x1
0000000000015e46         sbb        r11d, r11d
0000000000015e49         and        r11d, 0x2
0000000000015e4d         add        r11d, 0x4
0000000000015e51         jmp        loc_15878
0000000000015e56         align      32

                     loc_15e60:
0000000000015e60         mov        r11d, 0x11                                  ; case 75, CODE XREF=printf_parse+581
0000000000015e66         jmp        loc_15878

                     loc_15e6b:
0000000000015e6b         mov        rcx, qword [r15+8]                          ; case 82, CODE XREF=printf_parse+558, printf_parse+581, printf_parse+940, printf_parse+1476, printf_parse+1768, printf_parse+2345, printf_parse+2370, printf_parse+2903, printf_parse+3019, printf_parse+3042, printf_parse+3146

                     loc_15e6f:
0000000000015e6f         cmp        qword [rsp+0x88+var_80], rcx                ; CODE XREF=printf_parse+2188, printf_parse+2398, printf_parse+2637
0000000000015e74         je         loc_15e7e

0000000000015e76         mov        rdi, rcx
0000000000015e79         call       sub_30d0                                    ; sub_30d0

                     loc_15e7e:
0000000000015e7e         mov        rdi, qword [r14+8]                          ; CODE XREF=printf_parse+2132
0000000000015e82         cmp        qword [rsp+0x88+var_60], rdi
0000000000015e87         je         loc_15e8e

0000000000015e89         call       sub_30d0                                    ; sub_30d0

                     loc_15e8e:
0000000000015e8e         call       j___errno_location                          ; __errno_location, CODE XREF=printf_parse+2151
0000000000015e93         mov        dword [rax], 0x16
0000000000015e99         mov        eax, 0xffffffff
0000000000015e9e         jmp        loc_156c2

                     loc_15ea3:
0000000000015ea3         cmp        edx, r11d                                   ; CODE XREF=printf_parse+690
0000000000015ea6         je         loc_158db

0000000000015eac         jmp        loc_15e6f
0000000000015eae         align      16

                     loc_15eb0:
0000000000015eb0         add        r9, r9                                      ; CODE XREF=printf_parse+622
0000000000015eb3         lea        rax, qword [r13+1]
0000000000015eb7         cmp        r9, r13
0000000000015eba         cmovbe     r9, rax
0000000000015ebe         movabs     rax, 0x7ffffffffffffff
0000000000015ec8         cmp        r9, rax
0000000000015ecb         ja         loc_162ab

0000000000015ed1         mov        rsi, r9
0000000000015ed4         mov        qword [rsp+0x88+var_40], r9
0000000000015ed9         mov        qword [rsp+0x88+var_48], r10
0000000000015ede         shl        rsi, 0x5
0000000000015ee2         cmp        qword [rsp+0x88+var_80], rcx
0000000000015ee7         mov        qword [rsp+0x88+var_50], r8
0000000000015eec         mov        dword [rsp+0x88+var_58], r11d
0000000000015ef1         je         loc_15f91

0000000000015ef7         mov        rdi, rcx                                    ; argument "__ptr" for method j_realloc
0000000000015efa         call       j_realloc                                   ; realloc
0000000000015eff         test       rax, rax
0000000000015f02         mov        rcx, rax
0000000000015f05         mov        r11d, dword [rsp+0x88+var_58]
0000000000015f0a         mov        r8, qword [rsp+0x88+var_50]
0000000000015f0f         mov        r10, qword [rsp+0x88+var_48]
0000000000015f14         mov        r9, qword [rsp+0x88+var_40]
0000000000015f19         je         loc_162a7

0000000000015f1f         mov        rax, qword [rsp+0x88+var_80]
0000000000015f24         cmp        rax, qword [r15+8]
0000000000015f28         je         loc_15fb9

                     loc_15f2e:
0000000000015f2e         mov        qword [r15+8], rcx                          ; CODE XREF=printf_parse+2520
0000000000015f32         jmp        loc_15894

                     loc_15f37:
0000000000015f37         mov        rsi, qword [rsp+0x88+var_68]                ; CODE XREF=printf_parse+604
0000000000015f3c         cmp        rsi, 0xffffffffffffffff
0000000000015f40         lea        rax, qword [rsi+1]
0000000000015f44         mov        qword [r12+0x50], rsi
0000000000015f49         je         loc_15e6b

0000000000015f4f         mov        r13, qword [rsp+0x88+var_68]
0000000000015f54         mov        qword [rsp+0x88+var_68], rax
0000000000015f59         jmp        loc_15887

                     loc_15f5e:
0000000000015f5e         cmp        dil, 0x9                                    ; CODE XREF=printf_parse+1453
0000000000015f62         ja         loc_15e6b

0000000000015f68         movsx      eax, bl
0000000000015f6b         mov        rsi, r8
0000000000015f6e         mov        rcx, rbp
0000000000015f71         sub        eax, 0x30
0000000000015f74         cdqe
0000000000015f76         jmp        loc_15bb1

                     loc_15f7b:
0000000000015f7b         cmp        edx, 0x5                                    ; CODE XREF=printf_parse+1154
0000000000015f7e         jne        loc_15e6f

0000000000015f84         movzx      ebx, byte [rbp]
0000000000015f88         lea        rdx, qword [rbp+1]
0000000000015f8c         jmp        loc_157e5

                     loc_15f91:
0000000000015f91         mov        rdi, rsi                                    ; argument "__size" for method j_malloc, CODE XREF=printf_parse+2257
0000000000015f94         call       j_malloc                                    ; malloc
0000000000015f99         test       rax, rax
0000000000015f9c         mov        rcx, rax
0000000000015f9f         mov        r11d, dword [rsp+0x88+var_58]
0000000000015fa4         mov        r8, qword [rsp+0x88+var_50]
0000000000015fa9         mov        r10, qword [rsp+0x88+var_48]
0000000000015fae         mov        r9, qword [rsp+0x88+var_40]
0000000000015fb3         je         loc_1611c

                     loc_15fb9:
0000000000015fb9         mov        rdx, qword [r15]                            ; CODE XREF=printf_parse+2312
0000000000015fbc         mov        rsi, qword [rsp+0x88+var_80]                ; argument "__src" for method j_memcpy
0000000000015fc1         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
0000000000015fc4         mov        qword [rsp+0x88+var_40], r9
0000000000015fc9         mov        qword [rsp+0x88+var_48], r10
0000000000015fce         mov        qword [rsp+0x88+var_50], r8
0000000000015fd3         mov        dword [rsp+0x88+var_58], r11d
0000000000015fd8         shl        rdx, 0x5                                    ; argument "__n" for method j_memcpy
0000000000015fdc         call       j_memcpy                                    ; memcpy
0000000000015fe1         mov        r9, qword [rsp+0x88+var_40]
0000000000015fe6         mov        r10, qword [rsp+0x88+var_48]
0000000000015feb         mov        rcx, rax
0000000000015fee         mov        r8, qword [rsp+0x88+var_50]
0000000000015ff3         mov        r11d, dword [rsp+0x88+var_58]
0000000000015ff8         jmp        loc_15f2e

                     loc_15ffd:
0000000000015ffd         mov        rdi, rsi                                    ; argument "__size" for method j_malloc, CODE XREF=printf_parse+799
0000000000016000         call       j_malloc                                    ; malloc
0000000000016005         test       rax, rax
0000000000016008         mov        rcx, rax
000000000001600b         mov        r8, qword [rsp+0x88+var_58]
0000000000016010         mov        r10, qword [rsp+0x88+var_50]
0000000000016015         mov        r9, qword [rsp+0x88+var_48]
000000000001601a         je         loc_16109

                     loc_16020:
0000000000016020         lea        rax, qword [rbx+rbx*4]                      ; CODE XREF=printf_parse+849
0000000000016024         mov        rsi, qword [rsp+0x88+var_60]                ; argument "__src" for method j_memcpy
0000000000016029         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
000000000001602c         mov        qword [rsp+0x88+var_48], r9
0000000000016031         mov        qword [rsp+0x88+var_50], r10
0000000000016036         lea        rdx, qword [rbx+rax*2]
000000000001603a         mov        qword [rsp+0x88+var_58], r8
000000000001603f         shl        rdx, 0x3                                    ; argument "__n" for method j_memcpy
0000000000016043         call       j_memcpy                                    ; memcpy
0000000000016048         mov        rbx, qword [r14]
000000000001604b         mov        rcx, rax
000000000001604e         mov        r9, qword [rsp+0x88+var_48]
0000000000016053         mov        r10, qword [rsp+0x88+var_50]
0000000000016058         mov        r8, qword [rsp+0x88+var_58]
000000000001605d         jmp        loc_15977

                     loc_16062:
0000000000016062         mov        rax, qword [r15]                            ; CODE XREF=printf_parse+966
0000000000016065         jmp        loc_15a67

                     loc_1606a:
000000000001606a         cmp        edx, 0x5                                    ; CODE XREF=printf_parse+1330
000000000001606d         jne        loc_15e6f

0000000000016073         movzx      ebx, byte [r11]
0000000000016077         mov        rbp, r11
000000000001607a         jmp        loc_157ee

                     loc_1607f:
000000000001607f         add        r9, r9                                      ; CODE XREF=printf_parse+1268
0000000000016082         lea        rax, qword [rbx+1]
0000000000016086         cmp        r9, rbx
0000000000016089         cmovbe     r9, rax
000000000001608d         movabs     rax, 0x7ffffffffffffff
0000000000016097         cmp        r9, rax
000000000001609a         ja         loc_162ab

00000000000160a0         mov        rsi, r9
00000000000160a3         mov        qword [rsp+0x88+var_40], r9
00000000000160a8         mov        qword [rsp+0x88+var_48], r10
00000000000160ad         shl        rsi, 0x5
00000000000160b1         cmp        qword [rsp+0x88+var_80], rcx
00000000000160b6         mov        qword [rsp+0x88+var_50], r8
00000000000160bb         mov        qword [rsp+0x88+var_58], r11
00000000000160c0         je         loc_1627e

00000000000160c6         mov        rdi, rcx                                    ; argument "__ptr" for method j_realloc
00000000000160c9         call       j_realloc                                   ; realloc
00000000000160ce         mov        rdx, qword [r15+8]
00000000000160d2         mov        r11, qword [rsp+0x88+var_58]
00000000000160d7         mov        rcx, rax
00000000000160da         mov        r8, qword [rsp+0x88+var_50]
00000000000160df         mov        r10, qword [rsp+0x88+var_48]
00000000000160e4         mov        r9, qword [rsp+0x88+var_40]

                     loc_160e9:
00000000000160e9         test       rcx, rcx                                    ; CODE XREF=printf_parse+3202
00000000000160ec         je         loc_16307

00000000000160f2         cmp        qword [rsp+0x88+var_80], rdx
00000000000160f7         mov        rax, qword [r15]
00000000000160fa         je         loc_162c0

                     loc_16100:
0000000000016100         mov        qword [r15+8], rcx                          ; CODE XREF=printf_parse+3298
0000000000016104         jmp        loc_15b1d

                     loc_16109:
0000000000016109         mov        rcx, qword [r15+8]                          ; CODE XREF=printf_parse+2554
000000000001610d         cmp        qword [rsp+0x88+var_80], rcx
0000000000016112         je         loc_1612c

                     loc_16114:
0000000000016114         mov        rdi, rcx                                    ; CODE XREF=printf_parse+3216
0000000000016117         call       sub_30d0                                    ; sub_30d0

                     loc_1611c:
000000000001611c         mov        rdi, qword [r14+8]                          ; CODE XREF=printf_parse+2451, printf_parse+3222
0000000000016120         cmp        qword [rsp+0x88+var_60], rdi
0000000000016125         je         loc_1612c

0000000000016127         call       sub_30d0                                    ; sub_30d0

                     loc_1612c:
000000000001612c         call       j___errno_location                          ; __errno_location, CODE XREF=printf_parse+2802, printf_parse+2821
0000000000016131         mov        dword [rax], 0xc
0000000000016137         mov        eax, 0xffffffff
000000000001613c         jmp        loc_156c2

                     loc_16141:
0000000000016141         mov        rdi, rsi                                    ; argument "__size" for method j_malloc, CODE XREF=printf_parse+1032
0000000000016144         call       j_malloc                                    ; malloc
0000000000016149         mov        rdx, qword [rsp+0x88+var_80]
000000000001614e         mov        rcx, rax
0000000000016151         mov        r9, qword [rsp+0x88+var_48]
0000000000016156         mov        r10, qword [rsp+0x88+var_50]
000000000001615b         mov        r8, qword [rsp+0x88+var_58]
0000000000016160         jmp        loc_15a4c

                     loc_16165:
0000000000016165         mov        rsi, qword [rsp+0x88+var_68]                ; CODE XREF=printf_parse+1255
000000000001616a         cmp        rsi, 0xffffffffffffffff
000000000001616e         lea        rax, qword [rsi+1]
0000000000016172         mov        qword [r12+0x40], rsi
0000000000016177         je         loc_15e6b

000000000001617d         mov        rbx, qword [rsp+0x88+var_68]
0000000000016182         mov        qword [rsp+0x88+var_68], rax
0000000000016187         jmp        loc_15b0d

                     loc_1618c:
000000000001618c         mov        rdx, r11                                    ; CODE XREF=printf_parse+1240

                     loc_1618f:
000000000001618f         add        rdx, 0x1                                    ; CODE XREF=printf_parse+2941
0000000000016193         movzx      ecx, byte [rdx]
0000000000016196         lea        esi, dword [rcx-0x30]
0000000000016199         cmp        sil, 0x9
000000000001619d         jbe        loc_1618f

000000000001619f         cmp        cl, 0x24
00000000000161a2         jne        loc_15afe

00000000000161a8         xor        ecx, ecx

                     loc_161aa:
00000000000161aa         movabs     rsi, 0x1999999999999999                     ; CODE XREF=printf_parse+3132
00000000000161b4         sub        eax, 0x30
00000000000161b7         mov        rdx, r8
00000000000161ba         cmp        rcx, rsi
00000000000161bd         cdqe
00000000000161bf         ja         loc_161c8

00000000000161c1         lea        rdx, qword [rcx+rcx*4]
00000000000161c5         add        rdx, rdx

                     loc_161c8:
00000000000161c8         mov        rsi, r11                                    ; CODE XREF=printf_parse+2975

                     loc_161cb:
00000000000161cb         xor        ebx, ebx                                    ; CODE XREF=printf_parse+3036
00000000000161cd         add        rdx, rax
00000000000161d0         movsx      eax, byte [r11+1]
00000000000161d5         setb       bl
00000000000161d8         add        r11, 0x1
00000000000161dc         mov        rcx, rdx
00000000000161df         test       rbx, rbx
00000000000161e2         lea        edi, dword [rax-0x30]
00000000000161e5         je         loc_16258

00000000000161e7         cmp        dil, 0x9
00000000000161eb         ja         loc_15e6b

00000000000161f1         sub        eax, 0x30
00000000000161f4         mov        rdx, r8
00000000000161f7         mov        rsi, r11
00000000000161fa         cdqe
00000000000161fc         jmp        loc_161cb

                     loc_161fe:
00000000000161fe         cmp        dil, 0x9                                    ; CODE XREF=printf_parse+1748
0000000000016202         ja         loc_15e6b

0000000000016208         movsx      eax, cl
000000000001620b         mov        rbp, rdx
000000000001620e         mov        rcx, r8
0000000000016211         sub        eax, 0x30
0000000000016214         cdqe
0000000000016216         jmp        loc_15cd9

                     loc_1621b:
000000000001621b         mov        rsi, qword [rsp+0x88+var_80]                ; argument "__src" for method j_memcpy, CODE XREF=printf_parse+1085
0000000000016220         shl        rax, 0x5
0000000000016224         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
0000000000016227         mov        rdx, rax                                    ; argument "__n" for method j_memcpy
000000000001622a         mov        qword [rsp+0x88+var_48], r9
000000000001622f         mov        qword [rsp+0x88+var_50], r10
0000000000016234         mov        qword [rsp+0x88+var_58], r8
0000000000016239         call       j_memcpy                                    ; memcpy
000000000001623e         mov        r9, qword [rsp+0x88+var_48]
0000000000016243         mov        rcx, rax
0000000000016246         mov        r10, qword [rsp+0x88+var_50]
000000000001624b         mov        rax, qword [r15]
000000000001624e         mov        r8, qword [rsp+0x88+var_58]
0000000000016253         jmp        loc_15a63

                     loc_16258:
0000000000016258         cmp        dil, 0x9                                    ; CODE XREF=printf_parse+3013
000000000001625c         jbe        loc_161aa

0000000000016262         lea        rbx, qword [rdx-1]
0000000000016266         cmp        rbx, 0xfffffffffffffffd
000000000001626a         ja         loc_15e6b

0000000000016270         mov        qword [r12+0x40], rbx
0000000000016275         lea        r11, qword [rsi+2]
0000000000016279         jmp        loc_15b0d

                     loc_1627e:
000000000001627e         mov        rdi, rsi                                    ; argument "__size" for method j_malloc, CODE XREF=printf_parse+2720
0000000000016281         call       j_malloc                                    ; malloc
0000000000016286         mov        rdx, qword [rsp+0x88+var_80]
000000000001628b         mov        rcx, rax
000000000001628e         mov        r9, qword [rsp+0x88+var_40]
0000000000016293         mov        r10, qword [rsp+0x88+var_48]
0000000000016298         mov        r8, qword [rsp+0x88+var_50]
000000000001629d         mov        r11, qword [rsp+0x88+var_58]
00000000000162a2         jmp        loc_160e9

                     loc_162a7:
00000000000162a7         mov        rcx, qword [r15+8]                          ; CODE XREF=printf_parse+731, printf_parse+753, printf_parse+831, printf_parse+2297

                     loc_162ab:
00000000000162ab         cmp        qword [rsp+0x88+var_80], rcx                ; CODE XREF=printf_parse+999, printf_parse+2219, printf_parse+2682, printf_parse+3306
00000000000162b0         jne        loc_16114

00000000000162b6         jmp        loc_1611c
00000000000162bb         align      64

                     loc_162c0:
00000000000162c0         mov        rsi, qword [rsp+0x88+var_80]                ; argument "__src" for method j_memcpy, CODE XREF=printf_parse+2778
00000000000162c5         shl        rax, 0x5
00000000000162c9         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
00000000000162cc         mov        rdx, rax                                    ; argument "__n" for method j_memcpy
00000000000162cf         mov        qword [rsp+0x88+var_40], r9
00000000000162d4         mov        qword [rsp+0x88+var_48], r10
00000000000162d9         mov        qword [rsp+0x88+var_50], r8
00000000000162de         mov        qword [rsp+0x88+var_58], r11
00000000000162e3         call       j_memcpy                                    ; memcpy
00000000000162e8         mov        r9, qword [rsp+0x88+var_40]
00000000000162ed         mov        rcx, rax
00000000000162f0         mov        r10, qword [rsp+0x88+var_48]
00000000000162f5         mov        rax, qword [r15]
00000000000162f8         mov        r8, qword [rsp+0x88+var_50]
00000000000162fd         mov        r11, qword [rsp+0x88+var_58]
0000000000016302         jmp        loc_16100

                     loc_16307:
0000000000016307         mov        rcx, rdx                                    ; CODE XREF=printf_parse+1071, printf_parse+2764
000000000001630a         jmp        loc_162ab
000000000001630c         align      16                                          ; End of unwind block (FDE at 0x1c3d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000016310         push       r15                                         ; Begin of unwind block (FDE at 0x1c424), DATA XREF=_start+22
0000000000016312         push       r14
0000000000016314         mov        r15, rdx
0000000000016317         push       r13
0000000000016319         push       r12
000000000001631b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000016322         push       rbp
0000000000016323         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
000000000001632a         push       rbx
000000000001632b         mov        r13d, edi
000000000001632e         mov        r14, rsi
0000000000016331         sub        rbp, r12
0000000000016334         sub        rsp, 0x8
0000000000016338         sar        rbp, 0x3
000000000001633c         call       _init                                       ; _init
0000000000016341         test       rbp, rbp
0000000000016344         je         loc_16366

0000000000016346         xor        ebx, ebx
0000000000016348         nop        dword [rax+rax]

                     loc_16350:
0000000000016350         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000016353         mov        rsi, r14
0000000000016356         mov        edi, r13d
0000000000016359         call       qword [r12+rbx*8]
000000000001635d         add        rbx, 0x1
0000000000016361         cmp        rbp, rbx
0000000000016364         jne        loc_16350

                     loc_16366:
0000000000016366         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
000000000001636a         pop        rbx
000000000001636b         pop        rbp
000000000001636c         pop        r12
000000000001636e         pop        r13
0000000000016370         pop        r14
0000000000016372         pop        r15
0000000000016374         ret
                        ; endp
0000000000016375         align      128                                         ; End of unwind block (FDE at 0x1c424)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000016380         ret                                                    ; Begin of unwind block (FDE at 0x1c46c), DATA XREF=_start+15
                        ; endp
0000000000016382         align      16                                          ; End of unwind block (FDE at 0x1c46c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000016390         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x1c484), __dso_handle, CODE XREF=main+130
0000000000016397         xor        esi, esi
0000000000016399         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
000000000001639e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x1c484)
000000000001639f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x163a0; 0x163a9[ (9 bytes)
        ; File offset : [91040; 91049[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
00000000000163a0         sub        rsp, 0x8
00000000000163a4         add        rsp, 0x8
00000000000163a8         ret
                        ; endp
00000000000163a9         db  0x00 ; '.'
00000000000163aa         db  0x00 ; '.'
00000000000163ab         db  0x00 ; '.'
00000000000163ac         db  0x00 ; '.'
00000000000163ad         db  0x00 ; '.'
00000000000163ae         db  0x00 ; '.'
00000000000163af         db  0x00 ; '.'
00000000000163b0         db  0x00 ; '.'
00000000000163b1         db  0x00 ; '.'
00000000000163b2         db  0x00 ; '.'
00000000000163b3         db  0x00 ; '.'
00000000000163b4         db  0x00 ; '.'
00000000000163b5         db  0x00 ; '.'
00000000000163b6         db  0x00 ; '.'
00000000000163b7         db  0x00 ; '.'
00000000000163b8         db  0x00 ; '.'
00000000000163b9         db  0x00 ; '.'
00000000000163ba         db  0x00 ; '.'
00000000000163bb         db  0x00 ; '.'
00000000000163bc         db  0x00 ; '.'
00000000000163bd         db  0x00 ; '.'
00000000000163be         db  0x00 ; '.'
00000000000163bf         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x163c0; 0x190dc[ (11548 bytes)
        ; File offset : [91072; 102620[ (11548 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
00000000000163c0         db  0x01 ; '.'
00000000000163c1         db  0x00 ; '.'
00000000000163c2         db  0x02 ; '.'
00000000000163c3         db  0x00 ; '.'
                     aCannotCreateDi:
00000000000163c4         db         "cannot create directory %s", 0             ; DATA XREF=mkancesdirs_safe_wd+99, mkancesdirs_safe_wd+347, mkancesdirs_safe_wd+412, copy_internal+5328, make_dir_parents+422
                     aCreatingDirect:
00000000000163df         db         "creating directory %s", 0                  ; DATA XREF=announce_mkdir.part.9+14
                     aCannotStatS:
00000000000163f5         db         "cannot stat %s", 0                         ; DATA XREF=install_file_in_file+981, copy_internal+2287, copy_internal+3701, copy_internal+9918, make_dir_parents+335
                     aForkSystemCall:
0000000000016404         db         "fork system call failed", 0                ; DATA XREF=install_file_in_file+1216
                     aCannotRunS:
000000000001641c         db         "cannot run %s", 0                          ; DATA XREF=install_file_in_file+1555
                     aWaitingForStri:
000000000001642a         db         "waiting for strip", 0                      ; DATA XREF=install_file_in_file+1381
                     aCannotUnlinkS:
000000000001643c         db         "cannot unlink %s", 0                       ; DATA XREF=install_file_in_file+1286
                     aCannotSetTimes:
000000000001644d         db         "cannot set timestamps for %s", 0           ; DATA XREF=install_file_in_file+326
                     aCannotChangeOw:
000000000001646a         db         "cannot change ownership of %s", 0          ; DATA XREF=install_file_in_file+1013
                     aInstall:
0000000000016488         db         "install", 0                                ; DATA XREF=main+856, usage+499, usage+812, usage+996, usage+1015, usage+1049
0000000000016490         db  0x5b ; '['                                         ; DATA XREF=usage+511
0000000000016491         db  0x00 ; '.'
                     aTestInvocation:
0000000000016492         db         "test invocation", 0                        ; DATA XREF=usage+550
                     aMulticallInvoc:
00000000000164a2         db         "Multi-call invocation", 0                  ; DATA XREF=usage+598
                     aSha224sum:
00000000000164b8         db         "sha224sum", 0                              ; DATA XREF=usage+615
                     aSha2Utilities:
00000000000164c2         db         "sha2 utilities", 0                         ; DATA XREF=usage+627
                     aSha256sum:
00000000000164d1         db         "sha256sum", 0                              ; DATA XREF=usage+518
                     aSha384sum:
00000000000164db         db         "sha384sum", 0                              ; DATA XREF=usage+562
                     aSha512sum:
00000000000164e5         db         "sha512sum", 0                              ; DATA XREF=usage+586
                     aNsOnlineHelpSn:
00000000000164ef         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+698
0000000000016506         db  0x47 ; 'G'                                         ; DATA XREF=main+849, usage+726, usage+919, emit_bug_reporting_address+68
0000000000016507         db  0x4e ; 'N'
0000000000016508         db  0x55 ; 'U'
0000000000016509         db  0x20 ; ' '
                     aCoreutils:
000000000001650a         db         "coreutils", 0                              ; DATA XREF=main+99, main+111, usage+574
0000000000016514         db  0x65 ; 'e'                                         ; DATA XREF=usage+765, usage+958
0000000000016515         db  0x6e ; 'n'
0000000000016516         db  0x5f ; '_'
0000000000016517         db  0x00 ; '.'
                     aFullDocumentat:
0000000000016518         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+793, usage+982
                     aUsrlocalsharel:
0000000000016533         db         "/usr/local/share/locale", 0                ; DATA XREF=main+92
                     aDavidMackenzie:
000000000001654b         db         "David MacKenzie", 0                        ; DATA XREF=main+842
                     aBccsddgmopttvs:
000000000001655b         db         "bcCsDdg:m:o:pt:TvS:Z", 0                   ; DATA XREF=main+448
                     aFailedToAccess:
0000000000016570         db         "failed to access %s", 0                    ; DATA XREF=main+2801, main+2857
                     aTargetSIsNotAD:
0000000000016584         db         "target %s is not a directory", 0           ; DATA XREF=main+2191, main+2745, main+3099
                     aBackupType:
00000000000165a1         db         "backup type", 0                            ; DATA XREF=main+2295
                     aMissingFileOpe:
00000000000165ad         db         "missing file operand", 0                   ; DATA XREF=main+3141
                     aExtraOperandS:
00000000000165c2         db         "extra operand %s", 0                       ; DATA XREF=main+3272
                     aInvalidModeS:
00000000000165d3         db         "invalid mode %s", 0                        ; DATA XREF=main+3203
                     aInvalidUserS:
00000000000165e3         db         "invalid user %s", 0                        ; DATA XREF=main+2636
                     aInvalidGroupS:
00000000000165f3         db         "invalid group %s", 0                       ; DATA XREF=main+2535
                     aBackup:
0000000000016604         db         "backup", 0
                     aCompare:
000000000001660b         db         "compare", 0
                     aGroup:
0000000000016613         db         "group", 0
                     aMode:
0000000000016619         db         "mode", 0
000000000001661e         db  0x6e ; 'n'
000000000001661f         db  0x6f ; 'o'
0000000000016620         db  0x2d ; '-'
                     aTargetdirector:
0000000000016621         db         "target-directory", 0
                     aOwner:
0000000000016632         db         "owner", 0
                     aPreservetimest:
0000000000016638         db         "preserve-timestamps", 0
000000000001664c         db  0x70 ; 'p'
000000000001664d         db  0x72 ; 'r'
000000000001664e         db  0x65 ; 'e'
000000000001664f         db  0x73 ; 's'
0000000000016650         db  0x65 ; 'e'
0000000000016651         db  0x72 ; 'r'
0000000000016652         db  0x76 ; 'v'
0000000000016653         db  0x65 ; 'e'
0000000000016654         db  0x2d ; '-'
                     aContext:
0000000000016655         db         "context", 0
                     aStripprogram:
000000000001665d         db         "strip-program", 0
                     aSuffix:
000000000001666b         db         "suffix", 0
                     aVerbose:
0000000000016672         db         "verbose", 0
                     aHelp:
000000000001667a         db         "help", 0
                     aVersion:
000000000001667f         db         "version", 0
0000000000016687         align      8
                     aStripProcessTe:
0000000000016688         db         "strip process terminated abnormally", 0    ; DATA XREF=install_file_in_file+1177
00000000000166ac         align      16
                     aCannotChangePe:
00000000000166b0         db         "cannot change permissions of %s", 0        ; DATA XREF=install_file_in_file+1109, make_dir_parents+798
                     aTrySHelpForMor:
00000000000166d0         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
00000000000166f7         align      8
                     aUsageSOptionTS:
00000000000166f8         db         "Usage: %s [OPTION]... [-T] SOURCE DEST\n  or:  %s [OPTION]... SOURCE... DIRECTORY\n  or:  %s [OPTION]... -t DIRECTORY SOURCE...\n  or:  %s [OPTION]... -d DIRECTORY...\n", 0 ; DATA XREF=usage+93
000000000001679d         align      32
                     aNthisInstallPr:
00000000000167a0         db         "\nThis install program copies files (often just compiled) into destination\nlocations you choose.  If you want to download and install a ready-to-use\npackage on a GNU/Linux system, you should instead be using a package manager\nlike yum(1) or apt-get(1).\n\nIn " ; DATA XREF=usage+141
00000000000168a0         db         "the first three forms, copy SOURCE to DEST or multiple SOURCE(s) to\nthe existing DIRECTORY, while setting permission modes and owner/group.\nIn the 4th form, create all components of the given DIRECTORY(ies).\n", 0
0000000000016971         align      8
                     aNmandatoryArgu:
0000000000016978         db         "\nMandatory arguments to long options are mandatory for short options too.\n", 0 ; DATA XREF=usage+178
00000000000169c3         align      8
                     aBackupcontrolM:
00000000000169c8         db         "      --backup[=CONTROL]  make a backup of each existing destination file\n  -b                  like --backup but does not accept an argument\n  -c                  (ignored)\n  -C, --compare       compare each pair of source and destination files, and\n     " ; DATA XREF=usage+215
0000000000016ac8         db         "                   in some cases, do not modify the destination at all\n  -d, --directory     treat all arguments as directory names; create all\n                        components of the specified directories\n", 0
0000000000016b99         align      32
                     aDCreateAllLead:
0000000000016ba0         db         "  -D                  create all leading components of DEST except the last,\n                        or all components of --target-directory,\n                        then copy SOURCE to DEST\n  -g, --group=GROUP   set group ownership, instead of process' cu" ; DATA XREF=usage+252
0000000000016ca0         db         "rrent group\n  -m, --mode=MODE     set permission mode (as in chmod), instead of rwxr-xr-x\n  -o, --owner=OWNER   set ownership (super-user only)\n", 0
0000000000016d31         align      8
                     aPPreservetimes:
0000000000016d38         db         "  -p, --preserve-timestamps   apply access/modification times of SOURCE files\n                        to corresponding destination files\n  -s, --strip         strip symbol tables\n      --strip-program=PROGRAM  program used to strip binaries\n  -S, --suffix=" ; DATA XREF=usage+289
0000000000016e38         db         "SUFFIX  override the usual backup suffix\n  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY\n  -T, --no-target-directory  treat DEST as a normal file\n  -v, --verbose       print the name of each directory as it is created\n", 0
                     aPreservecontex:
0000000000016f30         db         "      --preserve-context  preserve SELinux security context\n  -Z                      set SELinux security context of destination\n                            file and each created directory to default type\n      --context[=CTX]     like -Z, or if CTX is sp" ; DATA XREF=usage+326
0000000000017030         db         "ecified then set the\n                            SELinux or SMACK security context to CTX\n", 0
000000000001708b         align      16
                     aHelpDisplayThi:
0000000000017090         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+363
00000000000170bd         align      64
                     aVersionOutputV:
00000000000170c0         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+400
00000000000170f6         align      8
                     aNtheBackupSuff:
00000000000170f8         db         "\nThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\nThe version control method may be selected via the --backup option or through\nthe VERSION_CONTROL environment variable.  Here are the values:\n\n", 0 ; DATA XREF=usage+437
00000000000171d5         align      8
                     aNoneOffNeverMa:
00000000000171d8         db         "  none, off       never make backups (even if --backup is given)\n  numbered, t     make numbered backups\n  existing, nil   numbered if numbered backups exist, simple otherwise\n  simple, never   always make simple backups\n", 0 ; DATA XREF=usage+474
00000000000172b6         align      8
                     aHttpswwwgnuorg:
00000000000172b8         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+719, usage+819, usage+912, usage+1022, emit_bug_reporting_address+61
                     aReportAnyTrans:
00000000000172e0         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+1063
0000000000017327         align      8
                     aOrAvailableLoc:
0000000000017328         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+862
000000000001735b         align      32
                     aMultipleTarget:
0000000000017360         db         "multiple target directories specified", 0  ; DATA XREF=main+2907
0000000000017386         align      8
                     aWarningIgnorin:
0000000000017388         db         "WARNING: ignoring --preserve-context; this kernel is not SELinux-enabled", 0 ; DATA XREF=main+1086
00000000000173d1         align      8
                     aWarningIgnorin_173d8:        // aWarningIgnorin
00000000000173d8         db         "warning: ignoring --context; it requires an SELinux-enabled kernel", 0 ; DATA XREF=main+1077
000000000001741b         align      32
                     aTheStripOption:
0000000000017420         db         "the strip option may not be used when installing a directory", 0 ; DATA XREF=main+3289
000000000001745d         align      32
                     aTargetDirector:
0000000000017460         db         "target directory not allowed when installing a directory", 0 ; DATA XREF=main+1804
0000000000017499         align      32
                     aCannotSetTarge:
00000000000174a0         db         "cannot set target context and preserve it", 0 ; DATA XREF=main+3050
00000000000174ca         align      16
                     aFailedToSetDef:
00000000000174d0         db         "failed to set default file creation context to %s", 0 ; DATA XREF=main+1966
0000000000017502         align      8
                     aMissingDestina:
0000000000017508         db         "missing destination file operand after %s", 0 ; DATA XREF=main+3006
0000000000017532         align      8
                     aCannotCombineT:
0000000000017538         db         "cannot combine --target-directory (-t) and --no-target-directory (-T)", 0 ; DATA XREF=main+2943
000000000001757e         align      128
                     aWarningIgnorin_17580:        // aWarningIgnorin
0000000000017580         db         "WARNING: ignoring --strip-program option as -s option was not specified", 0 ; DATA XREF=main+2340
                     aOptionsCompare_175c8:        // aOptionsCompare
00000000000175c8         db         "options --compare (-C) and --preserve-timestamps are mutually exclusive", 0 ; DATA XREF=main+3184
                     aOptionsCompare:
0000000000017610         db         "options --compare (-C) and --strip are mutually exclusive", 0 ; DATA XREF=main+1484
000000000001764a         align      16
                     aTheCompareCOpt:
0000000000017650         db         "the --compare (-C) option is ignored when you specify a mode with non-permission bits", 0 ; DATA XREF=main+2378
00000000000176a6         db  0x3a ; ':'                                         ; DATA XREF=prog_fprintf+125
00000000000176a7         db  0x20 ; ' '
00000000000176a8         db  0x00 ; '.'
00000000000176a9         db  0x00 ; '.'
00000000000176aa         db  0x00 ; '.'
00000000000176ab         db  0x00 ; '.'
00000000000176ac         db  0x00 ; '.'
00000000000176ad         db  0x00 ; '.'
00000000000176ae         db  0x00 ; '.'
00000000000176af         db  0x00 ; '.'
                     aFailedToRestor:
00000000000176b0         db         "failed to restore the default file creation context", 0 ; DATA XREF=restore_default_fscreatecon_or_die+6
00000000000176e4         align      8
                     aCannotCreateHa:
00000000000176e8         db         "cannot create hard link %s to %s", 0       ; DATA XREF=create_hard_link+204
0000000000017709         align      16
                     aSReplaceSOverr:
0000000000017710         db         "%s: replace %s, overriding mode %04lo (%s)? ", 0 ; DATA XREF=overwrite_ok.isra.12+134
000000000001773d         align      64
                     aSUnwritableSMo:
0000000000017740         db         "%s: unwritable %s (mode %04lo, %s); try anyway? ", 0 ; DATA XREF=overwrite_ok.isra.12+304
0000000000017771         align      8
                     aFailedToGetSec:
0000000000017778         db         "failed to get security context of %s", 0   ; DATA XREF=set_process_security_ctx+58
000000000001779d         align      32
                     aFailedToSetThe:
00000000000177a0         db         "failed to set the security context of %s", 0 ; DATA XREF=set_file_security_ctx+51
00000000000177c9         align      16
                     aFailedToPreser:
00000000000177d0         db         "failed to preserve ownership for %s", 0    ; DATA XREF=set_owner+413, copy_internal+16324
00000000000177f4         align      8
                     aRNotSpecifiedO:
00000000000177f8         db         "-r not specified; omitting directory %s", 0 ; DATA XREF=copy_internal+3065
                     aWarningSourceF:
0000000000017820         db         "warning: source file %s specified more than once", 0 ; DATA XREF=copy_internal+6457
0000000000017851         align      8
                     aCannotOverwrit_17858:        // aCannotOverwrit
0000000000017858         db         "cannot overwrite non-directory %s with directory %s", 0 ; DATA XREF=copy_internal+9135
000000000001788c         align      16
                     aWillNotOverwri:
0000000000017890         db         "will not overwrite just-created %s with %s", 0 ; DATA XREF=copy_internal+11081
00000000000178bb         align      64
                     aCannotOverwrit:
00000000000178c0         db         "cannot overwrite directory %s with non-directory", 0 ; DATA XREF=copy_internal+4867
00000000000178f1         align      8
                     aCannotMoveDire:
00000000000178f8         db         "cannot move directory onto non-directory: %s -> %s", 0 ; DATA XREF=copy_internal+9632
000000000001792b         align      16
                     aBackingUpSMigh:
0000000000017930         db         "backing up %s might destroy source;  %s not moved", 0 ; DATA XREF=copy_internal+10516
0000000000017962         align      8
                     aBackingUpSMigh_17968:        // aBackingUpSMigh
0000000000017968         db         "backing up %s might destroy source;  %s not copied", 0 ; DATA XREF=copy_internal+11126
000000000001799b         align      32
                     aWillNotCopySTh:
00000000000179a0         db         "will not copy %s through just-created symlink %s", 0 ; DATA XREF=copy_internal+1049
00000000000179d1         align      8
                     aCannotCopyADir:
00000000000179d8         db         "cannot copy a directory, %s, into itself, %s", 0 ; DATA XREF=copy_internal+4306
0000000000017a05         align      8
                     aWarningSourceD:
0000000000017a08         db         "warning: source directory %s specified more than once", 0 ; DATA XREF=copy_internal+9947
0000000000017a3e         align      64
                     aWillNotCreateH:
0000000000017a40         db         "will not create hard link %s to directory %s", 0 ; DATA XREF=copy_internal+8257
0000000000017a6d         align      16
                     aCannotMoveSToA:
0000000000017a70         db         "cannot move %s to a subdirectory of itself, %s", 0 ; DATA XREF=copy_internal+6620
0000000000017a9f         align      32
                     aInterdeviceMov:
0000000000017aa0         db         "inter-device move failed: %s to %s; unable to remove target", 0 ; DATA XREF=copy_internal+6762
0000000000017adc         align      32
                     aCannotCreateSy_17ae0:        // aCannotCreateSy
0000000000017ae0         db         "cannot create symbolic link %s to %s", 0   ; DATA XREF=copy_internal+3936
0000000000017b05         align      8
                     aSkippingFileSA:
0000000000017b08         db         "skipping file %s, as it was replaced while being copied", 0 ; DATA XREF=copy_internal+8483
                     aNotWritingThro:
0000000000017b40         db         "not writing through dangling symlink %s", 0 ; DATA XREF=copy_internal+16415
                     aSFailedToGetEx:
0000000000017b68         db         "%s: failed to get extents info", 0         ; DATA XREF=copy_internal+16203
0000000000017b87         align      8
                     aCannotCopyCycl:
0000000000017b88         db         "cannot copy cyclic symbolic link %s", 0    ; DATA XREF=copy_internal+2969
0000000000017bac         align      16
                     aSCanMakeRelati:
0000000000017bb0         db         "%s: can make relative symbolic links only in current directory", 0 ; DATA XREF=copy_internal+8775
0000000000017bef         align      16
                     aCannotCreateSy:
0000000000017bf0         db         "cannot create symbolic link %s", 0         ; DATA XREF=copy_internal+11475
0000000000017c0f         align      16
                     aValidbackuptyp:
0000000000017c10         db         "VALID_BACKUP_TYPE (co->backup_type)", 0    ; DATA XREF=copy+309
0000000000017c34         align      8
                     aValidsparsemod:
0000000000017c38         db         "VALID_SPARSE_MODE (co->sparse_mode)", 0    ; DATA XREF=copy+278
0000000000017c5c         align      32
                     aValidreflinkmo:
0000000000017c60         db         "VALID_REFLINK_MODE (co->reflink_mode)", 0  ; DATA XREF=copy+247
0000000000017c86         align      8
                     aCohardlinkCosy:
0000000000017c88         db         "!(co->hard_link && co->symbolic_link)", 0  ; DATA XREF=copy+180
0000000000017cae         align      16
                     aCoreflinkmodeR:
0000000000017cb0         db         "! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)", 0 ; DATA XREF=copy+211
                     aSS:
0000000000017cf9         db         "%s -> %s", 0                               ; DATA XREF=emit_verbose+46
                     aBackupS:
0000000000017d02         db         " (backup: %s)", 0                          ; DATA XREF=emit_verbose+89
                     aRemovedSn:
0000000000017d10         db         "removed %s\n", 0                           ; DATA XREF=create_hard_link+109, copy_internal+11626, copy_internal+13163
                     aSOverwriteS:
0000000000017d1c         db         "%s: overwrite %s? ", 0                     ; DATA XREF=overwrite_ok.isra.12+213
                     aCannotLseekS:
0000000000017d2f         db         "cannot lseek %s", 0                        ; DATA XREF=create_hole+181, copy_internal+16598
                     aErrorDeallocat:
0000000000017d3f         db         "error deallocating %s", 0                  ; DATA XREF=create_hole+97, copy_internal+15522
                     aErrorReadingS:
0000000000017d55         db         "error reading %s", 0                       ; DATA XREF=sparse_copy+222
                     aErrorWritingS:
0000000000017d66         db         "error writing %s", 0                       ; DATA XREF=sparse_copy+975
                     aOverflowReadin:
0000000000017d77         db         "overflow reading %s", 0                    ; DATA XREF=sparse_copy+898
                     aClearingPermis:
0000000000017d8b         db         "clearing permissions for %s", 0            ; DATA XREF=set_owner+355
                     aOmittingDirect:
0000000000017da7         db         "omitting directory %s", 0                  ; DATA XREF=copy_internal+6544
                     aSAndSAreTheSam:
0000000000017dbd         db         "%s and %s are the same file", 0            ; DATA XREF=copy_internal+5676
                     aCannotBackupS:
0000000000017dd9         db         "cannot backup %s", 0                       ; DATA XREF=copy_internal+10050
                     aCannotRemoveS:
0000000000017dea         db         "cannot remove %s", 0                       ; DATA XREF=copy_internal+9253, copy_internal+16279
                     aRenamed:
0000000000017dfb         db         "renamed ", 0                               ; DATA XREF=copy_internal+5008
                     aCannotMoveSToS:
0000000000017e04         db         "cannot move %s to %s", 0                   ; DATA XREF=copy_internal+4500
                     aCopied:
0000000000017e19         db         "copied ", 0                                ; DATA XREF=copy_internal+9008
                     aSettingPermiss:
0000000000017e21         db         "setting permissions for %s", 0             ; DATA XREF=copy_internal+11548, set_acl+26
                     aCreatedDirecto:
0000000000017e3c         db         "created directory %s\n", 0                 ; DATA XREF=copy_internal+7449
                     aCannotAccessS:
0000000000017e52         db         "cannot access %s", 0                       ; DATA XREF=copy_internal+11305
0000000000017e63         db  0x2e ; '.'                                         ; DATA XREF=copy_internal+3800, make_dir_parents+665, savewd_chdir+191
0000000000017e64         db  0x00 ; '.'
                     aCannotOpenSFor:
0000000000017e65         db         "cannot open %s for reading", 0             ; DATA XREF=copy_internal+10212
                     aCannotFstatS:
0000000000017e80         db         "cannot fstat %s", 0                        ; DATA XREF=copy_internal+10776, copy_internal+14983
                     aCannotCreateRe:
0000000000017e90         db         "cannot create regular file %s", 0          ; DATA XREF=copy_internal+13430
                     aFailedToCloneS:
0000000000017eae         db         "failed to clone %s from %s", 0             ; DATA XREF=copy_internal+15770
                     aSWriteFailed:
0000000000017ec9         db         "%s: write failed", 0                       ; DATA XREF=copy_internal+16116
                     aFailedToExtend:
0000000000017eda         db         "failed to extend %s", 0                    ; DATA XREF=copy_internal+15243
                     aPreservingTime:
0000000000017eee         db         "preserving times for %s", 0                ; DATA XREF=copy_internal+1691, copy_internal+14896
                     aPreservingPerm:
0000000000017f06         db         "preserving permissions for %s", 0          ; DATA XREF=copy_internal+1979, copy_internal+14032, copy_acl+35
                     aFailedToCloseS:
0000000000017f24         db         "failed to close %s", 0                     ; DATA XREF=copy_internal+11224, copy_internal+13000
                     aCannotCreateFi:
0000000000017f37         db         "cannot create fifo %s", 0                  ; DATA XREF=copy_internal+10747
                     aCannotCreateSp:
0000000000017f4d         db         "cannot create special file %s", 0          ; DATA XREF=copy_internal+9748
                     aCannotReadSymb:
0000000000017f6b         db         "cannot read symbolic link %s", 0           ; DATA XREF=copy_internal+13532
                     aSHasUnknownFil:
0000000000017f88         db         "%s has unknown file type", 0               ; DATA XREF=copy_internal+6395
                     aCannotUnbackup:
0000000000017fa1         db         "cannot un-backup %s", 0                    ; DATA XREF=copy_internal+6265
                     aSSUnbackupn:
0000000000017fb5         db         "%s -> %s (unbackup)\n", 0                  ; DATA XREF=copy_internal+4101
                     aCoreutils831sr:
0000000000017fca         db         "../coreutils-8.31/src/copy.c", 0           ; DATA XREF=copy+173, copy+204, copy+240, copy+271, copy+302, copy+333
                     aCoNull:
0000000000017fe7         db         "co != NULL", 0                             ; DATA XREF=copy+340
0000000000017ff2         align      8
                     __PRETTY_FUNCTION__.7875:
0000000000017ff8         db         "valid_options", 0                          ; DATA XREF=copy+166, copy+197, copy+233, copy+264, copy+295, copy+326
0000000000018006         align      8
                     aCoreutils831sr_18008:        // aCoreutils831sr
0000000000018008         db         "../coreutils-8.31/src/extent-scan.c", 0    ; DATA XREF=extent_scan_read+497, extent_scan_read+737
000000000001802c         align      16
                     aScaneicountSiz:
0000000000018030         db         "scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents", 0 ; DATA XREF=extent_scan_read+744
0000000000018067         align      8
                     aFmextentsifelo:
0000000000018068         db         "fm_extents[i].fe_logical <= OFF_T_MAX - fm_extents[i].fe_length", 0 ; DATA XREF=extent_scan_read+504
00000000000180a8         align      16
                     __PRETTY_FUNCTION__.6956:
00000000000180b0         db         "extent_scan_read", 0                       ; DATA XREF=extent_scan_read+490, extent_scan_read+730
                     a831:
00000000000180c1         db         "8.31", 0                                   ; DATA XREF=Version
00000000000180c6         db  0x7e ; '~'                                         ; DATA XREF=set_simple_backup_suffix+14
00000000000180c7         db  0x00 ; '.'
                     aSimplebackupsu:
00000000000180c8         db         "SIMPLE_BACKUP_SUFFIX", 0                   ; DATA XREF=set_simple_backup_suffix+48
00000000000180dd         db  0x24 ; '$'                                         ; DATA XREF=xget_version+36
                     aVersioncontrol:
00000000000180de         db         "VERSION_CONTROL", 0                        ; DATA XREF=xget_version+10
                     aNone:
00000000000180ee         db         "none", 0
00000000000180f3         db  0x6f ; 'o'
00000000000180f4         db  0x66 ; 'f'
00000000000180f5         db  0x66 ; 'f'
00000000000180f6         db  0x00 ; '.'
                     aSimple:
00000000000180f7         db         "simple", 0
                     aNever:
00000000000180fe         db         "never", 0
                     aExisting:
0000000000018104         db         "existing", 0
000000000001810d         db  0x6e ; 'n'
000000000001810e         db  0x69 ; 'i'
000000000001810f         db  0x6c ; 'l'
0000000000018110         db  0x00 ; '.'
                     aNumbered:
0000000000018111         db         "numbered", 0
000000000001811a         db  0x00 ; '.'
000000000001811b         db  0x00 ; '.'
000000000001811c         db  0x00 ; '.'
000000000001811d         db  0x00 ; '.'
000000000001811e         db  0x00 ; '.'
000000000001811f         db  0x00 ; '.'
                     backup_types:
0000000000018120         db  0x00 ; '.'                                         ; DATA XREF=get_version.part.0+18, get_version.part.0+36
0000000000018121         db  0x00 ; '.'
0000000000018122         db  0x00 ; '.'
0000000000018123         db  0x00 ; '.'
0000000000018124         db  0x00 ; '.'
0000000000018125         db  0x00 ; '.'
0000000000018126         db  0x00 ; '.'
0000000000018127         db  0x00 ; '.'
0000000000018128         db  0x01 ; '.'
0000000000018129         db  0x00 ; '.'
000000000001812a         db  0x00 ; '.'
000000000001812b         db  0x00 ; '.'
000000000001812c         db  0x01 ; '.'
000000000001812d         db  0x00 ; '.'
000000000001812e         db  0x00 ; '.'
000000000001812f         db  0x00 ; '.'
0000000000018130         db  0x02 ; '.'
0000000000018131         db  0x00 ; '.'
0000000000018132         db  0x00 ; '.'
0000000000018133         db  0x00 ; '.'
0000000000018134         db  0x02 ; '.'
0000000000018135         db  0x00 ; '.'
0000000000018136         db  0x00 ; '.'
0000000000018137         db  0x00 ; '.'
0000000000018138         db  0x03 ; '.'
0000000000018139         db  0x00 ; '.'
000000000001813a         db  0x00 ; '.'
000000000001813b         db  0x00 ; '.'
000000000001813c         db  0x03 ; '.'
000000000001813d         db  0x00 ; '.'
000000000001813e         db  0x00 ; '.'
000000000001813f         db  0x00 ; '.'
                     aErrorClosingFi:
0000000000018140         db         "error closing file", 0                     ; DATA XREF=close_stdin+88
                     aSS_18153:        // aSS
0000000000018153         db         "%s: %s", 0                                 ; DATA XREF=close_stdin+141, close_stdout+108
                     aWriteError:
000000000001815a         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aEntriesLun:
0000000000018166         db         "# entries:         %lu\n", 0               ; DATA XREF=hash_print_statistics+101
                     aBucketsLun:
000000000001817e         db         "# buckets:         %lu\n", 0               ; DATA XREF=hash_print_statistics+123
                     aMaxBucketLengt:
0000000000018196         db         "max bucket length: %lu\n", 0               ; DATA XREF=hash_print_statistics+232
00000000000181ae         align      16
                     aBucketsUsedLu2:
00000000000181b0         db         "# buckets used:    %lu (%.2f%%)\n", 0      ; DATA XREF=hash_print_statistics+188
00000000000181d1         db  0x00 ; '.'
00000000000181d2         db  0x00 ; '.'
00000000000181d3         db  0x00 ; '.'
00000000000181d4         db  0x00 ; '.'
00000000000181d5         db  0x00 ; '.'
00000000000181d6         db  0x00 ; '.'
00000000000181d7         db  0x00 ; '.'
00000000000181d8         db  0x00 ; '.'
00000000000181d9         db  0x00 ; '.'
00000000000181da         db  0x00 ; '.'
00000000000181db         db  0x00 ; '.'
00000000000181dc         db  0x00 ; '.'
00000000000181dd         db  0x00 ; '.'
00000000000181de         db  0x00 ; '.'
00000000000181df         db  0x00 ; '.'
                     default_tuning:
00000000000181e0         db  0x00 ; '.'                                         ; DATA XREF=check_tuning.isra.0+3, hash_initialize+272
00000000000181e1         db  0x00 ; '.'
00000000000181e2         db  0x00 ; '.'
00000000000181e3         db  0x00 ; '.'
00000000000181e4         db  0x00 ; '.'
00000000000181e5         db  0x00 ; '.'
00000000000181e6         db  0x80 ; '.'
00000000000181e7         db  0x3f ; '?'
00000000000181e8         db  0xcd ; '.'
00000000000181e9         db  0xcc ; '.'
00000000000181ea         db  0x4c ; 'L'
00000000000181eb         db  0x3f ; '?'
00000000000181ec         db  0xf4 ; '.'
00000000000181ed         db  0xfd ; '.'
00000000000181ee         db  0xb4 ; '.'
00000000000181ef         db  0x3f ; '?'
00000000000181f0         db  0x00 ; '.'
00000000000181f1         db  0x00 ; '.'
00000000000181f2         db  0x00 ; '.'
00000000000181f3         db  0x00 ; '.'
                     float_181f4:        // float
00000000000181f4         dd         0.1f                                        ; DATA XREF=check_tuning.isra.0+25, check_tuning.isra.0+74
                     float_181f8:        // float
00000000000181f8         dd         0.9f                                        ; DATA XREF=check_tuning.isra.0+34
                     float_181fc:        // float
00000000000181fc         dd         1.1f                                        ; DATA XREF=check_tuning.isra.0+52
                     float_18200:        // float
0000000000018200         dd         0.0f                                        ; DATA XREF=check_tuning.isra.0+65
                     float_18204:        // float
0000000000018204         dd         1.0f                                        ; DATA XREF=check_tuning.isra.0+92
                     float_18208:        // float
0000000000018208         dd         0.8f                                        ; DATA XREF=hash_initialize+290
                     float_1820c:        // float
000000000001820c         dd         1.84467e+19f                                ; DATA XREF=hash_initialize+318, hash_rehash+64, hash_insert_if_absent+413
                     float_18210:        // float
0000000000018210         dd         9.22337e+18f                                ; DATA XREF=hash_initialize+327, hash_initialize+336, hash_rehash+77, hash_rehash+90, hash_insert_if_absent+422, hash_insert_if_absent+608, hash_delete+250, hash_delete+400
0000000000018214         align      2
000000000001821e         db  0x59 ; 'Y'
000000000001821f         db  0x40 ; '@'
                     aCannotChangeOw_18220:        // aCannotChangeOw
0000000000018220         db         "cannot change owner and permissions of %s", 0 ; DATA XREF=make_dir_parents+791
000000000001824a         align      4
                     switch_table_1824c:        // switch_table
000000000001824c         dd         mode_compile.loc_d4e0-switch_table_1824c, 25 dup (mode_compile.loc_d4f9-switch_table_1824c), mode_compile.loc_d550-switch_table_1824c, mode_compile.loc_d540-switch_table_1824c ; switch table used at 0xd4d4 containing 33 entries, DATA XREF=mode_compile+116
00000000000182bc         dd         mode_compile.loc_d530-switch_table_1824c, 2 dup (mode_compile.loc_d4f9-switch_table_1824c), mode_compile.loc_d520-switch_table_1824c, mode_compile.loc_d518-switch_table_1824c
                     aANullArgv0WasP:
00000000000182d0         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
0000000000018308         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
0000000000018310         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
0000000000018311         db  0x74 ; 't'
0000000000018312         db  0x2d ; '-'
0000000000018313         db  0x00 ; '.'
0000000000018314         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
0000000000018315         db  0x80 ; '.'
0000000000018316         db  0x98 ; '.'
0000000000018317         db  0x00 ; '.'
0000000000018318         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
0000000000018319         db  0x80 ; '.'
000000000001831a         db  0x99 ; '.'
000000000001831b         db  0x00 ; '.'
000000000001831c         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
000000000001831d         db  0x07 ; '.'
000000000001831e         db  0x65 ; 'e'
000000000001831f         db  0x00 ; '.'
0000000000018320         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
0000000000018321         db  0xaf ; '.'
0000000000018322         db  0x00 ; '.'
0000000000018323         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_e280+1451, sub_e280+1493, sub_e280+2429
0000000000018324         db  0x00 ; '.'
0000000000018325         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_e280+132, sub_e280+1338, sub_e280+1670, sub_e280+1697, sub_e280+2352
0000000000018326         db  0x00 ; '.'
0000000000018327         db  0x60 ; '`'                                         ; DATA XREF=sub_e280+1627, sub_e280+1654
0000000000018328         db  0x00 ; '.'
                     aLiteral:
0000000000018329         db         "literal", 0
                     aShell:
0000000000018331         db         "shell", 0
                     aShellalways:
0000000000018337         db         "shell-always", 0
0000000000018344         db  0x73 ; 's'
0000000000018345         db  0x68 ; 'h'
0000000000018346         db  0x65 ; 'e'
0000000000018347         db  0x6c ; 'l'
0000000000018348         db  0x6c ; 'l'
0000000000018349         db  0x2d ; '-'
                     aEscape:
000000000001834a         db         "escape", 0
                     aShellescapealw:
0000000000018351         db         "shell-escape-always", 0
                     aCmaybe:
0000000000018365         db         "c-maybe", 0
                     aClocale:
000000000001836d         db         "clocale", 0
0000000000018375         align      128
                     switch_table_18380:        // switch_table
0000000000018380         dd         quotearg_buffer_restyled.loc_e97a-switch_table_18380, quotearg_buffer_restyled.loc_dbd3-switch_table_18380, quotearg_buffer_restyled.loc_eba8-switch_table_18380, quotearg_buffer_restyled.loc_e9b4-switch_table_18380 ; switch table used at 0xdbd1 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000018390         dd         quotearg_buffer_restyled.loc_e7a4-switch_table_18380, quotearg_buffer_restyled.loc_e800-switch_table_18380, quotearg_buffer_restyled.loc_e855-switch_table_18380, quotearg_buffer_restyled.loc_e89a-switch_table_18380
00000000000183a0         dd         3 dup (quotearg_buffer_restyled.loc_e8d4-switch_table_18380)
00000000000183ac         db  0xa4 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
00000000000183ad         db  0x5b ; '['
00000000000183ae         db  0xff ; '.'
00000000000183af         db  0xff ; '.'
00000000000183b0         db  0x8c ; '.'
00000000000183b1         db  0x5c ; '\'
00000000000183b2         db  0xff ; '.'
00000000000183b3         db  0xff ; '.'
00000000000183b4         db  0x8c ; '.'
00000000000183b5         db  0x5c ; '\'
00000000000183b6         db  0xff ; '.'
00000000000183b7         db  0xff ; '.'
00000000000183b8         db  0x8c ; '.'
00000000000183b9         db  0x5c ; '\'
00000000000183ba         db  0xff ; '.'
00000000000183bb         db  0xff ; '.'
00000000000183bc         db  0x8c ; '.'
00000000000183bd         db  0x5c ; '\'
00000000000183be         db  0xff ; '.'
00000000000183bf         db  0xff ; '.'
00000000000183c0         db  0x8c ; '.'
00000000000183c1         db  0x5c ; '\'
00000000000183c2         db  0xff ; '.'
00000000000183c3         db  0xff ; '.'
00000000000183c4         db  0x8c ; '.'
00000000000183c5         db  0x5c ; '\'
00000000000183c6         db  0xff ; '.'
00000000000183c7         db  0xff ; '.'
00000000000183c8         db  0xe4 ; '.'
00000000000183c9         db  0x5b ; '['
00000000000183ca         db  0xff ; '.'
00000000000183cb         db  0xff ; '.'
00000000000183cc         db  0xec ; '.'
00000000000183cd         db  0x5a ; 'Z'
00000000000183ce         db  0xff ; '.'
00000000000183cf         db  0xff ; '.'
00000000000183d0         db  0xac ; '.'
00000000000183d1         db  0x5a ; 'Z'
00000000000183d2         db  0xff ; '.'
00000000000183d3         db  0xff ; '.'
00000000000183d4         db  0x74 ; 't'
00000000000183d5         db  0x5c ; '\'
00000000000183d6         db  0xff ; '.'
00000000000183d7         db  0xff ; '.'
00000000000183d8         db  0x64 ; 'd'
00000000000183d9         db  0x5c ; '\'
00000000000183da         db  0xff ; '.'
00000000000183db         db  0xff ; '.'
00000000000183dc         db  0x54 ; 'T'
00000000000183dd         db  0x5c ; '\'
00000000000183de         db  0xff ; '.'
00000000000183df         db  0xff ; '.'
00000000000183e0         db  0x44 ; 'D'
00000000000183e1         db  0x5c ; '\'
00000000000183e2         db  0xff ; '.'
00000000000183e3         db  0xff ; '.'
00000000000183e4         db  0x8c ; '.'
00000000000183e5         db  0x5c ; '\'
00000000000183e6         db  0xff ; '.'
00000000000183e7         db  0xff ; '.'
00000000000183e8         db  0x8c ; '.'
00000000000183e9         db  0x5c ; '\'
00000000000183ea         db  0xff ; '.'
00000000000183eb         db  0xff ; '.'
00000000000183ec         db  0x8c ; '.'
00000000000183ed         db  0x5c ; '\'
00000000000183ee         db  0xff ; '.'
00000000000183ef         db  0xff ; '.'
00000000000183f0         db  0x8c ; '.'
00000000000183f1         db  0x5c ; '\'
00000000000183f2         db  0xff ; '.'
00000000000183f3         db  0xff ; '.'
00000000000183f4         db  0x8c ; '.'
00000000000183f5         db  0x5c ; '\'
00000000000183f6         db  0xff ; '.'
00000000000183f7         db  0xff ; '.'
00000000000183f8         db  0x8c ; '.'
00000000000183f9         db  0x5c ; '\'
00000000000183fa         db  0xff ; '.'
00000000000183fb         db  0xff ; '.'
00000000000183fc         db  0x8c ; '.'
00000000000183fd         db  0x5c ; '\'
00000000000183fe         db  0xff ; '.'
00000000000183ff         db  0xff ; '.'
0000000000018400         db  0x8c ; '.'
0000000000018401         db  0x5c ; '\'
0000000000018402         db  0xff ; '.'
0000000000018403         db  0xff ; '.'
0000000000018404         db  0x8c ; '.'
0000000000018405         db  0x5c ; '\'
0000000000018406         db  0xff ; '.'
0000000000018407         db  0xff ; '.'
0000000000018408         db  0x8c ; '.'
0000000000018409         db  0x5c ; '\'
000000000001840a         db  0xff ; '.'
000000000001840b         db  0xff ; '.'
000000000001840c         db  0x8c ; '.'
000000000001840d         db  0x5c ; '\'
000000000001840e         db  0xff ; '.'
000000000001840f         db  0xff ; '.'
0000000000018410         db  0x8c ; '.'
0000000000018411         db  0x5c ; '\'
0000000000018412         db  0xff ; '.'
0000000000018413         db  0xff ; '.'
0000000000018414         db  0x8c ; '.'
0000000000018415         db  0x5c ; '\'
0000000000018416         db  0xff ; '.'
0000000000018417         db  0xff ; '.'
0000000000018418         db  0x8c ; '.'
0000000000018419         db  0x5c ; '\'
000000000001841a         db  0xff ; '.'
000000000001841b         db  0xff ; '.'
000000000001841c         db  0x8c ; '.'
000000000001841d         db  0x5c ; '\'
000000000001841e         db  0xff ; '.'
000000000001841f         db  0xff ; '.'
0000000000018420         db  0x8c ; '.'
0000000000018421         db  0x5c ; '\'
0000000000018422         db  0xff ; '.'
0000000000018423         db  0xff ; '.'
0000000000018424         db  0x8c ; '.'
0000000000018425         db  0x5c ; '\'
0000000000018426         db  0xff ; '.'
0000000000018427         db  0xff ; '.'
0000000000018428         db  0x8c ; '.'
0000000000018429         db  0x5c ; '\'
000000000001842a         db  0xff ; '.'
000000000001842b         db  0xff ; '.'
000000000001842c         db  0x34 ; '4'
000000000001842d         db  0x5c ; '\'
000000000001842e         db  0xff ; '.'
000000000001842f         db  0xff ; '.'
0000000000018430         db  0x24 ; '$'
0000000000018431         db  0x5c ; '\'
0000000000018432         db  0xff ; '.'
0000000000018433         db  0xff ; '.'
0000000000018434         db  0x24 ; '$'
0000000000018435         db  0x5c ; '\'
0000000000018436         db  0xff ; '.'
0000000000018437         db  0xff ; '.'
0000000000018438         db  0xf4 ; '.'
0000000000018439         db  0x5b ; '['
000000000001843a         db  0xff ; '.'
000000000001843b         db  0xff ; '.'
000000000001843c         db  0x24 ; '$'
000000000001843d         db  0x5c ; '\'
000000000001843e         db  0xff ; '.'
000000000001843f         db  0xff ; '.'
0000000000018440         db  0xcc ; '.'
0000000000018441         db  0x5b ; '['
0000000000018442         db  0xff ; '.'
0000000000018443         db  0xff ; '.'
0000000000018444         db  0x24 ; '$'
0000000000018445         db  0x5c ; '\'
0000000000018446         db  0xff ; '.'
0000000000018447         db  0xff ; '.'
0000000000018448         db  0x87 ; '.'
0000000000018449         db  0x5a ; 'Z'
000000000001844a         db  0xff ; '.'
000000000001844b         db  0xff ; '.'
000000000001844c         db  0x24 ; '$'
000000000001844d         db  0x5c ; '\'
000000000001844e         db  0xff ; '.'
000000000001844f         db  0xff ; '.'
0000000000018450         db  0x24 ; '$'
0000000000018451         db  0x5c ; '\'
0000000000018452         db  0xff ; '.'
0000000000018453         db  0xff ; '.'
0000000000018454         db  0x24 ; '$'
0000000000018455         db  0x5c ; '\'
0000000000018456         db  0xff ; '.'
0000000000018457         db  0xff ; '.'
0000000000018458         db  0xcc ; '.'
0000000000018459         db  0x5b ; '['
000000000001845a         db  0xff ; '.'
000000000001845b         db  0xff ; '.'
000000000001845c         db  0xcc ; '.'
000000000001845d         db  0x5b ; '['
000000000001845e         db  0xff ; '.'
000000000001845f         db  0xff ; '.'
0000000000018460         db  0xcc ; '.'
0000000000018461         db  0x5b ; '['
0000000000018462         db  0xff ; '.'
0000000000018463         db  0xff ; '.'
0000000000018464         db  0xcc ; '.'
0000000000018465         db  0x5b ; '['
0000000000018466         db  0xff ; '.'
0000000000018467         db  0xff ; '.'
0000000000018468         db  0xcc ; '.'
0000000000018469         db  0x5b ; '['
000000000001846a         db  0xff ; '.'
000000000001846b         db  0xff ; '.'
000000000001846c         db  0xcc ; '.'
000000000001846d         db  0x5b ; '['
000000000001846e         db  0xff ; '.'
000000000001846f         db  0xff ; '.'
0000000000018470         db  0xcc ; '.'
0000000000018471         db  0x5b ; '['
0000000000018472         db  0xff ; '.'
0000000000018473         db  0xff ; '.'
0000000000018474         db  0xcc ; '.'
0000000000018475         db  0x5b ; '['
0000000000018476         db  0xff ; '.'
0000000000018477         db  0xff ; '.'
0000000000018478         db  0xcc ; '.'
0000000000018479         db  0x5b ; '['
000000000001847a         db  0xff ; '.'
000000000001847b         db  0xff ; '.'
000000000001847c         db  0xcc ; '.'
000000000001847d         db  0x5b ; '['
000000000001847e         db  0xff ; '.'
000000000001847f         db  0xff ; '.'
0000000000018480         db  0xcc ; '.'
0000000000018481         db  0x5b ; '['
0000000000018482         db  0xff ; '.'
0000000000018483         db  0xff ; '.'
0000000000018484         db  0xcc ; '.'
0000000000018485         db  0x5b ; '['
0000000000018486         db  0xff ; '.'
0000000000018487         db  0xff ; '.'
0000000000018488         db  0xcc ; '.'
0000000000018489         db  0x5b ; '['
000000000001848a         db  0xff ; '.'
000000000001848b         db  0xff ; '.'
000000000001848c         db  0xcc ; '.'
000000000001848d         db  0x5b ; '['
000000000001848e         db  0xff ; '.'
000000000001848f         db  0xff ; '.'
0000000000018490         db  0xcc ; '.'
0000000000018491         db  0x5b ; '['
0000000000018492         db  0xff ; '.'
0000000000018493         db  0xff ; '.'
0000000000018494         db  0xcc ; '.'
0000000000018495         db  0x5b ; '['
0000000000018496         db  0xff ; '.'
0000000000018497         db  0xff ; '.'
0000000000018498         db  0x24 ; '$'
0000000000018499         db  0x5c ; '\'
000000000001849a         db  0xff ; '.'
000000000001849b         db  0xff ; '.'
000000000001849c         db  0x24 ; '$'
000000000001849d         db  0x5c ; '\'
000000000001849e         db  0xff ; '.'
000000000001849f         db  0xff ; '.'
00000000000184a0         db  0x24 ; '$'
00000000000184a1         db  0x5c ; '\'
00000000000184a2         db  0xff ; '.'
00000000000184a3         db  0xff ; '.'
00000000000184a4         db  0x24 ; '$'
00000000000184a5         db  0x5c ; '\'
00000000000184a6         db  0xff ; '.'
00000000000184a7         db  0xff ; '.'
00000000000184a8         db  0x57 ; 'W'
00000000000184a9         db  0x5a ; 'Z'
00000000000184aa         db  0xff ; '.'
00000000000184ab         db  0xff ; '.'
00000000000184ac         db  0x8c ; '.'
00000000000184ad         db  0x5c ; '\'
00000000000184ae         db  0xff ; '.'
00000000000184af         db  0xff ; '.'
00000000000184b0         db  0xcc ; '.'
00000000000184b1         db  0x5b ; '['
00000000000184b2         db  0xff ; '.'
00000000000184b3         db  0xff ; '.'
00000000000184b4         db  0xcc ; '.'
00000000000184b5         db  0x5b ; '['
00000000000184b6         db  0xff ; '.'
00000000000184b7         db  0xff ; '.'
00000000000184b8         db  0xcc ; '.'
00000000000184b9         db  0x5b ; '['
00000000000184ba         db  0xff ; '.'
00000000000184bb         db  0xff ; '.'
00000000000184bc         db  0xcc ; '.'
00000000000184bd         db  0x5b ; '['
00000000000184be         db  0xff ; '.'
00000000000184bf         db  0xff ; '.'
00000000000184c0         db  0xcc ; '.'
00000000000184c1         db  0x5b ; '['
00000000000184c2         db  0xff ; '.'
00000000000184c3         db  0xff ; '.'
00000000000184c4         db  0xcc ; '.'
00000000000184c5         db  0x5b ; '['
00000000000184c6         db  0xff ; '.'
00000000000184c7         db  0xff ; '.'
00000000000184c8         db  0xcc ; '.'
00000000000184c9         db  0x5b ; '['
00000000000184ca         db  0xff ; '.'
00000000000184cb         db  0xff ; '.'
00000000000184cc         db  0xcc ; '.'
00000000000184cd         db  0x5b ; '['
00000000000184ce         db  0xff ; '.'
00000000000184cf         db  0xff ; '.'
00000000000184d0         db  0xcc ; '.'
00000000000184d1         db  0x5b ; '['
00000000000184d2         db  0xff ; '.'
00000000000184d3         db  0xff ; '.'
00000000000184d4         db  0xcc ; '.'
00000000000184d5         db  0x5b ; '['
00000000000184d6         db  0xff ; '.'
00000000000184d7         db  0xff ; '.'
00000000000184d8         db  0xcc ; '.'
00000000000184d9         db  0x5b ; '['
00000000000184da         db  0xff ; '.'
00000000000184db         db  0xff ; '.'
00000000000184dc         db  0xcc ; '.'
00000000000184dd         db  0x5b ; '['
00000000000184de         db  0xff ; '.'
00000000000184df         db  0xff ; '.'
00000000000184e0         db  0xcc ; '.'
00000000000184e1         db  0x5b ; '['
00000000000184e2         db  0xff ; '.'
00000000000184e3         db  0xff ; '.'
00000000000184e4         db  0xcc ; '.'
00000000000184e5         db  0x5b ; '['
00000000000184e6         db  0xff ; '.'
00000000000184e7         db  0xff ; '.'
00000000000184e8         db  0xcc ; '.'
00000000000184e9         db  0x5b ; '['
00000000000184ea         db  0xff ; '.'
00000000000184eb         db  0xff ; '.'
00000000000184ec         db  0xcc ; '.'
00000000000184ed         db  0x5b ; '['
00000000000184ee         db  0xff ; '.'
00000000000184ef         db  0xff ; '.'
00000000000184f0         db  0xcc ; '.'
00000000000184f1         db  0x5b ; '['
00000000000184f2         db  0xff ; '.'
00000000000184f3         db  0xff ; '.'
00000000000184f4         db  0xcc ; '.'
00000000000184f5         db  0x5b ; '['
00000000000184f6         db  0xff ; '.'
00000000000184f7         db  0xff ; '.'
00000000000184f8         db  0xcc ; '.'
00000000000184f9         db  0x5b ; '['
00000000000184fa         db  0xff ; '.'
00000000000184fb         db  0xff ; '.'
00000000000184fc         db  0xcc ; '.'
00000000000184fd         db  0x5b ; '['
00000000000184fe         db  0xff ; '.'
00000000000184ff         db  0xff ; '.'
0000000000018500         db  0xcc ; '.'
0000000000018501         db  0x5b ; '['
0000000000018502         db  0xff ; '.'
0000000000018503         db  0xff ; '.'
0000000000018504         db  0xcc ; '.'
0000000000018505         db  0x5b ; '['
0000000000018506         db  0xff ; '.'
0000000000018507         db  0xff ; '.'
0000000000018508         db  0xcc ; '.'
0000000000018509         db  0x5b ; '['
000000000001850a         db  0xff ; '.'
000000000001850b         db  0xff ; '.'
000000000001850c         db  0xcc ; '.'
000000000001850d         db  0x5b ; '['
000000000001850e         db  0xff ; '.'
000000000001850f         db  0xff ; '.'
0000000000018510         db  0xcc ; '.'
0000000000018511         db  0x5b ; '['
0000000000018512         db  0xff ; '.'
0000000000018513         db  0xff ; '.'
0000000000018514         db  0xcc ; '.'
0000000000018515         db  0x5b ; '['
0000000000018516         db  0xff ; '.'
0000000000018517         db  0xff ; '.'
0000000000018518         db  0x24 ; '$'
0000000000018519         db  0x5c ; '\'
000000000001851a         db  0xff ; '.'
000000000001851b         db  0xff ; '.'
000000000001851c         db  0xfc ; '.'
000000000001851d         db  0x5a ; 'Z'
000000000001851e         db  0xff ; '.'
000000000001851f         db  0xff ; '.'
0000000000018520         db  0xcc ; '.'
0000000000018521         db  0x5b ; '['
0000000000018522         db  0xff ; '.'
0000000000018523         db  0xff ; '.'
0000000000018524         db  0x24 ; '$'
0000000000018525         db  0x5c ; '\'
0000000000018526         db  0xff ; '.'
0000000000018527         db  0xff ; '.'
0000000000018528         db  0xcc ; '.'
0000000000018529         db  0x5b ; '['
000000000001852a         db  0xff ; '.'
000000000001852b         db  0xff ; '.'
000000000001852c         db  0x24 ; '$'
000000000001852d         db  0x5c ; '\'
000000000001852e         db  0xff ; '.'
000000000001852f         db  0xff ; '.'
0000000000018530         db  0xcc ; '.'
0000000000018531         db  0x5b ; '['
0000000000018532         db  0xff ; '.'
0000000000018533         db  0xff ; '.'
0000000000018534         db  0xcc ; '.'
0000000000018535         db  0x5b ; '['
0000000000018536         db  0xff ; '.'
0000000000018537         db  0xff ; '.'
0000000000018538         db  0xcc ; '.'
0000000000018539         db  0x5b ; '['
000000000001853a         db  0xff ; '.'
000000000001853b         db  0xff ; '.'
000000000001853c         db  0xcc ; '.'
000000000001853d         db  0x5b ; '['
000000000001853e         db  0xff ; '.'
000000000001853f         db  0xff ; '.'
0000000000018540         db  0xcc ; '.'
0000000000018541         db  0x5b ; '['
0000000000018542         db  0xff ; '.'
0000000000018543         db  0xff ; '.'
0000000000018544         db  0xcc ; '.'
0000000000018545         db  0x5b ; '['
0000000000018546         db  0xff ; '.'
0000000000018547         db  0xff ; '.'
0000000000018548         db  0xcc ; '.'
0000000000018549         db  0x5b ; '['
000000000001854a         db  0xff ; '.'
000000000001854b         db  0xff ; '.'
000000000001854c         db  0xcc ; '.'
000000000001854d         db  0x5b ; '['
000000000001854e         db  0xff ; '.'
000000000001854f         db  0xff ; '.'
0000000000018550         db  0xcc ; '.'
0000000000018551         db  0x5b ; '['
0000000000018552         db  0xff ; '.'
0000000000018553         db  0xff ; '.'
0000000000018554         db  0xcc ; '.'
0000000000018555         db  0x5b ; '['
0000000000018556         db  0xff ; '.'
0000000000018557         db  0xff ; '.'
0000000000018558         db  0xcc ; '.'
0000000000018559         db  0x5b ; '['
000000000001855a         db  0xff ; '.'
000000000001855b         db  0xff ; '.'
000000000001855c         db  0xcc ; '.'
000000000001855d         db  0x5b ; '['
000000000001855e         db  0xff ; '.'
000000000001855f         db  0xff ; '.'
0000000000018560         db  0xcc ; '.'
0000000000018561         db  0x5b ; '['
0000000000018562         db  0xff ; '.'
0000000000018563         db  0xff ; '.'
0000000000018564         db  0xcc ; '.'
0000000000018565         db  0x5b ; '['
0000000000018566         db  0xff ; '.'
0000000000018567         db  0xff ; '.'
0000000000018568         db  0xcc ; '.'
0000000000018569         db  0x5b ; '['
000000000001856a         db  0xff ; '.'
000000000001856b         db  0xff ; '.'
000000000001856c         db  0xcc ; '.'
000000000001856d         db  0x5b ; '['
000000000001856e         db  0xff ; '.'
000000000001856f         db  0xff ; '.'
0000000000018570         db  0xcc ; '.'
0000000000018571         db  0x5b ; '['
0000000000018572         db  0xff ; '.'
0000000000018573         db  0xff ; '.'
0000000000018574         db  0xcc ; '.'
0000000000018575         db  0x5b ; '['
0000000000018576         db  0xff ; '.'
0000000000018577         db  0xff ; '.'
0000000000018578         db  0xcc ; '.'
0000000000018579         db  0x5b ; '['
000000000001857a         db  0xff ; '.'
000000000001857b         db  0xff ; '.'
000000000001857c         db  0xcc ; '.'
000000000001857d         db  0x5b ; '['
000000000001857e         db  0xff ; '.'
000000000001857f         db  0xff ; '.'
0000000000018580         db  0xcc ; '.'
0000000000018581         db  0x5b ; '['
0000000000018582         db  0xff ; '.'
0000000000018583         db  0xff ; '.'
0000000000018584         db  0xcc ; '.'
0000000000018585         db  0x5b ; '['
0000000000018586         db  0xff ; '.'
0000000000018587         db  0xff ; '.'
0000000000018588         db  0xcc ; '.'
0000000000018589         db  0x5b ; '['
000000000001858a         db  0xff ; '.'
000000000001858b         db  0xff ; '.'
000000000001858c         db  0xcc ; '.'
000000000001858d         db  0x5b ; '['
000000000001858e         db  0xff ; '.'
000000000001858f         db  0xff ; '.'
0000000000018590         db  0xcc ; '.'
0000000000018591         db  0x5b ; '['
0000000000018592         db  0xff ; '.'
0000000000018593         db  0xff ; '.'
0000000000018594         db  0xcc ; '.'
0000000000018595         db  0x5b ; '['
0000000000018596         db  0xff ; '.'
0000000000018597         db  0xff ; '.'
0000000000018598         db  0x87 ; '.'
0000000000018599         db  0x59 ; 'Y'
000000000001859a         db  0xff ; '.'
000000000001859b         db  0xff ; '.'
000000000001859c         db  0x24 ; '$'
000000000001859d         db  0x5c ; '\'
000000000001859e         db  0xff ; '.'
000000000001859f         db  0xff ; '.'
00000000000185a0         db  0x87 ; '.'
00000000000185a1         db  0x59 ; 'Y'
00000000000185a2         db  0xff ; '.'
00000000000185a3         db  0xff ; '.'
00000000000185a4         db  0xf4 ; '.'
00000000000185a5         db  0x5b ; '['
00000000000185a6         db  0xff ; '.'
00000000000185a7         db  0xff ; '.'
00000000000185a8         db  0x78 ; 'x'                                         ; DATA XREF=sub_e020+137
00000000000185a9         db  0x5b ; '['
00000000000185aa         db  0xff ; '.'
00000000000185ab         db  0xff ; '.'
00000000000185ac         db  0x88 ; '.'
00000000000185ad         db  0x5a ; 'Z'
00000000000185ae         db  0xff ; '.'
00000000000185af         db  0xff ; '.'
00000000000185b0         db  0x88 ; '.'
00000000000185b1         db  0x5a ; 'Z'
00000000000185b2         db  0xff ; '.'
00000000000185b3         db  0xff ; '.'
00000000000185b4         db  0x88 ; '.'
00000000000185b5         db  0x5a ; 'Z'
00000000000185b6         db  0xff ; '.'
00000000000185b7         db  0xff ; '.'
00000000000185b8         db  0x88 ; '.'
00000000000185b9         db  0x5a ; 'Z'
00000000000185ba         db  0xff ; '.'
00000000000185bb         db  0xff ; '.'
00000000000185bc         db  0x88 ; '.'
00000000000185bd         db  0x5a ; 'Z'
00000000000185be         db  0xff ; '.'
00000000000185bf         db  0xff ; '.'
00000000000185c0         db  0x88 ; '.'
00000000000185c1         db  0x5a ; 'Z'
00000000000185c2         db  0xff ; '.'
00000000000185c3         db  0xff ; '.'
00000000000185c4         db  0x68 ; 'h'
00000000000185c5         db  0x5b ; '['
00000000000185c6         db  0xff ; '.'
00000000000185c7         db  0xff ; '.'
00000000000185c8         db  0xb8 ; '.'
00000000000185c9         db  0x5c ; '\'
00000000000185ca         db  0xff ; '.'
00000000000185cb         db  0xff ; '.'
00000000000185cc         db  0xa0 ; '.'
00000000000185cd         db  0x5c ; '\'
00000000000185ce         db  0xff ; '.'
00000000000185cf         db  0xff ; '.'
00000000000185d0         db  0x50 ; 'P'
00000000000185d1         db  0x5b ; '['
00000000000185d2         db  0xff ; '.'
00000000000185d3         db  0xff ; '.'
00000000000185d4         db  0x90 ; '.'
00000000000185d5         db  0x5c ; '\'
00000000000185d6         db  0xff ; '.'
00000000000185d7         db  0xff ; '.'
00000000000185d8         db  0x38 ; '8'
00000000000185d9         db  0x5b ; '['
00000000000185da         db  0xff ; '.'
00000000000185db         db  0xff ; '.'
00000000000185dc         db  0x78 ; 'x'
00000000000185dd         db  0x5c ; '\'
00000000000185de         db  0xff ; '.'
00000000000185df         db  0xff ; '.'
00000000000185e0         db  0x88 ; '.'
00000000000185e1         db  0x5a ; 'Z'
00000000000185e2         db  0xff ; '.'
00000000000185e3         db  0xff ; '.'
00000000000185e4         db  0x88 ; '.'
00000000000185e5         db  0x5a ; 'Z'
00000000000185e6         db  0xff ; '.'
00000000000185e7         db  0xff ; '.'
00000000000185e8         db  0x88 ; '.'
00000000000185e9         db  0x5a ; 'Z'
00000000000185ea         db  0xff ; '.'
00000000000185eb         db  0xff ; '.'
00000000000185ec         db  0x88 ; '.'
00000000000185ed         db  0x5a ; 'Z'
00000000000185ee         db  0xff ; '.'
00000000000185ef         db  0xff ; '.'
00000000000185f0         db  0x88 ; '.'
00000000000185f1         db  0x5a ; 'Z'
00000000000185f2         db  0xff ; '.'
00000000000185f3         db  0xff ; '.'
00000000000185f4         db  0x88 ; '.'
00000000000185f5         db  0x5a ; 'Z'
00000000000185f6         db  0xff ; '.'
00000000000185f7         db  0xff ; '.'
00000000000185f8         db  0x88 ; '.'
00000000000185f9         db  0x5a ; 'Z'
00000000000185fa         db  0xff ; '.'
00000000000185fb         db  0xff ; '.'
00000000000185fc         db  0x88 ; '.'
00000000000185fd         db  0x5a ; 'Z'
00000000000185fe         db  0xff ; '.'
00000000000185ff         db  0xff ; '.'
0000000000018600         db  0x88 ; '.'
0000000000018601         db  0x5a ; 'Z'
0000000000018602         db  0xff ; '.'
0000000000018603         db  0xff ; '.'
0000000000018604         db  0x88 ; '.'
0000000000018605         db  0x5a ; 'Z'
0000000000018606         db  0xff ; '.'
0000000000018607         db  0xff ; '.'
0000000000018608         db  0x88 ; '.'
0000000000018609         db  0x5a ; 'Z'
000000000001860a         db  0xff ; '.'
000000000001860b         db  0xff ; '.'
000000000001860c         db  0x88 ; '.'
000000000001860d         db  0x5a ; 'Z'
000000000001860e         db  0xff ; '.'
000000000001860f         db  0xff ; '.'
0000000000018610         db  0x88 ; '.'
0000000000018611         db  0x5a ; 'Z'
0000000000018612         db  0xff ; '.'
0000000000018613         db  0xff ; '.'
0000000000018614         db  0x88 ; '.'
0000000000018615         db  0x5a ; 'Z'
0000000000018616         db  0xff ; '.'
0000000000018617         db  0xff ; '.'
0000000000018618         db  0x88 ; '.'
0000000000018619         db  0x5a ; 'Z'
000000000001861a         db  0xff ; '.'
000000000001861b         db  0xff ; '.'
000000000001861c         db  0x88 ; '.'
000000000001861d         db  0x5a ; 'Z'
000000000001861e         db  0xff ; '.'
000000000001861f         db  0xff ; '.'
0000000000018620         db  0x88 ; '.'
0000000000018621         db  0x5a ; 'Z'
0000000000018622         db  0xff ; '.'
0000000000018623         db  0xff ; '.'
0000000000018624         db  0x88 ; '.'
0000000000018625         db  0x5a ; 'Z'
0000000000018626         db  0xff ; '.'
0000000000018627         db  0xff ; '.'
0000000000018628         db  0x60 ; '`'
0000000000018629         db  0x5c ; '\'
000000000001862a         db  0xff ; '.'
000000000001862b         db  0xff ; '.'
000000000001862c         db  0x48 ; 'H'
000000000001862d         db  0x5c ; '\'
000000000001862e         db  0xff ; '.'
000000000001862f         db  0xff ; '.'
0000000000018630         db  0x48 ; 'H'
0000000000018631         db  0x5c ; '\'
0000000000018632         db  0xff ; '.'
0000000000018633         db  0xff ; '.'
0000000000018634         db  0x30 ; '0'
0000000000018635         db  0x5c ; '\'
0000000000018636         db  0xff ; '.'
0000000000018637         db  0xff ; '.'
0000000000018638         db  0x48 ; 'H'
0000000000018639         db  0x5c ; '\'
000000000001863a         db  0xff ; '.'
000000000001863b         db  0xff ; '.'
000000000001863c         db  0x18 ; '.'
000000000001863d         db  0x5c ; '\'
000000000001863e         db  0xff ; '.'
000000000001863f         db  0xff ; '.'
0000000000018640         db  0x48 ; 'H'
0000000000018641         db  0x5c ; '\'
0000000000018642         db  0xff ; '.'
0000000000018643         db  0xff ; '.'
0000000000018644         db  0x88 ; '.'
0000000000018645         db  0x58 ; 'X'
0000000000018646         db  0xff ; '.'
0000000000018647         db  0xff ; '.'
0000000000018648         db  0x48 ; 'H'
0000000000018649         db  0x5c ; '\'
000000000001864a         db  0xff ; '.'
000000000001864b         db  0xff ; '.'
000000000001864c         db  0x48 ; 'H'
000000000001864d         db  0x5c ; '\'
000000000001864e         db  0xff ; '.'
000000000001864f         db  0xff ; '.'
0000000000018650         db  0x48 ; 'H'
0000000000018651         db  0x5c ; '\'
0000000000018652         db  0xff ; '.'
0000000000018653         db  0xff ; '.'
0000000000018654         db  0x18 ; '.'
0000000000018655         db  0x5c ; '\'
0000000000018656         db  0xff ; '.'
0000000000018657         db  0xff ; '.'
0000000000018658         db  0x18 ; '.'
0000000000018659         db  0x5c ; '\'
000000000001865a         db  0xff ; '.'
000000000001865b         db  0xff ; '.'
000000000001865c         db  0x18 ; '.'
000000000001865d         db  0x5c ; '\'
000000000001865e         db  0xff ; '.'
000000000001865f         db  0xff ; '.'
0000000000018660         db  0x18 ; '.'
0000000000018661         db  0x5c ; '\'
0000000000018662         db  0xff ; '.'
0000000000018663         db  0xff ; '.'
0000000000018664         db  0x18 ; '.'
0000000000018665         db  0x5c ; '\'
0000000000018666         db  0xff ; '.'
0000000000018667         db  0xff ; '.'
0000000000018668         db  0x18 ; '.'
0000000000018669         db  0x5c ; '\'
000000000001866a         db  0xff ; '.'
000000000001866b         db  0xff ; '.'
000000000001866c         db  0x18 ; '.'
000000000001866d         db  0x5c ; '\'
000000000001866e         db  0xff ; '.'
000000000001866f         db  0xff ; '.'
0000000000018670         db  0x18 ; '.'
0000000000018671         db  0x5c ; '\'
0000000000018672         db  0xff ; '.'
0000000000018673         db  0xff ; '.'
0000000000018674         db  0x18 ; '.'
0000000000018675         db  0x5c ; '\'
0000000000018676         db  0xff ; '.'
0000000000018677         db  0xff ; '.'
0000000000018678         db  0x18 ; '.'
0000000000018679         db  0x5c ; '\'
000000000001867a         db  0xff ; '.'
000000000001867b         db  0xff ; '.'
000000000001867c         db  0x18 ; '.'
000000000001867d         db  0x5c ; '\'
000000000001867e         db  0xff ; '.'
000000000001867f         db  0xff ; '.'
0000000000018680         db  0x18 ; '.'
0000000000018681         db  0x5c ; '\'
0000000000018682         db  0xff ; '.'
0000000000018683         db  0xff ; '.'
0000000000018684         db  0x18 ; '.'
0000000000018685         db  0x5c ; '\'
0000000000018686         db  0xff ; '.'
0000000000018687         db  0xff ; '.'
0000000000018688         db  0x18 ; '.'
0000000000018689         db  0x5c ; '\'
000000000001868a         db  0xff ; '.'
000000000001868b         db  0xff ; '.'
000000000001868c         db  0x18 ; '.'
000000000001868d         db  0x5c ; '\'
000000000001868e         db  0xff ; '.'
000000000001868f         db  0xff ; '.'
0000000000018690         db  0x18 ; '.'
0000000000018691         db  0x5c ; '\'
0000000000018692         db  0xff ; '.'
0000000000018693         db  0xff ; '.'
0000000000018694         db  0x48 ; 'H'
0000000000018695         db  0x5c ; '\'
0000000000018696         db  0xff ; '.'
0000000000018697         db  0xff ; '.'
0000000000018698         db  0x48 ; 'H'
0000000000018699         db  0x5c ; '\'
000000000001869a         db  0xff ; '.'
000000000001869b         db  0xff ; '.'
000000000001869c         db  0x48 ; 'H'
000000000001869d         db  0x5c ; '\'
000000000001869e         db  0xff ; '.'
000000000001869f         db  0xff ; '.'
00000000000186a0         db  0x48 ; 'H'
00000000000186a1         db  0x5c ; '\'
00000000000186a2         db  0xff ; '.'
00000000000186a3         db  0xff ; '.'
00000000000186a4         db  0x58 ; 'X'
00000000000186a5         db  0x58 ; 'X'
00000000000186a6         db  0xff ; '.'
00000000000186a7         db  0xff ; '.'
00000000000186a8         db  0x88 ; '.'
00000000000186a9         db  0x5a ; 'Z'
00000000000186aa         db  0xff ; '.'
00000000000186ab         db  0xff ; '.'
00000000000186ac         db  0x18 ; '.'
00000000000186ad         db  0x5c ; '\'
00000000000186ae         db  0xff ; '.'
00000000000186af         db  0xff ; '.'
00000000000186b0         db  0x18 ; '.'
00000000000186b1         db  0x5c ; '\'
00000000000186b2         db  0xff ; '.'
00000000000186b3         db  0xff ; '.'
00000000000186b4         db  0x18 ; '.'
00000000000186b5         db  0x5c ; '\'
00000000000186b6         db  0xff ; '.'
00000000000186b7         db  0xff ; '.'
00000000000186b8         db  0x18 ; '.'
00000000000186b9         db  0x5c ; '\'
00000000000186ba         db  0xff ; '.'
00000000000186bb         db  0xff ; '.'
00000000000186bc         db  0x18 ; '.'
00000000000186bd         db  0x5c ; '\'
00000000000186be         db  0xff ; '.'
00000000000186bf         db  0xff ; '.'
00000000000186c0         db  0x18 ; '.'
00000000000186c1         db  0x5c ; '\'
00000000000186c2         db  0xff ; '.'
00000000000186c3         db  0xff ; '.'
00000000000186c4         db  0x18 ; '.'
00000000000186c5         db  0x5c ; '\'
00000000000186c6         db  0xff ; '.'
00000000000186c7         db  0xff ; '.'
00000000000186c8         db  0x18 ; '.'
00000000000186c9         db  0x5c ; '\'
00000000000186ca         db  0xff ; '.'
00000000000186cb         db  0xff ; '.'
00000000000186cc         db  0x18 ; '.'
00000000000186cd         db  0x5c ; '\'
00000000000186ce         db  0xff ; '.'
00000000000186cf         db  0xff ; '.'
00000000000186d0         db  0x18 ; '.'
00000000000186d1         db  0x5c ; '\'
00000000000186d2         db  0xff ; '.'
00000000000186d3         db  0xff ; '.'
00000000000186d4         db  0x18 ; '.'
00000000000186d5         db  0x5c ; '\'
00000000000186d6         db  0xff ; '.'
00000000000186d7         db  0xff ; '.'
00000000000186d8         db  0x18 ; '.'
00000000000186d9         db  0x5c ; '\'
00000000000186da         db  0xff ; '.'
00000000000186db         db  0xff ; '.'
00000000000186dc         db  0x18 ; '.'
00000000000186dd         db  0x5c ; '\'
00000000000186de         db  0xff ; '.'
00000000000186df         db  0xff ; '.'
00000000000186e0         db  0x18 ; '.'
00000000000186e1         db  0x5c ; '\'
00000000000186e2         db  0xff ; '.'
00000000000186e3         db  0xff ; '.'
00000000000186e4         db  0x18 ; '.'
00000000000186e5         db  0x5c ; '\'
00000000000186e6         db  0xff ; '.'
00000000000186e7         db  0xff ; '.'
00000000000186e8         db  0x18 ; '.'
00000000000186e9         db  0x5c ; '\'
00000000000186ea         db  0xff ; '.'
00000000000186eb         db  0xff ; '.'
00000000000186ec         db  0x18 ; '.'
00000000000186ed         db  0x5c ; '\'
00000000000186ee         db  0xff ; '.'
00000000000186ef         db  0xff ; '.'
00000000000186f0         db  0x18 ; '.'
00000000000186f1         db  0x5c ; '\'
00000000000186f2         db  0xff ; '.'
00000000000186f3         db  0xff ; '.'
00000000000186f4         db  0x18 ; '.'
00000000000186f5         db  0x5c ; '\'
00000000000186f6         db  0xff ; '.'
00000000000186f7         db  0xff ; '.'
00000000000186f8         db  0x18 ; '.'
00000000000186f9         db  0x5c ; '\'
00000000000186fa         db  0xff ; '.'
00000000000186fb         db  0xff ; '.'
00000000000186fc         db  0x18 ; '.'
00000000000186fd         db  0x5c ; '\'
00000000000186fe         db  0xff ; '.'
00000000000186ff         db  0xff ; '.'
0000000000018700         db  0x18 ; '.'
0000000000018701         db  0x5c ; '\'
0000000000018702         db  0xff ; '.'
0000000000018703         db  0xff ; '.'
0000000000018704         db  0x18 ; '.'
0000000000018705         db  0x5c ; '\'
0000000000018706         db  0xff ; '.'
0000000000018707         db  0xff ; '.'
0000000000018708         db  0x18 ; '.'
0000000000018709         db  0x5c ; '\'
000000000001870a         db  0xff ; '.'
000000000001870b         db  0xff ; '.'
000000000001870c         db  0x18 ; '.'
000000000001870d         db  0x5c ; '\'
000000000001870e         db  0xff ; '.'
000000000001870f         db  0xff ; '.'
0000000000018710         db  0x18 ; '.'
0000000000018711         db  0x5c ; '\'
0000000000018712         db  0xff ; '.'
0000000000018713         db  0xff ; '.'
0000000000018714         db  0x48 ; 'H'
0000000000018715         db  0x5c ; '\'
0000000000018716         db  0xff ; '.'
0000000000018717         db  0xff ; '.'
0000000000018718         db  0x18 ; '.'
0000000000018719         db  0x5b ; '['
000000000001871a         db  0xff ; '.'
000000000001871b         db  0xff ; '.'
000000000001871c         db  0x18 ; '.'
000000000001871d         db  0x5c ; '\'
000000000001871e         db  0xff ; '.'
000000000001871f         db  0xff ; '.'
0000000000018720         db  0x48 ; 'H'
0000000000018721         db  0x5c ; '\'
0000000000018722         db  0xff ; '.'
0000000000018723         db  0xff ; '.'
0000000000018724         db  0x18 ; '.'
0000000000018725         db  0x5c ; '\'
0000000000018726         db  0xff ; '.'
0000000000018727         db  0xff ; '.'
0000000000018728         db  0x48 ; 'H'
0000000000018729         db  0x5c ; '\'
000000000001872a         db  0xff ; '.'
000000000001872b         db  0xff ; '.'
000000000001872c         db  0x18 ; '.'
000000000001872d         db  0x5c ; '\'
000000000001872e         db  0xff ; '.'
000000000001872f         db  0xff ; '.'
0000000000018730         db  0x18 ; '.'
0000000000018731         db  0x5c ; '\'
0000000000018732         db  0xff ; '.'
0000000000018733         db  0xff ; '.'
0000000000018734         db  0x18 ; '.'
0000000000018735         db  0x5c ; '\'
0000000000018736         db  0xff ; '.'
0000000000018737         db  0xff ; '.'
0000000000018738         db  0x18 ; '.'
0000000000018739         db  0x5c ; '\'
000000000001873a         db  0xff ; '.'
000000000001873b         db  0xff ; '.'
000000000001873c         db  0x18 ; '.'
000000000001873d         db  0x5c ; '\'
000000000001873e         db  0xff ; '.'
000000000001873f         db  0xff ; '.'
0000000000018740         db  0x18 ; '.'
0000000000018741         db  0x5c ; '\'
0000000000018742         db  0xff ; '.'
0000000000018743         db  0xff ; '.'
0000000000018744         db  0x18 ; '.'
0000000000018745         db  0x5c ; '\'
0000000000018746         db  0xff ; '.'
0000000000018747         db  0xff ; '.'
0000000000018748         db  0x18 ; '.'
0000000000018749         db  0x5c ; '\'
000000000001874a         db  0xff ; '.'
000000000001874b         db  0xff ; '.'
000000000001874c         db  0x18 ; '.'
000000000001874d         db  0x5c ; '\'
000000000001874e         db  0xff ; '.'
000000000001874f         db  0xff ; '.'
0000000000018750         db  0x18 ; '.'
0000000000018751         db  0x5c ; '\'
0000000000018752         db  0xff ; '.'
0000000000018753         db  0xff ; '.'
0000000000018754         db  0x18 ; '.'
0000000000018755         db  0x5c ; '\'
0000000000018756         db  0xff ; '.'
0000000000018757         db  0xff ; '.'
0000000000018758         db  0x18 ; '.'
0000000000018759         db  0x5c ; '\'
000000000001875a         db  0xff ; '.'
000000000001875b         db  0xff ; '.'
000000000001875c         db  0x18 ; '.'
000000000001875d         db  0x5c ; '\'
000000000001875e         db  0xff ; '.'
000000000001875f         db  0xff ; '.'
0000000000018760         db  0x18 ; '.'
0000000000018761         db  0x5c ; '\'
0000000000018762         db  0xff ; '.'
0000000000018763         db  0xff ; '.'
0000000000018764         db  0x18 ; '.'
0000000000018765         db  0x5c ; '\'
0000000000018766         db  0xff ; '.'
0000000000018767         db  0xff ; '.'
0000000000018768         db  0x18 ; '.'
0000000000018769         db  0x5c ; '\'
000000000001876a         db  0xff ; '.'
000000000001876b         db  0xff ; '.'
000000000001876c         db  0x18 ; '.'
000000000001876d         db  0x5c ; '\'
000000000001876e         db  0xff ; '.'
000000000001876f         db  0xff ; '.'
0000000000018770         db  0x18 ; '.'
0000000000018771         db  0x5c ; '\'
0000000000018772         db  0xff ; '.'
0000000000018773         db  0xff ; '.'
0000000000018774         db  0x18 ; '.'
0000000000018775         db  0x5c ; '\'
0000000000018776         db  0xff ; '.'
0000000000018777         db  0xff ; '.'
0000000000018778         db  0x18 ; '.'
0000000000018779         db  0x5c ; '\'
000000000001877a         db  0xff ; '.'
000000000001877b         db  0xff ; '.'
000000000001877c         db  0x18 ; '.'
000000000001877d         db  0x5c ; '\'
000000000001877e         db  0xff ; '.'
000000000001877f         db  0xff ; '.'
0000000000018780         db  0x18 ; '.'
0000000000018781         db  0x5c ; '\'
0000000000018782         db  0xff ; '.'
0000000000018783         db  0xff ; '.'
0000000000018784         db  0x18 ; '.'
0000000000018785         db  0x5c ; '\'
0000000000018786         db  0xff ; '.'
0000000000018787         db  0xff ; '.'
0000000000018788         db  0x18 ; '.'
0000000000018789         db  0x5c ; '\'
000000000001878a         db  0xff ; '.'
000000000001878b         db  0xff ; '.'
000000000001878c         db  0x18 ; '.'
000000000001878d         db  0x5c ; '\'
000000000001878e         db  0xff ; '.'
000000000001878f         db  0xff ; '.'
0000000000018790         db  0x18 ; '.'
0000000000018791         db  0x5c ; '\'
0000000000018792         db  0xff ; '.'
0000000000018793         db  0xff ; '.'
0000000000018794         db  0x88 ; '.'
0000000000018795         db  0x57 ; 'W'
0000000000018796         db  0xff ; '.'
0000000000018797         db  0xff ; '.'
0000000000018798         db  0x48 ; 'H'
0000000000018799         db  0x5c ; '\'
000000000001879a         db  0xff ; '.'
000000000001879b         db  0xff ; '.'
000000000001879c         db  0x88 ; '.'
000000000001879d         db  0x57 ; 'W'
000000000001879e         db  0xff ; '.'
000000000001879f         db  0xff ; '.'
00000000000187a0         db  0x30 ; '0'
00000000000187a1         db  0x5c ; '\'
00000000000187a2         db  0xff ; '.'
00000000000187a3         db  0xff ; '.'
00000000000187a4         db  0x00 ; '.'
00000000000187a5         db  0x00 ; '.'
00000000000187a6         db  0x00 ; '.'
00000000000187a7         db  0x00 ; '.'
00000000000187a8         db  0x00 ; '.'
00000000000187a9         db  0x00 ; '.'
00000000000187aa         db  0x00 ; '.'
00000000000187ab         db  0x00 ; '.'
00000000000187ac         db  0x00 ; '.'
00000000000187ad         db  0x00 ; '.'
00000000000187ae         db  0x00 ; '.'
00000000000187af         db  0x00 ; '.'
00000000000187b0         db  0x00 ; '.'
00000000000187b1         db  0x00 ; '.'
00000000000187b2         db  0x00 ; '.'
00000000000187b3         db  0x00 ; '.'
00000000000187b4         db  0x00 ; '.'
00000000000187b5         db  0x00 ; '.'
00000000000187b6         db  0x00 ; '.'
00000000000187b7         db  0x00 ; '.'
00000000000187b8         db  0x00 ; '.'
00000000000187b9         db  0x00 ; '.'
00000000000187ba         db  0x00 ; '.'
00000000000187bb         db  0x00 ; '.'
00000000000187bc         db  0x00 ; '.'
00000000000187bd         db  0x00 ; '.'
00000000000187be         db  0x00 ; '.'
00000000000187bf         db  0x00 ; '.'
                     quoting_style_vals:
00000000000187c0         db  0x00 ; '.'
00000000000187c1         db  0x00 ; '.'
00000000000187c2         db  0x00 ; '.'
00000000000187c3         db  0x00 ; '.'
00000000000187c4         db  0x01 ; '.'
00000000000187c5         db  0x00 ; '.'
00000000000187c6         db  0x00 ; '.'
00000000000187c7         db  0x00 ; '.'
00000000000187c8         db  0x02 ; '.'
00000000000187c9         db  0x00 ; '.'
00000000000187ca         db  0x00 ; '.'
00000000000187cb         db  0x00 ; '.'
00000000000187cc         db  0x03 ; '.'
00000000000187cd         db  0x00 ; '.'
00000000000187ce         db  0x00 ; '.'
00000000000187cf         db  0x00 ; '.'
00000000000187d0         db  0x04 ; '.'
00000000000187d1         db  0x00 ; '.'
00000000000187d2         db  0x00 ; '.'
00000000000187d3         db  0x00 ; '.'
00000000000187d4         db  0x05 ; '.'
00000000000187d5         db  0x00 ; '.'
00000000000187d6         db  0x00 ; '.'
00000000000187d7         db  0x00 ; '.'
00000000000187d8         db  0x06 ; '.'
00000000000187d9         db  0x00 ; '.'
00000000000187da         db  0x00 ; '.'
00000000000187db         db  0x00 ; '.'
00000000000187dc         db  0x07 ; '.'
00000000000187dd         db  0x00 ; '.'
00000000000187de         db  0x00 ; '.'
00000000000187df         db  0x00 ; '.'
00000000000187e0         db  0x08 ; '.'
00000000000187e1         db  0x00 ; '.'
00000000000187e2         db  0x00 ; '.'
00000000000187e3         db  0x00 ; '.'
00000000000187e4         db  0x09 ; '.'
00000000000187e5         db  0x00 ; '.'
00000000000187e6         db  0x00 ; '.'
00000000000187e7         db  0x00 ; '.'
                     aWdvalchild0:
00000000000187e8         db         "wd->val.child == 0", 0                     ; DATA XREF=savewd_chdir+459
                     aErrnolocation4:
00000000000187fb         db         "(*__errno_location ()) == 4", 0            ; DATA XREF=savewd_restore+279
                     aWdvalchild0_18817:        // aWdvalchild0
0000000000018817         db         "wd->val.child < 0", 0                      ; DATA XREF=savewd_finish+69
0000000000018829         align      16
                     aCoreutils831li:
0000000000018830         db         "../coreutils-8.31/lib/savewd.c", 0         ; DATA XREF=savewd_chdir+452, savewd_chdir+626, savewd_chdir+657, savewd_restore+272, savewd_restore+308, savewd_finish+62, savewd_finish+93
000000000001884f         align      16
                     switch_table_18850:        // switch_table
0000000000018850         dd         savewd_chdir.loc_102ab-switch_table_18850, savewd_chdir.loc_101e0-switch_table_18850, savewd_chdir.loc_1008f-switch_table_18850, savewd_chdir.loc_101f0-switch_table_18850 ; switch table used at 0x10153 containing 6 entries, DATA XREF=savewd_chdir+261
0000000000018860         dd         2 dup (savewd_chdir.loc_1008f-switch_table_18850)
                     switch_table_18868:        // switch_table
0000000000018868         dd         2 dup (savewd_restore.loc_10343-switch_table_18868), savewd_restore.loc_103c0-switch_table_18868, savewd_restore.loc_10330-switch_table_18868, savewd_restore.loc_10368-switch_table_18868 ; switch table used at 0x10324 containing 5 entries, DATA XREF=savewd_restore+35
                     switch_table_1887c:        // switch_table
000000000001887c         dd         savewd_finish.loc_10478-switch_table_1887c, 2 dup (savewd_finish.loc_10470-switch_table_1887c), savewd_finish.loc_10480-switch_table_1887c, savewd_finish.loc_10478-switch_table_1887c ; switch table used at 0x10469 containing 5 entries, DATA XREF=savewd_finish+8
                     __PRETTY_FUNCTION__.4491:
0000000000018890         db         "savewd_finish", 0                          ; DATA XREF=savewd_finish+55, savewd_finish+86
000000000001889e         align      32
                     __PRETTY_FUNCTION__.4477:
00000000000188a0         db         "savewd_restore", 0                         ; DATA XREF=savewd_restore+265, savewd_restore+301
00000000000188af         align      16
                     __PRETTY_FUNCTION__.4446:
00000000000188b0         db         "savewd_save", 0                            ; DATA XREF=savewd_chdir+650
00000000000188bc         align      64
                     __PRETTY_FUNCTION__.4461:
00000000000188c0         db         "savewd_chdir", 0                           ; DATA XREF=savewd_chdir+445, savewd_chdir+619
00000000000188cd         align      16
                     aCoreutils831li_188d0:        // aCoreutils831li
00000000000188d0         db         "../coreutils-8.31/lib/tempname.c", 0       ; DATA XREF=gen_tempname_len+29
00000000000188f1         align      8
                     aInvalidKindInG:
00000000000188f8         db         "! \"invalid KIND in __gen_tempname\"", 0   ; DATA XREF=gen_tempname_len+36
000000000001891b         align      32
                     __PRETTY_FUNCTION__.5642:
0000000000018920         db         "gen_tempname_len", 0                       ; DATA XREF=gen_tempname_len+22
0000000000018931         align      64
                     letters:
0000000000018940         db         "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789", 0 ; DATA XREF=try_tempname_len+144
                     aSSSn:
000000000001897f         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
000000000001898b         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
0000000000018992         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
0000000000018993         db  0x43 ; 'C'
0000000000018994         db  0x29 ; ')'
0000000000018995         db  0x00 ; '.'
                     aWrittenBySn:
0000000000018996         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
00000000000189a6         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
00000000000189bd         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
00000000000189d9         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
00000000000189ee         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
0000000000018a04         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
                     aNlicenseGplv3G:
0000000000018a18         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
0000000000018ae4         align      8
                     aWrittenBySSSna:
0000000000018ae8         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_18b08:        // aWrittenBySSSns
0000000000018b08         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
0000000000018b2c         align      16
                     aWrittenBySSSns_18b30:        // aWrittenBySSSns
0000000000018b30         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_18b58:        // aWrittenBySSSns
0000000000018b58         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
0000000000018b84         align      8
                     aWrittenBySSSns_18b88:        // aWrittenBySSSns
0000000000018b88         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
0000000000018bb8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
0000000000018bec         align      16
                     aWrittenBySSSns_18bf0:        // aWrittenBySSSns
0000000000018bf0         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
0000000000018c2c         align      16
                     aGeneralHelpUsi:
0000000000018c30         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
0000000000018c71         align      4
                     switch_table_18c74:        // switch_table
0000000000018c74         dd         version_etc_arn.loc_11ad6-switch_table_18c74, version_etc_arn.loc_11b68-switch_table_18c74, version_etc_arn.loc_11ba8-switch_table_18c74, version_etc_arn.loc_11bf0-switch_table_18c74 ; switch table used at 0x11a54 containing 10 entries, DATA XREF=version_etc_arn+150
0000000000018c84         dd         version_etc_arn.loc_11c40-switch_table_18c74, version_etc_arn.loc_11c98-switch_table_18c74, version_etc_arn.loc_11cc8-switch_table_18c74, version_etc_arn.loc_11d30-switch_table_18c74
0000000000018c94         dd         version_etc_arn.loc_11a60-switch_table_18c74, version_etc_arn.loc_11b10-switch_table_18c74
0000000000018c9c         align      32
                     version_etc_copyright:
0000000000018ca0         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
0000000000018ccf         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
                     aCoreutils831li_18ce0:        // aCoreutils831li
0000000000018ce0         db         "../coreutils-8.31/lib/xstrtol.c", 0        ; DATA XREF=xstrtoul+908
                     a0StrtolbaseStr:
0000000000018d00         db         "0 <= strtol_base && strtol_base <= 36", 0  ; DATA XREF=xstrtoul+915
0000000000018d26         align      8
                     switch_table_18d28:        // switch_table
0000000000018d28         dd         xstrtoul.loc_125c6-switch_table_18d28, 2 dup (xstrtoul.loc_124bc-switch_table_18d28), xstrtoul.loc_125a3-switch_table_18d28, xstrtoul.loc_124bc-switch_table_18d28 ; switch table used at 0x12476 containing 54 entries, DATA XREF=xstrtoul+452
0000000000018d3c         dd         xstrtoul.loc_125dc-switch_table_18d28, 3 dup (xstrtoul.loc_124bc-switch_table_18d28), xstrtoul.loc_1255f-switch_table_18d28, xstrtoul.loc_124bc-switch_table_18d28
0000000000018d54         dd         xstrtoul.loc_12478-switch_table_18d28, 2 dup (xstrtoul.loc_124bc-switch_table_18d28), xstrtoul.loc_12580-switch_table_18d28, 3 dup (xstrtoul.loc_124bc-switch_table_18d28)
0000000000018d70         dd         xstrtoul.loc_1253f-switch_table_18d28, 4 dup (xstrtoul.loc_124bc-switch_table_18d28), xstrtoul.loc_1251a-switch_table_18d28, xstrtoul.loc_124f4-switch_table_18d28
0000000000018d8c         dd         7 dup (xstrtoul.loc_124bc-switch_table_18d28), xstrtoul.loc_124dd-switch_table_18d28, xstrtoul.loc_124a0-switch_table_18d28, 3 dup (xstrtoul.loc_124bc-switch_table_18d28)
0000000000018dbc         dd         xstrtoul.loc_125dc-switch_table_18d28, 3 dup (xstrtoul.loc_124bc-switch_table_18d28), xstrtoul.loc_1255f-switch_table_18d28, xstrtoul.loc_124bc-switch_table_18d28
0000000000018dd4         dd         xstrtoul.loc_12478-switch_table_18d28, 6 dup (xstrtoul.loc_124bc-switch_table_18d28), xstrtoul.loc_1253f-switch_table_18d28, 2 dup (xstrtoul.loc_124bc-switch_table_18d28)
0000000000018dfc         dd         xstrtoul.loc_124c7-switch_table_18d28
                     __PRETTY_FUNCTION__.4162:
0000000000018e00         db         "xstrtoul", 0                               ; DATA XREF=xstrtoul+901
                     aInvalidArgumen:
0000000000018e09         db         "invalid argument %s for %s", 0             ; DATA XREF=argmatch_invalid+96
                     aAmbiguousArgum:
0000000000018e24         db         "ambiguous argument %s for %s", 0           ; DATA XREF=argmatch_invalid+21
                     aValidArguments:
0000000000018e41         db         "Valid arguments are:", 0                   ; DATA XREF=argmatch_valid+18
                     aNS:
0000000000018e56         db         "\n  - %s", 0                               ; DATA XREF=argmatch_valid+102
0000000000018e5e         db  0x2c ; ','                                         ; DATA XREF=argmatch_valid+181
0000000000018e5f         db  0x20 ; ' '
0000000000018e60         db  0x25 ; '%'                                         ; DATA XREF=copy_acl+114, close_stdin+242, close_stdout+143, same_nameat.part.0+223, same_nameat.part.0+263, xalloc_die+29
0000000000018e61         db  0x73 ; 's'
0000000000018e62         db  0x00 ; '.'
0000000000018e63         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
0000000000018e64         db  0x00 ; '.'
                     aPosix:
0000000000018e65         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
0000000000018e6b         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
                     aSEndOfFile:
0000000000018e71         db         "%s: end of file", 0                        ; DATA XREF=randread_error+77
                     aSReadError:
0000000000018e81         db         "%s: read error", 0                         ; DATA XREF=randread_error+37
                     aDevurandom:
0000000000018e90         db         "/dev/urandom", 0                           ; DATA XREF=randread_new+203
0000000000018e9d         db  0x72 ; 'r'                                         ; DATA XREF=randread_new+50
0000000000018e9e         db  0x62 ; 'b'
0000000000018e9f         db  0x00 ; '.'
                     switch_table_18ea0:        // switch_table
0000000000018ea0         dd         vasnprintf.loc_15186-switch_table_18ea0, vasnprintf.loc_14c20-switch_table_18ea0, vasnprintf.loc_14bf0-switch_table_18ea0, vasnprintf.loc_14b68-switch_table_18ea0 ; switch table used at 0x147bb containing 18 entries, DATA XREF=vasnprintf+1357
0000000000018eb0         dd         vasnprintf.loc_14b28-switch_table_18ea0, 2 dup (vasnprintf.loc_148f8-switch_table_18ea0), 4 dup (vasnprintf.loc_147c0-switch_table_18ea0), vasnprintf.loc_14aa8-switch_table_18ea0
0000000000018ed0         dd         vasnprintf.loc_14a20-switch_table_18ea0, 2 dup (vasnprintf.loc_148f8-switch_table_18ea0), 3 dup (vasnprintf.loc_147c0-switch_table_18ea0)
                     switch_table_18ee8:        // switch_table
0000000000018ee8         dd         vasnprintf.loc_14fd0-switch_table_18ee8, vasnprintf.loc_14ff0-switch_table_18ee8, vasnprintf.loc_14fe0-switch_table_18ee8, 2 dup (vasnprintf.loc_14ea0-switch_table_18ee8) ; switch table used at 0x14d60 containing 5 entries, DATA XREF=vasnprintf+2798
                     aNull:
0000000000018efc         db         "(NULL)", 0                                 ; DATA XREF=printf_fetchargs+24
0000000000018f03         db  0x00 ; '.'
0000000000018f04         db  0x00 ; '.'
0000000000018f05         db  0x00 ; '.'
0000000000018f06         db  0x00 ; '.'
0000000000018f07         db  0x00 ; '.'
0000000000018f08         db  0x00 ; '.'
0000000000018f09         db  0x00 ; '.'
0000000000018f0a         db  0x00 ; '.'
0000000000018f0b         db  0x00 ; '.'
0000000000018f0c         db  0x00 ; '.'
0000000000018f0d         db  0x00 ; '.'
0000000000018f0e         db  0x00 ; '.'
0000000000018f0f         db  0x00 ; '.'
0000000000018f10         db  0x80 ; '.'                                         ; DATA XREF=printf_fetchargs+10
0000000000018f11         db  0xc5 ; '.'
0000000000018f12         db  0xff ; '.'
0000000000018f13         db  0xff ; '.'
0000000000018f14         db  0xcc ; '.'
0000000000018f15         db  0xc5 ; '.'
0000000000018f16         db  0xff ; '.'
0000000000018f17         db  0xff ; '.'
0000000000018f18         db  0xcc ; '.'
0000000000018f19         db  0xc5 ; '.'
0000000000018f1a         db  0xff ; '.'
0000000000018f1b         db  0xff ; '.'
0000000000018f1c         db  0xee ; '.'
0000000000018f1d         db  0xc5 ; '.'
0000000000018f1e         db  0xff ; '.'
0000000000018f1f         db  0xff ; '.'
0000000000018f20         db  0xee ; '.'
0000000000018f21         db  0xc5 ; '.'
0000000000018f22         db  0xff ; '.'
0000000000018f23         db  0xff ; '.'
0000000000018f24         db  0xaa ; '.'
0000000000018f25         db  0xc5 ; '.'
0000000000018f26         db  0xff ; '.'
0000000000018f27         db  0xff ; '.'
0000000000018f28         db  0xaa ; '.'
0000000000018f29         db  0xc5 ; '.'
0000000000018f2a         db  0xff ; '.'
0000000000018f2b         db  0xff ; '.'
0000000000018f2c         db  0x86 ; '.'
0000000000018f2d         db  0xc5 ; '.'
0000000000018f2e         db  0xff ; '.'
0000000000018f2f         db  0xff ; '.'
0000000000018f30         db  0x86 ; '.'
0000000000018f31         db  0xc5 ; '.'
0000000000018f32         db  0xff ; '.'
0000000000018f33         db  0xff ; '.'
0000000000018f34         db  0x86 ; '.'
0000000000018f35         db  0xc5 ; '.'
0000000000018f36         db  0xff ; '.'
0000000000018f37         db  0xff ; '.'
0000000000018f38         db  0x86 ; '.'
0000000000018f39         db  0xc5 ; '.'
0000000000018f3a         db  0xff ; '.'
0000000000018f3b         db  0xff ; '.'
0000000000018f3c         db  0x42 ; 'B'
0000000000018f3d         db  0xc6 ; '.'
0000000000018f3e         db  0xff ; '.'
0000000000018f3f         db  0xff ; '.'
0000000000018f40         db  0x50 ; 'P'
0000000000018f41         db  0xc5 ; '.'
0000000000018f42         db  0xff ; '.'
0000000000018f43         db  0xff ; '.'
0000000000018f44         db  0xaa ; '.'
0000000000018f45         db  0xc5 ; '.'
0000000000018f46         db  0xff ; '.'
0000000000018f47         db  0xff ; '.'
0000000000018f48         db  0xaa ; '.'
0000000000018f49         db  0xc5 ; '.'
0000000000018f4a         db  0xff ; '.'
0000000000018f4b         db  0xff ; '.'
0000000000018f4c         db  0x14 ; '.'
0000000000018f4d         db  0xc6 ; '.'
0000000000018f4e         db  0xff ; '.'
0000000000018f4f         db  0xff ; '.'
0000000000018f50         db  0x70 ; 'p'
0000000000018f51         db  0xc6 ; '.'
0000000000018f52         db  0xff ; '.'
0000000000018f53         db  0xff ; '.'
0000000000018f54         db  0x86 ; '.'
0000000000018f55         db  0xc5 ; '.'
0000000000018f56         db  0xff ; '.'
0000000000018f57         db  0xff ; '.'
0000000000018f58         db  0x86 ; '.'
0000000000018f59         db  0xc5 ; '.'
0000000000018f5a         db  0xff ; '.'
0000000000018f5b         db  0xff ; '.'
0000000000018f5c         db  0x86 ; '.'
0000000000018f5d         db  0xc5 ; '.'
0000000000018f5e         db  0xff ; '.'
0000000000018f5f         db  0xff ; '.'
0000000000018f60         db  0x86 ; '.'
0000000000018f61         db  0xc5 ; '.'
0000000000018f62         db  0xff ; '.'
0000000000018f63         db  0xff ; '.'
0000000000018f64         db  0x86 ; '.'
0000000000018f65         db  0xc5 ; '.'
0000000000018f66         db  0xff ; '.'
0000000000018f67         db  0xff ; '.'
0000000000018f68         db  0x86 ; '.'
0000000000018f69         db  0xc5 ; '.'
0000000000018f6a         db  0xff ; '.'
0000000000018f6b         db  0xff ; '.'
0000000000018f6c         db  0x00 ; '.'
0000000000018f6d         db  0x00 ; '.'
0000000000018f6e         db  0x00 ; '.'
0000000000018f6f         db  0x00 ; '.'
                     wide_null_string.2696:
0000000000018f70         db  0x28 ; '('                                         ; DATA XREF=printf_fetchargs+17
0000000000018f71         db  0x00 ; '.'
0000000000018f72         db  0x00 ; '.'
0000000000018f73         db  0x00 ; '.'
0000000000018f74         db  0x4e ; 'N'
0000000000018f75         db  0x00 ; '.'
0000000000018f76         db  0x00 ; '.'
0000000000018f77         db  0x00 ; '.'
0000000000018f78         db  0x55 ; 'U'
0000000000018f79         db  0x00 ; '.'
0000000000018f7a         db  0x00 ; '.'
0000000000018f7b         db  0x00 ; '.'
0000000000018f7c         db  0x4c ; 'L'
0000000000018f7d         db  0x00 ; '.'
0000000000018f7e         db  0x00 ; '.'
0000000000018f7f         db  0x00 ; '.'
0000000000018f80         db  0x4c ; 'L'
0000000000018f81         db  0x00 ; '.'
0000000000018f82         db  0x00 ; '.'
0000000000018f83         db  0x00 ; '.'
0000000000018f84         db  0x29 ; ')'
0000000000018f85         db  0x00 ; '.'
0000000000018f86         db  0x00 ; '.'
0000000000018f87         db  0x00 ; '.'
0000000000018f88         db  0x00 ; '.'
0000000000018f89         db  0x00 ; '.'
0000000000018f8a         db  0x00 ; '.'
0000000000018f8b         db  0x00 ; '.'
                     switch_table_18f8c:        // switch_table
0000000000018f8c         dd         printf_parse.loc_158db-switch_table_18f8c, 27 dup (printf_parse.loc_15e6b-switch_table_18f8c), printf_parse.loc_15ddb-switch_table_18f8c, printf_parse.loc_15e6b-switch_table_18f8c ; switch table used at 0x15865 containing 84 entries, DATA XREF=printf_parse+564
0000000000019004         dd         printf_parse.loc_15dfc-switch_table_18f8c, printf_parse.loc_15e6b-switch_table_18f8c, 3 dup (printf_parse.loc_15ddb-switch_table_18f8c), 11 dup (printf_parse.loc_15e6b-switch_table_18f8c)
0000000000019044         dd         printf_parse.loc_15867-switch_table_18f8c, 4 dup (printf_parse.loc_15e6b-switch_table_18f8c), printf_parse.loc_15e0c-switch_table_18f8c, 8 dup (printf_parse.loc_15e6b-switch_table_18f8c)
000000000001907c         dd         printf_parse.loc_15ddb-switch_table_18f8c, printf_parse.loc_15e6b-switch_table_18f8c, printf_parse.loc_15d68-switch_table_18f8c, printf_parse.loc_15d7b-switch_table_18f8c
000000000001908c         dd         3 dup (printf_parse.loc_15ddb-switch_table_18f8c), printf_parse.loc_15e6b-switch_table_18f8c, printf_parse.loc_15d7b-switch_table_18f8c, 4 dup (printf_parse.loc_15e6b-switch_table_18f8c)
00000000000190b0         dd         printf_parse.loc_15d1c-switch_table_18f8c, printf_parse.loc_15e0c-switch_table_18f8c, printf_parse.loc_15e60-switch_table_18f8c, 2 dup (printf_parse.loc_15e6b-switch_table_18f8c)
00000000000190c4         dd         printf_parse.loc_15dc8-switch_table_18f8c, printf_parse.loc_15e6b-switch_table_18f8c, printf_parse.loc_15e0c-switch_table_18f8c, 2 dup (printf_parse.loc_15e6b-switch_table_18f8c)
00000000000190d8         dd         printf_parse.loc_15e0c-switch_table_18f8c


        ; Section .eh_frame_hdr
        ; Range: [0x190dc; 0x198f0[ (2068 bytes)
        ; File offset : [102620; 104688[ (2068 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

00000000000190dc         db  0x01 ; '.'
00000000000190dd         db  0x1b ; '.'
00000000000190de         db  0x03 ; '.'
00000000000190df         db  0x3b ; ';'
00000000000190e0         db  0x10 ; '.'
00000000000190e1         db  0x08 ; '.'
00000000000190e2         db  0x00 ; '.'
00000000000190e3         db  0x00 ; '.'
00000000000190e4         db  0x01 ; '.'
00000000000190e5         db  0x01 ; '.'
00000000000190e6         db  0x00 ; '.'
00000000000190e7         db  0x00 ; '.'
00000000000190e8         db  0x04 ; '.'
00000000000190e9         db  0x98 ; '.'
00000000000190ea         db  0xfe ; '.'
00000000000190eb         db  0xff ; '.'
00000000000190ec         db  0x5c ; '\'
00000000000190ed         db  0x08 ; '.'
00000000000190ee         db  0x00 ; '.'
00000000000190ef         db  0x00 ; '.'
00000000000190f0         db  0xf4 ; '.'
00000000000190f1         db  0x9f ; '.'
00000000000190f2         db  0xfe ; '.'
00000000000190f3         db  0xff ; '.'
00000000000190f4         db  0x84 ; '.'
00000000000190f5         db  0x08 ; '.'
00000000000190f6         db  0x00 ; '.'
00000000000190f7         db  0x00 ; '.'
00000000000190f8         db  0x04 ; '.'
00000000000190f9         db  0xa0 ; '.'
00000000000190fa         db  0xfe ; '.'
00000000000190fb         db  0xff ; '.'
00000000000190fc         db  0xfc ; '.'
00000000000190fd         db  0x0a ; '.'
00000000000190fe         db  0x00 ; '.'
00000000000190ff         db  0x00 ; '.'
0000000000019100         db  0x1a ; '.'
0000000000019101         db  0xa0 ; '.'
0000000000019102         db  0xfe ; '.'
0000000000019103         db  0xff ; '.'
0000000000019104         db  0x10 ; '.'
0000000000019105         db  0x0b ; '.'
0000000000019106         db  0x00 ; '.'
0000000000019107         db  0x00 ; '.'
0000000000019108         db  0x54 ; 'T'
0000000000019109         db  0xa0 ; '.'
000000000001910a         db  0xfe ; '.'
000000000001910b         db  0xff ; '.'
000000000001910c         db  0xf8 ; '.'
000000000001910d         db  0x09 ; '.'
000000000001910e         db  0x00 ; '.'
000000000001910f         db  0x00 ; '.'
0000000000019110         db  0x54 ; 'T'
0000000000019111         db  0xad ; '.'
0000000000019112         db  0xfe ; '.'
0000000000019113         db  0xff ; '.'
0000000000019114         db  0x2c ; ','
0000000000019115         db  0x08 ; '.'
0000000000019116         db  0x00 ; '.'
0000000000019117         db  0x00 ; '.'
0000000000019118         db  0x64 ; 'd'
0000000000019119         db  0xae ; '.'
000000000001911a         db  0xfe ; '.'
000000000001911b         db  0xff ; '.'
000000000001911c         db  0x9c ; '.'
000000000001911d         db  0x08 ; '.'
000000000001911e         db  0x00 ; '.'
000000000001911f         db  0x00 ; '.'
0000000000019120         db  0x44 ; 'D'
0000000000019121         db  0xb0 ; '.'
0000000000019122         db  0xfe ; '.'
0000000000019123         db  0xff ; '.'
0000000000019124         db  0xd8 ; '.'
0000000000019125         db  0x08 ; '.'
0000000000019126         db  0x00 ; '.'
0000000000019127         db  0x00 ; '.'
0000000000019128         db  0xb4 ; '.'
0000000000019129         db  0xb0 ; '.'
000000000001912a         db  0xfe ; '.'
000000000001912b         db  0xff ; '.'
000000000001912c         db  0x10 ; '.'
000000000001912d         db  0x09 ; '.'
000000000001912e         db  0x00 ; '.'
000000000001912f         db  0x00 ; '.'
0000000000019130         db  0xf4 ; '.'
0000000000019131         db  0xb0 ; '.'
0000000000019132         db  0xfe ; '.'
0000000000019133         db  0xff ; '.'
0000000000019134         db  0x2c ; ','
0000000000019135         db  0x09 ; '.'
0000000000019136         db  0x00 ; '.'
0000000000019137         db  0x00 ; '.'
0000000000019138         db  0x14 ; '.'
0000000000019139         db  0xb1 ; '.'
000000000001913a         db  0xfe ; '.'
000000000001913b         db  0xff ; '.'
000000000001913c         db  0x40 ; '@'
000000000001913d         db  0x09 ; '.'
000000000001913e         db  0x00 ; '.'
000000000001913f         db  0x00 ; '.'
0000000000019140         db  0x84 ; '.'
0000000000019141         db  0xb1 ; '.'
0000000000019142         db  0xfe ; '.'
0000000000019143         db  0xff ; '.'
0000000000019144         db  0x80 ; '.'
0000000000019145         db  0x09 ; '.'
0000000000019146         db  0x00 ; '.'
0000000000019147         db  0x00 ; '.'
0000000000019148         db  0x44 ; 'D'
0000000000019149         db  0xb8 ; '.'
000000000001914a         db  0xfe ; '.'
000000000001914b         db  0xff ; '.'
000000000001914c         db  0xcc ; '.'
000000000001914d         db  0x09 ; '.'
000000000001914e         db  0x00 ; '.'
000000000001914f         db  0x00 ; '.'
0000000000019150         db  0x94 ; '.'
0000000000019151         db  0xbc ; '.'
0000000000019152         db  0xfe ; '.'
0000000000019153         db  0xff ; '.'
0000000000019154         db  0x4c ; 'L'
0000000000019155         db  0x0a ; '.'
0000000000019156         db  0x00 ; '.'
0000000000019157         db  0x00 ; '.'
0000000000019158         db  0xb4 ; '.'
0000000000019159         db  0xbd ; '.'
000000000001915a         db  0xfe ; '.'
000000000001915b         db  0xff ; '.'
000000000001915c         db  0x7c ; '|'
000000000001915d         db  0x0a ; '.'
000000000001915e         db  0x00 ; '.'
000000000001915f         db  0x00 ; '.'
0000000000019160         db  0x04 ; '.'
0000000000019161         db  0xbe ; '.'
0000000000019162         db  0xfe ; '.'
0000000000019163         db  0xff ; '.'
0000000000019164         db  0xa0 ; '.'
0000000000019165         db  0x0a ; '.'
0000000000019166         db  0x00 ; '.'
0000000000019167         db  0x00 ; '.'
0000000000019168         db  0xb4 ; '.'
0000000000019169         db  0xbe ; '.'
000000000001916a         db  0xfe ; '.'
000000000001916b         db  0xff ; '.'
000000000001916c         db  0xdc ; '.'
000000000001916d         db  0x0a ; '.'
000000000001916e         db  0x00 ; '.'
000000000001916f         db  0x00 ; '.'
0000000000019170         db  0xf4 ; '.'
0000000000019171         db  0xbe ; '.'
0000000000019172         db  0xfe ; '.'
0000000000019173         db  0xff ; '.'
0000000000019174         db  0x28 ; '('
0000000000019175         db  0x0b ; '.'
0000000000019176         db  0x00 ; '.'
0000000000019177         db  0x00 ; '.'
0000000000019178         db  0xb4 ; '.'
0000000000019179         db  0xbf ; '.'
000000000001917a         db  0xfe ; '.'
000000000001917b         db  0xff ; '.'
000000000001917c         db  0x60 ; '`'
000000000001917d         db  0x0b ; '.'
000000000001917e         db  0x00 ; '.'
000000000001917f         db  0x00 ; '.'
0000000000019180         db  0xc4 ; '.'
0000000000019181         db  0xc0 ; '.'
0000000000019182         db  0xfe ; '.'
0000000000019183         db  0xff ; '.'
0000000000019184         db  0xc8 ; '.'
0000000000019185         db  0x0b ; '.'
0000000000019186         db  0x00 ; '.'
0000000000019187         db  0x00 ; '.'
0000000000019188         db  0x14 ; '.'
0000000000019189         db  0xc2 ; '.'
000000000001918a         db  0xfe ; '.'
000000000001918b         db  0xff ; '.'
000000000001918c         db  0x18 ; '.'
000000000001918d         db  0x0c ; '.'
000000000001918e         db  0x00 ; '.'
000000000001918f         db  0x00 ; '.'
0000000000019190         db  0xd4 ; '.'
0000000000019191         db  0xc2 ; '.'
0000000000019192         db  0xfe ; '.'
0000000000019193         db  0xff ; '.'
0000000000019194         db  0x68 ; 'h'
0000000000019195         db  0x0c ; '.'
0000000000019196         db  0x00 ; '.'
0000000000019197         db  0x00 ; '.'
0000000000019198         db  0xe4 ; '.'
0000000000019199         db  0xc6 ; '.'
000000000001919a         db  0xfe ; '.'
000000000001919b         db  0xff ; '.'
000000000001919c         db  0xd0 ; '.'
000000000001919d         db  0x0c ; '.'
000000000001919e         db  0x00 ; '.'
000000000001919f         db  0x00 ; '.'
00000000000191a0         db  0xb4 ; '.'
00000000000191a1         db  0xc7 ; '.'
00000000000191a2         db  0xfe ; '.'
00000000000191a3         db  0xff ; '.'
00000000000191a4         db  0x2c ; ','
00000000000191a5         db  0x0d ; '.'
00000000000191a6         db  0x00 ; '.'
00000000000191a7         db  0x00 ; '.'
00000000000191a8         db  0x34 ; '4'
00000000000191a9         db  0xc8 ; '.'
00000000000191aa         db  0xfe ; '.'
00000000000191ab         db  0xff ; '.'
00000000000191ac         db  0x64 ; 'd'
00000000000191ad         db  0x0d ; '.'
00000000000191ae         db  0x00 ; '.'
00000000000191af         db  0x00 ; '.'
00000000000191b0         db  0x64 ; 'd'
00000000000191b1         db  0xc8 ; '.'
00000000000191b2         db  0xfe ; '.'
00000000000191b3         db  0xff ; '.'
00000000000191b4         db  0x80 ; '.'
00000000000191b5         db  0x0d ; '.'
00000000000191b6         db  0x00 ; '.'
00000000000191b7         db  0x00 ; '.'
00000000000191b8         db  0x94 ; '.'
00000000000191b9         db  0xc8 ; '.'
00000000000191ba         db  0xfe ; '.'
00000000000191bb         db  0xff ; '.'
00000000000191bc         db  0x9c ; '.'
00000000000191bd         db  0x0d ; '.'
00000000000191be         db  0x00 ; '.'
00000000000191bf         db  0x00 ; '.'
00000000000191c0         db  0xd4 ; '.'
00000000000191c1         db  0xc8 ; '.'
00000000000191c2         db  0xfe ; '.'
00000000000191c3         db  0xff ; '.'
00000000000191c4         db  0xb8 ; '.'
00000000000191c5         db  0x0d ; '.'
00000000000191c6         db  0x00 ; '.'
00000000000191c7         db  0x00 ; '.'
00000000000191c8         db  0x04 ; '.'
00000000000191c9         db  0xc9 ; '.'
00000000000191ca         db  0xfe ; '.'
00000000000191cb         db  0xff ; '.'
00000000000191cc         db  0xd4 ; '.'
00000000000191cd         db  0x0d ; '.'
00000000000191ce         db  0x00 ; '.'
00000000000191cf         db  0x00 ; '.'
00000000000191d0         db  0x14 ; '.'
00000000000191d1         db  0xcb ; '.'
00000000000191d2         db  0xfe ; '.'
00000000000191d3         db  0xff ; '.'
00000000000191d4         db  0x54 ; 'T'
00000000000191d5         db  0x0e ; '.'
00000000000191d6         db  0x00 ; '.'
00000000000191d7         db  0x00 ; '.'
00000000000191d8         db  0x44 ; 'D'
00000000000191d9         db  0xcb ; '.'
00000000000191da         db  0xfe ; '.'
00000000000191db         db  0xff ; '.'
00000000000191dc         db  0x74 ; 't'
00000000000191dd         db  0x0e ; '.'
00000000000191de         db  0x00 ; '.'
00000000000191df         db  0x00 ; '.'
00000000000191e0         db  0x54 ; 'T'
00000000000191e1         db  0x0c ; '.'
00000000000191e2         db  0xff ; '.'
00000000000191e3         db  0xff ; '.'
00000000000191e4         db  0xa4 ; '.'
00000000000191e5         db  0x0e ; '.'
00000000000191e6         db  0x00 ; '.'
00000000000191e7         db  0x00 ; '.'
00000000000191e8         db  0xc4 ; '.'
00000000000191e9         db  0x0d ; '.'
00000000000191ea         db  0xff ; '.'
00000000000191eb         db  0xff ; '.'
00000000000191ec         db  0xd4 ; '.'
00000000000191ed         db  0x0e ; '.'
00000000000191ee         db  0x00 ; '.'
00000000000191ef         db  0x00 ; '.'
00000000000191f0         db  0xd4 ; '.'
00000000000191f1         db  0x0d ; '.'
00000000000191f2         db  0xff ; '.'
00000000000191f3         db  0xff ; '.'
00000000000191f4         db  0xe8 ; '.'
00000000000191f5         db  0x0e ; '.'
00000000000191f6         db  0x00 ; '.'
00000000000191f7         db  0x00 ; '.'
00000000000191f8         db  0xf4 ; '.'
00000000000191f9         db  0x0d ; '.'
00000000000191fa         db  0xff ; '.'
00000000000191fb         db  0xff ; '.'
00000000000191fc         db  0xfc ; '.'
00000000000191fd         db  0x0e ; '.'
00000000000191fe         db  0x00 ; '.'
00000000000191ff         db  0x00 ; '.'
0000000000019200         db  0x14 ; '.'
0000000000019201         db  0x0e ; '.'
0000000000019202         db  0xff ; '.'
0000000000019203         db  0xff ; '.'
0000000000019204         db  0x18 ; '.'
0000000000019205         db  0x0f ; '.'
0000000000019206         db  0x00 ; '.'
0000000000019207         db  0x00 ; '.'
0000000000019208         db  0x84 ; '.'
0000000000019209         db  0x0e ; '.'
000000000001920a         db  0xff ; '.'
000000000001920b         db  0xff ; '.'
000000000001920c         db  0x3c ; '<'
000000000001920d         db  0x0f ; '.'
000000000001920e         db  0x00 ; '.'
000000000001920f         db  0x00 ; '.'
0000000000019210         db  0xe4 ; '.'
0000000000019211         db  0x0e ; '.'
0000000000019212         db  0xff ; '.'
0000000000019213         db  0xff ; '.'
0000000000019214         db  0x58 ; 'X'
0000000000019215         db  0x0f ; '.'
0000000000019216         db  0x00 ; '.'
0000000000019217         db  0x00 ; '.'
0000000000019218         db  0x64 ; 'd'
0000000000019219         db  0x0f ; '.'
000000000001921a         db  0xff ; '.'
000000000001921b         db  0xff ; '.'
000000000001921c         db  0x94 ; '.'
000000000001921d         db  0x0f ; '.'
000000000001921e         db  0x00 ; '.'
000000000001921f         db  0x00 ; '.'
0000000000019220         db  0xa4 ; '.'
0000000000019221         db  0x0f ; '.'
0000000000019222         db  0xff ; '.'
0000000000019223         db  0xff ; '.'
0000000000019224         db  0xb0 ; '.'
0000000000019225         db  0x0f ; '.'
0000000000019226         db  0x00 ; '.'
0000000000019227         db  0x00 ; '.'
0000000000019228         db  0xb4 ; '.'
0000000000019229         db  0x0f ; '.'
000000000001922a         db  0xff ; '.'
000000000001922b         db  0xff ; '.'
000000000001922c         db  0xc4 ; '.'
000000000001922d         db  0x0f ; '.'
000000000001922e         db  0x00 ; '.'
000000000001922f         db  0x00 ; '.'
0000000000019230         db  0xe4 ; '.'
0000000000019231         db  0x0f ; '.'
0000000000019232         db  0xff ; '.'
0000000000019233         db  0xff ; '.'
0000000000019234         db  0xd8 ; '.'
0000000000019235         db  0x0f ; '.'
0000000000019236         db  0x00 ; '.'
0000000000019237         db  0x00 ; '.'
0000000000019238         db  0xf4 ; '.'
0000000000019239         db  0x12 ; '.'
000000000001923a         db  0xff ; '.'
000000000001923b         db  0xff ; '.'
000000000001923c         db  0x2c ; ','
000000000001923d         db  0x10 ; '.'
000000000001923e         db  0x00 ; '.'
000000000001923f         db  0x00 ; '.'
0000000000019240         db  0x14 ; '.'
0000000000019241         db  0x13 ; '.'
0000000000019242         db  0xff ; '.'
0000000000019243         db  0xff ; '.'
0000000000019244         db  0x40 ; '@'
0000000000019245         db  0x10 ; '.'
0000000000019246         db  0x00 ; '.'
0000000000019247         db  0x00 ; '.'
0000000000019248         db  0x74 ; 't'
0000000000019249         db  0x13 ; '.'
000000000001924a         db  0xff ; '.'
000000000001924b         db  0xff ; '.'
000000000001924c         db  0x6c ; 'l'
000000000001924d         db  0x10 ; '.'
000000000001924e         db  0x00 ; '.'
000000000001924f         db  0x00 ; '.'
0000000000019250         db  0x94 ; '.'
0000000000019251         db  0x13 ; '.'
0000000000019252         db  0xff ; '.'
0000000000019253         db  0xff ; '.'
0000000000019254         db  0x80 ; '.'
0000000000019255         db  0x10 ; '.'
0000000000019256         db  0x00 ; '.'
0000000000019257         db  0x00 ; '.'
0000000000019258         db  0x04 ; '.'
0000000000019259         db  0x15 ; '.'
000000000001925a         db  0xff ; '.'
000000000001925b         db  0xff ; '.'
000000000001925c         db  0xcc ; '.'
000000000001925d         db  0x10 ; '.'
000000000001925e         db  0x00 ; '.'
000000000001925f         db  0x00 ; '.'
0000000000019260         db  0x64 ; 'd'
0000000000019261         db  0x16 ; '.'
0000000000019262         db  0xff ; '.'
0000000000019263         db  0xff ; '.'
0000000000019264         db  0x14 ; '.'
0000000000019265         db  0x11 ; '.'
0000000000019266         db  0x00 ; '.'
0000000000019267         db  0x00 ; '.'
0000000000019268         db  0xf4 ; '.'
0000000000019269         db  0x16 ; '.'
000000000001926a         db  0xff ; '.'
000000000001926b         db  0xff ; '.'
000000000001926c         db  0x4c ; 'L'
000000000001926d         db  0x11 ; '.'
000000000001926e         db  0x00 ; '.'
000000000001926f         db  0x00 ; '.'
0000000000019270         db  0x44 ; 'D'
0000000000019271         db  0x17 ; '.'
0000000000019272         db  0xff ; '.'
0000000000019273         db  0xff ; '.'
0000000000019274         db  0x7c ; '|'
0000000000019275         db  0x11 ; '.'
0000000000019276         db  0x00 ; '.'
0000000000019277         db  0x00 ; '.'
0000000000019278         db  0x34 ; '4'
0000000000019279         db  0x18 ; '.'
000000000001927a         db  0xff ; '.'
000000000001927b         db  0xff ; '.'
000000000001927c         db  0xcc ; '.'
000000000001927d         db  0x11 ; '.'
000000000001927e         db  0x00 ; '.'
000000000001927f         db  0x00 ; '.'
0000000000019280         db  0x84 ; '.'
0000000000019281         db  0x18 ; '.'
0000000000019282         db  0xff ; '.'
0000000000019283         db  0xff ; '.'
0000000000019284         db  0xe8 ; '.'
0000000000019285         db  0x11 ; '.'
0000000000019286         db  0x00 ; '.'
0000000000019287         db  0x00 ; '.'
0000000000019288         db  0xa4 ; '.'
0000000000019289         db  0x1e ; '.'
000000000001928a         db  0xff ; '.'
000000000001928b         db  0xff ; '.'
000000000001928c         db  0x3c ; '<'
000000000001928d         db  0x12 ; '.'
000000000001928e         db  0x00 ; '.'
000000000001928f         db  0x00 ; '.'
0000000000019290         db  0xb4 ; '.'
0000000000019291         db  0x1e ; '.'
0000000000019292         db  0xff ; '.'
0000000000019293         db  0xff ; '.'
0000000000019294         db  0x54 ; 'T'
0000000000019295         db  0x12 ; '.'
0000000000019296         db  0x00 ; '.'
0000000000019297         db  0x00 ; '.'
0000000000019298         db  0xf4 ; '.'
0000000000019299         db  0x1e ; '.'
000000000001929a         db  0xff ; '.'
000000000001929b         db  0xff ; '.'
000000000001929c         db  0x6c ; 'l'
000000000001929d         db  0x12 ; '.'
000000000001929e         db  0x00 ; '.'
000000000001929f         db  0x00 ; '.'
00000000000192a0         db  0x14 ; '.'
00000000000192a1         db  0x1f ; '.'
00000000000192a2         db  0xff ; '.'
00000000000192a3         db  0xff ; '.'
00000000000192a4         db  0x88 ; '.'
00000000000192a5         db  0x12 ; '.'
00000000000192a6         db  0x00 ; '.'
00000000000192a7         db  0x00 ; '.'
00000000000192a8         db  0x34 ; '4'
00000000000192a9         db  0x1f ; '.'
00000000000192aa         db  0xff ; '.'
00000000000192ab         db  0xff ; '.'
00000000000192ac         db  0x9c ; '.'
00000000000192ad         db  0x12 ; '.'
00000000000192ae         db  0x00 ; '.'
00000000000192af         db  0x00 ; '.'
00000000000192b0         db  0x84 ; '.'
00000000000192b1         db  0x1f ; '.'
00000000000192b2         db  0xff ; '.'
00000000000192b3         db  0xff ; '.'
00000000000192b4         db  0xbc ; '.'
00000000000192b5         db  0x12 ; '.'
00000000000192b6         db  0x00 ; '.'
00000000000192b7         db  0x00 ; '.'
00000000000192b8         db  0xf4 ; '.'
00000000000192b9         db  0x1f ; '.'
00000000000192ba         db  0xff ; '.'
00000000000192bb         db  0xff ; '.'
00000000000192bc         db  0xd4 ; '.'
00000000000192bd         db  0x12 ; '.'
00000000000192be         db  0x00 ; '.'
00000000000192bf         db  0x00 ; '.'
00000000000192c0         db  0x04 ; '.'
00000000000192c1         db  0x20 ; ' '
00000000000192c2         db  0xff ; '.'
00000000000192c3         db  0xff ; '.'
00000000000192c4         db  0xe8 ; '.'
00000000000192c5         db  0x12 ; '.'
00000000000192c6         db  0x00 ; '.'
00000000000192c7         db  0x00 ; '.'
00000000000192c8         db  0x14 ; '.'
00000000000192c9         db  0x21 ; '!'
00000000000192ca         db  0xff ; '.'
00000000000192cb         db  0xff ; '.'
00000000000192cc         db  0x24 ; '$'
00000000000192cd         db  0x13 ; '.'
00000000000192ce         db  0x00 ; '.'
00000000000192cf         db  0x00 ; '.'
00000000000192d0         db  0x24 ; '$'
00000000000192d1         db  0x21 ; '!'
00000000000192d2         db  0xff ; '.'
00000000000192d3         db  0xff ; '.'
00000000000192d4         db  0x38 ; '8'
00000000000192d5         db  0x13 ; '.'
00000000000192d6         db  0x00 ; '.'
00000000000192d7         db  0x00 ; '.'
00000000000192d8         db  0x34 ; '4'
00000000000192d9         db  0x21 ; '!'
00000000000192da         db  0xff ; '.'
00000000000192db         db  0xff ; '.'
00000000000192dc         db  0x4c ; 'L'
00000000000192dd         db  0x13 ; '.'
00000000000192de         db  0x00 ; '.'
00000000000192df         db  0x00 ; '.'
00000000000192e0         db  0xe4 ; '.'
00000000000192e1         db  0x21 ; '!'
00000000000192e2         db  0xff ; '.'
00000000000192e3         db  0xff ; '.'
00000000000192e4         db  0x7c ; '|'
00000000000192e5         db  0x13 ; '.'
00000000000192e6         db  0x00 ; '.'
00000000000192e7         db  0x00 ; '.'
00000000000192e8         db  0x04 ; '.'
00000000000192e9         db  0x22 ; '"'
00000000000192ea         db  0xff ; '.'
00000000000192eb         db  0xff ; '.'
00000000000192ec         db  0x9c ; '.'
00000000000192ed         db  0x13 ; '.'
00000000000192ee         db  0x00 ; '.'
00000000000192ef         db  0x00 ; '.'
00000000000192f0         db  0x64 ; 'd'
00000000000192f1         db  0x22 ; '"'
00000000000192f2         db  0xff ; '.'
00000000000192f3         db  0xff ; '.'
00000000000192f4         db  0xd0 ; '.'
00000000000192f5         db  0x13 ; '.'
00000000000192f6         db  0x00 ; '.'
00000000000192f7         db  0x00 ; '.'
00000000000192f8         db  0xc4 ; '.'
00000000000192f9         db  0x22 ; '"'
00000000000192fa         db  0xff ; '.'
00000000000192fb         db  0xff ; '.'
00000000000192fc         db  0xfc ; '.'
00000000000192fd         db  0x13 ; '.'
00000000000192fe         db  0x00 ; '.'
00000000000192ff         db  0x00 ; '.'
0000000000019300         db  0x24 ; '$'
0000000000019301         db  0x23 ; '#'
0000000000019302         db  0xff ; '.'
0000000000019303         db  0xff ; '.'
0000000000019304         db  0x10 ; '.'
0000000000019305         db  0x14 ; '.'
0000000000019306         db  0x00 ; '.'
0000000000019307         db  0x00 ; '.'
0000000000019308         db  0x74 ; 't'
0000000000019309         db  0x23 ; '#'
000000000001930a         db  0xff ; '.'
000000000001930b         db  0xff ; '.'
000000000001930c         db  0x3c ; '<'
000000000001930d         db  0x14 ; '.'
000000000001930e         db  0x00 ; '.'
000000000001930f         db  0x00 ; '.'
0000000000019310         db  0x84 ; '.'
0000000000019311         db  0x23 ; '#'
0000000000019312         db  0xff ; '.'
0000000000019313         db  0xff ; '.'
0000000000019314         db  0x50 ; 'P'
0000000000019315         db  0x14 ; '.'
0000000000019316         db  0x00 ; '.'
0000000000019317         db  0x00 ; '.'
0000000000019318         db  0xb4 ; '.'
0000000000019319         db  0x23 ; '#'
000000000001931a         db  0xff ; '.'
000000000001931b         db  0xff ; '.'
000000000001931c         db  0x6c ; 'l'
000000000001931d         db  0x14 ; '.'
000000000001931e         db  0x00 ; '.'
000000000001931f         db  0x00 ; '.'
0000000000019320         db  0x24 ; '$'
0000000000019321         db  0x24 ; '$'
0000000000019322         db  0xff ; '.'
0000000000019323         db  0xff ; '.'
0000000000019324         db  0x8c ; '.'
0000000000019325         db  0x14 ; '.'
0000000000019326         db  0x00 ; '.'
0000000000019327         db  0x00 ; '.'
0000000000019328         db  0xb4 ; '.'
0000000000019329         db  0x24 ; '$'
000000000001932a         db  0xff ; '.'
000000000001932b         db  0xff ; '.'
000000000001932c         db  0xec ; '.'
000000000001932d         db  0x14 ; '.'
000000000001932e         db  0x00 ; '.'
000000000001932f         db  0x00 ; '.'
0000000000019330         db  0x14 ; '.'
0000000000019331         db  0x25 ; '%'
0000000000019332         db  0xff ; '.'
0000000000019333         db  0xff ; '.'
0000000000019334         db  0x0c ; '.'
0000000000019335         db  0x15 ; '.'
0000000000019336         db  0x00 ; '.'
0000000000019337         db  0x00 ; '.'
0000000000019338         db  0xa4 ; '.'
0000000000019339         db  0x26 ; '&'
000000000001933a         db  0xff ; '.'
000000000001933b         db  0xff ; '.'
000000000001933c         db  0x20 ; ' '
000000000001933d         db  0x15 ; '.'
000000000001933e         db  0x00 ; '.'
000000000001933f         db  0x00 ; '.'
0000000000019340         db  0xb4 ; '.'
0000000000019341         db  0x26 ; '&'
0000000000019342         db  0xff ; '.'
0000000000019343         db  0xff ; '.'
0000000000019344         db  0x34 ; '4'
0000000000019345         db  0x15 ; '.'
0000000000019346         db  0x00 ; '.'
0000000000019347         db  0x00 ; '.'
0000000000019348         db  0xd4 ; '.'
0000000000019349         db  0x26 ; '&'
000000000001934a         db  0xff ; '.'
000000000001934b         db  0xff ; '.'
000000000001934c         db  0x54 ; 'T'
000000000001934d         db  0x15 ; '.'
000000000001934e         db  0x00 ; '.'
000000000001934f         db  0x00 ; '.'
0000000000019350         db  0xd4 ; '.'
0000000000019351         db  0x27 ; '''
0000000000019352         db  0xff ; '.'
0000000000019353         db  0xff ; '.'
0000000000019354         db  0xa4 ; '.'
0000000000019355         db  0x15 ; '.'
0000000000019356         db  0x00 ; '.'
0000000000019357         db  0x00 ; '.'
0000000000019358         db  0x54 ; 'T'
0000000000019359         db  0x28 ; '('
000000000001935a         db  0xff ; '.'
000000000001935b         db  0xff ; '.'
000000000001935c         db  0xf4 ; '.'
000000000001935d         db  0x15 ; '.'
000000000001935e         db  0x00 ; '.'
000000000001935f         db  0x00 ; '.'
0000000000019360         db  0xd4 ; '.'
0000000000019361         db  0x28 ; '('
0000000000019362         db  0xff ; '.'
0000000000019363         db  0xff ; '.'
0000000000019364         db  0x44 ; 'D'
0000000000019365         db  0x16 ; '.'
0000000000019366         db  0x00 ; '.'
0000000000019367         db  0x00 ; '.'
0000000000019368         db  0x74 ; 't'
0000000000019369         db  0x29 ; ')'
000000000001936a         db  0xff ; '.'
000000000001936b         db  0xff ; '.'
000000000001936c         db  0x58 ; 'X'
000000000001936d         db  0x16 ; '.'
000000000001936e         db  0x00 ; '.'
000000000001936f         db  0x00 ; '.'
0000000000019370         db  0x84 ; '.'
0000000000019371         db  0x29 ; ')'
0000000000019372         db  0xff ; '.'
0000000000019373         db  0xff ; '.'
0000000000019374         db  0x6c ; 'l'
0000000000019375         db  0x16 ; '.'
0000000000019376         db  0x00 ; '.'
0000000000019377         db  0x00 ; '.'
0000000000019378         db  0x94 ; '.'
0000000000019379         db  0x29 ; ')'
000000000001937a         db  0xff ; '.'
000000000001937b         db  0xff ; '.'
000000000001937c         db  0x80 ; '.'
000000000001937d         db  0x16 ; '.'
000000000001937e         db  0x00 ; '.'
000000000001937f         db  0x00 ; '.'
0000000000019380         db  0xc4 ; '.'
0000000000019381         db  0x29 ; ')'
0000000000019382         db  0xff ; '.'
0000000000019383         db  0xff ; '.'
0000000000019384         db  0x9c ; '.'
0000000000019385         db  0x16 ; '.'
0000000000019386         db  0x00 ; '.'
0000000000019387         db  0x00 ; '.'
0000000000019388         db  0xe4 ; '.'
0000000000019389         db  0x2a ; '*'
000000000001938a         db  0xff ; '.'
000000000001938b         db  0xff ; '.'
000000000001938c         db  0xfc ; '.'
000000000001938d         db  0x16 ; '.'
000000000001938e         db  0x00 ; '.'
000000000001938f         db  0x00 ; '.'
0000000000019390         db  0x64 ; 'd'
0000000000019391         db  0x2b ; '+'
0000000000019392         db  0xff ; '.'
0000000000019393         db  0xff ; '.'
0000000000019394         db  0x10 ; '.'
0000000000019395         db  0x17 ; '.'
0000000000019396         db  0x00 ; '.'
0000000000019397         db  0x00 ; '.'
0000000000019398         db  0xa4 ; '.'
0000000000019399         db  0x2c ; ','
000000000001939a         db  0xff ; '.'
000000000001939b         db  0xff ; '.'
000000000001939c         db  0x70 ; 'p'
000000000001939d         db  0x17 ; '.'
000000000001939e         db  0x00 ; '.'
000000000001939f         db  0x00 ; '.'
00000000000193a0         db  0xb4 ; '.'
00000000000193a1         db  0x2c ; ','
00000000000193a2         db  0xff ; '.'
00000000000193a3         db  0xff ; '.'
00000000000193a4         db  0x84 ; '.'
00000000000193a5         db  0x17 ; '.'
00000000000193a6         db  0x00 ; '.'
00000000000193a7         db  0x00 ; '.'
00000000000193a8         db  0xc4 ; '.'
00000000000193a9         db  0x2c ; ','
00000000000193aa         db  0xff ; '.'
00000000000193ab         db  0xff ; '.'
00000000000193ac         db  0x98 ; '.'
00000000000193ad         db  0x17 ; '.'
00000000000193ae         db  0x00 ; '.'
00000000000193af         db  0x00 ; '.'
00000000000193b0         db  0xd4 ; '.'
00000000000193b1         db  0x2c ; ','
00000000000193b2         db  0xff ; '.'
00000000000193b3         db  0xff ; '.'
00000000000193b4         db  0xac ; '.'
00000000000193b5         db  0x17 ; '.'
00000000000193b6         db  0x00 ; '.'
00000000000193b7         db  0x00 ; '.'
00000000000193b8         db  0x24 ; '$'
00000000000193b9         db  0x2d ; '-'
00000000000193ba         db  0xff ; '.'
00000000000193bb         db  0xff ; '.'
00000000000193bc         db  0xc0 ; '.'
00000000000193bd         db  0x17 ; '.'
00000000000193be         db  0x00 ; '.'
00000000000193bf         db  0x00 ; '.'
00000000000193c0         db  0x84 ; '.'
00000000000193c1         db  0x2d ; '-'
00000000000193c2         db  0xff ; '.'
00000000000193c3         db  0xff ; '.'
00000000000193c4         db  0xd4 ; '.'
00000000000193c5         db  0x17 ; '.'
00000000000193c6         db  0x00 ; '.'
00000000000193c7         db  0x00 ; '.'
00000000000193c8         db  0xd4 ; '.'
00000000000193c9         db  0x2e ; '.'
00000000000193ca         db  0xff ; '.'
00000000000193cb         db  0xff ; '.'
00000000000193cc         db  0x10 ; '.'
00000000000193cd         db  0x18 ; '.'
00000000000193ce         db  0x00 ; '.'
00000000000193cf         db  0x00 ; '.'
00000000000193d0         db  0x34 ; '4'
00000000000193d1         db  0x2f ; '/'
00000000000193d2         db  0xff ; '.'
00000000000193d3         db  0xff ; '.'
00000000000193d4         db  0x48 ; 'H'
00000000000193d5         db  0x18 ; '.'
00000000000193d6         db  0x00 ; '.'
00000000000193d7         db  0x00 ; '.'
00000000000193d8         db  0x84 ; '.'
00000000000193d9         db  0x2f ; '/'
00000000000193da         db  0xff ; '.'
00000000000193db         db  0xff ; '.'
00000000000193dc         db  0x5c ; '\'
00000000000193dd         db  0x18 ; '.'
00000000000193de         db  0x00 ; '.'
00000000000193df         db  0x00 ; '.'
00000000000193e0         db  0x04 ; '.'
00000000000193e1         db  0x30 ; '0'
00000000000193e2         db  0xff ; '.'
00000000000193e3         db  0xff ; '.'
00000000000193e4         db  0x90 ; '.'
00000000000193e5         db  0x18 ; '.'
00000000000193e6         db  0x00 ; '.'
00000000000193e7         db  0x00 ; '.'
00000000000193e8         db  0x74 ; 't'
00000000000193e9         db  0x30 ; '0'
00000000000193ea         db  0xff ; '.'
00000000000193eb         db  0xff ; '.'
00000000000193ec         db  0xa4 ; '.'
00000000000193ed         db  0x18 ; '.'
00000000000193ee         db  0x00 ; '.'
00000000000193ef         db  0x00 ; '.'
00000000000193f0         db  0xe4 ; '.'
00000000000193f1         db  0x30 ; '0'
00000000000193f2         db  0xff ; '.'
00000000000193f3         db  0xff ; '.'
00000000000193f4         db  0xf0 ; '.'
00000000000193f5         db  0x18 ; '.'
00000000000193f6         db  0x00 ; '.'
00000000000193f7         db  0x00 ; '.'
00000000000193f8         db  0x24 ; '$'
00000000000193f9         db  0x31 ; '1'
00000000000193fa         db  0xff ; '.'
00000000000193fb         db  0xff ; '.'
00000000000193fc         db  0x04 ; '.'
00000000000193fd         db  0x19 ; '.'
00000000000193fe         db  0x00 ; '.'
00000000000193ff         db  0x00 ; '.'
0000000000019400         db  0x44 ; 'D'
0000000000019401         db  0x31 ; '1'
0000000000019402         db  0xff ; '.'
0000000000019403         db  0xff ; '.'
0000000000019404         db  0x18 ; '.'
0000000000019405         db  0x19 ; '.'
0000000000019406         db  0x00 ; '.'
0000000000019407         db  0x00 ; '.'
0000000000019408         db  0x04 ; '.'
0000000000019409         db  0x33 ; '3'
000000000001940a         db  0xff ; '.'
000000000001940b         db  0xff ; '.'
000000000001940c         db  0x64 ; 'd'
000000000001940d         db  0x19 ; '.'
000000000001940e         db  0x00 ; '.'
000000000001940f         db  0x00 ; '.'
0000000000019410         db  0x94 ; '.'
0000000000019411         db  0x33 ; '3'
0000000000019412         db  0xff ; '.'
0000000000019413         db  0xff ; '.'
0000000000019414         db  0x90 ; '.'
0000000000019415         db  0x19 ; '.'
0000000000019416         db  0x00 ; '.'
0000000000019417         db  0x00 ; '.'
0000000000019418         db  0x74 ; 't'
0000000000019419         db  0x34 ; '4'
000000000001941a         db  0xff ; '.'
000000000001941b         db  0xff ; '.'
000000000001941c         db  0xbc ; '.'
000000000001941d         db  0x19 ; '.'
000000000001941e         db  0x00 ; '.'
000000000001941f         db  0x00 ; '.'
0000000000019420         db  0xb4 ; '.'
0000000000019421         db  0x36 ; '6'
0000000000019422         db  0xff ; '.'
0000000000019423         db  0xff ; '.'
0000000000019424         db  0xf4 ; '.'
0000000000019425         db  0x19 ; '.'
0000000000019426         db  0x00 ; '.'
0000000000019427         db  0x00 ; '.'
0000000000019428         db  0x44 ; 'D'
0000000000019429         db  0x39 ; '9'
000000000001942a         db  0xff ; '.'
000000000001942b         db  0xff ; '.'
000000000001942c         db  0x30 ; '0'
000000000001942d         db  0x1a ; '.'
000000000001942e         db  0x00 ; '.'
000000000001942f         db  0x00 ; '.'
0000000000019430         db  0xa4 ; '.'
0000000000019431         db  0x39 ; '9'
0000000000019432         db  0xff ; '.'
0000000000019433         db  0xff ; '.'
0000000000019434         db  0x54 ; 'T'
0000000000019435         db  0x1a ; '.'
0000000000019436         db  0x00 ; '.'
0000000000019437         db  0x00 ; '.'
0000000000019438         db  0xb4 ; '.'
0000000000019439         db  0x3b ; ';'
000000000001943a         db  0xff ; '.'
000000000001943b         db  0xff ; '.'
000000000001943c         db  0x8c ; '.'
000000000001943d         db  0x1a ; '.'
000000000001943e         db  0x00 ; '.'
000000000001943f         db  0x00 ; '.'
0000000000019440         db  0xe4 ; '.'
0000000000019441         db  0x3b ; ';'
0000000000019442         db  0xff ; '.'
0000000000019443         db  0xff ; '.'
0000000000019444         db  0xb4 ; '.'
0000000000019445         db  0x1a ; '.'
0000000000019446         db  0x00 ; '.'
0000000000019447         db  0x00 ; '.'
0000000000019448         db  0xf4 ; '.'
0000000000019449         db  0x3b ; ';'
000000000001944a         db  0xff ; '.'
000000000001944b         db  0xff ; '.'
000000000001944c         db  0xc8 ; '.'
000000000001944d         db  0x1a ; '.'
000000000001944e         db  0x00 ; '.'
000000000001944f         db  0x00 ; '.'
0000000000019450         db  0x24 ; '$'
0000000000019451         db  0x3c ; '<'
0000000000019452         db  0xff ; '.'
0000000000019453         db  0xff ; '.'
0000000000019454         db  0xe0 ; '.'
0000000000019455         db  0x1a ; '.'
0000000000019456         db  0x00 ; '.'
0000000000019457         db  0x00 ; '.'
0000000000019458         db  0x64 ; 'd'
0000000000019459         db  0x3c ; '<'
000000000001945a         db  0xff ; '.'
000000000001945b         db  0xff ; '.'
000000000001945c         db  0xf8 ; '.'
000000000001945d         db  0x1a ; '.'
000000000001945e         db  0x00 ; '.'
000000000001945f         db  0x00 ; '.'
0000000000019460         db  0x84 ; '.'
0000000000019461         db  0x3c ; '<'
0000000000019462         db  0xff ; '.'
0000000000019463         db  0xff ; '.'
0000000000019464         db  0x14 ; '.'
0000000000019465         db  0x1b ; '.'
0000000000019466         db  0x00 ; '.'
0000000000019467         db  0x00 ; '.'
0000000000019468         db  0xf4 ; '.'
0000000000019469         db  0x3d ; '='
000000000001946a         db  0xff ; '.'
000000000001946b         db  0xff ; '.'
000000000001946c         db  0x64 ; 'd'
000000000001946d         db  0x1b ; '.'
000000000001946e         db  0x00 ; '.'
000000000001946f         db  0x00 ; '.'
0000000000019470         db  0xc4 ; '.'
0000000000019471         db  0x41 ; 'A'
0000000000019472         db  0xff ; '.'
0000000000019473         db  0xff ; '.'
0000000000019474         db  0xc4 ; '.'
0000000000019475         db  0x1b ; '.'
0000000000019476         db  0x00 ; '.'
0000000000019477         db  0x00 ; '.'
0000000000019478         db  0x74 ; 't'
0000000000019479         db  0x45 ; 'E'
000000000001947a         db  0xff ; '.'
000000000001947b         db  0xff ; '.'
000000000001947c         db  0x0c ; '.'
000000000001947d         db  0x1c ; '.'
000000000001947e         db  0x00 ; '.'
000000000001947f         db  0x00 ; '.'
0000000000019480         db  0x04 ; '.'
0000000000019481         db  0x46 ; 'F'
0000000000019482         db  0xff ; '.'
0000000000019483         db  0xff ; '.'
0000000000019484         db  0x30 ; '0'
0000000000019485         db  0x1c ; '.'
0000000000019486         db  0x00 ; '.'
0000000000019487         db  0x00 ; '.'
0000000000019488         db  0x74 ; 't'
0000000000019489         db  0x47 ; 'G'
000000000001948a         db  0xff ; '.'
000000000001948b         db  0xff ; '.'
000000000001948c         db  0x64 ; 'd'
000000000001948d         db  0x1c ; '.'
000000000001948e         db  0x00 ; '.'
000000000001948f         db  0x00 ; '.'
0000000000019490         db  0xf4 ; '.'
0000000000019491         db  0x47 ; 'G'
0000000000019492         db  0xff ; '.'
0000000000019493         db  0xff ; '.'
0000000000019494         db  0xc4 ; '.'
0000000000019495         db  0x1c ; '.'
0000000000019496         db  0x00 ; '.'
0000000000019497         db  0x00 ; '.'
0000000000019498         db  0x94 ; '.'
0000000000019499         db  0x48 ; 'H'
000000000001949a         db  0xff ; '.'
000000000001949b         db  0xff ; '.'
000000000001949c         db  0xe4 ; '.'
000000000001949d         db  0x1c ; '.'
000000000001949e         db  0x00 ; '.'
000000000001949f         db  0x00 ; '.'
00000000000194a0         db  0x14 ; '.'
00000000000194a1         db  0x49 ; 'I'
00000000000194a2         db  0xff ; '.'
00000000000194a3         db  0xff ; '.'
00000000000194a4         db  0x1c ; '.'
00000000000194a5         db  0x1d ; '.'
00000000000194a6         db  0x00 ; '.'
00000000000194a7         db  0x00 ; '.'
00000000000194a8         db  0x74 ; 't'
00000000000194a9         db  0x49 ; 'I'
00000000000194aa         db  0xff ; '.'
00000000000194ab         db  0xff ; '.'
00000000000194ac         db  0x4c ; 'L'
00000000000194ad         db  0x1d ; '.'
00000000000194ae         db  0x00 ; '.'
00000000000194af         db  0x00 ; '.'
00000000000194b0         db  0x64 ; 'd'
00000000000194b1         db  0x4a ; 'J'
00000000000194b2         db  0xff ; '.'
00000000000194b3         db  0xff ; '.'
00000000000194b4         db  0x90 ; '.'
00000000000194b5         db  0x1d ; '.'
00000000000194b6         db  0x00 ; '.'
00000000000194b7         db  0x00 ; '.'
00000000000194b8         db  0xa4 ; '.'
00000000000194b9         db  0x5c ; '\'
00000000000194ba         db  0xff ; '.'
00000000000194bb         db  0xff ; '.'
00000000000194bc         db  0x08 ; '.'
00000000000194bd         db  0x1e ; '.'
00000000000194be         db  0x00 ; '.'
00000000000194bf         db  0x00 ; '.'
00000000000194c0         db  0x54 ; 'T'
00000000000194c1         db  0x5e ; '^'
00000000000194c2         db  0xff ; '.'
00000000000194c3         db  0xff ; '.'
00000000000194c4         db  0x74 ; 't'
00000000000194c5         db  0x1e ; '.'
00000000000194c6         db  0x00 ; '.'
00000000000194c7         db  0x00 ; '.'
00000000000194c8         db  0x94 ; '.'
00000000000194c9         db  0x5e ; '^'
00000000000194ca         db  0xff ; '.'
00000000000194cb         db  0xff ; '.'
00000000000194cc         db  0xa0 ; '.'
00000000000194cd         db  0x1e ; '.'
00000000000194ce         db  0x00 ; '.'
00000000000194cf         db  0x00 ; '.'
00000000000194d0         db  0xb4 ; '.'
00000000000194d1         db  0x5e ; '^'
00000000000194d2         db  0xff ; '.'
00000000000194d3         db  0xff ; '.'
00000000000194d4         db  0xb4 ; '.'
00000000000194d5         db  0x1e ; '.'
00000000000194d6         db  0x00 ; '.'
00000000000194d7         db  0x00 ; '.'
00000000000194d8         db  0xd4 ; '.'
00000000000194d9         db  0x5e ; '^'
00000000000194da         db  0xff ; '.'
00000000000194db         db  0xff ; '.'
00000000000194dc         db  0xc8 ; '.'
00000000000194dd         db  0x1e ; '.'
00000000000194de         db  0x00 ; '.'
00000000000194df         db  0x00 ; '.'
00000000000194e0         db  0x14 ; '.'
00000000000194e1         db  0x5f ; '_'
00000000000194e2         db  0xff ; '.'
00000000000194e3         db  0xff ; '.'
00000000000194e4         db  0xdc ; '.'
00000000000194e5         db  0x1e ; '.'
00000000000194e6         db  0x00 ; '.'
00000000000194e7         db  0x00 ; '.'
00000000000194e8         db  0x34 ; '4'
00000000000194e9         db  0x5f ; '_'
00000000000194ea         db  0xff ; '.'
00000000000194eb         db  0xff ; '.'
00000000000194ec         db  0xf0 ; '.'
00000000000194ed         db  0x1e ; '.'
00000000000194ee         db  0x00 ; '.'
00000000000194ef         db  0x00 ; '.'
00000000000194f0         db  0x64 ; 'd'
00000000000194f1         db  0x5f ; '_'
00000000000194f2         db  0xff ; '.'
00000000000194f3         db  0xff ; '.'
00000000000194f4         db  0x04 ; '.'
00000000000194f5         db  0x1f ; '.'
00000000000194f6         db  0x00 ; '.'
00000000000194f7         db  0x00 ; '.'
00000000000194f8         db  0xe4 ; '.'
00000000000194f9         db  0x5f ; '_'
00000000000194fa         db  0xff ; '.'
00000000000194fb         db  0xff ; '.'
00000000000194fc         db  0x58 ; 'X'
00000000000194fd         db  0x1f ; '.'
00000000000194fe         db  0x00 ; '.'
00000000000194ff         db  0x00 ; '.'
0000000000019500         db  0xd4 ; '.'
0000000000019501         db  0x60 ; '`'
0000000000019502         db  0xff ; '.'
0000000000019503         db  0xff ; '.'
0000000000019504         db  0xc4 ; '.'
0000000000019505         db  0x1f ; '.'
0000000000019506         db  0x00 ; '.'
0000000000019507         db  0x00 ; '.'
0000000000019508         db  0xe4 ; '.'
0000000000019509         db  0x60 ; '`'
000000000001950a         db  0xff ; '.'
000000000001950b         db  0xff ; '.'
000000000001950c         db  0xd8 ; '.'
000000000001950d         db  0x1f ; '.'
000000000001950e         db  0x00 ; '.'
000000000001950f         db  0x00 ; '.'
0000000000019510         db  0x84 ; '.'
0000000000019511         db  0x61 ; 'a'
0000000000019512         db  0xff ; '.'
0000000000019513         db  0xff ; '.'
0000000000019514         db  0x04 ; '.'
0000000000019515         db  0x20 ; ' '
0000000000019516         db  0x00 ; '.'
0000000000019517         db  0x00 ; '.'
0000000000019518         db  0xa4 ; '.'
0000000000019519         db  0x61 ; 'a'
000000000001951a         db  0xff ; '.'
000000000001951b         db  0xff ; '.'
000000000001951c         db  0x18 ; '.'
000000000001951d         db  0x20 ; ' '
000000000001951e         db  0x00 ; '.'
000000000001951f         db  0x00 ; '.'
0000000000019520         db  0xb4 ; '.'
0000000000019521         db  0x61 ; 'a'
0000000000019522         db  0xff ; '.'
0000000000019523         db  0xff ; '.'
0000000000019524         db  0x2c ; ','
0000000000019525         db  0x20 ; ' '
0000000000019526         db  0x00 ; '.'
0000000000019527         db  0x00 ; '.'
0000000000019528         db  0xd4 ; '.'
0000000000019529         db  0x61 ; 'a'
000000000001952a         db  0xff ; '.'
000000000001952b         db  0xff ; '.'
000000000001952c         db  0x40 ; '@'
000000000001952d         db  0x20 ; ' '
000000000001952e         db  0x00 ; '.'
000000000001952f         db  0x00 ; '.'
0000000000019530         db  0xf4 ; '.'
0000000000019531         db  0x61 ; 'a'
0000000000019532         db  0xff ; '.'
0000000000019533         db  0xff ; '.'
0000000000019534         db  0x54 ; 'T'
0000000000019535         db  0x20 ; ' '
0000000000019536         db  0x00 ; '.'
0000000000019537         db  0x00 ; '.'
0000000000019538         db  0x84 ; '.'
0000000000019539         db  0x62 ; 'b'
000000000001953a         db  0xff ; '.'
000000000001953b         db  0xff ; '.'
000000000001953c         db  0x70 ; 'p'
000000000001953d         db  0x20 ; ' '
000000000001953e         db  0x00 ; '.'
000000000001953f         db  0x00 ; '.'
0000000000019540         db  0x14 ; '.'
0000000000019541         db  0x63 ; 'c'
0000000000019542         db  0xff ; '.'
0000000000019543         db  0xff ; '.'
0000000000019544         db  0x8c ; '.'
0000000000019545         db  0x20 ; ' '
0000000000019546         db  0x00 ; '.'
0000000000019547         db  0x00 ; '.'
0000000000019548         db  0x24 ; '$'
0000000000019549         db  0x63 ; 'c'
000000000001954a         db  0xff ; '.'
000000000001954b         db  0xff ; '.'
000000000001954c         db  0xa0 ; '.'
000000000001954d         db  0x20 ; ' '
000000000001954e         db  0x00 ; '.'
000000000001954f         db  0x00 ; '.'
0000000000019550         db  0x34 ; '4'
0000000000019551         db  0x63 ; 'c'
0000000000019552         db  0xff ; '.'
0000000000019553         db  0xff ; '.'
0000000000019554         db  0xb4 ; '.'
0000000000019555         db  0x20 ; ' '
0000000000019556         db  0x00 ; '.'
0000000000019557         db  0x00 ; '.'
0000000000019558         db  0xd4 ; '.'
0000000000019559         db  0x63 ; 'c'
000000000001955a         db  0xff ; '.'
000000000001955b         db  0xff ; '.'
000000000001955c         db  0xd0 ; '.'
000000000001955d         db  0x20 ; ' '
000000000001955e         db  0x00 ; '.'
000000000001955f         db  0x00 ; '.'
0000000000019560         db  0xe4 ; '.'
0000000000019561         db  0x63 ; 'c'
0000000000019562         db  0xff ; '.'
0000000000019563         db  0xff ; '.'
0000000000019564         db  0xe4 ; '.'
0000000000019565         db  0x20 ; ' '
0000000000019566         db  0x00 ; '.'
0000000000019567         db  0x00 ; '.'
0000000000019568         db  0x04 ; '.'
0000000000019569         db  0x64 ; 'd'
000000000001956a         db  0xff ; '.'
000000000001956b         db  0xff ; '.'
000000000001956c         db  0xf8 ; '.'
000000000001956d         db  0x20 ; ' '
000000000001956e         db  0x00 ; '.'
000000000001956f         db  0x00 ; '.'
0000000000019570         db  0x14 ; '.'
0000000000019571         db  0x64 ; 'd'
0000000000019572         db  0xff ; '.'
0000000000019573         db  0xff ; '.'
0000000000019574         db  0x0c ; '.'
0000000000019575         db  0x21 ; '!'
0000000000019576         db  0x00 ; '.'
0000000000019577         db  0x00 ; '.'
0000000000019578         db  0xa4 ; '.'
0000000000019579         db  0x64 ; 'd'
000000000001957a         db  0xff ; '.'
000000000001957b         db  0xff ; '.'
000000000001957c         db  0x28 ; '('
000000000001957d         db  0x21 ; '!'
000000000001957e         db  0x00 ; '.'
000000000001957f         db  0x00 ; '.'
0000000000019580         db  0x44 ; 'D'
0000000000019581         db  0x65 ; 'e'
0000000000019582         db  0xff ; '.'
0000000000019583         db  0xff ; '.'
0000000000019584         db  0x44 ; 'D'
0000000000019585         db  0x21 ; '!'
0000000000019586         db  0x00 ; '.'
0000000000019587         db  0x00 ; '.'
0000000000019588         db  0x54 ; 'T'
0000000000019589         db  0x65 ; 'e'
000000000001958a         db  0xff ; '.'
000000000001958b         db  0xff ; '.'
000000000001958c         db  0x58 ; 'X'
000000000001958d         db  0x21 ; '!'
000000000001958e         db  0x00 ; '.'
000000000001958f         db  0x00 ; '.'
0000000000019590         db  0x74 ; 't'
0000000000019591         db  0x65 ; 'e'
0000000000019592         db  0xff ; '.'
0000000000019593         db  0xff ; '.'
0000000000019594         db  0x6c ; 'l'
0000000000019595         db  0x21 ; '!'
0000000000019596         db  0x00 ; '.'
0000000000019597         db  0x00 ; '.'
0000000000019598         db  0x94 ; '.'
0000000000019599         db  0x65 ; 'e'
000000000001959a         db  0xff ; '.'
000000000001959b         db  0xff ; '.'
000000000001959c         db  0x80 ; '.'
000000000001959d         db  0x21 ; '!'
000000000001959e         db  0x00 ; '.'
000000000001959f         db  0x00 ; '.'
00000000000195a0         db  0xa4 ; '.'
00000000000195a1         db  0x65 ; 'e'
00000000000195a2         db  0xff ; '.'
00000000000195a3         db  0xff ; '.'
00000000000195a4         db  0x94 ; '.'
00000000000195a5         db  0x21 ; '!'
00000000000195a6         db  0x00 ; '.'
00000000000195a7         db  0x00 ; '.'
00000000000195a8         db  0xc4 ; '.'
00000000000195a9         db  0x65 ; 'e'
00000000000195aa         db  0xff ; '.'
00000000000195ab         db  0xff ; '.'
00000000000195ac         db  0xa8 ; '.'
00000000000195ad         db  0x21 ; '!'
00000000000195ae         db  0x00 ; '.'
00000000000195af         db  0x00 ; '.'
00000000000195b0         db  0xe4 ; '.'
00000000000195b1         db  0x65 ; 'e'
00000000000195b2         db  0xff ; '.'
00000000000195b3         db  0xff ; '.'
00000000000195b4         db  0xbc ; '.'
00000000000195b5         db  0x21 ; '!'
00000000000195b6         db  0x00 ; '.'
00000000000195b7         db  0x00 ; '.'
00000000000195b8         db  0x04 ; '.'
00000000000195b9         db  0x66 ; 'f'
00000000000195ba         db  0xff ; '.'
00000000000195bb         db  0xff ; '.'
00000000000195bc         db  0xd4 ; '.'
00000000000195bd         db  0x21 ; '!'
00000000000195be         db  0x00 ; '.'
00000000000195bf         db  0x00 ; '.'
00000000000195c0         db  0x74 ; 't'
00000000000195c1         db  0x68 ; 'h'
00000000000195c2         db  0xff ; '.'
00000000000195c3         db  0xff ; '.'
00000000000195c4         db  0x24 ; '$'
00000000000195c5         db  0x22 ; '"'
00000000000195c6         db  0x00 ; '.'
00000000000195c7         db  0x00 ; '.'
00000000000195c8         db  0xd4 ; '.'
00000000000195c9         db  0x68 ; 'h'
00000000000195ca         db  0xff ; '.'
00000000000195cb         db  0xff ; '.'
00000000000195cc         db  0x5c ; '\'
00000000000195cd         db  0x22 ; '"'
00000000000195ce         db  0x00 ; '.'
00000000000195cf         db  0x00 ; '.'
00000000000195d0         db  0x34 ; '4'
00000000000195d1         db  0x69 ; 'i'
00000000000195d2         db  0xff ; '.'
00000000000195d3         db  0xff ; '.'
00000000000195d4         db  0x94 ; '.'
00000000000195d5         db  0x22 ; '"'
00000000000195d6         db  0x00 ; '.'
00000000000195d7         db  0x00 ; '.'
00000000000195d8         db  0x64 ; 'd'
00000000000195d9         db  0x6a ; 'j'
00000000000195da         db  0xff ; '.'
00000000000195db         db  0xff ; '.'
00000000000195dc         db  0xd0 ; '.'
00000000000195dd         db  0x22 ; '"'
00000000000195de         db  0x00 ; '.'
00000000000195df         db  0x00 ; '.'
00000000000195e0         db  0x04 ; '.'
00000000000195e1         db  0x6b ; 'k'
00000000000195e2         db  0xff ; '.'
00000000000195e3         db  0xff ; '.'
00000000000195e4         db  0x30 ; '0'
00000000000195e5         db  0x23 ; '#'
00000000000195e6         db  0x00 ; '.'
00000000000195e7         db  0x00 ; '.'
00000000000195e8         db  0x24 ; '$'
00000000000195e9         db  0x6b ; 'k'
00000000000195ea         db  0xff ; '.'
00000000000195eb         db  0xff ; '.'
00000000000195ec         db  0x44 ; 'D'
00000000000195ed         db  0x23 ; '#'
00000000000195ee         db  0x00 ; '.'
00000000000195ef         db  0x00 ; '.'
00000000000195f0         db  0x44 ; 'D'
00000000000195f1         db  0x6b ; 'k'
00000000000195f2         db  0xff ; '.'
00000000000195f3         db  0xff ; '.'
00000000000195f4         db  0x58 ; 'X'
00000000000195f5         db  0x23 ; '#'
00000000000195f6         db  0x00 ; '.'
00000000000195f7         db  0x00 ; '.'
00000000000195f8         db  0x54 ; 'T'
00000000000195f9         db  0x6b ; 'k'
00000000000195fa         db  0xff ; '.'
00000000000195fb         db  0xff ; '.'
00000000000195fc         db  0x6c ; 'l'
00000000000195fd         db  0x23 ; '#'
00000000000195fe         db  0x00 ; '.'
00000000000195ff         db  0x00 ; '.'
0000000000019600         db  0xd4 ; '.'
0000000000019601         db  0x6e ; 'n'
0000000000019602         db  0xff ; '.'
0000000000019603         db  0xff ; '.'
0000000000019604         db  0xbc ; '.'
0000000000019605         db  0x23 ; '#'
0000000000019606         db  0x00 ; '.'
0000000000019607         db  0x00 ; '.'
0000000000019608         db  0x34 ; '4'
0000000000019609         db  0x6f ; 'o'
000000000001960a         db  0xff ; '.'
000000000001960b         db  0xff ; '.'
000000000001960c         db  0xec ; '.'
000000000001960d         db  0x23 ; '#'
000000000001960e         db  0x00 ; '.'
000000000001960f         db  0x00 ; '.'
0000000000019610         db  0x44 ; 'D'
0000000000019611         db  0x6f ; 'o'
0000000000019612         db  0xff ; '.'
0000000000019613         db  0xff ; '.'
0000000000019614         db  0x00 ; '.'
0000000000019615         db  0x24 ; '$'
0000000000019616         db  0x00 ; '.'
0000000000019617         db  0x00 ; '.'
0000000000019618         db  0x64 ; 'd'
0000000000019619         db  0x6f ; 'o'
000000000001961a         db  0xff ; '.'
000000000001961b         db  0xff ; '.'
000000000001961c         db  0x14 ; '.'
000000000001961d         db  0x24 ; '$'
000000000001961e         db  0x00 ; '.'
000000000001961f         db  0x00 ; '.'
0000000000019620         db  0x14 ; '.'
0000000000019621         db  0x72 ; 'r'
0000000000019622         db  0xff ; '.'
0000000000019623         db  0xff ; '.'
0000000000019624         db  0x64 ; 'd'
0000000000019625         db  0x24 ; '$'
0000000000019626         db  0x00 ; '.'
0000000000019627         db  0x00 ; '.'
0000000000019628         db  0x74 ; 't'
0000000000019629         db  0x73 ; 's'
000000000001962a         db  0xff ; '.'
000000000001962b         db  0xff ; '.'
000000000001962c         db  0x98 ; '.'
000000000001962d         db  0x24 ; '$'
000000000001962e         db  0x00 ; '.'
000000000001962f         db  0x00 ; '.'
0000000000019630         db  0xf4 ; '.'
0000000000019631         db  0x73 ; 's'
0000000000019632         db  0xff ; '.'
0000000000019633         db  0xff ; '.'
0000000000019634         db  0xb4 ; '.'
0000000000019635         db  0x24 ; '$'
0000000000019636         db  0x00 ; '.'
0000000000019637         db  0x00 ; '.'
0000000000019638         db  0x84 ; '.'
0000000000019639         db  0x75 ; 'u'
000000000001963a         db  0xff ; '.'
000000000001963b         db  0xff ; '.'
000000000001963c         db  0x04 ; '.'
000000000001963d         db  0x25 ; '%'
000000000001963e         db  0x00 ; '.'
000000000001963f         db  0x00 ; '.'
0000000000019640         db  0x04 ; '.'
0000000000019641         db  0x76 ; 'v'
0000000000019642         db  0xff ; '.'
0000000000019643         db  0xff ; '.'
0000000000019644         db  0x28 ; '('
0000000000019645         db  0x25 ; '%'
0000000000019646         db  0x00 ; '.'
0000000000019647         db  0x00 ; '.'
0000000000019648         db  0x14 ; '.'
0000000000019649         db  0x76 ; 'v'
000000000001964a         db  0xff ; '.'
000000000001964b         db  0xff ; '.'
000000000001964c         db  0x3c ; '<'
000000000001964d         db  0x25 ; '%'
000000000001964e         db  0x00 ; '.'
000000000001964f         db  0x00 ; '.'
0000000000019650         db  0x34 ; '4'
0000000000019651         db  0x76 ; 'v'
0000000000019652         db  0xff ; '.'
0000000000019653         db  0xff ; '.'
0000000000019654         db  0x50 ; 'P'
0000000000019655         db  0x25 ; '%'
0000000000019656         db  0x00 ; '.'
0000000000019657         db  0x00 ; '.'
0000000000019658         db  0xb4 ; '.'
0000000000019659         db  0x77 ; 'w'
000000000001965a         db  0xff ; '.'
000000000001965b         db  0xff ; '.'
000000000001965c         db  0x9c ; '.'
000000000001965d         db  0x25 ; '%'
000000000001965e         db  0x00 ; '.'
000000000001965f         db  0x00 ; '.'
0000000000019660         db  0x44 ; 'D'
0000000000019661         db  0x78 ; 'x'
0000000000019662         db  0xff ; '.'
0000000000019663         db  0xff ; '.'
0000000000019664         db  0xc0 ; '.'
0000000000019665         db  0x25 ; '%'
0000000000019666         db  0x00 ; '.'
0000000000019667         db  0x00 ; '.'
0000000000019668         db  0x54 ; 'T'
0000000000019669         db  0x78 ; 'x'
000000000001966a         db  0xff ; '.'
000000000001966b         db  0xff ; '.'
000000000001966c         db  0xd4 ; '.'
000000000001966d         db  0x25 ; '%'
000000000001966e         db  0x00 ; '.'
000000000001966f         db  0x00 ; '.'
0000000000019670         db  0x64 ; 'd'
0000000000019671         db  0x78 ; 'x'
0000000000019672         db  0xff ; '.'
0000000000019673         db  0xff ; '.'
0000000000019674         db  0xec ; '.'
0000000000019675         db  0x25 ; '%'
0000000000019676         db  0x00 ; '.'
0000000000019677         db  0x00 ; '.'
0000000000019678         db  0xa4 ; '.'
0000000000019679         db  0x78 ; 'x'
000000000001967a         db  0xff ; '.'
000000000001967b         db  0xff ; '.'
000000000001967c         db  0x24 ; '$'
000000000001967d         db  0x26 ; '&'
000000000001967e         db  0x00 ; '.'
000000000001967f         db  0x00 ; '.'
0000000000019680         db  0xb4 ; '.'
0000000000019681         db  0x78 ; 'x'
0000000000019682         db  0xff ; '.'
0000000000019683         db  0xff ; '.'
0000000000019684         db  0x38 ; '8'
0000000000019685         db  0x26 ; '&'
0000000000019686         db  0x00 ; '.'
0000000000019687         db  0x00 ; '.'
0000000000019688         db  0xc4 ; '.'
0000000000019689         db  0x78 ; 'x'
000000000001968a         db  0xff ; '.'
000000000001968b         db  0xff ; '.'
000000000001968c         db  0x4c ; 'L'
000000000001968d         db  0x26 ; '&'
000000000001968e         db  0x00 ; '.'
000000000001968f         db  0x00 ; '.'
0000000000019690         db  0x44 ; 'D'
0000000000019691         db  0x80 ; '.'
0000000000019692         db  0xff ; '.'
0000000000019693         db  0xff ; '.'
0000000000019694         db  0x9c ; '.'
0000000000019695         db  0x26 ; '&'
0000000000019696         db  0x00 ; '.'
0000000000019697         db  0x00 ; '.'
0000000000019698         db  0x64 ; 'd'
0000000000019699         db  0x80 ; '.'
000000000001969a         db  0xff ; '.'
000000000001969b         db  0xff ; '.'
000000000001969c         db  0xb4 ; '.'
000000000001969d         db  0x26 ; '&'
000000000001969e         db  0x00 ; '.'
000000000001969f         db  0x00 ; '.'
00000000000196a0         db  0x44 ; 'D'
00000000000196a1         db  0x81 ; '.'
00000000000196a2         db  0xff ; '.'
00000000000196a3         db  0xff ; '.'
00000000000196a4         db  0xf8 ; '.'
00000000000196a5         db  0x26 ; '&'
00000000000196a6         db  0x00 ; '.'
00000000000196a7         db  0x00 ; '.'
00000000000196a8         db  0xf4 ; '.'
00000000000196a9         db  0x81 ; '.'
00000000000196aa         db  0xff ; '.'
00000000000196ab         db  0xff ; '.'
00000000000196ac         db  0x10 ; '.'
00000000000196ad         db  0x27 ; '''
00000000000196ae         db  0x00 ; '.'
00000000000196af         db  0x00 ; '.'
00000000000196b0         db  0x04 ; '.'
00000000000196b1         db  0x82 ; '.'
00000000000196b2         db  0xff ; '.'
00000000000196b3         db  0xff ; '.'
00000000000196b4         db  0x24 ; '$'
00000000000196b5         db  0x27 ; '''
00000000000196b6         db  0x00 ; '.'
00000000000196b7         db  0x00 ; '.'
00000000000196b8         db  0x64 ; 'd'
00000000000196b9         db  0x86 ; '.'
00000000000196ba         db  0xff ; '.'
00000000000196bb         db  0xff ; '.'
00000000000196bc         db  0x6c ; 'l'
00000000000196bd         db  0x27 ; '''
00000000000196be         db  0x00 ; '.'
00000000000196bf         db  0x00 ; '.'
00000000000196c0         db  0x74 ; 't'
00000000000196c1         db  0x86 ; '.'
00000000000196c2         db  0xff ; '.'
00000000000196c3         db  0xff ; '.'
00000000000196c4         db  0x80 ; '.'
00000000000196c5         db  0x27 ; '''
00000000000196c6         db  0x00 ; '.'
00000000000196c7         db  0x00 ; '.'
00000000000196c8         db  0xd4 ; '.'
00000000000196c9         db  0x88 ; '.'
00000000000196ca         db  0xff ; '.'
00000000000196cb         db  0xff ; '.'
00000000000196cc         db  0xbc ; '.'
00000000000196cd         db  0x27 ; '''
00000000000196ce         db  0x00 ; '.'
00000000000196cf         db  0x00 ; '.'
00000000000196d0         db  0xf4 ; '.'
00000000000196d1         db  0x8c ; '.'
00000000000196d2         db  0xff ; '.'
00000000000196d3         db  0xff ; '.'
00000000000196d4         db  0xd0 ; '.'
00000000000196d5         db  0x28 ; '('
00000000000196d6         db  0x00 ; '.'
00000000000196d7         db  0x00 ; '.'
00000000000196d8         db  0x14 ; '.'
00000000000196d9         db  0x8d ; '.'
00000000000196da         db  0xff ; '.'
00000000000196db         db  0xff ; '.'
00000000000196dc         db  0xe4 ; '.'
00000000000196dd         db  0x28 ; '('
00000000000196de         db  0x00 ; '.'
00000000000196df         db  0x00 ; '.'
00000000000196e0         db  0x94 ; '.'
00000000000196e1         db  0x8d ; '.'
00000000000196e2         db  0xff ; '.'
00000000000196e3         db  0xff ; '.'
00000000000196e4         db  0x00 ; '.'
00000000000196e5         db  0x29 ; ')'
00000000000196e6         db  0x00 ; '.'
00000000000196e7         db  0x00 ; '.'
00000000000196e8         db  0x74 ; 't'
00000000000196e9         db  0x8e ; '.'
00000000000196ea         db  0xff ; '.'
00000000000196eb         db  0xff ; '.'
00000000000196ec         db  0x2c ; ','
00000000000196ed         db  0x29 ; ')'
00000000000196ee         db  0x00 ; '.'
00000000000196ef         db  0x00 ; '.'
00000000000196f0         db  0xf4 ; '.'
00000000000196f1         db  0x8e ; '.'
00000000000196f2         db  0xff ; '.'
00000000000196f3         db  0xff ; '.'
00000000000196f4         db  0x4c ; 'L'
00000000000196f5         db  0x29 ; ')'
00000000000196f6         db  0x00 ; '.'
00000000000196f7         db  0x00 ; '.'
00000000000196f8         db  0x34 ; '4'
00000000000196f9         db  0x8f ; '.'
00000000000196fa         db  0xff ; '.'
00000000000196fb         db  0xff ; '.'
00000000000196fc         db  0x64 ; 'd'
00000000000196fd         db  0x29 ; ')'
00000000000196fe         db  0x00 ; '.'
00000000000196ff         db  0x00 ; '.'
0000000000019700         db  0x54 ; 'T'
0000000000019701         db  0x8f ; '.'
0000000000019702         db  0xff ; '.'
0000000000019703         db  0xff ; '.'
0000000000019704         db  0x80 ; '.'
0000000000019705         db  0x29 ; ')'
0000000000019706         db  0x00 ; '.'
0000000000019707         db  0x00 ; '.'
0000000000019708         db  0x84 ; '.'
0000000000019709         db  0x8f ; '.'
000000000001970a         db  0xff ; '.'
000000000001970b         db  0xff ; '.'
000000000001970c         db  0x94 ; '.'
000000000001970d         db  0x29 ; ')'
000000000001970e         db  0x00 ; '.'
000000000001970f         db  0x00 ; '.'
0000000000019710         db  0x94 ; '.'
0000000000019711         db  0x8f ; '.'
0000000000019712         db  0xff ; '.'
0000000000019713         db  0xff ; '.'
0000000000019714         db  0xa8 ; '.'
0000000000019715         db  0x29 ; ')'
0000000000019716         db  0x00 ; '.'
0000000000019717         db  0x00 ; '.'
0000000000019718         db  0xd4 ; '.'
0000000000019719         db  0x8f ; '.'
000000000001971a         db  0xff ; '.'
000000000001971b         db  0xff ; '.'
000000000001971c         db  0xcc ; '.'
000000000001971d         db  0x29 ; ')'
000000000001971e         db  0x00 ; '.'
000000000001971f         db  0x00 ; '.'
0000000000019720         db  0x04 ; '.'
0000000000019721         db  0x90 ; '.'
0000000000019722         db  0xff ; '.'
0000000000019723         db  0xff ; '.'
0000000000019724         db  0xe0 ; '.'
0000000000019725         db  0x29 ; ')'
0000000000019726         db  0x00 ; '.'
0000000000019727         db  0x00 ; '.'
0000000000019728         db  0x94 ; '.'
0000000000019729         db  0x90 ; '.'
000000000001972a         db  0xff ; '.'
000000000001972b         db  0xff ; '.'
000000000001972c         db  0xf8 ; '.'
000000000001972d         db  0x29 ; ')'
000000000001972e         db  0x00 ; '.'
000000000001972f         db  0x00 ; '.'
0000000000019730         db  0xe4 ; '.'
0000000000019731         db  0x90 ; '.'
0000000000019732         db  0xff ; '.'
0000000000019733         db  0xff ; '.'
0000000000019734         db  0x10 ; '.'
0000000000019735         db  0x2a ; '*'
0000000000019736         db  0x00 ; '.'
0000000000019737         db  0x00 ; '.'
0000000000019738         db  0x04 ; '.'
0000000000019739         db  0x91 ; '.'
000000000001973a         db  0xff ; '.'
000000000001973b         db  0xff ; '.'
000000000001973c         db  0x2c ; ','
000000000001973d         db  0x2a ; '*'
000000000001973e         db  0x00 ; '.'
000000000001973f         db  0x00 ; '.'
0000000000019740         db  0x34 ; '4'
0000000000019741         db  0x91 ; '.'
0000000000019742         db  0xff ; '.'
0000000000019743         db  0xff ; '.'
0000000000019744         db  0x48 ; 'H'
0000000000019745         db  0x2a ; '*'
0000000000019746         db  0x00 ; '.'
0000000000019747         db  0x00 ; '.'
0000000000019748         db  0x64 ; 'd'
0000000000019749         db  0x91 ; '.'
000000000001974a         db  0xff ; '.'
000000000001974b         db  0xff ; '.'
000000000001974c         db  0x70 ; 'p'
000000000001974d         db  0x2a ; '*'
000000000001974e         db  0x00 ; '.'
000000000001974f         db  0x00 ; '.'
0000000000019750         db  0x84 ; '.'
0000000000019751         db  0x91 ; '.'
0000000000019752         db  0xff ; '.'
0000000000019753         db  0xff ; '.'
0000000000019754         db  0x8c ; '.'
0000000000019755         db  0x2a ; '*'
0000000000019756         db  0x00 ; '.'
0000000000019757         db  0x00 ; '.'
0000000000019758         db  0xc4 ; '.'
0000000000019759         db  0x91 ; '.'
000000000001975a         db  0xff ; '.'
000000000001975b         db  0xff ; '.'
000000000001975c         db  0xa4 ; '.'
000000000001975d         db  0x2a ; '*'
000000000001975e         db  0x00 ; '.'
000000000001975f         db  0x00 ; '.'
0000000000019760         db  0xe4 ; '.'
0000000000019761         db  0x95 ; '.'
0000000000019762         db  0xff ; '.'
0000000000019763         db  0xff ; '.'
0000000000019764         db  0xf4 ; '.'
0000000000019765         db  0x2a ; '*'
0000000000019766         db  0x00 ; '.'
0000000000019767         db  0x00 ; '.'
0000000000019768         db  0x84 ; '.'
0000000000019769         db  0x96 ; '.'
000000000001976a         db  0xff ; '.'
000000000001976b         db  0xff ; '.'
000000000001976c         db  0x1c ; '.'
000000000001976d         db  0x2b ; '+'
000000000001976e         db  0x00 ; '.'
000000000001976f         db  0x00 ; '.'
0000000000019770         db  0xc4 ; '.'
0000000000019771         db  0x96 ; '.'
0000000000019772         db  0xff ; '.'
0000000000019773         db  0xff ; '.'
0000000000019774         db  0x3c ; '<'
0000000000019775         db  0x2b ; '+'
0000000000019776         db  0x00 ; '.'
0000000000019777         db  0x00 ; '.'
0000000000019778         db  0xf4 ; '.'
0000000000019779         db  0x96 ; '.'
000000000001977a         db  0xff ; '.'
000000000001977b         db  0xff ; '.'
000000000001977c         db  0x54 ; 'T'
000000000001977d         db  0x2b ; '+'
000000000001977e         db  0x00 ; '.'
000000000001977f         db  0x00 ; '.'
0000000000019780         db  0x54 ; 'T'
0000000000019781         db  0x97 ; '.'
0000000000019782         db  0xff ; '.'
0000000000019783         db  0xff ; '.'
0000000000019784         db  0x84 ; '.'
0000000000019785         db  0x2b ; '+'
0000000000019786         db  0x00 ; '.'
0000000000019787         db  0x00 ; '.'
0000000000019788         db  0xe4 ; '.'
0000000000019789         db  0x97 ; '.'
000000000001978a         db  0xff ; '.'
000000000001978b         db  0xff ; '.'
000000000001978c         db  0xc4 ; '.'
000000000001978d         db  0x2b ; '+'
000000000001978e         db  0x00 ; '.'
000000000001978f         db  0x00 ; '.'
0000000000019790         db  0xe4 ; '.'
0000000000019791         db  0x98 ; '.'
0000000000019792         db  0xff ; '.'
0000000000019793         db  0xff ; '.'
0000000000019794         db  0x04 ; '.'
0000000000019795         db  0x2c ; ','
0000000000019796         db  0x00 ; '.'
0000000000019797         db  0x00 ; '.'
0000000000019798         db  0xf4 ; '.'
0000000000019799         db  0x98 ; '.'
000000000001979a         db  0xff ; '.'
000000000001979b         db  0xff ; '.'
000000000001979c         db  0x1c ; '.'
000000000001979d         db  0x2c ; ','
000000000001979e         db  0x00 ; '.'
000000000001979f         db  0x00 ; '.'
00000000000197a0         db  0x04 ; '.'
00000000000197a1         db  0x99 ; '.'
00000000000197a2         db  0xff ; '.'
00000000000197a3         db  0xff ; '.'
00000000000197a4         db  0x34 ; '4'
00000000000197a5         db  0x2c ; ','
00000000000197a6         db  0x00 ; '.'
00000000000197a7         db  0x00 ; '.'
00000000000197a8         db  0x24 ; '$'
00000000000197a9         db  0x99 ; '.'
00000000000197aa         db  0xff ; '.'
00000000000197ab         db  0xff ; '.'
00000000000197ac         db  0x48 ; 'H'
00000000000197ad         db  0x2c ; ','
00000000000197ae         db  0x00 ; '.'
00000000000197af         db  0x00 ; '.'
00000000000197b0         db  0x54 ; 'T'
00000000000197b1         db  0x99 ; '.'
00000000000197b2         db  0xff ; '.'
00000000000197b3         db  0xff ; '.'
00000000000197b4         db  0x64 ; 'd'
00000000000197b5         db  0x2c ; ','
00000000000197b6         db  0x00 ; '.'
00000000000197b7         db  0x00 ; '.'
00000000000197b8         db  0x64 ; 'd'
00000000000197b9         db  0x99 ; '.'
00000000000197ba         db  0xff ; '.'
00000000000197bb         db  0xff ; '.'
00000000000197bc         db  0x78 ; 'x'
00000000000197bd         db  0x2c ; ','
00000000000197be         db  0x00 ; '.'
00000000000197bf         db  0x00 ; '.'
00000000000197c0         db  0x84 ; '.'
00000000000197c1         db  0x9a ; '.'
00000000000197c2         db  0xff ; '.'
00000000000197c3         db  0xff ; '.'
00000000000197c4         db  0xc4 ; '.'
00000000000197c5         db  0x2c ; ','
00000000000197c6         db  0x00 ; '.'
00000000000197c7         db  0x00 ; '.'
00000000000197c8         db  0x04 ; '.'
00000000000197c9         db  0x9b ; '.'
00000000000197ca         db  0xff ; '.'
00000000000197cb         db  0xff ; '.'
00000000000197cc         db  0xf0 ; '.'
00000000000197cd         db  0x2c ; ','
00000000000197ce         db  0x00 ; '.'
00000000000197cf         db  0x00 ; '.'
00000000000197d0         db  0x24 ; '$'
00000000000197d1         db  0x9c ; '.'
00000000000197d2         db  0xff ; '.'
00000000000197d3         db  0xff ; '.'
00000000000197d4         db  0x50 ; 'P'
00000000000197d5         db  0x2d ; '-'
00000000000197d6         db  0x00 ; '.'
00000000000197d7         db  0x00 ; '.'
00000000000197d8         db  0x94 ; '.'
00000000000197d9         db  0x9c ; '.'
00000000000197da         db  0xff ; '.'
00000000000197db         db  0xff ; '.'
00000000000197dc         db  0x9c ; '.'
00000000000197dd         db  0x2d ; '-'
00000000000197de         db  0x00 ; '.'
00000000000197df         db  0x00 ; '.'
00000000000197e0         db  0xe4 ; '.'
00000000000197e1         db  0x9c ; '.'
00000000000197e2         db  0xff ; '.'
00000000000197e3         db  0xff ; '.'
00000000000197e4         db  0xdc ; '.'
00000000000197e5         db  0x2d ; '-'
00000000000197e6         db  0x00 ; '.'
00000000000197e7         db  0x00 ; '.'
00000000000197e8         db  0x64 ; 'd'
00000000000197e9         db  0x9d ; '.'
00000000000197ea         db  0xff ; '.'
00000000000197eb         db  0xff ; '.'
00000000000197ec         db  0x2c ; ','
00000000000197ed         db  0x2e ; '.'
00000000000197ee         db  0x00 ; '.'
00000000000197ef         db  0x00 ; '.'
00000000000197f0         db  0x04 ; '.'
00000000000197f1         db  0x9e ; '.'
00000000000197f2         db  0xff ; '.'
00000000000197f3         db  0xff ; '.'
00000000000197f4         db  0x7c ; '|'
00000000000197f5         db  0x2e ; '.'
00000000000197f6         db  0x00 ; '.'
00000000000197f7         db  0x00 ; '.'
00000000000197f8         db  0x14 ; '.'
00000000000197f9         db  0x9e ; '.'
00000000000197fa         db  0xff ; '.'
00000000000197fb         db  0xff ; '.'
00000000000197fc         db  0x90 ; '.'
00000000000197fd         db  0x2e ; '.'
00000000000197fe         db  0x00 ; '.'
00000000000197ff         db  0x00 ; '.'
0000000000019800         db  0x64 ; 'd'
0000000000019801         db  0x9e ; '.'
0000000000019802         db  0xff ; '.'
0000000000019803         db  0xff ; '.'
0000000000019804         db  0xac ; '.'
0000000000019805         db  0x2e ; '.'
0000000000019806         db  0x00 ; '.'
0000000000019807         db  0x00 ; '.'
0000000000019808         db  0xc4 ; '.'
0000000000019809         db  0x9e ; '.'
000000000001980a         db  0xff ; '.'
000000000001980b         db  0xff ; '.'
000000000001980c         db  0xcc ; '.'
000000000001980d         db  0x2e ; '.'
000000000001980e         db  0x00 ; '.'
000000000001980f         db  0x00 ; '.'
0000000000019810         db  0x04 ; '.'
0000000000019811         db  0x9f ; '.'
0000000000019812         db  0xff ; '.'
0000000000019813         db  0xff ; '.'
0000000000019814         db  0xe4 ; '.'
0000000000019815         db  0x2e ; '.'
0000000000019816         db  0x00 ; '.'
0000000000019817         db  0x00 ; '.'
0000000000019818         db  0x44 ; 'D'
0000000000019819         db  0x9f ; '.'
000000000001981a         db  0xff ; '.'
000000000001981b         db  0xff ; '.'
000000000001981c         db  0x04 ; '.'
000000000001981d         db  0x2f ; '/'
000000000001981e         db  0x00 ; '.'
000000000001981f         db  0x00 ; '.'
0000000000019820         db  0x64 ; 'd'
0000000000019821         db  0xa1 ; '.'
0000000000019822         db  0xff ; '.'
0000000000019823         db  0xff ; '.'
0000000000019824         db  0x54 ; 'T'
0000000000019825         db  0x2f ; '/'
0000000000019826         db  0x00 ; '.'
0000000000019827         db  0x00 ; '.'
0000000000019828         db  0xd4 ; '.'
0000000000019829         db  0xa1 ; '.'
000000000001982a         db  0xff ; '.'
000000000001982b         db  0xff ; '.'
000000000001982c         db  0x74 ; 't'
000000000001982d         db  0x2f ; '/'
000000000001982e         db  0x00 ; '.'
000000000001982f         db  0x00 ; '.'
0000000000019830         db  0x04 ; '.'
0000000000019831         db  0xa2 ; '.'
0000000000019832         db  0xff ; '.'
0000000000019833         db  0xff ; '.'
0000000000019834         db  0x90 ; '.'
0000000000019835         db  0x2f ; '/'
0000000000019836         db  0x00 ; '.'
0000000000019837         db  0x00 ; '.'
0000000000019838         db  0x44 ; 'D'
0000000000019839         db  0xa2 ; '.'
000000000001983a         db  0xff ; '.'
000000000001983b         db  0xff ; '.'
000000000001983c         db  0xb0 ; '.'
000000000001983d         db  0x2f ; '/'
000000000001983e         db  0x00 ; '.'
000000000001983f         db  0x00 ; '.'
0000000000019840         db  0x54 ; 'T'
0000000000019841         db  0xa2 ; '.'
0000000000019842         db  0xff ; '.'
0000000000019843         db  0xff ; '.'
0000000000019844         db  0xc4 ; '.'
0000000000019845         db  0x2f ; '/'
0000000000019846         db  0x00 ; '.'
0000000000019847         db  0x00 ; '.'
0000000000019848         db  0x74 ; 't'
0000000000019849         db  0xa3 ; '.'
000000000001984a         db  0xff ; '.'
000000000001984b         db  0xff ; '.'
000000000001984c         db  0x10 ; '.'
000000000001984d         db  0x30 ; '0'
000000000001984e         db  0x00 ; '.'
000000000001984f         db  0x00 ; '.'
0000000000019850         db  0x94 ; '.'
0000000000019851         db  0xa3 ; '.'
0000000000019852         db  0xff ; '.'
0000000000019853         db  0xff ; '.'
0000000000019854         db  0x2c ; ','
0000000000019855         db  0x30 ; '0'
0000000000019856         db  0x00 ; '.'
0000000000019857         db  0x00 ; '.'
0000000000019858         db  0xf4 ; '.'
0000000000019859         db  0xa3 ; '.'
000000000001985a         db  0xff ; '.'
000000000001985b         db  0xff ; '.'
000000000001985c         db  0x64 ; 'd'
000000000001985d         db  0x30 ; '0'
000000000001985e         db  0x00 ; '.'
000000000001985f         db  0x00 ; '.'
0000000000019860         db  0x54 ; 'T'
0000000000019861         db  0xa4 ; '.'
0000000000019862         db  0xff ; '.'
0000000000019863         db  0xff ; '.'
0000000000019864         db  0x84 ; '.'
0000000000019865         db  0x30 ; '0'
0000000000019866         db  0x00 ; '.'
0000000000019867         db  0x00 ; '.'
0000000000019868         db  0x84 ; '.'
0000000000019869         db  0xa7 ; '.'
000000000001986a         db  0xff ; '.'
000000000001986b         db  0xff ; '.'
000000000001986c         db  0xd0 ; '.'
000000000001986d         db  0x30 ; '0'
000000000001986e         db  0x00 ; '.'
000000000001986f         db  0x00 ; '.'
0000000000019870         db  0x94 ; '.'
0000000000019871         db  0xa7 ; '.'
0000000000019872         db  0xff ; '.'
0000000000019873         db  0xff ; '.'
0000000000019874         db  0xe4 ; '.'
0000000000019875         db  0x30 ; '0'
0000000000019876         db  0x00 ; '.'
0000000000019877         db  0x00 ; '.'
0000000000019878         db  0xa4 ; '.'
0000000000019879         db  0xa7 ; '.'
000000000001987a         db  0xff ; '.'
000000000001987b         db  0xff ; '.'
000000000001987c         db  0xf8 ; '.'
000000000001987d         db  0x30 ; '0'
000000000001987e         db  0x00 ; '.'
000000000001987f         db  0x00 ; '.'
0000000000019880         db  0x44 ; 'D'
0000000000019881         db  0xa9 ; '.'
0000000000019882         db  0xff ; '.'
0000000000019883         db  0xff ; '.'
0000000000019884         db  0x5c ; '\'
0000000000019885         db  0x31 ; '1'
0000000000019886         db  0x00 ; '.'
0000000000019887         db  0x00 ; '.'
0000000000019888         db  0x94 ; '.'
0000000000019889         db  0xa9 ; '.'
000000000001988a         db  0xff ; '.'
000000000001988b         db  0xff ; '.'
000000000001988c         db  0x94 ; '.'
000000000001988d         db  0x31 ; '1'
000000000001988e         db  0x00 ; '.'
000000000001988f         db  0x00 ; '.'
0000000000019890         db  0x24 ; '$'
0000000000019891         db  0xac ; '.'
0000000000019892         db  0xff ; '.'
0000000000019893         db  0xff ; '.'
0000000000019894         db  0xa8 ; '.'
0000000000019895         db  0x31 ; '1'
0000000000019896         db  0x00 ; '.'
0000000000019897         db  0x00 ; '.'
0000000000019898         db  0x64 ; 'd'
0000000000019899         db  0xae ; '.'
000000000001989a         db  0xff ; '.'
000000000001989b         db  0xff ; '.'
000000000001989c         db  0xdc ; '.'
000000000001989d         db  0x31 ; '1'
000000000001989e         db  0x00 ; '.'
000000000001989f         db  0x00 ; '.'
00000000000198a0         db  0x74 ; 't'
00000000000198a1         db  0xae ; '.'
00000000000198a2         db  0xff ; '.'
00000000000198a3         db  0xff ; '.'
00000000000198a4         db  0xf4 ; '.'
00000000000198a5         db  0x31 ; '1'
00000000000198a6         db  0x00 ; '.'
00000000000198a7         db  0x00 ; '.'
00000000000198a8         db  0xf4 ; '.'
00000000000198a9         db  0xae ; '.'
00000000000198aa         db  0xff ; '.'
00000000000198ab         db  0xff ; '.'
00000000000198ac         db  0x2c ; ','
00000000000198ad         db  0x32 ; '2'
00000000000198ae         db  0x00 ; '.'
00000000000198af         db  0x00 ; '.'
00000000000198b0         db  0x74 ; 't'
00000000000198b1         db  0xb1 ; '.'
00000000000198b2         db  0xff ; '.'
00000000000198b3         db  0xff ; '.'
00000000000198b4         db  0x64 ; 'd'
00000000000198b5         db  0x32 ; '2'
00000000000198b6         db  0x00 ; '.'
00000000000198b7         db  0x00 ; '.'
00000000000198b8         db  0x84 ; '.'
00000000000198b9         db  0xb1 ; '.'
00000000000198ba         db  0xff ; '.'
00000000000198bb         db  0xff ; '.'
00000000000198bc         db  0x7c ; '|'
00000000000198bd         db  0x32 ; '2'
00000000000198be         db  0x00 ; '.'
00000000000198bf         db  0x00 ; '.'
00000000000198c0         db  0xa4 ; '.'
00000000000198c1         db  0xc2 ; '.'
00000000000198c2         db  0xff ; '.'
00000000000198c3         db  0xff ; '.'
00000000000198c4         db  0xac ; '.'
00000000000198c5         db  0x32 ; '2'
00000000000198c6         db  0x00 ; '.'
00000000000198c7         db  0x00 ; '.'
00000000000198c8         db  0x44 ; 'D'
00000000000198c9         db  0xc3 ; '.'
00000000000198ca         db  0xff ; '.'
00000000000198cb         db  0xff ; '.'
00000000000198cc         db  0xdc ; '.'
00000000000198cd         db  0x32 ; '2'
00000000000198ce         db  0x00 ; '.'
00000000000198cf         db  0x00 ; '.'
00000000000198d0         db  0x44 ; 'D'
00000000000198d1         db  0xc5 ; '.'
00000000000198d2         db  0xff ; '.'
00000000000198d3         db  0xff ; '.'
00000000000198d4         db  0xf4 ; '.'
00000000000198d5         db  0x32 ; '2'
00000000000198d6         db  0x00 ; '.'
00000000000198d7         db  0x00 ; '.'
00000000000198d8         db  0x34 ; '4'
00000000000198d9         db  0xd2 ; '.'
00000000000198da         db  0xff ; '.'
00000000000198db         db  0xff ; '.'
00000000000198dc         db  0x44 ; 'D'
00000000000198dd         db  0x33 ; '3'
00000000000198de         db  0x00 ; '.'
00000000000198df         db  0x00 ; '.'
00000000000198e0         db  0xa4 ; '.'
00000000000198e1         db  0xd2 ; '.'
00000000000198e2         db  0xff ; '.'
00000000000198e3         db  0xff ; '.'
00000000000198e4         db  0x8c ; '.'
00000000000198e5         db  0x33 ; '3'
00000000000198e6         db  0x00 ; '.'
00000000000198e7         db  0x00 ; '.'
00000000000198e8         db  0xb4 ; '.'
00000000000198e9         db  0xd2 ; '.'
00000000000198ea         db  0xff ; '.'
00000000000198eb         db  0xff ; '.'
00000000000198ec         db  0xa4 ; '.'
00000000000198ed         db  0x33 ; '3'
00000000000198ee         db  0x00 ; '.'
00000000000198ef         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x198f0; 0x1c498[ (11176 bytes)
        ; File offset : [104688; 115864[ (11176 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

00000000000198f0         dd         0x00000014                                  ; Length of the record
00000000000198f4         dd         0x00000000                                  ; CIE ID
00000000000198f8         db         0x01                                        ; Version
00000000000198f9         db         "zR", 0                                     ; Augmentation String
00000000000198fc         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
00000000000198fd         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
00000000000198fe         db         0x10                                        ; Return address register
00000000000198ff         db         0x01                                        ; Augmentation data length
0000000000019900         db         0x1b                                        ; FDE encoding
0000000000019901         db  0x0c ; '.'
0000000000019902         db  0x07 ; '.'
0000000000019903         db  0x08 ; '.'
0000000000019904         db  0x90 ; '.'
0000000000019905         db  0x01 ; '.'
0000000000019906         db  0x07 ; '.'
0000000000019907         db  0x10 ; '.'
0000000000019908         dd         0x00000014                                  ; Length of the record
000000000001990c         dd         0x0000001c                                  ; FDE: parent CIE at 0x198f0 (FDE encoding = 0x1B)
0000000000019910         db         0x20, 0xa5, 0xfe, 0xff                      ; begin 0x3e30
0000000000019914         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x3e5b)
0000000000019918         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019919         align      32
0000000000019920         dd         0x00000014                                  ; Length of the record
0000000000019924         dd         0x00000000                                  ; CIE ID
0000000000019928         db         0x01                                        ; Version
0000000000019929         db         "zR", 0                                     ; Augmentation String
000000000001992c         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
000000000001992d         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
000000000001992e         db         0x10                                        ; Return address register
000000000001992f         db         0x01                                        ; Augmentation data length
0000000000019930         db         0x1b                                        ; FDE encoding
0000000000019931         db  0x0c ; '.'
0000000000019932         db  0x07 ; '.'
0000000000019933         db  0x08 ; '.'
0000000000019934         db  0x90 ; '.'
0000000000019935         db  0x01 ; '.'
0000000000019936         db  0x00 ; '.'
0000000000019937         db  0x00 ; '.'
0000000000019938         dd         0x00000024                                  ; Length of the record
000000000001993c         dd         0x0000001c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019940         db         0xa0, 0x8f, 0xfe, 0xff                      ; begin 0x28e0
0000000000019944         db         0xf0, 0x07, 2 dup (0x00)                    ; length 0x7f0 (end at 0x30d0)
0000000000019948         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019949         db  0x0e ; '.'
000000000001994a         db  0x10 ; '.'
000000000001994b         db  0x46 ; 'F'
000000000001994c         db  0x0e ; '.'
000000000001994d         db  0x18 ; '.'
000000000001994e         db  0x4a ; 'J'
000000000001994f         db  0x0f ; '.'
0000000000019950         db  0x0b ; '.'
0000000000019951         db  0x77 ; 'w'
0000000000019952         db  0x08 ; '.'
0000000000019953         db  0x80 ; '.'
0000000000019954         db  0x00 ; '.'
0000000000019955         db  0x3f ; '?'
0000000000019956         db  0x1a ; '.'
0000000000019957         db  0x3b ; ';'
0000000000019958         db  0x2a ; '*'
0000000000019959         db  0x33 ; '3'
000000000001995a         db  0x24 ; '$'
000000000001995b         db  0x22 ; '"'
000000000001995c         db  0x00 ; '.'
000000000001995d         db  0x00 ; '.'
000000000001995e         db  0x00 ; '.'
000000000001995f         db  0x00 ; '.'
0000000000019960         dd         0x00000014                                  ; Length of the record
0000000000019964         dd         0x00000044                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019968         db         0x68, 0x97, 0xfe, 0xff                      ; begin 0x30d0
000000000001996c         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x30e0)
0000000000019970         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019971         align      8
0000000000019978         dd         0x00000038                                  ; Length of the record
000000000001997c         dd         0x0000005c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019980         db         0xc0, 0xa5, 0xfe, 0xff                      ; begin 0x3f40
0000000000019984         db         0xd2, 0x01, 2 dup (0x00)                    ; length 0x1d2 (end at 0x4112)
0000000000019988         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019989         db  0x42 ; 'B'
000000000001998a         db  0x0e ; '.'
000000000001998b         db  0x10 ; '.'
000000000001998c         db  0x8d ; '.'
000000000001998d         db  0x02 ; '.'
000000000001998e         db  0x42 ; 'B'
000000000001998f         db  0x0e ; '.'
0000000000019990         db  0x18 ; '.'
0000000000019991         db  0x8c ; '.'
0000000000019992         db  0x03 ; '.'
0000000000019993         db  0x41 ; 'A'
0000000000019994         db  0x0e ; '.'
0000000000019995         db  0x20 ; ' '
0000000000019996         db  0x86 ; '.'
0000000000019997         db  0x04 ; '.'
0000000000019998         db  0x41 ; 'A'
0000000000019999         db  0x0e ; '.'
000000000001999a         db  0x28 ; '('
000000000001999b         db  0x83 ; '.'
000000000001999c         db  0x05 ; '.'
000000000001999d         db  0x47 ; 'G'
000000000001999e         db  0x0e ; '.'
000000000001999f         db  0x50 ; 'P'
00000000000199a0         db  0x02 ; '.'
00000000000199a1         db  0xb4 ; '.'
00000000000199a2         db  0x0a ; '.'
00000000000199a3         db  0x0e ; '.'
00000000000199a4         db  0x28 ; '('
00000000000199a5         db  0x41 ; 'A'
00000000000199a6         db  0x0e ; '.'
00000000000199a7         db  0x20 ; ' '
00000000000199a8         db  0x41 ; 'A'
00000000000199a9         db  0x0e ; '.'
00000000000199aa         db  0x18 ; '.'
00000000000199ab         db  0x42 ; 'B'
00000000000199ac         db  0x0e ; '.'
00000000000199ad         db  0x10 ; '.'
00000000000199ae         db  0x42 ; 'B'
00000000000199af         db  0x0e ; '.'
00000000000199b0         db  0x08 ; '.'
00000000000199b1         db  0x49 ; 'I'
00000000000199b2         db  0x0b ; '.'
00000000000199b3         db  0x00 ; '.'
00000000000199b4         dd         0x00000034                                  ; Length of the record
00000000000199b8         dd         0x00000098                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
00000000000199bc         db         0x64, 0xa7, 0xfe, 0xff                      ; begin 0x4120
00000000000199c0         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x4185)
00000000000199c4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000199c5         db  0x41 ; 'A'
00000000000199c6         db  0x0e ; '.'
00000000000199c7         db  0x10 ; '.'
00000000000199c8         db  0x86 ; '.'
00000000000199c9         db  0x02 ; '.'
00000000000199ca         db  0x41 ; 'A'
00000000000199cb         db  0x0e ; '.'
00000000000199cc         db  0x18 ; '.'
00000000000199cd         db  0x83 ; '.'
00000000000199ce         db  0x03 ; '.'
00000000000199cf         db  0x58 ; 'X'
00000000000199d0         db  0x0e ; '.'
00000000000199d1         db  0x20 ; ' '
00000000000199d2         db  0x4f ; 'O'
00000000000199d3         db  0x0e ; '.'
00000000000199d4         db  0x28 ; '('
00000000000199d5         db  0x41 ; 'A'
00000000000199d6         db  0x0e ; '.'
00000000000199d7         db  0x30 ; '0'
00000000000199d8         db  0x47 ; 'G'
00000000000199d9         db  0x0e ; '.'
00000000000199da         db  0x38 ; '8'
00000000000199db         db  0x47 ; 'G'
00000000000199dc         db  0x0e ; '.'
00000000000199dd         db  0x40 ; '@'
00000000000199de         db  0x4c ; 'L'
00000000000199df         db  0x0e ; '.'
00000000000199e0         db  0x20 ; ' '
00000000000199e1         db  0x5c ; '\'
00000000000199e2         db  0x0e ; '.'
00000000000199e3         db  0x18 ; '.'
00000000000199e4         db  0x43 ; 'C'
00000000000199e5         db  0x0e ; '.'
00000000000199e6         db  0x10 ; '.'
00000000000199e7         db  0x41 ; 'A'
00000000000199e8         db  0x0e ; '.'
00000000000199e9         db  0x08 ; '.'
00000000000199ea         db  0x00 ; '.'
00000000000199eb         db  0x00 ; '.'
00000000000199ec         dd         0x00000018                                  ; Length of the record
00000000000199f0         dd         0x000000d0                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
00000000000199f4         db         0x9c, 0xa7, 0xfe, 0xff                      ; begin 0x4190
00000000000199f8         db         0x39, 3 dup (0x00)                          ; length 0x39 (end at 0x41c9)
00000000000199fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000199fd         db  0x41 ; 'A'
00000000000199fe         db  0x0e ; '.'
00000000000199ff         db  0x10 ; '.'
0000000000019a00         db  0x83 ; '.'
0000000000019a01         db  0x02 ; '.'
0000000000019a02         db  0x71 ; 'q'
0000000000019a03         db  0x0e ; '.'
0000000000019a04         db  0x08 ; '.'
0000000000019a05         db  0x00 ; '.'
0000000000019a06         db  0x00 ; '.'
0000000000019a07         db  0x00 ; '.'
0000000000019a08         dd         0x00000010                                  ; Length of the record
0000000000019a0c         dd         0x000000ec                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019a10         db         0xc0, 0xa7, 0xfe, 0xff                      ; begin 0x41d0
0000000000019a14         db         0x12, 3 dup (0x00)                          ; length 0x12 (end at 0x41e2)
0000000000019a18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019a19         align      4
0000000000019a1c         dd         0x0000003c                                  ; Length of the record
0000000000019a20         dd         0x00000100                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019a24         db         0xcc, 0xa7, 0xfe, 0xff                      ; begin 0x41f0
0000000000019a28         db         0x61, 3 dup (0x00)                          ; length 0x61 (end at 0x4251)
0000000000019a2c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019a2d         db  0x42 ; 'B'
0000000000019a2e         db  0x0e ; '.'
0000000000019a2f         db  0x10 ; '.'
0000000000019a30         db  0x8c ; '.'
0000000000019a31         db  0x02 ; '.'
0000000000019a32         db  0x41 ; 'A'
0000000000019a33         db  0x0e ; '.'
0000000000019a34         db  0x18 ; '.'
0000000000019a35         db  0x86 ; '.'
0000000000019a36         db  0x03 ; '.'
0000000000019a37         db  0x44 ; 'D'
0000000000019a38         db  0x0e ; '.'
0000000000019a39         db  0x20 ; ' '
0000000000019a3a         db  0x83 ; '.'
0000000000019a3b         db  0x04 ; '.'
0000000000019a3c         db  0x4a ; 'J'
0000000000019a3d         db  0x0e ; '.'
0000000000019a3e         db  0x30 ; '0'
0000000000019a3f         db  0x6c ; 'l'
0000000000019a40         db  0x0a ; '.'
0000000000019a41         db  0x0e ; '.'
0000000000019a42         db  0x20 ; ' '
0000000000019a43         db  0x41 ; 'A'
0000000000019a44         db  0x0e ; '.'
0000000000019a45         db  0x18 ; '.'
0000000000019a46         db  0x41 ; 'A'
0000000000019a47         db  0x0e ; '.'
0000000000019a48         db  0x10 ; '.'
0000000000019a49         db  0x42 ; 'B'
0000000000019a4a         db  0x0e ; '.'
0000000000019a4b         db  0x08 ; '.'
0000000000019a4c         db  0x47 ; 'G'
0000000000019a4d         db  0x0b ; '.'
0000000000019a4e         db  0x54 ; 'T'
0000000000019a4f         db  0x0e ; '.'
0000000000019a50         db  0x20 ; ' '
0000000000019a51         db  0x41 ; 'A'
0000000000019a52         db  0x0e ; '.'
0000000000019a53         db  0x18 ; '.'
0000000000019a54         db  0x41 ; 'A'
0000000000019a55         db  0x0e ; '.'
0000000000019a56         db  0x10 ; '.'
0000000000019a57         db  0x42 ; 'B'
0000000000019a58         db  0x0e ; '.'
0000000000019a59         db  0x08 ; '.'
0000000000019a5a         db  0x00 ; '.'
0000000000019a5b         db  0x00 ; '.'
0000000000019a5c         dd         0x00000048                                  ; Length of the record
0000000000019a60         dd         0x00000140                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019a64         db         0xfc, 0xa7, 0xfe, 0xff                      ; begin 0x4260
0000000000019a68         db         0xba, 0x06, 2 dup (0x00)                    ; length 0x6ba (end at 0x491a)
0000000000019a6c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019a6d         db  0x42 ; 'B'
0000000000019a6e         db  0x0e ; '.'
0000000000019a6f         db  0x10 ; '.'
0000000000019a70         db  0x8f ; '.'
0000000000019a71         db  0x02 ; '.'
0000000000019a72         db  0x42 ; 'B'
0000000000019a73         db  0x0e ; '.'
0000000000019a74         db  0x18 ; '.'
0000000000019a75         db  0x8e ; '.'
0000000000019a76         db  0x03 ; '.'
0000000000019a77         db  0x42 ; 'B'
0000000000019a78         db  0x0e ; '.'
0000000000019a79         db  0x20 ; ' '
0000000000019a7a         db  0x8d ; '.'
0000000000019a7b         db  0x04 ; '.'
0000000000019a7c         db  0x42 ; 'B'
0000000000019a7d         db  0x0e ; '.'
0000000000019a7e         db  0x28 ; '('
0000000000019a7f         db  0x8c ; '.'
0000000000019a80         db  0x05 ; '.'
0000000000019a81         db  0x44 ; 'D'
0000000000019a82         db  0x0e ; '.'
0000000000019a83         db  0x30 ; '0'
0000000000019a84         db  0x86 ; '.'
0000000000019a85         db  0x06 ; '.'
0000000000019a86         db  0x41 ; 'A'
0000000000019a87         db  0x0e ; '.'
0000000000019a88         db  0x38 ; '8'
0000000000019a89         db  0x83 ; '.'
0000000000019a8a         db  0x07 ; '.'
0000000000019a8b         db  0x4d ; 'M'
0000000000019a8c         db  0x0e ; '.'
0000000000019a8d         db  0xa0 ; '.'
0000000000019a8e         db  0x04 ; '.'
0000000000019a8f         db  0x02 ; '.'
0000000000019a90         db  0x8e ; '.'
0000000000019a91         db  0x0a ; '.'
0000000000019a92         db  0x0e ; '.'
0000000000019a93         db  0x38 ; '8'
0000000000019a94         db  0x41 ; 'A'
0000000000019a95         db  0x0e ; '.'
0000000000019a96         db  0x30 ; '0'
0000000000019a97         db  0x41 ; 'A'
0000000000019a98         db  0x0e ; '.'
0000000000019a99         db  0x28 ; '('
0000000000019a9a         db  0x42 ; 'B'
0000000000019a9b         db  0x0e ; '.'
0000000000019a9c         db  0x20 ; ' '
0000000000019a9d         db  0x42 ; 'B'
0000000000019a9e         db  0x0e ; '.'
0000000000019a9f         db  0x18 ; '.'
0000000000019aa0         db  0x42 ; 'B'
0000000000019aa1         db  0x0e ; '.'
0000000000019aa2         db  0x10 ; '.'
0000000000019aa3         db  0x42 ; 'B'
0000000000019aa4         db  0x0e ; '.'
0000000000019aa5         db  0x08 ; '.'
0000000000019aa6         db  0x41 ; 'A'
0000000000019aa7         db  0x0b ; '.'
0000000000019aa8         dd         0x00000028                                  ; Length of the record
0000000000019aac         dd         0x0000018c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019ab0         db         0x70, 0xae, 0xfe, 0xff                      ; begin 0x4920
0000000000019ab4         db         0x4a, 0x04, 2 dup (0x00)                    ; length 0x44a (end at 0x4d6a)
0000000000019ab8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019ab9         db  0x42 ; 'B'
0000000000019aba         db  0x0e ; '.'
0000000000019abb         db  0x10 ; '.'
0000000000019abc         db  0x8d ; '.'
0000000000019abd         db  0x02 ; '.'
0000000000019abe         db  0x42 ; 'B'
0000000000019abf         db  0x0e ; '.'
0000000000019ac0         db  0x18 ; '.'
0000000000019ac1         db  0x8c ; '.'
0000000000019ac2         db  0x03 ; '.'
0000000000019ac3         db  0x46 ; 'F'
0000000000019ac4         db  0x0e ; '.'
0000000000019ac5         db  0x20 ; ' '
0000000000019ac6         db  0x86 ; '.'
0000000000019ac7         db  0x04 ; '.'
0000000000019ac8         db  0x41 ; 'A'
0000000000019ac9         db  0x0e ; '.'
0000000000019aca         db  0x28 ; '('
0000000000019acb         db  0x83 ; '.'
0000000000019acc         db  0x05 ; '.'
0000000000019acd         db  0x49 ; 'I'
0000000000019ace         db  0x0e ; '.'
0000000000019acf         db  0xb0 ; '.'
0000000000019ad0         db  0x01 ; '.'
0000000000019ad1         db  0x00 ; '.'
0000000000019ad2         db  0x00 ; '.'
0000000000019ad3         db  0x00 ; '.'
0000000000019ad4         dd         0x00000050                                  ; Length of the record
0000000000019ad8         dd         0x000001b8                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019adc         db         0x54, 0x96, 0xfe, 0xff                      ; begin 0x3130
0000000000019ae0         db         0xfd, 0x0c, 2 dup (0x00)                    ; length 0xcfd (end at 0x3e2d)
0000000000019ae4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019ae5         db  0x42 ; 'B'
0000000000019ae6         db  0x0e ; '.'
0000000000019ae7         db  0x10 ; '.'
0000000000019ae8         db  0x8f ; '.'
0000000000019ae9         db  0x02 ; '.'
0000000000019aea         db  0x42 ; 'B'
0000000000019aeb         db  0x0e ; '.'
0000000000019aec         db  0x18 ; '.'
0000000000019aed         db  0x8e ; '.'
0000000000019aee         db  0x03 ; '.'
0000000000019aef         db  0x45 ; 'E'
0000000000019af0         db  0x0e ; '.'
0000000000019af1         db  0x20 ; ' '
0000000000019af2         db  0x8d ; '.'
0000000000019af3         db  0x04 ; '.'
0000000000019af4         db  0x42 ; 'B'
0000000000019af5         db  0x0e ; '.'
0000000000019af6         db  0x28 ; '('
0000000000019af7         db  0x8c ; '.'
0000000000019af8         db  0x05 ; '.'
0000000000019af9         db  0x48 ; 'H'
0000000000019afa         db  0x0e ; '.'
0000000000019afb         db  0x30 ; '0'
0000000000019afc         db  0x86 ; '.'
0000000000019afd         db  0x06 ; '.'
0000000000019afe         db  0x41 ; 'A'
0000000000019aff         db  0x0e ; '.'
0000000000019b00         db  0x38 ; '8'
0000000000019b01         db  0x83 ; '.'
0000000000019b02         db  0x07 ; '.'
0000000000019b03         db  0x52 ; 'R'
0000000000019b04         db  0x0e ; '.'
0000000000019b05         db  0xf0 ; '.'
0000000000019b06         db  0x02 ; '.'
0000000000019b07         db  0x03 ; '.'
0000000000019b08         db  0x59 ; 'Y'
0000000000019b09         db  0x07 ; '.'
0000000000019b0a         db  0x0a ; '.'
0000000000019b0b         db  0x0e ; '.'
0000000000019b0c         db  0x38 ; '8'
0000000000019b0d         db  0x41 ; 'A'
0000000000019b0e         db  0x0e ; '.'
0000000000019b0f         db  0x30 ; '0'
0000000000019b10         db  0x41 ; 'A'
0000000000019b11         db  0x0e ; '.'
0000000000019b12         db  0x28 ; '('
0000000000019b13         db  0x42 ; 'B'
0000000000019b14         db  0x0e ; '.'
0000000000019b15         db  0x20 ; ' '
0000000000019b16         db  0x42 ; 'B'
0000000000019b17         db  0x0e ; '.'
0000000000019b18         db  0x18 ; '.'
0000000000019b19         db  0x42 ; 'B'
0000000000019b1a         db  0x0e ; '.'
0000000000019b1b         db  0x10 ; '.'
0000000000019b1c         db  0x42 ; 'B'
0000000000019b1d         db  0x0e ; '.'
0000000000019b1e         db  0x08 ; '.'
0000000000019b1f         db  0x41 ; 'A'
0000000000019b20         db  0x0b ; '.'
0000000000019b21         db  0x00 ; '.'
0000000000019b22         db  0x00 ; '.'
0000000000019b23         db  0x00 ; '.'
0000000000019b24         db  0x00 ; '.'
0000000000019b25         db  0x00 ; '.'
0000000000019b26         db  0x00 ; '.'
0000000000019b27         db  0x00 ; '.'
0000000000019b28         dd         0x0000002c                                  ; Length of the record
0000000000019b2c         dd         0x0000020c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019b30         db         0x40, 0xb2, 0xfe, 0xff                      ; begin 0x4d70
0000000000019b34         db         0x14, 0x01, 2 dup (0x00)                    ; length 0x114 (end at 0x4e84)
0000000000019b38         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019b39         db  0x41 ; 'A'
0000000000019b3a         db  0x0e ; '.'
0000000000019b3b         db  0x10 ; '.'
0000000000019b3c         db  0x86 ; '.'
0000000000019b3d         db  0x02 ; '.'
0000000000019b3e         db  0x41 ; 'A'
0000000000019b3f         db  0x0e ; '.'
0000000000019b40         db  0x18 ; '.'
0000000000019b41         db  0x83 ; '.'
0000000000019b42         db  0x03 ; '.'
0000000000019b43         db  0x4d ; 'M'
0000000000019b44         db  0x0e ; '.'
0000000000019b45         db  0xf0 ; '.'
0000000000019b46         db  0x01 ; '.'
0000000000019b47         db  0x02 ; '.'
0000000000019b48         db  0xe7 ; '.'
0000000000019b49         db  0x0a ; '.'
0000000000019b4a         db  0x0e ; '.'
0000000000019b4b         db  0x18 ; '.'
0000000000019b4c         db  0x41 ; 'A'
0000000000019b4d         db  0x0e ; '.'
0000000000019b4e         db  0x10 ; '.'
0000000000019b4f         db  0x41 ; 'A'
0000000000019b50         db  0x0e ; '.'
0000000000019b51         db  0x08 ; '.'
0000000000019b52         db  0x48 ; 'H'
0000000000019b53         db  0x0b ; '.'
0000000000019b54         db  0x00 ; '.'
0000000000019b55         db  0x00 ; '.'
0000000000019b56         db  0x00 ; '.'
0000000000019b57         db  0x00 ; '.'
0000000000019b58         dd         0x00000020                                  ; Length of the record
0000000000019b5c         dd         0x0000023c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019b60         db         0x30, 0xb3, 0xfe, 0xff                      ; begin 0x4e90
0000000000019b64         db         0x44, 3 dup (0x00)                          ; length 0x44 (end at 0x4ed4)
0000000000019b68         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019b69         db  0x4f ; 'O'
0000000000019b6a         db  0x0e ; '.'
0000000000019b6b         db  0x10 ; '.'
0000000000019b6c         db  0x83 ; '.'
0000000000019b6d         db  0x02 ; '.'
0000000000019b6e         db  0x52 ; 'R'
0000000000019b6f         db  0x0e ; '.'
0000000000019b70         db  0x08 ; '.'
0000000000019b71         db  0x47 ; 'G'
0000000000019b72         db  0xc3 ; '.'
0000000000019b73         db  0x48 ; 'H'
0000000000019b74         db  0x0e ; '.'
0000000000019b75         db  0x10 ; '.'
0000000000019b76         db  0x83 ; '.'
0000000000019b77         db  0x02 ; '.'
0000000000019b78         db  0x53 ; 'S'
0000000000019b79         db  0x0e ; '.'
0000000000019b7a         db  0x08 ; '.'
0000000000019b7b         db  0x00 ; '.'
0000000000019b7c         dd         0x00000038                                  ; Length of the record
0000000000019b80         dd         0x00000260                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019b84         db         0x5c, 0xb3, 0xfe, 0xff                      ; begin 0x4ee0
0000000000019b88         db         0xa5, 3 dup (0x00)                          ; length 0xa5 (end at 0x4f85)
0000000000019b8c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019b8d         db  0x4a ; 'J'
0000000000019b8e         db  0x0e ; '.'
0000000000019b8f         db  0x10 ; '.'
0000000000019b90         db  0x8c ; '.'
0000000000019b91         db  0x02 ; '.'
0000000000019b92         db  0x44 ; 'D'
0000000000019b93         db  0x0e ; '.'
0000000000019b94         db  0x18 ; '.'
0000000000019b95         db  0x86 ; '.'
0000000000019b96         db  0x03 ; '.'
0000000000019b97         db  0x41 ; 'A'
0000000000019b98         db  0x0e ; '.'
0000000000019b99         db  0x20 ; ' '
0000000000019b9a         db  0x83 ; '.'
0000000000019b9b         db  0x04 ; '.'
0000000000019b9c         db  0x02 ; '.'
0000000000019b9d         db  0x40 ; '@'
0000000000019b9e         db  0x0a ; '.'
0000000000019b9f         db  0x0e ; '.'
0000000000019ba0         db  0x18 ; '.'
0000000000019ba1         db  0x43 ; 'C'
0000000000019ba2         db  0x0e ; '.'
0000000000019ba3         db  0x10 ; '.'
0000000000019ba4         db  0x42 ; 'B'
0000000000019ba5         db  0x0e ; '.'
0000000000019ba6         db  0x08 ; '.'
0000000000019ba7         db  0x44 ; 'D'
0000000000019ba8         db  0x0b ; '.'
0000000000019ba9         db  0x41 ; 'A'
0000000000019baa         db  0x0a ; '.'
0000000000019bab         db  0x0e ; '.'
0000000000019bac         db  0x18 ; '.'
0000000000019bad         db  0x46 ; 'F'
0000000000019bae         db  0x0e ; '.'
0000000000019baf         db  0x10 ; '.'
0000000000019bb0         db  0x42 ; 'B'
0000000000019bb1         db  0x0e ; '.'
0000000000019bb2         db  0x08 ; '.'
0000000000019bb3         db  0x47 ; 'G'
0000000000019bb4         db  0x0b ; '.'
0000000000019bb5         db  0x00 ; '.'
0000000000019bb6         db  0x00 ; '.'
0000000000019bb7         db  0x00 ; '.'
0000000000019bb8         dd         0x0000001c                                  ; Length of the record
0000000000019bbc         dd         0x0000029c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019bc0         db         0xd0, 0xb3, 0xfe, 0xff                      ; begin 0x4f90
0000000000019bc4         db         0x37, 3 dup (0x00)                          ; length 0x37 (end at 0x4fc7)
0000000000019bc8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019bc9         db  0x41 ; 'A'
0000000000019bca         db  0x0e ; '.'
0000000000019bcb         db  0x10 ; '.'
0000000000019bcc         db  0x83 ; '.'
0000000000019bcd         db  0x02 ; '.'
0000000000019bce         db  0x59 ; 'Y'
0000000000019bcf         db  0x0a ; '.'
0000000000019bd0         db  0x0e ; '.'
0000000000019bd1         db  0x08 ; '.'
0000000000019bd2         db  0x46 ; 'F'
0000000000019bd3         db  0x0b ; '.'
0000000000019bd4         db  0x56 ; 'V'
0000000000019bd5         db  0x0e ; '.'
0000000000019bd6         db  0x08 ; '.'
0000000000019bd7         db  0x00 ; '.'
0000000000019bd8         dd         0x00000010                                  ; Length of the record
0000000000019bdc         dd         0x000002bc                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019be0         db         0x00, 0x95, 0xfe, 0xff                      ; begin 0x30e0
0000000000019be4         db         0x16, 3 dup (0x00)                          ; length 0x16 (end at 0x30f6)
0000000000019be8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019be9         align      4
0000000000019bec         dd         0x00000014                                  ; Length of the record
0000000000019bf0         dd         0x000002d0                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019bf4         db         0x02, 0x95, 0xfe, 0xff                      ; begin 0x30f6
0000000000019bf8         db         0x33, 3 dup (0x00)                          ; length 0x33 (end at 0x3129)
0000000000019bfc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019bfd         db  0x41 ; 'A'
0000000000019bfe         db  0x0e ; '.'
0000000000019bff         db  0x10 ; '.'
0000000000019c00         db  0x83 ; '.'
0000000000019c01         db  0x02 ; '.'
0000000000019c02         db  0x00 ; '.'
0000000000019c03         db  0x00 ; '.'
0000000000019c04         dd         0x00000034                                  ; Length of the record
0000000000019c08         dd         0x000002e8                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019c0c         db         0xc4, 0xb3, 0xfe, 0xff                      ; begin 0x4fd0
0000000000019c10         db         0xb6, 3 dup (0x00)                          ; length 0xb6 (end at 0x5086)
0000000000019c14         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019c15         db  0x42 ; 'B'
0000000000019c16         db  0x0e ; '.'
0000000000019c17         db  0x10 ; '.'
0000000000019c18         db  0x8c ; '.'
0000000000019c19         db  0x02 ; '.'
0000000000019c1a         db  0x41 ; 'A'
0000000000019c1b         db  0x0e ; '.'
0000000000019c1c         db  0x18 ; '.'
0000000000019c1d         db  0x86 ; '.'
0000000000019c1e         db  0x03 ; '.'
0000000000019c1f         db  0x44 ; 'D'
0000000000019c20         db  0x0e ; '.'
0000000000019c21         db  0x20 ; ' '
0000000000019c22         db  0x83 ; '.'
0000000000019c23         db  0x04 ; '.'
0000000000019c24         db  0x02 ; '.'
0000000000019c25         db  0x97 ; '.'
0000000000019c26         db  0x0a ; '.'
0000000000019c27         db  0x0e ; '.'
0000000000019c28         db  0x18 ; '.'
0000000000019c29         db  0x41 ; 'A'
0000000000019c2a         db  0x0e ; '.'
0000000000019c2b         db  0x10 ; '.'
0000000000019c2c         db  0x42 ; 'B'
0000000000019c2d         db  0x0e ; '.'
0000000000019c2e         db  0x08 ; '.'
0000000000019c2f         db  0x47 ; 'G'
0000000000019c30         db  0x0b ; '.'
0000000000019c31         db  0x41 ; 'A'
0000000000019c32         db  0x0e ; '.'
0000000000019c33         db  0x18 ; '.'
0000000000019c34         db  0x41 ; 'A'
0000000000019c35         db  0x0e ; '.'
0000000000019c36         db  0x10 ; '.'
0000000000019c37         db  0x42 ; 'B'
0000000000019c38         db  0x0e ; '.'
0000000000019c39         db  0x08 ; '.'
0000000000019c3a         db  0x00 ; '.'
0000000000019c3b         db  0x00 ; '.'
0000000000019c3c         dd         0x00000064                                  ; Length of the record
0000000000019c40         dd         0x00000320                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019c44         db         0x4c, 0xb4, 0xfe, 0xff                      ; begin 0x5090
0000000000019c48         db         0x05, 0x01, 2 dup (0x00)                    ; length 0x105 (end at 0x5195)
0000000000019c4c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019c4d         db  0x42 ; 'B'
0000000000019c4e         db  0x0e ; '.'
0000000000019c4f         db  0x10 ; '.'
0000000000019c50         db  0x8d ; '.'
0000000000019c51         db  0x02 ; '.'
0000000000019c52         db  0x42 ; 'B'
0000000000019c53         db  0x0e ; '.'
0000000000019c54         db  0x18 ; '.'
0000000000019c55         db  0x8c ; '.'
0000000000019c56         db  0x03 ; '.'
0000000000019c57         db  0x45 ; 'E'
0000000000019c58         db  0x0e ; '.'
0000000000019c59         db  0x20 ; ' '
0000000000019c5a         db  0x86 ; '.'
0000000000019c5b         db  0x04 ; '.'
0000000000019c5c         db  0x41 ; 'A'
0000000000019c5d         db  0x0e ; '.'
0000000000019c5e         db  0x28 ; '('
0000000000019c5f         db  0x83 ; '.'
0000000000019c60         db  0x05 ; '.'
0000000000019c61         db  0x51 ; 'Q'
0000000000019c62         db  0x0e ; '.'
0000000000019c63         db  0x38 ; '8'
0000000000019c64         db  0x4c ; 'L'
0000000000019c65         db  0x0e ; '.'
0000000000019c66         db  0x40 ; '@'
0000000000019c67         db  0x57 ; 'W'
0000000000019c68         db  0x0e ; '.'
0000000000019c69         db  0x38 ; '8'
0000000000019c6a         db  0x41 ; 'A'
0000000000019c6b         db  0x0e ; '.'
0000000000019c6c         db  0x30 ; '0'
0000000000019c6d         db  0x4e ; 'N'
0000000000019c6e         db  0x0a ; '.'
0000000000019c6f         db  0x0e ; '.'
0000000000019c70         db  0x28 ; '('
0000000000019c71         db  0x48 ; 'H'
0000000000019c72         db  0x0e ; '.'
0000000000019c73         db  0x20 ; ' '
0000000000019c74         db  0x41 ; 'A'
0000000000019c75         db  0x0e ; '.'
0000000000019c76         db  0x18 ; '.'
0000000000019c77         db  0x42 ; 'B'
0000000000019c78         db  0x0e ; '.'
0000000000019c79         db  0x10 ; '.'
0000000000019c7a         db  0x42 ; 'B'
0000000000019c7b         db  0x0e ; '.'
0000000000019c7c         db  0x08 ; '.'
0000000000019c7d         db  0x46 ; 'F'
0000000000019c7e         db  0x0b ; '.'
0000000000019c7f         db  0x79 ; 'y'
0000000000019c80         db  0x0a ; '.'
0000000000019c81         db  0x0e ; '.'
0000000000019c82         db  0x28 ; '('
0000000000019c83         db  0x43 ; 'C'
0000000000019c84         db  0x0e ; '.'
0000000000019c85         db  0x20 ; ' '
0000000000019c86         db  0x41 ; 'A'
0000000000019c87         db  0x0e ; '.'
0000000000019c88         db  0x18 ; '.'
0000000000019c89         db  0x42 ; 'B'
0000000000019c8a         db  0x0e ; '.'
0000000000019c8b         db  0x10 ; '.'
0000000000019c8c         db  0x42 ; 'B'
0000000000019c8d         db  0x0e ; '.'
0000000000019c8e         db  0x08 ; '.'
0000000000019c8f         db  0x47 ; 'G'
0000000000019c90         db  0x0b ; '.'
0000000000019c91         db  0x02 ; '.'
0000000000019c92         db  0x54 ; 'T'
0000000000019c93         db  0x0e ; '.'
0000000000019c94         db  0x28 ; '('
0000000000019c95         db  0x43 ; 'C'
0000000000019c96         db  0x0e ; '.'
0000000000019c97         db  0x20 ; ' '
0000000000019c98         db  0x41 ; 'A'
0000000000019c99         db  0x0e ; '.'
0000000000019c9a         db  0x18 ; '.'
0000000000019c9b         db  0x42 ; 'B'
0000000000019c9c         db  0x0e ; '.'
0000000000019c9d         db  0x10 ; '.'
0000000000019c9e         db  0x42 ; 'B'
0000000000019c9f         db  0x0e ; '.'
0000000000019ca0         db  0x08 ; '.'
0000000000019ca1         db  0x00 ; '.'
0000000000019ca2         db  0x00 ; '.'
0000000000019ca3         db  0x00 ; '.'
0000000000019ca4         dd         0x0000004c                                  ; Length of the record
0000000000019ca8         dd         0x00000388                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019cac         db         0xf4, 0xb4, 0xfe, 0xff                      ; begin 0x51a0
0000000000019cb0         db         0x4b, 0x01, 2 dup (0x00)                    ; length 0x14b (end at 0x52eb)
0000000000019cb4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019cb5         db  0x42 ; 'B'
0000000000019cb6         db  0x0e ; '.'
0000000000019cb7         db  0x10 ; '.'
0000000000019cb8         db  0x8e ; '.'
0000000000019cb9         db  0x02 ; '.'
0000000000019cba         db  0x42 ; 'B'
0000000000019cbb         db  0x0e ; '.'
0000000000019cbc         db  0x18 ; '.'
0000000000019cbd         db  0x8d ; '.'
0000000000019cbe         db  0x03 ; '.'
0000000000019cbf         db  0x45 ; 'E'
0000000000019cc0         db  0x0e ; '.'
0000000000019cc1         db  0x20 ; ' '
0000000000019cc2         db  0x8c ; '.'
0000000000019cc3         db  0x04 ; '.'
0000000000019cc4         db  0x41 ; 'A'
0000000000019cc5         db  0x0e ; '.'
0000000000019cc6         db  0x28 ; '('
0000000000019cc7         db  0x86 ; '.'
0000000000019cc8         db  0x05 ; '.'
0000000000019cc9         db  0x44 ; 'D'
0000000000019cca         db  0x0e ; '.'
0000000000019ccb         db  0x30 ; '0'
0000000000019ccc         db  0x83 ; '.'
0000000000019ccd         db  0x06 ; '.'
0000000000019cce         db  0x4a ; 'J'
0000000000019ccf         db  0x0e ; '.'
0000000000019cd0         db  0x50 ; 'P'
0000000000019cd1         db  0x02 ; '.'
0000000000019cd2         db  0x83 ; '.'
0000000000019cd3         db  0x0e ; '.'
0000000000019cd4         db  0x58 ; 'X'
0000000000019cd5         db  0x4d ; 'M'
0000000000019cd6         db  0x0e ; '.'
0000000000019cd7         db  0x60 ; '`'
0000000000019cd8         db  0x56 ; 'V'
0000000000019cd9         db  0x0e ; '.'
0000000000019cda         db  0x58 ; 'X'
0000000000019cdb         db  0x41 ; 'A'
0000000000019cdc         db  0x0e ; '.'
0000000000019cdd         db  0x50 ; 'P'
0000000000019cde         db  0x02 ; '.'
0000000000019cdf         db  0x68 ; 'h'
0000000000019ce0         db  0x0a ; '.'
0000000000019ce1         db  0x0e ; '.'
0000000000019ce2         db  0x30 ; '0'
0000000000019ce3         db  0x41 ; 'A'
0000000000019ce4         db  0x0e ; '.'
0000000000019ce5         db  0x28 ; '('
0000000000019ce6         db  0x41 ; 'A'
0000000000019ce7         db  0x0e ; '.'
0000000000019ce8         db  0x20 ; ' '
0000000000019ce9         db  0x42 ; 'B'
0000000000019cea         db  0x0e ; '.'
0000000000019ceb         db  0x18 ; '.'
0000000000019cec         db  0x42 ; 'B'
0000000000019ced         db  0x0e ; '.'
0000000000019cee         db  0x10 ; '.'
0000000000019cef         db  0x42 ; 'B'
0000000000019cf0         db  0x0e ; '.'
0000000000019cf1         db  0x08 ; '.'
0000000000019cf2         db  0x41 ; 'A'
0000000000019cf3         db  0x0b ; '.'
0000000000019cf4         dd         0x0000004c                                  ; Length of the record
0000000000019cf8         dd         0x000003d8                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019cfc         db         0xf4, 0xb5, 0xfe, 0xff                      ; begin 0x52f0
0000000000019d00         db         0xbe, 3 dup (0x00)                          ; length 0xbe (end at 0x53ae)
0000000000019d04         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019d05         db  0x42 ; 'B'
0000000000019d06         db  0x0e ; '.'
0000000000019d07         db  0x10 ; '.'
0000000000019d08         db  0x8d ; '.'
0000000000019d09         db  0x02 ; '.'
0000000000019d0a         db  0x42 ; 'B'
0000000000019d0b         db  0x0e ; '.'
0000000000019d0c         db  0x18 ; '.'
0000000000019d0d         db  0x8c ; '.'
0000000000019d0e         db  0x03 ; '.'
0000000000019d0f         db  0x44 ; 'D'
0000000000019d10         db  0x0e ; '.'
0000000000019d11         db  0x20 ; ' '
0000000000019d12         db  0x86 ; '.'
0000000000019d13         db  0x04 ; '.'
0000000000019d14         db  0x41 ; 'A'
0000000000019d15         db  0x0e ; '.'
0000000000019d16         db  0x28 ; '('
0000000000019d17         db  0x83 ; '.'
0000000000019d18         db  0x05 ; '.'
0000000000019d19         db  0x51 ; 'Q'
0000000000019d1a         db  0x0e ; '.'
0000000000019d1b         db  0x30 ; '0'
0000000000019d1c         db  0x56 ; 'V'
0000000000019d1d         db  0x0a ; '.'
0000000000019d1e         db  0x0e ; '.'
0000000000019d1f         db  0x28 ; '('
0000000000019d20         db  0x46 ; 'F'
0000000000019d21         db  0x0e ; '.'
0000000000019d22         db  0x20 ; ' '
0000000000019d23         db  0x41 ; 'A'
0000000000019d24         db  0x0e ; '.'
0000000000019d25         db  0x18 ; '.'
0000000000019d26         db  0x42 ; 'B'
0000000000019d27         db  0x0e ; '.'
0000000000019d28         db  0x10 ; '.'
0000000000019d29         db  0x42 ; 'B'
0000000000019d2a         db  0x0e ; '.'
0000000000019d2b         db  0x08 ; '.'
0000000000019d2c         db  0x45 ; 'E'
0000000000019d2d         db  0x0b ; '.'
0000000000019d2e         db  0x02 ; '.'
0000000000019d2f         db  0x54 ; 'T'
0000000000019d30         db  0x0a ; '.'
0000000000019d31         db  0x0e ; '.'
0000000000019d32         db  0x28 ; '('
0000000000019d33         db  0x43 ; 'C'
0000000000019d34         db  0x0e ; '.'
0000000000019d35         db  0x20 ; ' '
0000000000019d36         db  0x41 ; 'A'
0000000000019d37         db  0x0e ; '.'
0000000000019d38         db  0x18 ; '.'
0000000000019d39         db  0x42 ; 'B'
0000000000019d3a         db  0x0e ; '.'
0000000000019d3b         db  0x10 ; '.'
0000000000019d3c         db  0x42 ; 'B'
0000000000019d3d         db  0x0e ; '.'
0000000000019d3e         db  0x08 ; '.'
0000000000019d3f         db  0x44 ; 'D'
0000000000019d40         db  0x0b ; '.'
0000000000019d41         db  0x00 ; '.'
0000000000019d42         db  0x00 ; '.'
0000000000019d43         db  0x00 ; '.'
0000000000019d44         dd         0x00000064                                  ; Length of the record
0000000000019d48         dd         0x00000428                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019d4c         db         0x64, 0xb6, 0xfe, 0xff                      ; begin 0x53b0
0000000000019d50         db         0x0e, 0x04, 2 dup (0x00)                    ; length 0x40e (end at 0x57be)
0000000000019d54         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019d55         db  0x42 ; 'B'
0000000000019d56         db  0x0e ; '.'
0000000000019d57         db  0x10 ; '.'
0000000000019d58         db  0x8f ; '.'
0000000000019d59         db  0x02 ; '.'
0000000000019d5a         db  0x42 ; 'B'
0000000000019d5b         db  0x0e ; '.'
0000000000019d5c         db  0x18 ; '.'
0000000000019d5d         db  0x8e ; '.'
0000000000019d5e         db  0x03 ; '.'
0000000000019d5f         db  0x42 ; 'B'
0000000000019d60         db  0x0e ; '.'
0000000000019d61         db  0x20 ; ' '
0000000000019d62         db  0x8d ; '.'
0000000000019d63         db  0x04 ; '.'
0000000000019d64         db  0x42 ; 'B'
0000000000019d65         db  0x0e ; '.'
0000000000019d66         db  0x28 ; '('
0000000000019d67         db  0x8c ; '.'
0000000000019d68         db  0x05 ; '.'
0000000000019d69         db  0x41 ; 'A'
0000000000019d6a         db  0x0e ; '.'
0000000000019d6b         db  0x30 ; '0'
0000000000019d6c         db  0x86 ; '.'
0000000000019d6d         db  0x06 ; '.'
0000000000019d6e         db  0x41 ; 'A'
0000000000019d6f         db  0x0e ; '.'
0000000000019d70         db  0x38 ; '8'
0000000000019d71         db  0x83 ; '.'
0000000000019d72         db  0x07 ; '.'
0000000000019d73         db  0x44 ; 'D'
0000000000019d74         db  0x0e ; '.'
0000000000019d75         db  0xb0 ; '.'
0000000000019d76         db  0x01 ; '.'
0000000000019d77         db  0x02 ; '.'
0000000000019d78         db  0xfb ; '.'
0000000000019d79         db  0x0a ; '.'
0000000000019d7a         db  0x0e ; '.'
0000000000019d7b         db  0x38 ; '8'
0000000000019d7c         db  0x44 ; 'D'
0000000000019d7d         db  0x0e ; '.'
0000000000019d7e         db  0x30 ; '0'
0000000000019d7f         db  0x41 ; 'A'
0000000000019d80         db  0x0e ; '.'
0000000000019d81         db  0x28 ; '('
0000000000019d82         db  0x42 ; 'B'
0000000000019d83         db  0x0e ; '.'
0000000000019d84         db  0x20 ; ' '
0000000000019d85         db  0x42 ; 'B'
0000000000019d86         db  0x0e ; '.'
0000000000019d87         db  0x18 ; '.'
0000000000019d88         db  0x42 ; 'B'
0000000000019d89         db  0x0e ; '.'
0000000000019d8a         db  0x10 ; '.'
0000000000019d8b         db  0x42 ; 'B'
0000000000019d8c         db  0x0e ; '.'
0000000000019d8d         db  0x08 ; '.'
0000000000019d8e         db  0x4a ; 'J'
0000000000019d8f         db  0x0b ; '.'
0000000000019d90         db  0x03 ; '.'
0000000000019d91         db  0x4d ; 'M'
0000000000019d92         db  0x01 ; '.'
0000000000019d93         db  0x0a ; '.'
0000000000019d94         db  0x0e ; '.'
0000000000019d95         db  0x38 ; '8'
0000000000019d96         db  0x41 ; 'A'
0000000000019d97         db  0x0e ; '.'
0000000000019d98         db  0x30 ; '0'
0000000000019d99         db  0x41 ; 'A'
0000000000019d9a         db  0x0e ; '.'
0000000000019d9b         db  0x28 ; '('
0000000000019d9c         db  0x42 ; 'B'
0000000000019d9d         db  0x0e ; '.'
0000000000019d9e         db  0x20 ; ' '
0000000000019d9f         db  0x42 ; 'B'
0000000000019da0         db  0x0e ; '.'
0000000000019da1         db  0x18 ; '.'
0000000000019da2         db  0x42 ; 'B'
0000000000019da3         db  0x0e ; '.'
0000000000019da4         db  0x10 ; '.'
0000000000019da5         db  0x42 ; 'B'
0000000000019da6         db  0x0e ; '.'
0000000000019da7         db  0x08 ; '.'
0000000000019da8         db  0x49 ; 'I'
0000000000019da9         db  0x0b ; '.'
0000000000019daa         db  0x00 ; '.'
0000000000019dab         db  0x00 ; '.'
0000000000019dac         dd         0x00000058                                  ; Length of the record
0000000000019db0         dd         0x00000490                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019db4         db         0x0c, 0xba, 0xfe, 0xff                      ; begin 0x57c0
0000000000019db8         db         0xd0, 3 dup (0x00)                          ; length 0xd0 (end at 0x5890)
0000000000019dbc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019dbd         db  0x42 ; 'B'
0000000000019dbe         db  0x0e ; '.'
0000000000019dbf         db  0x10 ; '.'
0000000000019dc0         db  0x8d ; '.'
0000000000019dc1         db  0x02 ; '.'
0000000000019dc2         db  0x42 ; 'B'
0000000000019dc3         db  0x0e ; '.'
0000000000019dc4         db  0x18 ; '.'
0000000000019dc5         db  0x8c ; '.'
0000000000019dc6         db  0x03 ; '.'
0000000000019dc7         db  0x41 ; 'A'
0000000000019dc8         db  0x0e ; '.'
0000000000019dc9         db  0x20 ; ' '
0000000000019dca         db  0x86 ; '.'
0000000000019dcb         db  0x04 ; '.'
0000000000019dcc         db  0x41 ; 'A'
0000000000019dcd         db  0x0e ; '.'
0000000000019dce         db  0x28 ; '('
0000000000019dcf         db  0x83 ; '.'
0000000000019dd0         db  0x05 ; '.'
0000000000019dd1         db  0x47 ; 'G'
0000000000019dd2         db  0x0e ; '.'
0000000000019dd3         db  0x30 ; '0'
0000000000019dd4         db  0x02 ; '.'
0000000000019dd5         db  0x5e ; '^'
0000000000019dd6         db  0x0a ; '.'
0000000000019dd7         db  0x0e ; '.'
0000000000019dd8         db  0x28 ; '('
0000000000019dd9         db  0x46 ; 'F'
0000000000019dda         db  0x0e ; '.'
0000000000019ddb         db  0x20 ; ' '
0000000000019ddc         db  0x41 ; 'A'
0000000000019ddd         db  0x0e ; '.'
0000000000019dde         db  0x18 ; '.'
0000000000019ddf         db  0x42 ; 'B'
0000000000019de0         db  0x0e ; '.'
0000000000019de1         db  0x10 ; '.'
0000000000019de2         db  0x42 ; 'B'
0000000000019de3         db  0x0e ; '.'
0000000000019de4         db  0x08 ; '.'
0000000000019de5         db  0x4a ; 'J'
0000000000019de6         db  0x0b ; '.'
0000000000019de7         db  0x4c ; 'L'
0000000000019de8         db  0x0a ; '.'
0000000000019de9         db  0x0e ; '.'
0000000000019dea         db  0x28 ; '('
0000000000019deb         db  0x48 ; 'H'
0000000000019dec         db  0x0e ; '.'
0000000000019ded         db  0x20 ; ' '
0000000000019dee         db  0x41 ; 'A'
0000000000019def         db  0x0e ; '.'
0000000000019df0         db  0x18 ; '.'
0000000000019df1         db  0x42 ; 'B'
0000000000019df2         db  0x0e ; '.'
0000000000019df3         db  0x10 ; '.'
0000000000019df4         db  0x42 ; 'B'
0000000000019df5         db  0x0e ; '.'
0000000000019df6         db  0x08 ; '.'
0000000000019df7         db  0x47 ; 'G'
0000000000019df8         db  0x0b ; '.'
0000000000019df9         db  0x67 ; 'g'
0000000000019dfa         db  0x0e ; '.'
0000000000019dfb         db  0x28 ; '('
0000000000019dfc         db  0x43 ; 'C'
0000000000019dfd         db  0x0e ; '.'
0000000000019dfe         db  0x20 ; ' '
0000000000019dff         db  0x41 ; 'A'
0000000000019e00         db  0x0e ; '.'
0000000000019e01         db  0x18 ; '.'
0000000000019e02         db  0x42 ; 'B'
0000000000019e03         db  0x0e ; '.'
0000000000019e04         db  0x10 ; '.'
0000000000019e05         db  0x42 ; 'B'
0000000000019e06         db  0x0e ; '.'
0000000000019e07         db  0x08 ; '.'
0000000000019e08         dd         0x00000034                                  ; Length of the record
0000000000019e0c         dd         0x000004ec                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019e10         db         0x80, 0xba, 0xfe, 0xff                      ; begin 0x5890
0000000000019e14         db         0x75, 3 dup (0x00)                          ; length 0x75 (end at 0x5905)
0000000000019e18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019e19         db  0x42 ; 'B'
0000000000019e1a         db  0x0e ; '.'
0000000000019e1b         db  0x10 ; '.'
0000000000019e1c         db  0x8c ; '.'
0000000000019e1d         db  0x02 ; '.'
0000000000019e1e         db  0x41 ; 'A'
0000000000019e1f         db  0x0e ; '.'
0000000000019e20         db  0x18 ; '.'
0000000000019e21         db  0x86 ; '.'
0000000000019e22         db  0x03 ; '.'
0000000000019e23         db  0x44 ; 'D'
0000000000019e24         db  0x0e ; '.'
0000000000019e25         db  0x20 ; ' '
0000000000019e26         db  0x83 ; '.'
0000000000019e27         db  0x04 ; '.'
0000000000019e28         db  0x02 ; '.'
0000000000019e29         db  0x54 ; 'T'
0000000000019e2a         db  0x0a ; '.'
0000000000019e2b         db  0x0e ; '.'
0000000000019e2c         db  0x18 ; '.'
0000000000019e2d         db  0x43 ; 'C'
0000000000019e2e         db  0x0e ; '.'
0000000000019e2f         db  0x10 ; '.'
0000000000019e30         db  0x42 ; 'B'
0000000000019e31         db  0x0e ; '.'
0000000000019e32         db  0x08 ; '.'
0000000000019e33         db  0x48 ; 'H'
0000000000019e34         db  0x0b ; '.'
0000000000019e35         db  0x49 ; 'I'
0000000000019e36         db  0x0e ; '.'
0000000000019e37         db  0x18 ; '.'
0000000000019e38         db  0x41 ; 'A'
0000000000019e39         db  0x0e ; '.'
0000000000019e3a         db  0x10 ; '.'
0000000000019e3b         db  0x42 ; 'B'
0000000000019e3c         db  0x0e ; '.'
0000000000019e3d         db  0x08 ; '.'
0000000000019e3e         db  0x00 ; '.'
0000000000019e3f         db  0x00 ; '.'
0000000000019e40         dd         0x00000018                                  ; Length of the record
0000000000019e44         dd         0x00000524                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019e48         db         0xc8, 0xba, 0xfe, 0xff                      ; begin 0x5910
0000000000019e4c         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x593b)
0000000000019e50         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019e51         db  0x58 ; 'X'
0000000000019e52         db  0x0e ; '.'
0000000000019e53         db  0x10 ; '.'
0000000000019e54         db  0x83 ; '.'
0000000000019e55         db  0x02 ; '.'
0000000000019e56         db  0x52 ; 'R'
0000000000019e57         db  0x0e ; '.'
0000000000019e58         db  0x08 ; '.'
0000000000019e59         db  0x00 ; '.'
0000000000019e5a         db  0x00 ; '.'
0000000000019e5b         db  0x00 ; '.'
0000000000019e5c         dd         0x00000018                                  ; Length of the record
0000000000019e60         dd         0x00000540                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019e64         db         0xdc, 0xba, 0xfe, 0xff                      ; begin 0x5940
0000000000019e68         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x596b)
0000000000019e6c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019e6d         db  0x58 ; 'X'
0000000000019e6e         db  0x0e ; '.'
0000000000019e6f         db  0x10 ; '.'
0000000000019e70         db  0x83 ; '.'
0000000000019e71         db  0x02 ; '.'
0000000000019e72         db  0x52 ; 'R'
0000000000019e73         db  0x0e ; '.'
0000000000019e74         db  0x08 ; '.'
0000000000019e75         db  0x00 ; '.'
0000000000019e76         db  0x00 ; '.'
0000000000019e77         db  0x00 ; '.'
0000000000019e78         dd         0x00000018                                  ; Length of the record
0000000000019e7c         dd         0x0000055c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019e80         db         0xf0, 0xba, 0xfe, 0xff                      ; begin 0x5970
0000000000019e84         db         0x34, 3 dup (0x00)                          ; length 0x34 (end at 0x59a4)
0000000000019e88         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019e89         db  0x45 ; 'E'
0000000000019e8a         db  0x0e ; '.'
0000000000019e8b         db  0x10 ; '.'
0000000000019e8c         db  0x83 ; '.'
0000000000019e8d         db  0x02 ; '.'
0000000000019e8e         db  0x6e ; 'n'
0000000000019e8f         db  0x0e ; '.'
0000000000019e90         db  0x08 ; '.'
0000000000019e91         db  0x00 ; '.'
0000000000019e92         db  0x00 ; '.'
0000000000019e93         db  0x00 ; '.'
0000000000019e94         dd         0x00000018                                  ; Length of the record
0000000000019e98         dd         0x00000578                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019e9c         db         0x14, 0xbb, 0xfe, 0xff                      ; begin 0x59b0
0000000000019ea0         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x59d4)
0000000000019ea4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019ea5         db  0x41 ; 'A'
0000000000019ea6         db  0x0e ; '.'
0000000000019ea7         db  0x10 ; '.'
0000000000019ea8         db  0x83 ; '.'
0000000000019ea9         db  0x02 ; '.'
0000000000019eaa         db  0x62 ; 'b'
0000000000019eab         db  0x0e ; '.'
0000000000019eac         db  0x08 ; '.'
0000000000019ead         db  0x00 ; '.'
0000000000019eae         db  0x00 ; '.'
0000000000019eaf         db  0x00 ; '.'
0000000000019eb0         dd         0x0000007c                                  ; Length of the record
0000000000019eb4         dd         0x00000594                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019eb8         db         0x28, 0xbb, 0xfe, 0xff                      ; begin 0x59e0
0000000000019ebc         db         0x0c, 0x02, 2 dup (0x00)                    ; length 0x20c (end at 0x5bec)
0000000000019ec0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019ec1         db  0x42 ; 'B'
0000000000019ec2         db  0x0e ; '.'
0000000000019ec3         db  0x10 ; '.'
0000000000019ec4         db  0x8f ; '.'
0000000000019ec5         db  0x02 ; '.'
0000000000019ec6         db  0x42 ; 'B'
0000000000019ec7         db  0x0e ; '.'
0000000000019ec8         db  0x18 ; '.'
0000000000019ec9         db  0x8e ; '.'
0000000000019eca         db  0x03 ; '.'
0000000000019ecb         db  0x42 ; 'B'
0000000000019ecc         db  0x0e ; '.'
0000000000019ecd         db  0x20 ; ' '
0000000000019ece         db  0x8d ; '.'
0000000000019ecf         db  0x04 ; '.'
0000000000019ed0         db  0x42 ; 'B'
0000000000019ed1         db  0x0e ; '.'
0000000000019ed2         db  0x28 ; '('
0000000000019ed3         db  0x8c ; '.'
0000000000019ed4         db  0x05 ; '.'
0000000000019ed5         db  0x44 ; 'D'
0000000000019ed6         db  0x0e ; '.'
0000000000019ed7         db  0x30 ; '0'
0000000000019ed8         db  0x86 ; '.'
0000000000019ed9         db  0x06 ; '.'
0000000000019eda         db  0x41 ; 'A'
0000000000019edb         db  0x0e ; '.'
0000000000019edc         db  0x38 ; '8'
0000000000019edd         db  0x83 ; '.'
0000000000019ede         db  0x07 ; '.'
0000000000019edf         db  0x49 ; 'I'
0000000000019ee0         db  0x0e ; '.'
0000000000019ee1         db  0x40 ; '@'
0000000000019ee2         db  0x02 ; '.'
0000000000019ee3         db  0x8c ; '.'
0000000000019ee4         db  0x0a ; '.'
0000000000019ee5         db  0x0e ; '.'
0000000000019ee6         db  0x38 ; '8'
0000000000019ee7         db  0x41 ; 'A'
0000000000019ee8         db  0x0e ; '.'
0000000000019ee9         db  0x30 ; '0'
0000000000019eea         db  0x41 ; 'A'
0000000000019eeb         db  0x0e ; '.'
0000000000019eec         db  0x28 ; '('
0000000000019eed         db  0x42 ; 'B'
0000000000019eee         db  0x0e ; '.'
0000000000019eef         db  0x20 ; ' '
0000000000019ef0         db  0x42 ; 'B'
0000000000019ef1         db  0x0e ; '.'
0000000000019ef2         db  0x18 ; '.'
0000000000019ef3         db  0x42 ; 'B'
0000000000019ef4         db  0x0e ; '.'
0000000000019ef5         db  0x10 ; '.'
0000000000019ef6         db  0x42 ; 'B'
0000000000019ef7         db  0x0e ; '.'
0000000000019ef8         db  0x08 ; '.'
0000000000019ef9         db  0x44 ; 'D'
0000000000019efa         db  0x0b ; '.'
0000000000019efb         db  0x50 ; 'P'
0000000000019efc         db  0x0a ; '.'
0000000000019efd         db  0x0e ; '.'
0000000000019efe         db  0x38 ; '8'
0000000000019eff         db  0x46 ; 'F'
0000000000019f00         db  0x0e ; '.'
0000000000019f01         db  0x30 ; '0'
0000000000019f02         db  0x41 ; 'A'
0000000000019f03         db  0x0e ; '.'
0000000000019f04         db  0x28 ; '('
0000000000019f05         db  0x42 ; 'B'
0000000000019f06         db  0x0e ; '.'
0000000000019f07         db  0x20 ; ' '
0000000000019f08         db  0x42 ; 'B'
0000000000019f09         db  0x0e ; '.'
0000000000019f0a         db  0x18 ; '.'
0000000000019f0b         db  0x42 ; 'B'
0000000000019f0c         db  0x0e ; '.'
0000000000019f0d         db  0x10 ; '.'
0000000000019f0e         db  0x42 ; 'B'
0000000000019f0f         db  0x0e ; '.'
0000000000019f10         db  0x08 ; '.'
0000000000019f11         db  0x41 ; 'A'
0000000000019f12         db  0x0b ; '.'
0000000000019f13         db  0x03 ; '.'
0000000000019f14         db  0x04 ; '.'
0000000000019f15         db  0x01 ; '.'
0000000000019f16         db  0x0a ; '.'
0000000000019f17         db  0x0e ; '.'
0000000000019f18         db  0x38 ; '8'
0000000000019f19         db  0x41 ; 'A'
0000000000019f1a         db  0x0e ; '.'
0000000000019f1b         db  0x30 ; '0'
0000000000019f1c         db  0x41 ; 'A'
0000000000019f1d         db  0x0e ; '.'
0000000000019f1e         db  0x28 ; '('
0000000000019f1f         db  0x42 ; 'B'
0000000000019f20         db  0x0e ; '.'
0000000000019f21         db  0x20 ; ' '
0000000000019f22         db  0x44 ; 'D'
0000000000019f23         db  0x0e ; '.'
0000000000019f24         db  0x18 ; '.'
0000000000019f25         db  0x42 ; 'B'
0000000000019f26         db  0x0e ; '.'
0000000000019f27         db  0x10 ; '.'
0000000000019f28         db  0x42 ; 'B'
0000000000019f29         db  0x0e ; '.'
0000000000019f2a         db  0x08 ; '.'
0000000000019f2b         db  0x48 ; 'H'
0000000000019f2c         db  0x0b ; '.'
0000000000019f2d         db  0x00 ; '.'
0000000000019f2e         db  0x00 ; '.'
0000000000019f2f         db  0x00 ; '.'
0000000000019f30         dd         0x0000001c                                  ; Length of the record
0000000000019f34         dd         0x00000614                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019f38         db         0xb8, 0xbc, 0xfe, 0xff                      ; begin 0x5bf0
0000000000019f3c         db         0x2a, 3 dup (0x00)                          ; length 0x2a (end at 0x5c1a)
0000000000019f40         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019f41         db  0x41 ; 'A'
0000000000019f42         db  0x0e ; '.'
0000000000019f43         db  0x10 ; '.'
0000000000019f44         db  0x83 ; '.'
0000000000019f45         db  0x02 ; '.'
0000000000019f46         db  0x4e ; 'N'
0000000000019f47         db  0x0a ; '.'
0000000000019f48         db  0x0e ; '.'
0000000000019f49         db  0x08 ; '.'
0000000000019f4a         db  0x41 ; 'A'
0000000000019f4b         db  0x0b ; '.'
0000000000019f4c         db  0x59 ; 'Y'
0000000000019f4d         db  0x0e ; '.'
0000000000019f4e         db  0x08 ; '.'
0000000000019f4f         db  0x00 ; '.'
0000000000019f50         dd         0x0000002c                                  ; Length of the record
0000000000019f54         dd         0x00000634                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019f58         db         0xc8, 0xbc, 0xfe, 0xff                      ; begin 0x5c20
0000000000019f5c         db         0x0c, 0x41, 2 dup (0x00)                    ; length 0x410c (end at 0x9d2c)
0000000000019f60         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019f61         db  0x41 ; 'A'
0000000000019f62         db  0x0e ; '.'
0000000000019f63         db  0x10 ; '.'
0000000000019f64         db  0x86 ; '.'
0000000000019f65         db  0x02 ; '.'
0000000000019f66         db  0x43 ; 'C'
0000000000019f67         db  0x0d ; '.'
0000000000019f68         db  0x06 ; '.'
0000000000019f69         db  0x48 ; 'H'
0000000000019f6a         db  0x8f ; '.'
0000000000019f6b         db  0x03 ; '.'
0000000000019f6c         db  0x8e ; '.'
0000000000019f6d         db  0x04 ; '.'
0000000000019f6e         db  0x8d ; '.'
0000000000019f6f         db  0x05 ; '.'
0000000000019f70         db  0x8c ; '.'
0000000000019f71         db  0x06 ; '.'
0000000000019f72         db  0x44 ; 'D'
0000000000019f73         db  0x83 ; '.'
0000000000019f74         db  0x07 ; '.'
0000000000019f75         db  0x03 ; '.'
0000000000019f76         db  0x5a ; 'Z'
0000000000019f77         db  0x08 ; '.'
0000000000019f78         db  0x0a ; '.'
0000000000019f79         db  0x0c ; '.'
0000000000019f7a         db  0x07 ; '.'
0000000000019f7b         db  0x08 ; '.'
0000000000019f7c         db  0x46 ; 'F'
0000000000019f7d         db  0x0b ; '.'
0000000000019f7e         db  0x00 ; '.'
0000000000019f7f         db  0x00 ; '.'
0000000000019f80         dd         0x0000002c                                  ; Length of the record
0000000000019f84         dd         0x00000664                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019f88         db         0xa8, 0xfd, 0xfe, 0xff                      ; begin 0x9d30
0000000000019f8c         db         0x65, 0x01, 2 dup (0x00)                    ; length 0x165 (end at 0x9e95)
0000000000019f90         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019f91         db  0x44 ; 'D'
0000000000019f92         db  0x0e ; '.'
0000000000019f93         db  0x20 ; ' '
0000000000019f94         db  0x02 ; '.'
0000000000019f95         db  0x59 ; 'Y'
0000000000019f96         db  0x0e ; '.'
0000000000019f97         db  0x28 ; '('
0000000000019f98         db  0x45 ; 'E'
0000000000019f99         db  0x0e ; '.'
0000000000019f9a         db  0x30 ; '0'
0000000000019f9b         db  0x5c ; '\'
0000000000019f9c         db  0x0e ; '.'
0000000000019f9d         db  0x38 ; '8'
0000000000019f9e         db  0x42 ; 'B'
0000000000019f9f         db  0x0e ; '.'
0000000000019fa0         db  0x40 ; '@'
0000000000019fa1         db  0x49 ; 'I'
0000000000019fa2         db  0x0e ; '.'
0000000000019fa3         db  0x20 ; ' '
0000000000019fa4         db  0x54 ; 'T'
0000000000019fa5         db  0x0a ; '.'
0000000000019fa6         db  0x0e ; '.'
0000000000019fa7         db  0x08 ; '.'
0000000000019fa8         db  0x43 ; 'C'
0000000000019fa9         db  0x0b ; '.'
0000000000019faa         db  0x00 ; '.'
0000000000019fab         db  0x00 ; '.'
0000000000019fac         db  0x00 ; '.'
0000000000019fad         db  0x00 ; '.'
0000000000019fae         db  0x00 ; '.'
0000000000019faf         db  0x00 ; '.'
0000000000019fb0         dd         0x00000010                                  ; Length of the record
0000000000019fb4         dd         0x00000694                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019fb8         db         0xe8, 2 dup (0xfe), 0xff                    ; begin 0x9ea0
0000000000019fbc         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x9eac)
0000000000019fc0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019fc1         align      4
0000000000019fc4         dd         0x00000010                                  ; Length of the record
0000000000019fc8         dd         0x000006a8                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019fcc         db         0xe4, 2 dup (0xfe), 0xff                    ; begin 0x9eb0
0000000000019fd0         db         0x1c, 3 dup (0x00)                          ; length 0x1c (end at 0x9ecc)
0000000000019fd4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019fd5         align      8
0000000000019fd8         dd         0x00000018                                  ; Length of the record
0000000000019fdc         dd         0x000006bc                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019fe0         db         0xf0, 2 dup (0xfe), 0xff                    ; begin 0x9ed0
0000000000019fe4         db         0x16, 3 dup (0x00)                          ; length 0x16 (end at 0x9ee6)
0000000000019fe8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000019fe9         db  0x41 ; 'A'
0000000000019fea         db  0x0e ; '.'
0000000000019feb         db  0x10 ; '.'
0000000000019fec         db  0x83 ; '.'
0000000000019fed         db  0x02 ; '.'
0000000000019fee         db  0x50 ; 'P'
0000000000019fef         db  0x0e ; '.'
0000000000019ff0         db  0x08 ; '.'
0000000000019ff1         db  0x00 ; '.'
0000000000019ff2         db  0x00 ; '.'
0000000000019ff3         db  0x00 ; '.'
0000000000019ff4         dd         0x00000020                                  ; Length of the record
0000000000019ff8         dd         0x000006d8                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
0000000000019ffc         db         0xf4, 2 dup (0xfe), 0xff                    ; begin 0x9ef0
000000000001a000         db         0x6a, 3 dup (0x00)                          ; length 0x6a (end at 0x9f5a)
000000000001a004         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a005         db  0x41 ; 'A'
000000000001a006         db  0x0e ; '.'
000000000001a007         db  0x10 ; '.'
000000000001a008         db  0x83 ; '.'
000000000001a009         db  0x02 ; '.'
000000000001a00a         db  0x44 ; 'D'
000000000001a00b         db  0x0e ; '.'
000000000001a00c         db  0x30 ; '0'
000000000001a00d         db  0x02 ; '.'
000000000001a00e         db  0x5e ; '^'
000000000001a00f         db  0x0a ; '.'
000000000001a010         db  0x0e ; '.'
000000000001a011         db  0x10 ; '.'
000000000001a012         db  0x41 ; 'A'
000000000001a013         db  0x0e ; '.'
000000000001a014         db  0x08 ; '.'
000000000001a015         db  0x41 ; 'A'
000000000001a016         db  0x0b ; '.'
000000000001a017         db  0x00 ; '.'
000000000001a018         dd         0x00000018                                  ; Length of the record
000000000001a01c         dd         0x000006fc                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a020         db         0x40, 0xff, 0xfe, 0xff                      ; begin 0x9f60
000000000001a024         db         0x59, 3 dup (0x00)                          ; length 0x59 (end at 0x9fb9)
000000000001a028         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a029         db  0x44 ; 'D'
000000000001a02a         db  0x0e ; '.'
000000000001a02b         db  0x30 ; '0'
000000000001a02c         db  0x02 ; '.'
000000000001a02d         db  0x45 ; 'E'
000000000001a02e         db  0x0a ; '.'
000000000001a02f         db  0x0e ; '.'
000000000001a030         db  0x08 ; '.'
000000000001a031         db  0x47 ; 'G'
000000000001a032         db  0x0b ; '.'
000000000001a033         db  0x00 ; '.'
000000000001a034         dd         0x00000038                                  ; Length of the record
000000000001a038         dd         0x00000718                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a03c         db         0x84, 0xff, 0xfe, 0xff                      ; begin 0x9fc0
000000000001a040         db         0x79, 3 dup (0x00)                          ; length 0x79 (end at 0xa039)
000000000001a044         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a045         db  0x42 ; 'B'
000000000001a046         db  0x0e ; '.'
000000000001a047         db  0x10 ; '.'
000000000001a048         db  0x8d ; '.'
000000000001a049         db  0x02 ; '.'
000000000001a04a         db  0x42 ; 'B'
000000000001a04b         db  0x0e ; '.'
000000000001a04c         db  0x18 ; '.'
000000000001a04d         db  0x8c ; '.'
000000000001a04e         db  0x03 ; '.'
000000000001a04f         db  0x44 ; 'D'
000000000001a050         db  0x0e ; '.'
000000000001a051         db  0x20 ; ' '
000000000001a052         db  0x86 ; '.'
000000000001a053         db  0x04 ; '.'
000000000001a054         db  0x41 ; 'A'
000000000001a055         db  0x0e ; '.'
000000000001a056         db  0x28 ; '('
000000000001a057         db  0x83 ; '.'
000000000001a058         db  0x05 ; '.'
000000000001a059         db  0x4f ; 'O'
000000000001a05a         db  0x0e ; '.'
000000000001a05b         db  0x30 ; '0'
000000000001a05c         db  0x02 ; '.'
000000000001a05d         db  0x50 ; 'P'
000000000001a05e         db  0x0a ; '.'
000000000001a05f         db  0x0e ; '.'
000000000001a060         db  0x28 ; '('
000000000001a061         db  0x41 ; 'A'
000000000001a062         db  0x0e ; '.'
000000000001a063         db  0x20 ; ' '
000000000001a064         db  0x41 ; 'A'
000000000001a065         db  0x0e ; '.'
000000000001a066         db  0x18 ; '.'
000000000001a067         db  0x42 ; 'B'
000000000001a068         db  0x0e ; '.'
000000000001a069         db  0x10 ; '.'
000000000001a06a         db  0x42 ; 'B'
000000000001a06b         db  0x0e ; '.'
000000000001a06c         db  0x08 ; '.'
000000000001a06d         db  0x42 ; 'B'
000000000001a06e         db  0x0b ; '.'
000000000001a06f         db  0x00 ; '.'
000000000001a070         dd         0x00000018                                  ; Length of the record
000000000001a074         dd         0x00000754                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a078         db         0xc8, 0xff, 0xfe, 0xff                      ; begin 0xa040
000000000001a07c         db         0x3b, 3 dup (0x00)                          ; length 0x3b (end at 0xa07b)
000000000001a080         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a081         db  0x59 ; 'Y'
000000000001a082         db  0x0e ; '.'
000000000001a083         db  0x10 ; '.'
000000000001a084         db  0x5c ; '\'
000000000001a085         db  0x0a ; '.'
000000000001a086         db  0x0e ; '.'
000000000001a087         db  0x08 ; '.'
000000000001a088         db  0x41 ; 'A'
000000000001a089         db  0x0b ; '.'
000000000001a08a         db  0x00 ; '.'
000000000001a08b         db  0x00 ; '.'
000000000001a08c         dd         0x00000010                                  ; Length of the record
000000000001a090         dd         0x00000770                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a094         db         0xec, 0xff, 0xfe, 0xff                      ; begin 0xa080
000000000001a098         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0xa08c)
000000000001a09c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a09d         align      32
000000000001a0a0         dd         0x00000010                                  ; Length of the record
000000000001a0a4         dd         0x00000784                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a0a8         db         0xe8, 0xff, 0xfe, 0xff                      ; begin 0xa090
000000000001a0ac         db         0x2a, 3 dup (0x00)                          ; length 0x2a (end at 0xa0ba)
000000000001a0b0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a0b1         align      4
000000000001a0b4         dd         0x00000050                                  ; Length of the record
000000000001a0b8         dd         0x00000798                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a0bc         db         0x04, 0x00, 2 dup (0xff)                    ; begin 0xa0c0
000000000001a0c0         db         0x0d, 0x03, 2 dup (0x00)                    ; length 0x30d (end at 0xa3cd)
000000000001a0c4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a0c5         db  0x42 ; 'B'
000000000001a0c6         db  0x0e ; '.'
000000000001a0c7         db  0x10 ; '.'
000000000001a0c8         db  0x8f ; '.'
000000000001a0c9         db  0x02 ; '.'
000000000001a0ca         db  0x42 ; 'B'
000000000001a0cb         db  0x0e ; '.'
000000000001a0cc         db  0x18 ; '.'
000000000001a0cd         db  0x8e ; '.'
000000000001a0ce         db  0x03 ; '.'
000000000001a0cf         db  0x45 ; 'E'
000000000001a0d0         db  0x0e ; '.'
000000000001a0d1         db  0x20 ; ' '
000000000001a0d2         db  0x8d ; '.'
000000000001a0d3         db  0x04 ; '.'
000000000001a0d4         db  0x42 ; 'B'
000000000001a0d5         db  0x0e ; '.'
000000000001a0d6         db  0x28 ; '('
000000000001a0d7         db  0x8c ; '.'
000000000001a0d8         db  0x05 ; '.'
000000000001a0d9         db  0x44 ; 'D'
000000000001a0da         db  0x0e ; '.'
000000000001a0db         db  0x30 ; '0'
000000000001a0dc         db  0x86 ; '.'
000000000001a0dd         db  0x06 ; '.'
000000000001a0de         db  0x41 ; 'A'
000000000001a0df         db  0x0e ; '.'
000000000001a0e0         db  0x38 ; '8'
000000000001a0e1         db  0x83 ; '.'
000000000001a0e2         db  0x07 ; '.'
000000000001a0e3         db  0x51 ; 'Q'
000000000001a0e4         db  0x0e ; '.'
000000000001a0e5         db  0xd0 ; '.'
000000000001a0e6         db  0x20 ; ' '
000000000001a0e7         db  0x03 ; '.'
000000000001a0e8         db  0x5d ; ']'
000000000001a0e9         db  0x01 ; '.'
000000000001a0ea         db  0x0a ; '.'
000000000001a0eb         db  0x0e ; '.'
000000000001a0ec         db  0x38 ; '8'
000000000001a0ed         db  0x41 ; 'A'
000000000001a0ee         db  0x0e ; '.'
000000000001a0ef         db  0x30 ; '0'
000000000001a0f0         db  0x41 ; 'A'
000000000001a0f1         db  0x0e ; '.'
000000000001a0f2         db  0x28 ; '('
000000000001a0f3         db  0x42 ; 'B'
000000000001a0f4         db  0x0e ; '.'
000000000001a0f5         db  0x20 ; ' '
000000000001a0f6         db  0x42 ; 'B'
000000000001a0f7         db  0x0e ; '.'
000000000001a0f8         db  0x18 ; '.'
000000000001a0f9         db  0x42 ; 'B'
000000000001a0fa         db  0x0e ; '.'
000000000001a0fb         db  0x10 ; '.'
000000000001a0fc         db  0x42 ; 'B'
000000000001a0fd         db  0x0e ; '.'
000000000001a0fe         db  0x08 ; '.'
000000000001a0ff         db  0x48 ; 'H'
000000000001a100         db  0x0b ; '.'
000000000001a101         db  0x00 ; '.'
000000000001a102         db  0x00 ; '.'
000000000001a103         db  0x00 ; '.'
000000000001a104         db  0x00 ; '.'
000000000001a105         db  0x00 ; '.'
000000000001a106         db  0x00 ; '.'
000000000001a107         db  0x00 ; '.'
000000000001a108         dd         0x00000010                                  ; Length of the record
000000000001a10c         dd         0x000007ec                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a110         db         0xc0, 0x02, 2 dup (0xff)                    ; begin 0xa3d0
000000000001a114         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0xa3e8)
000000000001a118         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a119         align      4
000000000001a11c         dd         0x00000028                                  ; Length of the record
000000000001a120         dd         0x00000800                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a124         db         0xcc, 0x02, 2 dup (0xff)                    ; begin 0xa3f0
000000000001a128         db         0x58, 3 dup (0x00)                          ; length 0x58 (end at 0xa448)
000000000001a12c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a12d         db  0x42 ; 'B'
000000000001a12e         db  0x0e ; '.'
000000000001a12f         db  0x10 ; '.'
000000000001a130         db  0x8c ; '.'
000000000001a131         db  0x02 ; '.'
000000000001a132         db  0x41 ; 'A'
000000000001a133         db  0x0e ; '.'
000000000001a134         db  0x18 ; '.'
000000000001a135         db  0x86 ; '.'
000000000001a136         db  0x03 ; '.'
000000000001a137         db  0x44 ; 'D'
000000000001a138         db  0x0e ; '.'
000000000001a139         db  0x20 ; ' '
000000000001a13a         db  0x83 ; '.'
000000000001a13b         db  0x04 ; '.'
000000000001a13c         db  0x02 ; '.'
000000000001a13d         db  0x4d ; 'M'
000000000001a13e         db  0x0e ; '.'
000000000001a13f         db  0x18 ; '.'
000000000001a140         db  0x41 ; 'A'
000000000001a141         db  0x0e ; '.'
000000000001a142         db  0x10 ; '.'
000000000001a143         db  0x42 ; 'B'
000000000001a144         db  0x0e ; '.'
000000000001a145         db  0x08 ; '.'
000000000001a146         db  0x00 ; '.'
000000000001a147         db  0x00 ; '.'
000000000001a148         dd         0x00000010                                  ; Length of the record
000000000001a14c         dd         0x0000082c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a150         db         0x00, 0x03, 2 dup (0xff)                    ; begin 0xa450
000000000001a154         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0xa461)
000000000001a158         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a159         align      4
000000000001a15c         dd         0x00000048                                  ; Length of the record
000000000001a160         dd         0x00000840                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a164         db         0x0c, 0x03, 2 dup (0xff)                    ; begin 0xa470
000000000001a168         db         0x61, 0x01, 2 dup (0x00)                    ; length 0x161 (end at 0xa5d1)
000000000001a16c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a16d         db  0x42 ; 'B'
000000000001a16e         db  0x0e ; '.'
000000000001a16f         db  0x10 ; '.'
000000000001a170         db  0x8f ; '.'
000000000001a171         db  0x02 ; '.'
000000000001a172         db  0x42 ; 'B'
000000000001a173         db  0x0e ; '.'
000000000001a174         db  0x18 ; '.'
000000000001a175         db  0x8e ; '.'
000000000001a176         db  0x03 ; '.'
000000000001a177         db  0x45 ; 'E'
000000000001a178         db  0x0e ; '.'
000000000001a179         db  0x20 ; ' '
000000000001a17a         db  0x8d ; '.'
000000000001a17b         db  0x04 ; '.'
000000000001a17c         db  0x42 ; 'B'
000000000001a17d         db  0x0e ; '.'
000000000001a17e         db  0x28 ; '('
000000000001a17f         db  0x8c ; '.'
000000000001a180         db  0x05 ; '.'
000000000001a181         db  0x44 ; 'D'
000000000001a182         db  0x0e ; '.'
000000000001a183         db  0x30 ; '0'
000000000001a184         db  0x86 ; '.'
000000000001a185         db  0x06 ; '.'
000000000001a186         db  0x41 ; 'A'
000000000001a187         db  0x0e ; '.'
000000000001a188         db  0x38 ; '8'
000000000001a189         db  0x83 ; '.'
000000000001a18a         db  0x07 ; '.'
000000000001a18b         db  0x4f ; 'O'
000000000001a18c         db  0x0e ; '.'
000000000001a18d         db  0x80 ; '.'
000000000001a18e         db  0x03 ; '.'
000000000001a18f         db  0x02 ; '.'
000000000001a190         db  0xc1 ; '.'
000000000001a191         db  0x0a ; '.'
000000000001a192         db  0x0e ; '.'
000000000001a193         db  0x38 ; '8'
000000000001a194         db  0x41 ; 'A'
000000000001a195         db  0x0e ; '.'
000000000001a196         db  0x30 ; '0'
000000000001a197         db  0x41 ; 'A'
000000000001a198         db  0x0e ; '.'
000000000001a199         db  0x28 ; '('
000000000001a19a         db  0x42 ; 'B'
000000000001a19b         db  0x0e ; '.'
000000000001a19c         db  0x20 ; ' '
000000000001a19d         db  0x42 ; 'B'
000000000001a19e         db  0x0e ; '.'
000000000001a19f         db  0x18 ; '.'
000000000001a1a0         db  0x42 ; 'B'
000000000001a1a1         db  0x0e ; '.'
000000000001a1a2         db  0x10 ; '.'
000000000001a1a3         db  0x42 ; 'B'
000000000001a1a4         db  0x0e ; '.'
000000000001a1a5         db  0x08 ; '.'
000000000001a1a6         db  0x46 ; 'F'
000000000001a1a7         db  0x0b ; '.'
000000000001a1a8         dd         0x00000044                                  ; Length of the record
000000000001a1ac         dd         0x0000088c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a1b0         db         0x30, 0x04, 2 dup (0xff)                    ; begin 0xa5e0
000000000001a1b4         db         0x52, 0x01, 2 dup (0x00)                    ; length 0x152 (end at 0xa732)
000000000001a1b8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a1b9         db  0x42 ; 'B'
000000000001a1ba         db  0x0e ; '.'
000000000001a1bb         db  0x10 ; '.'
000000000001a1bc         db  0x8e ; '.'
000000000001a1bd         db  0x02 ; '.'
000000000001a1be         db  0x42 ; 'B'
000000000001a1bf         db  0x0e ; '.'
000000000001a1c0         db  0x18 ; '.'
000000000001a1c1         db  0x8d ; '.'
000000000001a1c2         db  0x03 ; '.'
000000000001a1c3         db  0x42 ; 'B'
000000000001a1c4         db  0x0e ; '.'
000000000001a1c5         db  0x20 ; ' '
000000000001a1c6         db  0x8c ; '.'
000000000001a1c7         db  0x04 ; '.'
000000000001a1c8         db  0x41 ; 'A'
000000000001a1c9         db  0x0e ; '.'
000000000001a1ca         db  0x28 ; '('
000000000001a1cb         db  0x86 ; '.'
000000000001a1cc         db  0x05 ; '.'
000000000001a1cd         db  0x44 ; 'D'
000000000001a1ce         db  0x0e ; '.'
000000000001a1cf         db  0x30 ; '0'
000000000001a1d0         db  0x83 ; '.'
000000000001a1d1         db  0x06 ; '.'
000000000001a1d2         db  0x4c ; 'L'
000000000001a1d3         db  0x0e ; '.'
000000000001a1d4         db  0xe0 ; '.'
000000000001a1d5         db  0x02 ; '.'
000000000001a1d6         db  0x02 ; '.'
000000000001a1d7         db  0xb2 ; '.'
000000000001a1d8         db  0x0a ; '.'
000000000001a1d9         db  0x0e ; '.'
000000000001a1da         db  0x30 ; '0'
000000000001a1db         db  0x41 ; 'A'
000000000001a1dc         db  0x0e ; '.'
000000000001a1dd         db  0x28 ; '('
000000000001a1de         db  0x41 ; 'A'
000000000001a1df         db  0x0e ; '.'
000000000001a1e0         db  0x20 ; ' '
000000000001a1e1         db  0x42 ; 'B'
000000000001a1e2         db  0x0e ; '.'
000000000001a1e3         db  0x18 ; '.'
000000000001a1e4         db  0x42 ; 'B'
000000000001a1e5         db  0x0e ; '.'
000000000001a1e6         db  0x10 ; '.'
000000000001a1e7         db  0x42 ; 'B'
000000000001a1e8         db  0x0e ; '.'
000000000001a1e9         db  0x08 ; '.'
000000000001a1ea         db  0x47 ; 'G'
000000000001a1eb         db  0x0b ; '.'
000000000001a1ec         db  0x00 ; '.'
000000000001a1ed         db  0x00 ; '.'
000000000001a1ee         db  0x00 ; '.'
000000000001a1ef         db  0x00 ; '.'
000000000001a1f0         dd         0x00000034                                  ; Length of the record
000000000001a1f4         dd         0x000008d4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a1f8         db         0x48, 0x05, 2 dup (0xff)                    ; begin 0xa740
000000000001a1fc         db         0x8c, 3 dup (0x00)                          ; length 0x8c (end at 0xa7cc)
000000000001a200         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a201         db  0x42 ; 'B'
000000000001a202         db  0x0e ; '.'
000000000001a203         db  0x10 ; '.'
000000000001a204         db  0x8c ; '.'
000000000001a205         db  0x02 ; '.'
000000000001a206         db  0x41 ; 'A'
000000000001a207         db  0x0e ; '.'
000000000001a208         db  0x18 ; '.'
000000000001a209         db  0x86 ; '.'
000000000001a20a         db  0x03 ; '.'
000000000001a20b         db  0x44 ; 'D'
000000000001a20c         db  0x0e ; '.'
000000000001a20d         db  0x20 ; ' '
000000000001a20e         db  0x83 ; '.'
000000000001a20f         db  0x04 ; '.'
000000000001a210         db  0x02 ; '.'
000000000001a211         db  0x4e ; 'N'
000000000001a212         db  0x0a ; '.'
000000000001a213         db  0x0e ; '.'
000000000001a214         db  0x18 ; '.'
000000000001a215         db  0x41 ; 'A'
000000000001a216         db  0x0e ; '.'
000000000001a217         db  0x10 ; '.'
000000000001a218         db  0x42 ; 'B'
000000000001a219         db  0x0e ; '.'
000000000001a21a         db  0x08 ; '.'
000000000001a21b         db  0x48 ; 'H'
000000000001a21c         db  0x0b ; '.'
000000000001a21d         db  0x68 ; 'h'
000000000001a21e         db  0x0e ; '.'
000000000001a21f         db  0x18 ; '.'
000000000001a220         db  0x41 ; 'A'
000000000001a221         db  0x0e ; '.'
000000000001a222         db  0x10 ; '.'
000000000001a223         db  0x42 ; 'B'
000000000001a224         db  0x0e ; '.'
000000000001a225         db  0x08 ; '.'
000000000001a226         db  0x00 ; '.'
000000000001a227         db  0x00 ; '.'
000000000001a228         dd         0x0000002c                                  ; Length of the record
000000000001a22c         dd         0x0000090c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a230         db         0xa0, 0x05, 2 dup (0xff)                    ; begin 0xa7d0
000000000001a234         db         0x50, 3 dup (0x00)                          ; length 0x50 (end at 0xa820)
000000000001a238         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a239         db  0x42 ; 'B'
000000000001a23a         db  0x0e ; '.'
000000000001a23b         db  0x10 ; '.'
000000000001a23c         db  0x8c ; '.'
000000000001a23d         db  0x02 ; '.'
000000000001a23e         db  0x41 ; 'A'
000000000001a23f         db  0x0e ; '.'
000000000001a240         db  0x18 ; '.'
000000000001a241         db  0x86 ; '.'
000000000001a242         db  0x03 ; '.'
000000000001a243         db  0x44 ; 'D'
000000000001a244         db  0x0e ; '.'
000000000001a245         db  0x20 ; ' '
000000000001a246         db  0x83 ; '.'
000000000001a247         db  0x04 ; '.'
000000000001a248         db  0x02 ; '.'
000000000001a249         db  0x45 ; 'E'
000000000001a24a         db  0x0e ; '.'
000000000001a24b         db  0x18 ; '.'
000000000001a24c         db  0x41 ; 'A'
000000000001a24d         db  0x0e ; '.'
000000000001a24e         db  0x10 ; '.'
000000000001a24f         db  0x42 ; 'B'
000000000001a250         db  0x0e ; '.'
000000000001a251         db  0x08 ; '.'
000000000001a252         db  0x00 ; '.'
000000000001a253         db  0x00 ; '.'
000000000001a254         db  0x00 ; '.'
000000000001a255         db  0x00 ; '.'
000000000001a256         db  0x00 ; '.'
000000000001a257         db  0x00 ; '.'
000000000001a258         dd         0x0000004c                                  ; Length of the record
000000000001a25c         dd         0x0000093c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a260         db         0xc0, 0x05, 2 dup (0xff)                    ; begin 0xa820
000000000001a264         db         0xef, 3 dup (0x00)                          ; length 0xef (end at 0xa90f)
000000000001a268         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a269         db  0x42 ; 'B'
000000000001a26a         db  0x0e ; '.'
000000000001a26b         db  0x10 ; '.'
000000000001a26c         db  0x8f ; '.'
000000000001a26d         db  0x02 ; '.'
000000000001a26e         db  0x42 ; 'B'
000000000001a26f         db  0x0e ; '.'
000000000001a270         db  0x18 ; '.'
000000000001a271         db  0x8e ; '.'
000000000001a272         db  0x03 ; '.'
000000000001a273         db  0x47 ; 'G'
000000000001a274         db  0x0e ; '.'
000000000001a275         db  0x20 ; ' '
000000000001a276         db  0x8d ; '.'
000000000001a277         db  0x04 ; '.'
000000000001a278         db  0x42 ; 'B'
000000000001a279         db  0x0e ; '.'
000000000001a27a         db  0x28 ; '('
000000000001a27b         db  0x8c ; '.'
000000000001a27c         db  0x05 ; '.'
000000000001a27d         db  0x44 ; 'D'
000000000001a27e         db  0x0e ; '.'
000000000001a27f         db  0x30 ; '0'
000000000001a280         db  0x86 ; '.'
000000000001a281         db  0x06 ; '.'
000000000001a282         db  0x41 ; 'A'
000000000001a283         db  0x0e ; '.'
000000000001a284         db  0x38 ; '8'
000000000001a285         db  0x83 ; '.'
000000000001a286         db  0x07 ; '.'
000000000001a287         db  0x5c ; '\'
000000000001a288         db  0x0e ; '.'
000000000001a289         db  0x40 ; '@'
000000000001a28a         db  0x02 ; '.'
000000000001a28b         db  0x61 ; 'a'
000000000001a28c         db  0x0a ; '.'
000000000001a28d         db  0x0e ; '.'
000000000001a28e         db  0x38 ; '8'
000000000001a28f         db  0x44 ; 'D'
000000000001a290         db  0x0e ; '.'
000000000001a291         db  0x30 ; '0'
000000000001a292         db  0x41 ; 'A'
000000000001a293         db  0x0e ; '.'
000000000001a294         db  0x28 ; '('
000000000001a295         db  0x42 ; 'B'
000000000001a296         db  0x0e ; '.'
000000000001a297         db  0x20 ; ' '
000000000001a298         db  0x42 ; 'B'
000000000001a299         db  0x0e ; '.'
000000000001a29a         db  0x18 ; '.'
000000000001a29b         db  0x42 ; 'B'
000000000001a29c         db  0x0e ; '.'
000000000001a29d         db  0x10 ; '.'
000000000001a29e         db  0x42 ; 'B'
000000000001a29f         db  0x0e ; '.'
000000000001a2a0         db  0x08 ; '.'
000000000001a2a1         db  0x44 ; 'D'
000000000001a2a2         db  0x0b ; '.'
000000000001a2a3         db  0x00 ; '.'
000000000001a2a4         db  0x00 ; '.'
000000000001a2a5         db  0x00 ; '.'
000000000001a2a6         db  0x00 ; '.'
000000000001a2a7         db  0x00 ; '.'
000000000001a2a8         dd         0x00000018                                  ; Length of the record
000000000001a2ac         dd         0x0000098c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a2b0         db         0x60, 0x06, 2 dup (0xff)                    ; begin 0xa910
000000000001a2b4         db         0x46, 3 dup (0x00)                          ; length 0x46 (end at 0xa956)
000000000001a2b8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a2b9         db  0x44 ; 'D'
000000000001a2ba         db  0x0e ; '.'
000000000001a2bb         db  0x10 ; '.'
000000000001a2bc         db  0x83 ; '.'
000000000001a2bd         db  0x02 ; '.'
000000000001a2be         db  0x59 ; 'Y'
000000000001a2bf         db  0x0a ; '.'
000000000001a2c0         db  0x0e ; '.'
000000000001a2c1         db  0x08 ; '.'
000000000001a2c2         db  0x43 ; 'C'
000000000001a2c3         db  0x0b ; '.'
000000000001a2c4         dd         0x00000050                                  ; Length of the record
000000000001a2c8         dd         0x000009a8                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a2cc         db         0x94, 0x06, 2 dup (0xff)                    ; begin 0xa960
000000000001a2d0         db         0x12, 0x06, 2 dup (0x00)                    ; length 0x612 (end at 0xaf72)
000000000001a2d4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a2d5         db  0x42 ; 'B'
000000000001a2d6         db  0x0e ; '.'
000000000001a2d7         db  0x10 ; '.'
000000000001a2d8         db  0x8f ; '.'
000000000001a2d9         db  0x02 ; '.'
000000000001a2da         db  0x42 ; 'B'
000000000001a2db         db  0x0e ; '.'
000000000001a2dc         db  0x18 ; '.'
000000000001a2dd         db  0x8e ; '.'
000000000001a2de         db  0x03 ; '.'
000000000001a2df         db  0x42 ; 'B'
000000000001a2e0         db  0x0e ; '.'
000000000001a2e1         db  0x20 ; ' '
000000000001a2e2         db  0x8d ; '.'
000000000001a2e3         db  0x04 ; '.'
000000000001a2e4         db  0x42 ; 'B'
000000000001a2e5         db  0x0e ; '.'
000000000001a2e6         db  0x28 ; '('
000000000001a2e7         db  0x8c ; '.'
000000000001a2e8         db  0x05 ; '.'
000000000001a2e9         db  0x41 ; 'A'
000000000001a2ea         db  0x0e ; '.'
000000000001a2eb         db  0x30 ; '0'
000000000001a2ec         db  0x86 ; '.'
000000000001a2ed         db  0x06 ; '.'
000000000001a2ee         db  0x41 ; 'A'
000000000001a2ef         db  0x0e ; '.'
000000000001a2f0         db  0x38 ; '8'
000000000001a2f1         db  0x83 ; '.'
000000000001a2f2         db  0x07 ; '.'
000000000001a2f3         db  0x4a ; 'J'
000000000001a2f4         db  0x0e ; '.'
000000000001a2f5         db  0xc0 ; '.'
000000000001a2f6         db  0x01 ; '.'
000000000001a2f7         db  0x03 ; '.'
000000000001a2f8         db  0x9a ; '.'
000000000001a2f9         db  0x03 ; '.'
000000000001a2fa         db  0x0a ; '.'
000000000001a2fb         db  0x0e ; '.'
000000000001a2fc         db  0x38 ; '8'
000000000001a2fd         db  0x41 ; 'A'
000000000001a2fe         db  0x0e ; '.'
000000000001a2ff         db  0x30 ; '0'
000000000001a300         db  0x41 ; 'A'
000000000001a301         db  0x0e ; '.'
000000000001a302         db  0x28 ; '('
000000000001a303         db  0x42 ; 'B'
000000000001a304         db  0x0e ; '.'
000000000001a305         db  0x20 ; ' '
000000000001a306         db  0x42 ; 'B'
000000000001a307         db  0x0e ; '.'
000000000001a308         db  0x18 ; '.'
000000000001a309         db  0x42 ; 'B'
000000000001a30a         db  0x0e ; '.'
000000000001a30b         db  0x10 ; '.'
000000000001a30c         db  0x42 ; 'B'
000000000001a30d         db  0x0e ; '.'
000000000001a30e         db  0x08 ; '.'
000000000001a30f         db  0x48 ; 'H'
000000000001a310         db  0x0b ; '.'
000000000001a311         db  0x00 ; '.'
000000000001a312         db  0x00 ; '.'
000000000001a313         db  0x00 ; '.'
000000000001a314         db  0x00 ; '.'
000000000001a315         db  0x00 ; '.'
000000000001a316         db  0x00 ; '.'
000000000001a317         db  0x00 ; '.'
000000000001a318         dd         0x00000014                                  ; Length of the record
000000000001a31c         dd         0x000009fc                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a320         db         0x60, 0x0c, 2 dup (0xff)                    ; begin 0xaf80
000000000001a324         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0xaf8a)
000000000001a328         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a329         align      16
000000000001a330         dd         0x00000014                                  ; Length of the record
000000000001a334         dd         0x00000a14                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a338         db         0x58, 0x0c, 2 dup (0xff)                    ; begin 0xaf90
000000000001a33c         db         0x33, 3 dup (0x00)                          ; length 0x33 (end at 0xafc3)
000000000001a340         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a341         db  0x44 ; 'D'
000000000001a342         db  0x0e ; '.'
000000000001a343         db  0x10 ; '.'
000000000001a344         db  0x6e ; 'n'
000000000001a345         db  0x0e ; '.'
000000000001a346         db  0x08 ; '.'
000000000001a347         db  0x00 ; '.'
000000000001a348         dd         0x00000018                                  ; Length of the record
000000000001a34c         dd         0x00000a2c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a350         db         0x80, 0x0c, 2 dup (0xff)                    ; begin 0xafd0
000000000001a354         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0xafea)
000000000001a358         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a359         db  0x44 ; 'D'
000000000001a35a         db  0x0e ; '.'
000000000001a35b         db  0x10 ; '.'
000000000001a35c         db  0x50 ; 'P'
000000000001a35d         db  0x0a ; '.'
000000000001a35e         db  0x0e ; '.'
000000000001a35f         db  0x08 ; '.'
000000000001a360         db  0x41 ; 'A'
000000000001a361         db  0x0b ; '.'
000000000001a362         db  0x00 ; '.'
000000000001a363         db  0x00 ; '.'
000000000001a364         dd         0x00000010                                  ; Length of the record
000000000001a368         dd         0x00000a48                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a36c         db         0x84, 0x0c, 2 dup (0xff)                    ; begin 0xaff0
000000000001a370         db         0x16, 3 dup (0x00)                          ; length 0x16 (end at 0xb006)
000000000001a374         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a375         align      8
000000000001a378         dd         0x0000001c                                  ; Length of the record
000000000001a37c         dd         0x00000a5c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a380         db         0x90, 0x0c, 2 dup (0xff)                    ; begin 0xb010
000000000001a384         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0xb05a)
000000000001a388         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a389         db  0x55 ; 'U'
000000000001a38a         db  0x0e ; '.'
000000000001a38b         db  0x10 ; '.'
000000000001a38c         db  0x5d ; ']'
000000000001a38d         db  0x0e ; '.'
000000000001a38e         db  0x08 ; '.'
000000000001a38f         db  0x4e ; 'N'
000000000001a390         db  0x0e ; '.'
000000000001a391         db  0x10 ; '.'
000000000001a392         db  0x49 ; 'I'
000000000001a393         db  0x0e ; '.'
000000000001a394         db  0x08 ; '.'
000000000001a395         db  0x00 ; '.'
000000000001a396         db  0x00 ; '.'
000000000001a397         db  0x00 ; '.'
000000000001a398         dd         0x00000014                                  ; Length of the record
000000000001a39c         dd         0x00000a7c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a3a0         db         0xc0, 0x0c, 2 dup (0xff)                    ; begin 0xb060
000000000001a3a4         db         0x70, 3 dup (0x00)                          ; length 0x70 (end at 0xb0d0)
000000000001a3a8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a3a9         align      16
000000000001a3b0         dd         0x00000010                                  ; Length of the record
000000000001a3b4         dd         0x00000a94                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a3b8         db         0x18, 0x0d, 2 dup (0xff)                    ; begin 0xb0d0
000000000001a3bc         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0xb0d8)
000000000001a3c0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a3c1         align      4
000000000001a3c4         dd         0x00000038                                  ; Length of the record
000000000001a3c8         dd         0x00000aa8                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a3cc         db         0x14, 0x0d, 2 dup (0xff)                    ; begin 0xb0e0
000000000001a3d0         db         0x07, 0x01, 2 dup (0x00)                    ; length 0x107 (end at 0xb1e7)
000000000001a3d4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a3d5         db  0x42 ; 'B'
000000000001a3d6         db  0x0e ; '.'
000000000001a3d7         db  0x10 ; '.'
000000000001a3d8         db  0x8c ; '.'
000000000001a3d9         db  0x02 ; '.'
000000000001a3da         db  0x41 ; 'A'
000000000001a3db         db  0x0e ; '.'
000000000001a3dc         db  0x18 ; '.'
000000000001a3dd         db  0x86 ; '.'
000000000001a3de         db  0x03 ; '.'
000000000001a3df         db  0x41 ; 'A'
000000000001a3e0         db  0x0e ; '.'
000000000001a3e1         db  0x20 ; ' '
000000000001a3e2         db  0x83 ; '.'
000000000001a3e3         db  0x04 ; '.'
000000000001a3e4         db  0x65 ; 'e'
000000000001a3e5         db  0x0a ; '.'
000000000001a3e6         db  0x0e ; '.'
000000000001a3e7         db  0x18 ; '.'
000000000001a3e8         db  0x41 ; 'A'
000000000001a3e9         db  0x0e ; '.'
000000000001a3ea         db  0x10 ; '.'
000000000001a3eb         db  0x42 ; 'B'
000000000001a3ec         db  0x0e ; '.'
000000000001a3ed         db  0x08 ; '.'
000000000001a3ee         db  0x4c ; 'L'
000000000001a3ef         db  0x0b ; '.'
000000000001a3f0         db  0x02 ; '.'
000000000001a3f1         db  0xac ; '.'
000000000001a3f2         db  0x0a ; '.'
000000000001a3f3         db  0x0e ; '.'
000000000001a3f4         db  0x18 ; '.'
000000000001a3f5         db  0x41 ; 'A'
000000000001a3f6         db  0x0e ; '.'
000000000001a3f7         db  0x10 ; '.'
000000000001a3f8         db  0x42 ; 'B'
000000000001a3f9         db  0x0e ; '.'
000000000001a3fa         db  0x08 ; '.'
000000000001a3fb         db  0x49 ; 'I'
000000000001a3fc         db  0x0b ; '.'
000000000001a3fd         db  0x00 ; '.'
000000000001a3fe         db  0x00 ; '.'
000000000001a3ff         db  0x00 ; '.'
000000000001a400         dd         0x00000010                                  ; Length of the record
000000000001a404         dd         0x00000ae4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a408         db         0xe8, 0x0d, 2 dup (0xff)                    ; begin 0xb1f0
000000000001a40c         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0xb1f8)
000000000001a410         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a411         align      4
000000000001a414         dd         0x00000010                                  ; Length of the record
000000000001a418         dd         0x00000af8                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a41c         db         0xe4, 0x0d, 2 dup (0xff)                    ; begin 0xb200
000000000001a420         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0xb208)
000000000001a424         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a425         align      8
000000000001a428         dd         0x0000002c                                  ; Length of the record
000000000001a42c         dd         0x00000b0c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a430         db         0xe0, 0x0d, 2 dup (0xff)                    ; begin 0xb210
000000000001a434         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0xb2b4)
000000000001a438         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a439         db  0x41 ; 'A'
000000000001a43a         db  0x0e ; '.'
000000000001a43b         db  0x10 ; '.'
000000000001a43c         db  0x86 ; '.'
000000000001a43d         db  0x02 ; '.'
000000000001a43e         db  0x41 ; 'A'
000000000001a43f         db  0x0e ; '.'
000000000001a440         db  0x18 ; '.'
000000000001a441         db  0x83 ; '.'
000000000001a442         db  0x03 ; '.'
000000000001a443         db  0x44 ; 'D'
000000000001a444         db  0x0e ; '.'
000000000001a445         db  0x20 ; ' '
000000000001a446         db  0x7a ; 'z'
000000000001a447         db  0x0a ; '.'
000000000001a448         db  0x0e ; '.'
000000000001a449         db  0x18 ; '.'
000000000001a44a         db  0x41 ; 'A'
000000000001a44b         db  0x0e ; '.'
000000000001a44c         db  0x10 ; '.'
000000000001a44d         db  0x41 ; 'A'
000000000001a44e         db  0x0e ; '.'
000000000001a44f         db  0x08 ; '.'
000000000001a450         db  0x41 ; 'A'
000000000001a451         db  0x0b ; '.'
000000000001a452         db  0x00 ; '.'
000000000001a453         db  0x00 ; '.'
000000000001a454         db  0x00 ; '.'
000000000001a455         db  0x00 ; '.'
000000000001a456         db  0x00 ; '.'
000000000001a457         db  0x00 ; '.'
000000000001a458         dd         0x0000001c                                  ; Length of the record
000000000001a45c         dd         0x00000b3c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a460         db         0x60, 0x0e, 2 dup (0xff)                    ; begin 0xb2c0
000000000001a464         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0xb2d8)
000000000001a468         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a469         db  0x44 ; 'D'
000000000001a46a         db  0x0e ; '.'
000000000001a46b         db  0x10 ; '.'
000000000001a46c         db  0x4e ; 'N'
000000000001a46d         db  0x0a ; '.'
000000000001a46e         db  0x0e ; '.'
000000000001a46f         db  0x08 ; '.'
000000000001a470         db  0x41 ; 'A'
000000000001a471         db  0x0b ; '.'
000000000001a472         db  0x00 ; '.'
000000000001a473         db  0x00 ; '.'
000000000001a474         db  0x00 ; '.'
000000000001a475         db  0x00 ; '.'
000000000001a476         db  0x00 ; '.'
000000000001a477         db  0x00 ; '.'
000000000001a478         dd         0x00000030                                  ; Length of the record
000000000001a47c         dd         0x00000b5c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a480         db         0x60, 0x0e, 2 dup (0xff)                    ; begin 0xb2e0
000000000001a484         db         0x5d, 3 dup (0x00)                          ; length 0x5d (end at 0xb33d)
000000000001a488         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a489         db  0x41 ; 'A'
000000000001a48a         db  0x0e ; '.'
000000000001a48b         db  0x10 ; '.'
000000000001a48c         db  0x86 ; '.'
000000000001a48d         db  0x02 ; '.'
000000000001a48e         db  0x41 ; 'A'
000000000001a48f         db  0x0e ; '.'
000000000001a490         db  0x18 ; '.'
000000000001a491         db  0x83 ; '.'
000000000001a492         db  0x03 ; '.'
000000000001a493         db  0x49 ; 'I'
000000000001a494         db  0x0e ; '.'
000000000001a495         db  0x20 ; ' '
000000000001a496         db  0x7c ; '|'
000000000001a497         db  0x0a ; '.'
000000000001a498         db  0x0e ; '.'
000000000001a499         db  0x18 ; '.'
000000000001a49a         db  0x44 ; 'D'
000000000001a49b         db  0x0e ; '.'
000000000001a49c         db  0x10 ; '.'
000000000001a49d         db  0x41 ; 'A'
000000000001a49e         db  0x0e ; '.'
000000000001a49f         db  0x08 ; '.'
000000000001a4a0         db  0x44 ; 'D'
000000000001a4a1         db  0x0b ; '.'
000000000001a4a2         db  0x44 ; 'D'
000000000001a4a3         db  0x0e ; '.'
000000000001a4a4         db  0x18 ; '.'
000000000001a4a5         db  0x47 ; 'G'
000000000001a4a6         db  0x0e ; '.'
000000000001a4a7         db  0x10 ; '.'
000000000001a4a8         db  0x41 ; 'A'
000000000001a4a9         db  0x0e ; '.'
000000000001a4aa         db  0x08 ; '.'
000000000001a4ab         db  0x00 ; '.'
000000000001a4ac         dd         0x00000028                                  ; Length of the record
000000000001a4b0         dd         0x00000b90                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a4b4         db         0x8c, 0x0e, 2 dup (0xff)                    ; begin 0xb340
000000000001a4b8         db         0x5a, 3 dup (0x00)                          ; length 0x5a (end at 0xb39a)
000000000001a4bc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a4bd         db  0x41 ; 'A'
000000000001a4be         db  0x0e ; '.'
000000000001a4bf         db  0x10 ; '.'
000000000001a4c0         db  0x86 ; '.'
000000000001a4c1         db  0x02 ; '.'
000000000001a4c2         db  0x41 ; 'A'
000000000001a4c3         db  0x0e ; '.'
000000000001a4c4         db  0x18 ; '.'
000000000001a4c5         db  0x83 ; '.'
000000000001a4c6         db  0x03 ; '.'
000000000001a4c7         db  0x47 ; 'G'
000000000001a4c8         db  0x0e ; '.'
000000000001a4c9         db  0x20 ; ' '
000000000001a4ca         db  0x02 ; '.'
000000000001a4cb         db  0x41 ; 'A'
000000000001a4cc         db  0x0a ; '.'
000000000001a4cd         db  0x0e ; '.'
000000000001a4ce         db  0x18 ; '.'
000000000001a4cf         db  0x44 ; 'D'
000000000001a4d0         db  0x0e ; '.'
000000000001a4d1         db  0x10 ; '.'
000000000001a4d2         db  0x41 ; 'A'
000000000001a4d3         db  0x0e ; '.'
000000000001a4d4         db  0x08 ; '.'
000000000001a4d5         db  0x41 ; 'A'
000000000001a4d6         db  0x0b ; '.'
000000000001a4d7         db  0x00 ; '.'
000000000001a4d8         dd         0x00000010                                  ; Length of the record
000000000001a4dc         dd         0x00000bbc                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a4e0         db         0xc0, 0x0e, 2 dup (0xff)                    ; begin 0xb3a0
000000000001a4e4         db         0x5c, 3 dup (0x00)                          ; length 0x5c (end at 0xb3fc)
000000000001a4e8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a4e9         align      4
000000000001a4ec         dd         0x00000028                                  ; Length of the record
000000000001a4f0         dd         0x00000bd0                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a4f4         db         0x0c, 0x0f, 2 dup (0xff)                    ; begin 0xb400
000000000001a4f8         db         0x47, 3 dup (0x00)                          ; length 0x47 (end at 0xb447)
000000000001a4fc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a4fd         db  0x41 ; 'A'
000000000001a4fe         db  0x0e ; '.'
000000000001a4ff         db  0x10 ; '.'
000000000001a500         db  0x83 ; '.'
000000000001a501         db  0x02 ; '.'
000000000001a502         db  0x5a ; 'Z'
000000000001a503         db  0x0a ; '.'
000000000001a504         db  0x0e ; '.'
000000000001a505         db  0x08 ; '.'
000000000001a506         db  0x45 ; 'E'
000000000001a507         db  0x0b ; '.'
000000000001a508         db  0x5d ; ']'
000000000001a509         db  0x0a ; '.'
000000000001a50a         db  0x0e ; '.'
000000000001a50b         db  0x08 ; '.'
000000000001a50c         db  0x43 ; 'C'
000000000001a50d         db  0x0b ; '.'
000000000001a50e         db  0x46 ; 'F'
000000000001a50f         db  0x0e ; '.'
000000000001a510         db  0x08 ; '.'
000000000001a511         db  0x00 ; '.'
000000000001a512         db  0x00 ; '.'
000000000001a513         db  0x00 ; '.'
000000000001a514         db  0x00 ; '.'
000000000001a515         db  0x00 ; '.'
000000000001a516         db  0x00 ; '.'
000000000001a517         db  0x00 ; '.'
000000000001a518         dd         0x00000010                                  ; Length of the record
000000000001a51c         dd         0x00000bfc                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a520         db         0x30, 0x0f, 2 dup (0xff)                    ; begin 0xb450
000000000001a524         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0xb455)
000000000001a528         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a529         align      4
000000000001a52c         dd         0x00000018                                  ; Length of the record
000000000001a530         dd         0x00000c10                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a534         db         0x2c, 0x0f, 2 dup (0xff)                    ; begin 0xb460
000000000001a538         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0xb482)
000000000001a53c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a53d         db  0x46 ; 'F'
000000000001a53e         db  0x0e ; '.'
000000000001a53f         db  0x10 ; '.'
000000000001a540         db  0x83 ; '.'
000000000001a541         db  0x02 ; '.'
000000000001a542         db  0x4e ; 'N'
000000000001a543         db  0xc3 ; '.'
000000000001a544         db  0x0e ; '.'
000000000001a545         db  0x08 ; '.'
000000000001a546         db  0x00 ; '.'
000000000001a547         db  0x00 ; '.'
000000000001a548         dd         0x0000001c                                  ; Length of the record
000000000001a54c         dd         0x00000c2c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a550         db         0x40, 0x0f, 2 dup (0xff)                    ; begin 0xb490
000000000001a554         db         0x6e, 3 dup (0x00)                          ; length 0x6e (end at 0xb4fe)
000000000001a558         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a559         db  0x44 ; 'D'
000000000001a55a         db  0x0e ; '.'
000000000001a55b         db  0x60 ; '`'
000000000001a55c         db  0x7f ; '.'
000000000001a55d         db  0x0a ; '.'
000000000001a55e         db  0x0e ; '.'
000000000001a55f         db  0x08 ; '.'
000000000001a560         db  0x45 ; 'E'
000000000001a561         db  0x0b ; '.'
000000000001a562         db  0x00 ; '.'
000000000001a563         db  0x00 ; '.'
000000000001a564         db  0x00 ; '.'
000000000001a565         db  0x00 ; '.'
000000000001a566         db  0x00 ; '.'
000000000001a567         db  0x00 ; '.'
000000000001a568         dd         0x0000005c                                  ; Length of the record
000000000001a56c         dd         0x00000c4c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a570         db         0x90, 0x0f, 2 dup (0xff)                    ; begin 0xb500
000000000001a574         db         0x87, 3 dup (0x00)                          ; length 0x87 (end at 0xb587)
000000000001a578         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a579         db  0x47 ; 'G'
000000000001a57a         db  0x0e ; '.'
000000000001a57b         db  0x10 ; '.'
000000000001a57c         db  0x8d ; '.'
000000000001a57d         db  0x02 ; '.'
000000000001a57e         db  0x42 ; 'B'
000000000001a57f         db  0x0e ; '.'
000000000001a580         db  0x18 ; '.'
000000000001a581         db  0x8c ; '.'
000000000001a582         db  0x03 ; '.'
000000000001a583         db  0x44 ; 'D'
000000000001a584         db  0x0e ; '.'
000000000001a585         db  0x20 ; ' '
000000000001a586         db  0x86 ; '.'
000000000001a587         db  0x04 ; '.'
000000000001a588         db  0x41 ; 'A'
000000000001a589         db  0x0e ; '.'
000000000001a58a         db  0x28 ; '('
000000000001a58b         db  0x83 ; '.'
000000000001a58c         db  0x05 ; '.'
000000000001a58d         db  0x4f ; 'O'
000000000001a58e         db  0x0e ; '.'
000000000001a58f         db  0x30 ; '0'
000000000001a590         db  0x7c ; '|'
000000000001a591         db  0x0a ; '.'
000000000001a592         db  0x0e ; '.'
000000000001a593         db  0x28 ; '('
000000000001a594         db  0x44 ; 'D'
000000000001a595         db  0xc3 ; '.'
000000000001a596         db  0x0e ; '.'
000000000001a597         db  0x20 ; ' '
000000000001a598         db  0x41 ; 'A'
000000000001a599         db  0xc6 ; '.'
000000000001a59a         db  0x0e ; '.'
000000000001a59b         db  0x18 ; '.'
000000000001a59c         db  0x42 ; 'B'
000000000001a59d         db  0xcc ; '.'
000000000001a59e         db  0x0e ; '.'
000000000001a59f         db  0x10 ; '.'
000000000001a5a0         db  0x42 ; 'B'
000000000001a5a1         db  0xcd ; '.'
000000000001a5a2         db  0x0e ; '.'
000000000001a5a3         db  0x08 ; '.'
000000000001a5a4         db  0x4e ; 'N'
000000000001a5a5         db  0x0b ; '.'
000000000001a5a6         db  0x44 ; 'D'
000000000001a5a7         db  0x0e ; '.'
000000000001a5a8         db  0x28 ; '('
000000000001a5a9         db  0x41 ; 'A'
000000000001a5aa         db  0x0e ; '.'
000000000001a5ab         db  0x20 ; ' '
000000000001a5ac         db  0x41 ; 'A'
000000000001a5ad         db  0x0e ; '.'
000000000001a5ae         db  0x18 ; '.'
000000000001a5af         db  0x42 ; 'B'
000000000001a5b0         db  0x0e ; '.'
000000000001a5b1         db  0x10 ; '.'
000000000001a5b2         db  0x42 ; 'B'
000000000001a5b3         db  0x0e ; '.'
000000000001a5b4         db  0x08 ; '.'
000000000001a5b5         db  0x46 ; 'F'
000000000001a5b6         db  0xc3 ; '.'
000000000001a5b7         db  0xc6 ; '.'
000000000001a5b8         db  0xcc ; '.'
000000000001a5b9         db  0xcd ; '.'
000000000001a5ba         db  0x42 ; 'B'
000000000001a5bb         db  0x0e ; '.'
000000000001a5bc         db  0x30 ; '0'
000000000001a5bd         db  0x83 ; '.'
000000000001a5be         db  0x05 ; '.'
000000000001a5bf         db  0x86 ; '.'
000000000001a5c0         db  0x04 ; '.'
000000000001a5c1         db  0x8c ; '.'
000000000001a5c2         db  0x03 ; '.'
000000000001a5c3         db  0x8d ; '.'
000000000001a5c4         db  0x02 ; '.'
000000000001a5c5         db  0x00 ; '.'
000000000001a5c6         db  0x00 ; '.'
000000000001a5c7         db  0x00 ; '.'
000000000001a5c8         dd         0x0000001c                                  ; Length of the record
000000000001a5cc         dd         0x00000cac                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a5d0         db         0xc0, 0x0f, 2 dup (0xff)                    ; begin 0xb590
000000000001a5d4         db         0x56, 3 dup (0x00)                          ; length 0x56 (end at 0xb5e6)
000000000001a5d8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a5d9         db  0x44 ; 'D'
000000000001a5da         db  0x0e ; '.'
000000000001a5db         db  0x30 ; '0'
000000000001a5dc         db  0x02 ; '.'
000000000001a5dd         db  0x4c ; 'L'
000000000001a5de         db  0x0a ; '.'
000000000001a5df         db  0x0e ; '.'
000000000001a5e0         db  0x08 ; '.'
000000000001a5e1         db  0x41 ; 'A'
000000000001a5e2         db  0x0b ; '.'
000000000001a5e3         db  0x00 ; '.'
000000000001a5e4         db  0x00 ; '.'
000000000001a5e5         db  0x00 ; '.'
000000000001a5e6         db  0x00 ; '.'
000000000001a5e7         db  0x00 ; '.'
000000000001a5e8         dd         0x00000010                                  ; Length of the record
000000000001a5ec         dd         0x00000ccc                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a5f0         db         0x00, 0x10, 2 dup (0xff)                    ; begin 0xb5f0
000000000001a5f4         db         0x83, 0x01, 2 dup (0x00)                    ; length 0x183 (end at 0xb773)
000000000001a5f8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a5f9         align      4
000000000001a5fc         dd         0x00000010                                  ; Length of the record
000000000001a600         dd         0x00000ce0                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a604         db         0x7c, 0x11, 2 dup (0xff)                    ; begin 0xb780
000000000001a608         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0xb788)
000000000001a60c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a60d         align      16
000000000001a610         dd         0x0000001c                                  ; Length of the record
000000000001a614         dd         0x00000cf4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a618         db         0x78, 0x11, 2 dup (0xff)                    ; begin 0xb790
000000000001a61c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0xb7a8)
000000000001a620         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a621         db  0x44 ; 'D'
000000000001a622         db  0x0e ; '.'
000000000001a623         db  0x10 ; '.'
000000000001a624         db  0x4e ; 'N'
000000000001a625         db  0x0a ; '.'
000000000001a626         db  0x0e ; '.'
000000000001a627         db  0x08 ; '.'
000000000001a628         db  0x41 ; 'A'
000000000001a629         db  0x0b ; '.'
000000000001a62a         db  0x00 ; '.'
000000000001a62b         db  0x00 ; '.'
000000000001a62c         db  0x00 ; '.'
000000000001a62d         db  0x00 ; '.'
000000000001a62e         db  0x00 ; '.'
000000000001a62f         db  0x00 ; '.'
000000000001a630         dd         0x0000004c                                  ; Length of the record
000000000001a634         dd         0x00000d14                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a638         db         0x78, 0x11, 2 dup (0xff)                    ; begin 0xb7b0
000000000001a63c         db         0xff, 3 dup (0x00)                          ; length 0xff (end at 0xb8af)
000000000001a640         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a641         db  0x42 ; 'B'
000000000001a642         db  0x0e ; '.'
000000000001a643         db  0x10 ; '.'
000000000001a644         db  0x8f ; '.'
000000000001a645         db  0x02 ; '.'
000000000001a646         db  0x42 ; 'B'
000000000001a647         db  0x0e ; '.'
000000000001a648         db  0x18 ; '.'
000000000001a649         db  0x8e ; '.'
000000000001a64a         db  0x03 ; '.'
000000000001a64b         db  0x45 ; 'E'
000000000001a64c         db  0x0e ; '.'
000000000001a64d         db  0x20 ; ' '
000000000001a64e         db  0x8d ; '.'
000000000001a64f         db  0x04 ; '.'
000000000001a650         db  0x42 ; 'B'
000000000001a651         db  0x0e ; '.'
000000000001a652         db  0x28 ; '('
000000000001a653         db  0x8c ; '.'
000000000001a654         db  0x05 ; '.'
000000000001a655         db  0x44 ; 'D'
000000000001a656         db  0x0e ; '.'
000000000001a657         db  0x30 ; '0'
000000000001a658         db  0x86 ; '.'
000000000001a659         db  0x06 ; '.'
000000000001a65a         db  0x41 ; 'A'
000000000001a65b         db  0x0e ; '.'
000000000001a65c         db  0x38 ; '8'
000000000001a65d         db  0x83 ; '.'
000000000001a65e         db  0x07 ; '.'
000000000001a65f         db  0x47 ; 'G'
000000000001a660         db  0x0e ; '.'
000000000001a661         db  0x50 ; 'P'
000000000001a662         db  0x02 ; '.'
000000000001a663         db  0xc3 ; '.'
000000000001a664         db  0x0a ; '.'
000000000001a665         db  0x0e ; '.'
000000000001a666         db  0x38 ; '8'
000000000001a667         db  0x44 ; 'D'
000000000001a668         db  0x0e ; '.'
000000000001a669         db  0x30 ; '0'
000000000001a66a         db  0x41 ; 'A'
000000000001a66b         db  0x0e ; '.'
000000000001a66c         db  0x28 ; '('
000000000001a66d         db  0x42 ; 'B'
000000000001a66e         db  0x0e ; '.'
000000000001a66f         db  0x20 ; ' '
000000000001a670         db  0x42 ; 'B'
000000000001a671         db  0x0e ; '.'
000000000001a672         db  0x18 ; '.'
000000000001a673         db  0x42 ; 'B'
000000000001a674         db  0x0e ; '.'
000000000001a675         db  0x10 ; '.'
000000000001a676         db  0x42 ; 'B'
000000000001a677         db  0x0e ; '.'
000000000001a678         db  0x08 ; '.'
000000000001a679         db  0x49 ; 'I'
000000000001a67a         db  0x0b ; '.'
000000000001a67b         db  0x00 ; '.'
000000000001a67c         db  0x00 ; '.'
000000000001a67d         db  0x00 ; '.'
000000000001a67e         db  0x00 ; '.'
000000000001a67f         db  0x00 ; '.'
000000000001a680         dd         0x0000004c                                  ; Length of the record
000000000001a684         dd         0x00000d64                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a688         db         0x28, 0x12, 2 dup (0xff)                    ; begin 0xb8b0
000000000001a68c         db         0x76, 3 dup (0x00)                          ; length 0x76 (end at 0xb926)
000000000001a690         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a691         db  0x42 ; 'B'
000000000001a692         db  0x0e ; '.'
000000000001a693         db  0x10 ; '.'
000000000001a694         db  0x8d ; '.'
000000000001a695         db  0x02 ; '.'
000000000001a696         db  0x42 ; 'B'
000000000001a697         db  0x0e ; '.'
000000000001a698         db  0x18 ; '.'
000000000001a699         db  0x8c ; '.'
000000000001a69a         db  0x03 ; '.'
000000000001a69b         db  0x41 ; 'A'
000000000001a69c         db  0x0e ; '.'
000000000001a69d         db  0x20 ; ' '
000000000001a69e         db  0x86 ; '.'
000000000001a69f         db  0x04 ; '.'
000000000001a6a0         db  0x41 ; 'A'
000000000001a6a1         db  0x0e ; '.'
000000000001a6a2         db  0x28 ; '('
000000000001a6a3         db  0x83 ; '.'
000000000001a6a4         db  0x05 ; '.'
000000000001a6a5         db  0x44 ; 'D'
000000000001a6a6         db  0x0e ; '.'
000000000001a6a7         db  0x30 ; '0'
000000000001a6a8         db  0x7e ; '~'
000000000001a6a9         db  0x0a ; '.'
000000000001a6aa         db  0x0e ; '.'
000000000001a6ab         db  0x28 ; '('
000000000001a6ac         db  0x44 ; 'D'
000000000001a6ad         db  0x0e ; '.'
000000000001a6ae         db  0x20 ; ' '
000000000001a6af         db  0x41 ; 'A'
000000000001a6b0         db  0x0e ; '.'
000000000001a6b1         db  0x18 ; '.'
000000000001a6b2         db  0x42 ; 'B'
000000000001a6b3         db  0x0e ; '.'
000000000001a6b4         db  0x10 ; '.'
000000000001a6b5         db  0x42 ; 'B'
000000000001a6b6         db  0x0e ; '.'
000000000001a6b7         db  0x08 ; '.'
000000000001a6b8         db  0x47 ; 'G'
000000000001a6b9         db  0x0b ; '.'
000000000001a6ba         db  0x4f ; 'O'
000000000001a6bb         db  0x0a ; '.'
000000000001a6bc         db  0x0e ; '.'
000000000001a6bd         db  0x28 ; '('
000000000001a6be         db  0x44 ; 'D'
000000000001a6bf         db  0x0e ; '.'
000000000001a6c0         db  0x20 ; ' '
000000000001a6c1         db  0x41 ; 'A'
000000000001a6c2         db  0x0e ; '.'
000000000001a6c3         db  0x18 ; '.'
000000000001a6c4         db  0x42 ; 'B'
000000000001a6c5         db  0x0e ; '.'
000000000001a6c6         db  0x10 ; '.'
000000000001a6c7         db  0x42 ; 'B'
000000000001a6c8         db  0x0e ; '.'
000000000001a6c9         db  0x08 ; '.'
000000000001a6ca         db  0x41 ; 'A'
000000000001a6cb         db  0x0b ; '.'
000000000001a6cc         db  0x00 ; '.'
000000000001a6cd         db  0x00 ; '.'
000000000001a6ce         db  0x00 ; '.'
000000000001a6cf         db  0x00 ; '.'
000000000001a6d0         dd         0x0000004c                                  ; Length of the record
000000000001a6d4         dd         0x00000db4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a6d8         db         0x58, 0x12, 2 dup (0xff)                    ; begin 0xb930
000000000001a6dc         db         0x76, 3 dup (0x00)                          ; length 0x76 (end at 0xb9a6)
000000000001a6e0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a6e1         db  0x42 ; 'B'
000000000001a6e2         db  0x0e ; '.'
000000000001a6e3         db  0x10 ; '.'
000000000001a6e4         db  0x8d ; '.'
000000000001a6e5         db  0x02 ; '.'
000000000001a6e6         db  0x42 ; 'B'
000000000001a6e7         db  0x0e ; '.'
000000000001a6e8         db  0x18 ; '.'
000000000001a6e9         db  0x8c ; '.'
000000000001a6ea         db  0x03 ; '.'
000000000001a6eb         db  0x41 ; 'A'
000000000001a6ec         db  0x0e ; '.'
000000000001a6ed         db  0x20 ; ' '
000000000001a6ee         db  0x86 ; '.'
000000000001a6ef         db  0x04 ; '.'
000000000001a6f0         db  0x41 ; 'A'
000000000001a6f1         db  0x0e ; '.'
000000000001a6f2         db  0x28 ; '('
000000000001a6f3         db  0x83 ; '.'
000000000001a6f4         db  0x05 ; '.'
000000000001a6f5         db  0x44 ; 'D'
000000000001a6f6         db  0x0e ; '.'
000000000001a6f7         db  0x30 ; '0'
000000000001a6f8         db  0x7e ; '~'
000000000001a6f9         db  0x0a ; '.'
000000000001a6fa         db  0x0e ; '.'
000000000001a6fb         db  0x28 ; '('
000000000001a6fc         db  0x44 ; 'D'
000000000001a6fd         db  0x0e ; '.'
000000000001a6fe         db  0x20 ; ' '
000000000001a6ff         db  0x41 ; 'A'
000000000001a700         db  0x0e ; '.'
000000000001a701         db  0x18 ; '.'
000000000001a702         db  0x42 ; 'B'
000000000001a703         db  0x0e ; '.'
000000000001a704         db  0x10 ; '.'
000000000001a705         db  0x42 ; 'B'
000000000001a706         db  0x0e ; '.'
000000000001a707         db  0x08 ; '.'
000000000001a708         db  0x47 ; 'G'
000000000001a709         db  0x0b ; '.'
000000000001a70a         db  0x4f ; 'O'
000000000001a70b         db  0x0a ; '.'
000000000001a70c         db  0x0e ; '.'
000000000001a70d         db  0x28 ; '('
000000000001a70e         db  0x44 ; 'D'
000000000001a70f         db  0x0e ; '.'
000000000001a710         db  0x20 ; ' '
000000000001a711         db  0x41 ; 'A'
000000000001a712         db  0x0e ; '.'
000000000001a713         db  0x18 ; '.'
000000000001a714         db  0x42 ; 'B'
000000000001a715         db  0x0e ; '.'
000000000001a716         db  0x10 ; '.'
000000000001a717         db  0x42 ; 'B'
000000000001a718         db  0x0e ; '.'
000000000001a719         db  0x08 ; '.'
000000000001a71a         db  0x41 ; 'A'
000000000001a71b         db  0x0b ; '.'
000000000001a71c         db  0x00 ; '.'
000000000001a71d         db  0x00 ; '.'
000000000001a71e         db  0x00 ; '.'
000000000001a71f         db  0x00 ; '.'
000000000001a720         dd         0x00000010                                  ; Length of the record
000000000001a724         dd         0x00000e04                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a728         db         0x88, 0x12, 2 dup (0xff)                    ; begin 0xb9b0
000000000001a72c         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0xba43)
000000000001a730         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a731         align      4
000000000001a734         dd         0x00000010                                  ; Length of the record
000000000001a738         dd         0x00000e18                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a73c         db         0x14, 0x13, 2 dup (0xff)                    ; begin 0xba50
000000000001a740         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0xba60)
000000000001a744         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a745         align      8
000000000001a748         dd         0x00000010                                  ; Length of the record
000000000001a74c         dd         0x00000e2c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a750         db         0x10, 0x13, 2 dup (0xff)                    ; begin 0xba60
000000000001a754         db         0x07, 3 dup (0x00)                          ; length 0x7 (end at 0xba67)
000000000001a758         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a759         align      4
000000000001a75c         dd         0x00000018                                  ; Length of the record
000000000001a760         dd         0x00000e40                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a764         db         0x0c, 0x13, 2 dup (0xff)                    ; begin 0xba70
000000000001a768         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0xba92)
000000000001a76c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a76d         db  0x41 ; 'A'
000000000001a76e         db  0x0e ; '.'
000000000001a76f         db  0x10 ; '.'
000000000001a770         db  0x83 ; '.'
000000000001a771         db  0x02 ; '.'
000000000001a772         db  0x5b ; '['
000000000001a773         db  0x0a ; '.'
000000000001a774         db  0x0e ; '.'
000000000001a775         db  0x08 ; '.'
000000000001a776         db  0x41 ; 'A'
000000000001a777         db  0x0b ; '.'
000000000001a778         dd         0x0000005c                                  ; Length of the record
000000000001a77c         dd         0x00000e5c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a780         db         0x20, 0x13, 2 dup (0xff)                    ; begin 0xbaa0
000000000001a784         db         0x1e, 0x01, 2 dup (0x00)                    ; length 0x11e (end at 0xbbbe)
000000000001a788         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a789         db  0x42 ; 'B'
000000000001a78a         db  0x0e ; '.'
000000000001a78b         db  0x10 ; '.'
000000000001a78c         db  0x8e ; '.'
000000000001a78d         db  0x02 ; '.'
000000000001a78e         db  0x42 ; 'B'
000000000001a78f         db  0x0e ; '.'
000000000001a790         db  0x18 ; '.'
000000000001a791         db  0x8d ; '.'
000000000001a792         db  0x03 ; '.'
000000000001a793         db  0x45 ; 'E'
000000000001a794         db  0x0e ; '.'
000000000001a795         db  0x20 ; ' '
000000000001a796         db  0x8c ; '.'
000000000001a797         db  0x04 ; '.'
000000000001a798         db  0x41 ; 'A'
000000000001a799         db  0x0e ; '.'
000000000001a79a         db  0x28 ; '('
000000000001a79b         db  0x86 ; '.'
000000000001a79c         db  0x05 ; '.'
000000000001a79d         db  0x44 ; 'D'
000000000001a79e         db  0x0e ; '.'
000000000001a79f         db  0x30 ; '0'
000000000001a7a0         db  0x83 ; '.'
000000000001a7a1         db  0x06 ; '.'
000000000001a7a2         db  0x02 ; '.'
000000000001a7a3         db  0xa1 ; '.'
000000000001a7a4         db  0x0a ; '.'
000000000001a7a5         db  0x0e ; '.'
000000000001a7a6         db  0x28 ; '('
000000000001a7a7         db  0x44 ; 'D'
000000000001a7a8         db  0x0e ; '.'
000000000001a7a9         db  0x20 ; ' '
000000000001a7aa         db  0x42 ; 'B'
000000000001a7ab         db  0x0e ; '.'
000000000001a7ac         db  0x18 ; '.'
000000000001a7ad         db  0x42 ; 'B'
000000000001a7ae         db  0x0e ; '.'
000000000001a7af         db  0x10 ; '.'
000000000001a7b0         db  0x42 ; 'B'
000000000001a7b1         db  0x0e ; '.'
000000000001a7b2         db  0x08 ; '.'
000000000001a7b3         db  0x47 ; 'G'
000000000001a7b4         db  0x0b ; '.'
000000000001a7b5         db  0x71 ; 'q'
000000000001a7b6         db  0x0a ; '.'
000000000001a7b7         db  0x0e ; '.'
000000000001a7b8         db  0x28 ; '('
000000000001a7b9         db  0x41 ; 'A'
000000000001a7ba         db  0x0e ; '.'
000000000001a7bb         db  0x20 ; ' '
000000000001a7bc         db  0x42 ; 'B'
000000000001a7bd         db  0x0e ; '.'
000000000001a7be         db  0x18 ; '.'
000000000001a7bf         db  0x42 ; 'B'
000000000001a7c0         db  0x0e ; '.'
000000000001a7c1         db  0x10 ; '.'
000000000001a7c2         db  0x42 ; 'B'
000000000001a7c3         db  0x0e ; '.'
000000000001a7c4         db  0x08 ; '.'
000000000001a7c5         db  0x48 ; 'H'
000000000001a7c6         db  0x0b ; '.'
000000000001a7c7         db  0x53 ; 'S'
000000000001a7c8         db  0x0e ; '.'
000000000001a7c9         db  0x28 ; '('
000000000001a7ca         db  0x44 ; 'D'
000000000001a7cb         db  0x0e ; '.'
000000000001a7cc         db  0x20 ; ' '
000000000001a7cd         db  0x42 ; 'B'
000000000001a7ce         db  0x0e ; '.'
000000000001a7cf         db  0x18 ; '.'
000000000001a7d0         db  0x42 ; 'B'
000000000001a7d1         db  0x0e ; '.'
000000000001a7d2         db  0x10 ; '.'
000000000001a7d3         db  0x42 ; 'B'
000000000001a7d4         db  0x0e ; '.'
000000000001a7d5         db  0x08 ; '.'
000000000001a7d6         db  0x00 ; '.'
000000000001a7d7         db  0x00 ; '.'
000000000001a7d8         dd         0x00000010                                  ; Length of the record
000000000001a7dc         dd         0x00000ebc                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a7e0         db         0xe0, 0x13, 2 dup (0xff)                    ; begin 0xbbc0
000000000001a7e4         db         0x77, 3 dup (0x00)                          ; length 0x77 (end at 0xbc37)
000000000001a7e8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a7e9         align      4
000000000001a7ec         dd         0x0000005c                                  ; Length of the record
000000000001a7f0         dd         0x00000ed0                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a7f4         db         0x4c, 0x14, 2 dup (0xff)                    ; begin 0xbc40
000000000001a7f8         db         0x40, 0x01, 2 dup (0x00)                    ; length 0x140 (end at 0xbd80)
000000000001a7fc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a7fd         db  0x42 ; 'B'
000000000001a7fe         db  0x0e ; '.'
000000000001a7ff         db  0x10 ; '.'
000000000001a800         db  0x8f ; '.'
000000000001a801         db  0x02 ; '.'
000000000001a802         db  0x42 ; 'B'
000000000001a803         db  0x0e ; '.'
000000000001a804         db  0x18 ; '.'
000000000001a805         db  0x8e ; '.'
000000000001a806         db  0x03 ; '.'
000000000001a807         db  0x42 ; 'B'
000000000001a808         db  0x0e ; '.'
000000000001a809         db  0x20 ; ' '
000000000001a80a         db  0x8d ; '.'
000000000001a80b         db  0x04 ; '.'
000000000001a80c         db  0x42 ; 'B'
000000000001a80d         db  0x0e ; '.'
000000000001a80e         db  0x28 ; '('
000000000001a80f         db  0x8c ; '.'
000000000001a810         db  0x05 ; '.'
000000000001a811         db  0x41 ; 'A'
000000000001a812         db  0x0e ; '.'
000000000001a813         db  0x30 ; '0'
000000000001a814         db  0x86 ; '.'
000000000001a815         db  0x06 ; '.'
000000000001a816         db  0x41 ; 'A'
000000000001a817         db  0x0e ; '.'
000000000001a818         db  0x38 ; '8'
000000000001a819         db  0x83 ; '.'
000000000001a81a         db  0x07 ; '.'
000000000001a81b         db  0x44 ; 'D'
000000000001a81c         db  0x0e ; '.'
000000000001a81d         db  0x40 ; '@'
000000000001a81e         db  0x02 ; '.'
000000000001a81f         db  0xee ; '.'
000000000001a820         db  0x0a ; '.'
000000000001a821         db  0x0e ; '.'
000000000001a822         db  0x38 ; '8'
000000000001a823         db  0x46 ; 'F'
000000000001a824         db  0x0e ; '.'
000000000001a825         db  0x30 ; '0'
000000000001a826         db  0x41 ; 'A'
000000000001a827         db  0x0e ; '.'
000000000001a828         db  0x28 ; '('
000000000001a829         db  0x42 ; 'B'
000000000001a82a         db  0x0e ; '.'
000000000001a82b         db  0x20 ; ' '
000000000001a82c         db  0x42 ; 'B'
000000000001a82d         db  0x0e ; '.'
000000000001a82e         db  0x18 ; '.'
000000000001a82f         db  0x42 ; 'B'
000000000001a830         db  0x0e ; '.'
000000000001a831         db  0x10 ; '.'
000000000001a832         db  0x42 ; 'B'
000000000001a833         db  0x0e ; '.'
000000000001a834         db  0x08 ; '.'
000000000001a835         db  0x45 ; 'E'
000000000001a836         db  0x0b ; '.'
000000000001a837         db  0x63 ; 'c'
000000000001a838         db  0x0e ; '.'
000000000001a839         db  0x38 ; '8'
000000000001a83a         db  0x43 ; 'C'
000000000001a83b         db  0x0e ; '.'
000000000001a83c         db  0x30 ; '0'
000000000001a83d         db  0x41 ; 'A'
000000000001a83e         db  0x0e ; '.'
000000000001a83f         db  0x28 ; '('
000000000001a840         db  0x42 ; 'B'
000000000001a841         db  0x0e ; '.'
000000000001a842         db  0x20 ; ' '
000000000001a843         db  0x42 ; 'B'
000000000001a844         db  0x0e ; '.'
000000000001a845         db  0x18 ; '.'
000000000001a846         db  0x42 ; 'B'
000000000001a847         db  0x0e ; '.'
000000000001a848         db  0x10 ; '.'
000000000001a849         db  0x42 ; 'B'
000000000001a84a         db  0x0e ; '.'
000000000001a84b         db  0x08 ; '.'
000000000001a84c         dd         0x00000010                                  ; Length of the record
000000000001a850         dd         0x00000f30                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a854         db         0x2c, 0x15, 2 dup (0xff)                    ; begin 0xbd80
000000000001a858         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0xbd85)
000000000001a85c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a85d         align      32
000000000001a860         dd         0x00000010                                  ; Length of the record
000000000001a864         dd         0x00000f44                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a868         db         0x28, 0x15, 2 dup (0xff)                    ; begin 0xbd90
000000000001a86c         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0xbd95)
000000000001a870         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a871         align      4
000000000001a874         dd         0x00000010                                  ; Length of the record
000000000001a878         dd         0x00000f58                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a87c         db         0x24, 0x15, 2 dup (0xff)                    ; begin 0xbda0
000000000001a880         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0xbda5)
000000000001a884         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a885         align      8
000000000001a888         dd         0x00000010                                  ; Length of the record
000000000001a88c         dd         0x00000f6c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a890         db         0x20, 0x15, 2 dup (0xff)                    ; begin 0xbdb0
000000000001a894         db         0x49, 3 dup (0x00)                          ; length 0x49 (end at 0xbdf9)
000000000001a898         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a899         align      4
000000000001a89c         dd         0x00000010                                  ; Length of the record
000000000001a8a0         dd         0x00000f80                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a8a4         db         0x5c, 0x15, 2 dup (0xff)                    ; begin 0xbe00
000000000001a8a8         db         0x58, 3 dup (0x00)                          ; length 0x58 (end at 0xbe58)
000000000001a8ac         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a8ad         align      16
000000000001a8b0         dd         0x00000038                                  ; Length of the record
000000000001a8b4         dd         0x00000f94                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a8b8         db         0xa8, 0x15, 2 dup (0xff)                    ; begin 0xbe60
000000000001a8bc         db         0x47, 0x01, 2 dup (0x00)                    ; length 0x147 (end at 0xbfa7)
000000000001a8c0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a8c1         db  0x42 ; 'B'
000000000001a8c2         db  0x0e ; '.'
000000000001a8c3         db  0x10 ; '.'
000000000001a8c4         db  0x8d ; '.'
000000000001a8c5         db  0x02 ; '.'
000000000001a8c6         db  0x42 ; 'B'
000000000001a8c7         db  0x0e ; '.'
000000000001a8c8         db  0x18 ; '.'
000000000001a8c9         db  0x8c ; '.'
000000000001a8ca         db  0x03 ; '.'
000000000001a8cb         db  0x44 ; 'D'
000000000001a8cc         db  0x0e ; '.'
000000000001a8cd         db  0x20 ; ' '
000000000001a8ce         db  0x86 ; '.'
000000000001a8cf         db  0x04 ; '.'
000000000001a8d0         db  0x41 ; 'A'
000000000001a8d1         db  0x0e ; '.'
000000000001a8d2         db  0x28 ; '('
000000000001a8d3         db  0x83 ; '.'
000000000001a8d4         db  0x05 ; '.'
000000000001a8d5         db  0x46 ; 'F'
000000000001a8d6         db  0x0e ; '.'
000000000001a8d7         db  0x30 ; '0'
000000000001a8d8         db  0x02 ; '.'
000000000001a8d9         db  0xcd ; '.'
000000000001a8da         db  0x0a ; '.'
000000000001a8db         db  0x0e ; '.'
000000000001a8dc         db  0x28 ; '('
000000000001a8dd         db  0x47 ; 'G'
000000000001a8de         db  0x0e ; '.'
000000000001a8df         db  0x20 ; ' '
000000000001a8e0         db  0x41 ; 'A'
000000000001a8e1         db  0x0e ; '.'
000000000001a8e2         db  0x18 ; '.'
000000000001a8e3         db  0x42 ; 'B'
000000000001a8e4         db  0x0e ; '.'
000000000001a8e5         db  0x10 ; '.'
000000000001a8e6         db  0x42 ; 'B'
000000000001a8e7         db  0x0e ; '.'
000000000001a8e8         db  0x08 ; '.'
000000000001a8e9         db  0x58 ; 'X'
000000000001a8ea         db  0x0b ; '.'
000000000001a8eb         db  0x00 ; '.'
000000000001a8ec         dd         0x00000034                                  ; Length of the record
000000000001a8f0         dd         0x00000fd0                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a8f4         db         0xbc, 0x16, 2 dup (0xff)                    ; begin 0xbfb0
000000000001a8f8         db         0x5b, 3 dup (0x00)                          ; length 0x5b (end at 0xc00b)
000000000001a8fc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a8fd         db  0x42 ; 'B'
000000000001a8fe         db  0x0e ; '.'
000000000001a8ff         db  0x10 ; '.'
000000000001a900         db  0x8c ; '.'
000000000001a901         db  0x02 ; '.'
000000000001a902         db  0x41 ; 'A'
000000000001a903         db  0x0e ; '.'
000000000001a904         db  0x18 ; '.'
000000000001a905         db  0x86 ; '.'
000000000001a906         db  0x03 ; '.'
000000000001a907         db  0x44 ; 'D'
000000000001a908         db  0x0e ; '.'
000000000001a909         db  0x20 ; ' '
000000000001a90a         db  0x83 ; '.'
000000000001a90b         db  0x04 ; '.'
000000000001a90c         db  0x79 ; 'y'
000000000001a90d         db  0x0a ; '.'
000000000001a90e         db  0x0e ; '.'
000000000001a90f         db  0x18 ; '.'
000000000001a910         db  0x44 ; 'D'
000000000001a911         db  0x0e ; '.'
000000000001a912         db  0x10 ; '.'
000000000001a913         db  0x42 ; 'B'
000000000001a914         db  0x0e ; '.'
000000000001a915         db  0x08 ; '.'
000000000001a916         db  0x4a ; 'J'
000000000001a917         db  0x0b ; '.'
000000000001a918         db  0x44 ; 'D'
000000000001a919         db  0x0e ; '.'
000000000001a91a         db  0x18 ; '.'
000000000001a91b         db  0x41 ; 'A'
000000000001a91c         db  0x0e ; '.'
000000000001a91d         db  0x10 ; '.'
000000000001a91e         db  0x45 ; 'E'
000000000001a91f         db  0x0e ; '.'
000000000001a920         db  0x08 ; '.'
000000000001a921         db  0x00 ; '.'
000000000001a922         db  0x00 ; '.'
000000000001a923         db  0x00 ; '.'
000000000001a924         dd         0x00000010                                  ; Length of the record
000000000001a928         dd         0x00001008                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a92c         db         0xe4, 0x16, 2 dup (0xff)                    ; begin 0xc010
000000000001a930         db         0x41, 3 dup (0x00)                          ; length 0x41 (end at 0xc051)
000000000001a934         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a935         db  0x7c ; '|'
000000000001a936         db  0x0e ; '.'
000000000001a937         db  0x10 ; '.'
000000000001a938         dd         0x00000030                                  ; Length of the record
000000000001a93c         dd         0x0000101c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a940         db         0x20, 0x17, 2 dup (0xff)                    ; begin 0xc060
000000000001a944         db         0x72, 3 dup (0x00)                          ; length 0x72 (end at 0xc0d2)
000000000001a948         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a949         db  0x41 ; 'A'
000000000001a94a         db  0x0e ; '.'
000000000001a94b         db  0x10 ; '.'
000000000001a94c         db  0x86 ; '.'
000000000001a94d         db  0x02 ; '.'
000000000001a94e         db  0x41 ; 'A'
000000000001a94f         db  0x0e ; '.'
000000000001a950         db  0x18 ; '.'
000000000001a951         db  0x83 ; '.'
000000000001a952         db  0x03 ; '.'
000000000001a953         db  0x4a ; 'J'
000000000001a954         db  0x0e ; '.'
000000000001a955         db  0x20 ; ' '
000000000001a956         db  0x02 ; '.'
000000000001a957         db  0x53 ; 'S'
000000000001a958         db  0x0a ; '.'
000000000001a959         db  0x0e ; '.'
000000000001a95a         db  0x18 ; '.'
000000000001a95b         db  0x41 ; 'A'
000000000001a95c         db  0x0e ; '.'
000000000001a95d         db  0x10 ; '.'
000000000001a95e         db  0x41 ; 'A'
000000000001a95f         db  0x0e ; '.'
000000000001a960         db  0x08 ; '.'
000000000001a961         db  0x47 ; 'G'
000000000001a962         db  0x0b ; '.'
000000000001a963         db  0x47 ; 'G'
000000000001a964         db  0x0e ; '.'
000000000001a965         db  0x18 ; '.'
000000000001a966         db  0x41 ; 'A'
000000000001a967         db  0x0e ; '.'
000000000001a968         db  0x10 ; '.'
000000000001a969         db  0x41 ; 'A'
000000000001a96a         db  0x0e ; '.'
000000000001a96b         db  0x08 ; '.'
000000000001a96c         dd         0x00000010                                  ; Length of the record
000000000001a970         dd         0x00001050                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a974         db         0x6c, 0x17, 2 dup (0xff)                    ; begin 0xc0e0
000000000001a978         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0xc145)
000000000001a97c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a97d         align      128
000000000001a980         dd         0x00000048                                  ; Length of the record
000000000001a984         dd         0x00001064                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a988         db         0xc8, 0x17, 2 dup (0xff)                    ; begin 0xc150
000000000001a98c         db         0x6a, 3 dup (0x00)                          ; length 0x6a (end at 0xc1ba)
000000000001a990         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a991         db  0x42 ; 'B'
000000000001a992         db  0x0e ; '.'
000000000001a993         db  0x10 ; '.'
000000000001a994         db  0x8f ; '.'
000000000001a995         db  0x02 ; '.'
000000000001a996         db  0x42 ; 'B'
000000000001a997         db  0x0e ; '.'
000000000001a998         db  0x18 ; '.'
000000000001a999         db  0x8e ; '.'
000000000001a99a         db  0x03 ; '.'
000000000001a99b         db  0x42 ; 'B'
000000000001a99c         db  0x0e ; '.'
000000000001a99d         db  0x20 ; ' '
000000000001a99e         db  0x8d ; '.'
000000000001a99f         db  0x04 ; '.'
000000000001a9a0         db  0x42 ; 'B'
000000000001a9a1         db  0x0e ; '.'
000000000001a9a2         db  0x28 ; '('
000000000001a9a3         db  0x8c ; '.'
000000000001a9a4         db  0x05 ; '.'
000000000001a9a5         db  0x41 ; 'A'
000000000001a9a6         db  0x0e ; '.'
000000000001a9a7         db  0x30 ; '0'
000000000001a9a8         db  0x86 ; '.'
000000000001a9a9         db  0x06 ; '.'
000000000001a9aa         db  0x41 ; 'A'
000000000001a9ab         db  0x0e ; '.'
000000000001a9ac         db  0x38 ; '8'
000000000001a9ad         db  0x83 ; '.'
000000000001a9ae         db  0x07 ; '.'
000000000001a9af         db  0x44 ; 'D'
000000000001a9b0         db  0x0e ; '.'
000000000001a9b1         db  0x40 ; '@'
000000000001a9b2         db  0x02 ; '.'
000000000001a9b3         db  0x4a ; 'J'
000000000001a9b4         db  0x0a ; '.'
000000000001a9b5         db  0x0e ; '.'
000000000001a9b6         db  0x38 ; '8'
000000000001a9b7         db  0x44 ; 'D'
000000000001a9b8         db  0x0e ; '.'
000000000001a9b9         db  0x30 ; '0'
000000000001a9ba         db  0x41 ; 'A'
000000000001a9bb         db  0x0e ; '.'
000000000001a9bc         db  0x28 ; '('
000000000001a9bd         db  0x42 ; 'B'
000000000001a9be         db  0x0e ; '.'
000000000001a9bf         db  0x20 ; ' '
000000000001a9c0         db  0x42 ; 'B'
000000000001a9c1         db  0x0e ; '.'
000000000001a9c2         db  0x18 ; '.'
000000000001a9c3         db  0x42 ; 'B'
000000000001a9c4         db  0x0e ; '.'
000000000001a9c5         db  0x10 ; '.'
000000000001a9c6         db  0x42 ; 'B'
000000000001a9c7         db  0x0e ; '.'
000000000001a9c8         db  0x08 ; '.'
000000000001a9c9         db  0x41 ; 'A'
000000000001a9ca         db  0x0b ; '.'
000000000001a9cb         db  0x00 ; '.'
000000000001a9cc         dd         0x00000010                                  ; Length of the record
000000000001a9d0         dd         0x000010b0                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a9d4         db         0xec, 0x17, 2 dup (0xff)                    ; begin 0xc1c0
000000000001a9d8         db         0x31, 3 dup (0x00)                          ; length 0x31 (end at 0xc1f1)
000000000001a9dc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a9dd         align      32
000000000001a9e0         dd         0x00000010                                  ; Length of the record
000000000001a9e4         dd         0x000010c4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a9e8         db         2 dup (0x18), 2 dup (0xff)                  ; begin 0xc200
000000000001a9ec         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0xc220)
000000000001a9f0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001a9f1         align      4
000000000001a9f4         dd         0x00000048                                  ; Length of the record
000000000001a9f8         dd         0x000010d8                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001a9fc         db         0x24, 0x18, 2 dup (0xff)                    ; begin 0xc220
000000000001aa00         db         0xb4, 0x01, 2 dup (0x00)                    ; length 0x1b4 (end at 0xc3d4)
000000000001aa04         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001aa05         db  0x42 ; 'B'
000000000001aa06         db  0x0e ; '.'
000000000001aa07         db  0x10 ; '.'
000000000001aa08         db  0x8f ; '.'
000000000001aa09         db  0x02 ; '.'
000000000001aa0a         db  0x42 ; 'B'
000000000001aa0b         db  0x0e ; '.'
000000000001aa0c         db  0x18 ; '.'
000000000001aa0d         db  0x8e ; '.'
000000000001aa0e         db  0x03 ; '.'
000000000001aa0f         db  0x49 ; 'I'
000000000001aa10         db  0x0e ; '.'
000000000001aa11         db  0x20 ; ' '
000000000001aa12         db  0x8d ; '.'
000000000001aa13         db  0x04 ; '.'
000000000001aa14         db  0x42 ; 'B'
000000000001aa15         db  0x0e ; '.'
000000000001aa16         db  0x28 ; '('
000000000001aa17         db  0x8c ; '.'
000000000001aa18         db  0x05 ; '.'
000000000001aa19         db  0x44 ; 'D'
000000000001aa1a         db  0x0e ; '.'
000000000001aa1b         db  0x30 ; '0'
000000000001aa1c         db  0x86 ; '.'
000000000001aa1d         db  0x06 ; '.'
000000000001aa1e         db  0x41 ; 'A'
000000000001aa1f         db  0x0e ; '.'
000000000001aa20         db  0x38 ; '8'
000000000001aa21         db  0x83 ; '.'
000000000001aa22         db  0x07 ; '.'
000000000001aa23         db  0x52 ; 'R'
000000000001aa24         db  0x0e ; '.'
000000000001aa25         db  0x40 ; '@'
000000000001aa26         db  0x02 ; '.'
000000000001aa27         db  0xd8 ; '.'
000000000001aa28         db  0x0a ; '.'
000000000001aa29         db  0x0e ; '.'
000000000001aa2a         db  0x38 ; '8'
000000000001aa2b         db  0x44 ; 'D'
000000000001aa2c         db  0x0e ; '.'
000000000001aa2d         db  0x30 ; '0'
000000000001aa2e         db  0x41 ; 'A'
000000000001aa2f         db  0x0e ; '.'
000000000001aa30         db  0x28 ; '('
000000000001aa31         db  0x42 ; 'B'
000000000001aa32         db  0x0e ; '.'
000000000001aa33         db  0x20 ; ' '
000000000001aa34         db  0x42 ; 'B'
000000000001aa35         db  0x0e ; '.'
000000000001aa36         db  0x18 ; '.'
000000000001aa37         db  0x42 ; 'B'
000000000001aa38         db  0x0e ; '.'
000000000001aa39         db  0x10 ; '.'
000000000001aa3a         db  0x42 ; 'B'
000000000001aa3b         db  0x0e ; '.'
000000000001aa3c         db  0x08 ; '.'
000000000001aa3d         db  0x45 ; 'E'
000000000001aa3e         db  0x0b ; '.'
000000000001aa3f         db  0x00 ; '.'
000000000001aa40         dd         0x00000028                                  ; Length of the record
000000000001aa44         dd         0x00001124                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001aa48         db         0x98, 0x19, 2 dup (0xff)                    ; begin 0xc3e0
000000000001aa4c         db         0x90, 3 dup (0x00)                          ; length 0x90 (end at 0xc470)
000000000001aa50         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001aa51         db  0x42 ; 'B'
000000000001aa52         db  0x0e ; '.'
000000000001aa53         db  0x10 ; '.'
000000000001aa54         db  0x8c ; '.'
000000000001aa55         db  0x02 ; '.'
000000000001aa56         db  0x41 ; 'A'
000000000001aa57         db  0x0e ; '.'
000000000001aa58         db  0x18 ; '.'
000000000001aa59         db  0x86 ; '.'
000000000001aa5a         db  0x03 ; '.'
000000000001aa5b         db  0x44 ; 'D'
000000000001aa5c         db  0x0e ; '.'
000000000001aa5d         db  0x20 ; ' '
000000000001aa5e         db  0x83 ; '.'
000000000001aa5f         db  0x04 ; '.'
000000000001aa60         db  0x02 ; '.'
000000000001aa61         db  0x85 ; '.'
000000000001aa62         db  0x0e ; '.'
000000000001aa63         db  0x18 ; '.'
000000000001aa64         db  0x41 ; 'A'
000000000001aa65         db  0x0e ; '.'
000000000001aa66         db  0x10 ; '.'
000000000001aa67         db  0x42 ; 'B'
000000000001aa68         db  0x0e ; '.'
000000000001aa69         db  0x08 ; '.'
000000000001aa6a         db  0x00 ; '.'
000000000001aa6b         db  0x00 ; '.'
000000000001aa6c         dd         0x00000028                                  ; Length of the record
000000000001aa70         dd         0x00001150                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001aa74         db         0xfc, 0x19, 2 dup (0xff)                    ; begin 0xc470
000000000001aa78         db         0xd6, 3 dup (0x00)                          ; length 0xd6 (end at 0xc546)
000000000001aa7c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001aa7d         db  0x42 ; 'B'
000000000001aa7e         db  0x0e ; '.'
000000000001aa7f         db  0x10 ; '.'
000000000001aa80         db  0x8c ; '.'
000000000001aa81         db  0x02 ; '.'
000000000001aa82         db  0x41 ; 'A'
000000000001aa83         db  0x0e ; '.'
000000000001aa84         db  0x18 ; '.'
000000000001aa85         db  0x86 ; '.'
000000000001aa86         db  0x03 ; '.'
000000000001aa87         db  0x44 ; 'D'
000000000001aa88         db  0x0e ; '.'
000000000001aa89         db  0x20 ; ' '
000000000001aa8a         db  0x83 ; '.'
000000000001aa8b         db  0x04 ; '.'
000000000001aa8c         db  0x02 ; '.'
000000000001aa8d         db  0xc4 ; '.'
000000000001aa8e         db  0x0e ; '.'
000000000001aa8f         db  0x18 ; '.'
000000000001aa90         db  0x44 ; 'D'
000000000001aa91         db  0x0e ; '.'
000000000001aa92         db  0x10 ; '.'
000000000001aa93         db  0x42 ; 'B'
000000000001aa94         db  0x0e ; '.'
000000000001aa95         db  0x08 ; '.'
000000000001aa96         db  0x00 ; '.'
000000000001aa97         db  0x00 ; '.'
000000000001aa98         dd         0x00000034                                  ; Length of the record
000000000001aa9c         dd         0x0000117c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001aaa0         db         0xb0, 0x1a, 2 dup (0xff)                    ; begin 0xc550
000000000001aaa4         db         0x3e, 0x02, 2 dup (0x00)                    ; length 0x23e (end at 0xc78e)
000000000001aaa8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001aaa9         db  0x42 ; 'B'
000000000001aaaa         db  0x0e ; '.'
000000000001aaab         db  0x10 ; '.'
000000000001aaac         db  0x8c ; '.'
000000000001aaad         db  0x02 ; '.'
000000000001aaae         db  0x41 ; 'A'
000000000001aaaf         db  0x0e ; '.'
000000000001aab0         db  0x18 ; '.'
000000000001aab1         db  0x86 ; '.'
000000000001aab2         db  0x03 ; '.'
000000000001aab3         db  0x44 ; 'D'
000000000001aab4         db  0x0e ; '.'
000000000001aab5         db  0x20 ; ' '
000000000001aab6         db  0x83 ; '.'
000000000001aab7         db  0x04 ; '.'
000000000001aab8         db  0x44 ; 'D'
000000000001aab9         db  0x0e ; '.'
000000000001aaba         db  0x80 ; '.'
000000000001aabb         db  0x01 ; '.'
000000000001aabc         db  0x03 ; '.'
000000000001aabd         db  0x91 ; '.'
000000000001aabe         db  0x01 ; '.'
000000000001aabf         db  0x0a ; '.'
000000000001aac0         db  0x0e ; '.'
000000000001aac1         db  0x20 ; ' '
000000000001aac2         db  0x41 ; 'A'
000000000001aac3         db  0x0e ; '.'
000000000001aac4         db  0x18 ; '.'
000000000001aac5         db  0x41 ; 'A'
000000000001aac6         db  0x0e ; '.'
000000000001aac7         db  0x10 ; '.'
000000000001aac8         db  0x42 ; 'B'
000000000001aac9         db  0x0e ; '.'
000000000001aaca         db  0x08 ; '.'
000000000001aacb         db  0x48 ; 'H'
000000000001aacc         db  0x0b ; '.'
000000000001aacd         db  0x00 ; '.'
000000000001aace         db  0x00 ; '.'
000000000001aacf         db  0x00 ; '.'
000000000001aad0         dd         0x00000038                                  ; Length of the record
000000000001aad4         dd         0x000011b4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001aad8         db         0xb8, 0x1c, 2 dup (0xff)                    ; begin 0xc790
000000000001aadc         db         0x84, 0x02, 2 dup (0x00)                    ; length 0x284 (end at 0xca14)
000000000001aae0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001aae1         db  0x42 ; 'B'
000000000001aae2         db  0x0e ; '.'
000000000001aae3         db  0x10 ; '.'
000000000001aae4         db  0x8d ; '.'
000000000001aae5         db  0x02 ; '.'
000000000001aae6         db  0x42 ; 'B'
000000000001aae7         db  0x0e ; '.'
000000000001aae8         db  0x18 ; '.'
000000000001aae9         db  0x8c ; '.'
000000000001aaea         db  0x03 ; '.'
000000000001aaeb         db  0x41 ; 'A'
000000000001aaec         db  0x0e ; '.'
000000000001aaed         db  0x20 ; ' '
000000000001aaee         db  0x86 ; '.'
000000000001aaef         db  0x04 ; '.'
000000000001aaf0         db  0x41 ; 'A'
000000000001aaf1         db  0x0e ; '.'
000000000001aaf2         db  0x28 ; '('
000000000001aaf3         db  0x83 ; '.'
000000000001aaf4         db  0x05 ; '.'
000000000001aaf5         db  0x44 ; 'D'
000000000001aaf6         db  0x0e ; '.'
000000000001aaf7         db  0x40 ; '@'
000000000001aaf8         db  0x02 ; '.'
000000000001aaf9         db  0x5a ; 'Z'
000000000001aafa         db  0x0a ; '.'
000000000001aafb         db  0x0e ; '.'
000000000001aafc         db  0x28 ; '('
000000000001aafd         db  0x41 ; 'A'
000000000001aafe         db  0x0e ; '.'
000000000001aaff         db  0x20 ; ' '
000000000001ab00         db  0x41 ; 'A'
000000000001ab01         db  0x0e ; '.'
000000000001ab02         db  0x18 ; '.'
000000000001ab03         db  0x42 ; 'B'
000000000001ab04         db  0x0e ; '.'
000000000001ab05         db  0x10 ; '.'
000000000001ab06         db  0x42 ; 'B'
000000000001ab07         db  0x0e ; '.'
000000000001ab08         db  0x08 ; '.'
000000000001ab09         db  0x46 ; 'F'
000000000001ab0a         db  0x0b ; '.'
000000000001ab0b         db  0x00 ; '.'
000000000001ab0c         dd         0x00000020                                  ; Length of the record
000000000001ab10         dd         0x000011f0                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001ab14         db         0x0c, 0x1f, 2 dup (0xff)                    ; begin 0xca20
000000000001ab18         db         0x59, 3 dup (0x00)                          ; length 0x59 (end at 0xca79)
000000000001ab1c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ab1d         db  0x41 ; 'A'
000000000001ab1e         db  0x0e ; '.'
000000000001ab1f         db  0x10 ; '.'
000000000001ab20         db  0x83 ; '.'
000000000001ab21         db  0x02 ; '.'
000000000001ab22         db  0x47 ; 'G'
000000000001ab23         db  0x0e ; '.'
000000000001ab24         db  0x20 ; ' '
000000000001ab25         db  0x7c ; '|'
000000000001ab26         db  0x0a ; '.'
000000000001ab27         db  0x0e ; '.'
000000000001ab28         db  0x10 ; '.'
000000000001ab29         db  0x41 ; 'A'
000000000001ab2a         db  0x0e ; '.'
000000000001ab2b         db  0x08 ; '.'
000000000001ab2c         db  0x4b ; 'K'
000000000001ab2d         db  0x0b ; '.'
000000000001ab2e         db  0x00 ; '.'
000000000001ab2f         db  0x00 ; '.'
000000000001ab30         dd         0x00000034                                  ; Length of the record
000000000001ab34         dd         0x00001214                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001ab38         db         0x48, 0x1f, 2 dup (0xff)                    ; begin 0xca80
000000000001ab3c         db         0x03, 0x02, 2 dup (0x00)                    ; length 0x203 (end at 0xcc83)
000000000001ab40         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ab41         db  0x42 ; 'B'
000000000001ab42         db  0x0e ; '.'
000000000001ab43         db  0x10 ; '.'
000000000001ab44         db  0x8c ; '.'
000000000001ab45         db  0x02 ; '.'
000000000001ab46         db  0x41 ; 'A'
000000000001ab47         db  0x0e ; '.'
000000000001ab48         db  0x18 ; '.'
000000000001ab49         db  0x86 ; '.'
000000000001ab4a         db  0x03 ; '.'
000000000001ab4b         db  0x46 ; 'F'
000000000001ab4c         db  0x0e ; '.'
000000000001ab4d         db  0x20 ; ' '
000000000001ab4e         db  0x83 ; '.'
000000000001ab4f         db  0x04 ; '.'
000000000001ab50         db  0x47 ; 'G'
000000000001ab51         db  0x0e ; '.'
000000000001ab52         db  0x30 ; '0'
000000000001ab53         db  0x02 ; '.'
000000000001ab54         db  0x4a ; 'J'
000000000001ab55         db  0x0a ; '.'
000000000001ab56         db  0x0e ; '.'
000000000001ab57         db  0x20 ; ' '
000000000001ab58         db  0x41 ; 'A'
000000000001ab59         db  0x0e ; '.'
000000000001ab5a         db  0x18 ; '.'
000000000001ab5b         db  0x41 ; 'A'
000000000001ab5c         db  0x0e ; '.'
000000000001ab5d         db  0x10 ; '.'
000000000001ab5e         db  0x42 ; 'B'
000000000001ab5f         db  0x0e ; '.'
000000000001ab60         db  0x08 ; '.'
000000000001ab61         db  0x42 ; 'B'
000000000001ab62         db  0x0b ; '.'
000000000001ab63         db  0x00 ; '.'
000000000001ab64         db  0x00 ; '.'
000000000001ab65         db  0x00 ; '.'
000000000001ab66         db  0x00 ; '.'
000000000001ab67         db  0x00 ; '.'
000000000001ab68         dd         0x00000024                                  ; Length of the record
000000000001ab6c         dd         0x0000124c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001ab70         db         0x20, 0x21, 2 dup (0xff)                    ; begin 0xcc90
000000000001ab74         db         0x27, 3 dup (0x00)                          ; length 0x27 (end at 0xccb7)
000000000001ab78         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ab79         db  0x41 ; 'A'
000000000001ab7a         db  0x0e ; '.'
000000000001ab7b         db  0x10 ; '.'
000000000001ab7c         db  0x86 ; '.'
000000000001ab7d         db  0x02 ; '.'
000000000001ab7e         db  0x41 ; 'A'
000000000001ab7f         db  0x0e ; '.'
000000000001ab80         db  0x18 ; '.'
000000000001ab81         db  0x83 ; '.'
000000000001ab82         db  0x03 ; '.'
000000000001ab83         db  0x4a ; 'J'
000000000001ab84         db  0x0e ; '.'
000000000001ab85         db  0x20 ; ' '
000000000001ab86         db  0x52 ; 'R'
000000000001ab87         db  0x0e ; '.'
000000000001ab88         db  0x18 ; '.'
000000000001ab89         db  0x44 ; 'D'
000000000001ab8a         db  0x0e ; '.'
000000000001ab8b         db  0x10 ; '.'
000000000001ab8c         db  0x41 ; 'A'
000000000001ab8d         db  0x0e ; '.'
000000000001ab8e         db  0x08 ; '.'
000000000001ab8f         db  0x00 ; '.'
000000000001ab90         dd         0x00000010                                  ; Length of the record
000000000001ab94         dd         0x00001274                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001ab98         db         0x28, 0x21, 2 dup (0xff)                    ; begin 0xccc0
000000000001ab9c         db         0x0d, 3 dup (0x00)                          ; length 0xd (end at 0xcccd)
000000000001aba0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001aba1         align      4
000000000001aba4         dd         0x00000014                                  ; Length of the record
000000000001aba8         dd         0x00001288                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001abac         db         0x24, 0x21, 2 dup (0xff)                    ; begin 0xccd0
000000000001abb0         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0xccfe)
000000000001abb4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001abb5         db  0x5e ; '^'
000000000001abb6         db  0x0e ; '.'
000000000001abb7         db  0x10 ; '.'
000000000001abb8         db  0x4f ; 'O'
000000000001abb9         db  0x0e ; '.'
000000000001abba         db  0x08 ; '.'
000000000001abbb         db  0x00 ; '.'
000000000001abbc         dd         0x00000014                                  ; Length of the record
000000000001abc0         dd         0x000012a0                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001abc4         db         0x3c, 0x21, 2 dup (0xff)                    ; begin 0xcd00
000000000001abc8         db         0x33, 3 dup (0x00)                          ; length 0x33 (end at 0xcd33)
000000000001abcc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001abcd         db  0x5e ; '^'
000000000001abce         db  0x0e ; '.'
000000000001abcf         db  0x10 ; '.'
000000000001abd0         db  0x54 ; 'T'
000000000001abd1         db  0x0e ; '.'
000000000001abd2         db  0x08 ; '.'
000000000001abd3         db  0x00 ; '.'
000000000001abd4         dd         0x00000018                                  ; Length of the record
000000000001abd8         dd         0x000012b8                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001abdc         db         0x64, 0x21, 2 dup (0xff)                    ; begin 0xcd40
000000000001abe0         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0xcd55)
000000000001abe4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001abe5         db  0x41 ; 'A'
000000000001abe6         db  0x0e ; '.'
000000000001abe7         db  0x10 ; '.'
000000000001abe8         db  0x83 ; '.'
000000000001abe9         db  0x02 ; '.'
000000000001abea         db  0x4f ; 'O'
000000000001abeb         db  0x0e ; '.'
000000000001abec         db  0x08 ; '.'
000000000001abed         db  0x00 ; '.'
000000000001abee         db  0x00 ; '.'
000000000001abef         db  0x00 ; '.'
000000000001abf0         dd         0x0000004c                                  ; Length of the record
000000000001abf4         dd         0x000012d4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001abf8         db         0x68, 0x21, 2 dup (0xff)                    ; begin 0xcd60
000000000001abfc         db         0x68, 0x01, 2 dup (0x00)                    ; length 0x168 (end at 0xcec8)
000000000001ac00         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ac01         db  0x42 ; 'B'
000000000001ac02         db  0x0e ; '.'
000000000001ac03         db  0x10 ; '.'
000000000001ac04         db  0x8f ; '.'
000000000001ac05         db  0x02 ; '.'
000000000001ac06         db  0x42 ; 'B'
000000000001ac07         db  0x0e ; '.'
000000000001ac08         db  0x18 ; '.'
000000000001ac09         db  0x8e ; '.'
000000000001ac0a         db  0x03 ; '.'
000000000001ac0b         db  0x45 ; 'E'
000000000001ac0c         db  0x0e ; '.'
000000000001ac0d         db  0x20 ; ' '
000000000001ac0e         db  0x8d ; '.'
000000000001ac0f         db  0x04 ; '.'
000000000001ac10         db  0x42 ; 'B'
000000000001ac11         db  0x0e ; '.'
000000000001ac12         db  0x28 ; '('
000000000001ac13         db  0x8c ; '.'
000000000001ac14         db  0x05 ; '.'
000000000001ac15         db  0x44 ; 'D'
000000000001ac16         db  0x0e ; '.'
000000000001ac17         db  0x30 ; '0'
000000000001ac18         db  0x86 ; '.'
000000000001ac19         db  0x06 ; '.'
000000000001ac1a         db  0x41 ; 'A'
000000000001ac1b         db  0x0e ; '.'
000000000001ac1c         db  0x38 ; '8'
000000000001ac1d         db  0x83 ; '.'
000000000001ac1e         db  0x07 ; '.'
000000000001ac1f         db  0x4d ; 'M'
000000000001ac20         db  0x0e ; '.'
000000000001ac21         db  0x60 ; '`'
000000000001ac22         db  0x02 ; '.'
000000000001ac23         db  0xc5 ; '.'
000000000001ac24         db  0x0a ; '.'
000000000001ac25         db  0x0e ; '.'
000000000001ac26         db  0x38 ; '8'
000000000001ac27         db  0x41 ; 'A'
000000000001ac28         db  0x0e ; '.'
000000000001ac29         db  0x30 ; '0'
000000000001ac2a         db  0x41 ; 'A'
000000000001ac2b         db  0x0e ; '.'
000000000001ac2c         db  0x28 ; '('
000000000001ac2d         db  0x42 ; 'B'
000000000001ac2e         db  0x0e ; '.'
000000000001ac2f         db  0x20 ; ' '
000000000001ac30         db  0x42 ; 'B'
000000000001ac31         db  0x0e ; '.'
000000000001ac32         db  0x18 ; '.'
000000000001ac33         db  0x42 ; 'B'
000000000001ac34         db  0x0e ; '.'
000000000001ac35         db  0x10 ; '.'
000000000001ac36         db  0x42 ; 'B'
000000000001ac37         db  0x0e ; '.'
000000000001ac38         db  0x08 ; '.'
000000000001ac39         db  0x44 ; 'D'
000000000001ac3a         db  0x0b ; '.'
000000000001ac3b         db  0x00 ; '.'
000000000001ac3c         db  0x00 ; '.'
000000000001ac3d         db  0x00 ; '.'
000000000001ac3e         db  0x00 ; '.'
000000000001ac3f         db  0x00 ; '.'
000000000001ac40         dd         0x0000005c                                  ; Length of the record
000000000001ac44         dd         0x00001324                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001ac48         db         0x88, 0x22, 2 dup (0xff)                    ; begin 0xced0
000000000001ac4c         db         0xc9, 0x03, 2 dup (0x00)                    ; length 0x3c9 (end at 0xd299)
000000000001ac50         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ac51         db  0x42 ; 'B'
000000000001ac52         db  0x0e ; '.'
000000000001ac53         db  0x10 ; '.'
000000000001ac54         db  0x8f ; '.'
000000000001ac55         db  0x02 ; '.'
000000000001ac56         db  0x42 ; 'B'
000000000001ac57         db  0x0e ; '.'
000000000001ac58         db  0x18 ; '.'
000000000001ac59         db  0x8e ; '.'
000000000001ac5a         db  0x03 ; '.'
000000000001ac5b         db  0x45 ; 'E'
000000000001ac5c         db  0x0e ; '.'
000000000001ac5d         db  0x20 ; ' '
000000000001ac5e         db  0x8d ; '.'
000000000001ac5f         db  0x04 ; '.'
000000000001ac60         db  0x42 ; 'B'
000000000001ac61         db  0x0e ; '.'
000000000001ac62         db  0x28 ; '('
000000000001ac63         db  0x8c ; '.'
000000000001ac64         db  0x05 ; '.'
000000000001ac65         db  0x44 ; 'D'
000000000001ac66         db  0x0e ; '.'
000000000001ac67         db  0x30 ; '0'
000000000001ac68         db  0x86 ; '.'
000000000001ac69         db  0x06 ; '.'
000000000001ac6a         db  0x41 ; 'A'
000000000001ac6b         db  0x0e ; '.'
000000000001ac6c         db  0x38 ; '8'
000000000001ac6d         db  0x83 ; '.'
000000000001ac6e         db  0x07 ; '.'
000000000001ac6f         db  0x50 ; 'P'
000000000001ac70         db  0x0e ; '.'
000000000001ac71         db  0x80 ; '.'
000000000001ac72         db  0x02 ; '.'
000000000001ac73         db  0x03 ; '.'
000000000001ac74         db  0xce ; '.'
000000000001ac75         db  0x01 ; '.'
000000000001ac76         db  0x0a ; '.'
000000000001ac77         db  0x0e ; '.'
000000000001ac78         db  0x38 ; '8'
000000000001ac79         db  0x41 ; 'A'
000000000001ac7a         db  0x0e ; '.'
000000000001ac7b         db  0x30 ; '0'
000000000001ac7c         db  0x41 ; 'A'
000000000001ac7d         db  0x0e ; '.'
000000000001ac7e         db  0x28 ; '('
000000000001ac7f         db  0x42 ; 'B'
000000000001ac80         db  0x0e ; '.'
000000000001ac81         db  0x20 ; ' '
000000000001ac82         db  0x42 ; 'B'
000000000001ac83         db  0x0e ; '.'
000000000001ac84         db  0x18 ; '.'
000000000001ac85         db  0x42 ; 'B'
000000000001ac86         db  0x0e ; '.'
000000000001ac87         db  0x10 ; '.'
000000000001ac88         db  0x42 ; 'B'
000000000001ac89         db  0x0e ; '.'
000000000001ac8a         db  0x08 ; '.'
000000000001ac8b         db  0x48 ; 'H'
000000000001ac8c         db  0x0b ; '.'
000000000001ac8d         db  0x02 ; '.'
000000000001ac8e         db  0xab ; '.'
000000000001ac8f         db  0x0e ; '.'
000000000001ac90         db  0x88 ; '.'
000000000001ac91         db  0x02 ; '.'
000000000001ac92         db  0x4b ; 'K'
000000000001ac93         db  0x0e ; '.'
000000000001ac94         db  0x90 ; '.'
000000000001ac95         db  0x02 ; '.'
000000000001ac96         db  0x5f ; '_'
000000000001ac97         db  0x0e ; '.'
000000000001ac98         db  0x88 ; '.'
000000000001ac99         db  0x02 ; '.'
000000000001ac9a         db  0x41 ; 'A'
000000000001ac9b         db  0x0e ; '.'
000000000001ac9c         db  0x80 ; '.'
000000000001ac9d         db  0x02 ; '.'
000000000001ac9e         db  0x00 ; '.'
000000000001ac9f         db  0x00 ; '.'
000000000001aca0         dd         0x00000044                                  ; Length of the record
000000000001aca4         dd         0x00001384                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001aca8         db         0xf8, 0x25, 2 dup (0xff)                    ; begin 0xd2a0
000000000001acac         db         0xa9, 0x03, 2 dup (0x00)                    ; length 0x3a9 (end at 0xd649)
000000000001acb0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001acb1         db  0x41 ; 'A'
000000000001acb2         db  0x0e ; '.'
000000000001acb3         db  0x10 ; '.'
000000000001acb4         db  0x86 ; '.'
000000000001acb5         db  0x02 ; '.'
000000000001acb6         db  0x41 ; 'A'
000000000001acb7         db  0x0e ; '.'
000000000001acb8         db  0x18 ; '.'
000000000001acb9         db  0x83 ; '.'
000000000001acba         db  0x03 ; '.'
000000000001acbb         db  0x47 ; 'G'
000000000001acbc         db  0x0e ; '.'
000000000001acbd         db  0x20 ; ' '
000000000001acbe         db  0x02 ; '.'
000000000001acbf         db  0xb8 ; '.'
000000000001acc0         db  0x0a ; '.'
000000000001acc1         db  0x0e ; '.'
000000000001acc2         db  0x18 ; '.'
000000000001acc3         db  0x41 ; 'A'
000000000001acc4         db  0x0e ; '.'
000000000001acc5         db  0x10 ; '.'
000000000001acc6         db  0x41 ; 'A'
000000000001acc7         db  0x0e ; '.'
000000000001acc8         db  0x08 ; '.'
000000000001acc9         db  0x45 ; 'E'
000000000001acca         db  0x0b ; '.'
000000000001accb         db  0x6b ; 'k'
000000000001accc         db  0x0a ; '.'
000000000001accd         db  0x0e ; '.'
000000000001acce         db  0x18 ; '.'
000000000001accf         db  0x43 ; 'C'
000000000001acd0         db  0x0e ; '.'
000000000001acd1         db  0x10 ; '.'
000000000001acd2         db  0x41 ; 'A'
000000000001acd3         db  0x0e ; '.'
000000000001acd4         db  0x08 ; '.'
000000000001acd5         db  0x49 ; 'I'
000000000001acd6         db  0x0b ; '.'
000000000001acd7         db  0x03 ; '.'
000000000001acd8         db  0x6c ; 'l'
000000000001acd9         db  0x02 ; '.'
000000000001acda         db  0x0a ; '.'
000000000001acdb         db  0x0e ; '.'
000000000001acdc         db  0x18 ; '.'
000000000001acdd         db  0x41 ; 'A'
000000000001acde         db  0x0e ; '.'
000000000001acdf         db  0x10 ; '.'
000000000001ace0         db  0x41 ; 'A'
000000000001ace1         db  0x0e ; '.'
000000000001ace2         db  0x08 ; '.'
000000000001ace3         db  0x41 ; 'A'
000000000001ace4         db  0x0b ; '.'
000000000001ace5         db  0x00 ; '.'
000000000001ace6         db  0x00 ; '.'
000000000001ace7         db  0x00 ; '.'
000000000001ace8         dd         0x00000020                                  ; Length of the record
000000000001acec         dd         0x000013cc                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001acf0         db         0x60, 0x29, 2 dup (0xff)                    ; begin 0xd650
000000000001acf4         db         0x89, 3 dup (0x00)                          ; length 0x89 (end at 0xd6d9)
000000000001acf8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001acf9         db  0x41 ; 'A'
000000000001acfa         db  0x0e ; '.'
000000000001acfb         db  0x10 ; '.'
000000000001acfc         db  0x83 ; '.'
000000000001acfd         db  0x02 ; '.'
000000000001acfe         db  0x4f ; 'O'
000000000001acff         db  0x0e ; '.'
000000000001ad00         db  0xb0 ; '.'
000000000001ad01         db  0x01 ; '.'
000000000001ad02         db  0x02 ; '.'
000000000001ad03         db  0x64 ; 'd'
000000000001ad04         db  0x0a ; '.'
000000000001ad05         db  0x0e ; '.'
000000000001ad06         db  0x10 ; '.'
000000000001ad07         db  0x41 ; 'A'
000000000001ad08         db  0x0e ; '.'
000000000001ad09         db  0x08 ; '.'
000000000001ad0a         db  0x4b ; 'K'
000000000001ad0b         db  0x0b ; '.'
000000000001ad0c         dd         0x00000030                                  ; Length of the record
000000000001ad10         dd         0x000013f0                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001ad14         db         0xcc, 0x29, 2 dup (0xff)                    ; begin 0xd6e0
000000000001ad18         db         0x6d, 0x01, 2 dup (0x00)                    ; length 0x16d (end at 0xd84d)
000000000001ad1c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ad1d         db  0x5b ; '['
000000000001ad1e         db  0x0e ; '.'
000000000001ad1f         db  0x10 ; '.'
000000000001ad20         db  0x8c ; '.'
000000000001ad21         db  0x02 ; '.'
000000000001ad22         db  0x41 ; 'A'
000000000001ad23         db  0x0e ; '.'
000000000001ad24         db  0x18 ; '.'
000000000001ad25         db  0x86 ; '.'
000000000001ad26         db  0x03 ; '.'
000000000001ad27         db  0x41 ; 'A'
000000000001ad28         db  0x0e ; '.'
000000000001ad29         db  0x20 ; ' '
000000000001ad2a         db  0x83 ; '.'
000000000001ad2b         db  0x04 ; '.'
000000000001ad2c         db  0x03 ; '.'
000000000001ad2d         db  0x08 ; '.'
000000000001ad2e         db  0x01 ; '.'
000000000001ad2f         db  0x0a ; '.'
000000000001ad30         db  0x0e ; '.'
000000000001ad31         db  0x18 ; '.'
000000000001ad32         db  0x41 ; 'A'
000000000001ad33         db  0x0e ; '.'
000000000001ad34         db  0x10 ; '.'
000000000001ad35         db  0x42 ; 'B'
000000000001ad36         db  0x0e ; '.'
000000000001ad37         db  0x08 ; '.'
000000000001ad38         db  0x48 ; 'H'
000000000001ad39         db  0x0b ; '.'
000000000001ad3a         db  0x70 ; 'p'
000000000001ad3b         db  0x0e ; '.'
000000000001ad3c         db  0x08 ; '.'
000000000001ad3d         db  0xc3 ; '.'
000000000001ad3e         db  0xc6 ; '.'
000000000001ad3f         db  0xcc ; '.'
000000000001ad40         dd         0x0000005c                                  ; Length of the record
000000000001ad44         dd         0x00001424                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001ad48         db         0x08, 0x2b, 2 dup (0xff)                    ; begin 0xd850
000000000001ad4c         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0xd8d0)
000000000001ad50         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ad51         db  0x42 ; 'B'
000000000001ad52         db  0x0e ; '.'
000000000001ad53         db  0x10 ; '.'
000000000001ad54         db  0x8d ; '.'
000000000001ad55         db  0x02 ; '.'
000000000001ad56         db  0x42 ; 'B'
000000000001ad57         db  0x0e ; '.'
000000000001ad58         db  0x18 ; '.'
000000000001ad59         db  0x8c ; '.'
000000000001ad5a         db  0x03 ; '.'
000000000001ad5b         db  0x47 ; 'G'
000000000001ad5c         db  0x0e ; '.'
000000000001ad5d         db  0x20 ; ' '
000000000001ad5e         db  0x86 ; '.'
000000000001ad5f         db  0x04 ; '.'
000000000001ad60         db  0x41 ; 'A'
000000000001ad61         db  0x0e ; '.'
000000000001ad62         db  0x28 ; '('
000000000001ad63         db  0x83 ; '.'
000000000001ad64         db  0x05 ; '.'
000000000001ad65         db  0x49 ; 'I'
000000000001ad66         db  0x0e ; '.'
000000000001ad67         db  0x30 ; '0'
000000000001ad68         db  0x62 ; 'b'
000000000001ad69         db  0x0a ; '.'
000000000001ad6a         db  0x0e ; '.'
000000000001ad6b         db  0x28 ; '('
000000000001ad6c         db  0x44 ; 'D'
000000000001ad6d         db  0x0e ; '.'
000000000001ad6e         db  0x20 ; ' '
000000000001ad6f         db  0x41 ; 'A'
000000000001ad70         db  0x0e ; '.'
000000000001ad71         db  0x18 ; '.'
000000000001ad72         db  0x42 ; 'B'
000000000001ad73         db  0x0e ; '.'
000000000001ad74         db  0x10 ; '.'
000000000001ad75         db  0x42 ; 'B'
000000000001ad76         db  0x0e ; '.'
000000000001ad77         db  0x08 ; '.'
000000000001ad78         db  0x48 ; 'H'
000000000001ad79         db  0x0b ; '.'
000000000001ad7a         db  0x5d ; ']'
000000000001ad7b         db  0x0a ; '.'
000000000001ad7c         db  0x0e ; '.'
000000000001ad7d         db  0x28 ; '('
000000000001ad7e         db  0x41 ; 'A'
000000000001ad7f         db  0x0e ; '.'
000000000001ad80         db  0x20 ; ' '
000000000001ad81         db  0x41 ; 'A'
000000000001ad82         db  0x0e ; '.'
000000000001ad83         db  0x18 ; '.'
000000000001ad84         db  0x42 ; 'B'
000000000001ad85         db  0x0e ; '.'
000000000001ad86         db  0x10 ; '.'
000000000001ad87         db  0x42 ; 'B'
000000000001ad88         db  0x0e ; '.'
000000000001ad89         db  0x08 ; '.'
000000000001ad8a         db  0x45 ; 'E'
000000000001ad8b         db  0x0b ; '.'
000000000001ad8c         db  0x44 ; 'D'
000000000001ad8d         db  0x0e ; '.'
000000000001ad8e         db  0x28 ; '('
000000000001ad8f         db  0x43 ; 'C'
000000000001ad90         db  0x0e ; '.'
000000000001ad91         db  0x20 ; ' '
000000000001ad92         db  0x44 ; 'D'
000000000001ad93         db  0x0e ; '.'
000000000001ad94         db  0x18 ; '.'
000000000001ad95         db  0x42 ; 'B'
000000000001ad96         db  0x0e ; '.'
000000000001ad97         db  0x10 ; '.'
000000000001ad98         db  0x42 ; 'B'
000000000001ad99         db  0x0e ; '.'
000000000001ad9a         db  0x08 ; '.'
000000000001ad9b         db  0x00 ; '.'
000000000001ad9c         db  0x00 ; '.'
000000000001ad9d         db  0x00 ; '.'
000000000001ad9e         db  0x00 ; '.'
000000000001ad9f         db  0x00 ; '.'
000000000001ada0         dd         0x0000001c                                  ; Length of the record
000000000001ada4         dd         0x00001484                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001ada8         db         0x28, 0x2b, 2 dup (0xff)                    ; begin 0xd8d0
000000000001adac         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0xd96f)
000000000001adb0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001adb1         db  0x44 ; 'D'
000000000001adb2         db  0x0e ; '.'
000000000001adb3         db  0x10 ; '.'
000000000001adb4         db  0x83 ; '.'
000000000001adb5         db  0x02 ; '.'
000000000001adb6         db  0x02 ; '.'
000000000001adb7         db  0x78 ; 'x'
000000000001adb8         db  0x0a ; '.'
000000000001adb9         db  0x0e ; '.'
000000000001adba         db  0x08 ; '.'
000000000001adbb         db  0x41 ; 'A'
000000000001adbc         db  0x0b ; '.'
000000000001adbd         db  0x00 ; '.'
000000000001adbe         db  0x00 ; '.'
000000000001adbf         db  0x00 ; '.'
000000000001adc0         dd         0x00000034                                  ; Length of the record
000000000001adc4         dd         0x000014a4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001adc8         db         0xa8, 0x2b, 2 dup (0xff)                    ; begin 0xd970
000000000001adcc         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0xd9e4)
000000000001add0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001add1         db  0x42 ; 'B'
000000000001add2         db  0x0e ; '.'
000000000001add3         db  0x10 ; '.'
000000000001add4         db  0x8c ; '.'
000000000001add5         db  0x02 ; '.'
000000000001add6         db  0x41 ; 'A'
000000000001add7         db  0x0e ; '.'
000000000001add8         db  0x18 ; '.'
000000000001add9         db  0x86 ; '.'
000000000001adda         db  0x03 ; '.'
000000000001addb         db  0x44 ; 'D'
000000000001addc         db  0x0e ; '.'
000000000001addd         db  0x20 ; ' '
000000000001adde         db  0x83 ; '.'
000000000001addf         db  0x04 ; '.'
000000000001ade0         db  0x4a ; 'J'
000000000001ade1         db  0x0e ; '.'
000000000001ade2         db  0x30 ; '0'
000000000001ade3         db  0x02 ; '.'
000000000001ade4         db  0x4f ; 'O'
000000000001ade5         db  0x0a ; '.'
000000000001ade6         db  0x0e ; '.'
000000000001ade7         db  0x20 ; ' '
000000000001ade8         db  0x41 ; 'A'
000000000001ade9         db  0x0e ; '.'
000000000001adea         db  0x18 ; '.'
000000000001adeb         db  0x41 ; 'A'
000000000001adec         db  0x0e ; '.'
000000000001aded         db  0x10 ; '.'
000000000001adee         db  0x42 ; 'B'
000000000001adef         db  0x0e ; '.'
000000000001adf0         db  0x08 ; '.'
000000000001adf1         db  0x44 ; 'D'
000000000001adf2         db  0x0b ; '.'
000000000001adf3         db  0x00 ; '.'
000000000001adf4         db  0x00 ; '.'
000000000001adf5         db  0x00 ; '.'
000000000001adf6         db  0x00 ; '.'
000000000001adf7         db  0x00 ; '.'
000000000001adf8         dd         0x0000002c                                  ; Length of the record
000000000001adfc         dd         0x000014dc                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001ae00         db         0xf0, 0x2b, 2 dup (0xff)                    ; begin 0xd9f0
000000000001ae04         db         0x54, 3 dup (0x00)                          ; length 0x54 (end at 0xda44)
000000000001ae08         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ae09         db  0x41 ; 'A'
000000000001ae0a         db  0x0e ; '.'
000000000001ae0b         db  0x10 ; '.'
000000000001ae0c         db  0x86 ; '.'
000000000001ae0d         db  0x02 ; '.'
000000000001ae0e         db  0x41 ; 'A'
000000000001ae0f         db  0x0e ; '.'
000000000001ae10         db  0x18 ; '.'
000000000001ae11         db  0x83 ; '.'
000000000001ae12         db  0x03 ; '.'
000000000001ae13         db  0x44 ; 'D'
000000000001ae14         db  0x0e ; '.'
000000000001ae15         db  0x30 ; '0'
000000000001ae16         db  0x02 ; '.'
000000000001ae17         db  0x44 ; 'D'
000000000001ae18         db  0x0a ; '.'
000000000001ae19         db  0x0e ; '.'
000000000001ae1a         db  0x18 ; '.'
000000000001ae1b         db  0x43 ; 'C'
000000000001ae1c         db  0x0e ; '.'
000000000001ae1d         db  0x10 ; '.'
000000000001ae1e         db  0x41 ; 'A'
000000000001ae1f         db  0x0e ; '.'
000000000001ae20         db  0x08 ; '.'
000000000001ae21         db  0x41 ; 'A'
000000000001ae22         db  0x0b ; '.'
000000000001ae23         db  0x00 ; '.'
000000000001ae24         db  0x00 ; '.'
000000000001ae25         db  0x00 ; '.'
000000000001ae26         db  0x00 ; '.'
000000000001ae27         db  0x00 ; '.'
000000000001ae28         dd         0x00000040                                  ; Length of the record
000000000001ae2c         dd         0x0000150c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001ae30         db         0x20, 0x2c, 2 dup (0xff)                    ; begin 0xda50
000000000001ae34         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0xdb37)
000000000001ae38         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ae39         db  0x41 ; 'A'
000000000001ae3a         db  0x0e ; '.'
000000000001ae3b         db  0x10 ; '.'
000000000001ae3c         db  0x86 ; '.'
000000000001ae3d         db  0x02 ; '.'
000000000001ae3e         db  0x41 ; 'A'
000000000001ae3f         db  0x0e ; '.'
000000000001ae40         db  0x18 ; '.'
000000000001ae41         db  0x83 ; '.'
000000000001ae42         db  0x03 ; '.'
000000000001ae43         db  0x49 ; 'I'
000000000001ae44         db  0x0e ; '.'
000000000001ae45         db  0x20 ; ' '
000000000001ae46         db  0x6e ; 'n'
000000000001ae47         db  0x0a ; '.'
000000000001ae48         db  0x0e ; '.'
000000000001ae49         db  0x18 ; '.'
000000000001ae4a         db  0x41 ; 'A'
000000000001ae4b         db  0x0e ; '.'
000000000001ae4c         db  0x10 ; '.'
000000000001ae4d         db  0x41 ; 'A'
000000000001ae4e         db  0x0e ; '.'
000000000001ae4f         db  0x08 ; '.'
000000000001ae50         db  0x45 ; 'E'
000000000001ae51         db  0x0b ; '.'
000000000001ae52         db  0x02 ; '.'
000000000001ae53         db  0x4a ; 'J'
000000000001ae54         db  0x0a ; '.'
000000000001ae55         db  0x0e ; '.'
000000000001ae56         db  0x18 ; '.'
000000000001ae57         db  0x41 ; 'A'
000000000001ae58         db  0x0e ; '.'
000000000001ae59         db  0x10 ; '.'
000000000001ae5a         db  0x41 ; 'A'
000000000001ae5b         db  0x0e ; '.'
000000000001ae5c         db  0x08 ; '.'
000000000001ae5d         db  0x44 ; 'D'
000000000001ae5e         db  0x0b ; '.'
000000000001ae5f         db  0x02 ; '.'
000000000001ae60         db  0x54 ; 'T'
000000000001ae61         db  0x0e ; '.'
000000000001ae62         db  0x18 ; '.'
000000000001ae63         db  0x41 ; 'A'
000000000001ae64         db  0x0e ; '.'
000000000001ae65         db  0x10 ; '.'
000000000001ae66         db  0x41 ; 'A'
000000000001ae67         db  0x0e ; '.'
000000000001ae68         db  0x08 ; '.'
000000000001ae69         db  0x00 ; '.'
000000000001ae6a         db  0x00 ; '.'
000000000001ae6b         db  0x00 ; '.'
000000000001ae6c         dd         0x00000074                                  ; Length of the record
000000000001ae70         dd         0x00001550                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001ae74         db         0xcc, 0x2c, 2 dup (0xff)                    ; begin 0xdb40
000000000001ae78         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0xed74)
000000000001ae7c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ae7d         db  0x42 ; 'B'
000000000001ae7e         db  0x0e ; '.'
000000000001ae7f         db  0x10 ; '.'
000000000001ae80         db  0x8f ; '.'
000000000001ae81         db  0x02 ; '.'
000000000001ae82         db  0x42 ; 'B'
000000000001ae83         db  0x0e ; '.'
000000000001ae84         db  0x18 ; '.'
000000000001ae85         db  0x8e ; '.'
000000000001ae86         db  0x03 ; '.'
000000000001ae87         db  0x45 ; 'E'
000000000001ae88         db  0x0e ; '.'
000000000001ae89         db  0x20 ; ' '
000000000001ae8a         db  0x8d ; '.'
000000000001ae8b         db  0x04 ; '.'
000000000001ae8c         db  0x42 ; 'B'
000000000001ae8d         db  0x0e ; '.'
000000000001ae8e         db  0x28 ; '('
000000000001ae8f         db  0x8c ; '.'
000000000001ae90         db  0x05 ; '.'
000000000001ae91         db  0x44 ; 'D'
000000000001ae92         db  0x0e ; '.'
000000000001ae93         db  0x30 ; '0'
000000000001ae94         db  0x86 ; '.'
000000000001ae95         db  0x06 ; '.'
000000000001ae96         db  0x41 ; 'A'
000000000001ae97         db  0x0e ; '.'
000000000001ae98         db  0x38 ; '8'
000000000001ae99         db  0x83 ; '.'
000000000001ae9a         db  0x07 ; '.'
000000000001ae9b         db  0x53 ; 'S'
000000000001ae9c         db  0x0e ; '.'
000000000001ae9d         db  0xf0 ; '.'
000000000001ae9e         db  0x01 ; '.'
000000000001ae9f         db  0x03 ; '.'
000000000001aea0         db  0x81 ; '.'
000000000001aea1         db  0x0b ; '.'
000000000001aea2         db  0x0e ; '.'
000000000001aea3         db  0xf8 ; '.'
000000000001aea4         db  0x01 ; '.'
000000000001aea5         db  0x4a ; 'J'
000000000001aea6         db  0x0e ; '.'
000000000001aea7         db  0x80 ; '.'
000000000001aea8         db  0x02 ; '.'
000000000001aea9         db  0x44 ; 'D'
000000000001aeaa         db  0x0e ; '.'
000000000001aeab         db  0x88 ; '.'
000000000001aeac         db  0x02 ; '.'
000000000001aead         db  0x45 ; 'E'
000000000001aeae         db  0x0e ; '.'
000000000001aeaf         db  0x90 ; '.'
000000000001aeb0         db  0x02 ; '.'
000000000001aeb1         db  0x5f ; '_'
000000000001aeb2         db  0x0e ; '.'
000000000001aeb3         db  0xf0 ; '.'
000000000001aeb4         db  0x01 ; '.'
000000000001aeb5         db  0x64 ; 'd'
000000000001aeb6         db  0x0a ; '.'
000000000001aeb7         db  0x0e ; '.'
000000000001aeb8         db  0x38 ; '8'
000000000001aeb9         db  0x41 ; 'A'
000000000001aeba         db  0x0e ; '.'
000000000001aebb         db  0x30 ; '0'
000000000001aebc         db  0x41 ; 'A'
000000000001aebd         db  0x0e ; '.'
000000000001aebe         db  0x28 ; '('
000000000001aebf         db  0x42 ; 'B'
000000000001aec0         db  0x0e ; '.'
000000000001aec1         db  0x20 ; ' '
000000000001aec2         db  0x42 ; 'B'
000000000001aec3         db  0x0e ; '.'
000000000001aec4         db  0x18 ; '.'
000000000001aec5         db  0x42 ; 'B'
000000000001aec6         db  0x0e ; '.'
000000000001aec7         db  0x10 ; '.'
000000000001aec8         db  0x42 ; 'B'
000000000001aec9         db  0x0e ; '.'
000000000001aeca         db  0x08 ; '.'
000000000001aecb         db  0x44 ; 'D'
000000000001aecc         db  0x0b ; '.'
000000000001aecd         db  0x03 ; '.'
000000000001aece         db  0x99 ; '.'
000000000001aecf         db  0x05 ; '.'
000000000001aed0         db  0x0e ; '.'
000000000001aed1         db  0xf8 ; '.'
000000000001aed2         db  0x01 ; '.'
000000000001aed3         db  0x4d ; 'M'
000000000001aed4         db  0x0e ; '.'
000000000001aed5         db  0x80 ; '.'
000000000001aed6         db  0x02 ; '.'
000000000001aed7         db  0x44 ; 'D'
000000000001aed8         db  0x0e ; '.'
000000000001aed9         db  0x88 ; '.'
000000000001aeda         db  0x02 ; '.'
000000000001aedb         db  0x47 ; 'G'
000000000001aedc         db  0x0e ; '.'
000000000001aedd         db  0x90 ; '.'
000000000001aede         db  0x02 ; '.'
000000000001aedf         db  0x5b ; '['
000000000001aee0         db  0x0e ; '.'
000000000001aee1         db  0xf0 ; '.'
000000000001aee2         db  0x01 ; '.'
000000000001aee3         db  0x00 ; '.'
000000000001aee4         dd         0x00000068                                  ; Length of the record
000000000001aee8         dd         0x000015c8                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001aeec         db         0x94, 0x3e, 2 dup (0xff)                    ; begin 0xed80
000000000001aef0         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0xef2b)
000000000001aef4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001aef5         db  0x42 ; 'B'
000000000001aef6         db  0x0e ; '.'
000000000001aef7         db  0x10 ; '.'
000000000001aef8         db  0x8f ; '.'
000000000001aef9         db  0x02 ; '.'
000000000001aefa         db  0x42 ; 'B'
000000000001aefb         db  0x0e ; '.'
000000000001aefc         db  0x18 ; '.'
000000000001aefd         db  0x8e ; '.'
000000000001aefe         db  0x03 ; '.'
000000000001aeff         db  0x45 ; 'E'
000000000001af00         db  0x0e ; '.'
000000000001af01         db  0x20 ; ' '
000000000001af02         db  0x8d ; '.'
000000000001af03         db  0x04 ; '.'
000000000001af04         db  0x42 ; 'B'
000000000001af05         db  0x0e ; '.'
000000000001af06         db  0x28 ; '('
000000000001af07         db  0x8c ; '.'
000000000001af08         db  0x05 ; '.'
000000000001af09         db  0x44 ; 'D'
000000000001af0a         db  0x0e ; '.'
000000000001af0b         db  0x30 ; '0'
000000000001af0c         db  0x86 ; '.'
000000000001af0d         db  0x06 ; '.'
000000000001af0e         db  0x41 ; 'A'
000000000001af0f         db  0x0e ; '.'
000000000001af10         db  0x38 ; '8'
000000000001af11         db  0x83 ; '.'
000000000001af12         db  0x07 ; '.'
000000000001af13         db  0x47 ; 'G'
000000000001af14         db  0x0e ; '.'
000000000001af15         db  0x60 ; '`'
000000000001af16         db  0x02 ; '.'
000000000001af17         db  0x99 ; '.'
000000000001af18         db  0x0e ; '.'
000000000001af19         db  0x68 ; 'h'
000000000001af1a         db  0x5f ; '_'
000000000001af1b         db  0x0e ; '.'
000000000001af1c         db  0x70 ; 'p'
000000000001af1d         db  0x46 ; 'F'
000000000001af1e         db  0x0e ; '.'
000000000001af1f         db  0x78 ; 'x'
000000000001af20         db  0x42 ; 'B'
000000000001af21         db  0x0e ; '.'
000000000001af22         db  0x80 ; '.'
000000000001af23         db  0x01 ; '.'
000000000001af24         db  0x59 ; 'Y'
000000000001af25         db  0x0e ; '.'
000000000001af26         db  0x60 ; '`'
000000000001af27         db  0x02 ; '.'
000000000001af28         db  0x40 ; '@'
000000000001af29         db  0x0e ; '.'
000000000001af2a         db  0x68 ; 'h'
000000000001af2b         db  0x4b ; 'K'
000000000001af2c         db  0x0e ; '.'
000000000001af2d         db  0x70 ; 'p'
000000000001af2e         db  0x43 ; 'C'
000000000001af2f         db  0x0e ; '.'
000000000001af30         db  0x78 ; 'x'
000000000001af31         db  0x45 ; 'E'
000000000001af32         db  0x0e ; '.'
000000000001af33         db  0x80 ; '.'
000000000001af34         db  0x01 ; '.'
000000000001af35         db  0x5e ; '^'
000000000001af36         db  0x0e ; '.'
000000000001af37         db  0x60 ; '`'
000000000001af38         db  0x4c ; 'L'
000000000001af39         db  0x0a ; '.'
000000000001af3a         db  0x0e ; '.'
000000000001af3b         db  0x38 ; '8'
000000000001af3c         db  0x44 ; 'D'
000000000001af3d         db  0x0e ; '.'
000000000001af3e         db  0x30 ; '0'
000000000001af3f         db  0x41 ; 'A'
000000000001af40         db  0x0e ; '.'
000000000001af41         db  0x28 ; '('
000000000001af42         db  0x42 ; 'B'
000000000001af43         db  0x0e ; '.'
000000000001af44         db  0x20 ; ' '
000000000001af45         db  0x42 ; 'B'
000000000001af46         db  0x0e ; '.'
000000000001af47         db  0x18 ; '.'
000000000001af48         db  0x42 ; 'B'
000000000001af49         db  0x0e ; '.'
000000000001af4a         db  0x10 ; '.'
000000000001af4b         db  0x42 ; 'B'
000000000001af4c         db  0x0e ; '.'
000000000001af4d         db  0x08 ; '.'
000000000001af4e         db  0x46 ; 'F'
000000000001af4f         db  0x0b ; '.'
000000000001af50         dd         0x00000028                                  ; Length of the record
000000000001af54         dd         0x00001634                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001af58         db         0xd8, 0x3f, 2 dup (0xff)                    ; begin 0xef30
000000000001af5c         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0xef66)
000000000001af60         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001af61         db  0x42 ; 'B'
000000000001af62         db  0x0e ; '.'
000000000001af63         db  0x10 ; '.'
000000000001af64         db  0x8c ; '.'
000000000001af65         db  0x02 ; '.'
000000000001af66         db  0x41 ; 'A'
000000000001af67         db  0x0e ; '.'
000000000001af68         db  0x18 ; '.'
000000000001af69         db  0x86 ; '.'
000000000001af6a         db  0x03 ; '.'
000000000001af6b         db  0x41 ; 'A'
000000000001af6c         db  0x0e ; '.'
000000000001af6d         db  0x20 ; ' '
000000000001af6e         db  0x83 ; '.'
000000000001af6f         db  0x04 ; '.'
000000000001af70         db  0x6e ; 'n'
000000000001af71         db  0x0e ; '.'
000000000001af72         db  0x18 ; '.'
000000000001af73         db  0x41 ; 'A'
000000000001af74         db  0x0e ; '.'
000000000001af75         db  0x10 ; '.'
000000000001af76         db  0x42 ; 'B'
000000000001af77         db  0x0e ; '.'
000000000001af78         db  0x08 ; '.'
000000000001af79         db  0x00 ; '.'
000000000001af7a         db  0x00 ; '.'
000000000001af7b         db  0x00 ; '.'
000000000001af7c         dd         0x00000010                                  ; Length of the record
000000000001af80         dd         0x00001660                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001af84         db         0xec, 0x3f, 2 dup (0xff)                    ; begin 0xef70
000000000001af88         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0xef81)
000000000001af8c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001af8d         align      16
000000000001af90         dd         0x00000010                                  ; Length of the record
000000000001af94         dd         0x00001674                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001af98         db         0xf8, 0x3f, 2 dup (0xff)                    ; begin 0xef90
000000000001af9c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0xefa1)
000000000001afa0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001afa1         align      4
000000000001afa4         dd         0x00000010                                  ; Length of the record
000000000001afa8         dd         0x00001688                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001afac         db         0x04, 0x40, 2 dup (0xff)                    ; begin 0xefb0
000000000001afb0         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0xefe5)
000000000001afb4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001afb5         align      8
000000000001afb8         dd         0x00000010                                  ; Length of the record
000000000001afbc         dd         0x0000169c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001afc0         db         0x30, 0x40, 2 dup (0xff)                    ; begin 0xeff0
000000000001afc4         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0xf005)
000000000001afc8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001afc9         align      4
000000000001afcc         dd         0x00000010                                  ; Length of the record
000000000001afd0         dd         0x000016b0                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001afd4         db         0x3c, 0x40, 2 dup (0xff)                    ; begin 0xf010
000000000001afd8         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0xf040)
000000000001afdc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001afdd         db  0x6b ; 'k'
000000000001afde         db  0x0e ; '.'
000000000001afdf         db  0x10 ; '.'
000000000001afe0         dd         0x00000050                                  ; Length of the record
000000000001afe4         dd         0x000016c4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001afe8         db         0x58, 0x40, 2 dup (0xff)                    ; begin 0xf040
000000000001afec         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0xf0b4)
000000000001aff0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001aff1         db  0x42 ; 'B'
000000000001aff2         db  0x0e ; '.'
000000000001aff3         db  0x10 ; '.'
000000000001aff4         db  0x8f ; '.'
000000000001aff5         db  0x02 ; '.'
000000000001aff6         db  0x42 ; 'B'
000000000001aff7         db  0x0e ; '.'
000000000001aff8         db  0x18 ; '.'
000000000001aff9         db  0x8e ; '.'
000000000001affa         db  0x03 ; '.'
000000000001affb         db  0x49 ; 'I'
000000000001affc         db  0x0e ; '.'
000000000001affd         db  0x20 ; ' '
000000000001affe         db  0x8d ; '.'
000000000001afff         db  0x04 ; '.'
000000000001b000         db  0x42 ; 'B'
000000000001b001         db  0x0e ; '.'
000000000001b002         db  0x28 ; '('
000000000001b003         db  0x8c ; '.'
000000000001b004         db  0x05 ; '.'
000000000001b005         db  0x44 ; 'D'
000000000001b006         db  0x0e ; '.'
000000000001b007         db  0x30 ; '0'
000000000001b008         db  0x86 ; '.'
000000000001b009         db  0x06 ; '.'
000000000001b00a         db  0x41 ; 'A'
000000000001b00b         db  0x0e ; '.'
000000000001b00c         db  0x38 ; '8'
000000000001b00d         db  0x83 ; '.'
000000000001b00e         db  0x07 ; '.'
000000000001b00f         db  0x4d ; 'M'
000000000001b010         db  0x0e ; '.'
000000000001b011         db  0x50 ; 'P'
000000000001b012         db  0x5f ; '_'
000000000001b013         db  0x0e ; '.'
000000000001b014         db  0x58 ; 'X'
000000000001b015         db  0x47 ; 'G'
000000000001b016         db  0x0e ; '.'
000000000001b017         db  0x60 ; '`'
000000000001b018         db  0x46 ; 'F'
000000000001b019         db  0x0e ; '.'
000000000001b01a         db  0x68 ; 'h'
000000000001b01b         db  0x44 ; 'D'
000000000001b01c         db  0x0e ; '.'
000000000001b01d         db  0x70 ; 'p'
000000000001b01e         db  0x58 ; 'X'
000000000001b01f         db  0x0e ; '.'
000000000001b020         db  0x38 ; '8'
000000000001b021         db  0x41 ; 'A'
000000000001b022         db  0x0e ; '.'
000000000001b023         db  0x30 ; '0'
000000000001b024         db  0x41 ; 'A'
000000000001b025         db  0x0e ; '.'
000000000001b026         db  0x28 ; '('
000000000001b027         db  0x42 ; 'B'
000000000001b028         db  0x0e ; '.'
000000000001b029         db  0x20 ; ' '
000000000001b02a         db  0x42 ; 'B'
000000000001b02b         db  0x0e ; '.'
000000000001b02c         db  0x18 ; '.'
000000000001b02d         db  0x42 ; 'B'
000000000001b02e         db  0x0e ; '.'
000000000001b02f         db  0x10 ; '.'
000000000001b030         db  0x42 ; 'B'
000000000001b031         db  0x0e ; '.'
000000000001b032         db  0x08 ; '.'
000000000001b033         db  0x00 ; '.'
000000000001b034         dd         0x00000068                                  ; Length of the record
000000000001b038         dd         0x00001718                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b03c         db         0x84, 0x40, 2 dup (0xff)                    ; begin 0xf0c0
000000000001b040         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0xf1a3)
000000000001b044         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b045         db  0x42 ; 'B'
000000000001b046         db  0x0e ; '.'
000000000001b047         db  0x10 ; '.'
000000000001b048         db  0x8f ; '.'
000000000001b049         db  0x02 ; '.'
000000000001b04a         db  0x42 ; 'B'
000000000001b04b         db  0x0e ; '.'
000000000001b04c         db  0x18 ; '.'
000000000001b04d         db  0x8e ; '.'
000000000001b04e         db  0x03 ; '.'
000000000001b04f         db  0x49 ; 'I'
000000000001b050         db  0x0e ; '.'
000000000001b051         db  0x20 ; ' '
000000000001b052         db  0x8d ; '.'
000000000001b053         db  0x04 ; '.'
000000000001b054         db  0x42 ; 'B'
000000000001b055         db  0x0e ; '.'
000000000001b056         db  0x28 ; '('
000000000001b057         db  0x8c ; '.'
000000000001b058         db  0x05 ; '.'
000000000001b059         db  0x44 ; 'D'
000000000001b05a         db  0x0e ; '.'
000000000001b05b         db  0x30 ; '0'
000000000001b05c         db  0x86 ; '.'
000000000001b05d         db  0x06 ; '.'
000000000001b05e         db  0x41 ; 'A'
000000000001b05f         db  0x0e ; '.'
000000000001b060         db  0x38 ; '8'
000000000001b061         db  0x83 ; '.'
000000000001b062         db  0x07 ; '.'
000000000001b063         db  0x4d ; 'M'
000000000001b064         db  0x0e ; '.'
000000000001b065         db  0x70 ; 'p'
000000000001b066         db  0x65 ; 'e'
000000000001b067         db  0x0e ; '.'
000000000001b068         db  0x78 ; 'x'
000000000001b069         db  0x4d ; 'M'
000000000001b06a         db  0x0e ; '.'
000000000001b06b         db  0x80 ; '.'
000000000001b06c         db  0x01 ; '.'
000000000001b06d         db  0x46 ; 'F'
000000000001b06e         db  0x0e ; '.'
000000000001b06f         db  0x88 ; '.'
000000000001b070         db  0x01 ; '.'
000000000001b071         db  0x42 ; 'B'
000000000001b072         db  0x0e ; '.'
000000000001b073         db  0x90 ; '.'
000000000001b074         db  0x01 ; '.'
000000000001b075         db  0x5e ; '^'
000000000001b076         db  0x0e ; '.'
000000000001b077         db  0x70 ; 'p'
000000000001b078         db  0x56 ; 'V'
000000000001b079         db  0x0e ; '.'
000000000001b07a         db  0x78 ; 'x'
000000000001b07b         db  0x43 ; 'C'
000000000001b07c         db  0x0e ; '.'
000000000001b07d         db  0x80 ; '.'
000000000001b07e         db  0x01 ; '.'
000000000001b07f         db  0x43 ; 'C'
000000000001b080         db  0x0e ; '.'
000000000001b081         db  0x88 ; '.'
000000000001b082         db  0x01 ; '.'
000000000001b083         db  0x56 ; 'V'
000000000001b084         db  0x0e ; '.'
000000000001b085         db  0x90 ; '.'
000000000001b086         db  0x01 ; '.'
000000000001b087         db  0x52 ; 'R'
000000000001b088         db  0x0e ; '.'
000000000001b089         db  0x70 ; 'p'
000000000001b08a         db  0x5b ; '['
000000000001b08b         db  0x0e ; '.'
000000000001b08c         db  0x38 ; '8'
000000000001b08d         db  0x41 ; 'A'
000000000001b08e         db  0x0e ; '.'
000000000001b08f         db  0x30 ; '0'
000000000001b090         db  0x41 ; 'A'
000000000001b091         db  0x0e ; '.'
000000000001b092         db  0x28 ; '('
000000000001b093         db  0x42 ; 'B'
000000000001b094         db  0x0e ; '.'
000000000001b095         db  0x20 ; ' '
000000000001b096         db  0x42 ; 'B'
000000000001b097         db  0x0e ; '.'
000000000001b098         db  0x18 ; '.'
000000000001b099         db  0x42 ; 'B'
000000000001b09a         db  0x0e ; '.'
000000000001b09b         db  0x10 ; '.'
000000000001b09c         db  0x42 ; 'B'
000000000001b09d         db  0x0e ; '.'
000000000001b09e         db  0x08 ; '.'
000000000001b09f         db  0x00 ; '.'
000000000001b0a0         dd         0x00000010                                  ; Length of the record
000000000001b0a4         dd         0x00001784                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b0a8         db         0x08, 0x41, 2 dup (0xff)                    ; begin 0xf1b0
000000000001b0ac         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0xf1ba)
000000000001b0b0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b0b1         align      4
000000000001b0b4         dd         0x00000028                                  ; Length of the record
000000000001b0b8         dd         0x00001798                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b0bc         db         0x04, 0x41, 2 dup (0xff)                    ; begin 0xf1c0
000000000001b0c0         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0xf253)
000000000001b0c4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b0c5         db  0x48 ; 'H'
000000000001b0c6         db  0x0e ; '.'
000000000001b0c7         db  0x10 ; '.'
000000000001b0c8         db  0x8c ; '.'
000000000001b0c9         db  0x02 ; '.'
000000000001b0ca         db  0x48 ; 'H'
000000000001b0cb         db  0x0e ; '.'
000000000001b0cc         db  0x18 ; '.'
000000000001b0cd         db  0x86 ; '.'
000000000001b0ce         db  0x03 ; '.'
000000000001b0cf         db  0x41 ; 'A'
000000000001b0d0         db  0x0e ; '.'
000000000001b0d1         db  0x20 ; ' '
000000000001b0d2         db  0x83 ; '.'
000000000001b0d3         db  0x04 ; '.'
000000000001b0d4         db  0x02 ; '.'
000000000001b0d5         db  0x74 ; 't'
000000000001b0d6         db  0x0e ; '.'
000000000001b0d7         db  0x18 ; '.'
000000000001b0d8         db  0x4b ; 'K'
000000000001b0d9         db  0x0e ; '.'
000000000001b0da         db  0x10 ; '.'
000000000001b0db         db  0x42 ; 'B'
000000000001b0dc         db  0x0e ; '.'
000000000001b0dd         db  0x08 ; '.'
000000000001b0de         db  0x00 ; '.'
000000000001b0df         db  0x00 ; '.'
000000000001b0e0         dd         0x00000010                                  ; Length of the record
000000000001b0e4         dd         0x000017c4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b0e8         db         0x78, 0x41, 2 dup (0xff)                    ; begin 0xf260
000000000001b0ec         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0xf273)
000000000001b0f0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b0f1         align      4
000000000001b0f4         dd         0x00000010                                  ; Length of the record
000000000001b0f8         dd         0x000017d8                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b0fc         db         0x84, 0x41, 2 dup (0xff)                    ; begin 0xf280
000000000001b100         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0xf28c)
000000000001b104         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b105         align      8
000000000001b108         dd         0x00000010                                  ; Length of the record
000000000001b10c         dd         0x000017ec                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b110         db         0x80, 0x41, 2 dup (0xff)                    ; begin 0xf290
000000000001b114         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0xf2a8)
000000000001b118         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b119         align      4
000000000001b11c         dd         0x00000010                                  ; Length of the record
000000000001b120         dd         0x00001800                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b124         db         0x8c, 0x41, 2 dup (0xff)                    ; begin 0xf2b0
000000000001b128         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0xf2c4)
000000000001b12c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b12d         align      16
000000000001b130         dd         0x00000018                                  ; Length of the record
000000000001b134         dd         0x00001814                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b138         db         0x98, 0x41, 2 dup (0xff)                    ; begin 0xf2d0
000000000001b13c         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0xf35e)
000000000001b140         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b141         db  0x44 ; 'D'
000000000001b142         db  0x0e ; '.'
000000000001b143         db  0x50 ; 'P'
000000000001b144         db  0x02 ; '.'
000000000001b145         db  0x7f ; '.'
000000000001b146         db  0x0a ; '.'
000000000001b147         db  0x0e ; '.'
000000000001b148         db  0x08 ; '.'
000000000001b149         db  0x41 ; 'A'
000000000001b14a         db  0x0b ; '.'
000000000001b14b         db  0x00 ; '.'
000000000001b14c         dd         0x00000018                                  ; Length of the record
000000000001b150         dd         0x00001830                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b154         db         0x0c, 0x42, 2 dup (0xff)                    ; begin 0xf360
000000000001b158         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0xf3ea)
000000000001b15c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b15d         db  0x44 ; 'D'
000000000001b15e         db  0x0e ; '.'
000000000001b15f         db  0x50 ; 'P'
000000000001b160         db  0x02 ; '.'
000000000001b161         db  0x7b ; '{'
000000000001b162         db  0x0a ; '.'
000000000001b163         db  0x0e ; '.'
000000000001b164         db  0x08 ; '.'
000000000001b165         db  0x41 ; 'A'
000000000001b166         db  0x0b ; '.'
000000000001b167         db  0x00 ; '.'
000000000001b168         dd         0x00000010                                  ; Length of the record
000000000001b16c         dd         0x0000184c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b170         db         0x80, 0x42, 2 dup (0xff)                    ; begin 0xf3f0
000000000001b174         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0xf3fc)
000000000001b178         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b179         align      4
000000000001b17c         dd         0x00000010                                  ; Length of the record
000000000001b180         dd         0x00001860                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b184         db         0x7c, 0x42, 2 dup (0xff)                    ; begin 0xf400
000000000001b188         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0xf40f)
000000000001b18c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b18d         align      16
000000000001b190         dd         0x00000018                                  ; Length of the record
000000000001b194         dd         0x00001874                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b198         db         0x78, 0x42, 2 dup (0xff)                    ; begin 0xf410
000000000001b19c         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0xf4a8)
000000000001b1a0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b1a1         db  0x44 ; 'D'
000000000001b1a2         db  0x0e ; '.'
000000000001b1a3         db  0x50 ; 'P'
000000000001b1a4         db  0x02 ; '.'
000000000001b1a5         db  0x8e ; '.'
000000000001b1a6         db  0x0a ; '.'
000000000001b1a7         db  0x0e ; '.'
000000000001b1a8         db  0x08 ; '.'
000000000001b1a9         db  0x41 ; 'A'
000000000001b1aa         db  0x0b ; '.'
000000000001b1ab         db  0x00 ; '.'
000000000001b1ac         dd         0x00000010                                  ; Length of the record
000000000001b1b0         dd         0x00001890                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b1b4         db         0xfc, 0x42, 2 dup (0xff)                    ; begin 0xf4b0
000000000001b1b8         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0xf4c0)
000000000001b1bc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b1bd         align      64
000000000001b1c0         dd         0x00000010                                  ; Length of the record
000000000001b1c4         dd         0x000018a4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b1c8         db         0xf8, 0x42, 2 dup (0xff)                    ; begin 0xf4c0
000000000001b1cc         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0xf4d1)
000000000001b1d0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b1d1         align      4
000000000001b1d4         dd         0x00000010                                  ; Length of the record
000000000001b1d8         dd         0x000018b8                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b1dc         db         0x04, 0x43, 2 dup (0xff)                    ; begin 0xf4e0
000000000001b1e0         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0xf4ea)
000000000001b1e4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b1e5         align      8
000000000001b1e8         dd         0x00000018                                  ; Length of the record
000000000001b1ec         dd         0x000018cc                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b1f0         db         0x00, 0x43, 2 dup (0xff)                    ; begin 0xf4f0
000000000001b1f4         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0xf57e)
000000000001b1f8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b1f9         db  0x44 ; 'D'
000000000001b1fa         db  0x0e ; '.'
000000000001b1fb         db  0x50 ; 'P'
000000000001b1fc         db  0x02 ; '.'
000000000001b1fd         db  0x7f ; '.'
000000000001b1fe         db  0x0a ; '.'
000000000001b1ff         db  0x0e ; '.'
000000000001b200         db  0x08 ; '.'
000000000001b201         db  0x41 ; 'A'
000000000001b202         db  0x0b ; '.'
000000000001b203         db  0x00 ; '.'
000000000001b204         dd         0x00000018                                  ; Length of the record
000000000001b208         dd         0x000018e8                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b20c         db         0x74, 0x43, 2 dup (0xff)                    ; begin 0xf580
000000000001b210         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0xf611)
000000000001b214         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b215         db  0x44 ; 'D'
000000000001b216         db  0x0e ; '.'
000000000001b217         db  0x50 ; 'P'
000000000001b218         db  0x02 ; '.'
000000000001b219         db  0x82 ; '.'
000000000001b21a         db  0x0a ; '.'
000000000001b21b         db  0x0e ; '.'
000000000001b21c         db  0x08 ; '.'
000000000001b21d         db  0x41 ; 'A'
000000000001b21e         db  0x0b ; '.'
000000000001b21f         db  0x00 ; '.'
000000000001b220         dd         0x00000010                                  ; Length of the record
000000000001b224         dd         0x00001904                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b228         db         0xf8, 0x43, 2 dup (0xff)                    ; begin 0xf620
000000000001b22c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0xf62c)
000000000001b230         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b231         align      4
000000000001b234         dd         0x00000010                                  ; Length of the record
000000000001b238         dd         0x00001918                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b23c         db         0xf4, 0x43, 2 dup (0xff)                    ; begin 0xf630
000000000001b240         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0xf647)
000000000001b244         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b245         align      8
000000000001b248         dd         0x00000010                                  ; Length of the record
000000000001b24c         dd         0x0000192c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b250         db         0x00, 0x44, 2 dup (0xff)                    ; begin 0xf650
000000000001b254         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0xf663)
000000000001b258         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b259         align      4
000000000001b25c         dd         0x00000010                                  ; Length of the record
000000000001b260         dd         0x00001940                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b264         db         0x0c, 0x44, 2 dup (0xff)                    ; begin 0xf670
000000000001b268         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0xf67c)
000000000001b26c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b26d         align      16
000000000001b270         dd         0x00000010                                  ; Length of the record
000000000001b274         dd         0x00001954                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b278         db         0x08, 0x44, 2 dup (0xff)                    ; begin 0xf680
000000000001b27c         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0xf694)
000000000001b280         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b281         align      4
000000000001b284         dd         0x00000010                                  ; Length of the record
000000000001b288         dd         0x00001968                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b28c         db         0x14, 0x44, 2 dup (0xff)                    ; begin 0xf6a0
000000000001b290         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0xf6b3)
000000000001b294         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b295         align      8
000000000001b298         dd         0x00000014                                  ; Length of the record
000000000001b29c         dd         0x0000197c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b2a0         db         0x20, 0x44, 2 dup (0xff)                    ; begin 0xf6c0
000000000001b2a4         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0xf6d8)
000000000001b2a8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b2a9         align      16
000000000001b2b0         dd         0x0000004c                                  ; Length of the record
000000000001b2b4         dd         0x00001994                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b2b8         db         0x28, 0x44, 2 dup (0xff)                    ; begin 0xf6e0
000000000001b2bc         db         0x6a, 0x02, 2 dup (0x00)                    ; length 0x26a (end at 0xf94a)
000000000001b2c0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b2c1         db  0x42 ; 'B'
000000000001b2c2         db  0x0e ; '.'
000000000001b2c3         db  0x10 ; '.'
000000000001b2c4         db  0x8f ; '.'
000000000001b2c5         db  0x02 ; '.'
000000000001b2c6         db  0x42 ; 'B'
000000000001b2c7         db  0x0e ; '.'
000000000001b2c8         db  0x18 ; '.'
000000000001b2c9         db  0x8e ; '.'
000000000001b2ca         db  0x03 ; '.'
000000000001b2cb         db  0x45 ; 'E'
000000000001b2cc         db  0x0e ; '.'
000000000001b2cd         db  0x20 ; ' '
000000000001b2ce         db  0x8d ; '.'
000000000001b2cf         db  0x04 ; '.'
000000000001b2d0         db  0x42 ; 'B'
000000000001b2d1         db  0x0e ; '.'
000000000001b2d2         db  0x28 ; '('
000000000001b2d3         db  0x8c ; '.'
000000000001b2d4         db  0x05 ; '.'
000000000001b2d5         db  0x44 ; 'D'
000000000001b2d6         db  0x0e ; '.'
000000000001b2d7         db  0x30 ; '0'
000000000001b2d8         db  0x86 ; '.'
000000000001b2d9         db  0x06 ; '.'
000000000001b2da         db  0x41 ; 'A'
000000000001b2db         db  0x0e ; '.'
000000000001b2dc         db  0x38 ; '8'
000000000001b2dd         db  0x83 ; '.'
000000000001b2de         db  0x07 ; '.'
000000000001b2df         db  0x53 ; 'S'
000000000001b2e0         db  0x0e ; '.'
000000000001b2e1         db  0x80 ; '.'
000000000001b2e2         db  0x03 ; '.'
000000000001b2e3         db  0x02 ; '.'
000000000001b2e4         db  0x58 ; 'X'
000000000001b2e5         db  0x0a ; '.'
000000000001b2e6         db  0x0e ; '.'
000000000001b2e7         db  0x38 ; '8'
000000000001b2e8         db  0x41 ; 'A'
000000000001b2e9         db  0x0e ; '.'
000000000001b2ea         db  0x30 ; '0'
000000000001b2eb         db  0x41 ; 'A'
000000000001b2ec         db  0x0e ; '.'
000000000001b2ed         db  0x28 ; '('
000000000001b2ee         db  0x42 ; 'B'
000000000001b2ef         db  0x0e ; '.'
000000000001b2f0         db  0x20 ; ' '
000000000001b2f1         db  0x42 ; 'B'
000000000001b2f2         db  0x0e ; '.'
000000000001b2f3         db  0x18 ; '.'
000000000001b2f4         db  0x42 ; 'B'
000000000001b2f5         db  0x0e ; '.'
000000000001b2f6         db  0x10 ; '.'
000000000001b2f7         db  0x42 ; 'B'
000000000001b2f8         db  0x0e ; '.'
000000000001b2f9         db  0x08 ; '.'
000000000001b2fa         db  0x4b ; 'K'
000000000001b2fb         db  0x0b ; '.'
000000000001b2fc         db  0x00 ; '.'
000000000001b2fd         db  0x00 ; '.'
000000000001b2fe         db  0x00 ; '.'
000000000001b2ff         db  0x00 ; '.'
000000000001b300         dd         0x00000034                                  ; Length of the record
000000000001b304         dd         0x000019e4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b308         db         0x48, 0x46, 2 dup (0xff)                    ; begin 0xf950
000000000001b30c         db         0x5e, 3 dup (0x00)                          ; length 0x5e (end at 0xf9ae)
000000000001b310         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b311         db  0x42 ; 'B'
000000000001b312         db  0x0e ; '.'
000000000001b313         db  0x10 ; '.'
000000000001b314         db  0x8d ; '.'
000000000001b315         db  0x02 ; '.'
000000000001b316         db  0x42 ; 'B'
000000000001b317         db  0x0e ; '.'
000000000001b318         db  0x18 ; '.'
000000000001b319         db  0x8c ; '.'
000000000001b31a         db  0x03 ; '.'
000000000001b31b         db  0x44 ; 'D'
000000000001b31c         db  0x0e ; '.'
000000000001b31d         db  0x20 ; ' '
000000000001b31e         db  0x86 ; '.'
000000000001b31f         db  0x04 ; '.'
000000000001b320         db  0x41 ; 'A'
000000000001b321         db  0x0e ; '.'
000000000001b322         db  0x28 ; '('
000000000001b323         db  0x83 ; '.'
000000000001b324         db  0x05 ; '.'
000000000001b325         db  0x4a ; 'J'
000000000001b326         db  0x0e ; '.'
000000000001b327         db  0x30 ; '0'
000000000001b328         db  0x02 ; '.'
000000000001b329         db  0x41 ; 'A'
000000000001b32a         db  0x0e ; '.'
000000000001b32b         db  0x28 ; '('
000000000001b32c         db  0x44 ; 'D'
000000000001b32d         db  0x0e ; '.'
000000000001b32e         db  0x20 ; ' '
000000000001b32f         db  0x41 ; 'A'
000000000001b330         db  0x0e ; '.'
000000000001b331         db  0x18 ; '.'
000000000001b332         db  0x42 ; 'B'
000000000001b333         db  0x0e ; '.'
000000000001b334         db  0x10 ; '.'
000000000001b335         db  0x42 ; 'B'
000000000001b336         db  0x0e ; '.'
000000000001b337         db  0x08 ; '.'
000000000001b338         dd         0x00000034                                  ; Length of the record
000000000001b33c         dd         0x00001a1c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b340         db         0x70, 0x46, 2 dup (0xff)                    ; begin 0xf9b0
000000000001b344         db         0x5e, 3 dup (0x00)                          ; length 0x5e (end at 0xfa0e)
000000000001b348         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b349         db  0x42 ; 'B'
000000000001b34a         db  0x0e ; '.'
000000000001b34b         db  0x10 ; '.'
000000000001b34c         db  0x8d ; '.'
000000000001b34d         db  0x02 ; '.'
000000000001b34e         db  0x42 ; 'B'
000000000001b34f         db  0x0e ; '.'
000000000001b350         db  0x18 ; '.'
000000000001b351         db  0x8c ; '.'
000000000001b352         db  0x03 ; '.'
000000000001b353         db  0x44 ; 'D'
000000000001b354         db  0x0e ; '.'
000000000001b355         db  0x20 ; ' '
000000000001b356         db  0x86 ; '.'
000000000001b357         db  0x04 ; '.'
000000000001b358         db  0x41 ; 'A'
000000000001b359         db  0x0e ; '.'
000000000001b35a         db  0x28 ; '('
000000000001b35b         db  0x83 ; '.'
000000000001b35c         db  0x05 ; '.'
000000000001b35d         db  0x4a ; 'J'
000000000001b35e         db  0x0e ; '.'
000000000001b35f         db  0x30 ; '0'
000000000001b360         db  0x02 ; '.'
000000000001b361         db  0x41 ; 'A'
000000000001b362         db  0x0e ; '.'
000000000001b363         db  0x28 ; '('
000000000001b364         db  0x44 ; 'D'
000000000001b365         db  0x0e ; '.'
000000000001b366         db  0x20 ; ' '
000000000001b367         db  0x41 ; 'A'
000000000001b368         db  0x0e ; '.'
000000000001b369         db  0x18 ; '.'
000000000001b36a         db  0x42 ; 'B'
000000000001b36b         db  0x0e ; '.'
000000000001b36c         db  0x10 ; '.'
000000000001b36d         db  0x42 ; 'B'
000000000001b36e         db  0x0e ; '.'
000000000001b36f         db  0x08 ; '.'
000000000001b370         dd         0x00000038                                  ; Length of the record
000000000001b374         dd         0x00001a54                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b378         db         0x98, 0x46, 2 dup (0xff)                    ; begin 0xfa10
000000000001b37c         db         0x27, 0x01, 2 dup (0x00)                    ; length 0x127 (end at 0xfb37)
000000000001b380         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b381         db  0x42 ; 'B'
000000000001b382         db  0x0e ; '.'
000000000001b383         db  0x10 ; '.'
000000000001b384         db  0x8d ; '.'
000000000001b385         db  0x02 ; '.'
000000000001b386         db  0x42 ; 'B'
000000000001b387         db  0x0e ; '.'
000000000001b388         db  0x18 ; '.'
000000000001b389         db  0x8c ; '.'
000000000001b38a         db  0x03 ; '.'
000000000001b38b         db  0x44 ; 'D'
000000000001b38c         db  0x0e ; '.'
000000000001b38d         db  0x20 ; ' '
000000000001b38e         db  0x86 ; '.'
000000000001b38f         db  0x04 ; '.'
000000000001b390         db  0x41 ; 'A'
000000000001b391         db  0x0e ; '.'
000000000001b392         db  0x28 ; '('
000000000001b393         db  0x83 ; '.'
000000000001b394         db  0x05 ; '.'
000000000001b395         db  0x4f ; 'O'
000000000001b396         db  0x0e ; '.'
000000000001b397         db  0xe0 ; '.'
000000000001b398         db  0x02 ; '.'
000000000001b399         db  0x02 ; '.'
000000000001b39a         db  0xb5 ; '.'
000000000001b39b         db  0x0a ; '.'
000000000001b39c         db  0x0e ; '.'
000000000001b39d         db  0x28 ; '('
000000000001b39e         db  0x41 ; 'A'
000000000001b39f         db  0x0e ; '.'
000000000001b3a0         db  0x20 ; ' '
000000000001b3a1         db  0x41 ; 'A'
000000000001b3a2         db  0x0e ; '.'
000000000001b3a3         db  0x18 ; '.'
000000000001b3a4         db  0x42 ; 'B'
000000000001b3a5         db  0x0e ; '.'
000000000001b3a6         db  0x10 ; '.'
000000000001b3a7         db  0x42 ; 'B'
000000000001b3a8         db  0x0e ; '.'
000000000001b3a9         db  0x08 ; '.'
000000000001b3aa         db  0x45 ; 'E'
000000000001b3ab         db  0x0b ; '.'
000000000001b3ac         dd         0x0000005c                                  ; Length of the record
000000000001b3b0         dd         0x00001a90                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b3b4         db         0x8c, 0x47, 2 dup (0xff)                    ; begin 0xfb40
000000000001b3b8         db         0x92, 3 dup (0x00)                          ; length 0x92 (end at 0xfbd2)
000000000001b3bc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b3bd         db  0x42 ; 'B'
000000000001b3be         db  0x0e ; '.'
000000000001b3bf         db  0x10 ; '.'
000000000001b3c0         db  0x8f ; '.'
000000000001b3c1         db  0x02 ; '.'
000000000001b3c2         db  0x42 ; 'B'
000000000001b3c3         db  0x0e ; '.'
000000000001b3c4         db  0x18 ; '.'
000000000001b3c5         db  0x8e ; '.'
000000000001b3c6         db  0x03 ; '.'
000000000001b3c7         db  0x45 ; 'E'
000000000001b3c8         db  0x0e ; '.'
000000000001b3c9         db  0x20 ; ' '
000000000001b3ca         db  0x8d ; '.'
000000000001b3cb         db  0x04 ; '.'
000000000001b3cc         db  0x42 ; 'B'
000000000001b3cd         db  0x0e ; '.'
000000000001b3ce         db  0x28 ; '('
000000000001b3cf         db  0x8c ; '.'
000000000001b3d0         db  0x05 ; '.'
000000000001b3d1         db  0x41 ; 'A'
000000000001b3d2         db  0x0e ; '.'
000000000001b3d3         db  0x30 ; '0'
000000000001b3d4         db  0x86 ; '.'
000000000001b3d5         db  0x06 ; '.'
000000000001b3d6         db  0x41 ; 'A'
000000000001b3d7         db  0x0e ; '.'
000000000001b3d8         db  0x38 ; '8'
000000000001b3d9         db  0x83 ; '.'
000000000001b3da         db  0x07 ; '.'
000000000001b3db         db  0x4a ; 'J'
000000000001b3dc         db  0x0e ; '.'
000000000001b3dd         db  0x50 ; 'P'
000000000001b3de         db  0x76 ; 'v'
000000000001b3df         db  0x0a ; '.'
000000000001b3e0         db  0x0e ; '.'
000000000001b3e1         db  0x38 ; '8'
000000000001b3e2         db  0x43 ; 'C'
000000000001b3e3         db  0x0e ; '.'
000000000001b3e4         db  0x30 ; '0'
000000000001b3e5         db  0x41 ; 'A'
000000000001b3e6         db  0x0e ; '.'
000000000001b3e7         db  0x28 ; '('
000000000001b3e8         db  0x42 ; 'B'
000000000001b3e9         db  0x0e ; '.'
000000000001b3ea         db  0x20 ; ' '
000000000001b3eb         db  0x42 ; 'B'
000000000001b3ec         db  0x0e ; '.'
000000000001b3ed         db  0x18 ; '.'
000000000001b3ee         db  0x42 ; 'B'
000000000001b3ef         db  0x0e ; '.'
000000000001b3f0         db  0x10 ; '.'
000000000001b3f1         db  0x42 ; 'B'
000000000001b3f2         db  0x0e ; '.'
000000000001b3f3         db  0x08 ; '.'
000000000001b3f4         db  0x47 ; 'G'
000000000001b3f5         db  0x0b ; '.'
000000000001b3f6         db  0x5a ; 'Z'
000000000001b3f7         db  0x0e ; '.'
000000000001b3f8         db  0x38 ; '8'
000000000001b3f9         db  0x4a ; 'J'
000000000001b3fa         db  0x0e ; '.'
000000000001b3fb         db  0x30 ; '0'
000000000001b3fc         db  0x41 ; 'A'
000000000001b3fd         db  0x0e ; '.'
000000000001b3fe         db  0x28 ; '('
000000000001b3ff         db  0x42 ; 'B'
000000000001b400         db  0x0e ; '.'
000000000001b401         db  0x20 ; ' '
000000000001b402         db  0x42 ; 'B'
000000000001b403         db  0x0e ; '.'
000000000001b404         db  0x18 ; '.'
000000000001b405         db  0x42 ; 'B'
000000000001b406         db  0x0e ; '.'
000000000001b407         db  0x10 ; '.'
000000000001b408         db  0x42 ; 'B'
000000000001b409         db  0x0e ; '.'
000000000001b40a         db  0x08 ; '.'
000000000001b40b         db  0x00 ; '.'
000000000001b40c         dd         0x00000010                                  ; Length of the record
000000000001b410         dd         0x00001af0                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b414         db         0xcc, 0x47, 2 dup (0xff)                    ; begin 0xfbe0
000000000001b418         db         0x12, 3 dup (0x00)                          ; length 0x12 (end at 0xfbf2)
000000000001b41c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b41d         align      32
000000000001b420         dd         0x00000010                                  ; Length of the record
000000000001b424         dd         0x00001b04                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b428         db         0xd8, 0x47, 2 dup (0xff)                    ; begin 0xfc00
000000000001b42c         db         0x1e, 3 dup (0x00)                          ; length 0x1e (end at 0xfc1e)
000000000001b430         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b431         align      4
000000000001b434         dd         0x00000010                                  ; Length of the record
000000000001b438         dd         0x00001b18                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b43c         db         0xe4, 0x47, 2 dup (0xff)                    ; begin 0xfc20
000000000001b440         db         0x0b, 3 dup (0x00)                          ; length 0xb (end at 0xfc2b)
000000000001b444         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b445         align      8
000000000001b448         dd         0x0000004c                                  ; Length of the record
000000000001b44c         dd         0x00001b2c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b450         db         0xe0, 0x47, 2 dup (0xff)                    ; begin 0xfc30
000000000001b454         db         0x78, 0x03, 2 dup (0x00)                    ; length 0x378 (end at 0xffa8)
000000000001b458         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b459         db  0x42 ; 'B'
000000000001b45a         db  0x0e ; '.'
000000000001b45b         db  0x10 ; '.'
000000000001b45c         db  0x8f ; '.'
000000000001b45d         db  0x02 ; '.'
000000000001b45e         db  0x49 ; 'I'
000000000001b45f         db  0x0e ; '.'
000000000001b460         db  0x18 ; '.'
000000000001b461         db  0x8e ; '.'
000000000001b462         db  0x03 ; '.'
000000000001b463         db  0x42 ; 'B'
000000000001b464         db  0x0e ; '.'
000000000001b465         db  0x20 ; ' '
000000000001b466         db  0x8d ; '.'
000000000001b467         db  0x04 ; '.'
000000000001b468         db  0x42 ; 'B'
000000000001b469         db  0x0e ; '.'
000000000001b46a         db  0x28 ; '('
000000000001b46b         db  0x8c ; '.'
000000000001b46c         db  0x05 ; '.'
000000000001b46d         db  0x43 ; 'C'
000000000001b46e         db  0x0e ; '.'
000000000001b46f         db  0x30 ; '0'
000000000001b470         db  0x86 ; '.'
000000000001b471         db  0x06 ; '.'
000000000001b472         db  0x41 ; 'A'
000000000001b473         db  0x0e ; '.'
000000000001b474         db  0x38 ; '8'
000000000001b475         db  0x83 ; '.'
000000000001b476         db  0x07 ; '.'
000000000001b477         db  0x44 ; 'D'
000000000001b478         db  0x0e ; '.'
000000000001b479         db  0x80 ; '.'
000000000001b47a         db  0x01 ; '.'
000000000001b47b         db  0x03 ; '.'
000000000001b47c         db  0x48 ; 'H'
000000000001b47d         db  0x01 ; '.'
000000000001b47e         db  0x0a ; '.'
000000000001b47f         db  0x0e ; '.'
000000000001b480         db  0x38 ; '8'
000000000001b481         db  0x44 ; 'D'
000000000001b482         db  0x0e ; '.'
000000000001b483         db  0x30 ; '0'
000000000001b484         db  0x41 ; 'A'
000000000001b485         db  0x0e ; '.'
000000000001b486         db  0x28 ; '('
000000000001b487         db  0x42 ; 'B'
000000000001b488         db  0x0e ; '.'
000000000001b489         db  0x20 ; ' '
000000000001b48a         db  0x42 ; 'B'
000000000001b48b         db  0x0e ; '.'
000000000001b48c         db  0x18 ; '.'
000000000001b48d         db  0x42 ; 'B'
000000000001b48e         db  0x0e ; '.'
000000000001b48f         db  0x10 ; '.'
000000000001b490         db  0x42 ; 'B'
000000000001b491         db  0x0e ; '.'
000000000001b492         db  0x08 ; '.'
000000000001b493         db  0x44 ; 'D'
000000000001b494         db  0x0b ; '.'
000000000001b495         db  0x00 ; '.'
000000000001b496         db  0x00 ; '.'
000000000001b497         db  0x00 ; '.'
000000000001b498         dd         0x0000002c                                  ; Length of the record
000000000001b49c         dd         0x00001b7c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b4a0         db         0x10, 0x4b, 2 dup (0xff)                    ; begin 0xffb0
000000000001b4a4         db         0x5a, 3 dup (0x00)                          ; length 0x5a (end at 0x1000a)
000000000001b4a8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b4a9         db  0x42 ; 'B'
000000000001b4aa         db  0x0e ; '.'
000000000001b4ab         db  0x10 ; '.'
000000000001b4ac         db  0x8c ; '.'
000000000001b4ad         db  0x02 ; '.'
000000000001b4ae         db  0x41 ; 'A'
000000000001b4af         db  0x0e ; '.'
000000000001b4b0         db  0x18 ; '.'
000000000001b4b1         db  0x86 ; '.'
000000000001b4b2         db  0x03 ; '.'
000000000001b4b3         db  0x43 ; 'C'
000000000001b4b4         db  0x0e ; '.'
000000000001b4b5         db  0x20 ; ' '
000000000001b4b6         db  0x83 ; '.'
000000000001b4b7         db  0x04 ; '.'
000000000001b4b8         db  0x6a ; 'j'
000000000001b4b9         db  0x0a ; '.'
000000000001b4ba         db  0x0e ; '.'
000000000001b4bb         db  0x18 ; '.'
000000000001b4bc         db  0x41 ; 'A'
000000000001b4bd         db  0x0e ; '.'
000000000001b4be         db  0x10 ; '.'
000000000001b4bf         db  0x42 ; 'B'
000000000001b4c0         db  0x0e ; '.'
000000000001b4c1         db  0x08 ; '.'
000000000001b4c2         db  0x45 ; 'E'
000000000001b4c3         db  0x0b ; '.'
000000000001b4c4         db  0x00 ; '.'
000000000001b4c5         db  0x00 ; '.'
000000000001b4c6         db  0x00 ; '.'
000000000001b4c7         db  0x00 ; '.'
000000000001b4c8         dd         0x00000010                                  ; Length of the record
000000000001b4cc         dd         0x00001bac                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b4d0         db         0x40, 0x4b, 2 dup (0xff)                    ; begin 0x10010
000000000001b4d4         db         0x07, 3 dup (0x00)                          ; length 0x7 (end at 0x10017)
000000000001b4d8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b4d9         align      4
000000000001b4dc         dd         0x00000010                                  ; Length of the record
000000000001b4e0         dd         0x00001bc0                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b4e4         db         0x3c, 0x4b, 2 dup (0xff)                    ; begin 0x10020
000000000001b4e8         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x10034)
000000000001b4ec         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b4ed         align      16
000000000001b4f0         dd         0x0000004c                                  ; Length of the record
000000000001b4f4         dd         0x00001bd4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b4f8         db         0x48, 0x4b, 2 dup (0xff)                    ; begin 0x10040
000000000001b4fc         db         0xa9, 0x02, 2 dup (0x00)                    ; length 0x2a9 (end at 0x102e9)
000000000001b500         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b501         db  0x45 ; 'E'
000000000001b502         db  0x0e ; '.'
000000000001b503         db  0x10 ; '.'
000000000001b504         db  0x8e ; '.'
000000000001b505         db  0x02 ; '.'
000000000001b506         db  0x45 ; 'E'
000000000001b507         db  0x0e ; '.'
000000000001b508         db  0x18 ; '.'
000000000001b509         db  0x8d ; '.'
000000000001b50a         db  0x03 ; '.'
000000000001b50b         db  0x45 ; 'E'
000000000001b50c         db  0x0e ; '.'
000000000001b50d         db  0x20 ; ' '
000000000001b50e         db  0x8c ; '.'
000000000001b50f         db  0x04 ; '.'
000000000001b510         db  0x44 ; 'D'
000000000001b511         db  0x0e ; '.'
000000000001b512         db  0x28 ; '('
000000000001b513         db  0x86 ; '.'
000000000001b514         db  0x05 ; '.'
000000000001b515         db  0x44 ; 'D'
000000000001b516         db  0x0e ; '.'
000000000001b517         db  0x30 ; '0'
000000000001b518         db  0x83 ; '.'
000000000001b519         db  0x06 ; '.'
000000000001b51a         db  0x02 ; '.'
000000000001b51b         db  0x60 ; '`'
000000000001b51c         db  0x0a ; '.'
000000000001b51d         db  0x0e ; '.'
000000000001b51e         db  0x28 ; '('
000000000001b51f         db  0x44 ; 'D'
000000000001b520         db  0x0e ; '.'
000000000001b521         db  0x20 ; ' '
000000000001b522         db  0x42 ; 'B'
000000000001b523         db  0x0e ; '.'
000000000001b524         db  0x18 ; '.'
000000000001b525         db  0x42 ; 'B'
000000000001b526         db  0x0e ; '.'
000000000001b527         db  0x10 ; '.'
000000000001b528         db  0x42 ; 'B'
000000000001b529         db  0x0e ; '.'
000000000001b52a         db  0x08 ; '.'
000000000001b52b         db  0x47 ; 'G'
000000000001b52c         db  0x0b ; '.'
000000000001b52d         db  0x02 ; '.'
000000000001b52e         db  0xa0 ; '.'
000000000001b52f         db  0x0a ; '.'
000000000001b530         db  0x0e ; '.'
000000000001b531         db  0x28 ; '('
000000000001b532         db  0x44 ; 'D'
000000000001b533         db  0x0e ; '.'
000000000001b534         db  0x20 ; ' '
000000000001b535         db  0x42 ; 'B'
000000000001b536         db  0x0e ; '.'
000000000001b537         db  0x18 ; '.'
000000000001b538         db  0x42 ; 'B'
000000000001b539         db  0x0e ; '.'
000000000001b53a         db  0x10 ; '.'
000000000001b53b         db  0x42 ; 'B'
000000000001b53c         db  0x0e ; '.'
000000000001b53d         db  0x08 ; '.'
000000000001b53e         db  0x46 ; 'F'
000000000001b53f         db  0x0b ; '.'
000000000001b540         dd         0x00000030                                  ; Length of the record
000000000001b544         dd         0x00001c24                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b548         db         0xa8, 0x4d, 2 dup (0xff)                    ; begin 0x102f0
000000000001b54c         db         0x53, 0x01, 2 dup (0x00)                    ; length 0x153 (end at 0x10443)
000000000001b550         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b551         db  0x42 ; 'B'
000000000001b552         db  0x0e ; '.'
000000000001b553         db  0x10 ; '.'
000000000001b554         db  0x8c ; '.'
000000000001b555         db  0x02 ; '.'
000000000001b556         db  0x41 ; 'A'
000000000001b557         db  0x0e ; '.'
000000000001b558         db  0x18 ; '.'
000000000001b559         db  0x86 ; '.'
000000000001b55a         db  0x03 ; '.'
000000000001b55b         db  0x41 ; 'A'
000000000001b55c         db  0x0e ; '.'
000000000001b55d         db  0x20 ; ' '
000000000001b55e         db  0x83 ; '.'
000000000001b55f         db  0x04 ; '.'
000000000001b560         db  0x44 ; 'D'
000000000001b561         db  0x0e ; '.'
000000000001b562         db  0x30 ; '0'
000000000001b563         db  0x02 ; '.'
000000000001b564         db  0x65 ; 'e'
000000000001b565         db  0x0a ; '.'
000000000001b566         db  0x0e ; '.'
000000000001b567         db  0x20 ; ' '
000000000001b568         db  0x41 ; 'A'
000000000001b569         db  0x0e ; '.'
000000000001b56a         db  0x18 ; '.'
000000000001b56b         db  0x41 ; 'A'
000000000001b56c         db  0x0e ; '.'
000000000001b56d         db  0x10 ; '.'
000000000001b56e         db  0x42 ; 'B'
000000000001b56f         db  0x0e ; '.'
000000000001b570         db  0x08 ; '.'
000000000001b571         db  0x47 ; 'G'
000000000001b572         db  0x0b ; '.'
000000000001b573         db  0x00 ; '.'
000000000001b574         dd         0x00000018                                  ; Length of the record
000000000001b578         dd         0x00001c58                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b57c         db         0xd4, 0x4e, 2 dup (0xff)                    ; begin 0x10450
000000000001b580         db         0x75, 3 dup (0x00)                          ; length 0x75 (end at 0x104c5)
000000000001b584         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b585         db  0x41 ; 'A'
000000000001b586         db  0x0e ; '.'
000000000001b587         db  0x10 ; '.'
000000000001b588         db  0x83 ; '.'
000000000001b589         db  0x02 ; '.'
000000000001b58a         db  0x6e ; 'n'
000000000001b58b         db  0x0a ; '.'
000000000001b58c         db  0x0e ; '.'
000000000001b58d         db  0x08 ; '.'
000000000001b58e         db  0x41 ; 'A'
000000000001b58f         db  0x0b ; '.'
000000000001b590         dd         0x0000004c                                  ; Length of the record
000000000001b594         dd         0x00001c74                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b598         db         0x38, 0x4f, 2 dup (0xff)                    ; begin 0x104d0
000000000001b59c         db         0x8c, 0x01, 2 dup (0x00)                    ; length 0x18c (end at 0x1065c)
000000000001b5a0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b5a1         db  0x42 ; 'B'
000000000001b5a2         db  0x0e ; '.'
000000000001b5a3         db  0x10 ; '.'
000000000001b5a4         db  0x8f ; '.'
000000000001b5a5         db  0x02 ; '.'
000000000001b5a6         db  0x42 ; 'B'
000000000001b5a7         db  0x0e ; '.'
000000000001b5a8         db  0x18 ; '.'
000000000001b5a9         db  0x8e ; '.'
000000000001b5aa         db  0x03 ; '.'
000000000001b5ab         db  0x44 ; 'D'
000000000001b5ac         db  0x0e ; '.'
000000000001b5ad         db  0x20 ; ' '
000000000001b5ae         db  0x8d ; '.'
000000000001b5af         db  0x04 ; '.'
000000000001b5b0         db  0x42 ; 'B'
000000000001b5b1         db  0x0e ; '.'
000000000001b5b2         db  0x28 ; '('
000000000001b5b3         db  0x8c ; '.'
000000000001b5b4         db  0x05 ; '.'
000000000001b5b5         db  0x44 ; 'D'
000000000001b5b6         db  0x0e ; '.'
000000000001b5b7         db  0x30 ; '0'
000000000001b5b8         db  0x86 ; '.'
000000000001b5b9         db  0x06 ; '.'
000000000001b5ba         db  0x41 ; 'A'
000000000001b5bb         db  0x0e ; '.'
000000000001b5bc         db  0x38 ; '8'
000000000001b5bd         db  0x83 ; '.'
000000000001b5be         db  0x07 ; '.'
000000000001b5bf         db  0x4a ; 'J'
000000000001b5c0         db  0x0e ; '.'
000000000001b5c1         db  0x70 ; 'p'
000000000001b5c2         db  0x02 ; '.'
000000000001b5c3         db  0xdd ; '.'
000000000001b5c4         db  0x0a ; '.'
000000000001b5c5         db  0x0e ; '.'
000000000001b5c6         db  0x38 ; '8'
000000000001b5c7         db  0x41 ; 'A'
000000000001b5c8         db  0x0e ; '.'
000000000001b5c9         db  0x30 ; '0'
000000000001b5ca         db  0x41 ; 'A'
000000000001b5cb         db  0x0e ; '.'
000000000001b5cc         db  0x28 ; '('
000000000001b5cd         db  0x42 ; 'B'
000000000001b5ce         db  0x0e ; '.'
000000000001b5cf         db  0x20 ; ' '
000000000001b5d0         db  0x42 ; 'B'
000000000001b5d1         db  0x0e ; '.'
000000000001b5d2         db  0x18 ; '.'
000000000001b5d3         db  0x42 ; 'B'
000000000001b5d4         db  0x0e ; '.'
000000000001b5d5         db  0x10 ; '.'
000000000001b5d6         db  0x42 ; 'B'
000000000001b5d7         db  0x0e ; '.'
000000000001b5d8         db  0x08 ; '.'
000000000001b5d9         db  0x48 ; 'H'
000000000001b5da         db  0x0b ; '.'
000000000001b5db         db  0x00 ; '.'
000000000001b5dc         db  0x00 ; '.'
000000000001b5dd         db  0x00 ; '.'
000000000001b5de         db  0x00 ; '.'
000000000001b5df         db  0x00 ; '.'
000000000001b5e0         dd         0x00000020                                  ; Length of the record
000000000001b5e4         dd         0x00001cc4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b5e8         db         0x78, 0x50, 2 dup (0xff)                    ; begin 0x10660
000000000001b5ec         db         0x7c, 3 dup (0x00)                          ; length 0x7c (end at 0x106dc)
000000000001b5f0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b5f1         db  0x41 ; 'A'
000000000001b5f2         db  0x0e ; '.'
000000000001b5f3         db  0x10 ; '.'
000000000001b5f4         db  0x83 ; '.'
000000000001b5f5         db  0x02 ; '.'
000000000001b5f6         db  0x4f ; 'O'
000000000001b5f7         db  0x0e ; '.'
000000000001b5f8         db  0xb0 ; '.'
000000000001b5f9         db  0x01 ; '.'
000000000001b5fa         db  0x02 ; '.'
000000000001b5fb         db  0x65 ; 'e'
000000000001b5fc         db  0x0a ; '.'
000000000001b5fd         db  0x0e ; '.'
000000000001b5fe         db  0x10 ; '.'
000000000001b5ff         db  0x41 ; 'A'
000000000001b600         db  0x0e ; '.'
000000000001b601         db  0x08 ; '.'
000000000001b602         db  0x41 ; 'A'
000000000001b603         db  0x0b ; '.'
000000000001b604         dd         0x00000010                                  ; Length of the record
000000000001b608         dd         0x00001ce8                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b60c         db         0xd4, 0x50, 2 dup (0xff)                    ; begin 0x106e0
000000000001b610         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x106ea)
000000000001b614         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b615         align      8
000000000001b618         dd         0x00000010                                  ; Length of the record
000000000001b61c         dd         0x00001cfc                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b620         db         0xd0, 0x50, 2 dup (0xff)                    ; begin 0x106f0
000000000001b624         db         0x16, 3 dup (0x00)                          ; length 0x16 (end at 0x10706)
000000000001b628         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b629         align      4
000000000001b62c         dd         0x00000048                                  ; Length of the record
000000000001b630         dd         0x00001d10                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b634         db         0xdc, 0x50, 2 dup (0xff)                    ; begin 0x10710
000000000001b638         db         0x74, 0x01, 2 dup (0x00)                    ; length 0x174 (end at 0x10884)
000000000001b63c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b63d         db  0x42 ; 'B'
000000000001b63e         db  0x0e ; '.'
000000000001b63f         db  0x10 ; '.'
000000000001b640         db  0x8f ; '.'
000000000001b641         db  0x02 ; '.'
000000000001b642         db  0x42 ; 'B'
000000000001b643         db  0x0e ; '.'
000000000001b644         db  0x18 ; '.'
000000000001b645         db  0x8e ; '.'
000000000001b646         db  0x03 ; '.'
000000000001b647         db  0x45 ; 'E'
000000000001b648         db  0x0e ; '.'
000000000001b649         db  0x20 ; ' '
000000000001b64a         db  0x8d ; '.'
000000000001b64b         db  0x04 ; '.'
000000000001b64c         db  0x42 ; 'B'
000000000001b64d         db  0x0e ; '.'
000000000001b64e         db  0x28 ; '('
000000000001b64f         db  0x8c ; '.'
000000000001b650         db  0x05 ; '.'
000000000001b651         db  0x44 ; 'D'
000000000001b652         db  0x0e ; '.'
000000000001b653         db  0x30 ; '0'
000000000001b654         db  0x86 ; '.'
000000000001b655         db  0x06 ; '.'
000000000001b656         db  0x41 ; 'A'
000000000001b657         db  0x0e ; '.'
000000000001b658         db  0x38 ; '8'
000000000001b659         db  0x83 ; '.'
000000000001b65a         db  0x07 ; '.'
000000000001b65b         db  0x46 ; 'F'
000000000001b65c         db  0x0e ; '.'
000000000001b65d         db  0x70 ; 'p'
000000000001b65e         db  0x03 ; '.'
000000000001b65f         db  0x31 ; '1'
000000000001b660         db  0x01 ; '.'
000000000001b661         db  0x0a ; '.'
000000000001b662         db  0x0e ; '.'
000000000001b663         db  0x38 ; '8'
000000000001b664         db  0x43 ; 'C'
000000000001b665         db  0x0e ; '.'
000000000001b666         db  0x30 ; '0'
000000000001b667         db  0x41 ; 'A'
000000000001b668         db  0x0e ; '.'
000000000001b669         db  0x28 ; '('
000000000001b66a         db  0x42 ; 'B'
000000000001b66b         db  0x0e ; '.'
000000000001b66c         db  0x20 ; ' '
000000000001b66d         db  0x42 ; 'B'
000000000001b66e         db  0x0e ; '.'
000000000001b66f         db  0x18 ; '.'
000000000001b670         db  0x42 ; 'B'
000000000001b671         db  0x0e ; '.'
000000000001b672         db  0x10 ; '.'
000000000001b673         db  0x42 ; 'B'
000000000001b674         db  0x0e ; '.'
000000000001b675         db  0x08 ; '.'
000000000001b676         db  0x41 ; 'A'
000000000001b677         db  0x0b ; '.'
000000000001b678         dd         0x00000020                                  ; Length of the record
000000000001b67c         dd         0x00001d5c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b680         db         0x10, 0x52, 2 dup (0xff)                    ; begin 0x10890
000000000001b684         db         0x86, 3 dup (0x00)                          ; length 0x86 (end at 0x10916)
000000000001b688         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b689         db  0x44 ; 'D'
000000000001b68a         db  0x0e ; '.'
000000000001b68b         db  0x20 ; ' '
000000000001b68c         db  0x02 ; '.'
000000000001b68d         db  0x49 ; 'I'
000000000001b68e         db  0x0a ; '.'
000000000001b68f         db  0x0e ; '.'
000000000001b690         db  0x08 ; '.'
000000000001b691         db  0x43 ; 'C'
000000000001b692         db  0x0b ; '.'
000000000001b693         db  0x55 ; 'U'
000000000001b694         db  0x0a ; '.'
000000000001b695         db  0x0e ; '.'
000000000001b696         db  0x08 ; '.'
000000000001b697         db  0x4b ; 'K'
000000000001b698         db  0x0b ; '.'
000000000001b699         db  0x55 ; 'U'
000000000001b69a         db  0x0e ; '.'
000000000001b69b         db  0x08 ; '.'
000000000001b69c         dd         0x00000010                                  ; Length of the record
000000000001b6a0         dd         0x00001d80                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b6a4         db         0x7c, 0x52, 2 dup (0xff)                    ; begin 0x10920
000000000001b6a8         db         0x0b, 3 dup (0x00)                          ; length 0xb (end at 0x1092b)
000000000001b6ac         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b6ad         align      16
000000000001b6b0         dd         0x00000014                                  ; Length of the record
000000000001b6b4         dd         0x00001d94                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b6b8         db         0x78, 0x52, 2 dup (0xff)                    ; begin 0x10930
000000000001b6bc         db         0x0b, 3 dup (0x00)                          ; length 0xb (end at 0x1093b)
000000000001b6c0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b6c1         align      8
000000000001b6c8         dd         0x00000034                                  ; Length of the record
000000000001b6cc         dd         0x00001dac                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b6d0         db         0x70, 0x52, 2 dup (0xff)                    ; begin 0x10940
000000000001b6d4         db         0x3f, 3 dup (0x00)                          ; length 0x3f (end at 0x1097f)
000000000001b6d8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b6d9         db  0x42 ; 'B'
000000000001b6da         db  0x0e ; '.'
000000000001b6db         db  0x10 ; '.'
000000000001b6dc         db  0x8d ; '.'
000000000001b6dd         db  0x02 ; '.'
000000000001b6de         db  0x42 ; 'B'
000000000001b6df         db  0x0e ; '.'
000000000001b6e0         db  0x18 ; '.'
000000000001b6e1         db  0x8c ; '.'
000000000001b6e2         db  0x03 ; '.'
000000000001b6e3         db  0x41 ; 'A'
000000000001b6e4         db  0x0e ; '.'
000000000001b6e5         db  0x20 ; ' '
000000000001b6e6         db  0x86 ; '.'
000000000001b6e7         db  0x04 ; '.'
000000000001b6e8         db  0x41 ; 'A'
000000000001b6e9         db  0x0e ; '.'
000000000001b6ea         db  0x28 ; '('
000000000001b6eb         db  0x83 ; '.'
000000000001b6ec         db  0x05 ; '.'
000000000001b6ed         db  0x46 ; 'F'
000000000001b6ee         db  0x0e ; '.'
000000000001b6ef         db  0x30 ; '0'
000000000001b6f0         db  0x6a ; 'j'
000000000001b6f1         db  0x0e ; '.'
000000000001b6f2         db  0x28 ; '('
000000000001b6f3         db  0x43 ; 'C'
000000000001b6f4         db  0x0e ; '.'
000000000001b6f5         db  0x20 ; ' '
000000000001b6f6         db  0x41 ; 'A'
000000000001b6f7         db  0x0e ; '.'
000000000001b6f8         db  0x18 ; '.'
000000000001b6f9         db  0x42 ; 'B'
000000000001b6fa         db  0x0e ; '.'
000000000001b6fb         db  0x10 ; '.'
000000000001b6fc         db  0x42 ; 'B'
000000000001b6fd         db  0x0e ; '.'
000000000001b6fe         db  0x08 ; '.'
000000000001b6ff         db  0x00 ; '.'
000000000001b700         dd         0x00000010                                  ; Length of the record
000000000001b704         dd         0x00001de4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b708         db         0x78, 0x52, 2 dup (0xff)                    ; begin 0x10980
000000000001b70c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x1098c)
000000000001b710         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b711         align      4
000000000001b714         dd         0x00000010                                  ; Length of the record
000000000001b718         dd         0x00001df8                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b71c         db         0x74, 0x52, 2 dup (0xff)                    ; begin 0x10990
000000000001b720         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x1099a)
000000000001b724         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b725         align      8
000000000001b728         dd         0x0000004c                                  ; Length of the record
000000000001b72c         dd         0x00001e0c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b730         db         0x70, 0x52, 2 dup (0xff)                    ; begin 0x109a0
000000000001b734         db         0x7e, 0x07, 2 dup (0x00)                    ; length 0x77e (end at 0x1111e)
000000000001b738         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b739         db  0x42 ; 'B'
000000000001b73a         db  0x0e ; '.'
000000000001b73b         db  0x10 ; '.'
000000000001b73c         db  0x8f ; '.'
000000000001b73d         db  0x02 ; '.'
000000000001b73e         db  0x42 ; 'B'
000000000001b73f         db  0x0e ; '.'
000000000001b740         db  0x18 ; '.'
000000000001b741         db  0x8e ; '.'
000000000001b742         db  0x03 ; '.'
000000000001b743         db  0x42 ; 'B'
000000000001b744         db  0x0e ; '.'
000000000001b745         db  0x20 ; ' '
000000000001b746         db  0x8d ; '.'
000000000001b747         db  0x04 ; '.'
000000000001b748         db  0x42 ; 'B'
000000000001b749         db  0x0e ; '.'
000000000001b74a         db  0x28 ; '('
000000000001b74b         db  0x8c ; '.'
000000000001b74c         db  0x05 ; '.'
000000000001b74d         db  0x41 ; 'A'
000000000001b74e         db  0x0e ; '.'
000000000001b74f         db  0x30 ; '0'
000000000001b750         db  0x86 ; '.'
000000000001b751         db  0x06 ; '.'
000000000001b752         db  0x41 ; 'A'
000000000001b753         db  0x0e ; '.'
000000000001b754         db  0x38 ; '8'
000000000001b755         db  0x83 ; '.'
000000000001b756         db  0x07 ; '.'
000000000001b757         db  0x4d ; 'M'
000000000001b758         db  0x0e ; '.'
000000000001b759         db  0xe0 ; '.'
000000000001b75a         db  0x02 ; '.'
000000000001b75b         db  0x03 ; '.'
000000000001b75c         db  0x48 ; 'H'
000000000001b75d         db  0x01 ; '.'
000000000001b75e         db  0x0a ; '.'
000000000001b75f         db  0x0e ; '.'
000000000001b760         db  0x38 ; '8'
000000000001b761         db  0x41 ; 'A'
000000000001b762         db  0x0e ; '.'
000000000001b763         db  0x30 ; '0'
000000000001b764         db  0x41 ; 'A'
000000000001b765         db  0x0e ; '.'
000000000001b766         db  0x28 ; '('
000000000001b767         db  0x42 ; 'B'
000000000001b768         db  0x0e ; '.'
000000000001b769         db  0x20 ; ' '
000000000001b76a         db  0x42 ; 'B'
000000000001b76b         db  0x0e ; '.'
000000000001b76c         db  0x18 ; '.'
000000000001b76d         db  0x42 ; 'B'
000000000001b76e         db  0x0e ; '.'
000000000001b76f         db  0x10 ; '.'
000000000001b770         db  0x42 ; 'B'
000000000001b771         db  0x0e ; '.'
000000000001b772         db  0x08 ; '.'
000000000001b773         db  0x47 ; 'G'
000000000001b774         db  0x0b ; '.'
000000000001b775         db  0x00 ; '.'
000000000001b776         db  0x00 ; '.'
000000000001b777         db  0x00 ; '.'
000000000001b778         dd         0x00000014                                  ; Length of the record
000000000001b77c         dd         0x00001e5c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b780         db         0xa0, 0x59, 2 dup (0xff)                    ; begin 0x11120
000000000001b784         db         0x16, 3 dup (0x00)                          ; length 0x16 (end at 0x11136)
000000000001b788         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b789         align      16
000000000001b790         dd         0x00000040                                  ; Length of the record
000000000001b794         dd         0x00001e74                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b798         db         0xa8, 0x59, 2 dup (0xff)                    ; begin 0x11140
000000000001b79c         db         0xd6, 3 dup (0x00)                          ; length 0xd6 (end at 0x11216)
000000000001b7a0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b7a1         db  0x41 ; 'A'
000000000001b7a2         db  0x0e ; '.'
000000000001b7a3         db  0x10 ; '.'
000000000001b7a4         db  0x86 ; '.'
000000000001b7a5         db  0x02 ; '.'
000000000001b7a6         db  0x41 ; 'A'
000000000001b7a7         db  0x0e ; '.'
000000000001b7a8         db  0x18 ; '.'
000000000001b7a9         db  0x83 ; '.'
000000000001b7aa         db  0x03 ; '.'
000000000001b7ab         db  0x47 ; 'G'
000000000001b7ac         db  0x0e ; '.'
000000000001b7ad         db  0x30 ; '0'
000000000001b7ae         db  0x73 ; 's'
000000000001b7af         db  0x0a ; '.'
000000000001b7b0         db  0x0e ; '.'
000000000001b7b1         db  0x18 ; '.'
000000000001b7b2         db  0x41 ; 'A'
000000000001b7b3         db  0x0e ; '.'
000000000001b7b4         db  0x10 ; '.'
000000000001b7b5         db  0x41 ; 'A'
000000000001b7b6         db  0x0e ; '.'
000000000001b7b7         db  0x08 ; '.'
000000000001b7b8         db  0x42 ; 'B'
000000000001b7b9         db  0x0b ; '.'
000000000001b7ba         db  0x72 ; 'r'
000000000001b7bb         db  0x0a ; '.'
000000000001b7bc         db  0x0e ; '.'
000000000001b7bd         db  0x18 ; '.'
000000000001b7be         db  0x43 ; 'C'
000000000001b7bf         db  0x0e ; '.'
000000000001b7c0         db  0x10 ; '.'
000000000001b7c1         db  0x41 ; 'A'
000000000001b7c2         db  0x0e ; '.'
000000000001b7c3         db  0x08 ; '.'
000000000001b7c4         db  0x4a ; 'J'
000000000001b7c5         db  0x0b ; '.'
000000000001b7c6         db  0x7e ; '~'
000000000001b7c7         db  0x0a ; '.'
000000000001b7c8         db  0x0e ; '.'
000000000001b7c9         db  0x18 ; '.'
000000000001b7ca         db  0x41 ; 'A'
000000000001b7cb         db  0x0e ; '.'
000000000001b7cc         db  0x10 ; '.'
000000000001b7cd         db  0x41 ; 'A'
000000000001b7ce         db  0x0e ; '.'
000000000001b7cf         db  0x08 ; '.'
000000000001b7d0         db  0x48 ; 'H'
000000000001b7d1         db  0x0b ; '.'
000000000001b7d2         db  0x00 ; '.'
000000000001b7d3         db  0x00 ; '.'
000000000001b7d4         dd         0x00000014                                  ; Length of the record
000000000001b7d8         dd         0x00001eb8                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b7dc         db         0x44, 0x5a, 2 dup (0xff)                    ; begin 0x11220
000000000001b7e0         db         0xa9, 3 dup (0x00)                          ; length 0xa9 (end at 0x112c9)
000000000001b7e4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b7e5         db  0x02 ; '.'
000000000001b7e6         db  0x94 ; '.'
000000000001b7e7         db  0x0e ; '.'
000000000001b7e8         db  0x10 ; '.'
000000000001b7e9         db  0x54 ; 'T'
000000000001b7ea         db  0x0e ; '.'
000000000001b7eb         db  0x08 ; '.'
000000000001b7ec         dd         0x00000010                                  ; Length of the record
000000000001b7f0         dd         0x00001ed0                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b7f4         db         0xdc, 0x5a, 2 dup (0xff)                    ; begin 0x112d0
000000000001b7f8         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x112da)
000000000001b7fc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b7fd         align      2048
000000000001b800         dd         0x00000044                                  ; Length of the record
000000000001b804         dd         0x00001ee4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b808         db         0xd8, 0x5a, 2 dup (0xff)                    ; begin 0x112e0
000000000001b80c         db         0x5e, 0x04, 2 dup (0x00)                    ; length 0x45e (end at 0x1173e)
000000000001b810         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b811         db  0x42 ; 'B'
000000000001b812         db  0x0e ; '.'
000000000001b813         db  0x10 ; '.'
000000000001b814         db  0x8e ; '.'
000000000001b815         db  0x02 ; '.'
000000000001b816         db  0x42 ; 'B'
000000000001b817         db  0x0e ; '.'
000000000001b818         db  0x18 ; '.'
000000000001b819         db  0x8d ; '.'
000000000001b81a         db  0x03 ; '.'
000000000001b81b         db  0x42 ; 'B'
000000000001b81c         db  0x0e ; '.'
000000000001b81d         db  0x20 ; ' '
000000000001b81e         db  0x8c ; '.'
000000000001b81f         db  0x04 ; '.'
000000000001b820         db  0x41 ; 'A'
000000000001b821         db  0x0e ; '.'
000000000001b822         db  0x28 ; '('
000000000001b823         db  0x86 ; '.'
000000000001b824         db  0x05 ; '.'
000000000001b825         db  0x44 ; 'D'
000000000001b826         db  0x0e ; '.'
000000000001b827         db  0x30 ; '0'
000000000001b828         db  0x83 ; '.'
000000000001b829         db  0x06 ; '.'
000000000001b82a         db  0x49 ; 'I'
000000000001b82b         db  0x0e ; '.'
000000000001b82c         db  0xc0 ; '.'
000000000001b82d         db  0x02 ; '.'
000000000001b82e         db  0x03 ; '.'
000000000001b82f         db  0x23 ; '#'
000000000001b830         db  0x03 ; '.'
000000000001b831         db  0x0a ; '.'
000000000001b832         db  0x0e ; '.'
000000000001b833         db  0x30 ; '0'
000000000001b834         db  0x41 ; 'A'
000000000001b835         db  0x0e ; '.'
000000000001b836         db  0x28 ; '('
000000000001b837         db  0x41 ; 'A'
000000000001b838         db  0x0e ; '.'
000000000001b839         db  0x20 ; ' '
000000000001b83a         db  0x42 ; 'B'
000000000001b83b         db  0x0e ; '.'
000000000001b83c         db  0x18 ; '.'
000000000001b83d         db  0x42 ; 'B'
000000000001b83e         db  0x0e ; '.'
000000000001b83f         db  0x10 ; '.'
000000000001b840         db  0x42 ; 'B'
000000000001b841         db  0x0e ; '.'
000000000001b842         db  0x08 ; '.'
000000000001b843         db  0x41 ; 'A'
000000000001b844         db  0x0b ; '.'
000000000001b845         db  0x00 ; '.'
000000000001b846         db  0x00 ; '.'
000000000001b847         db  0x00 ; '.'
000000000001b848         dd         0x00000010                                  ; Length of the record
000000000001b84c         dd         0x00001f2c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b850         db         0xf0, 0x5e, 2 dup (0xff)                    ; begin 0x11740
000000000001b854         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x11750)
000000000001b858         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b859         align      4
000000000001b85c         dd         0x00000038                                  ; Length of the record
000000000001b860         dd         0x00001f40                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b864         db         0xec, 0x5e, 2 dup (0xff)                    ; begin 0x11750
000000000001b868         db         0x5e, 0x02, 2 dup (0x00)                    ; length 0x25e (end at 0x119ae)
000000000001b86c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b86d         db  0x42 ; 'B'
000000000001b86e         db  0x0e ; '.'
000000000001b86f         db  0x10 ; '.'
000000000001b870         db  0x8c ; '.'
000000000001b871         db  0x02 ; '.'
000000000001b872         db  0x41 ; 'A'
000000000001b873         db  0x0e ; '.'
000000000001b874         db  0x18 ; '.'
000000000001b875         db  0x86 ; '.'
000000000001b876         db  0x03 ; '.'
000000000001b877         db  0x44 ; 'D'
000000000001b878         db  0x0e ; '.'
000000000001b879         db  0x20 ; ' '
000000000001b87a         db  0x83 ; '.'
000000000001b87b         db  0x04 ; '.'
000000000001b87c         db  0x47 ; 'G'
000000000001b87d         db  0x0e ; '.'
000000000001b87e         db  0xf0 ; '.'
000000000001b87f         db  0x01 ; '.'
000000000001b880         db  0x03 ; '.'
000000000001b881         db  0x0a ; '.'
000000000001b882         db  0x01 ; '.'
000000000001b883         db  0x0a ; '.'
000000000001b884         db  0x0e ; '.'
000000000001b885         db  0x20 ; ' '
000000000001b886         db  0x41 ; 'A'
000000000001b887         db  0x0e ; '.'
000000000001b888         db  0x18 ; '.'
000000000001b889         db  0x41 ; 'A'
000000000001b88a         db  0x0e ; '.'
000000000001b88b         db  0x10 ; '.'
000000000001b88c         db  0x42 ; 'B'
000000000001b88d         db  0x0e ; '.'
000000000001b88e         db  0x08 ; '.'
000000000001b88f         db  0x44 ; 'D'
000000000001b890         db  0x0b ; '.'
000000000001b891         db  0x00 ; '.'
000000000001b892         db  0x00 ; '.'
000000000001b893         db  0x00 ; '.'
000000000001b894         db  0x00 ; '.'
000000000001b895         db  0x00 ; '.'
000000000001b896         db  0x00 ; '.'
000000000001b897         db  0x00 ; '.'
000000000001b898         dd         0x00000110                                  ; Length of the record
000000000001b89c         dd         0x00001f7c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b8a0         db         0x10, 0x61, 2 dup (0xff)                    ; begin 0x119b0
000000000001b8a4         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x11dc7)
000000000001b8a8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b8a9         db  0x42 ; 'B'
000000000001b8aa         db  0x0e ; '.'
000000000001b8ab         db  0x10 ; '.'
000000000001b8ac         db  0x8f ; '.'
000000000001b8ad         db  0x02 ; '.'
000000000001b8ae         db  0x42 ; 'B'
000000000001b8af         db  0x0e ; '.'
000000000001b8b0         db  0x18 ; '.'
000000000001b8b1         db  0x8e ; '.'
000000000001b8b2         db  0x03 ; '.'
000000000001b8b3         db  0x42 ; 'B'
000000000001b8b4         db  0x0e ; '.'
000000000001b8b5         db  0x20 ; ' '
000000000001b8b6         db  0x8d ; '.'
000000000001b8b7         db  0x04 ; '.'
000000000001b8b8         db  0x42 ; 'B'
000000000001b8b9         db  0x0e ; '.'
000000000001b8ba         db  0x28 ; '('
000000000001b8bb         db  0x8c ; '.'
000000000001b8bc         db  0x05 ; '.'
000000000001b8bd         db  0x44 ; 'D'
000000000001b8be         db  0x0e ; '.'
000000000001b8bf         db  0x30 ; '0'
000000000001b8c0         db  0x86 ; '.'
000000000001b8c1         db  0x06 ; '.'
000000000001b8c2         db  0x41 ; 'A'
000000000001b8c3         db  0x0e ; '.'
000000000001b8c4         db  0x38 ; '8'
000000000001b8c5         db  0x83 ; '.'
000000000001b8c6         db  0x07 ; '.'
000000000001b8c7         db  0x4a ; 'J'
000000000001b8c8         db  0x0e ; '.'
000000000001b8c9         db  0x60 ; '`'
000000000001b8ca         db  0x02 ; '.'
000000000001b8cb         db  0xdd ; '.'
000000000001b8cc         db  0x0e ; '.'
000000000001b8cd         db  0x68 ; 'h'
000000000001b8ce         db  0x57 ; 'W'
000000000001b8cf         db  0x0e ; '.'
000000000001b8d0         db  0x70 ; 'p'
000000000001b8d1         db  0x42 ; 'B'
000000000001b8d2         db  0x0e ; '.'
000000000001b8d3         db  0x78 ; 'x'
000000000001b8d4         db  0x42 ; 'B'
000000000001b8d5         db  0x0e ; '.'
000000000001b8d6         db  0x80 ; '.'
000000000001b8d7         db  0x01 ; '.'
000000000001b8d8         db  0x42 ; 'B'
000000000001b8d9         db  0x0e ; '.'
000000000001b8da         db  0x88 ; '.'
000000000001b8db         db  0x01 ; '.'
000000000001b8dc         db  0x42 ; 'B'
000000000001b8dd         db  0x0e ; '.'
000000000001b8de         db  0x90 ; '.'
000000000001b8df         db  0x01 ; '.'
000000000001b8e0         db  0x53 ; 'S'
000000000001b8e1         db  0x0e ; '.'
000000000001b8e2         db  0x60 ; '`'
000000000001b8e3         db  0x44 ; 'D'
000000000001b8e4         db  0x0a ; '.'
000000000001b8e5         db  0x0e ; '.'
000000000001b8e6         db  0x38 ; '8'
000000000001b8e7         db  0x41 ; 'A'
000000000001b8e8         db  0x0e ; '.'
000000000001b8e9         db  0x30 ; '0'
000000000001b8ea         db  0x41 ; 'A'
000000000001b8eb         db  0x0e ; '.'
000000000001b8ec         db  0x28 ; '('
000000000001b8ed         db  0x42 ; 'B'
000000000001b8ee         db  0x0e ; '.'
000000000001b8ef         db  0x20 ; ' '
000000000001b8f0         db  0x42 ; 'B'
000000000001b8f1         db  0x0e ; '.'
000000000001b8f2         db  0x18 ; '.'
000000000001b8f3         db  0x42 ; 'B'
000000000001b8f4         db  0x0e ; '.'
000000000001b8f5         db  0x10 ; '.'
000000000001b8f6         db  0x42 ; 'B'
000000000001b8f7         db  0x0e ; '.'
000000000001b8f8         db  0x08 ; '.'
000000000001b8f9         db  0x44 ; 'D'
000000000001b8fa         db  0x0b ; '.'
000000000001b8fb         db  0x02 ; '.'
000000000001b8fc         db  0x78 ; 'x'
000000000001b8fd         db  0x0a ; '.'
000000000001b8fe         db  0x0e ; '.'
000000000001b8ff         db  0x68 ; 'h'
000000000001b900         db  0x48 ; 'H'
000000000001b901         db  0x0b ; '.'
000000000001b902         db  0x5a ; 'Z'
000000000001b903         db  0x0a ; '.'
000000000001b904         db  0x0e ; '.'
000000000001b905         db  0x38 ; '8'
000000000001b906         db  0x47 ; 'G'
000000000001b907         db  0x0e ; '.'
000000000001b908         db  0x30 ; '0'
000000000001b909         db  0x41 ; 'A'
000000000001b90a         db  0x0e ; '.'
000000000001b90b         db  0x28 ; '('
000000000001b90c         db  0x42 ; 'B'
000000000001b90d         db  0x0e ; '.'
000000000001b90e         db  0x20 ; ' '
000000000001b90f         db  0x42 ; 'B'
000000000001b910         db  0x0e ; '.'
000000000001b911         db  0x18 ; '.'
000000000001b912         db  0x42 ; 'B'
000000000001b913         db  0x0e ; '.'
000000000001b914         db  0x10 ; '.'
000000000001b915         db  0x42 ; 'B'
000000000001b916         db  0x0e ; '.'
000000000001b917         db  0x08 ; '.'
000000000001b918         db  0x56 ; 'V'
000000000001b919         db  0x0b ; '.'
000000000001b91a         db  0x5e ; '^'
000000000001b91b         db  0x0a ; '.'
000000000001b91c         db  0x0e ; '.'
000000000001b91d         db  0x38 ; '8'
000000000001b91e         db  0x52 ; 'R'
000000000001b91f         db  0x0e ; '.'
000000000001b920         db  0x30 ; '0'
000000000001b921         db  0x41 ; 'A'
000000000001b922         db  0x0e ; '.'
000000000001b923         db  0x28 ; '('
000000000001b924         db  0x42 ; 'B'
000000000001b925         db  0x0e ; '.'
000000000001b926         db  0x20 ; ' '
000000000001b927         db  0x42 ; 'B'
000000000001b928         db  0x0e ; '.'
000000000001b929         db  0x18 ; '.'
000000000001b92a         db  0x42 ; 'B'
000000000001b92b         db  0x0e ; '.'
000000000001b92c         db  0x10 ; '.'
000000000001b92d         db  0x42 ; 'B'
000000000001b92e         db  0x0e ; '.'
000000000001b92f         db  0x08 ; '.'
000000000001b930         db  0x4f ; 'O'
000000000001b931         db  0x0b ; '.'
000000000001b932         db  0x62 ; 'b'
000000000001b933         db  0x0a ; '.'
000000000001b934         db  0x0e ; '.'
000000000001b935         db  0x38 ; '8'
000000000001b936         db  0x50 ; 'P'
000000000001b937         db  0x0e ; '.'
000000000001b938         db  0x30 ; '0'
000000000001b939         db  0x41 ; 'A'
000000000001b93a         db  0x0e ; '.'
000000000001b93b         db  0x28 ; '('
000000000001b93c         db  0x42 ; 'B'
000000000001b93d         db  0x0e ; '.'
000000000001b93e         db  0x20 ; ' '
000000000001b93f         db  0x42 ; 'B'
000000000001b940         db  0x0e ; '.'
000000000001b941         db  0x18 ; '.'
000000000001b942         db  0x42 ; 'B'
000000000001b943         db  0x0e ; '.'
000000000001b944         db  0x10 ; '.'
000000000001b945         db  0x42 ; 'B'
000000000001b946         db  0x0e ; '.'
000000000001b947         db  0x08 ; '.'
000000000001b948         db  0x55 ; 'U'
000000000001b949         db  0x0b ; '.'
000000000001b94a         db  0x66 ; 'f'
000000000001b94b         db  0x0e ; '.'
000000000001b94c         db  0x68 ; 'h'
000000000001b94d         db  0x42 ; 'B'
000000000001b94e         db  0x0e ; '.'
000000000001b94f         db  0x70 ; 'p'
000000000001b950         db  0x5c ; '\'
000000000001b951         db  0x0e ; '.'
000000000001b952         db  0x68 ; 'h'
000000000001b953         db  0x41 ; 'A'
000000000001b954         db  0x0e ; '.'
000000000001b955         db  0x60 ; '`'
000000000001b956         db  0x44 ; 'D'
000000000001b957         db  0x0a ; '.'
000000000001b958         db  0x0e ; '.'
000000000001b959         db  0x38 ; '8'
000000000001b95a         db  0x41 ; 'A'
000000000001b95b         db  0x0e ; '.'
000000000001b95c         db  0x30 ; '0'
000000000001b95d         db  0x41 ; 'A'
000000000001b95e         db  0x0e ; '.'
000000000001b95f         db  0x28 ; '('
000000000001b960         db  0x42 ; 'B'
000000000001b961         db  0x0e ; '.'
000000000001b962         db  0x20 ; ' '
000000000001b963         db  0x42 ; 'B'
000000000001b964         db  0x0e ; '.'
000000000001b965         db  0x18 ; '.'
000000000001b966         db  0x42 ; 'B'
000000000001b967         db  0x0e ; '.'
000000000001b968         db  0x10 ; '.'
000000000001b969         db  0x42 ; 'B'
000000000001b96a         db  0x0e ; '.'
000000000001b96b         db  0x08 ; '.'
000000000001b96c         db  0x45 ; 'E'
000000000001b96d         db  0x0b ; '.'
000000000001b96e         db  0x68 ; 'h'
000000000001b96f         db  0x0a ; '.'
000000000001b970         db  0x0e ; '.'
000000000001b971         db  0x68 ; 'h'
000000000001b972         db  0x48 ; 'H'
000000000001b973         db  0x0b ; '.'
000000000001b974         db  0x72 ; 'r'
000000000001b975         db  0x0e ; '.'
000000000001b976         db  0x68 ; 'h'
000000000001b977         db  0x45 ; 'E'
000000000001b978         db  0x0e ; '.'
000000000001b979         db  0x70 ; 'p'
000000000001b97a         db  0x42 ; 'B'
000000000001b97b         db  0x0e ; '.'
000000000001b97c         db  0x78 ; 'x'
000000000001b97d         db  0x42 ; 'B'
000000000001b97e         db  0x0e ; '.'
000000000001b97f         db  0x80 ; '.'
000000000001b980         db  0x01 ; '.'
000000000001b981         db  0x5e ; '^'
000000000001b982         db  0x0e ; '.'
000000000001b983         db  0x60 ; '`'
000000000001b984         db  0x44 ; 'D'
000000000001b985         db  0x0a ; '.'
000000000001b986         db  0x0e ; '.'
000000000001b987         db  0x38 ; '8'
000000000001b988         db  0x41 ; 'A'
000000000001b989         db  0x0e ; '.'
000000000001b98a         db  0x30 ; '0'
000000000001b98b         db  0x41 ; 'A'
000000000001b98c         db  0x0e ; '.'
000000000001b98d         db  0x28 ; '('
000000000001b98e         db  0x42 ; 'B'
000000000001b98f         db  0x0e ; '.'
000000000001b990         db  0x20 ; ' '
000000000001b991         db  0x42 ; 'B'
000000000001b992         db  0x0e ; '.'
000000000001b993         db  0x18 ; '.'
000000000001b994         db  0x42 ; 'B'
000000000001b995         db  0x0e ; '.'
000000000001b996         db  0x10 ; '.'
000000000001b997         db  0x42 ; 'B'
000000000001b998         db  0x0e ; '.'
000000000001b999         db  0x08 ; '.'
000000000001b99a         db  0x41 ; 'A'
000000000001b99b         db  0x0b ; '.'
000000000001b99c         db  0x79 ; 'y'
000000000001b99d         db  0x0a ; '.'
000000000001b99e         db  0x0e ; '.'
000000000001b99f         db  0x68 ; 'h'
000000000001b9a0         db  0x42 ; 'B'
000000000001b9a1         db  0x0e ; '.'
000000000001b9a2         db  0x70 ; 'p'
000000000001b9a3         db  0x42 ; 'B'
000000000001b9a4         db  0x0e ; '.'
000000000001b9a5         db  0x78 ; 'x'
000000000001b9a6         db  0x42 ; 'B'
000000000001b9a7         db  0x0e ; '.'
000000000001b9a8         db  0x80 ; '.'
000000000001b9a9         db  0x01 ; '.'
000000000001b9aa         db  0x51 ; 'Q'
000000000001b9ab         db  0x0b ; '.'
000000000001b9ac         dd         0x00000010                                  ; Length of the record
000000000001b9b0         dd         0x00002090                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b9b4         db         0x1c, 0x64, 2 dup (0xff)                    ; begin 0x11dd0
000000000001b9b8         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x11df0)
000000000001b9bc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b9bd         align      64
000000000001b9c0         dd         0x00000018                                  ; Length of the record
000000000001b9c4         dd         0x000020a4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b9c8         db         0x28, 0x64, 2 dup (0xff)                    ; begin 0x11df0
000000000001b9cc         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x11e68)
000000000001b9d0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b9d1         db  0x44 ; 'D'
000000000001b9d2         db  0x0e ; '.'
000000000001b9d3         db  0x70 ; 'p'
000000000001b9d4         db  0x02 ; '.'
000000000001b9d5         db  0x60 ; '`'
000000000001b9d6         db  0x0a ; '.'
000000000001b9d7         db  0x0e ; '.'
000000000001b9d8         db  0x08 ; '.'
000000000001b9d9         db  0x41 ; 'A'
000000000001b9da         db  0x0b ; '.'
000000000001b9db         db  0x00 ; '.'
000000000001b9dc         dd         0x00000028                                  ; Length of the record
000000000001b9e0         dd         0x000020c0                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001b9e4         db         0x8c, 0x64, 2 dup (0xff)                    ; begin 0x11e70
000000000001b9e8         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x11f45)
000000000001b9ec         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b9ed         db  0x41 ; 'A'
000000000001b9ee         db  0x0e ; '.'
000000000001b9ef         db  0x10 ; '.'
000000000001b9f0         db  0x86 ; '.'
000000000001b9f1         db  0x02 ; '.'
000000000001b9f2         db  0x41 ; 'A'
000000000001b9f3         db  0x0e ; '.'
000000000001b9f4         db  0x18 ; '.'
000000000001b9f5         db  0x83 ; '.'
000000000001b9f6         db  0x03 ; '.'
000000000001b9f7         db  0x50 ; 'P'
000000000001b9f8         db  0x0e ; '.'
000000000001b9f9         db  0xd0 ; '.'
000000000001b9fa         db  0x01 ; '.'
000000000001b9fb         db  0x02 ; '.'
000000000001b9fc         db  0xab ; '.'
000000000001b9fd         db  0x0a ; '.'
000000000001b9fe         db  0x0e ; '.'
000000000001b9ff         db  0x18 ; '.'
000000000001ba00         db  0x41 ; 'A'
000000000001ba01         db  0x0e ; '.'
000000000001ba02         db  0x10 ; '.'
000000000001ba03         db  0x41 ; 'A'
000000000001ba04         db  0x0e ; '.'
000000000001ba05         db  0x08 ; '.'
000000000001ba06         db  0x41 ; 'A'
000000000001ba07         db  0x0b ; '.'
000000000001ba08         dd         0x0000001c                                  ; Length of the record
000000000001ba0c         dd         0x000020ec                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001ba10         db         0x40, 0x65, 2 dup (0xff)                    ; begin 0x11f50
000000000001ba14         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x11fd0)
000000000001ba18         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ba19         db  0x41 ; 'A'
000000000001ba1a         db  0x0e ; '.'
000000000001ba1b         db  0x10 ; '.'
000000000001ba1c         db  0x83 ; '.'
000000000001ba1d         db  0x02 ; '.'
000000000001ba1e         db  0x02 ; '.'
000000000001ba1f         db  0x7a ; 'z'
000000000001ba20         db  0x0e ; '.'
000000000001ba21         db  0x08 ; '.'
000000000001ba22         db  0x00 ; '.'
000000000001ba23         db  0x00 ; '.'
000000000001ba24         db  0x00 ; '.'
000000000001ba25         db  0x00 ; '.'
000000000001ba26         db  0x00 ; '.'
000000000001ba27         db  0x00 ; '.'
000000000001ba28         dd         0x00000014                                  ; Length of the record
000000000001ba2c         dd         0x0000210c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001ba30         db         0xa0, 0x65, 2 dup (0xff)                    ; begin 0x11fd0
000000000001ba34         db         0x38, 3 dup (0x00)                          ; length 0x38 (end at 0x12008)
000000000001ba38         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ba39         db  0x5c ; '\'
000000000001ba3a         db  0x0e ; '.'
000000000001ba3b         db  0x10 ; '.'
000000000001ba3c         db  0x5b ; '['
000000000001ba3d         db  0x0e ; '.'
000000000001ba3e         db  0x08 ; '.'
000000000001ba3f         db  0x00 ; '.'
000000000001ba40         dd         0x00000018                                  ; Length of the record
000000000001ba44         dd         0x00002124                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001ba48         db         0xc8, 0x65, 2 dup (0xff)                    ; begin 0x12010
000000000001ba4c         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x1202a)
000000000001ba50         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ba51         db  0x41 ; 'A'
000000000001ba52         db  0x0e ; '.'
000000000001ba53         db  0x10 ; '.'
000000000001ba54         db  0x83 ; '.'
000000000001ba55         db  0x02 ; '.'
000000000001ba56         db  0x53 ; 'S'
000000000001ba57         db  0x0a ; '.'
000000000001ba58         db  0x0e ; '.'
000000000001ba59         db  0x08 ; '.'
000000000001ba5a         db  0x41 ; 'A'
000000000001ba5b         db  0x0b ; '.'
000000000001ba5c         dd         0x00000010                                  ; Length of the record
000000000001ba60         dd         0x00002140                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001ba64         db         0xcc, 0x65, 2 dup (0xff)                    ; begin 0x12030
000000000001ba68         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x12054)
000000000001ba6c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ba6d         db  0x5f ; '_'
000000000001ba6e         db  0x0e ; '.'
000000000001ba6f         db  0x10 ; '.'
000000000001ba70         dd         0x00000010                                  ; Length of the record
000000000001ba74         dd         0x00002154                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001ba78         db         0xe8, 0x65, 2 dup (0xff)                    ; begin 0x12060
000000000001ba7c         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x12062)
000000000001ba80         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ba81         align      4
000000000001ba84         dd         0x00000020                                  ; Length of the record
000000000001ba88         dd         0x00002168                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001ba8c         db         0xe4, 0x65, 2 dup (0xff)                    ; begin 0x12070
000000000001ba90         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x120a6)
000000000001ba94         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ba95         db  0x44 ; 'D'
000000000001ba96         db  0x0e ; '.'
000000000001ba97         db  0x10 ; '.'
000000000001ba98         db  0x83 ; '.'
000000000001ba99         db  0x02 ; '.'
000000000001ba9a         db  0x5d ; ']'
000000000001ba9b         db  0x0a ; '.'
000000000001ba9c         db  0x0e ; '.'
000000000001ba9d         db  0x08 ; '.'
000000000001ba9e         db  0x47 ; 'G'
000000000001ba9f         db  0x0b ; '.'
000000000001baa0         db  0x48 ; 'H'
000000000001baa1         db  0x0a ; '.'
000000000001baa2         db  0x0e ; '.'
000000000001baa3         db  0x08 ; '.'
000000000001baa4         db  0x41 ; 'A'
000000000001baa5         db  0x0b ; '.'
000000000001baa6         db  0x00 ; '.'
000000000001baa7         db  0x00 ; '.'
000000000001baa8         dd         0x00000010                                  ; Length of the record
000000000001baac         dd         0x0000218c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bab0         db         0x00, 0x66, 2 dup (0xff)                    ; begin 0x120b0
000000000001bab4         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x120d4)
000000000001bab8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bab9         db  0x5f ; '_'
000000000001baba         db  0x0e ; '.'
000000000001babb         db  0x10 ; '.'
000000000001babc         dd         0x00000014                                  ; Length of the record
000000000001bac0         dd         0x000021a0                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bac4         db         0x1c, 0x66, 2 dup (0xff)                    ; begin 0x120e0
000000000001bac8         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x12162)
000000000001bacc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bacd         db  0x02 ; '.'
000000000001bace         db  0x5f ; '_'
000000000001bacf         db  0x0e ; '.'
000000000001bad0         db  0x10 ; '.'
000000000001bad1         db  0x49 ; 'I'
000000000001bad2         db  0x0e ; '.'
000000000001bad3         db  0x08 ; '.'
000000000001bad4         dd         0x00000014                                  ; Length of the record
000000000001bad8         dd         0x000021b8                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001badc         db         0x94, 0x66, 2 dup (0xff)                    ; begin 0x12170
000000000001bae0         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x121ba)
000000000001bae4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bae5         db  0x02 ; '.'
000000000001bae6         db  0x45 ; 'E'
000000000001bae7         db  0x0e ; '.'
000000000001bae8         db  0x10 ; '.'
000000000001bae9         db  0x00 ; '.'
000000000001baea         db  0x00 ; '.'
000000000001baeb         db  0x00 ; '.'
000000000001baec         dd         0x00000018                                  ; Length of the record
000000000001baf0         dd         0x000021d0                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001baf4         db         0xcc, 0x66, 2 dup (0xff)                    ; begin 0x121c0
000000000001baf8         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x121d7)
000000000001bafc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bafd         db  0x41 ; 'A'
000000000001bafe         db  0x0e ; '.'
000000000001baff         db  0x10 ; '.'
000000000001bb00         db  0x83 ; '.'
000000000001bb01         db  0x02 ; '.'
000000000001bb02         db  0x51 ; 'Q'
000000000001bb03         db  0x0e ; '.'
000000000001bb04         db  0x08 ; '.'
000000000001bb05         db  0x00 ; '.'
000000000001bb06         db  0x00 ; '.'
000000000001bb07         db  0x00 ; '.'
000000000001bb08         dd         0x00000018                                  ; Length of the record
000000000001bb0c         dd         0x000021ec                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bb10         db         0xd0, 0x66, 2 dup (0xff)                    ; begin 0x121e0
000000000001bb14         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x1220e)
000000000001bb18         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bb19         db  0x47 ; 'G'
000000000001bb1a         db  0x0e ; '.'
000000000001bb1b         db  0x10 ; '.'
000000000001bb1c         db  0x61 ; 'a'
000000000001bb1d         db  0x0a ; '.'
000000000001bb1e         db  0x0e ; '.'
000000000001bb1f         db  0x08 ; '.'
000000000001bb20         db  0x41 ; 'A'
000000000001bb21         db  0x0b ; '.'
000000000001bb22         db  0x00 ; '.'
000000000001bb23         db  0x00 ; '.'
000000000001bb24         dd         0x00000024                                  ; Length of the record
000000000001bb28         dd         0x00002208                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bb2c         db         0xe4, 0x66, 2 dup (0xff)                    ; begin 0x12210
000000000001bb30         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x12238)
000000000001bb34         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bb35         db  0x41 ; 'A'
000000000001bb36         db  0x0e ; '.'
000000000001bb37         db  0x10 ; '.'
000000000001bb38         db  0x86 ; '.'
000000000001bb39         db  0x02 ; '.'
000000000001bb3a         db  0x41 ; 'A'
000000000001bb3b         db  0x0e ; '.'
000000000001bb3c         db  0x18 ; '.'
000000000001bb3d         db  0x83 ; '.'
000000000001bb3e         db  0x03 ; '.'
000000000001bb3f         db  0x4d ; 'M'
000000000001bb40         db  0x0e ; '.'
000000000001bb41         db  0x20 ; ' '
000000000001bb42         db  0x49 ; 'I'
000000000001bb43         db  0x0e ; '.'
000000000001bb44         db  0x18 ; '.'
000000000001bb45         db  0x47 ; 'G'
000000000001bb46         db  0x0e ; '.'
000000000001bb47         db  0x10 ; '.'
000000000001bb48         db  0x41 ; 'A'
000000000001bb49         db  0x0e ; '.'
000000000001bb4a         db  0x08 ; '.'
000000000001bb4b         db  0x00 ; '.'
000000000001bb4c         dd         0x00000018                                  ; Length of the record
000000000001bb50         dd         0x00002230                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bb54         db         0xec, 0x66, 2 dup (0xff)                    ; begin 0x12240
000000000001bb58         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x12253)
000000000001bb5c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bb5d         db  0x41 ; 'A'
000000000001bb5e         db  0x0e ; '.'
000000000001bb5f         db  0x10 ; '.'
000000000001bb60         db  0x83 ; '.'
000000000001bb61         db  0x02 ; '.'
000000000001bb62         db  0x50 ; 'P'
000000000001bb63         db  0x0e ; '.'
000000000001bb64         db  0x08 ; '.'
000000000001bb65         db  0x00 ; '.'
000000000001bb66         db  0x00 ; '.'
000000000001bb67         db  0x00 ; '.'
000000000001bb68         dd         0x00000014                                  ; Length of the record
000000000001bb6c         dd         0x0000224c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bb70         db         0xf0, 0x66, 2 dup (0xff)                    ; begin 0x12260
000000000001bb74         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x12295)
000000000001bb78         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bb79         db  0x4b ; 'K'
000000000001bb7a         db  0x0e ; '.'
000000000001bb7b         db  0x10 ; '.'
000000000001bb7c         db  0x00 ; '.'
000000000001bb7d         db  0x00 ; '.'
000000000001bb7e         db  0x00 ; '.'
000000000001bb7f         db  0x00 ; '.'
000000000001bb80         dd         0x0000004c                                  ; Length of the record
000000000001bb84         dd         0x00002264                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bb88         db         0x18, 0x67, 2 dup (0xff)                    ; begin 0x122a0
000000000001bb8c         db         0x1c, 0x04, 2 dup (0x00)                    ; length 0x41c (end at 0x126bc)
000000000001bb90         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bb91         db  0x42 ; 'B'
000000000001bb92         db  0x0e ; '.'
000000000001bb93         db  0x10 ; '.'
000000000001bb94         db  0x8f ; '.'
000000000001bb95         db  0x02 ; '.'
000000000001bb96         db  0x42 ; 'B'
000000000001bb97         db  0x0e ; '.'
000000000001bb98         db  0x18 ; '.'
000000000001bb99         db  0x8e ; '.'
000000000001bb9a         db  0x03 ; '.'
000000000001bb9b         db  0x42 ; 'B'
000000000001bb9c         db  0x0e ; '.'
000000000001bb9d         db  0x20 ; ' '
000000000001bb9e         db  0x8d ; '.'
000000000001bb9f         db  0x04 ; '.'
000000000001bba0         db  0x42 ; 'B'
000000000001bba1         db  0x0e ; '.'
000000000001bba2         db  0x28 ; '('
000000000001bba3         db  0x8c ; '.'
000000000001bba4         db  0x05 ; '.'
000000000001bba5         db  0x41 ; 'A'
000000000001bba6         db  0x0e ; '.'
000000000001bba7         db  0x30 ; '0'
000000000001bba8         db  0x86 ; '.'
000000000001bba9         db  0x06 ; '.'
000000000001bbaa         db  0x41 ; 'A'
000000000001bbab         db  0x0e ; '.'
000000000001bbac         db  0x38 ; '8'
000000000001bbad         db  0x83 ; '.'
000000000001bbae         db  0x07 ; '.'
000000000001bbaf         db  0x44 ; 'D'
000000000001bbb0         db  0x0e ; '.'
000000000001bbb1         db  0x60 ; '`'
000000000001bbb2         db  0x02 ; '.'
000000000001bbb3         db  0xe9 ; '.'
000000000001bbb4         db  0x0a ; '.'
000000000001bbb5         db  0x0e ; '.'
000000000001bbb6         db  0x38 ; '8'
000000000001bbb7         db  0x41 ; 'A'
000000000001bbb8         db  0x0e ; '.'
000000000001bbb9         db  0x30 ; '0'
000000000001bbba         db  0x41 ; 'A'
000000000001bbbb         db  0x0e ; '.'
000000000001bbbc         db  0x28 ; '('
000000000001bbbd         db  0x42 ; 'B'
000000000001bbbe         db  0x0e ; '.'
000000000001bbbf         db  0x20 ; ' '
000000000001bbc0         db  0x42 ; 'B'
000000000001bbc1         db  0x0e ; '.'
000000000001bbc2         db  0x18 ; '.'
000000000001bbc3         db  0x42 ; 'B'
000000000001bbc4         db  0x0e ; '.'
000000000001bbc5         db  0x10 ; '.'
000000000001bbc6         db  0x42 ; 'B'
000000000001bbc7         db  0x0e ; '.'
000000000001bbc8         db  0x08 ; '.'
000000000001bbc9         db  0x47 ; 'G'
000000000001bbca         db  0x0b ; '.'
000000000001bbcb         db  0x00 ; '.'
000000000001bbcc         db  0x00 ; '.'
000000000001bbcd         db  0x00 ; '.'
000000000001bbce         db  0x00 ; '.'
000000000001bbcf         db  0x00 ; '.'
000000000001bbd0         dd         0x00000024                                  ; Length of the record
000000000001bbd4         dd         0x000022b4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bbd8         db         0xe8, 0x6a, 2 dup (0xff)                    ; begin 0x126c0
000000000001bbdc         db         0x97, 3 dup (0x00)                          ; length 0x97 (end at 0x12757)
000000000001bbe0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bbe1         db  0x41 ; 'A'
000000000001bbe2         db  0x0e ; '.'
000000000001bbe3         db  0x10 ; '.'
000000000001bbe4         db  0x83 ; '.'
000000000001bbe5         db  0x02 ; '.'
000000000001bbe6         db  0x4b ; 'K'
000000000001bbe7         db  0x0e ; '.'
000000000001bbe8         db  0x30 ; '0'
000000000001bbe9         db  0x02 ; '.'
000000000001bbea         db  0x76 ; 'v'
000000000001bbeb         db  0x0a ; '.'
000000000001bbec         db  0x0e ; '.'
000000000001bbed         db  0x10 ; '.'
000000000001bbee         db  0x41 ; 'A'
000000000001bbef         db  0x0e ; '.'
000000000001bbf0         db  0x08 ; '.'
000000000001bbf1         db  0x45 ; 'E'
000000000001bbf2         db  0x0b ; '.'
000000000001bbf3         db  0x00 ; '.'
000000000001bbf4         db  0x00 ; '.'
000000000001bbf5         db  0x00 ; '.'
000000000001bbf6         db  0x00 ; '.'
000000000001bbf7         db  0x00 ; '.'
000000000001bbf8         dd         0x0000001c                                  ; Length of the record
000000000001bbfc         dd         0x000022dc                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bc00         db         0x60, 0x6b, 2 dup (0xff)                    ; begin 0x12760
000000000001bc04         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x127a0)
000000000001bc08         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bc09         db  0x44 ; 'D'
000000000001bc0a         db  0x0e ; '.'
000000000001bc0b         db  0x10 ; '.'
000000000001bc0c         db  0x83 ; '.'
000000000001bc0d         db  0x02 ; '.'
000000000001bc0e         db  0x5a ; 'Z'
000000000001bc0f         db  0x0a ; '.'
000000000001bc10         db  0x0e ; '.'
000000000001bc11         db  0x08 ; '.'
000000000001bc12         db  0x4a ; 'J'
000000000001bc13         db  0x0b ; '.'
000000000001bc14         db  0x53 ; 'S'
000000000001bc15         db  0x0e ; '.'
000000000001bc16         db  0x08 ; '.'
000000000001bc17         db  0x00 ; '.'
000000000001bc18         dd         0x00000014                                  ; Length of the record
000000000001bc1c         dd         0x000022fc                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bc20         db         0x80, 0x6b, 2 dup (0xff)                    ; begin 0x127a0
000000000001bc24         db         0x29, 3 dup (0x00)                          ; length 0x29 (end at 0x127c9)
000000000001bc28         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bc29         align      16
000000000001bc30         dd         0x0000002c                                  ; Length of the record
000000000001bc34         dd         0x00002314                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bc38         db         0x98, 0x6b, 2 dup (0xff)                    ; begin 0x127d0
000000000001bc3c         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x12827)
000000000001bc40         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bc41         db  0x63 ; 'c'
000000000001bc42         db  0x0e ; '.'
000000000001bc43         db  0x10 ; '.'
000000000001bc44         db  0x8c ; '.'
000000000001bc45         db  0x02 ; '.'
000000000001bc46         db  0x41 ; 'A'
000000000001bc47         db  0x0e ; '.'
000000000001bc48         db  0x18 ; '.'
000000000001bc49         db  0x86 ; '.'
000000000001bc4a         db  0x03 ; '.'
000000000001bc4b         db  0x44 ; 'D'
000000000001bc4c         db  0x0e ; '.'
000000000001bc4d         db  0x20 ; ' '
000000000001bc4e         db  0x83 ; '.'
000000000001bc4f         db  0x04 ; '.'
000000000001bc50         db  0x6b ; 'k'
000000000001bc51         db  0x0e ; '.'
000000000001bc52         db  0x18 ; '.'
000000000001bc53         db  0x41 ; 'A'
000000000001bc54         db  0x0e ; '.'
000000000001bc55         db  0x10 ; '.'
000000000001bc56         db  0x42 ; 'B'
000000000001bc57         db  0x0e ; '.'
000000000001bc58         db  0x08 ; '.'
000000000001bc59         db  0x00 ; '.'
000000000001bc5a         db  0x00 ; '.'
000000000001bc5b         db  0x00 ; '.'
000000000001bc5c         db  0x00 ; '.'
000000000001bc5d         db  0x00 ; '.'
000000000001bc5e         db  0x00 ; '.'
000000000001bc5f         db  0x00 ; '.'
000000000001bc60         dd         0x0000003c                                  ; Length of the record
000000000001bc64         dd         0x00002344                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bc68         db         0xc8, 0x6b, 2 dup (0xff)                    ; begin 0x12830
000000000001bc6c         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x128b3)
000000000001bc70         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bc71         db  0x42 ; 'B'
000000000001bc72         db  0x0e ; '.'
000000000001bc73         db  0x10 ; '.'
000000000001bc74         db  0x8d ; '.'
000000000001bc75         db  0x02 ; '.'
000000000001bc76         db  0x42 ; 'B'
000000000001bc77         db  0x0e ; '.'
000000000001bc78         db  0x18 ; '.'
000000000001bc79         db  0x8c ; '.'
000000000001bc7a         db  0x03 ; '.'
000000000001bc7b         db  0x44 ; 'D'
000000000001bc7c         db  0x0e ; '.'
000000000001bc7d         db  0x20 ; ' '
000000000001bc7e         db  0x86 ; '.'
000000000001bc7f         db  0x04 ; '.'
000000000001bc80         db  0x41 ; 'A'
000000000001bc81         db  0x0e ; '.'
000000000001bc82         db  0x28 ; '('
000000000001bc83         db  0x83 ; '.'
000000000001bc84         db  0x05 ; '.'
000000000001bc85         db  0x4a ; 'J'
000000000001bc86         db  0x0e ; '.'
000000000001bc87         db  0x40 ; '@'
000000000001bc88         db  0x02 ; '.'
000000000001bc89         db  0x64 ; 'd'
000000000001bc8a         db  0x0a ; '.'
000000000001bc8b         db  0x0e ; '.'
000000000001bc8c         db  0x28 ; '('
000000000001bc8d         db  0x41 ; 'A'
000000000001bc8e         db  0x0e ; '.'
000000000001bc8f         db  0x20 ; ' '
000000000001bc90         db  0x41 ; 'A'
000000000001bc91         db  0x0e ; '.'
000000000001bc92         db  0x18 ; '.'
000000000001bc93         db  0x42 ; 'B'
000000000001bc94         db  0x0e ; '.'
000000000001bc95         db  0x10 ; '.'
000000000001bc96         db  0x42 ; 'B'
000000000001bc97         db  0x0e ; '.'
000000000001bc98         db  0x08 ; '.'
000000000001bc99         db  0x41 ; 'A'
000000000001bc9a         db  0x0b ; '.'
000000000001bc9b         db  0x00 ; '.'
000000000001bc9c         db  0x00 ; '.'
000000000001bc9d         db  0x00 ; '.'
000000000001bc9e         db  0x00 ; '.'
000000000001bc9f         db  0x00 ; '.'
000000000001bca0         dd         0x0000003c                                  ; Length of the record
000000000001bca4         dd         0x00002384                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bca8         db         0x18, 0x6c, 2 dup (0xff)                    ; begin 0x128c0
000000000001bcac         db         0xf2, 3 dup (0x00)                          ; length 0xf2 (end at 0x129b2)
000000000001bcb0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bcb1         db  0x42 ; 'B'
000000000001bcb2         db  0x0e ; '.'
000000000001bcb3         db  0x10 ; '.'
000000000001bcb4         db  0x8d ; '.'
000000000001bcb5         db  0x02 ; '.'
000000000001bcb6         db  0x42 ; 'B'
000000000001bcb7         db  0x0e ; '.'
000000000001bcb8         db  0x18 ; '.'
000000000001bcb9         db  0x8c ; '.'
000000000001bcba         db  0x03 ; '.'
000000000001bcbb         db  0x44 ; 'D'
000000000001bcbc         db  0x0e ; '.'
000000000001bcbd         db  0x20 ; ' '
000000000001bcbe         db  0x86 ; '.'
000000000001bcbf         db  0x04 ; '.'
000000000001bcc0         db  0x41 ; 'A'
000000000001bcc1         db  0x0e ; '.'
000000000001bcc2         db  0x28 ; '('
000000000001bcc3         db  0x83 ; '.'
000000000001bcc4         db  0x05 ; '.'
000000000001bcc5         db  0x4a ; 'J'
000000000001bcc6         db  0x0e ; '.'
000000000001bcc7         db  0xa0 ; '.'
000000000001bcc8         db  0x10 ; '.'
000000000001bcc9         db  0x02 ; '.'
000000000001bcca         db  0x8f ; '.'
000000000001bccb         db  0x0a ; '.'
000000000001bccc         db  0x0e ; '.'
000000000001bccd         db  0x28 ; '('
000000000001bcce         db  0x41 ; 'A'
000000000001bccf         db  0x0e ; '.'
000000000001bcd0         db  0x20 ; ' '
000000000001bcd1         db  0x41 ; 'A'
000000000001bcd2         db  0x0e ; '.'
000000000001bcd3         db  0x18 ; '.'
000000000001bcd4         db  0x42 ; 'B'
000000000001bcd5         db  0x0e ; '.'
000000000001bcd6         db  0x10 ; '.'
000000000001bcd7         db  0x42 ; 'B'
000000000001bcd8         db  0x0e ; '.'
000000000001bcd9         db  0x08 ; '.'
000000000001bcda         db  0x48 ; 'H'
000000000001bcdb         db  0x0b ; '.'
000000000001bcdc         db  0x00 ; '.'
000000000001bcdd         db  0x00 ; '.'
000000000001bcde         db  0x00 ; '.'
000000000001bcdf         db  0x00 ; '.'
000000000001bce0         dd         0x00000014                                  ; Length of the record
000000000001bce4         dd         0x000023c4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bce8         db         0xd8, 0x6c, 2 dup (0xff)                    ; begin 0x129c0
000000000001bcec         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x129c2)
000000000001bcf0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bcf1         align      8
000000000001bcf8         dd         0x00000014                                  ; Length of the record
000000000001bcfc         dd         0x000023dc                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bd00         db         0xd0, 0x6c, 2 dup (0xff)                    ; begin 0x129d0
000000000001bd04         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x129d5)
000000000001bd08         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bd09         align      16
000000000001bd10         dd         0x00000010                                  ; Length of the record
000000000001bd14         dd         0x000023f4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bd18         db         0xc8, 0x6c, 2 dup (0xff)                    ; begin 0x129e0
000000000001bd1c         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x129f5)
000000000001bd20         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bd21         align      4
000000000001bd24         dd         0x00000018                                  ; Length of the record
000000000001bd28         dd         0x00002408                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bd2c         db         0xd4, 0x6c, 2 dup (0xff)                    ; begin 0x12a00
000000000001bd30         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0x12a22)
000000000001bd34         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bd35         db  0x44 ; 'D'
000000000001bd36         db  0x0e ; '.'
000000000001bd37         db  0x10 ; '.'
000000000001bd38         db  0x58 ; 'X'
000000000001bd39         db  0x0e ; '.'
000000000001bd3a         db  0x08 ; '.'
000000000001bd3b         db  0x00 ; '.'
000000000001bd3c         db  0x00 ; '.'
000000000001bd3d         db  0x00 ; '.'
000000000001bd3e         db  0x00 ; '.'
000000000001bd3f         db  0x00 ; '.'
000000000001bd40         dd         0x00000010                                  ; Length of the record
000000000001bd44         dd         0x00002424                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bd48         db         0xe8, 0x6c, 2 dup (0xff)                    ; begin 0x12a30
000000000001bd4c         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x12a3a)
000000000001bd50         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bd51         align      4
000000000001bd54         dd         0x00000048                                  ; Length of the record
000000000001bd58         dd         0x00002438                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bd5c         db         0xe4, 0x6c, 2 dup (0xff)                    ; begin 0x12a40
000000000001bd60         db         0x16, 0x01, 2 dup (0x00)                    ; length 0x116 (end at 0x12b56)
000000000001bd64         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bd65         db  0x42 ; 'B'
000000000001bd66         db  0x0e ; '.'
000000000001bd67         db  0x10 ; '.'
000000000001bd68         db  0x8f ; '.'
000000000001bd69         db  0x02 ; '.'
000000000001bd6a         db  0x42 ; 'B'
000000000001bd6b         db  0x0e ; '.'
000000000001bd6c         db  0x18 ; '.'
000000000001bd6d         db  0x8e ; '.'
000000000001bd6e         db  0x03 ; '.'
000000000001bd6f         db  0x45 ; 'E'
000000000001bd70         db  0x0e ; '.'
000000000001bd71         db  0x20 ; ' '
000000000001bd72         db  0x8d ; '.'
000000000001bd73         db  0x04 ; '.'
000000000001bd74         db  0x42 ; 'B'
000000000001bd75         db  0x0e ; '.'
000000000001bd76         db  0x28 ; '('
000000000001bd77         db  0x8c ; '.'
000000000001bd78         db  0x05 ; '.'
000000000001bd79         db  0x44 ; 'D'
000000000001bd7a         db  0x0e ; '.'
000000000001bd7b         db  0x30 ; '0'
000000000001bd7c         db  0x86 ; '.'
000000000001bd7d         db  0x06 ; '.'
000000000001bd7e         db  0x41 ; 'A'
000000000001bd7f         db  0x0e ; '.'
000000000001bd80         db  0x38 ; '8'
000000000001bd81         db  0x83 ; '.'
000000000001bd82         db  0x07 ; '.'
000000000001bd83         db  0x47 ; 'G'
000000000001bd84         db  0x0e ; '.'
000000000001bd85         db  0x60 ; '`'
000000000001bd86         db  0x02 ; '.'
000000000001bd87         db  0xde ; '.'
000000000001bd88         db  0x0a ; '.'
000000000001bd89         db  0x0e ; '.'
000000000001bd8a         db  0x38 ; '8'
000000000001bd8b         db  0x41 ; 'A'
000000000001bd8c         db  0x0e ; '.'
000000000001bd8d         db  0x30 ; '0'
000000000001bd8e         db  0x41 ; 'A'
000000000001bd8f         db  0x0e ; '.'
000000000001bd90         db  0x28 ; '('
000000000001bd91         db  0x42 ; 'B'
000000000001bd92         db  0x0e ; '.'
000000000001bd93         db  0x20 ; ' '
000000000001bd94         db  0x42 ; 'B'
000000000001bd95         db  0x0e ; '.'
000000000001bd96         db  0x18 ; '.'
000000000001bd97         db  0x42 ; 'B'
000000000001bd98         db  0x0e ; '.'
000000000001bd99         db  0x10 ; '.'
000000000001bd9a         db  0x42 ; 'B'
000000000001bd9b         db  0x0e ; '.'
000000000001bd9c         db  0x08 ; '.'
000000000001bd9d         db  0x41 ; 'A'
000000000001bd9e         db  0x0b ; '.'
000000000001bd9f         db  0x00 ; '.'
000000000001bda0         dd         0x00000028                                  ; Length of the record
000000000001bda4         dd         0x00002484                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bda8         db         0xb8, 0x6d, 2 dup (0xff)                    ; begin 0x12b60
000000000001bdac         db         0x73, 3 dup (0x00)                          ; length 0x73 (end at 0x12bd3)
000000000001bdb0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bdb1         db  0x46 ; 'F'
000000000001bdb2         db  0x0e ; '.'
000000000001bdb3         db  0x10 ; '.'
000000000001bdb4         db  0x8c ; '.'
000000000001bdb5         db  0x02 ; '.'
000000000001bdb6         db  0x46 ; 'F'
000000000001bdb7         db  0x0e ; '.'
000000000001bdb8         db  0x18 ; '.'
000000000001bdb9         db  0x86 ; '.'
000000000001bdba         db  0x03 ; '.'
000000000001bdbb         db  0x44 ; 'D'
000000000001bdbc         db  0x0e ; '.'
000000000001bdbd         db  0x20 ; ' '
000000000001bdbe         db  0x83 ; '.'
000000000001bdbf         db  0x04 ; '.'
000000000001bdc0         db  0x7f ; '.'
000000000001bdc1         db  0x0a ; '.'
000000000001bdc2         db  0x0e ; '.'
000000000001bdc3         db  0x18 ; '.'
000000000001bdc4         db  0x41 ; 'A'
000000000001bdc5         db  0x0e ; '.'
000000000001bdc6         db  0x10 ; '.'
000000000001bdc7         db  0x42 ; 'B'
000000000001bdc8         db  0x0e ; '.'
000000000001bdc9         db  0x08 ; '.'
000000000001bdca         db  0x4e ; 'N'
000000000001bdcb         db  0x0b ; '.'
000000000001bdcc         dd         0x0000005c                                  ; Length of the record
000000000001bdd0         dd         0x000024b0                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bdd4         db         0x0c, 0x6e, 2 dup (0xff)                    ; begin 0x12be0
000000000001bdd8         db         0x20, 0x01, 2 dup (0x00)                    ; length 0x120 (end at 0x12d00)
000000000001bddc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bddd         db  0x42 ; 'B'
000000000001bdde         db  0x0e ; '.'
000000000001bddf         db  0x10 ; '.'
000000000001bde0         db  0x8f ; '.'
000000000001bde1         db  0x02 ; '.'
000000000001bde2         db  0x42 ; 'B'
000000000001bde3         db  0x0e ; '.'
000000000001bde4         db  0x18 ; '.'
000000000001bde5         db  0x8e ; '.'
000000000001bde6         db  0x03 ; '.'
000000000001bde7         db  0x45 ; 'E'
000000000001bde8         db  0x0e ; '.'
000000000001bde9         db  0x20 ; ' '
000000000001bdea         db  0x8d ; '.'
000000000001bdeb         db  0x04 ; '.'
000000000001bdec         db  0x42 ; 'B'
000000000001bded         db  0x0e ; '.'
000000000001bdee         db  0x28 ; '('
000000000001bdef         db  0x8c ; '.'
000000000001bdf0         db  0x05 ; '.'
000000000001bdf1         db  0x43 ; 'C'
000000000001bdf2         db  0x0e ; '.'
000000000001bdf3         db  0x30 ; '0'
000000000001bdf4         db  0x86 ; '.'
000000000001bdf5         db  0x06 ; '.'
000000000001bdf6         db  0x41 ; 'A'
000000000001bdf7         db  0x0e ; '.'
000000000001bdf8         db  0x38 ; '8'
000000000001bdf9         db  0x83 ; '.'
000000000001bdfa         db  0x07 ; '.'
000000000001bdfb         db  0x56 ; 'V'
000000000001bdfc         db  0x0e ; '.'
000000000001bdfd         db  0x40 ; '@'
000000000001bdfe         db  0x02 ; '.'
000000000001bdff         db  0xd3 ; '.'
000000000001be00         db  0x0a ; '.'
000000000001be01         db  0x0e ; '.'
000000000001be02         db  0x38 ; '8'
000000000001be03         db  0x41 ; 'A'
000000000001be04         db  0x0e ; '.'
000000000001be05         db  0x30 ; '0'
000000000001be06         db  0x41 ; 'A'
000000000001be07         db  0x0e ; '.'
000000000001be08         db  0x28 ; '('
000000000001be09         db  0x42 ; 'B'
000000000001be0a         db  0x0e ; '.'
000000000001be0b         db  0x20 ; ' '
000000000001be0c         db  0x42 ; 'B'
000000000001be0d         db  0x0e ; '.'
000000000001be0e         db  0x18 ; '.'
000000000001be0f         db  0x42 ; 'B'
000000000001be10         db  0x0e ; '.'
000000000001be11         db  0x10 ; '.'
000000000001be12         db  0x42 ; 'B'
000000000001be13         db  0x0e ; '.'
000000000001be14         db  0x08 ; '.'
000000000001be15         db  0x46 ; 'F'
000000000001be16         db  0x0b ; '.'
000000000001be17         db  0x44 ; 'D'
000000000001be18         db  0x0e ; '.'
000000000001be19         db  0x38 ; '8'
000000000001be1a         db  0x46 ; 'F'
000000000001be1b         db  0x0e ; '.'
000000000001be1c         db  0x30 ; '0'
000000000001be1d         db  0x41 ; 'A'
000000000001be1e         db  0x0e ; '.'
000000000001be1f         db  0x28 ; '('
000000000001be20         db  0x42 ; 'B'
000000000001be21         db  0x0e ; '.'
000000000001be22         db  0x20 ; ' '
000000000001be23         db  0x42 ; 'B'
000000000001be24         db  0x0e ; '.'
000000000001be25         db  0x18 ; '.'
000000000001be26         db  0x42 ; 'B'
000000000001be27         db  0x0e ; '.'
000000000001be28         db  0x10 ; '.'
000000000001be29         db  0x42 ; 'B'
000000000001be2a         db  0x0e ; '.'
000000000001be2b         db  0x08 ; '.'
000000000001be2c         dd         0x00000048                                  ; Length of the record
000000000001be30         dd         0x00002510                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001be34         db         0xcc, 0x6e, 2 dup (0xff)                    ; begin 0x12d00
000000000001be38         db         0x6d, 3 dup (0x00)                          ; length 0x6d (end at 0x12d6d)
000000000001be3c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001be3d         db  0x42 ; 'B'
000000000001be3e         db  0x0e ; '.'
000000000001be3f         db  0x10 ; '.'
000000000001be40         db  0x8f ; '.'
000000000001be41         db  0x02 ; '.'
000000000001be42         db  0x42 ; 'B'
000000000001be43         db  0x0e ; '.'
000000000001be44         db  0x18 ; '.'
000000000001be45         db  0x8e ; '.'
000000000001be46         db  0x03 ; '.'
000000000001be47         db  0x45 ; 'E'
000000000001be48         db  0x0e ; '.'
000000000001be49         db  0x20 ; ' '
000000000001be4a         db  0x8d ; '.'
000000000001be4b         db  0x04 ; '.'
000000000001be4c         db  0x42 ; 'B'
000000000001be4d         db  0x0e ; '.'
000000000001be4e         db  0x28 ; '('
000000000001be4f         db  0x8c ; '.'
000000000001be50         db  0x05 ; '.'
000000000001be51         db  0x44 ; 'D'
000000000001be52         db  0x0e ; '.'
000000000001be53         db  0x30 ; '0'
000000000001be54         db  0x86 ; '.'
000000000001be55         db  0x06 ; '.'
000000000001be56         db  0x41 ; 'A'
000000000001be57         db  0x0e ; '.'
000000000001be58         db  0x38 ; '8'
000000000001be59         db  0x83 ; '.'
000000000001be5a         db  0x07 ; '.'
000000000001be5b         db  0x50 ; 'P'
000000000001be5c         db  0x0e ; '.'
000000000001be5d         db  0x40 ; '@'
000000000001be5e         db  0x5a ; 'Z'
000000000001be5f         db  0x0a ; '.'
000000000001be60         db  0x0e ; '.'
000000000001be61         db  0x38 ; '8'
000000000001be62         db  0x41 ; 'A'
000000000001be63         db  0x0e ; '.'
000000000001be64         db  0x30 ; '0'
000000000001be65         db  0x41 ; 'A'
000000000001be66         db  0x0e ; '.'
000000000001be67         db  0x28 ; '('
000000000001be68         db  0x42 ; 'B'
000000000001be69         db  0x0e ; '.'
000000000001be6a         db  0x20 ; ' '
000000000001be6b         db  0x42 ; 'B'
000000000001be6c         db  0x0e ; '.'
000000000001be6d         db  0x18 ; '.'
000000000001be6e         db  0x42 ; 'B'
000000000001be6f         db  0x0e ; '.'
000000000001be70         db  0x10 ; '.'
000000000001be71         db  0x42 ; 'B'
000000000001be72         db  0x0e ; '.'
000000000001be73         db  0x08 ; '.'
000000000001be74         db  0x41 ; 'A'
000000000001be75         db  0x0b ; '.'
000000000001be76         db  0x00 ; '.'
000000000001be77         db  0x00 ; '.'
000000000001be78         dd         0x0000003c                                  ; Length of the record
000000000001be7c         dd         0x0000255c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001be80         db         0xf0, 0x6e, 2 dup (0xff)                    ; begin 0x12d70
000000000001be84         db         0x4d, 3 dup (0x00)                          ; length 0x4d (end at 0x12dbd)
000000000001be88         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001be89         db  0x42 ; 'B'
000000000001be8a         db  0x0e ; '.'
000000000001be8b         db  0x10 ; '.'
000000000001be8c         db  0x8e ; '.'
000000000001be8d         db  0x02 ; '.'
000000000001be8e         db  0x42 ; 'B'
000000000001be8f         db  0x0e ; '.'
000000000001be90         db  0x18 ; '.'
000000000001be91         db  0x8d ; '.'
000000000001be92         db  0x03 ; '.'
000000000001be93         db  0x42 ; 'B'
000000000001be94         db  0x0e ; '.'
000000000001be95         db  0x20 ; ' '
000000000001be96         db  0x8c ; '.'
000000000001be97         db  0x04 ; '.'
000000000001be98         db  0x41 ; 'A'
000000000001be99         db  0x0e ; '.'
000000000001be9a         db  0x28 ; '('
000000000001be9b         db  0x86 ; '.'
000000000001be9c         db  0x05 ; '.'
000000000001be9d         db  0x41 ; 'A'
000000000001be9e         db  0x0e ; '.'
000000000001be9f         db  0x30 ; '0'
000000000001bea0         db  0x83 ; '.'
000000000001bea1         db  0x06 ; '.'
000000000001bea2         db  0x7a ; 'z'
000000000001bea3         db  0x0e ; '.'
000000000001bea4         db  0x28 ; '('
000000000001bea5         db  0x44 ; 'D'
000000000001bea6         db  0x0e ; '.'
000000000001bea7         db  0x20 ; ' '
000000000001bea8         db  0x42 ; 'B'
000000000001bea9         db  0x0e ; '.'
000000000001beaa         db  0x18 ; '.'
000000000001beab         db  0x42 ; 'B'
000000000001beac         db  0x0e ; '.'
000000000001bead         db  0x10 ; '.'
000000000001beae         db  0x42 ; 'B'
000000000001beaf         db  0x0e ; '.'
000000000001beb0         db  0x08 ; '.'
000000000001beb1         db  0x00 ; '.'
000000000001beb2         db  0x00 ; '.'
000000000001beb3         db  0x00 ; '.'
000000000001beb4         db  0x00 ; '.'
000000000001beb5         db  0x00 ; '.'
000000000001beb6         db  0x00 ; '.'
000000000001beb7         db  0x00 ; '.'
000000000001beb8         dd         0x0000004c                                  ; Length of the record
000000000001bebc         dd         0x0000259c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bec0         db         0x00, 0x6f, 2 dup (0xff)                    ; begin 0x12dc0
000000000001bec4         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x12e3d)
000000000001bec8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bec9         db  0x42 ; 'B'
000000000001beca         db  0x0e ; '.'
000000000001becb         db  0x10 ; '.'
000000000001becc         db  0x8c ; '.'
000000000001becd         db  0x02 ; '.'
000000000001bece         db  0x41 ; 'A'
000000000001becf         db  0x0e ; '.'
000000000001bed0         db  0x18 ; '.'
000000000001bed1         db  0x86 ; '.'
000000000001bed2         db  0x03 ; '.'
000000000001bed3         db  0x44 ; 'D'
000000000001bed4         db  0x0e ; '.'
000000000001bed5         db  0x20 ; ' '
000000000001bed6         db  0x83 ; '.'
000000000001bed7         db  0x04 ; '.'
000000000001bed8         db  0x69 ; 'i'
000000000001bed9         db  0x0a ; '.'
000000000001beda         db  0x0e ; '.'
000000000001bedb         db  0x18 ; '.'
000000000001bedc         db  0x41 ; 'A'
000000000001bedd         db  0x0e ; '.'
000000000001bede         db  0x10 ; '.'
000000000001bedf         db  0x42 ; 'B'
000000000001bee0         db  0x0e ; '.'
000000000001bee1         db  0x08 ; '.'
000000000001bee2         db  0x45 ; 'E'
000000000001bee3         db  0x0b ; '.'
000000000001bee4         db  0x55 ; 'U'
000000000001bee5         db  0x0a ; '.'
000000000001bee6         db  0x0e ; '.'
000000000001bee7         db  0x18 ; '.'
000000000001bee8         db  0x41 ; 'A'
000000000001bee9         db  0x0e ; '.'
000000000001beea         db  0x10 ; '.'
000000000001beeb         db  0x42 ; 'B'
000000000001beec         db  0x0e ; '.'
000000000001beed         db  0x08 ; '.'
000000000001beee         db  0x48 ; 'H'
000000000001beef         db  0x0b ; '.'
000000000001bef0         db  0x41 ; 'A'
000000000001bef1         db  0x0a ; '.'
000000000001bef2         db  0x0e ; '.'
000000000001bef3         db  0x18 ; '.'
000000000001bef4         db  0x46 ; 'F'
000000000001bef5         db  0x0e ; '.'
000000000001bef6         db  0x10 ; '.'
000000000001bef7         db  0x42 ; 'B'
000000000001bef8         db  0x0e ; '.'
000000000001bef9         db  0x08 ; '.'
000000000001befa         db  0x47 ; 'G'
000000000001befb         db  0x0b ; '.'
000000000001befc         db  0x49 ; 'I'
000000000001befd         db  0x0e ; '.'
000000000001befe         db  0x18 ; '.'
000000000001beff         db  0x41 ; 'A'
000000000001bf00         db  0x0e ; '.'
000000000001bf01         db  0x10 ; '.'
000000000001bf02         db  0x42 ; 'B'
000000000001bf03         db  0x0e ; '.'
000000000001bf04         db  0x08 ; '.'
000000000001bf05         db  0x00 ; '.'
000000000001bf06         db  0x00 ; '.'
000000000001bf07         db  0x00 ; '.'
000000000001bf08         dd         0x0000004c                                  ; Length of the record
000000000001bf0c         dd         0x000025ec                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bf10         db         0x30, 0x6f, 2 dup (0xff)                    ; begin 0x12e40
000000000001bf14         db         0x96, 3 dup (0x00)                          ; length 0x96 (end at 0x12ed6)
000000000001bf18         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bf19         db  0x42 ; 'B'
000000000001bf1a         db  0x0e ; '.'
000000000001bf1b         db  0x10 ; '.'
000000000001bf1c         db  0x8e ; '.'
000000000001bf1d         db  0x02 ; '.'
000000000001bf1e         db  0x42 ; 'B'
000000000001bf1f         db  0x0e ; '.'
000000000001bf20         db  0x18 ; '.'
000000000001bf21         db  0x8d ; '.'
000000000001bf22         db  0x03 ; '.'
000000000001bf23         db  0x42 ; 'B'
000000000001bf24         db  0x0e ; '.'
000000000001bf25         db  0x20 ; ' '
000000000001bf26         db  0x8c ; '.'
000000000001bf27         db  0x04 ; '.'
000000000001bf28         db  0x41 ; 'A'
000000000001bf29         db  0x0e ; '.'
000000000001bf2a         db  0x28 ; '('
000000000001bf2b         db  0x86 ; '.'
000000000001bf2c         db  0x05 ; '.'
000000000001bf2d         db  0x41 ; 'A'
000000000001bf2e         db  0x0e ; '.'
000000000001bf2f         db  0x30 ; '0'
000000000001bf30         db  0x83 ; '.'
000000000001bf31         db  0x06 ; '.'
000000000001bf32         db  0x5e ; '^'
000000000001bf33         db  0x0a ; '.'
000000000001bf34         db  0x0e ; '.'
000000000001bf35         db  0x28 ; '('
000000000001bf36         db  0x41 ; 'A'
000000000001bf37         db  0x0e ; '.'
000000000001bf38         db  0x20 ; ' '
000000000001bf39         db  0x42 ; 'B'
000000000001bf3a         db  0x0e ; '.'
000000000001bf3b         db  0x18 ; '.'
000000000001bf3c         db  0x42 ; 'B'
000000000001bf3d         db  0x0e ; '.'
000000000001bf3e         db  0x10 ; '.'
000000000001bf3f         db  0x42 ; 'B'
000000000001bf40         db  0x0e ; '.'
000000000001bf41         db  0x08 ; '.'
000000000001bf42         db  0x43 ; 'C'
000000000001bf43         db  0x0b ; '.'
000000000001bf44         db  0x7c ; '|'
000000000001bf45         db  0x0a ; '.'
000000000001bf46         db  0x0e ; '.'
000000000001bf47         db  0x28 ; '('
000000000001bf48         db  0x41 ; 'A'
000000000001bf49         db  0x0e ; '.'
000000000001bf4a         db  0x20 ; ' '
000000000001bf4b         db  0x42 ; 'B'
000000000001bf4c         db  0x0e ; '.'
000000000001bf4d         db  0x18 ; '.'
000000000001bf4e         db  0x42 ; 'B'
000000000001bf4f         db  0x0e ; '.'
000000000001bf50         db  0x10 ; '.'
000000000001bf51         db  0x42 ; 'B'
000000000001bf52         db  0x0e ; '.'
000000000001bf53         db  0x08 ; '.'
000000000001bf54         db  0x45 ; 'E'
000000000001bf55         db  0x0b ; '.'
000000000001bf56         db  0x00 ; '.'
000000000001bf57         db  0x00 ; '.'
000000000001bf58         dd         0x00000010                                  ; Length of the record
000000000001bf5c         dd         0x0000263c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bf60         db         0x80, 0x6f, 2 dup (0xff)                    ; begin 0x12ee0
000000000001bf64         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x12eea)
000000000001bf68         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bf69         align      4
000000000001bf6c         dd         0x00000018                                  ; Length of the record
000000000001bf70         dd         0x00002650                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bf74         db         0x7c, 0x6f, 2 dup (0xff)                    ; begin 0x12ef0
000000000001bf78         db         0x41, 3 dup (0x00)                          ; length 0x41 (end at 0x12f31)
000000000001bf7c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bf7d         db  0x44 ; 'D'
000000000001bf7e         db  0x0e ; '.'
000000000001bf7f         db  0x30 ; '0'
000000000001bf80         db  0x77 ; 'w'
000000000001bf81         db  0x0a ; '.'
000000000001bf82         db  0x0e ; '.'
000000000001bf83         db  0x08 ; '.'
000000000001bf84         db  0x41 ; 'A'
000000000001bf85         db  0x0b ; '.'
000000000001bf86         db  0x00 ; '.'
000000000001bf87         db  0x00 ; '.'
000000000001bf88         dd         0x0000001c                                  ; Length of the record
000000000001bf8c         dd         0x0000266c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bf90         db         0xb0, 0x6f, 2 dup (0xff)                    ; begin 0x12f40
000000000001bf94         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x12fa0)
000000000001bf98         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bf99         db  0x44 ; 'D'
000000000001bf9a         db  0x0e ; '.'
000000000001bf9b         db  0x10 ; '.'
000000000001bf9c         db  0x75 ; 'u'
000000000001bf9d         db  0x0a ; '.'
000000000001bf9e         db  0x0e ; '.'
000000000001bf9f         db  0x08 ; '.'
000000000001bfa0         db  0x47 ; 'G'
000000000001bfa1         db  0x0b ; '.'
000000000001bfa2         db  0x5f ; '_'
000000000001bfa3         db  0x0e ; '.'
000000000001bfa4         db  0x08 ; '.'
000000000001bfa5         db  0x00 ; '.'
000000000001bfa6         db  0x00 ; '.'
000000000001bfa7         db  0x00 ; '.'
000000000001bfa8         dd         0x00000014                                  ; Length of the record
000000000001bfac         dd         0x0000268c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bfb0         db         0xf0, 0x6f, 2 dup (0xff)                    ; begin 0x12fa0
000000000001bfb4         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x12fd6)
000000000001bfb8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bfb9         align      64
000000000001bfc0         dd         0x0000001c                                  ; Length of the record
000000000001bfc4         dd         0x000026a4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bfc8         db         0x18, 0x70, 2 dup (0xff)                    ; begin 0x12fe0
000000000001bfcc         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x1301c)
000000000001bfd0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bfd1         db  0x44 ; 'D'
000000000001bfd2         db  0x0e ; '.'
000000000001bfd3         db  0x10 ; '.'
000000000001bfd4         db  0x61 ; 'a'
000000000001bfd5         db  0x0a ; '.'
000000000001bfd6         db  0x0e ; '.'
000000000001bfd7         db  0x08 ; '.'
000000000001bfd8         db  0x4b ; 'K'
000000000001bfd9         db  0x0b ; '.'
000000000001bfda         db  0x4b ; 'K'
000000000001bfdb         db  0x0e ; '.'
000000000001bfdc         db  0x08 ; '.'
000000000001bfdd         db  0x00 ; '.'
000000000001bfde         db  0x00 ; '.'
000000000001bfdf         db  0x00 ; '.'
000000000001bfe0         dd         0x0000004c                                  ; Length of the record
000000000001bfe4         dd         0x000026c4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001bfe8         db         0x38, 0x70, 2 dup (0xff)                    ; begin 0x13020
000000000001bfec         db         0x15, 0x02, 2 dup (0x00)                    ; length 0x215 (end at 0x13235)
000000000001bff0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bff1         db  0x42 ; 'B'
000000000001bff2         db  0x0e ; '.'
000000000001bff3         db  0x10 ; '.'
000000000001bff4         db  0x8f ; '.'
000000000001bff5         db  0x02 ; '.'
000000000001bff6         db  0x42 ; 'B'
000000000001bff7         db  0x0e ; '.'
000000000001bff8         db  0x18 ; '.'
000000000001bff9         db  0x8e ; '.'
000000000001bffa         db  0x03 ; '.'
000000000001bffb         db  0x45 ; 'E'
000000000001bffc         db  0x0e ; '.'
000000000001bffd         db  0x20 ; ' '
000000000001bffe         db  0x8d ; '.'
000000000001bfff         db  0x04 ; '.'
000000000001c000         db  0x42 ; 'B'
000000000001c001         db  0x0e ; '.'
000000000001c002         db  0x28 ; '('
000000000001c003         db  0x8c ; '.'
000000000001c004         db  0x05 ; '.'
000000000001c005         db  0x44 ; 'D'
000000000001c006         db  0x0e ; '.'
000000000001c007         db  0x30 ; '0'
000000000001c008         db  0x86 ; '.'
000000000001c009         db  0x06 ; '.'
000000000001c00a         db  0x41 ; 'A'
000000000001c00b         db  0x0e ; '.'
000000000001c00c         db  0x38 ; '8'
000000000001c00d         db  0x83 ; '.'
000000000001c00e         db  0x07 ; '.'
000000000001c00f         db  0x4f ; 'O'
000000000001c010         db  0x0e ; '.'
000000000001c011         db  0xf0 ; '.'
000000000001c012         db  0x01 ; '.'
000000000001c013         db  0x02 ; '.'
000000000001c014         db  0xe5 ; '.'
000000000001c015         db  0x0a ; '.'
000000000001c016         db  0x0e ; '.'
000000000001c017         db  0x38 ; '8'
000000000001c018         db  0x41 ; 'A'
000000000001c019         db  0x0e ; '.'
000000000001c01a         db  0x30 ; '0'
000000000001c01b         db  0x41 ; 'A'
000000000001c01c         db  0x0e ; '.'
000000000001c01d         db  0x28 ; '('
000000000001c01e         db  0x42 ; 'B'
000000000001c01f         db  0x0e ; '.'
000000000001c020         db  0x20 ; ' '
000000000001c021         db  0x42 ; 'B'
000000000001c022         db  0x0e ; '.'
000000000001c023         db  0x18 ; '.'
000000000001c024         db  0x42 ; 'B'
000000000001c025         db  0x0e ; '.'
000000000001c026         db  0x10 ; '.'
000000000001c027         db  0x42 ; 'B'
000000000001c028         db  0x0e ; '.'
000000000001c029         db  0x08 ; '.'
000000000001c02a         db  0x42 ; 'B'
000000000001c02b         db  0x0b ; '.'
000000000001c02c         db  0x00 ; '.'
000000000001c02d         db  0x00 ; '.'
000000000001c02e         db  0x00 ; '.'
000000000001c02f         db  0x00 ; '.'
000000000001c030         dd         0x0000001c                                  ; Length of the record
000000000001c034         dd         0x00002714                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c038         db         0x08, 0x72, 2 dup (0xff)                    ; begin 0x13240
000000000001c03c         db         0x6e, 3 dup (0x00)                          ; length 0x6e (end at 0x132ae)
000000000001c040         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c041         db  0x44 ; 'D'
000000000001c042         db  0x0e ; '.'
000000000001c043         db  0x60 ; '`'
000000000001c044         db  0x7e ; '~'
000000000001c045         db  0x0a ; '.'
000000000001c046         db  0x0e ; '.'
000000000001c047         db  0x08 ; '.'
000000000001c048         db  0x46 ; 'F'
000000000001c049         db  0x0b ; '.'
000000000001c04a         db  0x00 ; '.'
000000000001c04b         db  0x00 ; '.'
000000000001c04c         db  0x00 ; '.'
000000000001c04d         db  0x00 ; '.'
000000000001c04e         db  0x00 ; '.'
000000000001c04f         db  0x00 ; '.'
000000000001c050         dd         0x00000018                                  ; Length of the record
000000000001c054         dd         0x00002734                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c058         db         0x58, 0x72, 2 dup (0xff)                    ; begin 0x132b0
000000000001c05c         db         0x23, 3 dup (0x00)                          ; length 0x23 (end at 0x132d3)
000000000001c060         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c061         db  0x41 ; 'A'
000000000001c062         db  0x0e ; '.'
000000000001c063         db  0x10 ; '.'
000000000001c064         db  0x83 ; '.'
000000000001c065         db  0x02 ; '.'
000000000001c066         db  0x61 ; 'a'
000000000001c067         db  0x0e ; '.'
000000000001c068         db  0x08 ; '.'
000000000001c069         db  0x00 ; '.'
000000000001c06a         db  0x00 ; '.'
000000000001c06b         db  0x00 ; '.'
000000000001c06c         dd         0x0000001c                                  ; Length of the record
000000000001c070         dd         0x00002750                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c074         db         0x6c, 0x72, 2 dup (0xff)                    ; begin 0x132e0
000000000001c078         db         0x34, 3 dup (0x00)                          ; length 0x34 (end at 0x13314)
000000000001c07c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c07d         db  0x41 ; 'A'
000000000001c07e         db  0x0e ; '.'
000000000001c07f         db  0x10 ; '.'
000000000001c080         db  0x83 ; '.'
000000000001c081         db  0x02 ; '.'
000000000001c082         db  0x6b ; 'k'
000000000001c083         db  0x0a ; '.'
000000000001c084         db  0x0e ; '.'
000000000001c085         db  0x08 ; '.'
000000000001c086         db  0x44 ; 'D'
000000000001c087         db  0x0b ; '.'
000000000001c088         db  0x43 ; 'C'
000000000001c089         db  0x0e ; '.'
000000000001c08a         db  0x08 ; '.'
000000000001c08b         db  0x00 ; '.'
000000000001c08c         dd         0x00000010                                  ; Length of the record
000000000001c090         dd         0x00002770                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c094         db         0x8c, 0x72, 2 dup (0xff)                    ; begin 0x13320
000000000001c098         db         0x04, 3 dup (0x00)                          ; length 0x4 (end at 0x13324)
000000000001c09c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c09d         align      32
000000000001c0a0         dd         0x00000048                                  ; Length of the record
000000000001c0a4         dd         0x00002784                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c0a8         db         0x88, 0x72, 2 dup (0xff)                    ; begin 0x13330
000000000001c0ac         db         0x1a, 0x01, 2 dup (0x00)                    ; length 0x11a (end at 0x1344a)
000000000001c0b0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c0b1         db  0x42 ; 'B'
000000000001c0b2         db  0x0e ; '.'
000000000001c0b3         db  0x10 ; '.'
000000000001c0b4         db  0x8f ; '.'
000000000001c0b5         db  0x02 ; '.'
000000000001c0b6         db  0x42 ; 'B'
000000000001c0b7         db  0x0e ; '.'
000000000001c0b8         db  0x18 ; '.'
000000000001c0b9         db  0x8e ; '.'
000000000001c0ba         db  0x03 ; '.'
000000000001c0bb         db  0x46 ; 'F'
000000000001c0bc         db  0x0e ; '.'
000000000001c0bd         db  0x20 ; ' '
000000000001c0be         db  0x8d ; '.'
000000000001c0bf         db  0x04 ; '.'
000000000001c0c0         db  0x42 ; 'B'
000000000001c0c1         db  0x0e ; '.'
000000000001c0c2         db  0x28 ; '('
000000000001c0c3         db  0x8c ; '.'
000000000001c0c4         db  0x05 ; '.'
000000000001c0c5         db  0x44 ; 'D'
000000000001c0c6         db  0x0e ; '.'
000000000001c0c7         db  0x30 ; '0'
000000000001c0c8         db  0x86 ; '.'
000000000001c0c9         db  0x06 ; '.'
000000000001c0ca         db  0x41 ; 'A'
000000000001c0cb         db  0x0e ; '.'
000000000001c0cc         db  0x38 ; '8'
000000000001c0cd         db  0x83 ; '.'
000000000001c0ce         db  0x07 ; '.'
000000000001c0cf         db  0x47 ; 'G'
000000000001c0d0         db  0x0e ; '.'
000000000001c0d1         db  0x60 ; '`'
000000000001c0d2         db  0x02 ; '.'
000000000001c0d3         db  0xde ; '.'
000000000001c0d4         db  0x0a ; '.'
000000000001c0d5         db  0x0e ; '.'
000000000001c0d6         db  0x38 ; '8'
000000000001c0d7         db  0x41 ; 'A'
000000000001c0d8         db  0x0e ; '.'
000000000001c0d9         db  0x30 ; '0'
000000000001c0da         db  0x41 ; 'A'
000000000001c0db         db  0x0e ; '.'
000000000001c0dc         db  0x28 ; '('
000000000001c0dd         db  0x42 ; 'B'
000000000001c0de         db  0x0e ; '.'
000000000001c0df         db  0x20 ; ' '
000000000001c0e0         db  0x42 ; 'B'
000000000001c0e1         db  0x0e ; '.'
000000000001c0e2         db  0x18 ; '.'
000000000001c0e3         db  0x42 ; 'B'
000000000001c0e4         db  0x0e ; '.'
000000000001c0e5         db  0x10 ; '.'
000000000001c0e6         db  0x42 ; 'B'
000000000001c0e7         db  0x0e ; '.'
000000000001c0e8         db  0x08 ; '.'
000000000001c0e9         db  0x48 ; 'H'
000000000001c0ea         db  0x0b ; '.'
000000000001c0eb         db  0x00 ; '.'
000000000001c0ec         dd         0x00000018                                  ; Length of the record
000000000001c0f0         dd         0x000027d0                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c0f4         db         0x5c, 0x73, 2 dup (0xff)                    ; begin 0x13450
000000000001c0f8         db         0x1e, 3 dup (0x00)                          ; length 0x1e (end at 0x1346e)
000000000001c0fc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c0fd         db  0x41 ; 'A'
000000000001c0fe         db  0x0e ; '.'
000000000001c0ff         db  0x10 ; '.'
000000000001c100         db  0x83 ; '.'
000000000001c101         db  0x02 ; '.'
000000000001c102         db  0x58 ; 'X'
000000000001c103         db  0x0e ; '.'
000000000001c104         db  0x08 ; '.'
000000000001c105         db  0x00 ; '.'
000000000001c106         db  0x00 ; '.'
000000000001c107         db  0x00 ; '.'
000000000001c108         dd         0x00000034                                  ; Length of the record
000000000001c10c         dd         0x000027ec                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c110         db         0x60, 0x73, 2 dup (0xff)                    ; begin 0x13470
000000000001c114         db         0x51, 3 dup (0x00)                          ; length 0x51 (end at 0x134c1)
000000000001c118         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c119         db  0x42 ; 'B'
000000000001c11a         db  0x0e ; '.'
000000000001c11b         db  0x10 ; '.'
000000000001c11c         db  0x8d ; '.'
000000000001c11d         db  0x02 ; '.'
000000000001c11e         db  0x42 ; 'B'
000000000001c11f         db  0x0e ; '.'
000000000001c120         db  0x18 ; '.'
000000000001c121         db  0x8c ; '.'
000000000001c122         db  0x03 ; '.'
000000000001c123         db  0x41 ; 'A'
000000000001c124         db  0x0e ; '.'
000000000001c125         db  0x20 ; ' '
000000000001c126         db  0x86 ; '.'
000000000001c127         db  0x04 ; '.'
000000000001c128         db  0x41 ; 'A'
000000000001c129         db  0x0e ; '.'
000000000001c12a         db  0x28 ; '('
000000000001c12b         db  0x83 ; '.'
000000000001c12c         db  0x05 ; '.'
000000000001c12d         db  0x47 ; 'G'
000000000001c12e         db  0x0e ; '.'
000000000001c12f         db  0x30 ; '0'
000000000001c130         db  0x7a ; 'z'
000000000001c131         db  0x0e ; '.'
000000000001c132         db  0x28 ; '('
000000000001c133         db  0x44 ; 'D'
000000000001c134         db  0x0e ; '.'
000000000001c135         db  0x20 ; ' '
000000000001c136         db  0x41 ; 'A'
000000000001c137         db  0x0e ; '.'
000000000001c138         db  0x18 ; '.'
000000000001c139         db  0x42 ; 'B'
000000000001c13a         db  0x0e ; '.'
000000000001c13b         db  0x10 ; '.'
000000000001c13c         db  0x42 ; 'B'
000000000001c13d         db  0x0e ; '.'
000000000001c13e         db  0x08 ; '.'
000000000001c13f         db  0x00 ; '.'
000000000001c140         dd         0x0000001c                                  ; Length of the record
000000000001c144         dd         0x00002824                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c148         db         0x88, 0x73, 2 dup (0xff)                    ; begin 0x134d0
000000000001c14c         db         0x5d, 3 dup (0x00)                          ; length 0x5d (end at 0x1352d)
000000000001c150         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c151         db  0x41 ; 'A'
000000000001c152         db  0x0e ; '.'
000000000001c153         db  0x10 ; '.'
000000000001c154         db  0x86 ; '.'
000000000001c155         db  0x02 ; '.'
000000000001c156         db  0x41 ; 'A'
000000000001c157         db  0x0e ; '.'
000000000001c158         db  0x18 ; '.'
000000000001c159         db  0x83 ; '.'
000000000001c15a         db  0x03 ; '.'
000000000001c15b         db  0x44 ; 'D'
000000000001c15c         db  0x0e ; '.'
000000000001c15d         db  0x20 ; ' '
000000000001c15e         db  0x00 ; '.'
000000000001c15f         db  0x00 ; '.'
000000000001c160         dd         0x00000048                                  ; Length of the record
000000000001c164         dd         0x00002844                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c168         db         0xc8, 0x73, 2 dup (0xff)                    ; begin 0x13530
000000000001c16c         db         0x29, 0x03, 2 dup (0x00)                    ; length 0x329 (end at 0x13859)
000000000001c170         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c171         db  0x42 ; 'B'
000000000001c172         db  0x0e ; '.'
000000000001c173         db  0x10 ; '.'
000000000001c174         db  0x8f ; '.'
000000000001c175         db  0x02 ; '.'
000000000001c176         db  0x42 ; 'B'
000000000001c177         db  0x0e ; '.'
000000000001c178         db  0x18 ; '.'
000000000001c179         db  0x8e ; '.'
000000000001c17a         db  0x03 ; '.'
000000000001c17b         db  0x42 ; 'B'
000000000001c17c         db  0x0e ; '.'
000000000001c17d         db  0x20 ; ' '
000000000001c17e         db  0x8d ; '.'
000000000001c17f         db  0x04 ; '.'
000000000001c180         db  0x42 ; 'B'
000000000001c181         db  0x0e ; '.'
000000000001c182         db  0x28 ; '('
000000000001c183         db  0x8c ; '.'
000000000001c184         db  0x05 ; '.'
000000000001c185         db  0x41 ; 'A'
000000000001c186         db  0x0e ; '.'
000000000001c187         db  0x30 ; '0'
000000000001c188         db  0x86 ; '.'
000000000001c189         db  0x06 ; '.'
000000000001c18a         db  0x41 ; 'A'
000000000001c18b         db  0x0e ; '.'
000000000001c18c         db  0x38 ; '8'
000000000001c18d         db  0x83 ; '.'
000000000001c18e         db  0x07 ; '.'
000000000001c18f         db  0x44 ; 'D'
000000000001c190         db  0x0e ; '.'
000000000001c191         db  0x70 ; 'p'
000000000001c192         db  0x02 ; '.'
000000000001c193         db  0x94 ; '.'
000000000001c194         db  0x0a ; '.'
000000000001c195         db  0x0e ; '.'
000000000001c196         db  0x38 ; '8'
000000000001c197         db  0x41 ; 'A'
000000000001c198         db  0x0e ; '.'
000000000001c199         db  0x30 ; '0'
000000000001c19a         db  0x41 ; 'A'
000000000001c19b         db  0x0e ; '.'
000000000001c19c         db  0x28 ; '('
000000000001c19d         db  0x42 ; 'B'
000000000001c19e         db  0x0e ; '.'
000000000001c19f         db  0x20 ; ' '
000000000001c1a0         db  0x42 ; 'B'
000000000001c1a1         db  0x0e ; '.'
000000000001c1a2         db  0x18 ; '.'
000000000001c1a3         db  0x42 ; 'B'
000000000001c1a4         db  0x0e ; '.'
000000000001c1a5         db  0x10 ; '.'
000000000001c1a6         db  0x42 ; 'B'
000000000001c1a7         db  0x0e ; '.'
000000000001c1a8         db  0x08 ; '.'
000000000001c1a9         db  0x44 ; 'D'
000000000001c1aa         db  0x0b ; '.'
000000000001c1ab         db  0x00 ; '.'
000000000001c1ac         dd         0x00000010                                  ; Length of the record
000000000001c1b0         dd         0x00002890                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c1b4         db         0xac, 0x76, 2 dup (0xff)                    ; begin 0x13860
000000000001c1b8         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x13865)
000000000001c1bc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c1bd         align      64
000000000001c1c0         dd         0x00000010                                  ; Length of the record
000000000001c1c4         dd         0x000028a4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c1c8         db         0xa8, 0x76, 2 dup (0xff)                    ; begin 0x13870
000000000001c1cc         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x13875)
000000000001c1d0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c1d1         align      4
000000000001c1d4         dd         0x00000060                                  ; Length of the record
000000000001c1d8         dd         0x000028b8                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c1dc         db         0xa4, 0x76, 2 dup (0xff)                    ; begin 0x13880
000000000001c1e0         db         0x96, 0x01, 2 dup (0x00)                    ; length 0x196 (end at 0x13a16)
000000000001c1e4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c1e5         db  0x42 ; 'B'
000000000001c1e6         db  0x0e ; '.'
000000000001c1e7         db  0x10 ; '.'
000000000001c1e8         db  0x8f ; '.'
000000000001c1e9         db  0x02 ; '.'
000000000001c1ea         db  0x42 ; 'B'
000000000001c1eb         db  0x0e ; '.'
000000000001c1ec         db  0x18 ; '.'
000000000001c1ed         db  0x8e ; '.'
000000000001c1ee         db  0x03 ; '.'
000000000001c1ef         db  0x42 ; 'B'
000000000001c1f0         db  0x0e ; '.'
000000000001c1f1         db  0x20 ; ' '
000000000001c1f2         db  0x8d ; '.'
000000000001c1f3         db  0x04 ; '.'
000000000001c1f4         db  0x42 ; 'B'
000000000001c1f5         db  0x0e ; '.'
000000000001c1f6         db  0x28 ; '('
000000000001c1f7         db  0x8c ; '.'
000000000001c1f8         db  0x05 ; '.'
000000000001c1f9         db  0x44 ; 'D'
000000000001c1fa         db  0x0e ; '.'
000000000001c1fb         db  0x30 ; '0'
000000000001c1fc         db  0x86 ; '.'
000000000001c1fd         db  0x06 ; '.'
000000000001c1fe         db  0x41 ; 'A'
000000000001c1ff         db  0x0e ; '.'
000000000001c200         db  0x38 ; '8'
000000000001c201         db  0x83 ; '.'
000000000001c202         db  0x07 ; '.'
000000000001c203         db  0x4a ; 'J'
000000000001c204         db  0x0e ; '.'
000000000001c205         db  0x50 ; 'P'
000000000001c206         db  0x02 ; '.'
000000000001c207         db  0x5f ; '_'
000000000001c208         db  0x0a ; '.'
000000000001c209         db  0x0e ; '.'
000000000001c20a         db  0x38 ; '8'
000000000001c20b         db  0x41 ; 'A'
000000000001c20c         db  0x0e ; '.'
000000000001c20d         db  0x30 ; '0'
000000000001c20e         db  0x41 ; 'A'
000000000001c20f         db  0x0e ; '.'
000000000001c210         db  0x28 ; '('
000000000001c211         db  0x42 ; 'B'
000000000001c212         db  0x0e ; '.'
000000000001c213         db  0x20 ; ' '
000000000001c214         db  0x42 ; 'B'
000000000001c215         db  0x0e ; '.'
000000000001c216         db  0x18 ; '.'
000000000001c217         db  0x42 ; 'B'
000000000001c218         db  0x0e ; '.'
000000000001c219         db  0x10 ; '.'
000000000001c21a         db  0x42 ; 'B'
000000000001c21b         db  0x0e ; '.'
000000000001c21c         db  0x08 ; '.'
000000000001c21d         db  0x48 ; 'H'
000000000001c21e         db  0x0b ; '.'
000000000001c21f         db  0x02 ; '.'
000000000001c220         db  0x9b ; '.'
000000000001c221         db  0x0a ; '.'
000000000001c222         db  0x0e ; '.'
000000000001c223         db  0x38 ; '8'
000000000001c224         db  0x41 ; 'A'
000000000001c225         db  0x0e ; '.'
000000000001c226         db  0x30 ; '0'
000000000001c227         db  0x41 ; 'A'
000000000001c228         db  0x0e ; '.'
000000000001c229         db  0x28 ; '('
000000000001c22a         db  0x42 ; 'B'
000000000001c22b         db  0x0e ; '.'
000000000001c22c         db  0x20 ; ' '
000000000001c22d         db  0x42 ; 'B'
000000000001c22e         db  0x0e ; '.'
000000000001c22f         db  0x18 ; '.'
000000000001c230         db  0x42 ; 'B'
000000000001c231         db  0x0e ; '.'
000000000001c232         db  0x10 ; '.'
000000000001c233         db  0x42 ; 'B'
000000000001c234         db  0x0e ; '.'
000000000001c235         db  0x08 ; '.'
000000000001c236         db  0x43 ; 'C'
000000000001c237         db  0x0b ; '.'
000000000001c238         dd         0x00000034                                  ; Length of the record
000000000001c23c         dd         0x0000291c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c240         db         0xe0, 0x77, 2 dup (0xff)                    ; begin 0x13a20
000000000001c244         db         0x49, 3 dup (0x00)                          ; length 0x49 (end at 0x13a69)
000000000001c248         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c249         db  0x41 ; 'A'
000000000001c24a         db  0x0e ; '.'
000000000001c24b         db  0x10 ; '.'
000000000001c24c         db  0x86 ; '.'
000000000001c24d         db  0x02 ; '.'
000000000001c24e         db  0x41 ; 'A'
000000000001c24f         db  0x0e ; '.'
000000000001c250         db  0x18 ; '.'
000000000001c251         db  0x83 ; '.'
000000000001c252         db  0x03 ; '.'
000000000001c253         db  0x53 ; 'S'
000000000001c254         db  0x0e ; '.'
000000000001c255         db  0x20 ; ' '
000000000001c256         db  0x59 ; 'Y'
000000000001c257         db  0x0a ; '.'
000000000001c258         db  0x0e ; '.'
000000000001c259         db  0x18 ; '.'
000000000001c25a         db  0x44 ; 'D'
000000000001c25b         db  0x0e ; '.'
000000000001c25c         db  0x10 ; '.'
000000000001c25d         db  0x41 ; 'A'
000000000001c25e         db  0x0e ; '.'
000000000001c25f         db  0x08 ; '.'
000000000001c260         db  0x4d ; 'M'
000000000001c261         db  0x0b ; '.'
000000000001c262         db  0x44 ; 'D'
000000000001c263         db  0x0e ; '.'
000000000001c264         db  0x18 ; '.'
000000000001c265         db  0x43 ; 'C'
000000000001c266         db  0x0e ; '.'
000000000001c267         db  0x10 ; '.'
000000000001c268         db  0x41 ; 'A'
000000000001c269         db  0x0e ; '.'
000000000001c26a         db  0x08 ; '.'
000000000001c26b         db  0x00 ; '.'
000000000001c26c         db  0x00 ; '.'
000000000001c26d         db  0x00 ; '.'
000000000001c26e         db  0x00 ; '.'
000000000001c26f         db  0x00 ; '.'
000000000001c270         dd         0x00000010                                  ; Length of the record
000000000001c274         dd         0x00002954                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c278         db         0xf8, 0x77, 2 dup (0xff)                    ; begin 0x13a70
000000000001c27c         db         0x8e, 0x02, 2 dup (0x00)                    ; length 0x28e (end at 0x13cfe)
000000000001c280         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c281         align      4
000000000001c284         dd         0x00000030                                  ; Length of the record
000000000001c288         dd         0x00002968                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c28c         db         0x74, 0x7a, 2 dup (0xff)                    ; begin 0x13d00
000000000001c290         db         0x40, 0x02, 2 dup (0x00)                    ; length 0x240 (end at 0x13f40)
000000000001c294         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c295         db  0x42 ; 'B'
000000000001c296         db  0x0e ; '.'
000000000001c297         db  0x10 ; '.'
000000000001c298         db  0x8d ; '.'
000000000001c299         db  0x02 ; '.'
000000000001c29a         db  0x42 ; 'B'
000000000001c29b         db  0x0e ; '.'
000000000001c29c         db  0x18 ; '.'
000000000001c29d         db  0x8c ; '.'
000000000001c29e         db  0x03 ; '.'
000000000001c29f         db  0x48 ; 'H'
000000000001c2a0         db  0x0e ; '.'
000000000001c2a1         db  0x20 ; ' '
000000000001c2a2         db  0x86 ; '.'
000000000001c2a3         db  0x04 ; '.'
000000000001c2a4         db  0x44 ; 'D'
000000000001c2a5         db  0x0e ; '.'
000000000001c2a6         db  0x28 ; '('
000000000001c2a7         db  0x83 ; '.'
000000000001c2a8         db  0x05 ; '.'
000000000001c2a9         db  0x03 ; '.'
000000000001c2aa         db  0x09 ; '.'
000000000001c2ab         db  0x02 ; '.'
000000000001c2ac         db  0x0e ; '.'
000000000001c2ad         db  0x20 ; ' '
000000000001c2ae         db  0x57 ; 'W'
000000000001c2af         db  0x0e ; '.'
000000000001c2b0         db  0x18 ; '.'
000000000001c2b1         db  0x4d ; 'M'
000000000001c2b2         db  0x0e ; '.'
000000000001c2b3         db  0x10 ; '.'
000000000001c2b4         db  0x42 ; 'B'
000000000001c2b5         db  0x0e ; '.'
000000000001c2b6         db  0x08 ; '.'
000000000001c2b7         db  0x00 ; '.'
000000000001c2b8         dd         0x00000014                                  ; Length of the record
000000000001c2bc         dd         0x0000299c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c2c0         db         0x80, 0x7c, 2 dup (0xff)                    ; begin 0x13f40
000000000001c2c4         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x13f4e)
000000000001c2c8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c2c9         align      16
000000000001c2d0         dd         0x00000034                                  ; Length of the record
000000000001c2d4         dd         0x000029b4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c2d8         db         0x78, 0x7c, 2 dup (0xff)                    ; begin 0x13f50
000000000001c2dc         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x13fcb)
000000000001c2e0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c2e1         db  0x42 ; 'B'
000000000001c2e2         db  0x0e ; '.'
000000000001c2e3         db  0x10 ; '.'
000000000001c2e4         db  0x8c ; '.'
000000000001c2e5         db  0x02 ; '.'
000000000001c2e6         db  0x41 ; 'A'
000000000001c2e7         db  0x0e ; '.'
000000000001c2e8         db  0x18 ; '.'
000000000001c2e9         db  0x86 ; '.'
000000000001c2ea         db  0x03 ; '.'
000000000001c2eb         db  0x41 ; 'A'
000000000001c2ec         db  0x0e ; '.'
000000000001c2ed         db  0x20 ; ' '
000000000001c2ee         db  0x83 ; '.'
000000000001c2ef         db  0x04 ; '.'
000000000001c2f0         db  0x7d ; '}'
000000000001c2f1         db  0x0a ; '.'
000000000001c2f2         db  0x0e ; '.'
000000000001c2f3         db  0x18 ; '.'
000000000001c2f4         db  0x41 ; 'A'
000000000001c2f5         db  0x0e ; '.'
000000000001c2f6         db  0x10 ; '.'
000000000001c2f7         db  0x42 ; 'B'
000000000001c2f8         db  0x0e ; '.'
000000000001c2f9         db  0x08 ; '.'
000000000001c2fa         db  0x44 ; 'D'
000000000001c2fb         db  0x0b ; '.'
000000000001c2fc         db  0x60 ; '`'
000000000001c2fd         db  0x0a ; '.'
000000000001c2fe         db  0x0e ; '.'
000000000001c2ff         db  0x18 ; '.'
000000000001c300         db  0x41 ; 'A'
000000000001c301         db  0x0e ; '.'
000000000001c302         db  0x10 ; '.'
000000000001c303         db  0x42 ; 'B'
000000000001c304         db  0x0e ; '.'
000000000001c305         db  0x08 ; '.'
000000000001c306         db  0x45 ; 'E'
000000000001c307         db  0x0b ; '.'
000000000001c308         dd         0x00000034                                  ; Length of the record
000000000001c30c         dd         0x000029ec                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c310         db         0xc0, 0x7c, 2 dup (0xff)                    ; begin 0x13fd0
000000000001c314         db         0x7e, 0x02, 2 dup (0x00)                    ; length 0x27e (end at 0x1424e)
000000000001c318         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c319         db  0x42 ; 'B'
000000000001c31a         db  0x0e ; '.'
000000000001c31b         db  0x10 ; '.'
000000000001c31c         db  0x8c ; '.'
000000000001c31d         db  0x02 ; '.'
000000000001c31e         db  0x41 ; 'A'
000000000001c31f         db  0x0e ; '.'
000000000001c320         db  0x18 ; '.'
000000000001c321         db  0x86 ; '.'
000000000001c322         db  0x03 ; '.'
000000000001c323         db  0x43 ; 'C'
000000000001c324         db  0x0e ; '.'
000000000001c325         db  0x20 ; ' '
000000000001c326         db  0x83 ; '.'
000000000001c327         db  0x04 ; '.'
000000000001c328         db  0x44 ; 'D'
000000000001c329         db  0x0e ; '.'
000000000001c32a         db  0x70 ; 'p'
000000000001c32b         db  0x02 ; '.'
000000000001c32c         db  0xf0 ; '.'
000000000001c32d         db  0x0a ; '.'
000000000001c32e         db  0x0e ; '.'
000000000001c32f         db  0x20 ; ' '
000000000001c330         db  0x41 ; 'A'
000000000001c331         db  0x0e ; '.'
000000000001c332         db  0x18 ; '.'
000000000001c333         db  0x41 ; 'A'
000000000001c334         db  0x0e ; '.'
000000000001c335         db  0x10 ; '.'
000000000001c336         db  0x42 ; 'B'
000000000001c337         db  0x0e ; '.'
000000000001c338         db  0x08 ; '.'
000000000001c339         db  0x42 ; 'B'
000000000001c33a         db  0x0b ; '.'
000000000001c33b         db  0x00 ; '.'
000000000001c33c         db  0x00 ; '.'
000000000001c33d         db  0x00 ; '.'
000000000001c33e         db  0x00 ; '.'
000000000001c33f         db  0x00 ; '.'
000000000001c340         dd         0x00000014                                  ; Length of the record
000000000001c344         dd         0x00002a24                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c348         db         0x08, 0x7f, 2 dup (0xff)                    ; begin 0x14250
000000000001c34c         db         0x04, 3 dup (0x00)                          ; length 0x4 (end at 0x14254)
000000000001c350         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c351         align      8
000000000001c358         dd         0x0000002c                                  ; Length of the record
000000000001c35c         dd         0x00002a3c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c360         db         0x00, 0x7f, 2 dup (0xff)                    ; begin 0x14260
000000000001c364         db         0x1f, 0x11, 2 dup (0x00)                    ; length 0x111f (end at 0x1537f)
000000000001c368         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c369         db  0x41 ; 'A'
000000000001c36a         db  0x0e ; '.'
000000000001c36b         db  0x10 ; '.'
000000000001c36c         db  0x86 ; '.'
000000000001c36d         db  0x02 ; '.'
000000000001c36e         db  0x43 ; 'C'
000000000001c36f         db  0x0d ; '.'
000000000001c370         db  0x06 ; '.'
000000000001c371         db  0x48 ; 'H'
000000000001c372         db  0x8f ; '.'
000000000001c373         db  0x03 ; '.'
000000000001c374         db  0x8e ; '.'
000000000001c375         db  0x04 ; '.'
000000000001c376         db  0x8d ; '.'
000000000001c377         db  0x05 ; '.'
000000000001c378         db  0x8c ; '.'
000000000001c379         db  0x06 ; '.'
000000000001c37a         db  0x48 ; 'H'
000000000001c37b         db  0x83 ; '.'
000000000001c37c         db  0x07 ; '.'
000000000001c37d         db  0x03 ; '.'
000000000001c37e         db  0xef ; '.'
000000000001c37f         db  0x01 ; '.'
000000000001c380         db  0x0a ; '.'
000000000001c381         db  0x0c ; '.'
000000000001c382         db  0x07 ; '.'
000000000001c383         db  0x08 ; '.'
000000000001c384         db  0x45 ; 'E'
000000000001c385         db  0x0b ; '.'
000000000001c386         db  0x00 ; '.'
000000000001c387         db  0x00 ; '.'
000000000001c388         dd         0x0000002c                                  ; Length of the record
000000000001c38c         dd         0x00002a6c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c390         db         0xf0, 0x8f, 2 dup (0xff)                    ; begin 0x15380
000000000001c394         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x15413)
000000000001c398         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c399         db  0x42 ; 'B'
000000000001c39a         db  0x0e ; '.'
000000000001c39b         db  0x10 ; '.'
000000000001c39c         db  0x8c ; '.'
000000000001c39d         db  0x02 ; '.'
000000000001c39e         db  0x41 ; 'A'
000000000001c39f         db  0x0e ; '.'
000000000001c3a0         db  0x18 ; '.'
000000000001c3a1         db  0x86 ; '.'
000000000001c3a2         db  0x03 ; '.'
000000000001c3a3         db  0x44 ; 'D'
000000000001c3a4         db  0x0e ; '.'
000000000001c3a5         db  0x20 ; ' '
000000000001c3a6         db  0x83 ; '.'
000000000001c3a7         db  0x04 ; '.'
000000000001c3a8         db  0x5e ; '^'
000000000001c3a9         db  0x0a ; '.'
000000000001c3aa         db  0x0e ; '.'
000000000001c3ab         db  0x18 ; '.'
000000000001c3ac         db  0x41 ; 'A'
000000000001c3ad         db  0x0e ; '.'
000000000001c3ae         db  0x10 ; '.'
000000000001c3af         db  0x42 ; 'B'
000000000001c3b0         db  0x0e ; '.'
000000000001c3b1         db  0x08 ; '.'
000000000001c3b2         db  0x48 ; 'H'
000000000001c3b3         db  0x0b ; '.'
000000000001c3b4         db  0x00 ; '.'
000000000001c3b5         db  0x00 ; '.'
000000000001c3b6         db  0x00 ; '.'
000000000001c3b7         db  0x00 ; '.'
000000000001c3b8         dd         0x00000014                                  ; Length of the record
000000000001c3bc         dd         0x00002a9c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c3c0         db         0x60, 0x90, 2 dup (0xff)                    ; begin 0x15420
000000000001c3c4         db         0xfe, 0x01, 2 dup (0x00)                    ; length 0x1fe (end at 0x1561e)
000000000001c3c8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c3c9         align      16
000000000001c3d0         dd         0x0000004c                                  ; Length of the record
000000000001c3d4         dd         0x00002ab4                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c3d8         db         0x48, 0x92, 2 dup (0xff)                    ; begin 0x15620
000000000001c3dc         db         0xec, 0x0c, 2 dup (0x00)                    ; length 0xcec (end at 0x1630c)
000000000001c3e0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c3e1         db  0x42 ; 'B'
000000000001c3e2         db  0x0e ; '.'
000000000001c3e3         db  0x10 ; '.'
000000000001c3e4         db  0x8f ; '.'
000000000001c3e5         db  0x02 ; '.'
000000000001c3e6         db  0x42 ; 'B'
000000000001c3e7         db  0x0e ; '.'
000000000001c3e8         db  0x18 ; '.'
000000000001c3e9         db  0x8e ; '.'
000000000001c3ea         db  0x03 ; '.'
000000000001c3eb         db  0x46 ; 'F'
000000000001c3ec         db  0x0e ; '.'
000000000001c3ed         db  0x20 ; ' '
000000000001c3ee         db  0x8d ; '.'
000000000001c3ef         db  0x04 ; '.'
000000000001c3f0         db  0x42 ; 'B'
000000000001c3f1         db  0x0e ; '.'
000000000001c3f2         db  0x28 ; '('
000000000001c3f3         db  0x8c ; '.'
000000000001c3f4         db  0x05 ; '.'
000000000001c3f5         db  0x45 ; 'E'
000000000001c3f6         db  0x0e ; '.'
000000000001c3f7         db  0x30 ; '0'
000000000001c3f8         db  0x86 ; '.'
000000000001c3f9         db  0x06 ; '.'
000000000001c3fa         db  0x41 ; 'A'
000000000001c3fb         db  0x0e ; '.'
000000000001c3fc         db  0x38 ; '8'
000000000001c3fd         db  0x83 ; '.'
000000000001c3fe         db  0x07 ; '.'
000000000001c3ff         db  0x52 ; 'R'
000000000001c400         db  0x0e ; '.'
000000000001c401         db  0x90 ; '.'
000000000001c402         db  0x01 ; '.'
000000000001c403         db  0x02 ; '.'
000000000001c404         db  0x82 ; '.'
000000000001c405         db  0x0a ; '.'
000000000001c406         db  0x0e ; '.'
000000000001c407         db  0x38 ; '8'
000000000001c408         db  0x41 ; 'A'
000000000001c409         db  0x0e ; '.'
000000000001c40a         db  0x30 ; '0'
000000000001c40b         db  0x41 ; 'A'
000000000001c40c         db  0x0e ; '.'
000000000001c40d         db  0x28 ; '('
000000000001c40e         db  0x42 ; 'B'
000000000001c40f         db  0x0e ; '.'
000000000001c410         db  0x20 ; ' '
000000000001c411         db  0x42 ; 'B'
000000000001c412         db  0x0e ; '.'
000000000001c413         db  0x18 ; '.'
000000000001c414         db  0x42 ; 'B'
000000000001c415         db  0x0e ; '.'
000000000001c416         db  0x10 ; '.'
000000000001c417         db  0x42 ; 'B'
000000000001c418         db  0x0e ; '.'
000000000001c419         db  0x08 ; '.'
000000000001c41a         db  0x48 ; 'H'
000000000001c41b         db  0x0b ; '.'
000000000001c41c         db  0x00 ; '.'
000000000001c41d         db  0x00 ; '.'
000000000001c41e         db  0x00 ; '.'
000000000001c41f         db  0x00 ; '.'
000000000001c420         dd         0x00000044                                  ; Length of the record
000000000001c424         dd         0x00002b04                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c428         db         0xe8, 0x9e, 2 dup (0xff)                    ; begin 0x16310
000000000001c42c         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x16375)
000000000001c430         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c431         db  0x42 ; 'B'
000000000001c432         db  0x0e ; '.'
000000000001c433         db  0x10 ; '.'
000000000001c434         db  0x8f ; '.'
000000000001c435         db  0x02 ; '.'
000000000001c436         db  0x42 ; 'B'
000000000001c437         db  0x0e ; '.'
000000000001c438         db  0x18 ; '.'
000000000001c439         db  0x8e ; '.'
000000000001c43a         db  0x03 ; '.'
000000000001c43b         db  0x45 ; 'E'
000000000001c43c         db  0x0e ; '.'
000000000001c43d         db  0x20 ; ' '
000000000001c43e         db  0x8d ; '.'
000000000001c43f         db  0x04 ; '.'
000000000001c440         db  0x42 ; 'B'
000000000001c441         db  0x0e ; '.'
000000000001c442         db  0x28 ; '('
000000000001c443         db  0x8c ; '.'
000000000001c444         db  0x05 ; '.'
000000000001c445         db  0x48 ; 'H'
000000000001c446         db  0x0e ; '.'
000000000001c447         db  0x30 ; '0'
000000000001c448         db  0x86 ; '.'
000000000001c449         db  0x06 ; '.'
000000000001c44a         db  0x48 ; 'H'
000000000001c44b         db  0x0e ; '.'
000000000001c44c         db  0x38 ; '8'
000000000001c44d         db  0x83 ; '.'
000000000001c44e         db  0x07 ; '.'
000000000001c44f         db  0x4d ; 'M'
000000000001c450         db  0x0e ; '.'
000000000001c451         db  0x40 ; '@'
000000000001c452         db  0x72 ; 'r'
000000000001c453         db  0x0e ; '.'
000000000001c454         db  0x38 ; '8'
000000000001c455         db  0x41 ; 'A'
000000000001c456         db  0x0e ; '.'
000000000001c457         db  0x30 ; '0'
000000000001c458         db  0x41 ; 'A'
000000000001c459         db  0x0e ; '.'
000000000001c45a         db  0x28 ; '('
000000000001c45b         db  0x42 ; 'B'
000000000001c45c         db  0x0e ; '.'
000000000001c45d         db  0x20 ; ' '
000000000001c45e         db  0x42 ; 'B'
000000000001c45f         db  0x0e ; '.'
000000000001c460         db  0x18 ; '.'
000000000001c461         db  0x42 ; 'B'
000000000001c462         db  0x0e ; '.'
000000000001c463         db  0x10 ; '.'
000000000001c464         db  0x42 ; 'B'
000000000001c465         db  0x0e ; '.'
000000000001c466         db  0x08 ; '.'
000000000001c467         db  0x00 ; '.'
000000000001c468         dd         0x00000014                                  ; Length of the record
000000000001c46c         dd         0x00002b4c                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c470         db         0x10, 0x9f, 2 dup (0xff)                    ; begin 0x16380
000000000001c474         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x16382)
000000000001c478         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c479         align      128
000000000001c480         dd         0x00000010                                  ; Length of the record
000000000001c484         dd         0x00002b64                                  ; FDE: parent CIE at 0x19920 (FDE encoding = 0x1B)
000000000001c488         db         0x08, 0x9f, 2 dup (0xff)                    ; begin 0x16390
000000000001c48c         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x1639e)
000000000001c490         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c491         align      8


        ; Segment Segment 3
        ; Range: [0x21c6b0; 0x21f738[ (12424 bytes)
        ; File offset : [116400; 118984[ (2584 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x21c6b0; 0x21c6b8[ (8 bytes)
        ; File offset : [116400; 116408[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
000000000021c6b0         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x21c6b8; 0x21c6c0[ (8 bytes)
        ; File offset : [116408; 116416[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
000000000021c6b8         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x21c6c0; 0x21c9d8[ (792 bytes)
        ; File offset : [116416; 117208[ (792 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     long_options:
000000000021c6c0         db  0x04 ; '.'                                         ; DATA XREF=main+11
000000000021c6c1         db  0x66 ; 'f'
000000000021c6c2         db  0x01 ; '.'
000000000021c6c3         db  0x00 ; '.'
000000000021c6c4         db  0x00 ; '.'
000000000021c6c5         db  0x00 ; '.'
000000000021c6c6         db  0x00 ; '.'
000000000021c6c7         db  0x00 ; '.'
000000000021c6c8         db  0x02 ; '.'
000000000021c6c9         db  0x00 ; '.'
000000000021c6ca         db  0x00 ; '.'
000000000021c6cb         db  0x00 ; '.'
000000000021c6cc         db  0x00 ; '.'
000000000021c6cd         db  0x00 ; '.'
000000000021c6ce         db  0x00 ; '.'
000000000021c6cf         db  0x00 ; '.'
000000000021c6d0         db  0x00 ; '.'
000000000021c6d1         db  0x00 ; '.'
000000000021c6d2         db  0x00 ; '.'
000000000021c6d3         db  0x00 ; '.'
000000000021c6d4         db  0x00 ; '.'
000000000021c6d5         db  0x00 ; '.'
000000000021c6d6         db  0x00 ; '.'
000000000021c6d7         db  0x00 ; '.'
000000000021c6d8         db  0x62 ; 'b'
000000000021c6d9         db  0x00 ; '.'
000000000021c6da         db  0x00 ; '.'
000000000021c6db         db  0x00 ; '.'
000000000021c6dc         db  0x00 ; '.'
000000000021c6dd         db  0x00 ; '.'
000000000021c6de         db  0x00 ; '.'
000000000021c6df         db  0x00 ; '.'
000000000021c6e0         db  0x0b ; '.'
000000000021c6e1         db  0x66 ; 'f'
000000000021c6e2         db  0x01 ; '.'
000000000021c6e3         db  0x00 ; '.'
000000000021c6e4         db  0x00 ; '.'
000000000021c6e5         db  0x00 ; '.'
000000000021c6e6         db  0x00 ; '.'
000000000021c6e7         db  0x00 ; '.'
000000000021c6e8         db  0x00 ; '.'
000000000021c6e9         db  0x00 ; '.'
000000000021c6ea         db  0x00 ; '.'
000000000021c6eb         db  0x00 ; '.'
000000000021c6ec         db  0x00 ; '.'
000000000021c6ed         db  0x00 ; '.'
000000000021c6ee         db  0x00 ; '.'
000000000021c6ef         db  0x00 ; '.'
000000000021c6f0         db  0x00 ; '.'
000000000021c6f1         db  0x00 ; '.'
000000000021c6f2         db  0x00 ; '.'
000000000021c6f3         db  0x00 ; '.'
000000000021c6f4         db  0x00 ; '.'
000000000021c6f5         db  0x00 ; '.'
000000000021c6f6         db  0x00 ; '.'
000000000021c6f7         db  0x00 ; '.'
000000000021c6f8         db  0x43 ; 'C'
000000000021c6f9         db  0x00 ; '.'
000000000021c6fa         db  0x00 ; '.'
000000000021c6fb         db  0x00 ; '.'
000000000021c6fc         db  0x00 ; '.'
000000000021c6fd         db  0x00 ; '.'
000000000021c6fe         db  0x00 ; '.'
000000000021c6ff         db  0x00 ; '.'
000000000021c700         db  0x55 ; 'U'
000000000021c701         db  0x66 ; 'f'
000000000021c702         db  0x01 ; '.'
000000000021c703         db  0x00 ; '.'
000000000021c704         db  0x00 ; '.'
000000000021c705         db  0x00 ; '.'
000000000021c706         db  0x00 ; '.'
000000000021c707         db  0x00 ; '.'
000000000021c708         db  0x02 ; '.'
000000000021c709         db  0x00 ; '.'
000000000021c70a         db  0x00 ; '.'
000000000021c70b         db  0x00 ; '.'
000000000021c70c         db  0x00 ; '.'
000000000021c70d         db  0x00 ; '.'
000000000021c70e         db  0x00 ; '.'
000000000021c70f         db  0x00 ; '.'
000000000021c710         db  0x00 ; '.'
000000000021c711         db  0x00 ; '.'
000000000021c712         db  0x00 ; '.'
000000000021c713         db  0x00 ; '.'
000000000021c714         db  0x00 ; '.'
000000000021c715         db  0x00 ; '.'
000000000021c716         db  0x00 ; '.'
000000000021c717         db  0x00 ; '.'
000000000021c718         db  0x5a ; 'Z'
000000000021c719         db  0x00 ; '.'
000000000021c71a         db  0x00 ; '.'
000000000021c71b         db  0x00 ; '.'
000000000021c71c         db  0x00 ; '.'
000000000021c71d         db  0x00 ; '.'
000000000021c71e         db  0x00 ; '.'
000000000021c71f         db  0x00 ; '.'
000000000021c720         db  0x97 ; '.'
000000000021c721         db  0x65 ; 'e'
000000000021c722         db  0x01 ; '.'
000000000021c723         db  0x00 ; '.'
000000000021c724         db  0x00 ; '.'
000000000021c725         db  0x00 ; '.'
000000000021c726         db  0x00 ; '.'
000000000021c727         db  0x00 ; '.'
000000000021c728         db  0x00 ; '.'
000000000021c729         db  0x00 ; '.'
000000000021c72a         db  0x00 ; '.'
000000000021c72b         db  0x00 ; '.'
000000000021c72c         db  0x00 ; '.'
000000000021c72d         db  0x00 ; '.'
000000000021c72e         db  0x00 ; '.'
000000000021c72f         db  0x00 ; '.'
000000000021c730         db  0x00 ; '.'
000000000021c731         db  0x00 ; '.'
000000000021c732         db  0x00 ; '.'
000000000021c733         db  0x00 ; '.'
000000000021c734         db  0x00 ; '.'
000000000021c735         db  0x00 ; '.'
000000000021c736         db  0x00 ; '.'
000000000021c737         db  0x00 ; '.'
000000000021c738         db  0x64 ; 'd'
000000000021c739         db  0x00 ; '.'
000000000021c73a         db  0x00 ; '.'
000000000021c73b         db  0x00 ; '.'
000000000021c73c         db  0x00 ; '.'
000000000021c73d         db  0x00 ; '.'
000000000021c73e         db  0x00 ; '.'
000000000021c73f         db  0x00 ; '.'
000000000021c740         db  0x13 ; '.'
000000000021c741         db  0x66 ; 'f'
000000000021c742         db  0x01 ; '.'
000000000021c743         db  0x00 ; '.'
000000000021c744         db  0x00 ; '.'
000000000021c745         db  0x00 ; '.'
000000000021c746         db  0x00 ; '.'
000000000021c747         db  0x00 ; '.'
000000000021c748         db  0x01 ; '.'
000000000021c749         db  0x00 ; '.'
000000000021c74a         db  0x00 ; '.'
000000000021c74b         db  0x00 ; '.'
000000000021c74c         db  0x00 ; '.'
000000000021c74d         db  0x00 ; '.'
000000000021c74e         db  0x00 ; '.'
000000000021c74f         db  0x00 ; '.'
000000000021c750         db  0x00 ; '.'
000000000021c751         db  0x00 ; '.'
000000000021c752         db  0x00 ; '.'
000000000021c753         db  0x00 ; '.'
000000000021c754         db  0x00 ; '.'
000000000021c755         db  0x00 ; '.'
000000000021c756         db  0x00 ; '.'
000000000021c757         db  0x00 ; '.'
000000000021c758         db  0x67 ; 'g'
000000000021c759         db  0x00 ; '.'
000000000021c75a         db  0x00 ; '.'
000000000021c75b         db  0x00 ; '.'
000000000021c75c         db  0x00 ; '.'
000000000021c75d         db  0x00 ; '.'
000000000021c75e         db  0x00 ; '.'
000000000021c75f         db  0x00 ; '.'
000000000021c760         db  0x19 ; '.'
000000000021c761         db  0x66 ; 'f'
000000000021c762         db  0x01 ; '.'
000000000021c763         db  0x00 ; '.'
000000000021c764         db  0x00 ; '.'
000000000021c765         db  0x00 ; '.'
000000000021c766         db  0x00 ; '.'
000000000021c767         db  0x00 ; '.'
000000000021c768         db  0x01 ; '.'
000000000021c769         db  0x00 ; '.'
000000000021c76a         db  0x00 ; '.'
000000000021c76b         db  0x00 ; '.'
000000000021c76c         db  0x00 ; '.'
000000000021c76d         db  0x00 ; '.'
000000000021c76e         db  0x00 ; '.'
000000000021c76f         db  0x00 ; '.'
000000000021c770         db  0x00 ; '.'
000000000021c771         db  0x00 ; '.'
000000000021c772         db  0x00 ; '.'
000000000021c773         db  0x00 ; '.'
000000000021c774         db  0x00 ; '.'
000000000021c775         db  0x00 ; '.'
000000000021c776         db  0x00 ; '.'
000000000021c777         db  0x00 ; '.'
000000000021c778         db  0x6d ; 'm'
000000000021c779         db  0x00 ; '.'
000000000021c77a         db  0x00 ; '.'
000000000021c77b         db  0x00 ; '.'
000000000021c77c         db  0x00 ; '.'
000000000021c77d         db  0x00 ; '.'
000000000021c77e         db  0x00 ; '.'
000000000021c77f         db  0x00 ; '.'
000000000021c780         db  0x1e ; '.'
000000000021c781         db  0x66 ; 'f'
000000000021c782         db  0x01 ; '.'
000000000021c783         db  0x00 ; '.'
000000000021c784         db  0x00 ; '.'
000000000021c785         db  0x00 ; '.'
000000000021c786         db  0x00 ; '.'
000000000021c787         db  0x00 ; '.'
000000000021c788         db  0x00 ; '.'
000000000021c789         db  0x00 ; '.'
000000000021c78a         db  0x00 ; '.'
000000000021c78b         db  0x00 ; '.'
000000000021c78c         db  0x00 ; '.'
000000000021c78d         db  0x00 ; '.'
000000000021c78e         db  0x00 ; '.'
000000000021c78f         db  0x00 ; '.'
000000000021c790         db  0x00 ; '.'
000000000021c791         db  0x00 ; '.'
000000000021c792         db  0x00 ; '.'
000000000021c793         db  0x00 ; '.'
000000000021c794         db  0x00 ; '.'
000000000021c795         db  0x00 ; '.'
000000000021c796         db  0x00 ; '.'
000000000021c797         db  0x00 ; '.'
000000000021c798         db  0x54 ; 'T'
000000000021c799         db  0x00 ; '.'
000000000021c79a         db  0x00 ; '.'
000000000021c79b         db  0x00 ; '.'
000000000021c79c         db  0x00 ; '.'
000000000021c79d         db  0x00 ; '.'
000000000021c79e         db  0x00 ; '.'
000000000021c79f         db  0x00 ; '.'
000000000021c7a0         db  0x32 ; '2'
000000000021c7a1         db  0x66 ; 'f'
000000000021c7a2         db  0x01 ; '.'
000000000021c7a3         db  0x00 ; '.'
000000000021c7a4         db  0x00 ; '.'
000000000021c7a5         db  0x00 ; '.'
000000000021c7a6         db  0x00 ; '.'
000000000021c7a7         db  0x00 ; '.'
000000000021c7a8         db  0x01 ; '.'
000000000021c7a9         db  0x00 ; '.'
000000000021c7aa         db  0x00 ; '.'
000000000021c7ab         db  0x00 ; '.'
000000000021c7ac         db  0x00 ; '.'
000000000021c7ad         db  0x00 ; '.'
000000000021c7ae         db  0x00 ; '.'
000000000021c7af         db  0x00 ; '.'
000000000021c7b0         db  0x00 ; '.'
000000000021c7b1         db  0x00 ; '.'
000000000021c7b2         db  0x00 ; '.'
000000000021c7b3         db  0x00 ; '.'
000000000021c7b4         db  0x00 ; '.'
000000000021c7b5         db  0x00 ; '.'
000000000021c7b6         db  0x00 ; '.'
000000000021c7b7         db  0x00 ; '.'
000000000021c7b8         db  0x6f ; 'o'
000000000021c7b9         db  0x00 ; '.'
000000000021c7ba         db  0x00 ; '.'
000000000021c7bb         db  0x00 ; '.'
000000000021c7bc         db  0x00 ; '.'
000000000021c7bd         db  0x00 ; '.'
000000000021c7be         db  0x00 ; '.'
000000000021c7bf         db  0x00 ; '.'
000000000021c7c0         db  0x38 ; '8'
000000000021c7c1         db  0x66 ; 'f'
000000000021c7c2         db  0x01 ; '.'
000000000021c7c3         db  0x00 ; '.'
000000000021c7c4         db  0x00 ; '.'
000000000021c7c5         db  0x00 ; '.'
000000000021c7c6         db  0x00 ; '.'
000000000021c7c7         db  0x00 ; '.'
000000000021c7c8         db  0x00 ; '.'
000000000021c7c9         db  0x00 ; '.'
000000000021c7ca         db  0x00 ; '.'
000000000021c7cb         db  0x00 ; '.'
000000000021c7cc         db  0x00 ; '.'
000000000021c7cd         db  0x00 ; '.'
000000000021c7ce         db  0x00 ; '.'
000000000021c7cf         db  0x00 ; '.'
000000000021c7d0         db  0x00 ; '.'
000000000021c7d1         db  0x00 ; '.'
000000000021c7d2         db  0x00 ; '.'
000000000021c7d3         db  0x00 ; '.'
000000000021c7d4         db  0x00 ; '.'
000000000021c7d5         db  0x00 ; '.'
000000000021c7d6         db  0x00 ; '.'
000000000021c7d7         db  0x00 ; '.'
000000000021c7d8         db  0x70 ; 'p'
000000000021c7d9         db  0x00 ; '.'
000000000021c7da         db  0x00 ; '.'
000000000021c7db         db  0x00 ; '.'
000000000021c7dc         db  0x00 ; '.'
000000000021c7dd         db  0x00 ; '.'
000000000021c7de         db  0x00 ; '.'
000000000021c7df         db  0x00 ; '.'
000000000021c7e0         db  0x4c ; 'L'
000000000021c7e1         db  0x66 ; 'f'
000000000021c7e2         db  0x01 ; '.'
000000000021c7e3         db  0x00 ; '.'
000000000021c7e4         db  0x00 ; '.'
000000000021c7e5         db  0x00 ; '.'
000000000021c7e6         db  0x00 ; '.'
000000000021c7e7         db  0x00 ; '.'
000000000021c7e8         db  0x00 ; '.'
000000000021c7e9         db  0x00 ; '.'
000000000021c7ea         db  0x00 ; '.'
000000000021c7eb         db  0x00 ; '.'
000000000021c7ec         db  0x00 ; '.'
000000000021c7ed         db  0x00 ; '.'
000000000021c7ee         db  0x00 ; '.'
000000000021c7ef         db  0x00 ; '.'
000000000021c7f0         db  0x00 ; '.'
000000000021c7f1         db  0x00 ; '.'
000000000021c7f2         db  0x00 ; '.'
000000000021c7f3         db  0x00 ; '.'
000000000021c7f4         db  0x00 ; '.'
000000000021c7f5         db  0x00 ; '.'
000000000021c7f6         db  0x00 ; '.'
000000000021c7f7         db  0x00 ; '.'
000000000021c7f8         db  0x80 ; '.'
000000000021c7f9         db  0x00 ; '.'
000000000021c7fa         db  0x00 ; '.'
000000000021c7fb         db  0x00 ; '.'
000000000021c7fc         db  0x00 ; '.'
000000000021c7fd         db  0x00 ; '.'
000000000021c7fe         db  0x00 ; '.'
000000000021c7ff         db  0x00 ; '.'
000000000021c800         db  0x36 ; '6'
000000000021c801         db  0x64 ; 'd'
000000000021c802         db  0x01 ; '.'
000000000021c803         db  0x00 ; '.'
000000000021c804         db  0x00 ; '.'
000000000021c805         db  0x00 ; '.'
000000000021c806         db  0x00 ; '.'
000000000021c807         db  0x00 ; '.'
000000000021c808         db  0x00 ; '.'
000000000021c809         db  0x00 ; '.'
000000000021c80a         db  0x00 ; '.'
000000000021c80b         db  0x00 ; '.'
000000000021c80c         db  0x00 ; '.'
000000000021c80d         db  0x00 ; '.'
000000000021c80e         db  0x00 ; '.'
000000000021c80f         db  0x00 ; '.'
000000000021c810         db  0x00 ; '.'
000000000021c811         db  0x00 ; '.'
000000000021c812         db  0x00 ; '.'
000000000021c813         db  0x00 ; '.'
000000000021c814         db  0x00 ; '.'
000000000021c815         db  0x00 ; '.'
000000000021c816         db  0x00 ; '.'
000000000021c817         db  0x00 ; '.'
000000000021c818         db  0x73 ; 's'
000000000021c819         db  0x00 ; '.'
000000000021c81a         db  0x00 ; '.'
000000000021c81b         db  0x00 ; '.'
000000000021c81c         db  0x00 ; '.'
000000000021c81d         db  0x00 ; '.'
000000000021c81e         db  0x00 ; '.'
000000000021c81f         db  0x00 ; '.'
000000000021c820         db  0x5d ; ']'
000000000021c821         db  0x66 ; 'f'
000000000021c822         db  0x01 ; '.'
000000000021c823         db  0x00 ; '.'
000000000021c824         db  0x00 ; '.'
000000000021c825         db  0x00 ; '.'
000000000021c826         db  0x00 ; '.'
000000000021c827         db  0x00 ; '.'
000000000021c828         db  0x01 ; '.'
000000000021c829         db  0x00 ; '.'
000000000021c82a         db  0x00 ; '.'
000000000021c82b         db  0x00 ; '.'
000000000021c82c         db  0x00 ; '.'
000000000021c82d         db  0x00 ; '.'
000000000021c82e         db  0x00 ; '.'
000000000021c82f         db  0x00 ; '.'
000000000021c830         db  0x00 ; '.'
000000000021c831         db  0x00 ; '.'
000000000021c832         db  0x00 ; '.'
000000000021c833         db  0x00 ; '.'
000000000021c834         db  0x00 ; '.'
000000000021c835         db  0x00 ; '.'
000000000021c836         db  0x00 ; '.'
000000000021c837         db  0x00 ; '.'
000000000021c838         db  0x81 ; '.'
000000000021c839         db  0x00 ; '.'
000000000021c83a         db  0x00 ; '.'
000000000021c83b         db  0x00 ; '.'
000000000021c83c         db  0x00 ; '.'
000000000021c83d         db  0x00 ; '.'
000000000021c83e         db  0x00 ; '.'
000000000021c83f         db  0x00 ; '.'
000000000021c840         db  0x6b ; 'k'
000000000021c841         db  0x66 ; 'f'
000000000021c842         db  0x01 ; '.'
000000000021c843         db  0x00 ; '.'
000000000021c844         db  0x00 ; '.'
000000000021c845         db  0x00 ; '.'
000000000021c846         db  0x00 ; '.'
000000000021c847         db  0x00 ; '.'
000000000021c848         db  0x01 ; '.'
000000000021c849         db  0x00 ; '.'
000000000021c84a         db  0x00 ; '.'
000000000021c84b         db  0x00 ; '.'
000000000021c84c         db  0x00 ; '.'
000000000021c84d         db  0x00 ; '.'
000000000021c84e         db  0x00 ; '.'
000000000021c84f         db  0x00 ; '.'
000000000021c850         db  0x00 ; '.'
000000000021c851         db  0x00 ; '.'
000000000021c852         db  0x00 ; '.'
000000000021c853         db  0x00 ; '.'
000000000021c854         db  0x00 ; '.'
000000000021c855         db  0x00 ; '.'
000000000021c856         db  0x00 ; '.'
000000000021c857         db  0x00 ; '.'
000000000021c858         db  0x53 ; 'S'
000000000021c859         db  0x00 ; '.'
000000000021c85a         db  0x00 ; '.'
000000000021c85b         db  0x00 ; '.'
000000000021c85c         db  0x00 ; '.'
000000000021c85d         db  0x00 ; '.'
000000000021c85e         db  0x00 ; '.'
000000000021c85f         db  0x00 ; '.'
000000000021c860         db  0x21 ; '!'
000000000021c861         db  0x66 ; 'f'
000000000021c862         db  0x01 ; '.'
000000000021c863         db  0x00 ; '.'
000000000021c864         db  0x00 ; '.'
000000000021c865         db  0x00 ; '.'
000000000021c866         db  0x00 ; '.'
000000000021c867         db  0x00 ; '.'
000000000021c868         db  0x01 ; '.'
000000000021c869         db  0x00 ; '.'
000000000021c86a         db  0x00 ; '.'
000000000021c86b         db  0x00 ; '.'
000000000021c86c         db  0x00 ; '.'
000000000021c86d         db  0x00 ; '.'
000000000021c86e         db  0x00 ; '.'
000000000021c86f         db  0x00 ; '.'
000000000021c870         db  0x00 ; '.'
000000000021c871         db  0x00 ; '.'
000000000021c872         db  0x00 ; '.'
000000000021c873         db  0x00 ; '.'
000000000021c874         db  0x00 ; '.'
000000000021c875         db  0x00 ; '.'
000000000021c876         db  0x00 ; '.'
000000000021c877         db  0x00 ; '.'
000000000021c878         db  0x74 ; 't'
000000000021c879         db  0x00 ; '.'
000000000021c87a         db  0x00 ; '.'
000000000021c87b         db  0x00 ; '.'
000000000021c87c         db  0x00 ; '.'
000000000021c87d         db  0x00 ; '.'
000000000021c87e         db  0x00 ; '.'
000000000021c87f         db  0x00 ; '.'
000000000021c880         db  0x72 ; 'r'
000000000021c881         db  0x66 ; 'f'
000000000021c882         db  0x01 ; '.'
000000000021c883         db  0x00 ; '.'
000000000021c884         db  0x00 ; '.'
000000000021c885         db  0x00 ; '.'
000000000021c886         db  0x00 ; '.'
000000000021c887         db  0x00 ; '.'
000000000021c888         db  0x00 ; '.'
000000000021c889         db  0x00 ; '.'
000000000021c88a         db  0x00 ; '.'
000000000021c88b         db  0x00 ; '.'
000000000021c88c         db  0x00 ; '.'
000000000021c88d         db  0x00 ; '.'
000000000021c88e         db  0x00 ; '.'
000000000021c88f         db  0x00 ; '.'
000000000021c890         db  0x00 ; '.'
000000000021c891         db  0x00 ; '.'
000000000021c892         db  0x00 ; '.'
000000000021c893         db  0x00 ; '.'
000000000021c894         db  0x00 ; '.'
000000000021c895         db  0x00 ; '.'
000000000021c896         db  0x00 ; '.'
000000000021c897         db  0x00 ; '.'
000000000021c898         db  0x76 ; 'v'
000000000021c899         db  0x00 ; '.'
000000000021c89a         db  0x00 ; '.'
000000000021c89b         db  0x00 ; '.'
000000000021c89c         db  0x00 ; '.'
000000000021c89d         db  0x00 ; '.'
000000000021c89e         db  0x00 ; '.'
000000000021c89f         db  0x00 ; '.'
000000000021c8a0         db  0x7a ; 'z'
000000000021c8a1         db  0x66 ; 'f'
000000000021c8a2         db  0x01 ; '.'
000000000021c8a3         db  0x00 ; '.'
000000000021c8a4         db  0x00 ; '.'
000000000021c8a5         db  0x00 ; '.'
000000000021c8a6         db  0x00 ; '.'
000000000021c8a7         db  0x00 ; '.'
000000000021c8a8         db  0x00 ; '.'
000000000021c8a9         db  0x00 ; '.'
000000000021c8aa         db  0x00 ; '.'
000000000021c8ab         db  0x00 ; '.'
000000000021c8ac         db  0x00 ; '.'
000000000021c8ad         db  0x00 ; '.'
000000000021c8ae         db  0x00 ; '.'
000000000021c8af         db  0x00 ; '.'
000000000021c8b0         db  0x00 ; '.'
000000000021c8b1         db  0x00 ; '.'
000000000021c8b2         db  0x00 ; '.'
000000000021c8b3         db  0x00 ; '.'
000000000021c8b4         db  0x00 ; '.'
000000000021c8b5         db  0x00 ; '.'
000000000021c8b6         db  0x00 ; '.'
000000000021c8b7         db  0x00 ; '.'
000000000021c8b8         db  0x7e ; '~'
000000000021c8b9         db  0xff ; '.'
000000000021c8ba         db  0xff ; '.'
000000000021c8bb         db  0xff ; '.'
000000000021c8bc         db  0x00 ; '.'
000000000021c8bd         db  0x00 ; '.'
000000000021c8be         db  0x00 ; '.'
000000000021c8bf         db  0x00 ; '.'
000000000021c8c0         db  0x7f ; '.'
000000000021c8c1         db  0x66 ; 'f'
000000000021c8c2         db  0x01 ; '.'
000000000021c8c3         db  0x00 ; '.'
000000000021c8c4         db  0x00 ; '.'
000000000021c8c5         db  0x00 ; '.'
000000000021c8c6         db  0x00 ; '.'
000000000021c8c7         db  0x00 ; '.'
000000000021c8c8         db  0x00 ; '.'
000000000021c8c9         db  0x00 ; '.'
000000000021c8ca         db  0x00 ; '.'
000000000021c8cb         db  0x00 ; '.'
000000000021c8cc         db  0x00 ; '.'
000000000021c8cd         db  0x00 ; '.'
000000000021c8ce         db  0x00 ; '.'
000000000021c8cf         db  0x00 ; '.'
000000000021c8d0         db  0x00 ; '.'
000000000021c8d1         db  0x00 ; '.'
000000000021c8d2         db  0x00 ; '.'
000000000021c8d3         db  0x00 ; '.'
000000000021c8d4         db  0x00 ; '.'
000000000021c8d5         db  0x00 ; '.'
000000000021c8d6         db  0x00 ; '.'
000000000021c8d7         db  0x00 ; '.'
000000000021c8d8         db  0x7d ; '}'
000000000021c8d9         db  0xff ; '.'
000000000021c8da         db  0xff ; '.'
000000000021c8db         db  0xff ; '.'
000000000021c8dc         db  0x00 ; '.'
000000000021c8dd         db  0x00 ; '.'
000000000021c8de         db  0x00 ; '.'
000000000021c8df         db  0x00 ; '.'
000000000021c8e0         db  0x00 ; '.'
000000000021c8e1         db  0x00 ; '.'
000000000021c8e2         db  0x00 ; '.'
000000000021c8e3         db  0x00 ; '.'
000000000021c8e4         db  0x00 ; '.'
000000000021c8e5         db  0x00 ; '.'
000000000021c8e6         db  0x00 ; '.'
000000000021c8e7         db  0x00 ; '.'
000000000021c8e8         db  0x00 ; '.'
000000000021c8e9         db  0x00 ; '.'
000000000021c8ea         db  0x00 ; '.'
000000000021c8eb         db  0x00 ; '.'
000000000021c8ec         db  0x00 ; '.'
000000000021c8ed         db  0x00 ; '.'
000000000021c8ee         db  0x00 ; '.'
000000000021c8ef         db  0x00 ; '.'
000000000021c8f0         db  0x00 ; '.'
000000000021c8f1         db  0x00 ; '.'
000000000021c8f2         db  0x00 ; '.'
000000000021c8f3         db  0x00 ; '.'
000000000021c8f4         db  0x00 ; '.'
000000000021c8f5         db  0x00 ; '.'
000000000021c8f6         db  0x00 ; '.'
000000000021c8f7         db  0x00 ; '.'
000000000021c8f8         db  0x00 ; '.'
000000000021c8f9         db  0x00 ; '.'
000000000021c8fa         db  0x00 ; '.'
000000000021c8fb         db  0x00 ; '.'
000000000021c8fc         db  0x00 ; '.'
000000000021c8fd         db  0x00 ; '.'
000000000021c8fe         db  0x00 ; '.'
000000000021c8ff         db  0x00 ; '.'
                     backup_args:
000000000021c900         db  0xee ; '.'                                         ; DATA XREF=get_version.part.0+11
000000000021c901         db  0x80 ; '.'
000000000021c902         db  0x01 ; '.'
000000000021c903         db  0x00 ; '.'
000000000021c904         db  0x00 ; '.'
000000000021c905         db  0x00 ; '.'
000000000021c906         db  0x00 ; '.'
000000000021c907         db  0x00 ; '.'
000000000021c908         db  0xf3 ; '.'
000000000021c909         db  0x80 ; '.'
000000000021c90a         db  0x01 ; '.'
000000000021c90b         db  0x00 ; '.'
000000000021c90c         db  0x00 ; '.'
000000000021c90d         db  0x00 ; '.'
000000000021c90e         db  0x00 ; '.'
000000000021c90f         db  0x00 ; '.'
000000000021c910         db  0xf7 ; '.'
000000000021c911         db  0x80 ; '.'
000000000021c912         db  0x01 ; '.'
000000000021c913         db  0x00 ; '.'
000000000021c914         db  0x00 ; '.'
000000000021c915         db  0x00 ; '.'
000000000021c916         db  0x00 ; '.'
000000000021c917         db  0x00 ; '.'
000000000021c918         db  0xfe ; '.'
000000000021c919         db  0x80 ; '.'
000000000021c91a         db  0x01 ; '.'
000000000021c91b         db  0x00 ; '.'
000000000021c91c         db  0x00 ; '.'
000000000021c91d         db  0x00 ; '.'
000000000021c91e         db  0x00 ; '.'
000000000021c91f         db  0x00 ; '.'
000000000021c920         db  0x04 ; '.'
000000000021c921         db  0x81 ; '.'
000000000021c922         db  0x01 ; '.'
000000000021c923         db  0x00 ; '.'
000000000021c924         db  0x00 ; '.'
000000000021c925         db  0x00 ; '.'
000000000021c926         db  0x00 ; '.'
000000000021c927         db  0x00 ; '.'
000000000021c928         db  0x0d ; '.'
000000000021c929         db  0x81 ; '.'
000000000021c92a         db  0x01 ; '.'
000000000021c92b         db  0x00 ; '.'
000000000021c92c         db  0x00 ; '.'
000000000021c92d         db  0x00 ; '.'
000000000021c92e         db  0x00 ; '.'
000000000021c92f         db  0x00 ; '.'
000000000021c930         db  0x11 ; '.'
000000000021c931         db  0x81 ; '.'
000000000021c932         db  0x01 ; '.'
000000000021c933         db  0x00 ; '.'
000000000021c934         db  0x00 ; '.'
000000000021c935         db  0x00 ; '.'
000000000021c936         db  0x00 ; '.'
000000000021c937         db  0x00 ; '.'
000000000021c938         db  0x5b ; '['
000000000021c939         db  0x66 ; 'f'
000000000021c93a         db  0x01 ; '.'
000000000021c93b         db  0x00 ; '.'
000000000021c93c         db  0x00 ; '.'
000000000021c93d         db  0x00 ; '.'
000000000021c93e         db  0x00 ; '.'
000000000021c93f         db  0x00 ; '.'
000000000021c940         db  0x00 ; '.'
000000000021c941         db  0x00 ; '.'
000000000021c942         db  0x00 ; '.'
000000000021c943         db  0x00 ; '.'
000000000021c944         db  0x00 ; '.'
000000000021c945         db  0x00 ; '.'
000000000021c946         db  0x00 ; '.'
000000000021c947         db  0x00 ; '.'
000000000021c948         db  0x00 ; '.'
000000000021c949         db  0x00 ; '.'
000000000021c94a         db  0x00 ; '.'
000000000021c94b         db  0x00 ; '.'
000000000021c94c         db  0x00 ; '.'
000000000021c94d         db  0x00 ; '.'
000000000021c94e         db  0x00 ; '.'
000000000021c94f         db  0x00 ; '.'
000000000021c950         db  0x00 ; '.'
000000000021c951         db  0x00 ; '.'
000000000021c952         db  0x00 ; '.'
000000000021c953         db  0x00 ; '.'
000000000021c954         db  0x00 ; '.'
000000000021c955         db  0x00 ; '.'
000000000021c956         db  0x00 ; '.'
000000000021c957         db  0x00 ; '.'
000000000021c958         db  0x00 ; '.'
000000000021c959         db  0x00 ; '.'
000000000021c95a         db  0x00 ; '.'
000000000021c95b         db  0x00 ; '.'
000000000021c95c         db  0x00 ; '.'
000000000021c95d         db  0x00 ; '.'
000000000021c95e         db  0x00 ; '.'
000000000021c95f         db  0x00 ; '.'
                     quoting_style_args:
000000000021c960         db  0x29 ; ')'
000000000021c961         db  0x83 ; '.'
000000000021c962         db  0x01 ; '.'
000000000021c963         db  0x00 ; '.'
000000000021c964         db  0x00 ; '.'
000000000021c965         db  0x00 ; '.'
000000000021c966         db  0x00 ; '.'
000000000021c967         db  0x00 ; '.'
000000000021c968         db  0x31 ; '1'
000000000021c969         db  0x83 ; '.'
000000000021c96a         db  0x01 ; '.'
000000000021c96b         db  0x00 ; '.'
000000000021c96c         db  0x00 ; '.'
000000000021c96d         db  0x00 ; '.'
000000000021c96e         db  0x00 ; '.'
000000000021c96f         db  0x00 ; '.'
000000000021c970         db  0x37 ; '7'
000000000021c971         db  0x83 ; '.'
000000000021c972         db  0x01 ; '.'
000000000021c973         db  0x00 ; '.'
000000000021c974         db  0x00 ; '.'
000000000021c975         db  0x00 ; '.'
000000000021c976         db  0x00 ; '.'
000000000021c977         db  0x00 ; '.'
000000000021c978         db  0x44 ; 'D'
000000000021c979         db  0x83 ; '.'
000000000021c97a         db  0x01 ; '.'
000000000021c97b         db  0x00 ; '.'
000000000021c97c         db  0x00 ; '.'
000000000021c97d         db  0x00 ; '.'
000000000021c97e         db  0x00 ; '.'
000000000021c97f         db  0x00 ; '.'
000000000021c980         db  0x51 ; 'Q'
000000000021c981         db  0x83 ; '.'
000000000021c982         db  0x01 ; '.'
000000000021c983         db  0x00 ; '.'
000000000021c984         db  0x00 ; '.'
000000000021c985         db  0x00 ; '.'
000000000021c986         db  0x00 ; '.'
000000000021c987         db  0x00 ; '.'
000000000021c988         db  0xe5 ; '.'
000000000021c989         db  0x7f ; '.'
000000000021c98a         db  0x01 ; '.'
000000000021c98b         db  0x00 ; '.'
000000000021c98c         db  0x00 ; '.'
000000000021c98d         db  0x00 ; '.'
000000000021c98e         db  0x00 ; '.'
000000000021c98f         db  0x00 ; '.'
000000000021c990         db  0x65 ; 'e'
000000000021c991         db  0x83 ; '.'
000000000021c992         db  0x01 ; '.'
000000000021c993         db  0x00 ; '.'
000000000021c994         db  0x00 ; '.'
000000000021c995         db  0x00 ; '.'
000000000021c996         db  0x00 ; '.'
000000000021c997         db  0x00 ; '.'
000000000021c998         db  0x4a ; 'J'
000000000021c999         db  0x83 ; '.'
000000000021c99a         db  0x01 ; '.'
000000000021c99b         db  0x00 ; '.'
000000000021c99c         db  0x00 ; '.'
000000000021c99d         db  0x00 ; '.'
000000000021c99e         db  0x00 ; '.'
000000000021c99f         db  0x00 ; '.'
000000000021c9a0         db  0x44 ; 'D'
000000000021c9a1         db  0x65 ; 'e'
000000000021c9a2         db  0x01 ; '.'
000000000021c9a3         db  0x00 ; '.'
000000000021c9a4         db  0x00 ; '.'
000000000021c9a5         db  0x00 ; '.'
000000000021c9a6         db  0x00 ; '.'
000000000021c9a7         db  0x00 ; '.'
000000000021c9a8         db  0x6d ; 'm'
000000000021c9a9         db  0x83 ; '.'
000000000021c9aa         db  0x01 ; '.'
000000000021c9ab         db  0x00 ; '.'
000000000021c9ac         db  0x00 ; '.'
000000000021c9ad         db  0x00 ; '.'
000000000021c9ae         db  0x00 ; '.'
000000000021c9af         db  0x00 ; '.'
000000000021c9b0         db  0x00 ; '.'
000000000021c9b1         db  0x00 ; '.'
000000000021c9b2         db  0x00 ; '.'
000000000021c9b3         db  0x00 ; '.'
000000000021c9b4         db  0x00 ; '.'
000000000021c9b5         db  0x00 ; '.'
000000000021c9b6         db  0x00 ; '.'
000000000021c9b7         db  0x00 ; '.'
000000000021c9b8         db  0x00 ; '.'
000000000021c9b9         db  0x00 ; '.'
000000000021c9ba         db  0x00 ; '.'
000000000021c9bb         db  0x00 ; '.'
000000000021c9bc         db  0x00 ; '.'
000000000021c9bd         db  0x00 ; '.'
000000000021c9be         db  0x00 ; '.'
000000000021c9bf         db  0x00 ; '.'
                     comparison_function_table:
000000000021c9c0         db  0x00 ; '.'                                         ; DATA XREF=streamsavedir+2
000000000021c9c1         db  0x00 ; '.'
000000000021c9c2         db  0x00 ; '.'
000000000021c9c3         db  0x00 ; '.'
000000000021c9c4         db  0x00 ; '.'
000000000021c9c5         db  0x00 ; '.'
000000000021c9c6         db  0x00 ; '.'
000000000021c9c7         db  0x00 ; '.'
000000000021c9c8         db  0x20 ; ' '
000000000021c9c9         db  0xfc ; '.'
000000000021c9ca         db  0x00 ; '.'
000000000021c9cb         db  0x00 ; '.'
000000000021c9cc         db  0x00 ; '.'
000000000021c9cd         db  0x00 ; '.'
000000000021c9ce         db  0x00 ; '.'
000000000021c9cf         db  0x00 ; '.'
000000000021c9d0         db  0x00 ; '.'
000000000021c9d1         db  0xfc ; '.'
000000000021c9d2         db  0x00 ; '.'
000000000021c9d3         db  0x00 ; '.'
000000000021c9d4         db  0x00 ; '.'
000000000021c9d5         db  0x00 ; '.'
000000000021c9d6         db  0x00 ; '.'
000000000021c9d7         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x21c9d8; 0x21cbc8[ (496 bytes)
        ; File offset : [117208; 117704[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
000000000021c9d8         db  0x01 ; '.'
000000000021c9d9         db  0x00 ; '.'
000000000021c9da         db  0x00 ; '.'
000000000021c9db         db  0x00 ; '.'
000000000021c9dc         db  0x00 ; '.'
000000000021c9dd         db  0x00 ; '.'
000000000021c9de         db  0x00 ; '.'
000000000021c9df         db  0x00 ; '.'
000000000021c9e0         db  0x01 ; '.'
000000000021c9e1         db  0x00 ; '.'
000000000021c9e2         db  0x00 ; '.'
000000000021c9e3         db  0x00 ; '.'
000000000021c9e4         db  0x00 ; '.'
000000000021c9e5         db  0x00 ; '.'
000000000021c9e6         db  0x00 ; '.'
000000000021c9e7         db  0x00 ; '.'
000000000021c9e8         db  0x0c ; '.'
000000000021c9e9         db  0x00 ; '.'
000000000021c9ea         db  0x00 ; '.'
000000000021c9eb         db  0x00 ; '.'
000000000021c9ec         db  0x00 ; '.'
000000000021c9ed         db  0x00 ; '.'
000000000021c9ee         db  0x00 ; '.'
000000000021c9ef         db  0x00 ; '.'
000000000021c9f0         db  0xc0 ; '.'
000000000021c9f1         db  0x28 ; '('
000000000021c9f2         db  0x00 ; '.'
000000000021c9f3         db  0x00 ; '.'
000000000021c9f4         db  0x00 ; '.'
000000000021c9f5         db  0x00 ; '.'
000000000021c9f6         db  0x00 ; '.'
000000000021c9f7         db  0x00 ; '.'
000000000021c9f8         db  0x0d ; '.'
000000000021c9f9         db  0x00 ; '.'
000000000021c9fa         db  0x00 ; '.'
000000000021c9fb         db  0x00 ; '.'
000000000021c9fc         db  0x00 ; '.'
000000000021c9fd         db  0x00 ; '.'
000000000021c9fe         db  0x00 ; '.'
000000000021c9ff         db  0x00 ; '.'
000000000021ca00         db  0xa0 ; '.'
000000000021ca01         db  0x63 ; 'c'
000000000021ca02         db  0x01 ; '.'
000000000021ca03         db  0x00 ; '.'
000000000021ca04         db  0x00 ; '.'
000000000021ca05         db  0x00 ; '.'
000000000021ca06         db  0x00 ; '.'
000000000021ca07         db  0x00 ; '.'
000000000021ca08         db  0x19 ; '.'
000000000021ca09         db  0x00 ; '.'
000000000021ca0a         db  0x00 ; '.'
000000000021ca0b         db  0x00 ; '.'
000000000021ca0c         db  0x00 ; '.'
000000000021ca0d         db  0x00 ; '.'
000000000021ca0e         db  0x00 ; '.'
000000000021ca0f         db  0x00 ; '.'
000000000021ca10         db  0xb0 ; '.'
000000000021ca11         db  0xc6 ; '.'
000000000021ca12         db  0x21 ; '!'
000000000021ca13         db  0x00 ; '.'
000000000021ca14         db  0x00 ; '.'
000000000021ca15         db  0x00 ; '.'
000000000021ca16         db  0x00 ; '.'
000000000021ca17         db  0x00 ; '.'
000000000021ca18         db  0x1b ; '.'
000000000021ca19         db  0x00 ; '.'
000000000021ca1a         db  0x00 ; '.'
000000000021ca1b         db  0x00 ; '.'
000000000021ca1c         db  0x00 ; '.'
000000000021ca1d         db  0x00 ; '.'
000000000021ca1e         db  0x00 ; '.'
000000000021ca1f         db  0x00 ; '.'
000000000021ca20         db  0x08 ; '.'
000000000021ca21         db  0x00 ; '.'
000000000021ca22         db  0x00 ; '.'
000000000021ca23         db  0x00 ; '.'
000000000021ca24         db  0x00 ; '.'
000000000021ca25         db  0x00 ; '.'
000000000021ca26         db  0x00 ; '.'
000000000021ca27         db  0x00 ; '.'
000000000021ca28         db  0x1a ; '.'
000000000021ca29         db  0x00 ; '.'
000000000021ca2a         db  0x00 ; '.'
000000000021ca2b         db  0x00 ; '.'
000000000021ca2c         db  0x00 ; '.'
000000000021ca2d         db  0x00 ; '.'
000000000021ca2e         db  0x00 ; '.'
000000000021ca2f         db  0x00 ; '.'
000000000021ca30         db  0xb8 ; '.'
000000000021ca31         db  0xc6 ; '.'
000000000021ca32         db  0x21 ; '!'
000000000021ca33         db  0x00 ; '.'
000000000021ca34         db  0x00 ; '.'
000000000021ca35         db  0x00 ; '.'
000000000021ca36         db  0x00 ; '.'
000000000021ca37         db  0x00 ; '.'
000000000021ca38         db  0x1c ; '.'
000000000021ca39         db  0x00 ; '.'
000000000021ca3a         db  0x00 ; '.'
000000000021ca3b         db  0x00 ; '.'
000000000021ca3c         db  0x00 ; '.'
000000000021ca3d         db  0x00 ; '.'
000000000021ca3e         db  0x00 ; '.'
000000000021ca3f         db  0x00 ; '.'
000000000021ca40         db  0x08 ; '.'
000000000021ca41         db  0x00 ; '.'
000000000021ca42         db  0x00 ; '.'
000000000021ca43         db  0x00 ; '.'
000000000021ca44         db  0x00 ; '.'
000000000021ca45         db  0x00 ; '.'
000000000021ca46         db  0x00 ; '.'
000000000021ca47         db  0x00 ; '.'
000000000021ca48         db  0xf5 ; '.'
000000000021ca49         db  0xfe ; '.'
000000000021ca4a         db  0xff ; '.'
000000000021ca4b         db  0x6f ; 'o'
000000000021ca4c         db  0x00 ; '.'
000000000021ca4d         db  0x00 ; '.'
000000000021ca4e         db  0x00 ; '.'
000000000021ca4f         db  0x00 ; '.'
000000000021ca50         db  0x98 ; '.'
000000000021ca51         db  0x02 ; '.'
000000000021ca52         db  0x00 ; '.'
000000000021ca53         db  0x00 ; '.'
000000000021ca54         db  0x00 ; '.'
000000000021ca55         db  0x00 ; '.'
000000000021ca56         db  0x00 ; '.'
000000000021ca57         db  0x00 ; '.'
000000000021ca58         db  0x05 ; '.'
000000000021ca59         db  0x00 ; '.'
000000000021ca5a         db  0x00 ; '.'
000000000021ca5b         db  0x00 ; '.'
000000000021ca5c         db  0x00 ; '.'
000000000021ca5d         db  0x00 ; '.'
000000000021ca5e         db  0x00 ; '.'
000000000021ca5f         db  0x00 ; '.'
000000000021ca60         db  0x30 ; '0'
000000000021ca61         db  0x10 ; '.'
000000000021ca62         db  0x00 ; '.'
000000000021ca63         db  0x00 ; '.'
000000000021ca64         db  0x00 ; '.'
000000000021ca65         db  0x00 ; '.'
000000000021ca66         db  0x00 ; '.'
000000000021ca67         db  0x00 ; '.'
000000000021ca68         db  0x06 ; '.'
000000000021ca69         db  0x00 ; '.'
000000000021ca6a         db  0x00 ; '.'
000000000021ca6b         db  0x00 ; '.'
000000000021ca6c         db  0x00 ; '.'
000000000021ca6d         db  0x00 ; '.'
000000000021ca6e         db  0x00 ; '.'
000000000021ca6f         db  0x00 ; '.'
000000000021ca70         db  0xe0 ; '.'
000000000021ca71         db  0x02 ; '.'
000000000021ca72         db  0x00 ; '.'
000000000021ca73         db  0x00 ; '.'
000000000021ca74         db  0x00 ; '.'
000000000021ca75         db  0x00 ; '.'
000000000021ca76         db  0x00 ; '.'
000000000021ca77         db  0x00 ; '.'
000000000021ca78         db  0x0a ; '.'
000000000021ca79         db  0x00 ; '.'
000000000021ca7a         db  0x00 ; '.'
000000000021ca7b         db  0x00 ; '.'
000000000021ca7c         db  0x00 ; '.'
000000000021ca7d         db  0x00 ; '.'
000000000021ca7e         db  0x00 ; '.'
000000000021ca7f         db  0x00 ; '.'
000000000021ca80         db  0x7e ; '~'
000000000021ca81         db  0x05 ; '.'
000000000021ca82         db  0x00 ; '.'
000000000021ca83         db  0x00 ; '.'
000000000021ca84         db  0x00 ; '.'
000000000021ca85         db  0x00 ; '.'
000000000021ca86         db  0x00 ; '.'
000000000021ca87         db  0x00 ; '.'
000000000021ca88         db  0x0b ; '.'
000000000021ca89         db  0x00 ; '.'
000000000021ca8a         db  0x00 ; '.'
000000000021ca8b         db  0x00 ; '.'
000000000021ca8c         db  0x00 ; '.'
000000000021ca8d         db  0x00 ; '.'
000000000021ca8e         db  0x00 ; '.'
000000000021ca8f         db  0x00 ; '.'
000000000021ca90         db  0x18 ; '.'
000000000021ca91         db  0x00 ; '.'
000000000021ca92         db  0x00 ; '.'
000000000021ca93         db  0x00 ; '.'
000000000021ca94         db  0x00 ; '.'
000000000021ca95         db  0x00 ; '.'
000000000021ca96         db  0x00 ; '.'
000000000021ca97         db  0x00 ; '.'
000000000021ca98         db  0x15 ; '.'
000000000021ca99         db  0x00 ; '.'
000000000021ca9a         db  0x00 ; '.'
000000000021ca9b         db  0x00 ; '.'
000000000021ca9c         db  0x00 ; '.'
000000000021ca9d         db  0x00 ; '.'
000000000021ca9e         db  0x00 ; '.'
000000000021ca9f         db  0x00 ; '.'
000000000021caa0         db  0x00 ; '.'
000000000021caa1         db  0x00 ; '.'
000000000021caa2         db  0x00 ; '.'
000000000021caa3         db  0x00 ; '.'
000000000021caa4         db  0x00 ; '.'
000000000021caa5         db  0x00 ; '.'
000000000021caa6         db  0x00 ; '.'
000000000021caa7         db  0x00 ; '.'
000000000021caa8         db  0x03 ; '.'
000000000021caa9         db  0x00 ; '.'
000000000021caaa         db  0x00 ; '.'
000000000021caab         db  0x00 ; '.'
000000000021caac         db  0x00 ; '.'
000000000021caad         db  0x00 ; '.'
000000000021caae         db  0x00 ; '.'
000000000021caaf         db  0x00 ; '.'
000000000021cab0         db  0xc8 ; '.'
000000000021cab1         db  0xcb ; '.'
000000000021cab2         db  0x21 ; '!'
000000000021cab3         db  0x00 ; '.'
000000000021cab4         db  0x00 ; '.'
000000000021cab5         db  0x00 ; '.'
000000000021cab6         db  0x00 ; '.'
000000000021cab7         db  0x00 ; '.'
000000000021cab8         db  0x02 ; '.'
000000000021cab9         db  0x00 ; '.'
000000000021caba         db  0x00 ; '.'
000000000021cabb         db  0x00 ; '.'
000000000021cabc         db  0x00 ; '.'
000000000021cabd         db  0x00 ; '.'
000000000021cabe         db  0x00 ; '.'
000000000021cabf         db  0x00 ; '.'
000000000021cac0         db  0xd0 ; '.'
000000000021cac1         db  0x0b ; '.'
000000000021cac2         db  0x00 ; '.'
000000000021cac3         db  0x00 ; '.'
000000000021cac4         db  0x00 ; '.'
000000000021cac5         db  0x00 ; '.'
000000000021cac6         db  0x00 ; '.'
000000000021cac7         db  0x00 ; '.'
000000000021cac8         db  0x14 ; '.'
000000000021cac9         db  0x00 ; '.'
000000000021caca         db  0x00 ; '.'
000000000021cacb         db  0x00 ; '.'
000000000021cacc         db  0x00 ; '.'
000000000021cacd         db  0x00 ; '.'
000000000021cace         db  0x00 ; '.'
000000000021cacf         db  0x00 ; '.'
000000000021cad0         db  0x07 ; '.'
000000000021cad1         db  0x00 ; '.'
000000000021cad2         db  0x00 ; '.'
000000000021cad3         db  0x00 ; '.'
000000000021cad4         db  0x00 ; '.'
000000000021cad5         db  0x00 ; '.'
000000000021cad6         db  0x00 ; '.'
000000000021cad7         db  0x00 ; '.'
000000000021cad8         db  0x17 ; '.'
000000000021cad9         db  0x00 ; '.'
000000000021cada         db  0x00 ; '.'
000000000021cadb         db  0x00 ; '.'
000000000021cadc         db  0x00 ; '.'
000000000021cadd         db  0x00 ; '.'
000000000021cade         db  0x00 ; '.'
000000000021cadf         db  0x00 ; '.'
000000000021cae0         db  0xf0 ; '.'
000000000021cae1         db  0x1c ; '.'
000000000021cae2         db  0x00 ; '.'
000000000021cae3         db  0x00 ; '.'
000000000021cae4         db  0x00 ; '.'
000000000021cae5         db  0x00 ; '.'
000000000021cae6         db  0x00 ; '.'
000000000021cae7         db  0x00 ; '.'
000000000021cae8         db  0x07 ; '.'
000000000021cae9         db  0x00 ; '.'
000000000021caea         db  0x00 ; '.'
000000000021caeb         db  0x00 ; '.'
000000000021caec         db  0x00 ; '.'
000000000021caed         db  0x00 ; '.'
000000000021caee         db  0x00 ; '.'
000000000021caef         db  0x00 ; '.'
000000000021caf0         db  0x80 ; '.'
000000000021caf1         db  0x17 ; '.'
000000000021caf2         db  0x00 ; '.'
000000000021caf3         db  0x00 ; '.'
000000000021caf4         db  0x00 ; '.'
000000000021caf5         db  0x00 ; '.'
000000000021caf6         db  0x00 ; '.'
000000000021caf7         db  0x00 ; '.'
000000000021caf8         db  0x08 ; '.'
000000000021caf9         db  0x00 ; '.'
000000000021cafa         db  0x00 ; '.'
000000000021cafb         db  0x00 ; '.'
000000000021cafc         db  0x00 ; '.'
000000000021cafd         db  0x00 ; '.'
000000000021cafe         db  0x00 ; '.'
000000000021caff         db  0x00 ; '.'
000000000021cb00         db  0x70 ; 'p'
000000000021cb01         db  0x05 ; '.'
000000000021cb02         db  0x00 ; '.'
000000000021cb03         db  0x00 ; '.'
000000000021cb04         db  0x00 ; '.'
000000000021cb05         db  0x00 ; '.'
000000000021cb06         db  0x00 ; '.'
000000000021cb07         db  0x00 ; '.'
000000000021cb08         db  0x09 ; '.'
000000000021cb09         db  0x00 ; '.'
000000000021cb0a         db  0x00 ; '.'
000000000021cb0b         db  0x00 ; '.'
000000000021cb0c         db  0x00 ; '.'
000000000021cb0d         db  0x00 ; '.'
000000000021cb0e         db  0x00 ; '.'
000000000021cb0f         db  0x00 ; '.'
000000000021cb10         db  0x18 ; '.'
000000000021cb11         db  0x00 ; '.'
000000000021cb12         db  0x00 ; '.'
000000000021cb13         db  0x00 ; '.'
000000000021cb14         db  0x00 ; '.'
000000000021cb15         db  0x00 ; '.'
000000000021cb16         db  0x00 ; '.'
000000000021cb17         db  0x00 ; '.'
000000000021cb18         db  0x1e ; '.'
000000000021cb19         db  0x00 ; '.'
000000000021cb1a         db  0x00 ; '.'
000000000021cb1b         db  0x00 ; '.'
000000000021cb1c         db  0x00 ; '.'
000000000021cb1d         db  0x00 ; '.'
000000000021cb1e         db  0x00 ; '.'
000000000021cb1f         db  0x00 ; '.'
000000000021cb20         db  0x08 ; '.'
000000000021cb21         db  0x00 ; '.'
000000000021cb22         db  0x00 ; '.'
000000000021cb23         db  0x00 ; '.'
000000000021cb24         db  0x00 ; '.'
000000000021cb25         db  0x00 ; '.'
000000000021cb26         db  0x00 ; '.'
000000000021cb27         db  0x00 ; '.'
000000000021cb28         db  0xfb ; '.'
000000000021cb29         db  0xff ; '.'
000000000021cb2a         db  0xff ; '.'
000000000021cb2b         db  0x6f ; 'o'
000000000021cb2c         db  0x00 ; '.'
000000000021cb2d         db  0x00 ; '.'
000000000021cb2e         db  0x00 ; '.'
000000000021cb2f         db  0x00 ; '.'
000000000021cb30         db  0x01 ; '.'
000000000021cb31         db  0x00 ; '.'
000000000021cb32         db  0x00 ; '.'
000000000021cb33         db  0x08 ; '.'
000000000021cb34         db  0x00 ; '.'
000000000021cb35         db  0x00 ; '.'
000000000021cb36         db  0x00 ; '.'
000000000021cb37         db  0x00 ; '.'
000000000021cb38         db  0xfe ; '.'
000000000021cb39         db  0xff ; '.'
000000000021cb3a         db  0xff ; '.'
000000000021cb3b         db  0x6f ; 'o'
000000000021cb3c         db  0x00 ; '.'
000000000021cb3d         db  0x00 ; '.'
000000000021cb3e         db  0x00 ; '.'
000000000021cb3f         db  0x00 ; '.'
000000000021cb40         db  0xd0 ; '.'
000000000021cb41         db  0x16 ; '.'
000000000021cb42         db  0x00 ; '.'
000000000021cb43         db  0x00 ; '.'
000000000021cb44         db  0x00 ; '.'
000000000021cb45         db  0x00 ; '.'
000000000021cb46         db  0x00 ; '.'
000000000021cb47         db  0x00 ; '.'
000000000021cb48         db  0xff ; '.'
000000000021cb49         db  0xff ; '.'
000000000021cb4a         db  0xff ; '.'
000000000021cb4b         db  0x6f ; 'o'
000000000021cb4c         db  0x00 ; '.'
000000000021cb4d         db  0x00 ; '.'
000000000021cb4e         db  0x00 ; '.'
000000000021cb4f         db  0x00 ; '.'
000000000021cb50         db  0x01 ; '.'
000000000021cb51         db  0x00 ; '.'
000000000021cb52         db  0x00 ; '.'
000000000021cb53         db  0x00 ; '.'
000000000021cb54         db  0x00 ; '.'
000000000021cb55         db  0x00 ; '.'
000000000021cb56         db  0x00 ; '.'
000000000021cb57         db  0x00 ; '.'
000000000021cb58         db  0xf0 ; '.'
000000000021cb59         db  0xff ; '.'
000000000021cb5a         db  0xff ; '.'
000000000021cb5b         db  0x6f ; 'o'
000000000021cb5c         db  0x00 ; '.'
000000000021cb5d         db  0x00 ; '.'
000000000021cb5e         db  0x00 ; '.'
000000000021cb5f         db  0x00 ; '.'
000000000021cb60         db  0xae ; '.'
000000000021cb61         db  0x15 ; '.'
000000000021cb62         db  0x00 ; '.'
000000000021cb63         db  0x00 ; '.'
000000000021cb64         db  0x00 ; '.'
000000000021cb65         db  0x00 ; '.'
000000000021cb66         db  0x00 ; '.'
000000000021cb67         db  0x00 ; '.'
000000000021cb68         db  0xf9 ; '.'
000000000021cb69         db  0xff ; '.'
000000000021cb6a         db  0xff ; '.'
000000000021cb6b         db  0x6f ; 'o'
000000000021cb6c         db  0x00 ; '.'
000000000021cb6d         db  0x00 ; '.'
000000000021cb6e         db  0x00 ; '.'
000000000021cb6f         db  0x00 ; '.'
000000000021cb70         db  0x2d ; '-'
000000000021cb71         db  0x00 ; '.'
000000000021cb72         db  0x00 ; '.'
000000000021cb73         db  0x00 ; '.'
000000000021cb74         db  0x00 ; '.'
000000000021cb75         db  0x00 ; '.'
000000000021cb76         db  0x00 ; '.'
000000000021cb77         db  0x00 ; '.'
000000000021cb78         db  0x00 ; '.'
000000000021cb79         db  0x00 ; '.'
000000000021cb7a         db  0x00 ; '.'
000000000021cb7b         db  0x00 ; '.'
000000000021cb7c         db  0x00 ; '.'
000000000021cb7d         db  0x00 ; '.'
000000000021cb7e         db  0x00 ; '.'
000000000021cb7f         db  0x00 ; '.'
000000000021cb80         db  0x00 ; '.'
000000000021cb81         db  0x00 ; '.'
000000000021cb82         db  0x00 ; '.'
000000000021cb83         db  0x00 ; '.'
000000000021cb84         db  0x00 ; '.'
000000000021cb85         db  0x00 ; '.'
000000000021cb86         db  0x00 ; '.'
000000000021cb87         db  0x00 ; '.'
000000000021cb88         db  0x00 ; '.'
000000000021cb89         db  0x00 ; '.'
000000000021cb8a         db  0x00 ; '.'
000000000021cb8b         db  0x00 ; '.'
000000000021cb8c         db  0x00 ; '.'
000000000021cb8d         db  0x00 ; '.'
000000000021cb8e         db  0x00 ; '.'
000000000021cb8f         db  0x00 ; '.'
000000000021cb90         db  0x00 ; '.'
000000000021cb91         db  0x00 ; '.'
000000000021cb92         db  0x00 ; '.'
000000000021cb93         db  0x00 ; '.'
000000000021cb94         db  0x00 ; '.'
000000000021cb95         db  0x00 ; '.'
000000000021cb96         db  0x00 ; '.'
000000000021cb97         db  0x00 ; '.'
000000000021cb98         db  0x00 ; '.'
000000000021cb99         db  0x00 ; '.'
000000000021cb9a         db  0x00 ; '.'
000000000021cb9b         db  0x00 ; '.'
000000000021cb9c         db  0x00 ; '.'
000000000021cb9d         db  0x00 ; '.'
000000000021cb9e         db  0x00 ; '.'
000000000021cb9f         db  0x00 ; '.'
000000000021cba0         db  0x00 ; '.'
000000000021cba1         db  0x00 ; '.'
000000000021cba2         db  0x00 ; '.'
000000000021cba3         db  0x00 ; '.'
000000000021cba4         db  0x00 ; '.'
000000000021cba5         db  0x00 ; '.'
000000000021cba6         db  0x00 ; '.'
000000000021cba7         db  0x00 ; '.'
000000000021cba8         db  0x00 ; '.'
000000000021cba9         db  0x00 ; '.'
000000000021cbaa         db  0x00 ; '.'
000000000021cbab         db  0x00 ; '.'
000000000021cbac         db  0x00 ; '.'
000000000021cbad         db  0x00 ; '.'
000000000021cbae         db  0x00 ; '.'
000000000021cbaf         db  0x00 ; '.'
000000000021cbb0         db  0x00 ; '.'
000000000021cbb1         db  0x00 ; '.'
000000000021cbb2         db  0x00 ; '.'
000000000021cbb3         db  0x00 ; '.'
000000000021cbb4         db  0x00 ; '.'
000000000021cbb5         db  0x00 ; '.'
000000000021cbb6         db  0x00 ; '.'
000000000021cbb7         db  0x00 ; '.'
000000000021cbb8         db  0x00 ; '.'
000000000021cbb9         db  0x00 ; '.'
000000000021cbba         db  0x00 ; '.'
000000000021cbbb         db  0x00 ; '.'
000000000021cbbc         db  0x00 ; '.'
000000000021cbbd         db  0x00 ; '.'
000000000021cbbe         db  0x00 ; '.'
000000000021cbbf         db  0x00 ; '.'
000000000021cbc0         db  0x00 ; '.'
000000000021cbc1         db  0x00 ; '.'
000000000021cbc2         db  0x00 ; '.'
000000000021cbc3         db  0x00 ; '.'
000000000021cbc4         db  0x00 ; '.'
000000000021cbc5         db  0x00 ; '.'
000000000021cbc6         db  0x00 ; '.'
000000000021cbc7         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x21cbc8; 0x21d000[ (1080 bytes)
        ; File offset : [117704; 118784[ (1080 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
000000000021cbc8         db  0xd8 ; '.'
000000000021cbc9         db  0xc9 ; '.'
000000000021cbca         db  0x21 ; '!'
000000000021cbcb         db  0x00 ; '.'
000000000021cbcc         db  0x00 ; '.'
000000000021cbcd         db  0x00 ; '.'
000000000021cbce         db  0x00 ; '.'
000000000021cbcf         db  0x00 ; '.'
                     qword_21cbd0:
000000000021cbd0         dq         0x0000000000000000                          ; DATA XREF=0x28e0
000000000021cbd8         db  0x00 ; '.'                                         ; DATA XREF=0x28e6
000000000021cbd9         db  0x00 ; '.'
000000000021cbda         db  0x00 ; '.'
000000000021cbdb         db  0x00 ; '.'
000000000021cbdc         db  0x00 ; '.'
000000000021cbdd         db  0x00 ; '.'
000000000021cbde         db  0x00 ; '.'
000000000021cbdf         db  0x00 ; '.'
                     endgrent@GOT:        // endgrent
000000000021cbe0         dq         0x000000000021f740                          ; DATA XREF=j_endgrent
                     getenv@GOT:        // getenv
000000000021cbe8         dq         0x000000000021f748                          ; DATA XREF=j_getenv
                     __snprintf_chk@GOT:        // __snprintf_chk
000000000021cbf0         dq         0x000000000021f750                          ; DATA XREF=j___snprintf_chk
                     raise@GOT:        // raise
000000000021cbf8         dq         0x000000000021f758                          ; DATA XREF=j_raise
                     utimensat@GOT:        // utimensat
000000000021cc00         dq         0x000000000021f768                          ; DATA XREF=j_utimensat
                     abort@GOT:        // abort
000000000021cc08         dq         0x000000000021f770                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
000000000021cc10         dq         0x000000000021f778                          ; DATA XREF=j___errno_location
                     unlink@GOT:        // unlink
000000000021cc18         dq         0x000000000021f780                          ; DATA XREF=j_unlink
                     strncmp@GOT:        // strncmp
000000000021cc20         dq         0x000000000021f788                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
000000000021cc28         dq         0x000000000021f798                          ; DATA XREF=j__exit
                     strcpy@GOT:        // strcpy
000000000021cc30         dq         0x000000000021f7a0                          ; DATA XREF=j_strcpy
                     __fpending@GOT:        // __fpending
000000000021cc38         dq         0x000000000021f7a8                          ; DATA XREF=j___fpending
                     __read_chk@GOT:        // __read_chk
000000000021cc40         dq         0x000000000021f7b0                          ; DATA XREF=j___read_chk
                     mkdir@GOT:        // mkdir
000000000021cc48         dq         0x000000000021f7b8                          ; DATA XREF=j_mkdir
                     unlinkat@GOT:        // unlinkat
000000000021cc50         dq         0x000000000021f7c0                          ; DATA XREF=j_unlinkat
                     qsort@GOT:        // qsort
000000000021cc58         dq         0x000000000021f7c8                          ; DATA XREF=j_qsort
                     readlink@GOT:        // readlink
000000000021cc60         dq         0x000000000021f7d0                          ; DATA XREF=j_readlink
                     fcntl@GOT:        // fcntl
000000000021cc68         dq         0x000000000021f7d8                          ; DATA XREF=j_fcntl
                     clock_gettime@GOT:        // clock_gettime
000000000021cc70         dq         0x000000000021f7e0                          ; DATA XREF=j_clock_gettime
                     write@GOT:        // write
000000000021cc78         dq         0x000000000021f7e8                          ; DATA XREF=j_write
                     getpid@GOT:        // getpid
000000000021cc80         dq         0x000000000021f7f0                          ; DATA XREF=j_getpid
                     fread_unlocked@GOT:        // fread_unlocked
000000000021cc88         dq         0x000000000021f7f8                          ; DATA XREF=j_fread_unlocked
                     textdomain@GOT:        // textdomain
000000000021cc90         dq         0x000000000021f800                          ; DATA XREF=j_textdomain
                     pathconf@GOT:        // pathconf
000000000021cc98         dq         0x000000000021f808                          ; DATA XREF=j_pathconf
                     __open_2@GOT:        // __open_2
000000000021cca0         dq         0x000000000021f810                          ; DATA XREF=j___open_2
                     fclose@GOT:        // fclose
000000000021cca8         dq         0x000000000021f818                          ; DATA XREF=j_fclose
                     opendir@GOT:        // opendir
000000000021ccb0         dq         0x000000000021f820                          ; DATA XREF=j_opendir
                     bindtextdomain@GOT:        // bindtextdomain
000000000021ccb8         dq         0x000000000021f828                          ; DATA XREF=j_bindtextdomain
                     stpcpy@GOT:        // stpcpy
000000000021ccc0         dq         0x000000000021f830                          ; DATA XREF=j_stpcpy
                     rmdir@GOT:        // rmdir
000000000021ccc8         dq         0x000000000021f838                          ; DATA XREF=j_rmdir
                     dcgettext@GOT:        // dcgettext
000000000021ccd0         dq         0x000000000021f840                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
000000000021ccd8         dq         0x000000000021f848                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
000000000021cce0         dq         0x000000000021f850                          ; DATA XREF=j_strlen
                     __lxstat@GOT:        // __lxstat
000000000021cce8         dq         0x000000000021f858                          ; DATA XREF=j___lxstat
                     openat@GOT:        // openat
000000000021ccf0         dq         0x000000000021f860                          ; DATA XREF=j_openat
                     chdir@GOT:        // chdir
000000000021ccf8         dq         0x000000000021f868                          ; DATA XREF=j_chdir
                     __stack_chk_fail@GOT:        // __stack_chk_fail
000000000021cd00         dq         0x000000000021f870                          ; DATA XREF=j___stack_chk_fail
                     getuid@GOT:        // getuid
000000000021cd08         dq         0x000000000021f878                          ; DATA XREF=j_getuid
                     getopt_long@GOT:        // getopt_long
000000000021cd10         dq         0x000000000021f880                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
000000000021cd18         dq         0x000000000021f888                          ; DATA XREF=j_mbrtowc
                     strchr@GOT:        // strchr
000000000021cd20         dq         0x000000000021f890                          ; DATA XREF=j_strchr
                     __fxstatat@GOT:        // __fxstatat
000000000021cd28         dq         0x000000000021f898                          ; DATA XREF=j___fxstatat
                     __overflow@GOT:        // __overflow
000000000021cd30         dq         0x000000000021f8a0                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
000000000021cd38         dq         0x000000000021f8a8                          ; DATA XREF=j_strrchr
                     ftruncate@GOT:        // ftruncate
000000000021cd40         dq         0x000000000021f8b0                          ; DATA XREF=j_ftruncate
                     lseek@GOT:        // lseek
000000000021cd48         dq         0x000000000021f8b8                          ; DATA XREF=j_lseek
                     gettimeofday@GOT:        // gettimeofday
000000000021cd50         dq         0x000000000021f8c0                          ; DATA XREF=j_gettimeofday
                     __assert_fail@GOT:        // __assert_fail
000000000021cd58         dq         0x000000000021f8c8                          ; DATA XREF=j___assert_fail
                     memset@GOT:        // memset
000000000021cd60         dq         0x000000000021f8d0                          ; DATA XREF=j_memset
                     geteuid@GOT:        // geteuid
000000000021cd68         dq         0x000000000021f8d8                          ; DATA XREF=j_geteuid
                     ioctl@GOT:        // ioctl
000000000021cd70         dq         0x000000000021f8e0                          ; DATA XREF=j_ioctl
                     canonicalize_file_name@GOT:        // canonicalize_file_name
000000000021cd78         dq         0x000000000021f8e8                          ; DATA XREF=j_canonicalize_file_name
                     close@GOT:        // close
000000000021cd80         dq         0x000000000021f8f0                          ; DATA XREF=j_close
                     rewinddir@GOT:        // rewinddir
000000000021cd88         dq         0x000000000021f8f8                          ; DATA XREF=j_rewinddir
                     strspn@GOT:        // strspn
000000000021cd90         dq         0x000000000021f900                          ; DATA XREF=j_strspn
                     closedir@GOT:        // closedir
000000000021cd98         dq         0x000000000021f908                          ; DATA XREF=j_closedir
                     posix_fadvise@GOT:        // posix_fadvise
000000000021cda0         dq         0x000000000021f910                          ; DATA XREF=j_posix_fadvise
                     read@GOT:        // read
000000000021cda8         dq         0x000000000021f918                          ; DATA XREF=j_read
                     memcmp@GOT:        // memcmp
000000000021cdb0         dq         0x000000000021f928                          ; DATA XREF=j_memcmp
                     fallocate@GOT:        // fallocate
000000000021cdb8         dq         0x000000000021f930                          ; DATA XREF=j_fallocate
                     fputs_unlocked@GOT:        // fputs_unlocked
000000000021cdc0         dq         0x000000000021f938                          ; DATA XREF=j_fputs_unlocked
                     utimes@GOT:        // utimes
000000000021cdc8         dq         0x000000000021f940                          ; DATA XREF=j_utimes
                     calloc@GOT:        // calloc
000000000021cdd0         dq         0x000000000021f948                          ; DATA XREF=j_calloc
                     __getdelim@GOT:        // __getdelim
000000000021cdd8         dq         0x000000000021f950                          ; DATA XREF=j___getdelim
                     strcmp@GOT:        // strcmp
000000000021cde0         dq         0x000000000021f958                          ; DATA XREF=j_strcmp
                     signal@GOT:        // signal
000000000021cde8         dq         0x000000000021f960                          ; DATA XREF=j_signal
                     dirfd@GOT:        // dirfd
000000000021cdf0         dq         0x000000000021f968                          ; DATA XREF=j_dirfd
                     getpwnam@GOT:        // getpwnam
000000000021cdf8         dq         0x000000000021f970                          ; DATA XREF=j_getpwnam
                     fpathconf@GOT:        // fpathconf
000000000021ce00         dq         0x000000000021f978                          ; DATA XREF=j_fpathconf
                     rpmatch@GOT:        // rpmatch
000000000021ce08         dq         0x000000000021f980                          ; DATA XREF=j_rpmatch
                     syscall@GOT:        // syscall
000000000021ce10         dq         0x000000000021f988                          ; DATA XREF=j_syscall
                     mkfifo@GOT:        // mkfifo
000000000021ce18         dq         0x000000000021f990                          ; DATA XREF=j_mkfifo
                     umask@GOT:        // umask
000000000021ce20         dq         0x000000000021f9a0                          ; DATA XREF=j_umask
                     memcpy@GOT:        // memcpy
000000000021ce28         dq         0x000000000021f9a8                          ; DATA XREF=j_memcpy
                     getgrnam@GOT:        // getgrnam
000000000021ce30         dq         0x000000000021f9b0                          ; DATA XREF=j_getgrnam
                     __xmknod@GOT:        // __xmknod
000000000021ce38         dq         0x000000000021f9b8                          ; DATA XREF=j___xmknod
                     fileno@GOT:        // fileno
000000000021ce40         dq         0x000000000021f9c0                          ; DATA XREF=j_fileno
                     getgid@GOT:        // getgid
000000000021ce48         dq         0x000000000021f9c8                          ; DATA XREF=j_getgid
                     __xstat@GOT:        // __xstat
000000000021ce50         dq         0x000000000021f9d0                          ; DATA XREF=j___xstat
                     readdir@GOT:        // readdir
000000000021ce58         dq         0x000000000021f9d8                          ; DATA XREF=j_readdir
                     malloc@GOT:        // malloc
000000000021ce60         dq         0x000000000021f9e0                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
000000000021ce68         dq         0x000000000021f9e8                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
000000000021ce70         dq         0x000000000021f9f0                          ; DATA XREF=j_nl_langinfo
                     __fxstat@GOT:        // __fxstat
000000000021ce78         dq         0x000000000021f9f8                          ; DATA XREF=j___fxstat
                     endpwent@GOT:        // endpwent
000000000021ce80         dq         0x000000000021fa00                          ; DATA XREF=j_endpwent
                     lchown@GOT:        // lchown
000000000021ce88         dq         0x000000000021fa08                          ; DATA XREF=j_lchown
                     __freading@GOT:        // __freading
000000000021ce90         dq         0x000000000021fa10                          ; DATA XREF=j___freading
                     fchdir@GOT:        // fchdir
000000000021ce98         dq         0x000000000021fa18                          ; DATA XREF=j_fchdir
                     fwrite_unlocked@GOT:        // fwrite_unlocked
000000000021cea0         dq         0x000000000021fa20                          ; DATA XREF=j_fwrite_unlocked
                     chown@GOT:        // chown
000000000021cea8         dq         0x000000000021fa28                          ; DATA XREF=j_chown
                     realloc@GOT:        // realloc
000000000021ceb0         dq         0x000000000021fa30                          ; DATA XREF=j_realloc
                     stpncpy@GOT:        // stpncpy
000000000021ceb8         dq         0x000000000021fa38                          ; DATA XREF=j_stpncpy
                     fdopen@GOT:        // fdopen
000000000021cec0         dq         0x000000000021fa40                          ; DATA XREF=j_fdopen
                     linkat@GOT:        // linkat
000000000021cec8         dq         0x000000000021fa48                          ; DATA XREF=j_linkat
                     setlocale@GOT:        // setlocale
000000000021ced0         dq         0x000000000021fa50                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
000000000021ced8         dq         0x000000000021fa58                          ; DATA XREF=j___printf_chk
                     fchmod@GOT:        // fchmod
000000000021cee0         dq         0x000000000021fa60                          ; DATA XREF=j_fchmod
                     setvbuf@GOT:        // setvbuf
000000000021cee8         dq         0x000000000021fa68                          ; DATA XREF=j_setvbuf
                     chmod@GOT:        // chmod
000000000021cef0         dq         0x000000000021fa70                          ; DATA XREF=j_chmod
                     mempcpy@GOT:        // mempcpy
000000000021cef8         dq         0x000000000021fa78                          ; DATA XREF=j_mempcpy
                     error@GOT:        // error
000000000021cf00         dq         0x000000000021fa80                          ; DATA XREF=j_error
                     waitpid@GOT:        // waitpid
000000000021cf08         dq         0x000000000021fa88                          ; DATA XREF=j_waitpid
                     __explicit_bzero_chk@GOT:        // __explicit_bzero_chk
000000000021cf10         dq         0x000000000021fa90                          ; DATA XREF=j___explicit_bzero_chk
                     open@GOT:        // open
000000000021cf18         dq         0x000000000021fa98                          ; DATA XREF=j_open
                     fseeko@GOT:        // fseeko
000000000021cf20         dq         0x000000000021faa0                          ; DATA XREF=j_fseeko
                     fchown@GOT:        // fchown
000000000021cf28         dq         0x000000000021faa8                          ; DATA XREF=j_fchown
                     fopen@GOT:        // fopen
000000000021cf30         dq         0x000000000021fab0                          ; DATA XREF=j_fopen
                     rename@GOT:        // rename
000000000021cf38         dq         0x000000000021fab8                          ; DATA XREF=j_rename
                     fdopendir@GOT:        // fdopendir
000000000021cf40         dq         0x000000000021fac0                          ; DATA XREF=j_fdopendir
                     futimens@GOT:        // futimens
000000000021cf48         dq         0x000000000021fac8                          ; DATA XREF=j_futimens
                     euidaccess@GOT:        // euidaccess
000000000021cf50         dq         0x000000000021fad0                          ; DATA XREF=j_euidaccess
                     strtoul@GOT:        // strtoul
000000000021cf58         dq         0x000000000021fad8                          ; DATA XREF=j_strtoul
                     __cxa_atexit@GOT:        // __cxa_atexit
000000000021cf60         dq         0x000000000021fae0                          ; DATA XREF=j___cxa_atexit
                     renameat@GOT:        // renameat
000000000021cf68         dq         0x000000000021fae8                          ; DATA XREF=j_renameat
                     getpagesize@GOT:        // getpagesize
000000000021cf70         dq         0x000000000021faf0                          ; DATA XREF=j_getpagesize
                     getppid@GOT:        // getppid
000000000021cf78         dq         0x000000000021faf8                          ; DATA XREF=j_getppid
                     exit@GOT:        // exit
000000000021cf80         dq         0x000000000021fb00                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
000000000021cf88         dq         0x000000000021fb08                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
000000000021cf90         dq         0x000000000021fb10                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
000000000021cf98         dq         0x000000000021fb20                          ; DATA XREF=j_mbsinit
                     symlinkat@GOT:        // symlinkat
000000000021cfa0         dq         0x000000000021fb28                          ; DATA XREF=j_symlinkat
                     execlp@GOT:        // execlp
000000000021cfa8         dq         0x000000000021fb30                          ; DATA XREF=j_execlp
                     iswprint@GOT:        // iswprint
000000000021cfb0         dq         0x000000000021fb38                          ; DATA XREF=j_iswprint
                     fork@GOT:        // fork
000000000021cfb8         dq         0x000000000021fb48                          ; DATA XREF=j_fork
                     futimesat@GOT:        // futimesat
000000000021cfc0         dq         0x000000000021fb50                          ; DATA XREF=j_futimesat
                     __ctype_b_loc@GOT:        // __ctype_b_loc
000000000021cfc8         dq         0x000000000021fb58                          ; DATA XREF=j___ctype_b_loc
                     qword_21cfd0:
000000000021cfd0         dq         0x0000000000000000                          ; DATA XREF=sub_30d0, utimecmpat+1584
                     qword_21cfd8:
000000000021cfd8         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
000000000021cfe0         db  0x00 ; '.'                                         ; DATA XREF=_start+36
000000000021cfe1         db  0x00 ; '.'
000000000021cfe2         db  0x00 ; '.'
000000000021cfe3         db  0x00 ; '.'
000000000021cfe4         db  0x00 ; '.'
000000000021cfe5         db  0x00 ; '.'
000000000021cfe6         db  0x00 ; '.'
000000000021cfe7         db  0x00 ; '.'
                     qword_21cfe8:
000000000021cfe8         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_21cff0:
000000000021cff0         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_21cff8:
000000000021cff8         dq         0x0000000000000000                          ; DATA XREF=j_qword_21cff8, __do_global_dtors_aux+9


        ; Section .data
        ; Range: [0x21d000; 0x21d0c8[ (200 bytes)
        ; File offset : [118784; 118984[ (200 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

000000000021d000         align      8
                     __dso_handle:
000000000021d008         dq         0x000000000021d008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     first_call.7488:
000000000021d010         db         0x01                                        ; DATA XREF=install_file_in_file+504, install_file_in_file+523
000000000021d011         align      4
                     dir_mode_bits:
000000000021d014         dd         0x00000fff                                  ; DATA XREF=main+1388, process_dir+49
                     dir_mode:
000000000021d018         dd         0x000001ed                                  ; DATA XREF=main+1421, process_dir+32
                     mode:
000000000021d01c         dd         0x000001ed                                  ; DATA XREF=main+1407, main+1497, install_file_in_file+86, install_file_in_file+422
                     use_default_selinux_context:
000000000021d020         db         0x01                                        ; DATA XREF=main+782, main+1011, install_file_in_file+449, install_file_in_file+1062
000000000021d021         align      8
                     strip_program:
000000000021d028         dq         0x0000000000016436                          ; DATA XREF=main+658, install_file_in_file+1517
                     mask.7898:
000000000021d030         dd         0xffffffff                                  ; DATA XREF=cached_umask+1, cached_umask+27
000000000021d034         align      2
000000000021d03a         db  0x02 ; '.'
000000000021d03b         db  0x00 ; '.'
000000000021d03c         db  0x00 ; '.'
000000000021d03d         db  0x00 ; '.'
000000000021d03e         db  0x00 ; '.'
000000000021d03f         db  0x00 ; '.'
                     Version:
000000000021d040         dq         0x00000000000180c1                          ; "8.31", DATA XREF=main+835
                     exit_failure:
000000000021d048         dd         0x00000001                                  ; DATA XREF=close_stdin+168, close_stdout+130, xalloc_die+23, randread_error+51
000000000021d04c         db  0x00 ; '.'
000000000021d04d         db  0x00 ; '.'
000000000021d04e         db  0x00 ; '.'
000000000021d04f         db  0x00 ; '.'
000000000021d050         db  0x00 ; '.'
000000000021d051         db  0x00 ; '.'
000000000021d052         db  0x00 ; '.'
000000000021d053         db  0x00 ; '.'
000000000021d054         db  0x00 ; '.'
000000000021d055         db  0x00 ; '.'
000000000021d056         db  0x00 ; '.'
000000000021d057         db  0x00 ; '.'
000000000021d058         db  0x00 ; '.'
000000000021d059         db  0x00 ; '.'
000000000021d05a         db  0x00 ; '.'
000000000021d05b         db  0x00 ; '.'
000000000021d05c         db  0x00 ; '.'
000000000021d05d         db  0x00 ; '.'
000000000021d05e         db  0x00 ; '.'
000000000021d05f         db  0x00 ; '.'
                     quote_quoting_options:
000000000021d060         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
000000000021d061         db  0x00 ; '.'
000000000021d062         db  0x00 ; '.'
000000000021d063         db  0x00 ; '.'
000000000021d064         db  0x00 ; '.'
000000000021d065         db  0x00 ; '.'
000000000021d066         db  0x00 ; '.'
000000000021d067         db  0x00 ; '.'
000000000021d068         db  0x00 ; '.'
000000000021d069         db  0x00 ; '.'
000000000021d06a         db  0x00 ; '.'
000000000021d06b         db  0x00 ; '.'
000000000021d06c         db  0x00 ; '.'
000000000021d06d         db  0x00 ; '.'
000000000021d06e         db  0x00 ; '.'
000000000021d06f         db  0x00 ; '.'
000000000021d070         db  0x00 ; '.'
000000000021d071         db  0x00 ; '.'
000000000021d072         db  0x00 ; '.'
000000000021d073         db  0x00 ; '.'
000000000021d074         db  0x00 ; '.'
000000000021d075         db  0x00 ; '.'
000000000021d076         db  0x00 ; '.'
000000000021d077         db  0x00 ; '.'
000000000021d078         db  0x00 ; '.'
000000000021d079         db  0x00 ; '.'
000000000021d07a         db  0x00 ; '.'
000000000021d07b         db  0x00 ; '.'
000000000021d07c         db  0x00 ; '.'
000000000021d07d         db  0x00 ; '.'
000000000021d07e         db  0x00 ; '.'
000000000021d07f         db  0x00 ; '.'
000000000021d080         db  0x00 ; '.'
000000000021d081         db  0x00 ; '.'
000000000021d082         db  0x00 ; '.'
000000000021d083         db  0x00 ; '.'
000000000021d084         db  0x00 ; '.'
000000000021d085         db  0x00 ; '.'
000000000021d086         db  0x00 ; '.'
000000000021d087         db  0x00 ; '.'
000000000021d088         db  0x00 ; '.'
000000000021d089         db  0x00 ; '.'
000000000021d08a         db  0x00 ; '.'
000000000021d08b         db  0x00 ; '.'
000000000021d08c         db  0x00 ; '.'
000000000021d08d         db  0x00 ; '.'
000000000021d08e         db  0x00 ; '.'
000000000021d08f         db  0x00 ; '.'
000000000021d090         db  0x00 ; '.'
000000000021d091         db  0x00 ; '.'
000000000021d092         db  0x00 ; '.'
000000000021d093         db  0x00 ; '.'
000000000021d094         db  0x00 ; '.'
000000000021d095         db  0x00 ; '.'
000000000021d096         db  0x00 ; '.'
000000000021d097         db  0x00 ; '.'
                     nslots:
000000000021d098         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000021d09c         align      32
                     slotvec:
000000000021d0a0         dq         0x000000000021d0b0                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
000000000021d0a8         db  0x00 ; '.'
000000000021d0a9         db  0x00 ; '.'
000000000021d0aa         db  0x00 ; '.'
000000000021d0ab         db  0x00 ; '.'
000000000021d0ac         db  0x00 ; '.'
000000000021d0ad         db  0x00 ; '.'
000000000021d0ae         db  0x00 ; '.'
000000000021d0af         db  0x00 ; '.'
                     slotvec0:
000000000021d0b0         dq         1.26481e-321, 1.09961e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec
                     argmatch_die:
000000000021d0c0         dq         0x0000000000012a30                          ; DATA XREF=get_version.part.0+4
                     __TMC_END__:
000000000021d0c8         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7
000000000021d0c9         db  0x00 ; '.'
000000000021d0ca         db  0x00 ; '.'
000000000021d0cb         db  0x00 ; '.'
000000000021d0cc         db  0x00 ; '.'
000000000021d0cd         db  0x00 ; '.'
000000000021d0ce         db  0x00 ; '.'
000000000021d0cf         db  0x00 ; '.'
000000000021d0d0         db  0x00 ; '.'
000000000021d0d1         db  0x00 ; '.'
000000000021d0d2         db  0x00 ; '.'
000000000021d0d3         db  0x00 ; '.'
000000000021d0d4         db  0x00 ; '.'
000000000021d0d5         db  0x00 ; '.'
000000000021d0d6         db  0x00 ; '.'
000000000021d0d7         db  0x00 ; '.'
000000000021d0d8         db  0x00 ; '.'
000000000021d0d9         db  0x00 ; '.'
000000000021d0da         db  0x00 ; '.'
000000000021d0db         db  0x00 ; '.'
000000000021d0dc         db  0x00 ; '.'
000000000021d0dd         db  0x00 ; '.'
000000000021d0de         db  0x00 ; '.'
000000000021d0df         db  0x00 ; '.'


        ; Section .bss
        ; Range: [0x21d0e0; 0x21f738[ (9816 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
000000000021d0e0         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+102
000000000021d0e1         db  0x00 ; '.'
000000000021d0e2         db  0x00 ; '.'
000000000021d0e3         db  0x00 ; '.'
000000000021d0e4         db  0x00 ; '.'
000000000021d0e5         db  0x00 ; '.'
000000000021d0e6         db  0x00 ; '.'
000000000021d0e7         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
000000000021d0e8         db  0x00 ; '.'                                         ; DATA XREF=main+828, announce_mkdir.part.9+39, usage+134, usage+171, usage+208, usage+245, usage+282, usage+319, usage+356, usage+393, usage+430
000000000021d0e9         db  0x00 ; '.'
000000000021d0ea         db  0x00 ; '.'
000000000021d0eb         db  0x00 ; '.'
000000000021d0ec         db  0x00 ; '.'
000000000021d0ed         db  0x00 ; '.'
000000000021d0ee         db  0x00 ; '.'
000000000021d0ef         db  0x00 ; '.'
                     stdin@@GLIBC_2.2.5:
000000000021d0f0         db  0x00 ; '.'                                         ; DATA XREF=close_stdin+4, close_stdin+63, close_stdin+201, yesno+12
000000000021d0f1         db  0x00 ; '.'
000000000021d0f2         db  0x00 ; '.'
000000000021d0f3         db  0x00 ; '.'
000000000021d0f4         db  0x00 ; '.'
000000000021d0f5         db  0x00 ; '.'
000000000021d0f6         db  0x00 ; '.'
000000000021d0f7         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
000000000021d0f8         db  0x00 ; '.'                                         ; DATA XREF=main+1264
000000000021d0f9         db  0x00 ; '.'
000000000021d0fa         db  0x00 ; '.'
000000000021d0fb         db  0x00 ; '.'
000000000021d0fc         db  0x00 ; '.'
000000000021d0fd         db  0x00 ; '.'
000000000021d0fe         db  0x00 ; '.'
000000000021d0ff         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
000000000021d100         db  0x00 ; '.'                                         ; DATA XREF=main+641, main+721, main+766, main+889, main+908, main+949, main+974, main+1041
000000000021d101         db  0x00 ; '.'
000000000021d102         db  0x00 ; '.'
000000000021d103         db  0x00 ; '.'
000000000021d104         db  0x00 ; '.'
000000000021d105         db  0x00 ; '.'
000000000021d106         db  0x00 ; '.'
000000000021d107         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
000000000021d108         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
000000000021d109         db  0x00 ; '.'
000000000021d10a         db  0x00 ; '.'
000000000021d10b         db  0x00 ; '.'
000000000021d10c         db  0x00 ; '.'
000000000021d10d         db  0x00 ; '.'
000000000021d10e         db  0x00 ; '.'
000000000021d10f         db  0x00 ; '.'
000000000021d110         db  0x00 ; '.'
000000000021d111         db  0x00 ; '.'
000000000021d112         db  0x00 ; '.'
000000000021d113         db  0x00 ; '.'
000000000021d114         db  0x00 ; '.'
000000000021d115         db  0x00 ; '.'
000000000021d116         db  0x00 ; '.'
000000000021d117         db  0x00 ; '.'
000000000021d118         db  0x00 ; '.'
000000000021d119         db  0x00 ; '.'
000000000021d11a         db  0x00 ; '.'
000000000021d11b         db  0x00 ; '.'
000000000021d11c         db  0x00 ; '.'
000000000021d11d         db  0x00 ; '.'
000000000021d11e         db  0x00 ; '.'
000000000021d11f         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
000000000021d120         db  0x00 ; '.'                                         ; DATA XREF=usage+61, overwrite_ok.isra.12+159, overwrite_ok.isra.12+242, close_stdout+44, set_program_name+125, argmatch_valid+37, argmatch_valid+95, argmatch_valid+174, argmatch_valid+216
000000000021d121         db  0x00 ; '.'
000000000021d122         db  0x00 ; '.'
000000000021d123         db  0x00 ; '.'
000000000021d124         db  0x00 ; '.'
000000000021d125         db  0x00 ; '.'
000000000021d126         db  0x00 ; '.'
000000000021d127         db  0x00 ; '.'
                     completed.7697:
000000000021d128         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
000000000021d129         db  0x00 ; '.'
000000000021d12a         db  0x00 ; '.'
000000000021d12b         db  0x00 ; '.'
000000000021d12c         db  0x00 ; '.'
000000000021d12d         db  0x00 ; '.'
000000000021d12e         db  0x00 ; '.'
000000000021d12f         db  0x00 ; '.'
000000000021d130         db  0x00 ; '.'
000000000021d131         db  0x00 ; '.'
000000000021d132         db  0x00 ; '.'
000000000021d133         db  0x00 ; '.'
000000000021d134         db  0x00 ; '.'
000000000021d135         db  0x00 ; '.'
000000000021d136         db  0x00 ; '.'
000000000021d137         db  0x00 ; '.'
000000000021d138         db  0x00 ; '.'
000000000021d139         db  0x00 ; '.'
000000000021d13a         db  0x00 ; '.'
000000000021d13b         db  0x00 ; '.'
000000000021d13c         db  0x00 ; '.'
000000000021d13d         db  0x00 ; '.'
000000000021d13e         db  0x00 ; '.'
000000000021d13f         db  0x00 ; '.'
                     a_buff.7455:
000000000021d140         db  0x00 ; '.'                                         ; DATA XREF=install_file_in_file+839
000000000021d141         db  0x00 ; '.'
000000000021d142         db  0x00 ; '.'
000000000021d143         db  0x00 ; '.'
000000000021d144         db  0x00 ; '.'
000000000021d145         db  0x00 ; '.'
000000000021d146         db  0x00 ; '.'
000000000021d147         db  0x00 ; '.'
000000000021d148         db  0x00 ; '.'
000000000021d149         db  0x00 ; '.'
000000000021d14a         db  0x00 ; '.'
000000000021d14b         db  0x00 ; '.'
000000000021d14c         db  0x00 ; '.'
000000000021d14d         db  0x00 ; '.'
000000000021d14e         db  0x00 ; '.'
000000000021d14f         db  0x00 ; '.'
000000000021d150         db  0x00 ; '.'
000000000021d151         db  0x00 ; '.'
000000000021d152         db  0x00 ; '.'
000000000021d153         db  0x00 ; '.'
000000000021d154         db  0x00 ; '.'
000000000021d155         db  0x00 ; '.'
000000000021d156         db  0x00 ; '.'
000000000021d157         db  0x00 ; '.'
000000000021d158         db  0x00 ; '.'
000000000021d159         db  0x00 ; '.'
000000000021d15a         db  0x00 ; '.'
000000000021d15b         db  0x00 ; '.'
000000000021d15c         db  0x00 ; '.'
000000000021d15d         db  0x00 ; '.'
000000000021d15e         db  0x00 ; '.'
000000000021d15f         db  0x00 ; '.'
000000000021d160         db  0x00 ; '.'
000000000021d161         db  0x00 ; '.'
000000000021d162         db  0x00 ; '.'
000000000021d163         db  0x00 ; '.'
000000000021d164         db  0x00 ; '.'
000000000021d165         db  0x00 ; '.'
000000000021d166         db  0x00 ; '.'
000000000021d167         db  0x00 ; '.'
000000000021d168         db  0x00 ; '.'
000000000021d169         db  0x00 ; '.'
000000000021d16a         db  0x00 ; '.'
000000000021d16b         db  0x00 ; '.'
000000000021d16c         db  0x00 ; '.'
000000000021d16d         db  0x00 ; '.'
000000000021d16e         db  0x00 ; '.'
000000000021d16f         db  0x00 ; '.'
000000000021d170         db  0x00 ; '.'
000000000021d171         db  0x00 ; '.'
000000000021d172         db  0x00 ; '.'
000000000021d173         db  0x00 ; '.'
000000000021d174         db  0x00 ; '.'
000000000021d175         db  0x00 ; '.'
000000000021d176         db  0x00 ; '.'
000000000021d177         db  0x00 ; '.'
000000000021d178         db  0x00 ; '.'
000000000021d179         db  0x00 ; '.'
000000000021d17a         db  0x00 ; '.'
000000000021d17b         db  0x00 ; '.'
000000000021d17c         db  0x00 ; '.'
000000000021d17d         db  0x00 ; '.'
000000000021d17e         db  0x00 ; '.'
000000000021d17f         db  0x00 ; '.'
000000000021d180         db  0x00 ; '.'
000000000021d181         db  0x00 ; '.'
000000000021d182         db  0x00 ; '.'
000000000021d183         db  0x00 ; '.'
000000000021d184         db  0x00 ; '.'
000000000021d185         db  0x00 ; '.'
000000000021d186         db  0x00 ; '.'
000000000021d187         db  0x00 ; '.'
000000000021d188         db  0x00 ; '.'
000000000021d189         db  0x00 ; '.'
000000000021d18a         db  0x00 ; '.'
000000000021d18b         db  0x00 ; '.'
000000000021d18c         db  0x00 ; '.'
000000000021d18d         db  0x00 ; '.'
000000000021d18e         db  0x00 ; '.'
000000000021d18f         db  0x00 ; '.'
000000000021d190         db  0x00 ; '.'
000000000021d191         db  0x00 ; '.'
000000000021d192         db  0x00 ; '.'
000000000021d193         db  0x00 ; '.'
000000000021d194         db  0x00 ; '.'
000000000021d195         db  0x00 ; '.'
000000000021d196         db  0x00 ; '.'
000000000021d197         db  0x00 ; '.'
000000000021d198         db  0x00 ; '.'
000000000021d199         db  0x00 ; '.'
000000000021d19a         db  0x00 ; '.'
000000000021d19b         db  0x00 ; '.'
000000000021d19c         db  0x00 ; '.'
000000000021d19d         db  0x00 ; '.'
000000000021d19e         db  0x00 ; '.'
000000000021d19f         db  0x00 ; '.'
000000000021d1a0         db  0x00 ; '.'
000000000021d1a1         db  0x00 ; '.'
000000000021d1a2         db  0x00 ; '.'
000000000021d1a3         db  0x00 ; '.'
000000000021d1a4         db  0x00 ; '.'
000000000021d1a5         db  0x00 ; '.'
000000000021d1a6         db  0x00 ; '.'
000000000021d1a7         db  0x00 ; '.'
000000000021d1a8         db  0x00 ; '.'
000000000021d1a9         db  0x00 ; '.'
000000000021d1aa         db  0x00 ; '.'
000000000021d1ab         db  0x00 ; '.'
000000000021d1ac         db  0x00 ; '.'
000000000021d1ad         db  0x00 ; '.'
000000000021d1ae         db  0x00 ; '.'
000000000021d1af         db  0x00 ; '.'
000000000021d1b0         db  0x00 ; '.'
000000000021d1b1         db  0x00 ; '.'
000000000021d1b2         db  0x00 ; '.'
000000000021d1b3         db  0x00 ; '.'
000000000021d1b4         db  0x00 ; '.'
000000000021d1b5         db  0x00 ; '.'
000000000021d1b6         db  0x00 ; '.'
000000000021d1b7         db  0x00 ; '.'
000000000021d1b8         db  0x00 ; '.'
000000000021d1b9         db  0x00 ; '.'
000000000021d1ba         db  0x00 ; '.'
000000000021d1bb         db  0x00 ; '.'
000000000021d1bc         db  0x00 ; '.'
000000000021d1bd         db  0x00 ; '.'
000000000021d1be         db  0x00 ; '.'
000000000021d1bf         db  0x00 ; '.'
000000000021d1c0         db  0x00 ; '.'
000000000021d1c1         db  0x00 ; '.'
000000000021d1c2         db  0x00 ; '.'
000000000021d1c3         db  0x00 ; '.'
000000000021d1c4         db  0x00 ; '.'
000000000021d1c5         db  0x00 ; '.'
000000000021d1c6         db  0x00 ; '.'
000000000021d1c7         db  0x00 ; '.'
000000000021d1c8         db  0x00 ; '.'
000000000021d1c9         db  0x00 ; '.'
000000000021d1ca         db  0x00 ; '.'
000000000021d1cb         db  0x00 ; '.'
000000000021d1cc         db  0x00 ; '.'
000000000021d1cd         db  0x00 ; '.'
000000000021d1ce         db  0x00 ; '.'
000000000021d1cf         db  0x00 ; '.'
000000000021d1d0         db  0x00 ; '.'
000000000021d1d1         db  0x00 ; '.'
000000000021d1d2         db  0x00 ; '.'
000000000021d1d3         db  0x00 ; '.'
000000000021d1d4         db  0x00 ; '.'
000000000021d1d5         db  0x00 ; '.'
000000000021d1d6         db  0x00 ; '.'
000000000021d1d7         db  0x00 ; '.'
000000000021d1d8         db  0x00 ; '.'
000000000021d1d9         db  0x00 ; '.'
000000000021d1da         db  0x00 ; '.'
000000000021d1db         db  0x00 ; '.'
000000000021d1dc         db  0x00 ; '.'
000000000021d1dd         db  0x00 ; '.'
000000000021d1de         db  0x00 ; '.'
000000000021d1df         db  0x00 ; '.'
000000000021d1e0         db  0x00 ; '.'
000000000021d1e1         db  0x00 ; '.'
000000000021d1e2         db  0x00 ; '.'
000000000021d1e3         db  0x00 ; '.'
000000000021d1e4         db  0x00 ; '.'
000000000021d1e5         db  0x00 ; '.'
000000000021d1e6         db  0x00 ; '.'
000000000021d1e7         db  0x00 ; '.'
000000000021d1e8         db  0x00 ; '.'
000000000021d1e9         db  0x00 ; '.'
000000000021d1ea         db  0x00 ; '.'
000000000021d1eb         db  0x00 ; '.'
000000000021d1ec         db  0x00 ; '.'
000000000021d1ed         db  0x00 ; '.'
000000000021d1ee         db  0x00 ; '.'
000000000021d1ef         db  0x00 ; '.'
000000000021d1f0         db  0x00 ; '.'
000000000021d1f1         db  0x00 ; '.'
000000000021d1f2         db  0x00 ; '.'
000000000021d1f3         db  0x00 ; '.'
000000000021d1f4         db  0x00 ; '.'
000000000021d1f5         db  0x00 ; '.'
000000000021d1f6         db  0x00 ; '.'
000000000021d1f7         db  0x00 ; '.'
000000000021d1f8         db  0x00 ; '.'
000000000021d1f9         db  0x00 ; '.'
000000000021d1fa         db  0x00 ; '.'
000000000021d1fb         db  0x00 ; '.'
000000000021d1fc         db  0x00 ; '.'
000000000021d1fd         db  0x00 ; '.'
000000000021d1fe         db  0x00 ; '.'
000000000021d1ff         db  0x00 ; '.'
000000000021d200         db  0x00 ; '.'
000000000021d201         db  0x00 ; '.'
000000000021d202         db  0x00 ; '.'
000000000021d203         db  0x00 ; '.'
000000000021d204         db  0x00 ; '.'
000000000021d205         db  0x00 ; '.'
000000000021d206         db  0x00 ; '.'
000000000021d207         db  0x00 ; '.'
000000000021d208         db  0x00 ; '.'
000000000021d209         db  0x00 ; '.'
000000000021d20a         db  0x00 ; '.'
000000000021d20b         db  0x00 ; '.'
000000000021d20c         db  0x00 ; '.'
000000000021d20d         db  0x00 ; '.'
000000000021d20e         db  0x00 ; '.'
000000000021d20f         db  0x00 ; '.'
000000000021d210         db  0x00 ; '.'
000000000021d211         db  0x00 ; '.'
000000000021d212         db  0x00 ; '.'
000000000021d213         db  0x00 ; '.'
000000000021d214         db  0x00 ; '.'
000000000021d215         db  0x00 ; '.'
000000000021d216         db  0x00 ; '.'
000000000021d217         db  0x00 ; '.'
000000000021d218         db  0x00 ; '.'
000000000021d219         db  0x00 ; '.'
000000000021d21a         db  0x00 ; '.'
000000000021d21b         db  0x00 ; '.'
000000000021d21c         db  0x00 ; '.'
000000000021d21d         db  0x00 ; '.'
000000000021d21e         db  0x00 ; '.'
000000000021d21f         db  0x00 ; '.'
000000000021d220         db  0x00 ; '.'
000000000021d221         db  0x00 ; '.'
000000000021d222         db  0x00 ; '.'
000000000021d223         db  0x00 ; '.'
000000000021d224         db  0x00 ; '.'
000000000021d225         db  0x00 ; '.'
000000000021d226         db  0x00 ; '.'
000000000021d227         db  0x00 ; '.'
000000000021d228         db  0x00 ; '.'
000000000021d229         db  0x00 ; '.'
000000000021d22a         db  0x00 ; '.'
000000000021d22b         db  0x00 ; '.'
000000000021d22c         db  0x00 ; '.'
000000000021d22d         db  0x00 ; '.'
000000000021d22e         db  0x00 ; '.'
000000000021d22f         db  0x00 ; '.'
000000000021d230         db  0x00 ; '.'
000000000021d231         db  0x00 ; '.'
000000000021d232         db  0x00 ; '.'
000000000021d233         db  0x00 ; '.'
000000000021d234         db  0x00 ; '.'
000000000021d235         db  0x00 ; '.'
000000000021d236         db  0x00 ; '.'
000000000021d237         db  0x00 ; '.'
000000000021d238         db  0x00 ; '.'
000000000021d239         db  0x00 ; '.'
000000000021d23a         db  0x00 ; '.'
000000000021d23b         db  0x00 ; '.'
000000000021d23c         db  0x00 ; '.'
000000000021d23d         db  0x00 ; '.'
000000000021d23e         db  0x00 ; '.'
000000000021d23f         db  0x00 ; '.'
000000000021d240         db  0x00 ; '.'
000000000021d241         db  0x00 ; '.'
000000000021d242         db  0x00 ; '.'
000000000021d243         db  0x00 ; '.'
000000000021d244         db  0x00 ; '.'
000000000021d245         db  0x00 ; '.'
000000000021d246         db  0x00 ; '.'
000000000021d247         db  0x00 ; '.'
000000000021d248         db  0x00 ; '.'
000000000021d249         db  0x00 ; '.'
000000000021d24a         db  0x00 ; '.'
000000000021d24b         db  0x00 ; '.'
000000000021d24c         db  0x00 ; '.'
000000000021d24d         db  0x00 ; '.'
000000000021d24e         db  0x00 ; '.'
000000000021d24f         db  0x00 ; '.'
000000000021d250         db  0x00 ; '.'
000000000021d251         db  0x00 ; '.'
000000000021d252         db  0x00 ; '.'
000000000021d253         db  0x00 ; '.'
000000000021d254         db  0x00 ; '.'
000000000021d255         db  0x00 ; '.'
000000000021d256         db  0x00 ; '.'
000000000021d257         db  0x00 ; '.'
000000000021d258         db  0x00 ; '.'
000000000021d259         db  0x00 ; '.'
000000000021d25a         db  0x00 ; '.'
000000000021d25b         db  0x00 ; '.'
000000000021d25c         db  0x00 ; '.'
000000000021d25d         db  0x00 ; '.'
000000000021d25e         db  0x00 ; '.'
000000000021d25f         db  0x00 ; '.'
000000000021d260         db  0x00 ; '.'
000000000021d261         db  0x00 ; '.'
000000000021d262         db  0x00 ; '.'
000000000021d263         db  0x00 ; '.'
000000000021d264         db  0x00 ; '.'
000000000021d265         db  0x00 ; '.'
000000000021d266         db  0x00 ; '.'
000000000021d267         db  0x00 ; '.'
000000000021d268         db  0x00 ; '.'
000000000021d269         db  0x00 ; '.'
000000000021d26a         db  0x00 ; '.'
000000000021d26b         db  0x00 ; '.'
000000000021d26c         db  0x00 ; '.'
000000000021d26d         db  0x00 ; '.'
000000000021d26e         db  0x00 ; '.'
000000000021d26f         db  0x00 ; '.'
000000000021d270         db  0x00 ; '.'
000000000021d271         db  0x00 ; '.'
000000000021d272         db  0x00 ; '.'
000000000021d273         db  0x00 ; '.'
000000000021d274         db  0x00 ; '.'
000000000021d275         db  0x00 ; '.'
000000000021d276         db  0x00 ; '.'
000000000021d277         db  0x00 ; '.'
000000000021d278         db  0x00 ; '.'
000000000021d279         db  0x00 ; '.'
000000000021d27a         db  0x00 ; '.'
000000000021d27b         db  0x00 ; '.'
000000000021d27c         db  0x00 ; '.'
000000000021d27d         db  0x00 ; '.'
000000000021d27e         db  0x00 ; '.'
000000000021d27f         db  0x00 ; '.'
000000000021d280         db  0x00 ; '.'
000000000021d281         db  0x00 ; '.'
000000000021d282         db  0x00 ; '.'
000000000021d283         db  0x00 ; '.'
000000000021d284         db  0x00 ; '.'
000000000021d285         db  0x00 ; '.'
000000000021d286         db  0x00 ; '.'
000000000021d287         db  0x00 ; '.'
000000000021d288         db  0x00 ; '.'
000000000021d289         db  0x00 ; '.'
000000000021d28a         db  0x00 ; '.'
000000000021d28b         db  0x00 ; '.'
000000000021d28c         db  0x00 ; '.'
000000000021d28d         db  0x00 ; '.'
000000000021d28e         db  0x00 ; '.'
000000000021d28f         db  0x00 ; '.'
000000000021d290         db  0x00 ; '.'
000000000021d291         db  0x00 ; '.'
000000000021d292         db  0x00 ; '.'
000000000021d293         db  0x00 ; '.'
000000000021d294         db  0x00 ; '.'
000000000021d295         db  0x00 ; '.'
000000000021d296         db  0x00 ; '.'
000000000021d297         db  0x00 ; '.'
000000000021d298         db  0x00 ; '.'
000000000021d299         db  0x00 ; '.'
000000000021d29a         db  0x00 ; '.'
000000000021d29b         db  0x00 ; '.'
000000000021d29c         db  0x00 ; '.'
000000000021d29d         db  0x00 ; '.'
000000000021d29e         db  0x00 ; '.'
000000000021d29f         db  0x00 ; '.'
000000000021d2a0         db  0x00 ; '.'
000000000021d2a1         db  0x00 ; '.'
000000000021d2a2         db  0x00 ; '.'
000000000021d2a3         db  0x00 ; '.'
000000000021d2a4         db  0x00 ; '.'
000000000021d2a5         db  0x00 ; '.'
000000000021d2a6         db  0x00 ; '.'
000000000021d2a7         db  0x00 ; '.'
000000000021d2a8         db  0x00 ; '.'
000000000021d2a9         db  0x00 ; '.'
000000000021d2aa         db  0x00 ; '.'
000000000021d2ab         db  0x00 ; '.'
000000000021d2ac         db  0x00 ; '.'
000000000021d2ad         db  0x00 ; '.'
000000000021d2ae         db  0x00 ; '.'
000000000021d2af         db  0x00 ; '.'
000000000021d2b0         db  0x00 ; '.'
000000000021d2b1         db  0x00 ; '.'
000000000021d2b2         db  0x00 ; '.'
000000000021d2b3         db  0x00 ; '.'
000000000021d2b4         db  0x00 ; '.'
000000000021d2b5         db  0x00 ; '.'
000000000021d2b6         db  0x00 ; '.'
000000000021d2b7         db  0x00 ; '.'
000000000021d2b8         db  0x00 ; '.'
000000000021d2b9         db  0x00 ; '.'
000000000021d2ba         db  0x00 ; '.'
000000000021d2bb         db  0x00 ; '.'
000000000021d2bc         db  0x00 ; '.'
000000000021d2bd         db  0x00 ; '.'
000000000021d2be         db  0x00 ; '.'
000000000021d2bf         db  0x00 ; '.'
000000000021d2c0         db  0x00 ; '.'
000000000021d2c1         db  0x00 ; '.'
000000000021d2c2         db  0x00 ; '.'
000000000021d2c3         db  0x00 ; '.'
000000000021d2c4         db  0x00 ; '.'
000000000021d2c5         db  0x00 ; '.'
000000000021d2c6         db  0x00 ; '.'
000000000021d2c7         db  0x00 ; '.'
000000000021d2c8         db  0x00 ; '.'
000000000021d2c9         db  0x00 ; '.'
000000000021d2ca         db  0x00 ; '.'
000000000021d2cb         db  0x00 ; '.'
000000000021d2cc         db  0x00 ; '.'
000000000021d2cd         db  0x00 ; '.'
000000000021d2ce         db  0x00 ; '.'
000000000021d2cf         db  0x00 ; '.'
000000000021d2d0         db  0x00 ; '.'
000000000021d2d1         db  0x00 ; '.'
000000000021d2d2         db  0x00 ; '.'
000000000021d2d3         db  0x00 ; '.'
000000000021d2d4         db  0x00 ; '.'
000000000021d2d5         db  0x00 ; '.'
000000000021d2d6         db  0x00 ; '.'
000000000021d2d7         db  0x00 ; '.'
000000000021d2d8         db  0x00 ; '.'
000000000021d2d9         db  0x00 ; '.'
000000000021d2da         db  0x00 ; '.'
000000000021d2db         db  0x00 ; '.'
000000000021d2dc         db  0x00 ; '.'
000000000021d2dd         db  0x00 ; '.'
000000000021d2de         db  0x00 ; '.'
000000000021d2df         db  0x00 ; '.'
000000000021d2e0         db  0x00 ; '.'
000000000021d2e1         db  0x00 ; '.'
000000000021d2e2         db  0x00 ; '.'
000000000021d2e3         db  0x00 ; '.'
000000000021d2e4         db  0x00 ; '.'
000000000021d2e5         db  0x00 ; '.'
000000000021d2e6         db  0x00 ; '.'
000000000021d2e7         db  0x00 ; '.'
000000000021d2e8         db  0x00 ; '.'
000000000021d2e9         db  0x00 ; '.'
000000000021d2ea         db  0x00 ; '.'
000000000021d2eb         db  0x00 ; '.'
000000000021d2ec         db  0x00 ; '.'
000000000021d2ed         db  0x00 ; '.'
000000000021d2ee         db  0x00 ; '.'
000000000021d2ef         db  0x00 ; '.'
000000000021d2f0         db  0x00 ; '.'
000000000021d2f1         db  0x00 ; '.'
000000000021d2f2         db  0x00 ; '.'
000000000021d2f3         db  0x00 ; '.'
000000000021d2f4         db  0x00 ; '.'
000000000021d2f5         db  0x00 ; '.'
000000000021d2f6         db  0x00 ; '.'
000000000021d2f7         db  0x00 ; '.'
000000000021d2f8         db  0x00 ; '.'
000000000021d2f9         db  0x00 ; '.'
000000000021d2fa         db  0x00 ; '.'
000000000021d2fb         db  0x00 ; '.'
000000000021d2fc         db  0x00 ; '.'
000000000021d2fd         db  0x00 ; '.'
000000000021d2fe         db  0x00 ; '.'
000000000021d2ff         db  0x00 ; '.'
000000000021d300         db  0x00 ; '.'
000000000021d301         db  0x00 ; '.'
000000000021d302         db  0x00 ; '.'
000000000021d303         db  0x00 ; '.'
000000000021d304         db  0x00 ; '.'
000000000021d305         db  0x00 ; '.'
000000000021d306         db  0x00 ; '.'
000000000021d307         db  0x00 ; '.'
000000000021d308         db  0x00 ; '.'
000000000021d309         db  0x00 ; '.'
000000000021d30a         db  0x00 ; '.'
000000000021d30b         db  0x00 ; '.'
000000000021d30c         db  0x00 ; '.'
000000000021d30d         db  0x00 ; '.'
000000000021d30e         db  0x00 ; '.'
000000000021d30f         db  0x00 ; '.'
000000000021d310         db  0x00 ; '.'
000000000021d311         db  0x00 ; '.'
000000000021d312         db  0x00 ; '.'
000000000021d313         db  0x00 ; '.'
000000000021d314         db  0x00 ; '.'
000000000021d315         db  0x00 ; '.'
000000000021d316         db  0x00 ; '.'
000000000021d317         db  0x00 ; '.'
000000000021d318         db  0x00 ; '.'
000000000021d319         db  0x00 ; '.'
000000000021d31a         db  0x00 ; '.'
000000000021d31b         db  0x00 ; '.'
000000000021d31c         db  0x00 ; '.'
000000000021d31d         db  0x00 ; '.'
000000000021d31e         db  0x00 ; '.'
000000000021d31f         db  0x00 ; '.'
000000000021d320         db  0x00 ; '.'
000000000021d321         db  0x00 ; '.'
000000000021d322         db  0x00 ; '.'
000000000021d323         db  0x00 ; '.'
000000000021d324         db  0x00 ; '.'
000000000021d325         db  0x00 ; '.'
000000000021d326         db  0x00 ; '.'
000000000021d327         db  0x00 ; '.'
000000000021d328         db  0x00 ; '.'
000000000021d329         db  0x00 ; '.'
000000000021d32a         db  0x00 ; '.'
000000000021d32b         db  0x00 ; '.'
000000000021d32c         db  0x00 ; '.'
000000000021d32d         db  0x00 ; '.'
000000000021d32e         db  0x00 ; '.'
000000000021d32f         db  0x00 ; '.'
000000000021d330         db  0x00 ; '.'
000000000021d331         db  0x00 ; '.'
000000000021d332         db  0x00 ; '.'
000000000021d333         db  0x00 ; '.'
000000000021d334         db  0x00 ; '.'
000000000021d335         db  0x00 ; '.'
000000000021d336         db  0x00 ; '.'
000000000021d337         db  0x00 ; '.'
000000000021d338         db  0x00 ; '.'
000000000021d339         db  0x00 ; '.'
000000000021d33a         db  0x00 ; '.'
000000000021d33b         db  0x00 ; '.'
000000000021d33c         db  0x00 ; '.'
000000000021d33d         db  0x00 ; '.'
000000000021d33e         db  0x00 ; '.'
000000000021d33f         db  0x00 ; '.'
000000000021d340         db  0x00 ; '.'
000000000021d341         db  0x00 ; '.'
000000000021d342         db  0x00 ; '.'
000000000021d343         db  0x00 ; '.'
000000000021d344         db  0x00 ; '.'
000000000021d345         db  0x00 ; '.'
000000000021d346         db  0x00 ; '.'
000000000021d347         db  0x00 ; '.'
000000000021d348         db  0x00 ; '.'
000000000021d349         db  0x00 ; '.'
000000000021d34a         db  0x00 ; '.'
000000000021d34b         db  0x00 ; '.'
000000000021d34c         db  0x00 ; '.'
000000000021d34d         db  0x00 ; '.'
000000000021d34e         db  0x00 ; '.'
000000000021d34f         db  0x00 ; '.'
000000000021d350         db  0x00 ; '.'
000000000021d351         db  0x00 ; '.'
000000000021d352         db  0x00 ; '.'
000000000021d353         db  0x00 ; '.'
000000000021d354         db  0x00 ; '.'
000000000021d355         db  0x00 ; '.'
000000000021d356         db  0x00 ; '.'
000000000021d357         db  0x00 ; '.'
000000000021d358         db  0x00 ; '.'
000000000021d359         db  0x00 ; '.'
000000000021d35a         db  0x00 ; '.'
000000000021d35b         db  0x00 ; '.'
000000000021d35c         db  0x00 ; '.'
000000000021d35d         db  0x00 ; '.'
000000000021d35e         db  0x00 ; '.'
000000000021d35f         db  0x00 ; '.'
000000000021d360         db  0x00 ; '.'
000000000021d361         db  0x00 ; '.'
000000000021d362         db  0x00 ; '.'
000000000021d363         db  0x00 ; '.'
000000000021d364         db  0x00 ; '.'
000000000021d365         db  0x00 ; '.'
000000000021d366         db  0x00 ; '.'
000000000021d367         db  0x00 ; '.'
000000000021d368         db  0x00 ; '.'
000000000021d369         db  0x00 ; '.'
000000000021d36a         db  0x00 ; '.'
000000000021d36b         db  0x00 ; '.'
000000000021d36c         db  0x00 ; '.'
000000000021d36d         db  0x00 ; '.'
000000000021d36e         db  0x00 ; '.'
000000000021d36f         db  0x00 ; '.'
000000000021d370         db  0x00 ; '.'
000000000021d371         db  0x00 ; '.'
000000000021d372         db  0x00 ; '.'
000000000021d373         db  0x00 ; '.'
000000000021d374         db  0x00 ; '.'
000000000021d375         db  0x00 ; '.'
000000000021d376         db  0x00 ; '.'
000000000021d377         db  0x00 ; '.'
000000000021d378         db  0x00 ; '.'
000000000021d379         db  0x00 ; '.'
000000000021d37a         db  0x00 ; '.'
000000000021d37b         db  0x00 ; '.'
000000000021d37c         db  0x00 ; '.'
000000000021d37d         db  0x00 ; '.'
000000000021d37e         db  0x00 ; '.'
000000000021d37f         db  0x00 ; '.'
000000000021d380         db  0x00 ; '.'
000000000021d381         db  0x00 ; '.'
000000000021d382         db  0x00 ; '.'
000000000021d383         db  0x00 ; '.'
000000000021d384         db  0x00 ; '.'
000000000021d385         db  0x00 ; '.'
000000000021d386         db  0x00 ; '.'
000000000021d387         db  0x00 ; '.'
000000000021d388         db  0x00 ; '.'
000000000021d389         db  0x00 ; '.'
000000000021d38a         db  0x00 ; '.'
000000000021d38b         db  0x00 ; '.'
000000000021d38c         db  0x00 ; '.'
000000000021d38d         db  0x00 ; '.'
000000000021d38e         db  0x00 ; '.'
000000000021d38f         db  0x00 ; '.'
000000000021d390         db  0x00 ; '.'
000000000021d391         db  0x00 ; '.'
000000000021d392         db  0x00 ; '.'
000000000021d393         db  0x00 ; '.'
000000000021d394         db  0x00 ; '.'
000000000021d395         db  0x00 ; '.'
000000000021d396         db  0x00 ; '.'
000000000021d397         db  0x00 ; '.'
000000000021d398         db  0x00 ; '.'
000000000021d399         db  0x00 ; '.'
000000000021d39a         db  0x00 ; '.'
000000000021d39b         db  0x00 ; '.'
000000000021d39c         db  0x00 ; '.'
000000000021d39d         db  0x00 ; '.'
000000000021d39e         db  0x00 ; '.'
000000000021d39f         db  0x00 ; '.'
000000000021d3a0         db  0x00 ; '.'
000000000021d3a1         db  0x00 ; '.'
000000000021d3a2         db  0x00 ; '.'
000000000021d3a3         db  0x00 ; '.'
000000000021d3a4         db  0x00 ; '.'
000000000021d3a5         db  0x00 ; '.'
000000000021d3a6         db  0x00 ; '.'
000000000021d3a7         db  0x00 ; '.'
000000000021d3a8         db  0x00 ; '.'
000000000021d3a9         db  0x00 ; '.'
000000000021d3aa         db  0x00 ; '.'
000000000021d3ab         db  0x00 ; '.'
000000000021d3ac         db  0x00 ; '.'
000000000021d3ad         db  0x00 ; '.'
000000000021d3ae         db  0x00 ; '.'
000000000021d3af         db  0x00 ; '.'
000000000021d3b0         db  0x00 ; '.'
000000000021d3b1         db  0x00 ; '.'
000000000021d3b2         db  0x00 ; '.'
000000000021d3b3         db  0x00 ; '.'
000000000021d3b4         db  0x00 ; '.'
000000000021d3b5         db  0x00 ; '.'
000000000021d3b6         db  0x00 ; '.'
000000000021d3b7         db  0x00 ; '.'
000000000021d3b8         db  0x00 ; '.'
000000000021d3b9         db  0x00 ; '.'
000000000021d3ba         db  0x00 ; '.'
000000000021d3bb         db  0x00 ; '.'
000000000021d3bc         db  0x00 ; '.'
000000000021d3bd         db  0x00 ; '.'
000000000021d3be         db  0x00 ; '.'
000000000021d3bf         db  0x00 ; '.'
000000000021d3c0         db  0x00 ; '.'
000000000021d3c1         db  0x00 ; '.'
000000000021d3c2         db  0x00 ; '.'
000000000021d3c3         db  0x00 ; '.'
000000000021d3c4         db  0x00 ; '.'
000000000021d3c5         db  0x00 ; '.'
000000000021d3c6         db  0x00 ; '.'
000000000021d3c7         db  0x00 ; '.'
000000000021d3c8         db  0x00 ; '.'
000000000021d3c9         db  0x00 ; '.'
000000000021d3ca         db  0x00 ; '.'
000000000021d3cb         db  0x00 ; '.'
000000000021d3cc         db  0x00 ; '.'
000000000021d3cd         db  0x00 ; '.'
000000000021d3ce         db  0x00 ; '.'
000000000021d3cf         db  0x00 ; '.'
000000000021d3d0         db  0x00 ; '.'
000000000021d3d1         db  0x00 ; '.'
000000000021d3d2         db  0x00 ; '.'
000000000021d3d3         db  0x00 ; '.'
000000000021d3d4         db  0x00 ; '.'
000000000021d3d5         db  0x00 ; '.'
000000000021d3d6         db  0x00 ; '.'
000000000021d3d7         db  0x00 ; '.'
000000000021d3d8         db  0x00 ; '.'
000000000021d3d9         db  0x00 ; '.'
000000000021d3da         db  0x00 ; '.'
000000000021d3db         db  0x00 ; '.'
000000000021d3dc         db  0x00 ; '.'
000000000021d3dd         db  0x00 ; '.'
000000000021d3de         db  0x00 ; '.'
000000000021d3df         db  0x00 ; '.'
000000000021d3e0         db  0x00 ; '.'
000000000021d3e1         db  0x00 ; '.'
000000000021d3e2         db  0x00 ; '.'
000000000021d3e3         db  0x00 ; '.'
000000000021d3e4         db  0x00 ; '.'
000000000021d3e5         db  0x00 ; '.'
000000000021d3e6         db  0x00 ; '.'
000000000021d3e7         db  0x00 ; '.'
000000000021d3e8         db  0x00 ; '.'
000000000021d3e9         db  0x00 ; '.'
000000000021d3ea         db  0x00 ; '.'
000000000021d3eb         db  0x00 ; '.'
000000000021d3ec         db  0x00 ; '.'
000000000021d3ed         db  0x00 ; '.'
000000000021d3ee         db  0x00 ; '.'
000000000021d3ef         db  0x00 ; '.'
000000000021d3f0         db  0x00 ; '.'
000000000021d3f1         db  0x00 ; '.'
000000000021d3f2         db  0x00 ; '.'
000000000021d3f3         db  0x00 ; '.'
000000000021d3f4         db  0x00 ; '.'
000000000021d3f5         db  0x00 ; '.'
000000000021d3f6         db  0x00 ; '.'
000000000021d3f7         db  0x00 ; '.'
000000000021d3f8         db  0x00 ; '.'
000000000021d3f9         db  0x00 ; '.'
000000000021d3fa         db  0x00 ; '.'
000000000021d3fb         db  0x00 ; '.'
000000000021d3fc         db  0x00 ; '.'
000000000021d3fd         db  0x00 ; '.'
000000000021d3fe         db  0x00 ; '.'
000000000021d3ff         db  0x00 ; '.'
000000000021d400         db  0x00 ; '.'
000000000021d401         db  0x00 ; '.'
000000000021d402         db  0x00 ; '.'
000000000021d403         db  0x00 ; '.'
000000000021d404         db  0x00 ; '.'
000000000021d405         db  0x00 ; '.'
000000000021d406         db  0x00 ; '.'
000000000021d407         db  0x00 ; '.'
000000000021d408         db  0x00 ; '.'
000000000021d409         db  0x00 ; '.'
000000000021d40a         db  0x00 ; '.'
000000000021d40b         db  0x00 ; '.'
000000000021d40c         db  0x00 ; '.'
000000000021d40d         db  0x00 ; '.'
000000000021d40e         db  0x00 ; '.'
000000000021d40f         db  0x00 ; '.'
000000000021d410         db  0x00 ; '.'
000000000021d411         db  0x00 ; '.'
000000000021d412         db  0x00 ; '.'
000000000021d413         db  0x00 ; '.'
000000000021d414         db  0x00 ; '.'
000000000021d415         db  0x00 ; '.'
000000000021d416         db  0x00 ; '.'
000000000021d417         db  0x00 ; '.'
000000000021d418         db  0x00 ; '.'
000000000021d419         db  0x00 ; '.'
000000000021d41a         db  0x00 ; '.'
000000000021d41b         db  0x00 ; '.'
000000000021d41c         db  0x00 ; '.'
000000000021d41d         db  0x00 ; '.'
000000000021d41e         db  0x00 ; '.'
000000000021d41f         db  0x00 ; '.'
000000000021d420         db  0x00 ; '.'
000000000021d421         db  0x00 ; '.'
000000000021d422         db  0x00 ; '.'
000000000021d423         db  0x00 ; '.'
000000000021d424         db  0x00 ; '.'
000000000021d425         db  0x00 ; '.'
000000000021d426         db  0x00 ; '.'
000000000021d427         db  0x00 ; '.'
000000000021d428         db  0x00 ; '.'
000000000021d429         db  0x00 ; '.'
000000000021d42a         db  0x00 ; '.'
000000000021d42b         db  0x00 ; '.'
000000000021d42c         db  0x00 ; '.'
000000000021d42d         db  0x00 ; '.'
000000000021d42e         db  0x00 ; '.'
000000000021d42f         db  0x00 ; '.'
000000000021d430         db  0x00 ; '.'
000000000021d431         db  0x00 ; '.'
000000000021d432         db  0x00 ; '.'
000000000021d433         db  0x00 ; '.'
000000000021d434         db  0x00 ; '.'
000000000021d435         db  0x00 ; '.'
000000000021d436         db  0x00 ; '.'
000000000021d437         db  0x00 ; '.'
000000000021d438         db  0x00 ; '.'
000000000021d439         db  0x00 ; '.'
000000000021d43a         db  0x00 ; '.'
000000000021d43b         db  0x00 ; '.'
000000000021d43c         db  0x00 ; '.'
000000000021d43d         db  0x00 ; '.'
000000000021d43e         db  0x00 ; '.'
000000000021d43f         db  0x00 ; '.'
000000000021d440         db  0x00 ; '.'
000000000021d441         db  0x00 ; '.'
000000000021d442         db  0x00 ; '.'
000000000021d443         db  0x00 ; '.'
000000000021d444         db  0x00 ; '.'
000000000021d445         db  0x00 ; '.'
000000000021d446         db  0x00 ; '.'
000000000021d447         db  0x00 ; '.'
000000000021d448         db  0x00 ; '.'
000000000021d449         db  0x00 ; '.'
000000000021d44a         db  0x00 ; '.'
000000000021d44b         db  0x00 ; '.'
000000000021d44c         db  0x00 ; '.'
000000000021d44d         db  0x00 ; '.'
000000000021d44e         db  0x00 ; '.'
000000000021d44f         db  0x00 ; '.'
000000000021d450         db  0x00 ; '.'
000000000021d451         db  0x00 ; '.'
000000000021d452         db  0x00 ; '.'
000000000021d453         db  0x00 ; '.'
000000000021d454         db  0x00 ; '.'
000000000021d455         db  0x00 ; '.'
000000000021d456         db  0x00 ; '.'
000000000021d457         db  0x00 ; '.'
000000000021d458         db  0x00 ; '.'
000000000021d459         db  0x00 ; '.'
000000000021d45a         db  0x00 ; '.'
000000000021d45b         db  0x00 ; '.'
000000000021d45c         db  0x00 ; '.'
000000000021d45d         db  0x00 ; '.'
000000000021d45e         db  0x00 ; '.'
000000000021d45f         db  0x00 ; '.'
000000000021d460         db  0x00 ; '.'
000000000021d461         db  0x00 ; '.'
000000000021d462         db  0x00 ; '.'
000000000021d463         db  0x00 ; '.'
000000000021d464         db  0x00 ; '.'
000000000021d465         db  0x00 ; '.'
000000000021d466         db  0x00 ; '.'
000000000021d467         db  0x00 ; '.'
000000000021d468         db  0x00 ; '.'
000000000021d469         db  0x00 ; '.'
000000000021d46a         db  0x00 ; '.'
000000000021d46b         db  0x00 ; '.'
000000000021d46c         db  0x00 ; '.'
000000000021d46d         db  0x00 ; '.'
000000000021d46e         db  0x00 ; '.'
000000000021d46f         db  0x00 ; '.'
000000000021d470         db  0x00 ; '.'
000000000021d471         db  0x00 ; '.'
000000000021d472         db  0x00 ; '.'
000000000021d473         db  0x00 ; '.'
000000000021d474         db  0x00 ; '.'
000000000021d475         db  0x00 ; '.'
000000000021d476         db  0x00 ; '.'
000000000021d477         db  0x00 ; '.'
000000000021d478         db  0x00 ; '.'
000000000021d479         db  0x00 ; '.'
000000000021d47a         db  0x00 ; '.'
000000000021d47b         db  0x00 ; '.'
000000000021d47c         db  0x00 ; '.'
000000000021d47d         db  0x00 ; '.'
000000000021d47e         db  0x00 ; '.'
000000000021d47f         db  0x00 ; '.'
000000000021d480         db  0x00 ; '.'
000000000021d481         db  0x00 ; '.'
000000000021d482         db  0x00 ; '.'
000000000021d483         db  0x00 ; '.'
000000000021d484         db  0x00 ; '.'
000000000021d485         db  0x00 ; '.'
000000000021d486         db  0x00 ; '.'
000000000021d487         db  0x00 ; '.'
000000000021d488         db  0x00 ; '.'
000000000021d489         db  0x00 ; '.'
000000000021d48a         db  0x00 ; '.'
000000000021d48b         db  0x00 ; '.'
000000000021d48c         db  0x00 ; '.'
000000000021d48d         db  0x00 ; '.'
000000000021d48e         db  0x00 ; '.'
000000000021d48f         db  0x00 ; '.'
000000000021d490         db  0x00 ; '.'
000000000021d491         db  0x00 ; '.'
000000000021d492         db  0x00 ; '.'
000000000021d493         db  0x00 ; '.'
000000000021d494         db  0x00 ; '.'
000000000021d495         db  0x00 ; '.'
000000000021d496         db  0x00 ; '.'
000000000021d497         db  0x00 ; '.'
000000000021d498         db  0x00 ; '.'
000000000021d499         db  0x00 ; '.'
000000000021d49a         db  0x00 ; '.'
000000000021d49b         db  0x00 ; '.'
000000000021d49c         db  0x00 ; '.'
000000000021d49d         db  0x00 ; '.'
000000000021d49e         db  0x00 ; '.'
000000000021d49f         db  0x00 ; '.'
000000000021d4a0         db  0x00 ; '.'
000000000021d4a1         db  0x00 ; '.'
000000000021d4a2         db  0x00 ; '.'
000000000021d4a3         db  0x00 ; '.'
000000000021d4a4         db  0x00 ; '.'
000000000021d4a5         db  0x00 ; '.'
000000000021d4a6         db  0x00 ; '.'
000000000021d4a7         db  0x00 ; '.'
000000000021d4a8         db  0x00 ; '.'
000000000021d4a9         db  0x00 ; '.'
000000000021d4aa         db  0x00 ; '.'
000000000021d4ab         db  0x00 ; '.'
000000000021d4ac         db  0x00 ; '.'
000000000021d4ad         db  0x00 ; '.'
000000000021d4ae         db  0x00 ; '.'
000000000021d4af         db  0x00 ; '.'
000000000021d4b0         db  0x00 ; '.'
000000000021d4b1         db  0x00 ; '.'
000000000021d4b2         db  0x00 ; '.'
000000000021d4b3         db  0x00 ; '.'
000000000021d4b4         db  0x00 ; '.'
000000000021d4b5         db  0x00 ; '.'
000000000021d4b6         db  0x00 ; '.'
000000000021d4b7         db  0x00 ; '.'
000000000021d4b8         db  0x00 ; '.'
000000000021d4b9         db  0x00 ; '.'
000000000021d4ba         db  0x00 ; '.'
000000000021d4bb         db  0x00 ; '.'
000000000021d4bc         db  0x00 ; '.'
000000000021d4bd         db  0x00 ; '.'
000000000021d4be         db  0x00 ; '.'
000000000021d4bf         db  0x00 ; '.'
000000000021d4c0         db  0x00 ; '.'
000000000021d4c1         db  0x00 ; '.'
000000000021d4c2         db  0x00 ; '.'
000000000021d4c3         db  0x00 ; '.'
000000000021d4c4         db  0x00 ; '.'
000000000021d4c5         db  0x00 ; '.'
000000000021d4c6         db  0x00 ; '.'
000000000021d4c7         db  0x00 ; '.'
000000000021d4c8         db  0x00 ; '.'
000000000021d4c9         db  0x00 ; '.'
000000000021d4ca         db  0x00 ; '.'
000000000021d4cb         db  0x00 ; '.'
000000000021d4cc         db  0x00 ; '.'
000000000021d4cd         db  0x00 ; '.'
000000000021d4ce         db  0x00 ; '.'
000000000021d4cf         db  0x00 ; '.'
000000000021d4d0         db  0x00 ; '.'
000000000021d4d1         db  0x00 ; '.'
000000000021d4d2         db  0x00 ; '.'
000000000021d4d3         db  0x00 ; '.'
000000000021d4d4         db  0x00 ; '.'
000000000021d4d5         db  0x00 ; '.'
000000000021d4d6         db  0x00 ; '.'
000000000021d4d7         db  0x00 ; '.'
000000000021d4d8         db  0x00 ; '.'
000000000021d4d9         db  0x00 ; '.'
000000000021d4da         db  0x00 ; '.'
000000000021d4db         db  0x00 ; '.'
000000000021d4dc         db  0x00 ; '.'
000000000021d4dd         db  0x00 ; '.'
000000000021d4de         db  0x00 ; '.'
000000000021d4df         db  0x00 ; '.'
000000000021d4e0         db  0x00 ; '.'
000000000021d4e1         db  0x00 ; '.'
000000000021d4e2         db  0x00 ; '.'
000000000021d4e3         db  0x00 ; '.'
000000000021d4e4         db  0x00 ; '.'
000000000021d4e5         db  0x00 ; '.'
000000000021d4e6         db  0x00 ; '.'
000000000021d4e7         db  0x00 ; '.'
000000000021d4e8         db  0x00 ; '.'
000000000021d4e9         db  0x00 ; '.'
000000000021d4ea         db  0x00 ; '.'
000000000021d4eb         db  0x00 ; '.'
000000000021d4ec         db  0x00 ; '.'
000000000021d4ed         db  0x00 ; '.'
000000000021d4ee         db  0x00 ; '.'
000000000021d4ef         db  0x00 ; '.'
000000000021d4f0         db  0x00 ; '.'
000000000021d4f1         db  0x00 ; '.'
000000000021d4f2         db  0x00 ; '.'
000000000021d4f3         db  0x00 ; '.'
000000000021d4f4         db  0x00 ; '.'
000000000021d4f5         db  0x00 ; '.'
000000000021d4f6         db  0x00 ; '.'
000000000021d4f7         db  0x00 ; '.'
000000000021d4f8         db  0x00 ; '.'
000000000021d4f9         db  0x00 ; '.'
000000000021d4fa         db  0x00 ; '.'
000000000021d4fb         db  0x00 ; '.'
000000000021d4fc         db  0x00 ; '.'
000000000021d4fd         db  0x00 ; '.'
000000000021d4fe         db  0x00 ; '.'
000000000021d4ff         db  0x00 ; '.'
000000000021d500         db  0x00 ; '.'
000000000021d501         db  0x00 ; '.'
000000000021d502         db  0x00 ; '.'
000000000021d503         db  0x00 ; '.'
000000000021d504         db  0x00 ; '.'
000000000021d505         db  0x00 ; '.'
000000000021d506         db  0x00 ; '.'
000000000021d507         db  0x00 ; '.'
000000000021d508         db  0x00 ; '.'
000000000021d509         db  0x00 ; '.'
000000000021d50a         db  0x00 ; '.'
000000000021d50b         db  0x00 ; '.'
000000000021d50c         db  0x00 ; '.'
000000000021d50d         db  0x00 ; '.'
000000000021d50e         db  0x00 ; '.'
000000000021d50f         db  0x00 ; '.'
000000000021d510         db  0x00 ; '.'
000000000021d511         db  0x00 ; '.'
000000000021d512         db  0x00 ; '.'
000000000021d513         db  0x00 ; '.'
000000000021d514         db  0x00 ; '.'
000000000021d515         db  0x00 ; '.'
000000000021d516         db  0x00 ; '.'
000000000021d517         db  0x00 ; '.'
000000000021d518         db  0x00 ; '.'
000000000021d519         db  0x00 ; '.'
000000000021d51a         db  0x00 ; '.'
000000000021d51b         db  0x00 ; '.'
000000000021d51c         db  0x00 ; '.'
000000000021d51d         db  0x00 ; '.'
000000000021d51e         db  0x00 ; '.'
000000000021d51f         db  0x00 ; '.'
000000000021d520         db  0x00 ; '.'
000000000021d521         db  0x00 ; '.'
000000000021d522         db  0x00 ; '.'
000000000021d523         db  0x00 ; '.'
000000000021d524         db  0x00 ; '.'
000000000021d525         db  0x00 ; '.'
000000000021d526         db  0x00 ; '.'
000000000021d527         db  0x00 ; '.'
000000000021d528         db  0x00 ; '.'
000000000021d529         db  0x00 ; '.'
000000000021d52a         db  0x00 ; '.'
000000000021d52b         db  0x00 ; '.'
000000000021d52c         db  0x00 ; '.'
000000000021d52d         db  0x00 ; '.'
000000000021d52e         db  0x00 ; '.'
000000000021d52f         db  0x00 ; '.'
000000000021d530         db  0x00 ; '.'
000000000021d531         db  0x00 ; '.'
000000000021d532         db  0x00 ; '.'
000000000021d533         db  0x00 ; '.'
000000000021d534         db  0x00 ; '.'
000000000021d535         db  0x00 ; '.'
000000000021d536         db  0x00 ; '.'
000000000021d537         db  0x00 ; '.'
000000000021d538         db  0x00 ; '.'
000000000021d539         db  0x00 ; '.'
000000000021d53a         db  0x00 ; '.'
000000000021d53b         db  0x00 ; '.'
000000000021d53c         db  0x00 ; '.'
000000000021d53d         db  0x00 ; '.'
000000000021d53e         db  0x00 ; '.'
000000000021d53f         db  0x00 ; '.'
000000000021d540         db  0x00 ; '.'
000000000021d541         db  0x00 ; '.'
000000000021d542         db  0x00 ; '.'
000000000021d543         db  0x00 ; '.'
000000000021d544         db  0x00 ; '.'
000000000021d545         db  0x00 ; '.'
000000000021d546         db  0x00 ; '.'
000000000021d547         db  0x00 ; '.'
000000000021d548         db  0x00 ; '.'
000000000021d549         db  0x00 ; '.'
000000000021d54a         db  0x00 ; '.'
000000000021d54b         db  0x00 ; '.'
000000000021d54c         db  0x00 ; '.'
000000000021d54d         db  0x00 ; '.'
000000000021d54e         db  0x00 ; '.'
000000000021d54f         db  0x00 ; '.'
000000000021d550         db  0x00 ; '.'
000000000021d551         db  0x00 ; '.'
000000000021d552         db  0x00 ; '.'
000000000021d553         db  0x00 ; '.'
000000000021d554         db  0x00 ; '.'
000000000021d555         db  0x00 ; '.'
000000000021d556         db  0x00 ; '.'
000000000021d557         db  0x00 ; '.'
000000000021d558         db  0x00 ; '.'
000000000021d559         db  0x00 ; '.'
000000000021d55a         db  0x00 ; '.'
000000000021d55b         db  0x00 ; '.'
000000000021d55c         db  0x00 ; '.'
000000000021d55d         db  0x00 ; '.'
000000000021d55e         db  0x00 ; '.'
000000000021d55f         db  0x00 ; '.'
000000000021d560         db  0x00 ; '.'
000000000021d561         db  0x00 ; '.'
000000000021d562         db  0x00 ; '.'
000000000021d563         db  0x00 ; '.'
000000000021d564         db  0x00 ; '.'
000000000021d565         db  0x00 ; '.'
000000000021d566         db  0x00 ; '.'
000000000021d567         db  0x00 ; '.'
000000000021d568         db  0x00 ; '.'
000000000021d569         db  0x00 ; '.'
000000000021d56a         db  0x00 ; '.'
000000000021d56b         db  0x00 ; '.'
000000000021d56c         db  0x00 ; '.'
000000000021d56d         db  0x00 ; '.'
000000000021d56e         db  0x00 ; '.'
000000000021d56f         db  0x00 ; '.'
000000000021d570         db  0x00 ; '.'
000000000021d571         db  0x00 ; '.'
000000000021d572         db  0x00 ; '.'
000000000021d573         db  0x00 ; '.'
000000000021d574         db  0x00 ; '.'
000000000021d575         db  0x00 ; '.'
000000000021d576         db  0x00 ; '.'
000000000021d577         db  0x00 ; '.'
000000000021d578         db  0x00 ; '.'
000000000021d579         db  0x00 ; '.'
000000000021d57a         db  0x00 ; '.'
000000000021d57b         db  0x00 ; '.'
000000000021d57c         db  0x00 ; '.'
000000000021d57d         db  0x00 ; '.'
000000000021d57e         db  0x00 ; '.'
000000000021d57f         db  0x00 ; '.'
000000000021d580         db  0x00 ; '.'
000000000021d581         db  0x00 ; '.'
000000000021d582         db  0x00 ; '.'
000000000021d583         db  0x00 ; '.'
000000000021d584         db  0x00 ; '.'
000000000021d585         db  0x00 ; '.'
000000000021d586         db  0x00 ; '.'
000000000021d587         db  0x00 ; '.'
000000000021d588         db  0x00 ; '.'
000000000021d589         db  0x00 ; '.'
000000000021d58a         db  0x00 ; '.'
000000000021d58b         db  0x00 ; '.'
000000000021d58c         db  0x00 ; '.'
000000000021d58d         db  0x00 ; '.'
000000000021d58e         db  0x00 ; '.'
000000000021d58f         db  0x00 ; '.'
000000000021d590         db  0x00 ; '.'
000000000021d591         db  0x00 ; '.'
000000000021d592         db  0x00 ; '.'
000000000021d593         db  0x00 ; '.'
000000000021d594         db  0x00 ; '.'
000000000021d595         db  0x00 ; '.'
000000000021d596         db  0x00 ; '.'
000000000021d597         db  0x00 ; '.'
000000000021d598         db  0x00 ; '.'
000000000021d599         db  0x00 ; '.'
000000000021d59a         db  0x00 ; '.'
000000000021d59b         db  0x00 ; '.'
000000000021d59c         db  0x00 ; '.'
000000000021d59d         db  0x00 ; '.'
000000000021d59e         db  0x00 ; '.'
000000000021d59f         db  0x00 ; '.'
000000000021d5a0         db  0x00 ; '.'
000000000021d5a1         db  0x00 ; '.'
000000000021d5a2         db  0x00 ; '.'
000000000021d5a3         db  0x00 ; '.'
000000000021d5a4         db  0x00 ; '.'
000000000021d5a5         db  0x00 ; '.'
000000000021d5a6         db  0x00 ; '.'
000000000021d5a7         db  0x00 ; '.'
000000000021d5a8         db  0x00 ; '.'
000000000021d5a9         db  0x00 ; '.'
000000000021d5aa         db  0x00 ; '.'
000000000021d5ab         db  0x00 ; '.'
000000000021d5ac         db  0x00 ; '.'
000000000021d5ad         db  0x00 ; '.'
000000000021d5ae         db  0x00 ; '.'
000000000021d5af         db  0x00 ; '.'
000000000021d5b0         db  0x00 ; '.'
000000000021d5b1         db  0x00 ; '.'
000000000021d5b2         db  0x00 ; '.'
000000000021d5b3         db  0x00 ; '.'
000000000021d5b4         db  0x00 ; '.'
000000000021d5b5         db  0x00 ; '.'
000000000021d5b6         db  0x00 ; '.'
000000000021d5b7         db  0x00 ; '.'
000000000021d5b8         db  0x00 ; '.'
000000000021d5b9         db  0x00 ; '.'
000000000021d5ba         db  0x00 ; '.'
000000000021d5bb         db  0x00 ; '.'
000000000021d5bc         db  0x00 ; '.'
000000000021d5bd         db  0x00 ; '.'
000000000021d5be         db  0x00 ; '.'
000000000021d5bf         db  0x00 ; '.'
000000000021d5c0         db  0x00 ; '.'
000000000021d5c1         db  0x00 ; '.'
000000000021d5c2         db  0x00 ; '.'
000000000021d5c3         db  0x00 ; '.'
000000000021d5c4         db  0x00 ; '.'
000000000021d5c5         db  0x00 ; '.'
000000000021d5c6         db  0x00 ; '.'
000000000021d5c7         db  0x00 ; '.'
000000000021d5c8         db  0x00 ; '.'
000000000021d5c9         db  0x00 ; '.'
000000000021d5ca         db  0x00 ; '.'
000000000021d5cb         db  0x00 ; '.'
000000000021d5cc         db  0x00 ; '.'
000000000021d5cd         db  0x00 ; '.'
000000000021d5ce         db  0x00 ; '.'
000000000021d5cf         db  0x00 ; '.'
000000000021d5d0         db  0x00 ; '.'
000000000021d5d1         db  0x00 ; '.'
000000000021d5d2         db  0x00 ; '.'
000000000021d5d3         db  0x00 ; '.'
000000000021d5d4         db  0x00 ; '.'
000000000021d5d5         db  0x00 ; '.'
000000000021d5d6         db  0x00 ; '.'
000000000021d5d7         db  0x00 ; '.'
000000000021d5d8         db  0x00 ; '.'
000000000021d5d9         db  0x00 ; '.'
000000000021d5da         db  0x00 ; '.'
000000000021d5db         db  0x00 ; '.'
000000000021d5dc         db  0x00 ; '.'
000000000021d5dd         db  0x00 ; '.'
000000000021d5de         db  0x00 ; '.'
000000000021d5df         db  0x00 ; '.'
000000000021d5e0         db  0x00 ; '.'
000000000021d5e1         db  0x00 ; '.'
000000000021d5e2         db  0x00 ; '.'
000000000021d5e3         db  0x00 ; '.'
000000000021d5e4         db  0x00 ; '.'
000000000021d5e5         db  0x00 ; '.'
000000000021d5e6         db  0x00 ; '.'
000000000021d5e7         db  0x00 ; '.'
000000000021d5e8         db  0x00 ; '.'
000000000021d5e9         db  0x00 ; '.'
000000000021d5ea         db  0x00 ; '.'
000000000021d5eb         db  0x00 ; '.'
000000000021d5ec         db  0x00 ; '.'
000000000021d5ed         db  0x00 ; '.'
000000000021d5ee         db  0x00 ; '.'
000000000021d5ef         db  0x00 ; '.'
000000000021d5f0         db  0x00 ; '.'
000000000021d5f1         db  0x00 ; '.'
000000000021d5f2         db  0x00 ; '.'
000000000021d5f3         db  0x00 ; '.'
000000000021d5f4         db  0x00 ; '.'
000000000021d5f5         db  0x00 ; '.'
000000000021d5f6         db  0x00 ; '.'
000000000021d5f7         db  0x00 ; '.'
000000000021d5f8         db  0x00 ; '.'
000000000021d5f9         db  0x00 ; '.'
000000000021d5fa         db  0x00 ; '.'
000000000021d5fb         db  0x00 ; '.'
000000000021d5fc         db  0x00 ; '.'
000000000021d5fd         db  0x00 ; '.'
000000000021d5fe         db  0x00 ; '.'
000000000021d5ff         db  0x00 ; '.'
000000000021d600         db  0x00 ; '.'
000000000021d601         db  0x00 ; '.'
000000000021d602         db  0x00 ; '.'
000000000021d603         db  0x00 ; '.'
000000000021d604         db  0x00 ; '.'
000000000021d605         db  0x00 ; '.'
000000000021d606         db  0x00 ; '.'
000000000021d607         db  0x00 ; '.'
000000000021d608         db  0x00 ; '.'
000000000021d609         db  0x00 ; '.'
000000000021d60a         db  0x00 ; '.'
000000000021d60b         db  0x00 ; '.'
000000000021d60c         db  0x00 ; '.'
000000000021d60d         db  0x00 ; '.'
000000000021d60e         db  0x00 ; '.'
000000000021d60f         db  0x00 ; '.'
000000000021d610         db  0x00 ; '.'
000000000021d611         db  0x00 ; '.'
000000000021d612         db  0x00 ; '.'
000000000021d613         db  0x00 ; '.'
000000000021d614         db  0x00 ; '.'
000000000021d615         db  0x00 ; '.'
000000000021d616         db  0x00 ; '.'
000000000021d617         db  0x00 ; '.'
000000000021d618         db  0x00 ; '.'
000000000021d619         db  0x00 ; '.'
000000000021d61a         db  0x00 ; '.'
000000000021d61b         db  0x00 ; '.'
000000000021d61c         db  0x00 ; '.'
000000000021d61d         db  0x00 ; '.'
000000000021d61e         db  0x00 ; '.'
000000000021d61f         db  0x00 ; '.'
000000000021d620         db  0x00 ; '.'
000000000021d621         db  0x00 ; '.'
000000000021d622         db  0x00 ; '.'
000000000021d623         db  0x00 ; '.'
000000000021d624         db  0x00 ; '.'
000000000021d625         db  0x00 ; '.'
000000000021d626         db  0x00 ; '.'
000000000021d627         db  0x00 ; '.'
000000000021d628         db  0x00 ; '.'
000000000021d629         db  0x00 ; '.'
000000000021d62a         db  0x00 ; '.'
000000000021d62b         db  0x00 ; '.'
000000000021d62c         db  0x00 ; '.'
000000000021d62d         db  0x00 ; '.'
000000000021d62e         db  0x00 ; '.'
000000000021d62f         db  0x00 ; '.'
000000000021d630         db  0x00 ; '.'
000000000021d631         db  0x00 ; '.'
000000000021d632         db  0x00 ; '.'
000000000021d633         db  0x00 ; '.'
000000000021d634         db  0x00 ; '.'
000000000021d635         db  0x00 ; '.'
000000000021d636         db  0x00 ; '.'
000000000021d637         db  0x00 ; '.'
000000000021d638         db  0x00 ; '.'
000000000021d639         db  0x00 ; '.'
000000000021d63a         db  0x00 ; '.'
000000000021d63b         db  0x00 ; '.'
000000000021d63c         db  0x00 ; '.'
000000000021d63d         db  0x00 ; '.'
000000000021d63e         db  0x00 ; '.'
000000000021d63f         db  0x00 ; '.'
000000000021d640         db  0x00 ; '.'
000000000021d641         db  0x00 ; '.'
000000000021d642         db  0x00 ; '.'
000000000021d643         db  0x00 ; '.'
000000000021d644         db  0x00 ; '.'
000000000021d645         db  0x00 ; '.'
000000000021d646         db  0x00 ; '.'
000000000021d647         db  0x00 ; '.'
000000000021d648         db  0x00 ; '.'
000000000021d649         db  0x00 ; '.'
000000000021d64a         db  0x00 ; '.'
000000000021d64b         db  0x00 ; '.'
000000000021d64c         db  0x00 ; '.'
000000000021d64d         db  0x00 ; '.'
000000000021d64e         db  0x00 ; '.'
000000000021d64f         db  0x00 ; '.'
000000000021d650         db  0x00 ; '.'
000000000021d651         db  0x00 ; '.'
000000000021d652         db  0x00 ; '.'
000000000021d653         db  0x00 ; '.'
000000000021d654         db  0x00 ; '.'
000000000021d655         db  0x00 ; '.'
000000000021d656         db  0x00 ; '.'
000000000021d657         db  0x00 ; '.'
000000000021d658         db  0x00 ; '.'
000000000021d659         db  0x00 ; '.'
000000000021d65a         db  0x00 ; '.'
000000000021d65b         db  0x00 ; '.'
000000000021d65c         db  0x00 ; '.'
000000000021d65d         db  0x00 ; '.'
000000000021d65e         db  0x00 ; '.'
000000000021d65f         db  0x00 ; '.'
000000000021d660         db  0x00 ; '.'
000000000021d661         db  0x00 ; '.'
000000000021d662         db  0x00 ; '.'
000000000021d663         db  0x00 ; '.'
000000000021d664         db  0x00 ; '.'
000000000021d665         db  0x00 ; '.'
000000000021d666         db  0x00 ; '.'
000000000021d667         db  0x00 ; '.'
000000000021d668         db  0x00 ; '.'
000000000021d669         db  0x00 ; '.'
000000000021d66a         db  0x00 ; '.'
000000000021d66b         db  0x00 ; '.'
000000000021d66c         db  0x00 ; '.'
000000000021d66d         db  0x00 ; '.'
000000000021d66e         db  0x00 ; '.'
000000000021d66f         db  0x00 ; '.'
000000000021d670         db  0x00 ; '.'
000000000021d671         db  0x00 ; '.'
000000000021d672         db  0x00 ; '.'
000000000021d673         db  0x00 ; '.'
000000000021d674         db  0x00 ; '.'
000000000021d675         db  0x00 ; '.'
000000000021d676         db  0x00 ; '.'
000000000021d677         db  0x00 ; '.'
000000000021d678         db  0x00 ; '.'
000000000021d679         db  0x00 ; '.'
000000000021d67a         db  0x00 ; '.'
000000000021d67b         db  0x00 ; '.'
000000000021d67c         db  0x00 ; '.'
000000000021d67d         db  0x00 ; '.'
000000000021d67e         db  0x00 ; '.'
000000000021d67f         db  0x00 ; '.'
000000000021d680         db  0x00 ; '.'
000000000021d681         db  0x00 ; '.'
000000000021d682         db  0x00 ; '.'
000000000021d683         db  0x00 ; '.'
000000000021d684         db  0x00 ; '.'
000000000021d685         db  0x00 ; '.'
000000000021d686         db  0x00 ; '.'
000000000021d687         db  0x00 ; '.'
000000000021d688         db  0x00 ; '.'
000000000021d689         db  0x00 ; '.'
000000000021d68a         db  0x00 ; '.'
000000000021d68b         db  0x00 ; '.'
000000000021d68c         db  0x00 ; '.'
000000000021d68d         db  0x00 ; '.'
000000000021d68e         db  0x00 ; '.'
000000000021d68f         db  0x00 ; '.'
000000000021d690         db  0x00 ; '.'
000000000021d691         db  0x00 ; '.'
000000000021d692         db  0x00 ; '.'
000000000021d693         db  0x00 ; '.'
000000000021d694         db  0x00 ; '.'
000000000021d695         db  0x00 ; '.'
000000000021d696         db  0x00 ; '.'
000000000021d697         db  0x00 ; '.'
000000000021d698         db  0x00 ; '.'
000000000021d699         db  0x00 ; '.'
000000000021d69a         db  0x00 ; '.'
000000000021d69b         db  0x00 ; '.'
000000000021d69c         db  0x00 ; '.'
000000000021d69d         db  0x00 ; '.'
000000000021d69e         db  0x00 ; '.'
000000000021d69f         db  0x00 ; '.'
000000000021d6a0         db  0x00 ; '.'
000000000021d6a1         db  0x00 ; '.'
000000000021d6a2         db  0x00 ; '.'
000000000021d6a3         db  0x00 ; '.'
000000000021d6a4         db  0x00 ; '.'
000000000021d6a5         db  0x00 ; '.'
000000000021d6a6         db  0x00 ; '.'
000000000021d6a7         db  0x00 ; '.'
000000000021d6a8         db  0x00 ; '.'
000000000021d6a9         db  0x00 ; '.'
000000000021d6aa         db  0x00 ; '.'
000000000021d6ab         db  0x00 ; '.'
000000000021d6ac         db  0x00 ; '.'
000000000021d6ad         db  0x00 ; '.'
000000000021d6ae         db  0x00 ; '.'
000000000021d6af         db  0x00 ; '.'
000000000021d6b0         db  0x00 ; '.'
000000000021d6b1         db  0x00 ; '.'
000000000021d6b2         db  0x00 ; '.'
000000000021d6b3         db  0x00 ; '.'
000000000021d6b4         db  0x00 ; '.'
000000000021d6b5         db  0x00 ; '.'
000000000021d6b6         db  0x00 ; '.'
000000000021d6b7         db  0x00 ; '.'
000000000021d6b8         db  0x00 ; '.'
000000000021d6b9         db  0x00 ; '.'
000000000021d6ba         db  0x00 ; '.'
000000000021d6bb         db  0x00 ; '.'
000000000021d6bc         db  0x00 ; '.'
000000000021d6bd         db  0x00 ; '.'
000000000021d6be         db  0x00 ; '.'
000000000021d6bf         db  0x00 ; '.'
000000000021d6c0         db  0x00 ; '.'
000000000021d6c1         db  0x00 ; '.'
000000000021d6c2         db  0x00 ; '.'
000000000021d6c3         db  0x00 ; '.'
000000000021d6c4         db  0x00 ; '.'
000000000021d6c5         db  0x00 ; '.'
000000000021d6c6         db  0x00 ; '.'
000000000021d6c7         db  0x00 ; '.'
000000000021d6c8         db  0x00 ; '.'
000000000021d6c9         db  0x00 ; '.'
000000000021d6ca         db  0x00 ; '.'
000000000021d6cb         db  0x00 ; '.'
000000000021d6cc         db  0x00 ; '.'
000000000021d6cd         db  0x00 ; '.'
000000000021d6ce         db  0x00 ; '.'
000000000021d6cf         db  0x00 ; '.'
000000000021d6d0         db  0x00 ; '.'
000000000021d6d1         db  0x00 ; '.'
000000000021d6d2         db  0x00 ; '.'
000000000021d6d3         db  0x00 ; '.'
000000000021d6d4         db  0x00 ; '.'
000000000021d6d5         db  0x00 ; '.'
000000000021d6d6         db  0x00 ; '.'
000000000021d6d7         db  0x00 ; '.'
000000000021d6d8         db  0x00 ; '.'
000000000021d6d9         db  0x00 ; '.'
000000000021d6da         db  0x00 ; '.'
000000000021d6db         db  0x00 ; '.'
000000000021d6dc         db  0x00 ; '.'
000000000021d6dd         db  0x00 ; '.'
000000000021d6de         db  0x00 ; '.'
000000000021d6df         db  0x00 ; '.'
000000000021d6e0         db  0x00 ; '.'
000000000021d6e1         db  0x00 ; '.'
000000000021d6e2         db  0x00 ; '.'
000000000021d6e3         db  0x00 ; '.'
000000000021d6e4         db  0x00 ; '.'
000000000021d6e5         db  0x00 ; '.'
000000000021d6e6         db  0x00 ; '.'
000000000021d6e7         db  0x00 ; '.'
000000000021d6e8         db  0x00 ; '.'
000000000021d6e9         db  0x00 ; '.'
000000000021d6ea         db  0x00 ; '.'
000000000021d6eb         db  0x00 ; '.'
000000000021d6ec         db  0x00 ; '.'
000000000021d6ed         db  0x00 ; '.'
000000000021d6ee         db  0x00 ; '.'
000000000021d6ef         db  0x00 ; '.'
000000000021d6f0         db  0x00 ; '.'
000000000021d6f1         db  0x00 ; '.'
000000000021d6f2         db  0x00 ; '.'
000000000021d6f3         db  0x00 ; '.'
000000000021d6f4         db  0x00 ; '.'
000000000021d6f5         db  0x00 ; '.'
000000000021d6f6         db  0x00 ; '.'
000000000021d6f7         db  0x00 ; '.'
000000000021d6f8         db  0x00 ; '.'
000000000021d6f9         db  0x00 ; '.'
000000000021d6fa         db  0x00 ; '.'
000000000021d6fb         db  0x00 ; '.'
000000000021d6fc         db  0x00 ; '.'
000000000021d6fd         db  0x00 ; '.'
000000000021d6fe         db  0x00 ; '.'
000000000021d6ff         db  0x00 ; '.'
000000000021d700         db  0x00 ; '.'
000000000021d701         db  0x00 ; '.'
000000000021d702         db  0x00 ; '.'
000000000021d703         db  0x00 ; '.'
000000000021d704         db  0x00 ; '.'
000000000021d705         db  0x00 ; '.'
000000000021d706         db  0x00 ; '.'
000000000021d707         db  0x00 ; '.'
000000000021d708         db  0x00 ; '.'
000000000021d709         db  0x00 ; '.'
000000000021d70a         db  0x00 ; '.'
000000000021d70b         db  0x00 ; '.'
000000000021d70c         db  0x00 ; '.'
000000000021d70d         db  0x00 ; '.'
000000000021d70e         db  0x00 ; '.'
000000000021d70f         db  0x00 ; '.'
000000000021d710         db  0x00 ; '.'
000000000021d711         db  0x00 ; '.'
000000000021d712         db  0x00 ; '.'
000000000021d713         db  0x00 ; '.'
000000000021d714         db  0x00 ; '.'
000000000021d715         db  0x00 ; '.'
000000000021d716         db  0x00 ; '.'
000000000021d717         db  0x00 ; '.'
000000000021d718         db  0x00 ; '.'
000000000021d719         db  0x00 ; '.'
000000000021d71a         db  0x00 ; '.'
000000000021d71b         db  0x00 ; '.'
000000000021d71c         db  0x00 ; '.'
000000000021d71d         db  0x00 ; '.'
000000000021d71e         db  0x00 ; '.'
000000000021d71f         db  0x00 ; '.'
000000000021d720         db  0x00 ; '.'
000000000021d721         db  0x00 ; '.'
000000000021d722         db  0x00 ; '.'
000000000021d723         db  0x00 ; '.'
000000000021d724         db  0x00 ; '.'
000000000021d725         db  0x00 ; '.'
000000000021d726         db  0x00 ; '.'
000000000021d727         db  0x00 ; '.'
000000000021d728         db  0x00 ; '.'
000000000021d729         db  0x00 ; '.'
000000000021d72a         db  0x00 ; '.'
000000000021d72b         db  0x00 ; '.'
000000000021d72c         db  0x00 ; '.'
000000000021d72d         db  0x00 ; '.'
000000000021d72e         db  0x00 ; '.'
000000000021d72f         db  0x00 ; '.'
000000000021d730         db  0x00 ; '.'
000000000021d731         db  0x00 ; '.'
000000000021d732         db  0x00 ; '.'
000000000021d733         db  0x00 ; '.'
000000000021d734         db  0x00 ; '.'
000000000021d735         db  0x00 ; '.'
000000000021d736         db  0x00 ; '.'
000000000021d737         db  0x00 ; '.'
000000000021d738         db  0x00 ; '.'
000000000021d739         db  0x00 ; '.'
000000000021d73a         db  0x00 ; '.'
000000000021d73b         db  0x00 ; '.'
000000000021d73c         db  0x00 ; '.'
000000000021d73d         db  0x00 ; '.'
000000000021d73e         db  0x00 ; '.'
000000000021d73f         db  0x00 ; '.'
000000000021d740         db  0x00 ; '.'
000000000021d741         db  0x00 ; '.'
000000000021d742         db  0x00 ; '.'
000000000021d743         db  0x00 ; '.'
000000000021d744         db  0x00 ; '.'
000000000021d745         db  0x00 ; '.'
000000000021d746         db  0x00 ; '.'
000000000021d747         db  0x00 ; '.'
000000000021d748         db  0x00 ; '.'
000000000021d749         db  0x00 ; '.'
000000000021d74a         db  0x00 ; '.'
000000000021d74b         db  0x00 ; '.'
000000000021d74c         db  0x00 ; '.'
000000000021d74d         db  0x00 ; '.'
000000000021d74e         db  0x00 ; '.'
000000000021d74f         db  0x00 ; '.'
000000000021d750         db  0x00 ; '.'
000000000021d751         db  0x00 ; '.'
000000000021d752         db  0x00 ; '.'
000000000021d753         db  0x00 ; '.'
000000000021d754         db  0x00 ; '.'
000000000021d755         db  0x00 ; '.'
000000000021d756         db  0x00 ; '.'
000000000021d757         db  0x00 ; '.'
000000000021d758         db  0x00 ; '.'
000000000021d759         db  0x00 ; '.'
000000000021d75a         db  0x00 ; '.'
000000000021d75b         db  0x00 ; '.'
000000000021d75c         db  0x00 ; '.'
000000000021d75d         db  0x00 ; '.'
000000000021d75e         db  0x00 ; '.'
000000000021d75f         db  0x00 ; '.'
000000000021d760         db  0x00 ; '.'
000000000021d761         db  0x00 ; '.'
000000000021d762         db  0x00 ; '.'
000000000021d763         db  0x00 ; '.'
000000000021d764         db  0x00 ; '.'
000000000021d765         db  0x00 ; '.'
000000000021d766         db  0x00 ; '.'
000000000021d767         db  0x00 ; '.'
000000000021d768         db  0x00 ; '.'
000000000021d769         db  0x00 ; '.'
000000000021d76a         db  0x00 ; '.'
000000000021d76b         db  0x00 ; '.'
000000000021d76c         db  0x00 ; '.'
000000000021d76d         db  0x00 ; '.'
000000000021d76e         db  0x00 ; '.'
000000000021d76f         db  0x00 ; '.'
000000000021d770         db  0x00 ; '.'
000000000021d771         db  0x00 ; '.'
000000000021d772         db  0x00 ; '.'
000000000021d773         db  0x00 ; '.'
000000000021d774         db  0x00 ; '.'
000000000021d775         db  0x00 ; '.'
000000000021d776         db  0x00 ; '.'
000000000021d777         db  0x00 ; '.'
000000000021d778         db  0x00 ; '.'
000000000021d779         db  0x00 ; '.'
000000000021d77a         db  0x00 ; '.'
000000000021d77b         db  0x00 ; '.'
000000000021d77c         db  0x00 ; '.'
000000000021d77d         db  0x00 ; '.'
000000000021d77e         db  0x00 ; '.'
000000000021d77f         db  0x00 ; '.'
000000000021d780         db  0x00 ; '.'
000000000021d781         db  0x00 ; '.'
000000000021d782         db  0x00 ; '.'
000000000021d783         db  0x00 ; '.'
000000000021d784         db  0x00 ; '.'
000000000021d785         db  0x00 ; '.'
000000000021d786         db  0x00 ; '.'
000000000021d787         db  0x00 ; '.'
000000000021d788         db  0x00 ; '.'
000000000021d789         db  0x00 ; '.'
000000000021d78a         db  0x00 ; '.'
000000000021d78b         db  0x00 ; '.'
000000000021d78c         db  0x00 ; '.'
000000000021d78d         db  0x00 ; '.'
000000000021d78e         db  0x00 ; '.'
000000000021d78f         db  0x00 ; '.'
000000000021d790         db  0x00 ; '.'
000000000021d791         db  0x00 ; '.'
000000000021d792         db  0x00 ; '.'
000000000021d793         db  0x00 ; '.'
000000000021d794         db  0x00 ; '.'
000000000021d795         db  0x00 ; '.'
000000000021d796         db  0x00 ; '.'
000000000021d797         db  0x00 ; '.'
000000000021d798         db  0x00 ; '.'
000000000021d799         db  0x00 ; '.'
000000000021d79a         db  0x00 ; '.'
000000000021d79b         db  0x00 ; '.'
000000000021d79c         db  0x00 ; '.'
000000000021d79d         db  0x00 ; '.'
000000000021d79e         db  0x00 ; '.'
000000000021d79f         db  0x00 ; '.'
000000000021d7a0         db  0x00 ; '.'
000000000021d7a1         db  0x00 ; '.'
000000000021d7a2         db  0x00 ; '.'
000000000021d7a3         db  0x00 ; '.'
000000000021d7a4         db  0x00 ; '.'
000000000021d7a5         db  0x00 ; '.'
000000000021d7a6         db  0x00 ; '.'
000000000021d7a7         db  0x00 ; '.'
000000000021d7a8         db  0x00 ; '.'
000000000021d7a9         db  0x00 ; '.'
000000000021d7aa         db  0x00 ; '.'
000000000021d7ab         db  0x00 ; '.'
000000000021d7ac         db  0x00 ; '.'
000000000021d7ad         db  0x00 ; '.'
000000000021d7ae         db  0x00 ; '.'
000000000021d7af         db  0x00 ; '.'
000000000021d7b0         db  0x00 ; '.'
000000000021d7b1         db  0x00 ; '.'
000000000021d7b2         db  0x00 ; '.'
000000000021d7b3         db  0x00 ; '.'
000000000021d7b4         db  0x00 ; '.'
000000000021d7b5         db  0x00 ; '.'
000000000021d7b6         db  0x00 ; '.'
000000000021d7b7         db  0x00 ; '.'
000000000021d7b8         db  0x00 ; '.'
000000000021d7b9         db  0x00 ; '.'
000000000021d7ba         db  0x00 ; '.'
000000000021d7bb         db  0x00 ; '.'
000000000021d7bc         db  0x00 ; '.'
000000000021d7bd         db  0x00 ; '.'
000000000021d7be         db  0x00 ; '.'
000000000021d7bf         db  0x00 ; '.'
000000000021d7c0         db  0x00 ; '.'
000000000021d7c1         db  0x00 ; '.'
000000000021d7c2         db  0x00 ; '.'
000000000021d7c3         db  0x00 ; '.'
000000000021d7c4         db  0x00 ; '.'
000000000021d7c5         db  0x00 ; '.'
000000000021d7c6         db  0x00 ; '.'
000000000021d7c7         db  0x00 ; '.'
000000000021d7c8         db  0x00 ; '.'
000000000021d7c9         db  0x00 ; '.'
000000000021d7ca         db  0x00 ; '.'
000000000021d7cb         db  0x00 ; '.'
000000000021d7cc         db  0x00 ; '.'
000000000021d7cd         db  0x00 ; '.'
000000000021d7ce         db  0x00 ; '.'
000000000021d7cf         db  0x00 ; '.'
000000000021d7d0         db  0x00 ; '.'
000000000021d7d1         db  0x00 ; '.'
000000000021d7d2         db  0x00 ; '.'
000000000021d7d3         db  0x00 ; '.'
000000000021d7d4         db  0x00 ; '.'
000000000021d7d5         db  0x00 ; '.'
000000000021d7d6         db  0x00 ; '.'
000000000021d7d7         db  0x00 ; '.'
000000000021d7d8         db  0x00 ; '.'
000000000021d7d9         db  0x00 ; '.'
000000000021d7da         db  0x00 ; '.'
000000000021d7db         db  0x00 ; '.'
000000000021d7dc         db  0x00 ; '.'
000000000021d7dd         db  0x00 ; '.'
000000000021d7de         db  0x00 ; '.'
000000000021d7df         db  0x00 ; '.'
000000000021d7e0         db  0x00 ; '.'
000000000021d7e1         db  0x00 ; '.'
000000000021d7e2         db  0x00 ; '.'
000000000021d7e3         db  0x00 ; '.'
000000000021d7e4         db  0x00 ; '.'
000000000021d7e5         db  0x00 ; '.'
000000000021d7e6         db  0x00 ; '.'
000000000021d7e7         db  0x00 ; '.'
000000000021d7e8         db  0x00 ; '.'
000000000021d7e9         db  0x00 ; '.'
000000000021d7ea         db  0x00 ; '.'
000000000021d7eb         db  0x00 ; '.'
000000000021d7ec         db  0x00 ; '.'
000000000021d7ed         db  0x00 ; '.'
000000000021d7ee         db  0x00 ; '.'
000000000021d7ef         db  0x00 ; '.'
000000000021d7f0         db  0x00 ; '.'
000000000021d7f1         db  0x00 ; '.'
000000000021d7f2         db  0x00 ; '.'
000000000021d7f3         db  0x00 ; '.'
000000000021d7f4         db  0x00 ; '.'
000000000021d7f5         db  0x00 ; '.'
000000000021d7f6         db  0x00 ; '.'
000000000021d7f7         db  0x00 ; '.'
000000000021d7f8         db  0x00 ; '.'
000000000021d7f9         db  0x00 ; '.'
000000000021d7fa         db  0x00 ; '.'
000000000021d7fb         db  0x00 ; '.'
000000000021d7fc         db  0x00 ; '.'
000000000021d7fd         db  0x00 ; '.'
000000000021d7fe         db  0x00 ; '.'
000000000021d7ff         db  0x00 ; '.'
000000000021d800         db  0x00 ; '.'
000000000021d801         db  0x00 ; '.'
000000000021d802         db  0x00 ; '.'
000000000021d803         db  0x00 ; '.'
000000000021d804         db  0x00 ; '.'
000000000021d805         db  0x00 ; '.'
000000000021d806         db  0x00 ; '.'
000000000021d807         db  0x00 ; '.'
000000000021d808         db  0x00 ; '.'
000000000021d809         db  0x00 ; '.'
000000000021d80a         db  0x00 ; '.'
000000000021d80b         db  0x00 ; '.'
000000000021d80c         db  0x00 ; '.'
000000000021d80d         db  0x00 ; '.'
000000000021d80e         db  0x00 ; '.'
000000000021d80f         db  0x00 ; '.'
000000000021d810         db  0x00 ; '.'
000000000021d811         db  0x00 ; '.'
000000000021d812         db  0x00 ; '.'
000000000021d813         db  0x00 ; '.'
000000000021d814         db  0x00 ; '.'
000000000021d815         db  0x00 ; '.'
000000000021d816         db  0x00 ; '.'
000000000021d817         db  0x00 ; '.'
000000000021d818         db  0x00 ; '.'
000000000021d819         db  0x00 ; '.'
000000000021d81a         db  0x00 ; '.'
000000000021d81b         db  0x00 ; '.'
000000000021d81c         db  0x00 ; '.'
000000000021d81d         db  0x00 ; '.'
000000000021d81e         db  0x00 ; '.'
000000000021d81f         db  0x00 ; '.'
000000000021d820         db  0x00 ; '.'
000000000021d821         db  0x00 ; '.'
000000000021d822         db  0x00 ; '.'
000000000021d823         db  0x00 ; '.'
000000000021d824         db  0x00 ; '.'
000000000021d825         db  0x00 ; '.'
000000000021d826         db  0x00 ; '.'
000000000021d827         db  0x00 ; '.'
000000000021d828         db  0x00 ; '.'
000000000021d829         db  0x00 ; '.'
000000000021d82a         db  0x00 ; '.'
000000000021d82b         db  0x00 ; '.'
000000000021d82c         db  0x00 ; '.'
000000000021d82d         db  0x00 ; '.'
000000000021d82e         db  0x00 ; '.'
000000000021d82f         db  0x00 ; '.'
000000000021d830         db  0x00 ; '.'
000000000021d831         db  0x00 ; '.'
000000000021d832         db  0x00 ; '.'
000000000021d833         db  0x00 ; '.'
000000000021d834         db  0x00 ; '.'
000000000021d835         db  0x00 ; '.'
000000000021d836         db  0x00 ; '.'
000000000021d837         db  0x00 ; '.'
000000000021d838         db  0x00 ; '.'
000000000021d839         db  0x00 ; '.'
000000000021d83a         db  0x00 ; '.'
000000000021d83b         db  0x00 ; '.'
000000000021d83c         db  0x00 ; '.'
000000000021d83d         db  0x00 ; '.'
000000000021d83e         db  0x00 ; '.'
000000000021d83f         db  0x00 ; '.'
000000000021d840         db  0x00 ; '.'
000000000021d841         db  0x00 ; '.'
000000000021d842         db  0x00 ; '.'
000000000021d843         db  0x00 ; '.'
000000000021d844         db  0x00 ; '.'
000000000021d845         db  0x00 ; '.'
000000000021d846         db  0x00 ; '.'
000000000021d847         db  0x00 ; '.'
000000000021d848         db  0x00 ; '.'
000000000021d849         db  0x00 ; '.'
000000000021d84a         db  0x00 ; '.'
000000000021d84b         db  0x00 ; '.'
000000000021d84c         db  0x00 ; '.'
000000000021d84d         db  0x00 ; '.'
000000000021d84e         db  0x00 ; '.'
000000000021d84f         db  0x00 ; '.'
000000000021d850         db  0x00 ; '.'
000000000021d851         db  0x00 ; '.'
000000000021d852         db  0x00 ; '.'
000000000021d853         db  0x00 ; '.'
000000000021d854         db  0x00 ; '.'
000000000021d855         db  0x00 ; '.'
000000000021d856         db  0x00 ; '.'
000000000021d857         db  0x00 ; '.'
000000000021d858         db  0x00 ; '.'
000000000021d859         db  0x00 ; '.'
000000000021d85a         db  0x00 ; '.'
000000000021d85b         db  0x00 ; '.'
000000000021d85c         db  0x00 ; '.'
000000000021d85d         db  0x00 ; '.'
000000000021d85e         db  0x00 ; '.'
000000000021d85f         db  0x00 ; '.'
000000000021d860         db  0x00 ; '.'
000000000021d861         db  0x00 ; '.'
000000000021d862         db  0x00 ; '.'
000000000021d863         db  0x00 ; '.'
000000000021d864         db  0x00 ; '.'
000000000021d865         db  0x00 ; '.'
000000000021d866         db  0x00 ; '.'
000000000021d867         db  0x00 ; '.'
000000000021d868         db  0x00 ; '.'
000000000021d869         db  0x00 ; '.'
000000000021d86a         db  0x00 ; '.'
000000000021d86b         db  0x00 ; '.'
000000000021d86c         db  0x00 ; '.'
000000000021d86d         db  0x00 ; '.'
000000000021d86e         db  0x00 ; '.'
000000000021d86f         db  0x00 ; '.'
000000000021d870         db  0x00 ; '.'
000000000021d871         db  0x00 ; '.'
000000000021d872         db  0x00 ; '.'
000000000021d873         db  0x00 ; '.'
000000000021d874         db  0x00 ; '.'
000000000021d875         db  0x00 ; '.'
000000000021d876         db  0x00 ; '.'
000000000021d877         db  0x00 ; '.'
000000000021d878         db  0x00 ; '.'
000000000021d879         db  0x00 ; '.'
000000000021d87a         db  0x00 ; '.'
000000000021d87b         db  0x00 ; '.'
000000000021d87c         db  0x00 ; '.'
000000000021d87d         db  0x00 ; '.'
000000000021d87e         db  0x00 ; '.'
000000000021d87f         db  0x00 ; '.'
000000000021d880         db  0x00 ; '.'
000000000021d881         db  0x00 ; '.'
000000000021d882         db  0x00 ; '.'
000000000021d883         db  0x00 ; '.'
000000000021d884         db  0x00 ; '.'
000000000021d885         db  0x00 ; '.'
000000000021d886         db  0x00 ; '.'
000000000021d887         db  0x00 ; '.'
000000000021d888         db  0x00 ; '.'
000000000021d889         db  0x00 ; '.'
000000000021d88a         db  0x00 ; '.'
000000000021d88b         db  0x00 ; '.'
000000000021d88c         db  0x00 ; '.'
000000000021d88d         db  0x00 ; '.'
000000000021d88e         db  0x00 ; '.'
000000000021d88f         db  0x00 ; '.'
000000000021d890         db  0x00 ; '.'
000000000021d891         db  0x00 ; '.'
000000000021d892         db  0x00 ; '.'
000000000021d893         db  0x00 ; '.'
000000000021d894         db  0x00 ; '.'
000000000021d895         db  0x00 ; '.'
000000000021d896         db  0x00 ; '.'
000000000021d897         db  0x00 ; '.'
000000000021d898         db  0x00 ; '.'
000000000021d899         db  0x00 ; '.'
000000000021d89a         db  0x00 ; '.'
000000000021d89b         db  0x00 ; '.'
000000000021d89c         db  0x00 ; '.'
000000000021d89d         db  0x00 ; '.'
000000000021d89e         db  0x00 ; '.'
000000000021d89f         db  0x00 ; '.'
000000000021d8a0         db  0x00 ; '.'
000000000021d8a1         db  0x00 ; '.'
000000000021d8a2         db  0x00 ; '.'
000000000021d8a3         db  0x00 ; '.'
000000000021d8a4         db  0x00 ; '.'
000000000021d8a5         db  0x00 ; '.'
000000000021d8a6         db  0x00 ; '.'
000000000021d8a7         db  0x00 ; '.'
000000000021d8a8         db  0x00 ; '.'
000000000021d8a9         db  0x00 ; '.'
000000000021d8aa         db  0x00 ; '.'
000000000021d8ab         db  0x00 ; '.'
000000000021d8ac         db  0x00 ; '.'
000000000021d8ad         db  0x00 ; '.'
000000000021d8ae         db  0x00 ; '.'
000000000021d8af         db  0x00 ; '.'
000000000021d8b0         db  0x00 ; '.'
000000000021d8b1         db  0x00 ; '.'
000000000021d8b2         db  0x00 ; '.'
000000000021d8b3         db  0x00 ; '.'
000000000021d8b4         db  0x00 ; '.'
000000000021d8b5         db  0x00 ; '.'
000000000021d8b6         db  0x00 ; '.'
000000000021d8b7         db  0x00 ; '.'
000000000021d8b8         db  0x00 ; '.'
000000000021d8b9         db  0x00 ; '.'
000000000021d8ba         db  0x00 ; '.'
000000000021d8bb         db  0x00 ; '.'
000000000021d8bc         db  0x00 ; '.'
000000000021d8bd         db  0x00 ; '.'
000000000021d8be         db  0x00 ; '.'
000000000021d8bf         db  0x00 ; '.'
000000000021d8c0         db  0x00 ; '.'
000000000021d8c1         db  0x00 ; '.'
000000000021d8c2         db  0x00 ; '.'
000000000021d8c3         db  0x00 ; '.'
000000000021d8c4         db  0x00 ; '.'
000000000021d8c5         db  0x00 ; '.'
000000000021d8c6         db  0x00 ; '.'
000000000021d8c7         db  0x00 ; '.'
000000000021d8c8         db  0x00 ; '.'
000000000021d8c9         db  0x00 ; '.'
000000000021d8ca         db  0x00 ; '.'
000000000021d8cb         db  0x00 ; '.'
000000000021d8cc         db  0x00 ; '.'
000000000021d8cd         db  0x00 ; '.'
000000000021d8ce         db  0x00 ; '.'
000000000021d8cf         db  0x00 ; '.'
000000000021d8d0         db  0x00 ; '.'
000000000021d8d1         db  0x00 ; '.'
000000000021d8d2         db  0x00 ; '.'
000000000021d8d3         db  0x00 ; '.'
000000000021d8d4         db  0x00 ; '.'
000000000021d8d5         db  0x00 ; '.'
000000000021d8d6         db  0x00 ; '.'
000000000021d8d7         db  0x00 ; '.'
000000000021d8d8         db  0x00 ; '.'
000000000021d8d9         db  0x00 ; '.'
000000000021d8da         db  0x00 ; '.'
000000000021d8db         db  0x00 ; '.'
000000000021d8dc         db  0x00 ; '.'
000000000021d8dd         db  0x00 ; '.'
000000000021d8de         db  0x00 ; '.'
000000000021d8df         db  0x00 ; '.'
000000000021d8e0         db  0x00 ; '.'
000000000021d8e1         db  0x00 ; '.'
000000000021d8e2         db  0x00 ; '.'
000000000021d8e3         db  0x00 ; '.'
000000000021d8e4         db  0x00 ; '.'
000000000021d8e5         db  0x00 ; '.'
000000000021d8e6         db  0x00 ; '.'
000000000021d8e7         db  0x00 ; '.'
000000000021d8e8         db  0x00 ; '.'
000000000021d8e9         db  0x00 ; '.'
000000000021d8ea         db  0x00 ; '.'
000000000021d8eb         db  0x00 ; '.'
000000000021d8ec         db  0x00 ; '.'
000000000021d8ed         db  0x00 ; '.'
000000000021d8ee         db  0x00 ; '.'
000000000021d8ef         db  0x00 ; '.'
000000000021d8f0         db  0x00 ; '.'
000000000021d8f1         db  0x00 ; '.'
000000000021d8f2         db  0x00 ; '.'
000000000021d8f3         db  0x00 ; '.'
000000000021d8f4         db  0x00 ; '.'
000000000021d8f5         db  0x00 ; '.'
000000000021d8f6         db  0x00 ; '.'
000000000021d8f7         db  0x00 ; '.'
000000000021d8f8         db  0x00 ; '.'
000000000021d8f9         db  0x00 ; '.'
000000000021d8fa         db  0x00 ; '.'
000000000021d8fb         db  0x00 ; '.'
000000000021d8fc         db  0x00 ; '.'
000000000021d8fd         db  0x00 ; '.'
000000000021d8fe         db  0x00 ; '.'
000000000021d8ff         db  0x00 ; '.'
000000000021d900         db  0x00 ; '.'
000000000021d901         db  0x00 ; '.'
000000000021d902         db  0x00 ; '.'
000000000021d903         db  0x00 ; '.'
000000000021d904         db  0x00 ; '.'
000000000021d905         db  0x00 ; '.'
000000000021d906         db  0x00 ; '.'
000000000021d907         db  0x00 ; '.'
000000000021d908         db  0x00 ; '.'
000000000021d909         db  0x00 ; '.'
000000000021d90a         db  0x00 ; '.'
000000000021d90b         db  0x00 ; '.'
000000000021d90c         db  0x00 ; '.'
000000000021d90d         db  0x00 ; '.'
000000000021d90e         db  0x00 ; '.'
000000000021d90f         db  0x00 ; '.'
000000000021d910         db  0x00 ; '.'
000000000021d911         db  0x00 ; '.'
000000000021d912         db  0x00 ; '.'
000000000021d913         db  0x00 ; '.'
000000000021d914         db  0x00 ; '.'
000000000021d915         db  0x00 ; '.'
000000000021d916         db  0x00 ; '.'
000000000021d917         db  0x00 ; '.'
000000000021d918         db  0x00 ; '.'
000000000021d919         db  0x00 ; '.'
000000000021d91a         db  0x00 ; '.'
000000000021d91b         db  0x00 ; '.'
000000000021d91c         db  0x00 ; '.'
000000000021d91d         db  0x00 ; '.'
000000000021d91e         db  0x00 ; '.'
000000000021d91f         db  0x00 ; '.'
000000000021d920         db  0x00 ; '.'
000000000021d921         db  0x00 ; '.'
000000000021d922         db  0x00 ; '.'
000000000021d923         db  0x00 ; '.'
000000000021d924         db  0x00 ; '.'
000000000021d925         db  0x00 ; '.'
000000000021d926         db  0x00 ; '.'
000000000021d927         db  0x00 ; '.'
000000000021d928         db  0x00 ; '.'
000000000021d929         db  0x00 ; '.'
000000000021d92a         db  0x00 ; '.'
000000000021d92b         db  0x00 ; '.'
000000000021d92c         db  0x00 ; '.'
000000000021d92d         db  0x00 ; '.'
000000000021d92e         db  0x00 ; '.'
000000000021d92f         db  0x00 ; '.'
000000000021d930         db  0x00 ; '.'
000000000021d931         db  0x00 ; '.'
000000000021d932         db  0x00 ; '.'
000000000021d933         db  0x00 ; '.'
000000000021d934         db  0x00 ; '.'
000000000021d935         db  0x00 ; '.'
000000000021d936         db  0x00 ; '.'
000000000021d937         db  0x00 ; '.'
000000000021d938         db  0x00 ; '.'
000000000021d939         db  0x00 ; '.'
000000000021d93a         db  0x00 ; '.'
000000000021d93b         db  0x00 ; '.'
000000000021d93c         db  0x00 ; '.'
000000000021d93d         db  0x00 ; '.'
000000000021d93e         db  0x00 ; '.'
000000000021d93f         db  0x00 ; '.'
000000000021d940         db  0x00 ; '.'
000000000021d941         db  0x00 ; '.'
000000000021d942         db  0x00 ; '.'
000000000021d943         db  0x00 ; '.'
000000000021d944         db  0x00 ; '.'
000000000021d945         db  0x00 ; '.'
000000000021d946         db  0x00 ; '.'
000000000021d947         db  0x00 ; '.'
000000000021d948         db  0x00 ; '.'
000000000021d949         db  0x00 ; '.'
000000000021d94a         db  0x00 ; '.'
000000000021d94b         db  0x00 ; '.'
000000000021d94c         db  0x00 ; '.'
000000000021d94d         db  0x00 ; '.'
000000000021d94e         db  0x00 ; '.'
000000000021d94f         db  0x00 ; '.'
000000000021d950         db  0x00 ; '.'
000000000021d951         db  0x00 ; '.'
000000000021d952         db  0x00 ; '.'
000000000021d953         db  0x00 ; '.'
000000000021d954         db  0x00 ; '.'
000000000021d955         db  0x00 ; '.'
000000000021d956         db  0x00 ; '.'
000000000021d957         db  0x00 ; '.'
000000000021d958         db  0x00 ; '.'
000000000021d959         db  0x00 ; '.'
000000000021d95a         db  0x00 ; '.'
000000000021d95b         db  0x00 ; '.'
000000000021d95c         db  0x00 ; '.'
000000000021d95d         db  0x00 ; '.'
000000000021d95e         db  0x00 ; '.'
000000000021d95f         db  0x00 ; '.'
000000000021d960         db  0x00 ; '.'
000000000021d961         db  0x00 ; '.'
000000000021d962         db  0x00 ; '.'
000000000021d963         db  0x00 ; '.'
000000000021d964         db  0x00 ; '.'
000000000021d965         db  0x00 ; '.'
000000000021d966         db  0x00 ; '.'
000000000021d967         db  0x00 ; '.'
000000000021d968         db  0x00 ; '.'
000000000021d969         db  0x00 ; '.'
000000000021d96a         db  0x00 ; '.'
000000000021d96b         db  0x00 ; '.'
000000000021d96c         db  0x00 ; '.'
000000000021d96d         db  0x00 ; '.'
000000000021d96e         db  0x00 ; '.'
000000000021d96f         db  0x00 ; '.'
000000000021d970         db  0x00 ; '.'
000000000021d971         db  0x00 ; '.'
000000000021d972         db  0x00 ; '.'
000000000021d973         db  0x00 ; '.'
000000000021d974         db  0x00 ; '.'
000000000021d975         db  0x00 ; '.'
000000000021d976         db  0x00 ; '.'
000000000021d977         db  0x00 ; '.'
000000000021d978         db  0x00 ; '.'
000000000021d979         db  0x00 ; '.'
000000000021d97a         db  0x00 ; '.'
000000000021d97b         db  0x00 ; '.'
000000000021d97c         db  0x00 ; '.'
000000000021d97d         db  0x00 ; '.'
000000000021d97e         db  0x00 ; '.'
000000000021d97f         db  0x00 ; '.'
000000000021d980         db  0x00 ; '.'
000000000021d981         db  0x00 ; '.'
000000000021d982         db  0x00 ; '.'
000000000021d983         db  0x00 ; '.'
000000000021d984         db  0x00 ; '.'
000000000021d985         db  0x00 ; '.'
000000000021d986         db  0x00 ; '.'
000000000021d987         db  0x00 ; '.'
000000000021d988         db  0x00 ; '.'
000000000021d989         db  0x00 ; '.'
000000000021d98a         db  0x00 ; '.'
000000000021d98b         db  0x00 ; '.'
000000000021d98c         db  0x00 ; '.'
000000000021d98d         db  0x00 ; '.'
000000000021d98e         db  0x00 ; '.'
000000000021d98f         db  0x00 ; '.'
000000000021d990         db  0x00 ; '.'
000000000021d991         db  0x00 ; '.'
000000000021d992         db  0x00 ; '.'
000000000021d993         db  0x00 ; '.'
000000000021d994         db  0x00 ; '.'
000000000021d995         db  0x00 ; '.'
000000000021d996         db  0x00 ; '.'
000000000021d997         db  0x00 ; '.'
000000000021d998         db  0x00 ; '.'
000000000021d999         db  0x00 ; '.'
000000000021d99a         db  0x00 ; '.'
000000000021d99b         db  0x00 ; '.'
000000000021d99c         db  0x00 ; '.'
000000000021d99d         db  0x00 ; '.'
000000000021d99e         db  0x00 ; '.'
000000000021d99f         db  0x00 ; '.'
000000000021d9a0         db  0x00 ; '.'
000000000021d9a1         db  0x00 ; '.'
000000000021d9a2         db  0x00 ; '.'
000000000021d9a3         db  0x00 ; '.'
000000000021d9a4         db  0x00 ; '.'
000000000021d9a5         db  0x00 ; '.'
000000000021d9a6         db  0x00 ; '.'
000000000021d9a7         db  0x00 ; '.'
000000000021d9a8         db  0x00 ; '.'
000000000021d9a9         db  0x00 ; '.'
000000000021d9aa         db  0x00 ; '.'
000000000021d9ab         db  0x00 ; '.'
000000000021d9ac         db  0x00 ; '.'
000000000021d9ad         db  0x00 ; '.'
000000000021d9ae         db  0x00 ; '.'
000000000021d9af         db  0x00 ; '.'
000000000021d9b0         db  0x00 ; '.'
000000000021d9b1         db  0x00 ; '.'
000000000021d9b2         db  0x00 ; '.'
000000000021d9b3         db  0x00 ; '.'
000000000021d9b4         db  0x00 ; '.'
000000000021d9b5         db  0x00 ; '.'
000000000021d9b6         db  0x00 ; '.'
000000000021d9b7         db  0x00 ; '.'
000000000021d9b8         db  0x00 ; '.'
000000000021d9b9         db  0x00 ; '.'
000000000021d9ba         db  0x00 ; '.'
000000000021d9bb         db  0x00 ; '.'
000000000021d9bc         db  0x00 ; '.'
000000000021d9bd         db  0x00 ; '.'
000000000021d9be         db  0x00 ; '.'
000000000021d9bf         db  0x00 ; '.'
000000000021d9c0         db  0x00 ; '.'
000000000021d9c1         db  0x00 ; '.'
000000000021d9c2         db  0x00 ; '.'
000000000021d9c3         db  0x00 ; '.'
000000000021d9c4         db  0x00 ; '.'
000000000021d9c5         db  0x00 ; '.'
000000000021d9c6         db  0x00 ; '.'
000000000021d9c7         db  0x00 ; '.'
000000000021d9c8         db  0x00 ; '.'
000000000021d9c9         db  0x00 ; '.'
000000000021d9ca         db  0x00 ; '.'
000000000021d9cb         db  0x00 ; '.'
000000000021d9cc         db  0x00 ; '.'
000000000021d9cd         db  0x00 ; '.'
000000000021d9ce         db  0x00 ; '.'
000000000021d9cf         db  0x00 ; '.'
000000000021d9d0         db  0x00 ; '.'
000000000021d9d1         db  0x00 ; '.'
000000000021d9d2         db  0x00 ; '.'
000000000021d9d3         db  0x00 ; '.'
000000000021d9d4         db  0x00 ; '.'
000000000021d9d5         db  0x00 ; '.'
000000000021d9d6         db  0x00 ; '.'
000000000021d9d7         db  0x00 ; '.'
000000000021d9d8         db  0x00 ; '.'
000000000021d9d9         db  0x00 ; '.'
000000000021d9da         db  0x00 ; '.'
000000000021d9db         db  0x00 ; '.'
000000000021d9dc         db  0x00 ; '.'
000000000021d9dd         db  0x00 ; '.'
000000000021d9de         db  0x00 ; '.'
000000000021d9df         db  0x00 ; '.'
000000000021d9e0         db  0x00 ; '.'
000000000021d9e1         db  0x00 ; '.'
000000000021d9e2         db  0x00 ; '.'
000000000021d9e3         db  0x00 ; '.'
000000000021d9e4         db  0x00 ; '.'
000000000021d9e5         db  0x00 ; '.'
000000000021d9e6         db  0x00 ; '.'
000000000021d9e7         db  0x00 ; '.'
000000000021d9e8         db  0x00 ; '.'
000000000021d9e9         db  0x00 ; '.'
000000000021d9ea         db  0x00 ; '.'
000000000021d9eb         db  0x00 ; '.'
000000000021d9ec         db  0x00 ; '.'
000000000021d9ed         db  0x00 ; '.'
000000000021d9ee         db  0x00 ; '.'
000000000021d9ef         db  0x00 ; '.'
000000000021d9f0         db  0x00 ; '.'
000000000021d9f1         db  0x00 ; '.'
000000000021d9f2         db  0x00 ; '.'
000000000021d9f3         db  0x00 ; '.'
000000000021d9f4         db  0x00 ; '.'
000000000021d9f5         db  0x00 ; '.'
000000000021d9f6         db  0x00 ; '.'
000000000021d9f7         db  0x00 ; '.'
000000000021d9f8         db  0x00 ; '.'
000000000021d9f9         db  0x00 ; '.'
000000000021d9fa         db  0x00 ; '.'
000000000021d9fb         db  0x00 ; '.'
000000000021d9fc         db  0x00 ; '.'
000000000021d9fd         db  0x00 ; '.'
000000000021d9fe         db  0x00 ; '.'
000000000021d9ff         db  0x00 ; '.'
000000000021da00         db  0x00 ; '.'
000000000021da01         db  0x00 ; '.'
000000000021da02         db  0x00 ; '.'
000000000021da03         db  0x00 ; '.'
000000000021da04         db  0x00 ; '.'
000000000021da05         db  0x00 ; '.'
000000000021da06         db  0x00 ; '.'
000000000021da07         db  0x00 ; '.'
000000000021da08         db  0x00 ; '.'
000000000021da09         db  0x00 ; '.'
000000000021da0a         db  0x00 ; '.'
000000000021da0b         db  0x00 ; '.'
000000000021da0c         db  0x00 ; '.'
000000000021da0d         db  0x00 ; '.'
000000000021da0e         db  0x00 ; '.'
000000000021da0f         db  0x00 ; '.'
000000000021da10         db  0x00 ; '.'
000000000021da11         db  0x00 ; '.'
000000000021da12         db  0x00 ; '.'
000000000021da13         db  0x00 ; '.'
000000000021da14         db  0x00 ; '.'
000000000021da15         db  0x00 ; '.'
000000000021da16         db  0x00 ; '.'
000000000021da17         db  0x00 ; '.'
000000000021da18         db  0x00 ; '.'
000000000021da19         db  0x00 ; '.'
000000000021da1a         db  0x00 ; '.'
000000000021da1b         db  0x00 ; '.'
000000000021da1c         db  0x00 ; '.'
000000000021da1d         db  0x00 ; '.'
000000000021da1e         db  0x00 ; '.'
000000000021da1f         db  0x00 ; '.'
000000000021da20         db  0x00 ; '.'
000000000021da21         db  0x00 ; '.'
000000000021da22         db  0x00 ; '.'
000000000021da23         db  0x00 ; '.'
000000000021da24         db  0x00 ; '.'
000000000021da25         db  0x00 ; '.'
000000000021da26         db  0x00 ; '.'
000000000021da27         db  0x00 ; '.'
000000000021da28         db  0x00 ; '.'
000000000021da29         db  0x00 ; '.'
000000000021da2a         db  0x00 ; '.'
000000000021da2b         db  0x00 ; '.'
000000000021da2c         db  0x00 ; '.'
000000000021da2d         db  0x00 ; '.'
000000000021da2e         db  0x00 ; '.'
000000000021da2f         db  0x00 ; '.'
000000000021da30         db  0x00 ; '.'
000000000021da31         db  0x00 ; '.'
000000000021da32         db  0x00 ; '.'
000000000021da33         db  0x00 ; '.'
000000000021da34         db  0x00 ; '.'
000000000021da35         db  0x00 ; '.'
000000000021da36         db  0x00 ; '.'
000000000021da37         db  0x00 ; '.'
000000000021da38         db  0x00 ; '.'
000000000021da39         db  0x00 ; '.'
000000000021da3a         db  0x00 ; '.'
000000000021da3b         db  0x00 ; '.'
000000000021da3c         db  0x00 ; '.'
000000000021da3d         db  0x00 ; '.'
000000000021da3e         db  0x00 ; '.'
000000000021da3f         db  0x00 ; '.'
000000000021da40         db  0x00 ; '.'
000000000021da41         db  0x00 ; '.'
000000000021da42         db  0x00 ; '.'
000000000021da43         db  0x00 ; '.'
000000000021da44         db  0x00 ; '.'
000000000021da45         db  0x00 ; '.'
000000000021da46         db  0x00 ; '.'
000000000021da47         db  0x00 ; '.'
000000000021da48         db  0x00 ; '.'
000000000021da49         db  0x00 ; '.'
000000000021da4a         db  0x00 ; '.'
000000000021da4b         db  0x00 ; '.'
000000000021da4c         db  0x00 ; '.'
000000000021da4d         db  0x00 ; '.'
000000000021da4e         db  0x00 ; '.'
000000000021da4f         db  0x00 ; '.'
000000000021da50         db  0x00 ; '.'
000000000021da51         db  0x00 ; '.'
000000000021da52         db  0x00 ; '.'
000000000021da53         db  0x00 ; '.'
000000000021da54         db  0x00 ; '.'
000000000021da55         db  0x00 ; '.'
000000000021da56         db  0x00 ; '.'
000000000021da57         db  0x00 ; '.'
000000000021da58         db  0x00 ; '.'
000000000021da59         db  0x00 ; '.'
000000000021da5a         db  0x00 ; '.'
000000000021da5b         db  0x00 ; '.'
000000000021da5c         db  0x00 ; '.'
000000000021da5d         db  0x00 ; '.'
000000000021da5e         db  0x00 ; '.'
000000000021da5f         db  0x00 ; '.'
000000000021da60         db  0x00 ; '.'
000000000021da61         db  0x00 ; '.'
000000000021da62         db  0x00 ; '.'
000000000021da63         db  0x00 ; '.'
000000000021da64         db  0x00 ; '.'
000000000021da65         db  0x00 ; '.'
000000000021da66         db  0x00 ; '.'
000000000021da67         db  0x00 ; '.'
000000000021da68         db  0x00 ; '.'
000000000021da69         db  0x00 ; '.'
000000000021da6a         db  0x00 ; '.'
000000000021da6b         db  0x00 ; '.'
000000000021da6c         db  0x00 ; '.'
000000000021da6d         db  0x00 ; '.'
000000000021da6e         db  0x00 ; '.'
000000000021da6f         db  0x00 ; '.'
000000000021da70         db  0x00 ; '.'
000000000021da71         db  0x00 ; '.'
000000000021da72         db  0x00 ; '.'
000000000021da73         db  0x00 ; '.'
000000000021da74         db  0x00 ; '.'
000000000021da75         db  0x00 ; '.'
000000000021da76         db  0x00 ; '.'
000000000021da77         db  0x00 ; '.'
000000000021da78         db  0x00 ; '.'
000000000021da79         db  0x00 ; '.'
000000000021da7a         db  0x00 ; '.'
000000000021da7b         db  0x00 ; '.'
000000000021da7c         db  0x00 ; '.'
000000000021da7d         db  0x00 ; '.'
000000000021da7e         db  0x00 ; '.'
000000000021da7f         db  0x00 ; '.'
000000000021da80         db  0x00 ; '.'
000000000021da81         db  0x00 ; '.'
000000000021da82         db  0x00 ; '.'
000000000021da83         db  0x00 ; '.'
000000000021da84         db  0x00 ; '.'
000000000021da85         db  0x00 ; '.'
000000000021da86         db  0x00 ; '.'
000000000021da87         db  0x00 ; '.'
000000000021da88         db  0x00 ; '.'
000000000021da89         db  0x00 ; '.'
000000000021da8a         db  0x00 ; '.'
000000000021da8b         db  0x00 ; '.'
000000000021da8c         db  0x00 ; '.'
000000000021da8d         db  0x00 ; '.'
000000000021da8e         db  0x00 ; '.'
000000000021da8f         db  0x00 ; '.'
000000000021da90         db  0x00 ; '.'
000000000021da91         db  0x00 ; '.'
000000000021da92         db  0x00 ; '.'
000000000021da93         db  0x00 ; '.'
000000000021da94         db  0x00 ; '.'
000000000021da95         db  0x00 ; '.'
000000000021da96         db  0x00 ; '.'
000000000021da97         db  0x00 ; '.'
000000000021da98         db  0x00 ; '.'
000000000021da99         db  0x00 ; '.'
000000000021da9a         db  0x00 ; '.'
000000000021da9b         db  0x00 ; '.'
000000000021da9c         db  0x00 ; '.'
000000000021da9d         db  0x00 ; '.'
000000000021da9e         db  0x00 ; '.'
000000000021da9f         db  0x00 ; '.'
000000000021daa0         db  0x00 ; '.'
000000000021daa1         db  0x00 ; '.'
000000000021daa2         db  0x00 ; '.'
000000000021daa3         db  0x00 ; '.'
000000000021daa4         db  0x00 ; '.'
000000000021daa5         db  0x00 ; '.'
000000000021daa6         db  0x00 ; '.'
000000000021daa7         db  0x00 ; '.'
000000000021daa8         db  0x00 ; '.'
000000000021daa9         db  0x00 ; '.'
000000000021daaa         db  0x00 ; '.'
000000000021daab         db  0x00 ; '.'
000000000021daac         db  0x00 ; '.'
000000000021daad         db  0x00 ; '.'
000000000021daae         db  0x00 ; '.'
000000000021daaf         db  0x00 ; '.'
000000000021dab0         db  0x00 ; '.'
000000000021dab1         db  0x00 ; '.'
000000000021dab2         db  0x00 ; '.'
000000000021dab3         db  0x00 ; '.'
000000000021dab4         db  0x00 ; '.'
000000000021dab5         db  0x00 ; '.'
000000000021dab6         db  0x00 ; '.'
000000000021dab7         db  0x00 ; '.'
000000000021dab8         db  0x00 ; '.'
000000000021dab9         db  0x00 ; '.'
000000000021daba         db  0x00 ; '.'
000000000021dabb         db  0x00 ; '.'
000000000021dabc         db  0x00 ; '.'
000000000021dabd         db  0x00 ; '.'
000000000021dabe         db  0x00 ; '.'
000000000021dabf         db  0x00 ; '.'
000000000021dac0         db  0x00 ; '.'
000000000021dac1         db  0x00 ; '.'
000000000021dac2         db  0x00 ; '.'
000000000021dac3         db  0x00 ; '.'
000000000021dac4         db  0x00 ; '.'
000000000021dac5         db  0x00 ; '.'
000000000021dac6         db  0x00 ; '.'
000000000021dac7         db  0x00 ; '.'
000000000021dac8         db  0x00 ; '.'
000000000021dac9         db  0x00 ; '.'
000000000021daca         db  0x00 ; '.'
000000000021dacb         db  0x00 ; '.'
000000000021dacc         db  0x00 ; '.'
000000000021dacd         db  0x00 ; '.'
000000000021dace         db  0x00 ; '.'
000000000021dacf         db  0x00 ; '.'
000000000021dad0         db  0x00 ; '.'
000000000021dad1         db  0x00 ; '.'
000000000021dad2         db  0x00 ; '.'
000000000021dad3         db  0x00 ; '.'
000000000021dad4         db  0x00 ; '.'
000000000021dad5         db  0x00 ; '.'
000000000021dad6         db  0x00 ; '.'
000000000021dad7         db  0x00 ; '.'
000000000021dad8         db  0x00 ; '.'
000000000021dad9         db  0x00 ; '.'
000000000021dada         db  0x00 ; '.'
000000000021dadb         db  0x00 ; '.'
000000000021dadc         db  0x00 ; '.'
000000000021dadd         db  0x00 ; '.'
000000000021dade         db  0x00 ; '.'
000000000021dadf         db  0x00 ; '.'
000000000021dae0         db  0x00 ; '.'
000000000021dae1         db  0x00 ; '.'
000000000021dae2         db  0x00 ; '.'
000000000021dae3         db  0x00 ; '.'
000000000021dae4         db  0x00 ; '.'
000000000021dae5         db  0x00 ; '.'
000000000021dae6         db  0x00 ; '.'
000000000021dae7         db  0x00 ; '.'
000000000021dae8         db  0x00 ; '.'
000000000021dae9         db  0x00 ; '.'
000000000021daea         db  0x00 ; '.'
000000000021daeb         db  0x00 ; '.'
000000000021daec         db  0x00 ; '.'
000000000021daed         db  0x00 ; '.'
000000000021daee         db  0x00 ; '.'
000000000021daef         db  0x00 ; '.'
000000000021daf0         db  0x00 ; '.'
000000000021daf1         db  0x00 ; '.'
000000000021daf2         db  0x00 ; '.'
000000000021daf3         db  0x00 ; '.'
000000000021daf4         db  0x00 ; '.'
000000000021daf5         db  0x00 ; '.'
000000000021daf6         db  0x00 ; '.'
000000000021daf7         db  0x00 ; '.'
000000000021daf8         db  0x00 ; '.'
000000000021daf9         db  0x00 ; '.'
000000000021dafa         db  0x00 ; '.'
000000000021dafb         db  0x00 ; '.'
000000000021dafc         db  0x00 ; '.'
000000000021dafd         db  0x00 ; '.'
000000000021dafe         db  0x00 ; '.'
000000000021daff         db  0x00 ; '.'
000000000021db00         db  0x00 ; '.'
000000000021db01         db  0x00 ; '.'
000000000021db02         db  0x00 ; '.'
000000000021db03         db  0x00 ; '.'
000000000021db04         db  0x00 ; '.'
000000000021db05         db  0x00 ; '.'
000000000021db06         db  0x00 ; '.'
000000000021db07         db  0x00 ; '.'
000000000021db08         db  0x00 ; '.'
000000000021db09         db  0x00 ; '.'
000000000021db0a         db  0x00 ; '.'
000000000021db0b         db  0x00 ; '.'
000000000021db0c         db  0x00 ; '.'
000000000021db0d         db  0x00 ; '.'
000000000021db0e         db  0x00 ; '.'
000000000021db0f         db  0x00 ; '.'
000000000021db10         db  0x00 ; '.'
000000000021db11         db  0x00 ; '.'
000000000021db12         db  0x00 ; '.'
000000000021db13         db  0x00 ; '.'
000000000021db14         db  0x00 ; '.'
000000000021db15         db  0x00 ; '.'
000000000021db16         db  0x00 ; '.'
000000000021db17         db  0x00 ; '.'
000000000021db18         db  0x00 ; '.'
000000000021db19         db  0x00 ; '.'
000000000021db1a         db  0x00 ; '.'
000000000021db1b         db  0x00 ; '.'
000000000021db1c         db  0x00 ; '.'
000000000021db1d         db  0x00 ; '.'
000000000021db1e         db  0x00 ; '.'
000000000021db1f         db  0x00 ; '.'
000000000021db20         db  0x00 ; '.'
000000000021db21         db  0x00 ; '.'
000000000021db22         db  0x00 ; '.'
000000000021db23         db  0x00 ; '.'
000000000021db24         db  0x00 ; '.'
000000000021db25         db  0x00 ; '.'
000000000021db26         db  0x00 ; '.'
000000000021db27         db  0x00 ; '.'
000000000021db28         db  0x00 ; '.'
000000000021db29         db  0x00 ; '.'
000000000021db2a         db  0x00 ; '.'
000000000021db2b         db  0x00 ; '.'
000000000021db2c         db  0x00 ; '.'
000000000021db2d         db  0x00 ; '.'
000000000021db2e         db  0x00 ; '.'
000000000021db2f         db  0x00 ; '.'
000000000021db30         db  0x00 ; '.'
000000000021db31         db  0x00 ; '.'
000000000021db32         db  0x00 ; '.'
000000000021db33         db  0x00 ; '.'
000000000021db34         db  0x00 ; '.'
000000000021db35         db  0x00 ; '.'
000000000021db36         db  0x00 ; '.'
000000000021db37         db  0x00 ; '.'
000000000021db38         db  0x00 ; '.'
000000000021db39         db  0x00 ; '.'
000000000021db3a         db  0x00 ; '.'
000000000021db3b         db  0x00 ; '.'
000000000021db3c         db  0x00 ; '.'
000000000021db3d         db  0x00 ; '.'
000000000021db3e         db  0x00 ; '.'
000000000021db3f         db  0x00 ; '.'
000000000021db40         db  0x00 ; '.'
000000000021db41         db  0x00 ; '.'
000000000021db42         db  0x00 ; '.'
000000000021db43         db  0x00 ; '.'
000000000021db44         db  0x00 ; '.'
000000000021db45         db  0x00 ; '.'
000000000021db46         db  0x00 ; '.'
000000000021db47         db  0x00 ; '.'
000000000021db48         db  0x00 ; '.'
000000000021db49         db  0x00 ; '.'
000000000021db4a         db  0x00 ; '.'
000000000021db4b         db  0x00 ; '.'
000000000021db4c         db  0x00 ; '.'
000000000021db4d         db  0x00 ; '.'
000000000021db4e         db  0x00 ; '.'
000000000021db4f         db  0x00 ; '.'
000000000021db50         db  0x00 ; '.'
000000000021db51         db  0x00 ; '.'
000000000021db52         db  0x00 ; '.'
000000000021db53         db  0x00 ; '.'
000000000021db54         db  0x00 ; '.'
000000000021db55         db  0x00 ; '.'
000000000021db56         db  0x00 ; '.'
000000000021db57         db  0x00 ; '.'
000000000021db58         db  0x00 ; '.'
000000000021db59         db  0x00 ; '.'
000000000021db5a         db  0x00 ; '.'
000000000021db5b         db  0x00 ; '.'
000000000021db5c         db  0x00 ; '.'
000000000021db5d         db  0x00 ; '.'
000000000021db5e         db  0x00 ; '.'
000000000021db5f         db  0x00 ; '.'
000000000021db60         db  0x00 ; '.'
000000000021db61         db  0x00 ; '.'
000000000021db62         db  0x00 ; '.'
000000000021db63         db  0x00 ; '.'
000000000021db64         db  0x00 ; '.'
000000000021db65         db  0x00 ; '.'
000000000021db66         db  0x00 ; '.'
000000000021db67         db  0x00 ; '.'
000000000021db68         db  0x00 ; '.'
000000000021db69         db  0x00 ; '.'
000000000021db6a         db  0x00 ; '.'
000000000021db6b         db  0x00 ; '.'
000000000021db6c         db  0x00 ; '.'
000000000021db6d         db  0x00 ; '.'
000000000021db6e         db  0x00 ; '.'
000000000021db6f         db  0x00 ; '.'
000000000021db70         db  0x00 ; '.'
000000000021db71         db  0x00 ; '.'
000000000021db72         db  0x00 ; '.'
000000000021db73         db  0x00 ; '.'
000000000021db74         db  0x00 ; '.'
000000000021db75         db  0x00 ; '.'
000000000021db76         db  0x00 ; '.'
000000000021db77         db  0x00 ; '.'
000000000021db78         db  0x00 ; '.'
000000000021db79         db  0x00 ; '.'
000000000021db7a         db  0x00 ; '.'
000000000021db7b         db  0x00 ; '.'
000000000021db7c         db  0x00 ; '.'
000000000021db7d         db  0x00 ; '.'
000000000021db7e         db  0x00 ; '.'
000000000021db7f         db  0x00 ; '.'
000000000021db80         db  0x00 ; '.'
000000000021db81         db  0x00 ; '.'
000000000021db82         db  0x00 ; '.'
000000000021db83         db  0x00 ; '.'
000000000021db84         db  0x00 ; '.'
000000000021db85         db  0x00 ; '.'
000000000021db86         db  0x00 ; '.'
000000000021db87         db  0x00 ; '.'
000000000021db88         db  0x00 ; '.'
000000000021db89         db  0x00 ; '.'
000000000021db8a         db  0x00 ; '.'
000000000021db8b         db  0x00 ; '.'
000000000021db8c         db  0x00 ; '.'
000000000021db8d         db  0x00 ; '.'
000000000021db8e         db  0x00 ; '.'
000000000021db8f         db  0x00 ; '.'
000000000021db90         db  0x00 ; '.'
000000000021db91         db  0x00 ; '.'
000000000021db92         db  0x00 ; '.'
000000000021db93         db  0x00 ; '.'
000000000021db94         db  0x00 ; '.'
000000000021db95         db  0x00 ; '.'
000000000021db96         db  0x00 ; '.'
000000000021db97         db  0x00 ; '.'
000000000021db98         db  0x00 ; '.'
000000000021db99         db  0x00 ; '.'
000000000021db9a         db  0x00 ; '.'
000000000021db9b         db  0x00 ; '.'
000000000021db9c         db  0x00 ; '.'
000000000021db9d         db  0x00 ; '.'
000000000021db9e         db  0x00 ; '.'
000000000021db9f         db  0x00 ; '.'
000000000021dba0         db  0x00 ; '.'
000000000021dba1         db  0x00 ; '.'
000000000021dba2         db  0x00 ; '.'
000000000021dba3         db  0x00 ; '.'
000000000021dba4         db  0x00 ; '.'
000000000021dba5         db  0x00 ; '.'
000000000021dba6         db  0x00 ; '.'
000000000021dba7         db  0x00 ; '.'
000000000021dba8         db  0x00 ; '.'
000000000021dba9         db  0x00 ; '.'
000000000021dbaa         db  0x00 ; '.'
000000000021dbab         db  0x00 ; '.'
000000000021dbac         db  0x00 ; '.'
000000000021dbad         db  0x00 ; '.'
000000000021dbae         db  0x00 ; '.'
000000000021dbaf         db  0x00 ; '.'
000000000021dbb0         db  0x00 ; '.'
000000000021dbb1         db  0x00 ; '.'
000000000021dbb2         db  0x00 ; '.'
000000000021dbb3         db  0x00 ; '.'
000000000021dbb4         db  0x00 ; '.'
000000000021dbb5         db  0x00 ; '.'
000000000021dbb6         db  0x00 ; '.'
000000000021dbb7         db  0x00 ; '.'
000000000021dbb8         db  0x00 ; '.'
000000000021dbb9         db  0x00 ; '.'
000000000021dbba         db  0x00 ; '.'
000000000021dbbb         db  0x00 ; '.'
000000000021dbbc         db  0x00 ; '.'
000000000021dbbd         db  0x00 ; '.'
000000000021dbbe         db  0x00 ; '.'
000000000021dbbf         db  0x00 ; '.'
000000000021dbc0         db  0x00 ; '.'
000000000021dbc1         db  0x00 ; '.'
000000000021dbc2         db  0x00 ; '.'
000000000021dbc3         db  0x00 ; '.'
000000000021dbc4         db  0x00 ; '.'
000000000021dbc5         db  0x00 ; '.'
000000000021dbc6         db  0x00 ; '.'
000000000021dbc7         db  0x00 ; '.'
000000000021dbc8         db  0x00 ; '.'
000000000021dbc9         db  0x00 ; '.'
000000000021dbca         db  0x00 ; '.'
000000000021dbcb         db  0x00 ; '.'
000000000021dbcc         db  0x00 ; '.'
000000000021dbcd         db  0x00 ; '.'
000000000021dbce         db  0x00 ; '.'
000000000021dbcf         db  0x00 ; '.'
000000000021dbd0         db  0x00 ; '.'
000000000021dbd1         db  0x00 ; '.'
000000000021dbd2         db  0x00 ; '.'
000000000021dbd3         db  0x00 ; '.'
000000000021dbd4         db  0x00 ; '.'
000000000021dbd5         db  0x00 ; '.'
000000000021dbd6         db  0x00 ; '.'
000000000021dbd7         db  0x00 ; '.'
000000000021dbd8         db  0x00 ; '.'
000000000021dbd9         db  0x00 ; '.'
000000000021dbda         db  0x00 ; '.'
000000000021dbdb         db  0x00 ; '.'
000000000021dbdc         db  0x00 ; '.'
000000000021dbdd         db  0x00 ; '.'
000000000021dbde         db  0x00 ; '.'
000000000021dbdf         db  0x00 ; '.'
000000000021dbe0         db  0x00 ; '.'
000000000021dbe1         db  0x00 ; '.'
000000000021dbe2         db  0x00 ; '.'
000000000021dbe3         db  0x00 ; '.'
000000000021dbe4         db  0x00 ; '.'
000000000021dbe5         db  0x00 ; '.'
000000000021dbe6         db  0x00 ; '.'
000000000021dbe7         db  0x00 ; '.'
000000000021dbe8         db  0x00 ; '.'
000000000021dbe9         db  0x00 ; '.'
000000000021dbea         db  0x00 ; '.'
000000000021dbeb         db  0x00 ; '.'
000000000021dbec         db  0x00 ; '.'
000000000021dbed         db  0x00 ; '.'
000000000021dbee         db  0x00 ; '.'
000000000021dbef         db  0x00 ; '.'
000000000021dbf0         db  0x00 ; '.'
000000000021dbf1         db  0x00 ; '.'
000000000021dbf2         db  0x00 ; '.'
000000000021dbf3         db  0x00 ; '.'
000000000021dbf4         db  0x00 ; '.'
000000000021dbf5         db  0x00 ; '.'
000000000021dbf6         db  0x00 ; '.'
000000000021dbf7         db  0x00 ; '.'
000000000021dbf8         db  0x00 ; '.'
000000000021dbf9         db  0x00 ; '.'
000000000021dbfa         db  0x00 ; '.'
000000000021dbfb         db  0x00 ; '.'
000000000021dbfc         db  0x00 ; '.'
000000000021dbfd         db  0x00 ; '.'
000000000021dbfe         db  0x00 ; '.'
000000000021dbff         db  0x00 ; '.'
000000000021dc00         db  0x00 ; '.'
000000000021dc01         db  0x00 ; '.'
000000000021dc02         db  0x00 ; '.'
000000000021dc03         db  0x00 ; '.'
000000000021dc04         db  0x00 ; '.'
000000000021dc05         db  0x00 ; '.'
000000000021dc06         db  0x00 ; '.'
000000000021dc07         db  0x00 ; '.'
000000000021dc08         db  0x00 ; '.'
000000000021dc09         db  0x00 ; '.'
000000000021dc0a         db  0x00 ; '.'
000000000021dc0b         db  0x00 ; '.'
000000000021dc0c         db  0x00 ; '.'
000000000021dc0d         db  0x00 ; '.'
000000000021dc0e         db  0x00 ; '.'
000000000021dc0f         db  0x00 ; '.'
000000000021dc10         db  0x00 ; '.'
000000000021dc11         db  0x00 ; '.'
000000000021dc12         db  0x00 ; '.'
000000000021dc13         db  0x00 ; '.'
000000000021dc14         db  0x00 ; '.'
000000000021dc15         db  0x00 ; '.'
000000000021dc16         db  0x00 ; '.'
000000000021dc17         db  0x00 ; '.'
000000000021dc18         db  0x00 ; '.'
000000000021dc19         db  0x00 ; '.'
000000000021dc1a         db  0x00 ; '.'
000000000021dc1b         db  0x00 ; '.'
000000000021dc1c         db  0x00 ; '.'
000000000021dc1d         db  0x00 ; '.'
000000000021dc1e         db  0x00 ; '.'
000000000021dc1f         db  0x00 ; '.'
000000000021dc20         db  0x00 ; '.'
000000000021dc21         db  0x00 ; '.'
000000000021dc22         db  0x00 ; '.'
000000000021dc23         db  0x00 ; '.'
000000000021dc24         db  0x00 ; '.'
000000000021dc25         db  0x00 ; '.'
000000000021dc26         db  0x00 ; '.'
000000000021dc27         db  0x00 ; '.'
000000000021dc28         db  0x00 ; '.'
000000000021dc29         db  0x00 ; '.'
000000000021dc2a         db  0x00 ; '.'
000000000021dc2b         db  0x00 ; '.'
000000000021dc2c         db  0x00 ; '.'
000000000021dc2d         db  0x00 ; '.'
000000000021dc2e         db  0x00 ; '.'
000000000021dc2f         db  0x00 ; '.'
000000000021dc30         db  0x00 ; '.'
000000000021dc31         db  0x00 ; '.'
000000000021dc32         db  0x00 ; '.'
000000000021dc33         db  0x00 ; '.'
000000000021dc34         db  0x00 ; '.'
000000000021dc35         db  0x00 ; '.'
000000000021dc36         db  0x00 ; '.'
000000000021dc37         db  0x00 ; '.'
000000000021dc38         db  0x00 ; '.'
000000000021dc39         db  0x00 ; '.'
000000000021dc3a         db  0x00 ; '.'
000000000021dc3b         db  0x00 ; '.'
000000000021dc3c         db  0x00 ; '.'
000000000021dc3d         db  0x00 ; '.'
000000000021dc3e         db  0x00 ; '.'
000000000021dc3f         db  0x00 ; '.'
000000000021dc40         db  0x00 ; '.'
000000000021dc41         db  0x00 ; '.'
000000000021dc42         db  0x00 ; '.'
000000000021dc43         db  0x00 ; '.'
000000000021dc44         db  0x00 ; '.'
000000000021dc45         db  0x00 ; '.'
000000000021dc46         db  0x00 ; '.'
000000000021dc47         db  0x00 ; '.'
000000000021dc48         db  0x00 ; '.'
000000000021dc49         db  0x00 ; '.'
000000000021dc4a         db  0x00 ; '.'
000000000021dc4b         db  0x00 ; '.'
000000000021dc4c         db  0x00 ; '.'
000000000021dc4d         db  0x00 ; '.'
000000000021dc4e         db  0x00 ; '.'
000000000021dc4f         db  0x00 ; '.'
000000000021dc50         db  0x00 ; '.'
000000000021dc51         db  0x00 ; '.'
000000000021dc52         db  0x00 ; '.'
000000000021dc53         db  0x00 ; '.'
000000000021dc54         db  0x00 ; '.'
000000000021dc55         db  0x00 ; '.'
000000000021dc56         db  0x00 ; '.'
000000000021dc57         db  0x00 ; '.'
000000000021dc58         db  0x00 ; '.'
000000000021dc59         db  0x00 ; '.'
000000000021dc5a         db  0x00 ; '.'
000000000021dc5b         db  0x00 ; '.'
000000000021dc5c         db  0x00 ; '.'
000000000021dc5d         db  0x00 ; '.'
000000000021dc5e         db  0x00 ; '.'
000000000021dc5f         db  0x00 ; '.'
000000000021dc60         db  0x00 ; '.'
000000000021dc61         db  0x00 ; '.'
000000000021dc62         db  0x00 ; '.'
000000000021dc63         db  0x00 ; '.'
000000000021dc64         db  0x00 ; '.'
000000000021dc65         db  0x00 ; '.'
000000000021dc66         db  0x00 ; '.'
000000000021dc67         db  0x00 ; '.'
000000000021dc68         db  0x00 ; '.'
000000000021dc69         db  0x00 ; '.'
000000000021dc6a         db  0x00 ; '.'
000000000021dc6b         db  0x00 ; '.'
000000000021dc6c         db  0x00 ; '.'
000000000021dc6d         db  0x00 ; '.'
000000000021dc6e         db  0x00 ; '.'
000000000021dc6f         db  0x00 ; '.'
000000000021dc70         db  0x00 ; '.'
000000000021dc71         db  0x00 ; '.'
000000000021dc72         db  0x00 ; '.'
000000000021dc73         db  0x00 ; '.'
000000000021dc74         db  0x00 ; '.'
000000000021dc75         db  0x00 ; '.'
000000000021dc76         db  0x00 ; '.'
000000000021dc77         db  0x00 ; '.'
000000000021dc78         db  0x00 ; '.'
000000000021dc79         db  0x00 ; '.'
000000000021dc7a         db  0x00 ; '.'
000000000021dc7b         db  0x00 ; '.'
000000000021dc7c         db  0x00 ; '.'
000000000021dc7d         db  0x00 ; '.'
000000000021dc7e         db  0x00 ; '.'
000000000021dc7f         db  0x00 ; '.'
000000000021dc80         db  0x00 ; '.'
000000000021dc81         db  0x00 ; '.'
000000000021dc82         db  0x00 ; '.'
000000000021dc83         db  0x00 ; '.'
000000000021dc84         db  0x00 ; '.'
000000000021dc85         db  0x00 ; '.'
000000000021dc86         db  0x00 ; '.'
000000000021dc87         db  0x00 ; '.'
000000000021dc88         db  0x00 ; '.'
000000000021dc89         db  0x00 ; '.'
000000000021dc8a         db  0x00 ; '.'
000000000021dc8b         db  0x00 ; '.'
000000000021dc8c         db  0x00 ; '.'
000000000021dc8d         db  0x00 ; '.'
000000000021dc8e         db  0x00 ; '.'
000000000021dc8f         db  0x00 ; '.'
000000000021dc90         db  0x00 ; '.'
000000000021dc91         db  0x00 ; '.'
000000000021dc92         db  0x00 ; '.'
000000000021dc93         db  0x00 ; '.'
000000000021dc94         db  0x00 ; '.'
000000000021dc95         db  0x00 ; '.'
000000000021dc96         db  0x00 ; '.'
000000000021dc97         db  0x00 ; '.'
000000000021dc98         db  0x00 ; '.'
000000000021dc99         db  0x00 ; '.'
000000000021dc9a         db  0x00 ; '.'
000000000021dc9b         db  0x00 ; '.'
000000000021dc9c         db  0x00 ; '.'
000000000021dc9d         db  0x00 ; '.'
000000000021dc9e         db  0x00 ; '.'
000000000021dc9f         db  0x00 ; '.'
000000000021dca0         db  0x00 ; '.'
000000000021dca1         db  0x00 ; '.'
000000000021dca2         db  0x00 ; '.'
000000000021dca3         db  0x00 ; '.'
000000000021dca4         db  0x00 ; '.'
000000000021dca5         db  0x00 ; '.'
000000000021dca6         db  0x00 ; '.'
000000000021dca7         db  0x00 ; '.'
000000000021dca8         db  0x00 ; '.'
000000000021dca9         db  0x00 ; '.'
000000000021dcaa         db  0x00 ; '.'
000000000021dcab         db  0x00 ; '.'
000000000021dcac         db  0x00 ; '.'
000000000021dcad         db  0x00 ; '.'
000000000021dcae         db  0x00 ; '.'
000000000021dcaf         db  0x00 ; '.'
000000000021dcb0         db  0x00 ; '.'
000000000021dcb1         db  0x00 ; '.'
000000000021dcb2         db  0x00 ; '.'
000000000021dcb3         db  0x00 ; '.'
000000000021dcb4         db  0x00 ; '.'
000000000021dcb5         db  0x00 ; '.'
000000000021dcb6         db  0x00 ; '.'
000000000021dcb7         db  0x00 ; '.'
000000000021dcb8         db  0x00 ; '.'
000000000021dcb9         db  0x00 ; '.'
000000000021dcba         db  0x00 ; '.'
000000000021dcbb         db  0x00 ; '.'
000000000021dcbc         db  0x00 ; '.'
000000000021dcbd         db  0x00 ; '.'
000000000021dcbe         db  0x00 ; '.'
000000000021dcbf         db  0x00 ; '.'
000000000021dcc0         db  0x00 ; '.'
000000000021dcc1         db  0x00 ; '.'
000000000021dcc2         db  0x00 ; '.'
000000000021dcc3         db  0x00 ; '.'
000000000021dcc4         db  0x00 ; '.'
000000000021dcc5         db  0x00 ; '.'
000000000021dcc6         db  0x00 ; '.'
000000000021dcc7         db  0x00 ; '.'
000000000021dcc8         db  0x00 ; '.'
000000000021dcc9         db  0x00 ; '.'
000000000021dcca         db  0x00 ; '.'
000000000021dccb         db  0x00 ; '.'
000000000021dccc         db  0x00 ; '.'
000000000021dccd         db  0x00 ; '.'
000000000021dcce         db  0x00 ; '.'
000000000021dccf         db  0x00 ; '.'
000000000021dcd0         db  0x00 ; '.'
000000000021dcd1         db  0x00 ; '.'
000000000021dcd2         db  0x00 ; '.'
000000000021dcd3         db  0x00 ; '.'
000000000021dcd4         db  0x00 ; '.'
000000000021dcd5         db  0x00 ; '.'
000000000021dcd6         db  0x00 ; '.'
000000000021dcd7         db  0x00 ; '.'
000000000021dcd8         db  0x00 ; '.'
000000000021dcd9         db  0x00 ; '.'
000000000021dcda         db  0x00 ; '.'
000000000021dcdb         db  0x00 ; '.'
000000000021dcdc         db  0x00 ; '.'
000000000021dcdd         db  0x00 ; '.'
000000000021dcde         db  0x00 ; '.'
000000000021dcdf         db  0x00 ; '.'
000000000021dce0         db  0x00 ; '.'
000000000021dce1         db  0x00 ; '.'
000000000021dce2         db  0x00 ; '.'
000000000021dce3         db  0x00 ; '.'
000000000021dce4         db  0x00 ; '.'
000000000021dce5         db  0x00 ; '.'
000000000021dce6         db  0x00 ; '.'
000000000021dce7         db  0x00 ; '.'
000000000021dce8         db  0x00 ; '.'
000000000021dce9         db  0x00 ; '.'
000000000021dcea         db  0x00 ; '.'
000000000021dceb         db  0x00 ; '.'
000000000021dcec         db  0x00 ; '.'
000000000021dced         db  0x00 ; '.'
000000000021dcee         db  0x00 ; '.'
000000000021dcef         db  0x00 ; '.'
000000000021dcf0         db  0x00 ; '.'
000000000021dcf1         db  0x00 ; '.'
000000000021dcf2         db  0x00 ; '.'
000000000021dcf3         db  0x00 ; '.'
000000000021dcf4         db  0x00 ; '.'
000000000021dcf5         db  0x00 ; '.'
000000000021dcf6         db  0x00 ; '.'
000000000021dcf7         db  0x00 ; '.'
000000000021dcf8         db  0x00 ; '.'
000000000021dcf9         db  0x00 ; '.'
000000000021dcfa         db  0x00 ; '.'
000000000021dcfb         db  0x00 ; '.'
000000000021dcfc         db  0x00 ; '.'
000000000021dcfd         db  0x00 ; '.'
000000000021dcfe         db  0x00 ; '.'
000000000021dcff         db  0x00 ; '.'
000000000021dd00         db  0x00 ; '.'
000000000021dd01         db  0x00 ; '.'
000000000021dd02         db  0x00 ; '.'
000000000021dd03         db  0x00 ; '.'
000000000021dd04         db  0x00 ; '.'
000000000021dd05         db  0x00 ; '.'
000000000021dd06         db  0x00 ; '.'
000000000021dd07         db  0x00 ; '.'
000000000021dd08         db  0x00 ; '.'
000000000021dd09         db  0x00 ; '.'
000000000021dd0a         db  0x00 ; '.'
000000000021dd0b         db  0x00 ; '.'
000000000021dd0c         db  0x00 ; '.'
000000000021dd0d         db  0x00 ; '.'
000000000021dd0e         db  0x00 ; '.'
000000000021dd0f         db  0x00 ; '.'
000000000021dd10         db  0x00 ; '.'
000000000021dd11         db  0x00 ; '.'
000000000021dd12         db  0x00 ; '.'
000000000021dd13         db  0x00 ; '.'
000000000021dd14         db  0x00 ; '.'
000000000021dd15         db  0x00 ; '.'
000000000021dd16         db  0x00 ; '.'
000000000021dd17         db  0x00 ; '.'
000000000021dd18         db  0x00 ; '.'
000000000021dd19         db  0x00 ; '.'
000000000021dd1a         db  0x00 ; '.'
000000000021dd1b         db  0x00 ; '.'
000000000021dd1c         db  0x00 ; '.'
000000000021dd1d         db  0x00 ; '.'
000000000021dd1e         db  0x00 ; '.'
000000000021dd1f         db  0x00 ; '.'
000000000021dd20         db  0x00 ; '.'
000000000021dd21         db  0x00 ; '.'
000000000021dd22         db  0x00 ; '.'
000000000021dd23         db  0x00 ; '.'
000000000021dd24         db  0x00 ; '.'
000000000021dd25         db  0x00 ; '.'
000000000021dd26         db  0x00 ; '.'
000000000021dd27         db  0x00 ; '.'
000000000021dd28         db  0x00 ; '.'
000000000021dd29         db  0x00 ; '.'
000000000021dd2a         db  0x00 ; '.'
000000000021dd2b         db  0x00 ; '.'
000000000021dd2c         db  0x00 ; '.'
000000000021dd2d         db  0x00 ; '.'
000000000021dd2e         db  0x00 ; '.'
000000000021dd2f         db  0x00 ; '.'
000000000021dd30         db  0x00 ; '.'
000000000021dd31         db  0x00 ; '.'
000000000021dd32         db  0x00 ; '.'
000000000021dd33         db  0x00 ; '.'
000000000021dd34         db  0x00 ; '.'
000000000021dd35         db  0x00 ; '.'
000000000021dd36         db  0x00 ; '.'
000000000021dd37         db  0x00 ; '.'
000000000021dd38         db  0x00 ; '.'
000000000021dd39         db  0x00 ; '.'
000000000021dd3a         db  0x00 ; '.'
000000000021dd3b         db  0x00 ; '.'
000000000021dd3c         db  0x00 ; '.'
000000000021dd3d         db  0x00 ; '.'
000000000021dd3e         db  0x00 ; '.'
000000000021dd3f         db  0x00 ; '.'
000000000021dd40         db  0x00 ; '.'
000000000021dd41         db  0x00 ; '.'
000000000021dd42         db  0x00 ; '.'
000000000021dd43         db  0x00 ; '.'
000000000021dd44         db  0x00 ; '.'
000000000021dd45         db  0x00 ; '.'
000000000021dd46         db  0x00 ; '.'
000000000021dd47         db  0x00 ; '.'
000000000021dd48         db  0x00 ; '.'
000000000021dd49         db  0x00 ; '.'
000000000021dd4a         db  0x00 ; '.'
000000000021dd4b         db  0x00 ; '.'
000000000021dd4c         db  0x00 ; '.'
000000000021dd4d         db  0x00 ; '.'
000000000021dd4e         db  0x00 ; '.'
000000000021dd4f         db  0x00 ; '.'
000000000021dd50         db  0x00 ; '.'
000000000021dd51         db  0x00 ; '.'
000000000021dd52         db  0x00 ; '.'
000000000021dd53         db  0x00 ; '.'
000000000021dd54         db  0x00 ; '.'
000000000021dd55         db  0x00 ; '.'
000000000021dd56         db  0x00 ; '.'
000000000021dd57         db  0x00 ; '.'
000000000021dd58         db  0x00 ; '.'
000000000021dd59         db  0x00 ; '.'
000000000021dd5a         db  0x00 ; '.'
000000000021dd5b         db  0x00 ; '.'
000000000021dd5c         db  0x00 ; '.'
000000000021dd5d         db  0x00 ; '.'
000000000021dd5e         db  0x00 ; '.'
000000000021dd5f         db  0x00 ; '.'
000000000021dd60         db  0x00 ; '.'
000000000021dd61         db  0x00 ; '.'
000000000021dd62         db  0x00 ; '.'
000000000021dd63         db  0x00 ; '.'
000000000021dd64         db  0x00 ; '.'
000000000021dd65         db  0x00 ; '.'
000000000021dd66         db  0x00 ; '.'
000000000021dd67         db  0x00 ; '.'
000000000021dd68         db  0x00 ; '.'
000000000021dd69         db  0x00 ; '.'
000000000021dd6a         db  0x00 ; '.'
000000000021dd6b         db  0x00 ; '.'
000000000021dd6c         db  0x00 ; '.'
000000000021dd6d         db  0x00 ; '.'
000000000021dd6e         db  0x00 ; '.'
000000000021dd6f         db  0x00 ; '.'
000000000021dd70         db  0x00 ; '.'
000000000021dd71         db  0x00 ; '.'
000000000021dd72         db  0x00 ; '.'
000000000021dd73         db  0x00 ; '.'
000000000021dd74         db  0x00 ; '.'
000000000021dd75         db  0x00 ; '.'
000000000021dd76         db  0x00 ; '.'
000000000021dd77         db  0x00 ; '.'
000000000021dd78         db  0x00 ; '.'
000000000021dd79         db  0x00 ; '.'
000000000021dd7a         db  0x00 ; '.'
000000000021dd7b         db  0x00 ; '.'
000000000021dd7c         db  0x00 ; '.'
000000000021dd7d         db  0x00 ; '.'
000000000021dd7e         db  0x00 ; '.'
000000000021dd7f         db  0x00 ; '.'
000000000021dd80         db  0x00 ; '.'
000000000021dd81         db  0x00 ; '.'
000000000021dd82         db  0x00 ; '.'
000000000021dd83         db  0x00 ; '.'
000000000021dd84         db  0x00 ; '.'
000000000021dd85         db  0x00 ; '.'
000000000021dd86         db  0x00 ; '.'
000000000021dd87         db  0x00 ; '.'
000000000021dd88         db  0x00 ; '.'
000000000021dd89         db  0x00 ; '.'
000000000021dd8a         db  0x00 ; '.'
000000000021dd8b         db  0x00 ; '.'
000000000021dd8c         db  0x00 ; '.'
000000000021dd8d         db  0x00 ; '.'
000000000021dd8e         db  0x00 ; '.'
000000000021dd8f         db  0x00 ; '.'
000000000021dd90         db  0x00 ; '.'
000000000021dd91         db  0x00 ; '.'
000000000021dd92         db  0x00 ; '.'
000000000021dd93         db  0x00 ; '.'
000000000021dd94         db  0x00 ; '.'
000000000021dd95         db  0x00 ; '.'
000000000021dd96         db  0x00 ; '.'
000000000021dd97         db  0x00 ; '.'
000000000021dd98         db  0x00 ; '.'
000000000021dd99         db  0x00 ; '.'
000000000021dd9a         db  0x00 ; '.'
000000000021dd9b         db  0x00 ; '.'
000000000021dd9c         db  0x00 ; '.'
000000000021dd9d         db  0x00 ; '.'
000000000021dd9e         db  0x00 ; '.'
000000000021dd9f         db  0x00 ; '.'
000000000021dda0         db  0x00 ; '.'
000000000021dda1         db  0x00 ; '.'
000000000021dda2         db  0x00 ; '.'
000000000021dda3         db  0x00 ; '.'
000000000021dda4         db  0x00 ; '.'
000000000021dda5         db  0x00 ; '.'
000000000021dda6         db  0x00 ; '.'
000000000021dda7         db  0x00 ; '.'
000000000021dda8         db  0x00 ; '.'
000000000021dda9         db  0x00 ; '.'
000000000021ddaa         db  0x00 ; '.'
000000000021ddab         db  0x00 ; '.'
000000000021ddac         db  0x00 ; '.'
000000000021ddad         db  0x00 ; '.'
000000000021ddae         db  0x00 ; '.'
000000000021ddaf         db  0x00 ; '.'
000000000021ddb0         db  0x00 ; '.'
000000000021ddb1         db  0x00 ; '.'
000000000021ddb2         db  0x00 ; '.'
000000000021ddb3         db  0x00 ; '.'
000000000021ddb4         db  0x00 ; '.'
000000000021ddb5         db  0x00 ; '.'
000000000021ddb6         db  0x00 ; '.'
000000000021ddb7         db  0x00 ; '.'
000000000021ddb8         db  0x00 ; '.'
000000000021ddb9         db  0x00 ; '.'
000000000021ddba         db  0x00 ; '.'
000000000021ddbb         db  0x00 ; '.'
000000000021ddbc         db  0x00 ; '.'
000000000021ddbd         db  0x00 ; '.'
000000000021ddbe         db  0x00 ; '.'
000000000021ddbf         db  0x00 ; '.'
000000000021ddc0         db  0x00 ; '.'
000000000021ddc1         db  0x00 ; '.'
000000000021ddc2         db  0x00 ; '.'
000000000021ddc3         db  0x00 ; '.'
000000000021ddc4         db  0x00 ; '.'
000000000021ddc5         db  0x00 ; '.'
000000000021ddc6         db  0x00 ; '.'
000000000021ddc7         db  0x00 ; '.'
000000000021ddc8         db  0x00 ; '.'
000000000021ddc9         db  0x00 ; '.'
000000000021ddca         db  0x00 ; '.'
000000000021ddcb         db  0x00 ; '.'
000000000021ddcc         db  0x00 ; '.'
000000000021ddcd         db  0x00 ; '.'
000000000021ddce         db  0x00 ; '.'
000000000021ddcf         db  0x00 ; '.'
000000000021ddd0         db  0x00 ; '.'
000000000021ddd1         db  0x00 ; '.'
000000000021ddd2         db  0x00 ; '.'
000000000021ddd3         db  0x00 ; '.'
000000000021ddd4         db  0x00 ; '.'
000000000021ddd5         db  0x00 ; '.'
000000000021ddd6         db  0x00 ; '.'
000000000021ddd7         db  0x00 ; '.'
000000000021ddd8         db  0x00 ; '.'
000000000021ddd9         db  0x00 ; '.'
000000000021ddda         db  0x00 ; '.'
000000000021dddb         db  0x00 ; '.'
000000000021dddc         db  0x00 ; '.'
000000000021dddd         db  0x00 ; '.'
000000000021ddde         db  0x00 ; '.'
000000000021dddf         db  0x00 ; '.'
000000000021dde0         db  0x00 ; '.'
000000000021dde1         db  0x00 ; '.'
000000000021dde2         db  0x00 ; '.'
000000000021dde3         db  0x00 ; '.'
000000000021dde4         db  0x00 ; '.'
000000000021dde5         db  0x00 ; '.'
000000000021dde6         db  0x00 ; '.'
000000000021dde7         db  0x00 ; '.'
000000000021dde8         db  0x00 ; '.'
000000000021dde9         db  0x00 ; '.'
000000000021ddea         db  0x00 ; '.'
000000000021ddeb         db  0x00 ; '.'
000000000021ddec         db  0x00 ; '.'
000000000021dded         db  0x00 ; '.'
000000000021ddee         db  0x00 ; '.'
000000000021ddef         db  0x00 ; '.'
000000000021ddf0         db  0x00 ; '.'
000000000021ddf1         db  0x00 ; '.'
000000000021ddf2         db  0x00 ; '.'
000000000021ddf3         db  0x00 ; '.'
000000000021ddf4         db  0x00 ; '.'
000000000021ddf5         db  0x00 ; '.'
000000000021ddf6         db  0x00 ; '.'
000000000021ddf7         db  0x00 ; '.'
000000000021ddf8         db  0x00 ; '.'
000000000021ddf9         db  0x00 ; '.'
000000000021ddfa         db  0x00 ; '.'
000000000021ddfb         db  0x00 ; '.'
000000000021ddfc         db  0x00 ; '.'
000000000021ddfd         db  0x00 ; '.'
000000000021ddfe         db  0x00 ; '.'
000000000021ddff         db  0x00 ; '.'
000000000021de00         db  0x00 ; '.'
000000000021de01         db  0x00 ; '.'
000000000021de02         db  0x00 ; '.'
000000000021de03         db  0x00 ; '.'
000000000021de04         db  0x00 ; '.'
000000000021de05         db  0x00 ; '.'
000000000021de06         db  0x00 ; '.'
000000000021de07         db  0x00 ; '.'
000000000021de08         db  0x00 ; '.'
000000000021de09         db  0x00 ; '.'
000000000021de0a         db  0x00 ; '.'
000000000021de0b         db  0x00 ; '.'
000000000021de0c         db  0x00 ; '.'
000000000021de0d         db  0x00 ; '.'
000000000021de0e         db  0x00 ; '.'
000000000021de0f         db  0x00 ; '.'
000000000021de10         db  0x00 ; '.'
000000000021de11         db  0x00 ; '.'
000000000021de12         db  0x00 ; '.'
000000000021de13         db  0x00 ; '.'
000000000021de14         db  0x00 ; '.'
000000000021de15         db  0x00 ; '.'
000000000021de16         db  0x00 ; '.'
000000000021de17         db  0x00 ; '.'
000000000021de18         db  0x00 ; '.'
000000000021de19         db  0x00 ; '.'
000000000021de1a         db  0x00 ; '.'
000000000021de1b         db  0x00 ; '.'
000000000021de1c         db  0x00 ; '.'
000000000021de1d         db  0x00 ; '.'
000000000021de1e         db  0x00 ; '.'
000000000021de1f         db  0x00 ; '.'
000000000021de20         db  0x00 ; '.'
000000000021de21         db  0x00 ; '.'
000000000021de22         db  0x00 ; '.'
000000000021de23         db  0x00 ; '.'
000000000021de24         db  0x00 ; '.'
000000000021de25         db  0x00 ; '.'
000000000021de26         db  0x00 ; '.'
000000000021de27         db  0x00 ; '.'
000000000021de28         db  0x00 ; '.'
000000000021de29         db  0x00 ; '.'
000000000021de2a         db  0x00 ; '.'
000000000021de2b         db  0x00 ; '.'
000000000021de2c         db  0x00 ; '.'
000000000021de2d         db  0x00 ; '.'
000000000021de2e         db  0x00 ; '.'
000000000021de2f         db  0x00 ; '.'
000000000021de30         db  0x00 ; '.'
000000000021de31         db  0x00 ; '.'
000000000021de32         db  0x00 ; '.'
000000000021de33         db  0x00 ; '.'
000000000021de34         db  0x00 ; '.'
000000000021de35         db  0x00 ; '.'
000000000021de36         db  0x00 ; '.'
000000000021de37         db  0x00 ; '.'
000000000021de38         db  0x00 ; '.'
000000000021de39         db  0x00 ; '.'
000000000021de3a         db  0x00 ; '.'
000000000021de3b         db  0x00 ; '.'
000000000021de3c         db  0x00 ; '.'
000000000021de3d         db  0x00 ; '.'
000000000021de3e         db  0x00 ; '.'
000000000021de3f         db  0x00 ; '.'
000000000021de40         db  0x00 ; '.'
000000000021de41         db  0x00 ; '.'
000000000021de42         db  0x00 ; '.'
000000000021de43         db  0x00 ; '.'
000000000021de44         db  0x00 ; '.'
000000000021de45         db  0x00 ; '.'
000000000021de46         db  0x00 ; '.'
000000000021de47         db  0x00 ; '.'
000000000021de48         db  0x00 ; '.'
000000000021de49         db  0x00 ; '.'
000000000021de4a         db  0x00 ; '.'
000000000021de4b         db  0x00 ; '.'
000000000021de4c         db  0x00 ; '.'
000000000021de4d         db  0x00 ; '.'
000000000021de4e         db  0x00 ; '.'
000000000021de4f         db  0x00 ; '.'
000000000021de50         db  0x00 ; '.'
000000000021de51         db  0x00 ; '.'
000000000021de52         db  0x00 ; '.'
000000000021de53         db  0x00 ; '.'
000000000021de54         db  0x00 ; '.'
000000000021de55         db  0x00 ; '.'
000000000021de56         db  0x00 ; '.'
000000000021de57         db  0x00 ; '.'
000000000021de58         db  0x00 ; '.'
000000000021de59         db  0x00 ; '.'
000000000021de5a         db  0x00 ; '.'
000000000021de5b         db  0x00 ; '.'
000000000021de5c         db  0x00 ; '.'
000000000021de5d         db  0x00 ; '.'
000000000021de5e         db  0x00 ; '.'
000000000021de5f         db  0x00 ; '.'
000000000021de60         db  0x00 ; '.'
000000000021de61         db  0x00 ; '.'
000000000021de62         db  0x00 ; '.'
000000000021de63         db  0x00 ; '.'
000000000021de64         db  0x00 ; '.'
000000000021de65         db  0x00 ; '.'
000000000021de66         db  0x00 ; '.'
000000000021de67         db  0x00 ; '.'
000000000021de68         db  0x00 ; '.'
000000000021de69         db  0x00 ; '.'
000000000021de6a         db  0x00 ; '.'
000000000021de6b         db  0x00 ; '.'
000000000021de6c         db  0x00 ; '.'
000000000021de6d         db  0x00 ; '.'
000000000021de6e         db  0x00 ; '.'
000000000021de6f         db  0x00 ; '.'
000000000021de70         db  0x00 ; '.'
000000000021de71         db  0x00 ; '.'
000000000021de72         db  0x00 ; '.'
000000000021de73         db  0x00 ; '.'
000000000021de74         db  0x00 ; '.'
000000000021de75         db  0x00 ; '.'
000000000021de76         db  0x00 ; '.'
000000000021de77         db  0x00 ; '.'
000000000021de78         db  0x00 ; '.'
000000000021de79         db  0x00 ; '.'
000000000021de7a         db  0x00 ; '.'
000000000021de7b         db  0x00 ; '.'
000000000021de7c         db  0x00 ; '.'
000000000021de7d         db  0x00 ; '.'
000000000021de7e         db  0x00 ; '.'
000000000021de7f         db  0x00 ; '.'
000000000021de80         db  0x00 ; '.'
000000000021de81         db  0x00 ; '.'
000000000021de82         db  0x00 ; '.'
000000000021de83         db  0x00 ; '.'
000000000021de84         db  0x00 ; '.'
000000000021de85         db  0x00 ; '.'
000000000021de86         db  0x00 ; '.'
000000000021de87         db  0x00 ; '.'
000000000021de88         db  0x00 ; '.'
000000000021de89         db  0x00 ; '.'
000000000021de8a         db  0x00 ; '.'
000000000021de8b         db  0x00 ; '.'
000000000021de8c         db  0x00 ; '.'
000000000021de8d         db  0x00 ; '.'
000000000021de8e         db  0x00 ; '.'
000000000021de8f         db  0x00 ; '.'
000000000021de90         db  0x00 ; '.'
000000000021de91         db  0x00 ; '.'
000000000021de92         db  0x00 ; '.'
000000000021de93         db  0x00 ; '.'
000000000021de94         db  0x00 ; '.'
000000000021de95         db  0x00 ; '.'
000000000021de96         db  0x00 ; '.'
000000000021de97         db  0x00 ; '.'
000000000021de98         db  0x00 ; '.'
000000000021de99         db  0x00 ; '.'
000000000021de9a         db  0x00 ; '.'
000000000021de9b         db  0x00 ; '.'
000000000021de9c         db  0x00 ; '.'
000000000021de9d         db  0x00 ; '.'
000000000021de9e         db  0x00 ; '.'
000000000021de9f         db  0x00 ; '.'
000000000021dea0         db  0x00 ; '.'
000000000021dea1         db  0x00 ; '.'
000000000021dea2         db  0x00 ; '.'
000000000021dea3         db  0x00 ; '.'
000000000021dea4         db  0x00 ; '.'
000000000021dea5         db  0x00 ; '.'
000000000021dea6         db  0x00 ; '.'
000000000021dea7         db  0x00 ; '.'
000000000021dea8         db  0x00 ; '.'
000000000021dea9         db  0x00 ; '.'
000000000021deaa         db  0x00 ; '.'
000000000021deab         db  0x00 ; '.'
000000000021deac         db  0x00 ; '.'
000000000021dead         db  0x00 ; '.'
000000000021deae         db  0x00 ; '.'
000000000021deaf         db  0x00 ; '.'
000000000021deb0         db  0x00 ; '.'
000000000021deb1         db  0x00 ; '.'
000000000021deb2         db  0x00 ; '.'
000000000021deb3         db  0x00 ; '.'
000000000021deb4         db  0x00 ; '.'
000000000021deb5         db  0x00 ; '.'
000000000021deb6         db  0x00 ; '.'
000000000021deb7         db  0x00 ; '.'
000000000021deb8         db  0x00 ; '.'
000000000021deb9         db  0x00 ; '.'
000000000021deba         db  0x00 ; '.'
000000000021debb         db  0x00 ; '.'
000000000021debc         db  0x00 ; '.'
000000000021debd         db  0x00 ; '.'
000000000021debe         db  0x00 ; '.'
000000000021debf         db  0x00 ; '.'
000000000021dec0         db  0x00 ; '.'
000000000021dec1         db  0x00 ; '.'
000000000021dec2         db  0x00 ; '.'
000000000021dec3         db  0x00 ; '.'
000000000021dec4         db  0x00 ; '.'
000000000021dec5         db  0x00 ; '.'
000000000021dec6         db  0x00 ; '.'
000000000021dec7         db  0x00 ; '.'
000000000021dec8         db  0x00 ; '.'
000000000021dec9         db  0x00 ; '.'
000000000021deca         db  0x00 ; '.'
000000000021decb         db  0x00 ; '.'
000000000021decc         db  0x00 ; '.'
000000000021decd         db  0x00 ; '.'
000000000021dece         db  0x00 ; '.'
000000000021decf         db  0x00 ; '.'
000000000021ded0         db  0x00 ; '.'
000000000021ded1         db  0x00 ; '.'
000000000021ded2         db  0x00 ; '.'
000000000021ded3         db  0x00 ; '.'
000000000021ded4         db  0x00 ; '.'
000000000021ded5         db  0x00 ; '.'
000000000021ded6         db  0x00 ; '.'
000000000021ded7         db  0x00 ; '.'
000000000021ded8         db  0x00 ; '.'
000000000021ded9         db  0x00 ; '.'
000000000021deda         db  0x00 ; '.'
000000000021dedb         db  0x00 ; '.'
000000000021dedc         db  0x00 ; '.'
000000000021dedd         db  0x00 ; '.'
000000000021dede         db  0x00 ; '.'
000000000021dedf         db  0x00 ; '.'
000000000021dee0         db  0x00 ; '.'
000000000021dee1         db  0x00 ; '.'
000000000021dee2         db  0x00 ; '.'
000000000021dee3         db  0x00 ; '.'
000000000021dee4         db  0x00 ; '.'
000000000021dee5         db  0x00 ; '.'
000000000021dee6         db  0x00 ; '.'
000000000021dee7         db  0x00 ; '.'
000000000021dee8         db  0x00 ; '.'
000000000021dee9         db  0x00 ; '.'
000000000021deea         db  0x00 ; '.'
000000000021deeb         db  0x00 ; '.'
000000000021deec         db  0x00 ; '.'
000000000021deed         db  0x00 ; '.'
000000000021deee         db  0x00 ; '.'
000000000021deef         db  0x00 ; '.'
000000000021def0         db  0x00 ; '.'
000000000021def1         db  0x00 ; '.'
000000000021def2         db  0x00 ; '.'
000000000021def3         db  0x00 ; '.'
000000000021def4         db  0x00 ; '.'
000000000021def5         db  0x00 ; '.'
000000000021def6         db  0x00 ; '.'
000000000021def7         db  0x00 ; '.'
000000000021def8         db  0x00 ; '.'
000000000021def9         db  0x00 ; '.'
000000000021defa         db  0x00 ; '.'
000000000021defb         db  0x00 ; '.'
000000000021defc         db  0x00 ; '.'
000000000021defd         db  0x00 ; '.'
000000000021defe         db  0x00 ; '.'
000000000021deff         db  0x00 ; '.'
000000000021df00         db  0x00 ; '.'
000000000021df01         db  0x00 ; '.'
000000000021df02         db  0x00 ; '.'
000000000021df03         db  0x00 ; '.'
000000000021df04         db  0x00 ; '.'
000000000021df05         db  0x00 ; '.'
000000000021df06         db  0x00 ; '.'
000000000021df07         db  0x00 ; '.'
000000000021df08         db  0x00 ; '.'
000000000021df09         db  0x00 ; '.'
000000000021df0a         db  0x00 ; '.'
000000000021df0b         db  0x00 ; '.'
000000000021df0c         db  0x00 ; '.'
000000000021df0d         db  0x00 ; '.'
000000000021df0e         db  0x00 ; '.'
000000000021df0f         db  0x00 ; '.'
000000000021df10         db  0x00 ; '.'
000000000021df11         db  0x00 ; '.'
000000000021df12         db  0x00 ; '.'
000000000021df13         db  0x00 ; '.'
000000000021df14         db  0x00 ; '.'
000000000021df15         db  0x00 ; '.'
000000000021df16         db  0x00 ; '.'
000000000021df17         db  0x00 ; '.'
000000000021df18         db  0x00 ; '.'
000000000021df19         db  0x00 ; '.'
000000000021df1a         db  0x00 ; '.'
000000000021df1b         db  0x00 ; '.'
000000000021df1c         db  0x00 ; '.'
000000000021df1d         db  0x00 ; '.'
000000000021df1e         db  0x00 ; '.'
000000000021df1f         db  0x00 ; '.'
000000000021df20         db  0x00 ; '.'
000000000021df21         db  0x00 ; '.'
000000000021df22         db  0x00 ; '.'
000000000021df23         db  0x00 ; '.'
000000000021df24         db  0x00 ; '.'
000000000021df25         db  0x00 ; '.'
000000000021df26         db  0x00 ; '.'
000000000021df27         db  0x00 ; '.'
000000000021df28         db  0x00 ; '.'
000000000021df29         db  0x00 ; '.'
000000000021df2a         db  0x00 ; '.'
000000000021df2b         db  0x00 ; '.'
000000000021df2c         db  0x00 ; '.'
000000000021df2d         db  0x00 ; '.'
000000000021df2e         db  0x00 ; '.'
000000000021df2f         db  0x00 ; '.'
000000000021df30         db  0x00 ; '.'
000000000021df31         db  0x00 ; '.'
000000000021df32         db  0x00 ; '.'
000000000021df33         db  0x00 ; '.'
000000000021df34         db  0x00 ; '.'
000000000021df35         db  0x00 ; '.'
000000000021df36         db  0x00 ; '.'
000000000021df37         db  0x00 ; '.'
000000000021df38         db  0x00 ; '.'
000000000021df39         db  0x00 ; '.'
000000000021df3a         db  0x00 ; '.'
000000000021df3b         db  0x00 ; '.'
000000000021df3c         db  0x00 ; '.'
000000000021df3d         db  0x00 ; '.'
000000000021df3e         db  0x00 ; '.'
000000000021df3f         db  0x00 ; '.'
000000000021df40         db  0x00 ; '.'
000000000021df41         db  0x00 ; '.'
000000000021df42         db  0x00 ; '.'
000000000021df43         db  0x00 ; '.'
000000000021df44         db  0x00 ; '.'
000000000021df45         db  0x00 ; '.'
000000000021df46         db  0x00 ; '.'
000000000021df47         db  0x00 ; '.'
000000000021df48         db  0x00 ; '.'
000000000021df49         db  0x00 ; '.'
000000000021df4a         db  0x00 ; '.'
000000000021df4b         db  0x00 ; '.'
000000000021df4c         db  0x00 ; '.'
000000000021df4d         db  0x00 ; '.'
000000000021df4e         db  0x00 ; '.'
000000000021df4f         db  0x00 ; '.'
000000000021df50         db  0x00 ; '.'
000000000021df51         db  0x00 ; '.'
000000000021df52         db  0x00 ; '.'
000000000021df53         db  0x00 ; '.'
000000000021df54         db  0x00 ; '.'
000000000021df55         db  0x00 ; '.'
000000000021df56         db  0x00 ; '.'
000000000021df57         db  0x00 ; '.'
000000000021df58         db  0x00 ; '.'
000000000021df59         db  0x00 ; '.'
000000000021df5a         db  0x00 ; '.'
000000000021df5b         db  0x00 ; '.'
000000000021df5c         db  0x00 ; '.'
000000000021df5d         db  0x00 ; '.'
000000000021df5e         db  0x00 ; '.'
000000000021df5f         db  0x00 ; '.'
000000000021df60         db  0x00 ; '.'
000000000021df61         db  0x00 ; '.'
000000000021df62         db  0x00 ; '.'
000000000021df63         db  0x00 ; '.'
000000000021df64         db  0x00 ; '.'
000000000021df65         db  0x00 ; '.'
000000000021df66         db  0x00 ; '.'
000000000021df67         db  0x00 ; '.'
000000000021df68         db  0x00 ; '.'
000000000021df69         db  0x00 ; '.'
000000000021df6a         db  0x00 ; '.'
000000000021df6b         db  0x00 ; '.'
000000000021df6c         db  0x00 ; '.'
000000000021df6d         db  0x00 ; '.'
000000000021df6e         db  0x00 ; '.'
000000000021df6f         db  0x00 ; '.'
000000000021df70         db  0x00 ; '.'
000000000021df71         db  0x00 ; '.'
000000000021df72         db  0x00 ; '.'
000000000021df73         db  0x00 ; '.'
000000000021df74         db  0x00 ; '.'
000000000021df75         db  0x00 ; '.'
000000000021df76         db  0x00 ; '.'
000000000021df77         db  0x00 ; '.'
000000000021df78         db  0x00 ; '.'
000000000021df79         db  0x00 ; '.'
000000000021df7a         db  0x00 ; '.'
000000000021df7b         db  0x00 ; '.'
000000000021df7c         db  0x00 ; '.'
000000000021df7d         db  0x00 ; '.'
000000000021df7e         db  0x00 ; '.'
000000000021df7f         db  0x00 ; '.'
000000000021df80         db  0x00 ; '.'
000000000021df81         db  0x00 ; '.'
000000000021df82         db  0x00 ; '.'
000000000021df83         db  0x00 ; '.'
000000000021df84         db  0x00 ; '.'
000000000021df85         db  0x00 ; '.'
000000000021df86         db  0x00 ; '.'
000000000021df87         db  0x00 ; '.'
000000000021df88         db  0x00 ; '.'
000000000021df89         db  0x00 ; '.'
000000000021df8a         db  0x00 ; '.'
000000000021df8b         db  0x00 ; '.'
000000000021df8c         db  0x00 ; '.'
000000000021df8d         db  0x00 ; '.'
000000000021df8e         db  0x00 ; '.'
000000000021df8f         db  0x00 ; '.'
000000000021df90         db  0x00 ; '.'
000000000021df91         db  0x00 ; '.'
000000000021df92         db  0x00 ; '.'
000000000021df93         db  0x00 ; '.'
000000000021df94         db  0x00 ; '.'
000000000021df95         db  0x00 ; '.'
000000000021df96         db  0x00 ; '.'
000000000021df97         db  0x00 ; '.'
000000000021df98         db  0x00 ; '.'
000000000021df99         db  0x00 ; '.'
000000000021df9a         db  0x00 ; '.'
000000000021df9b         db  0x00 ; '.'
000000000021df9c         db  0x00 ; '.'
000000000021df9d         db  0x00 ; '.'
000000000021df9e         db  0x00 ; '.'
000000000021df9f         db  0x00 ; '.'
000000000021dfa0         db  0x00 ; '.'
000000000021dfa1         db  0x00 ; '.'
000000000021dfa2         db  0x00 ; '.'
000000000021dfa3         db  0x00 ; '.'
000000000021dfa4         db  0x00 ; '.'
000000000021dfa5         db  0x00 ; '.'
000000000021dfa6         db  0x00 ; '.'
000000000021dfa7         db  0x00 ; '.'
000000000021dfa8         db  0x00 ; '.'
000000000021dfa9         db  0x00 ; '.'
000000000021dfaa         db  0x00 ; '.'
000000000021dfab         db  0x00 ; '.'
000000000021dfac         db  0x00 ; '.'
000000000021dfad         db  0x00 ; '.'
000000000021dfae         db  0x00 ; '.'
000000000021dfaf         db  0x00 ; '.'
000000000021dfb0         db  0x00 ; '.'
000000000021dfb1         db  0x00 ; '.'
000000000021dfb2         db  0x00 ; '.'
000000000021dfb3         db  0x00 ; '.'
000000000021dfb4         db  0x00 ; '.'
000000000021dfb5         db  0x00 ; '.'
000000000021dfb6         db  0x00 ; '.'
000000000021dfb7         db  0x00 ; '.'
000000000021dfb8         db  0x00 ; '.'
000000000021dfb9         db  0x00 ; '.'
000000000021dfba         db  0x00 ; '.'
000000000021dfbb         db  0x00 ; '.'
000000000021dfbc         db  0x00 ; '.'
000000000021dfbd         db  0x00 ; '.'
000000000021dfbe         db  0x00 ; '.'
000000000021dfbf         db  0x00 ; '.'
000000000021dfc0         db  0x00 ; '.'
000000000021dfc1         db  0x00 ; '.'
000000000021dfc2         db  0x00 ; '.'
000000000021dfc3         db  0x00 ; '.'
000000000021dfc4         db  0x00 ; '.'
000000000021dfc5         db  0x00 ; '.'
000000000021dfc6         db  0x00 ; '.'
000000000021dfc7         db  0x00 ; '.'
000000000021dfc8         db  0x00 ; '.'
000000000021dfc9         db  0x00 ; '.'
000000000021dfca         db  0x00 ; '.'
000000000021dfcb         db  0x00 ; '.'
000000000021dfcc         db  0x00 ; '.'
000000000021dfcd         db  0x00 ; '.'
000000000021dfce         db  0x00 ; '.'
000000000021dfcf         db  0x00 ; '.'
000000000021dfd0         db  0x00 ; '.'
000000000021dfd1         db  0x00 ; '.'
000000000021dfd2         db  0x00 ; '.'
000000000021dfd3         db  0x00 ; '.'
000000000021dfd4         db  0x00 ; '.'
000000000021dfd5         db  0x00 ; '.'
000000000021dfd6         db  0x00 ; '.'
000000000021dfd7         db  0x00 ; '.'
000000000021dfd8         db  0x00 ; '.'
000000000021dfd9         db  0x00 ; '.'
000000000021dfda         db  0x00 ; '.'
000000000021dfdb         db  0x00 ; '.'
000000000021dfdc         db  0x00 ; '.'
000000000021dfdd         db  0x00 ; '.'
000000000021dfde         db  0x00 ; '.'
000000000021dfdf         db  0x00 ; '.'
000000000021dfe0         db  0x00 ; '.'
000000000021dfe1         db  0x00 ; '.'
000000000021dfe2         db  0x00 ; '.'
000000000021dfe3         db  0x00 ; '.'
000000000021dfe4         db  0x00 ; '.'
000000000021dfe5         db  0x00 ; '.'
000000000021dfe6         db  0x00 ; '.'
000000000021dfe7         db  0x00 ; '.'
000000000021dfe8         db  0x00 ; '.'
000000000021dfe9         db  0x00 ; '.'
000000000021dfea         db  0x00 ; '.'
000000000021dfeb         db  0x00 ; '.'
000000000021dfec         db  0x00 ; '.'
000000000021dfed         db  0x00 ; '.'
000000000021dfee         db  0x00 ; '.'
000000000021dfef         db  0x00 ; '.'
000000000021dff0         db  0x00 ; '.'
000000000021dff1         db  0x00 ; '.'
000000000021dff2         db  0x00 ; '.'
000000000021dff3         db  0x00 ; '.'
000000000021dff4         db  0x00 ; '.'
000000000021dff5         db  0x00 ; '.'
000000000021dff6         db  0x00 ; '.'
000000000021dff7         db  0x00 ; '.'
000000000021dff8         db  0x00 ; '.'
000000000021dff9         db  0x00 ; '.'
000000000021dffa         db  0x00 ; '.'
000000000021dffb         db  0x00 ; '.'
000000000021dffc         db  0x00 ; '.'
000000000021dffd         db  0x00 ; '.'
000000000021dffe         db  0x00 ; '.'
000000000021dfff         db  0x00 ; '.'
000000000021e000         db  0x00 ; '.'
000000000021e001         db  0x00 ; '.'
000000000021e002         db  0x00 ; '.'
000000000021e003         db  0x00 ; '.'
000000000021e004         db  0x00 ; '.'
000000000021e005         db  0x00 ; '.'
000000000021e006         db  0x00 ; '.'
000000000021e007         db  0x00 ; '.'
000000000021e008         db  0x00 ; '.'
000000000021e009         db  0x00 ; '.'
000000000021e00a         db  0x00 ; '.'
000000000021e00b         db  0x00 ; '.'
000000000021e00c         db  0x00 ; '.'
000000000021e00d         db  0x00 ; '.'
000000000021e00e         db  0x00 ; '.'
000000000021e00f         db  0x00 ; '.'
000000000021e010         db  0x00 ; '.'
000000000021e011         db  0x00 ; '.'
000000000021e012         db  0x00 ; '.'
000000000021e013         db  0x00 ; '.'
000000000021e014         db  0x00 ; '.'
000000000021e015         db  0x00 ; '.'
000000000021e016         db  0x00 ; '.'
000000000021e017         db  0x00 ; '.'
000000000021e018         db  0x00 ; '.'
000000000021e019         db  0x00 ; '.'
000000000021e01a         db  0x00 ; '.'
000000000021e01b         db  0x00 ; '.'
000000000021e01c         db  0x00 ; '.'
000000000021e01d         db  0x00 ; '.'
000000000021e01e         db  0x00 ; '.'
000000000021e01f         db  0x00 ; '.'
000000000021e020         db  0x00 ; '.'
000000000021e021         db  0x00 ; '.'
000000000021e022         db  0x00 ; '.'
000000000021e023         db  0x00 ; '.'
000000000021e024         db  0x00 ; '.'
000000000021e025         db  0x00 ; '.'
000000000021e026         db  0x00 ; '.'
000000000021e027         db  0x00 ; '.'
000000000021e028         db  0x00 ; '.'
000000000021e029         db  0x00 ; '.'
000000000021e02a         db  0x00 ; '.'
000000000021e02b         db  0x00 ; '.'
000000000021e02c         db  0x00 ; '.'
000000000021e02d         db  0x00 ; '.'
000000000021e02e         db  0x00 ; '.'
000000000021e02f         db  0x00 ; '.'
000000000021e030         db  0x00 ; '.'
000000000021e031         db  0x00 ; '.'
000000000021e032         db  0x00 ; '.'
000000000021e033         db  0x00 ; '.'
000000000021e034         db  0x00 ; '.'
000000000021e035         db  0x00 ; '.'
000000000021e036         db  0x00 ; '.'
000000000021e037         db  0x00 ; '.'
000000000021e038         db  0x00 ; '.'
000000000021e039         db  0x00 ; '.'
000000000021e03a         db  0x00 ; '.'
000000000021e03b         db  0x00 ; '.'
000000000021e03c         db  0x00 ; '.'
000000000021e03d         db  0x00 ; '.'
000000000021e03e         db  0x00 ; '.'
000000000021e03f         db  0x00 ; '.'
000000000021e040         db  0x00 ; '.'
000000000021e041         db  0x00 ; '.'
000000000021e042         db  0x00 ; '.'
000000000021e043         db  0x00 ; '.'
000000000021e044         db  0x00 ; '.'
000000000021e045         db  0x00 ; '.'
000000000021e046         db  0x00 ; '.'
000000000021e047         db  0x00 ; '.'
000000000021e048         db  0x00 ; '.'
000000000021e049         db  0x00 ; '.'
000000000021e04a         db  0x00 ; '.'
000000000021e04b         db  0x00 ; '.'
000000000021e04c         db  0x00 ; '.'
000000000021e04d         db  0x00 ; '.'
000000000021e04e         db  0x00 ; '.'
000000000021e04f         db  0x00 ; '.'
000000000021e050         db  0x00 ; '.'
000000000021e051         db  0x00 ; '.'
000000000021e052         db  0x00 ; '.'
000000000021e053         db  0x00 ; '.'
000000000021e054         db  0x00 ; '.'
000000000021e055         db  0x00 ; '.'
000000000021e056         db  0x00 ; '.'
000000000021e057         db  0x00 ; '.'
000000000021e058         db  0x00 ; '.'
000000000021e059         db  0x00 ; '.'
000000000021e05a         db  0x00 ; '.'
000000000021e05b         db  0x00 ; '.'
000000000021e05c         db  0x00 ; '.'
000000000021e05d         db  0x00 ; '.'
000000000021e05e         db  0x00 ; '.'
000000000021e05f         db  0x00 ; '.'
000000000021e060         db  0x00 ; '.'
000000000021e061         db  0x00 ; '.'
000000000021e062         db  0x00 ; '.'
000000000021e063         db  0x00 ; '.'
000000000021e064         db  0x00 ; '.'
000000000021e065         db  0x00 ; '.'
000000000021e066         db  0x00 ; '.'
000000000021e067         db  0x00 ; '.'
000000000021e068         db  0x00 ; '.'
000000000021e069         db  0x00 ; '.'
000000000021e06a         db  0x00 ; '.'
000000000021e06b         db  0x00 ; '.'
000000000021e06c         db  0x00 ; '.'
000000000021e06d         db  0x00 ; '.'
000000000021e06e         db  0x00 ; '.'
000000000021e06f         db  0x00 ; '.'
000000000021e070         db  0x00 ; '.'
000000000021e071         db  0x00 ; '.'
000000000021e072         db  0x00 ; '.'
000000000021e073         db  0x00 ; '.'
000000000021e074         db  0x00 ; '.'
000000000021e075         db  0x00 ; '.'
000000000021e076         db  0x00 ; '.'
000000000021e077         db  0x00 ; '.'
000000000021e078         db  0x00 ; '.'
000000000021e079         db  0x00 ; '.'
000000000021e07a         db  0x00 ; '.'
000000000021e07b         db  0x00 ; '.'
000000000021e07c         db  0x00 ; '.'
000000000021e07d         db  0x00 ; '.'
000000000021e07e         db  0x00 ; '.'
000000000021e07f         db  0x00 ; '.'
000000000021e080         db  0x00 ; '.'
000000000021e081         db  0x00 ; '.'
000000000021e082         db  0x00 ; '.'
000000000021e083         db  0x00 ; '.'
000000000021e084         db  0x00 ; '.'
000000000021e085         db  0x00 ; '.'
000000000021e086         db  0x00 ; '.'
000000000021e087         db  0x00 ; '.'
000000000021e088         db  0x00 ; '.'
000000000021e089         db  0x00 ; '.'
000000000021e08a         db  0x00 ; '.'
000000000021e08b         db  0x00 ; '.'
000000000021e08c         db  0x00 ; '.'
000000000021e08d         db  0x00 ; '.'
000000000021e08e         db  0x00 ; '.'
000000000021e08f         db  0x00 ; '.'
000000000021e090         db  0x00 ; '.'
000000000021e091         db  0x00 ; '.'
000000000021e092         db  0x00 ; '.'
000000000021e093         db  0x00 ; '.'
000000000021e094         db  0x00 ; '.'
000000000021e095         db  0x00 ; '.'
000000000021e096         db  0x00 ; '.'
000000000021e097         db  0x00 ; '.'
000000000021e098         db  0x00 ; '.'
000000000021e099         db  0x00 ; '.'
000000000021e09a         db  0x00 ; '.'
000000000021e09b         db  0x00 ; '.'
000000000021e09c         db  0x00 ; '.'
000000000021e09d         db  0x00 ; '.'
000000000021e09e         db  0x00 ; '.'
000000000021e09f         db  0x00 ; '.'
000000000021e0a0         db  0x00 ; '.'
000000000021e0a1         db  0x00 ; '.'
000000000021e0a2         db  0x00 ; '.'
000000000021e0a3         db  0x00 ; '.'
000000000021e0a4         db  0x00 ; '.'
000000000021e0a5         db  0x00 ; '.'
000000000021e0a6         db  0x00 ; '.'
000000000021e0a7         db  0x00 ; '.'
000000000021e0a8         db  0x00 ; '.'
000000000021e0a9         db  0x00 ; '.'
000000000021e0aa         db  0x00 ; '.'
000000000021e0ab         db  0x00 ; '.'
000000000021e0ac         db  0x00 ; '.'
000000000021e0ad         db  0x00 ; '.'
000000000021e0ae         db  0x00 ; '.'
000000000021e0af         db  0x00 ; '.'
000000000021e0b0         db  0x00 ; '.'
000000000021e0b1         db  0x00 ; '.'
000000000021e0b2         db  0x00 ; '.'
000000000021e0b3         db  0x00 ; '.'
000000000021e0b4         db  0x00 ; '.'
000000000021e0b5         db  0x00 ; '.'
000000000021e0b6         db  0x00 ; '.'
000000000021e0b7         db  0x00 ; '.'
000000000021e0b8         db  0x00 ; '.'
000000000021e0b9         db  0x00 ; '.'
000000000021e0ba         db  0x00 ; '.'
000000000021e0bb         db  0x00 ; '.'
000000000021e0bc         db  0x00 ; '.'
000000000021e0bd         db  0x00 ; '.'
000000000021e0be         db  0x00 ; '.'
000000000021e0bf         db  0x00 ; '.'
000000000021e0c0         db  0x00 ; '.'
000000000021e0c1         db  0x00 ; '.'
000000000021e0c2         db  0x00 ; '.'
000000000021e0c3         db  0x00 ; '.'
000000000021e0c4         db  0x00 ; '.'
000000000021e0c5         db  0x00 ; '.'
000000000021e0c6         db  0x00 ; '.'
000000000021e0c7         db  0x00 ; '.'
000000000021e0c8         db  0x00 ; '.'
000000000021e0c9         db  0x00 ; '.'
000000000021e0ca         db  0x00 ; '.'
000000000021e0cb         db  0x00 ; '.'
000000000021e0cc         db  0x00 ; '.'
000000000021e0cd         db  0x00 ; '.'
000000000021e0ce         db  0x00 ; '.'
000000000021e0cf         db  0x00 ; '.'
000000000021e0d0         db  0x00 ; '.'
000000000021e0d1         db  0x00 ; '.'
000000000021e0d2         db  0x00 ; '.'
000000000021e0d3         db  0x00 ; '.'
000000000021e0d4         db  0x00 ; '.'
000000000021e0d5         db  0x00 ; '.'
000000000021e0d6         db  0x00 ; '.'
000000000021e0d7         db  0x00 ; '.'
000000000021e0d8         db  0x00 ; '.'
000000000021e0d9         db  0x00 ; '.'
000000000021e0da         db  0x00 ; '.'
000000000021e0db         db  0x00 ; '.'
000000000021e0dc         db  0x00 ; '.'
000000000021e0dd         db  0x00 ; '.'
000000000021e0de         db  0x00 ; '.'
000000000021e0df         db  0x00 ; '.'
000000000021e0e0         db  0x00 ; '.'
000000000021e0e1         db  0x00 ; '.'
000000000021e0e2         db  0x00 ; '.'
000000000021e0e3         db  0x00 ; '.'
000000000021e0e4         db  0x00 ; '.'
000000000021e0e5         db  0x00 ; '.'
000000000021e0e6         db  0x00 ; '.'
000000000021e0e7         db  0x00 ; '.'
000000000021e0e8         db  0x00 ; '.'
000000000021e0e9         db  0x00 ; '.'
000000000021e0ea         db  0x00 ; '.'
000000000021e0eb         db  0x00 ; '.'
000000000021e0ec         db  0x00 ; '.'
000000000021e0ed         db  0x00 ; '.'
000000000021e0ee         db  0x00 ; '.'
000000000021e0ef         db  0x00 ; '.'
000000000021e0f0         db  0x00 ; '.'
000000000021e0f1         db  0x00 ; '.'
000000000021e0f2         db  0x00 ; '.'
000000000021e0f3         db  0x00 ; '.'
000000000021e0f4         db  0x00 ; '.'
000000000021e0f5         db  0x00 ; '.'
000000000021e0f6         db  0x00 ; '.'
000000000021e0f7         db  0x00 ; '.'
000000000021e0f8         db  0x00 ; '.'
000000000021e0f9         db  0x00 ; '.'
000000000021e0fa         db  0x00 ; '.'
000000000021e0fb         db  0x00 ; '.'
000000000021e0fc         db  0x00 ; '.'
000000000021e0fd         db  0x00 ; '.'
000000000021e0fe         db  0x00 ; '.'
000000000021e0ff         db  0x00 ; '.'
000000000021e100         db  0x00 ; '.'
000000000021e101         db  0x00 ; '.'
000000000021e102         db  0x00 ; '.'
000000000021e103         db  0x00 ; '.'
000000000021e104         db  0x00 ; '.'
000000000021e105         db  0x00 ; '.'
000000000021e106         db  0x00 ; '.'
000000000021e107         db  0x00 ; '.'
000000000021e108         db  0x00 ; '.'
000000000021e109         db  0x00 ; '.'
000000000021e10a         db  0x00 ; '.'
000000000021e10b         db  0x00 ; '.'
000000000021e10c         db  0x00 ; '.'
000000000021e10d         db  0x00 ; '.'
000000000021e10e         db  0x00 ; '.'
000000000021e10f         db  0x00 ; '.'
000000000021e110         db  0x00 ; '.'
000000000021e111         db  0x00 ; '.'
000000000021e112         db  0x00 ; '.'
000000000021e113         db  0x00 ; '.'
000000000021e114         db  0x00 ; '.'
000000000021e115         db  0x00 ; '.'
000000000021e116         db  0x00 ; '.'
000000000021e117         db  0x00 ; '.'
000000000021e118         db  0x00 ; '.'
000000000021e119         db  0x00 ; '.'
000000000021e11a         db  0x00 ; '.'
000000000021e11b         db  0x00 ; '.'
000000000021e11c         db  0x00 ; '.'
000000000021e11d         db  0x00 ; '.'
000000000021e11e         db  0x00 ; '.'
000000000021e11f         db  0x00 ; '.'
000000000021e120         db  0x00 ; '.'
000000000021e121         db  0x00 ; '.'
000000000021e122         db  0x00 ; '.'
000000000021e123         db  0x00 ; '.'
000000000021e124         db  0x00 ; '.'
000000000021e125         db  0x00 ; '.'
000000000021e126         db  0x00 ; '.'
000000000021e127         db  0x00 ; '.'
000000000021e128         db  0x00 ; '.'
000000000021e129         db  0x00 ; '.'
000000000021e12a         db  0x00 ; '.'
000000000021e12b         db  0x00 ; '.'
000000000021e12c         db  0x00 ; '.'
000000000021e12d         db  0x00 ; '.'
000000000021e12e         db  0x00 ; '.'
000000000021e12f         db  0x00 ; '.'
000000000021e130         db  0x00 ; '.'
000000000021e131         db  0x00 ; '.'
000000000021e132         db  0x00 ; '.'
000000000021e133         db  0x00 ; '.'
000000000021e134         db  0x00 ; '.'
000000000021e135         db  0x00 ; '.'
000000000021e136         db  0x00 ; '.'
000000000021e137         db  0x00 ; '.'
000000000021e138         db  0x00 ; '.'
000000000021e139         db  0x00 ; '.'
000000000021e13a         db  0x00 ; '.'
000000000021e13b         db  0x00 ; '.'
000000000021e13c         db  0x00 ; '.'
000000000021e13d         db  0x00 ; '.'
000000000021e13e         db  0x00 ; '.'
000000000021e13f         db  0x00 ; '.'
                     b_buff.7456:
000000000021e140         db  0x00 ; '.'                                         ; DATA XREF=install_file_in_file+880, install_file_in_file+915
000000000021e141         db  0x00 ; '.'
000000000021e142         db  0x00 ; '.'
000000000021e143         db  0x00 ; '.'
000000000021e144         db  0x00 ; '.'
000000000021e145         db  0x00 ; '.'
000000000021e146         db  0x00 ; '.'
000000000021e147         db  0x00 ; '.'
000000000021e148         db  0x00 ; '.'
000000000021e149         db  0x00 ; '.'
000000000021e14a         db  0x00 ; '.'
000000000021e14b         db  0x00 ; '.'
000000000021e14c         db  0x00 ; '.'
000000000021e14d         db  0x00 ; '.'
000000000021e14e         db  0x00 ; '.'
000000000021e14f         db  0x00 ; '.'
000000000021e150         db  0x00 ; '.'
000000000021e151         db  0x00 ; '.'
000000000021e152         db  0x00 ; '.'
000000000021e153         db  0x00 ; '.'
000000000021e154         db  0x00 ; '.'
000000000021e155         db  0x00 ; '.'
000000000021e156         db  0x00 ; '.'
000000000021e157         db  0x00 ; '.'
000000000021e158         db  0x00 ; '.'
000000000021e159         db  0x00 ; '.'
000000000021e15a         db  0x00 ; '.'
000000000021e15b         db  0x00 ; '.'
000000000021e15c         db  0x00 ; '.'
000000000021e15d         db  0x00 ; '.'
000000000021e15e         db  0x00 ; '.'
000000000021e15f         db  0x00 ; '.'
000000000021e160         db  0x00 ; '.'
000000000021e161         db  0x00 ; '.'
000000000021e162         db  0x00 ; '.'
000000000021e163         db  0x00 ; '.'
000000000021e164         db  0x00 ; '.'
000000000021e165         db  0x00 ; '.'
000000000021e166         db  0x00 ; '.'
000000000021e167         db  0x00 ; '.'
000000000021e168         db  0x00 ; '.'
000000000021e169         db  0x00 ; '.'
000000000021e16a         db  0x00 ; '.'
000000000021e16b         db  0x00 ; '.'
000000000021e16c         db  0x00 ; '.'
000000000021e16d         db  0x00 ; '.'
000000000021e16e         db  0x00 ; '.'
000000000021e16f         db  0x00 ; '.'
000000000021e170         db  0x00 ; '.'
000000000021e171         db  0x00 ; '.'
000000000021e172         db  0x00 ; '.'
000000000021e173         db  0x00 ; '.'
000000000021e174         db  0x00 ; '.'
000000000021e175         db  0x00 ; '.'
000000000021e176         db  0x00 ; '.'
000000000021e177         db  0x00 ; '.'
000000000021e178         db  0x00 ; '.'
000000000021e179         db  0x00 ; '.'
000000000021e17a         db  0x00 ; '.'
000000000021e17b         db  0x00 ; '.'
000000000021e17c         db  0x00 ; '.'
000000000021e17d         db  0x00 ; '.'
000000000021e17e         db  0x00 ; '.'
000000000021e17f         db  0x00 ; '.'
000000000021e180         db  0x00 ; '.'
000000000021e181         db  0x00 ; '.'
000000000021e182         db  0x00 ; '.'
000000000021e183         db  0x00 ; '.'
000000000021e184         db  0x00 ; '.'
000000000021e185         db  0x00 ; '.'
000000000021e186         db  0x00 ; '.'
000000000021e187         db  0x00 ; '.'
000000000021e188         db  0x00 ; '.'
000000000021e189         db  0x00 ; '.'
000000000021e18a         db  0x00 ; '.'
000000000021e18b         db  0x00 ; '.'
000000000021e18c         db  0x00 ; '.'
000000000021e18d         db  0x00 ; '.'
000000000021e18e         db  0x00 ; '.'
000000000021e18f         db  0x00 ; '.'
000000000021e190         db  0x00 ; '.'
000000000021e191         db  0x00 ; '.'
000000000021e192         db  0x00 ; '.'
000000000021e193         db  0x00 ; '.'
000000000021e194         db  0x00 ; '.'
000000000021e195         db  0x00 ; '.'
000000000021e196         db  0x00 ; '.'
000000000021e197         db  0x00 ; '.'
000000000021e198         db  0x00 ; '.'
000000000021e199         db  0x00 ; '.'
000000000021e19a         db  0x00 ; '.'
000000000021e19b         db  0x00 ; '.'
000000000021e19c         db  0x00 ; '.'
000000000021e19d         db  0x00 ; '.'
000000000021e19e         db  0x00 ; '.'
000000000021e19f         db  0x00 ; '.'
000000000021e1a0         db  0x00 ; '.'
000000000021e1a1         db  0x00 ; '.'
000000000021e1a2         db  0x00 ; '.'
000000000021e1a3         db  0x00 ; '.'
000000000021e1a4         db  0x00 ; '.'
000000000021e1a5         db  0x00 ; '.'
000000000021e1a6         db  0x00 ; '.'
000000000021e1a7         db  0x00 ; '.'
000000000021e1a8         db  0x00 ; '.'
000000000021e1a9         db  0x00 ; '.'
000000000021e1aa         db  0x00 ; '.'
000000000021e1ab         db  0x00 ; '.'
000000000021e1ac         db  0x00 ; '.'
000000000021e1ad         db  0x00 ; '.'
000000000021e1ae         db  0x00 ; '.'
000000000021e1af         db  0x00 ; '.'
000000000021e1b0         db  0x00 ; '.'
000000000021e1b1         db  0x00 ; '.'
000000000021e1b2         db  0x00 ; '.'
000000000021e1b3         db  0x00 ; '.'
000000000021e1b4         db  0x00 ; '.'
000000000021e1b5         db  0x00 ; '.'
000000000021e1b6         db  0x00 ; '.'
000000000021e1b7         db  0x00 ; '.'
000000000021e1b8         db  0x00 ; '.'
000000000021e1b9         db  0x00 ; '.'
000000000021e1ba         db  0x00 ; '.'
000000000021e1bb         db  0x00 ; '.'
000000000021e1bc         db  0x00 ; '.'
000000000021e1bd         db  0x00 ; '.'
000000000021e1be         db  0x00 ; '.'
000000000021e1bf         db  0x00 ; '.'
000000000021e1c0         db  0x00 ; '.'
000000000021e1c1         db  0x00 ; '.'
000000000021e1c2         db  0x00 ; '.'
000000000021e1c3         db  0x00 ; '.'
000000000021e1c4         db  0x00 ; '.'
000000000021e1c5         db  0x00 ; '.'
000000000021e1c6         db  0x00 ; '.'
000000000021e1c7         db  0x00 ; '.'
000000000021e1c8         db  0x00 ; '.'
000000000021e1c9         db  0x00 ; '.'
000000000021e1ca         db  0x00 ; '.'
000000000021e1cb         db  0x00 ; '.'
000000000021e1cc         db  0x00 ; '.'
000000000021e1cd         db  0x00 ; '.'
000000000021e1ce         db  0x00 ; '.'
000000000021e1cf         db  0x00 ; '.'
000000000021e1d0         db  0x00 ; '.'
000000000021e1d1         db  0x00 ; '.'
000000000021e1d2         db  0x00 ; '.'
000000000021e1d3         db  0x00 ; '.'
000000000021e1d4         db  0x00 ; '.'
000000000021e1d5         db  0x00 ; '.'
000000000021e1d6         db  0x00 ; '.'
000000000021e1d7         db  0x00 ; '.'
000000000021e1d8         db  0x00 ; '.'
000000000021e1d9         db  0x00 ; '.'
000000000021e1da         db  0x00 ; '.'
000000000021e1db         db  0x00 ; '.'
000000000021e1dc         db  0x00 ; '.'
000000000021e1dd         db  0x00 ; '.'
000000000021e1de         db  0x00 ; '.'
000000000021e1df         db  0x00 ; '.'
000000000021e1e0         db  0x00 ; '.'
000000000021e1e1         db  0x00 ; '.'
000000000021e1e2         db  0x00 ; '.'
000000000021e1e3         db  0x00 ; '.'
000000000021e1e4         db  0x00 ; '.'
000000000021e1e5         db  0x00 ; '.'
000000000021e1e6         db  0x00 ; '.'
000000000021e1e7         db  0x00 ; '.'
000000000021e1e8         db  0x00 ; '.'
000000000021e1e9         db  0x00 ; '.'
000000000021e1ea         db  0x00 ; '.'
000000000021e1eb         db  0x00 ; '.'
000000000021e1ec         db  0x00 ; '.'
000000000021e1ed         db  0x00 ; '.'
000000000021e1ee         db  0x00 ; '.'
000000000021e1ef         db  0x00 ; '.'
000000000021e1f0         db  0x00 ; '.'
000000000021e1f1         db  0x00 ; '.'
000000000021e1f2         db  0x00 ; '.'
000000000021e1f3         db  0x00 ; '.'
000000000021e1f4         db  0x00 ; '.'
000000000021e1f5         db  0x00 ; '.'
000000000021e1f6         db  0x00 ; '.'
000000000021e1f7         db  0x00 ; '.'
000000000021e1f8         db  0x00 ; '.'
000000000021e1f9         db  0x00 ; '.'
000000000021e1fa         db  0x00 ; '.'
000000000021e1fb         db  0x00 ; '.'
000000000021e1fc         db  0x00 ; '.'
000000000021e1fd         db  0x00 ; '.'
000000000021e1fe         db  0x00 ; '.'
000000000021e1ff         db  0x00 ; '.'
000000000021e200         db  0x00 ; '.'
000000000021e201         db  0x00 ; '.'
000000000021e202         db  0x00 ; '.'
000000000021e203         db  0x00 ; '.'
000000000021e204         db  0x00 ; '.'
000000000021e205         db  0x00 ; '.'
000000000021e206         db  0x00 ; '.'
000000000021e207         db  0x00 ; '.'
000000000021e208         db  0x00 ; '.'
000000000021e209         db  0x00 ; '.'
000000000021e20a         db  0x00 ; '.'
000000000021e20b         db  0x00 ; '.'
000000000021e20c         db  0x00 ; '.'
000000000021e20d         db  0x00 ; '.'
000000000021e20e         db  0x00 ; '.'
000000000021e20f         db  0x00 ; '.'
000000000021e210         db  0x00 ; '.'
000000000021e211         db  0x00 ; '.'
000000000021e212         db  0x00 ; '.'
000000000021e213         db  0x00 ; '.'
000000000021e214         db  0x00 ; '.'
000000000021e215         db  0x00 ; '.'
000000000021e216         db  0x00 ; '.'
000000000021e217         db  0x00 ; '.'
000000000021e218         db  0x00 ; '.'
000000000021e219         db  0x00 ; '.'
000000000021e21a         db  0x00 ; '.'
000000000021e21b         db  0x00 ; '.'
000000000021e21c         db  0x00 ; '.'
000000000021e21d         db  0x00 ; '.'
000000000021e21e         db  0x00 ; '.'
000000000021e21f         db  0x00 ; '.'
000000000021e220         db  0x00 ; '.'
000000000021e221         db  0x00 ; '.'
000000000021e222         db  0x00 ; '.'
000000000021e223         db  0x00 ; '.'
000000000021e224         db  0x00 ; '.'
000000000021e225         db  0x00 ; '.'
000000000021e226         db  0x00 ; '.'
000000000021e227         db  0x00 ; '.'
000000000021e228         db  0x00 ; '.'
000000000021e229         db  0x00 ; '.'
000000000021e22a         db  0x00 ; '.'
000000000021e22b         db  0x00 ; '.'
000000000021e22c         db  0x00 ; '.'
000000000021e22d         db  0x00 ; '.'
000000000021e22e         db  0x00 ; '.'
000000000021e22f         db  0x00 ; '.'
000000000021e230         db  0x00 ; '.'
000000000021e231         db  0x00 ; '.'
000000000021e232         db  0x00 ; '.'
000000000021e233         db  0x00 ; '.'
000000000021e234         db  0x00 ; '.'
000000000021e235         db  0x00 ; '.'
000000000021e236         db  0x00 ; '.'
000000000021e237         db  0x00 ; '.'
000000000021e238         db  0x00 ; '.'
000000000021e239         db  0x00 ; '.'
000000000021e23a         db  0x00 ; '.'
000000000021e23b         db  0x00 ; '.'
000000000021e23c         db  0x00 ; '.'
000000000021e23d         db  0x00 ; '.'
000000000021e23e         db  0x00 ; '.'
000000000021e23f         db  0x00 ; '.'
000000000021e240         db  0x00 ; '.'
000000000021e241         db  0x00 ; '.'
000000000021e242         db  0x00 ; '.'
000000000021e243         db  0x00 ; '.'
000000000021e244         db  0x00 ; '.'
000000000021e245         db  0x00 ; '.'
000000000021e246         db  0x00 ; '.'
000000000021e247         db  0x00 ; '.'
000000000021e248         db  0x00 ; '.'
000000000021e249         db  0x00 ; '.'
000000000021e24a         db  0x00 ; '.'
000000000021e24b         db  0x00 ; '.'
000000000021e24c         db  0x00 ; '.'
000000000021e24d         db  0x00 ; '.'
000000000021e24e         db  0x00 ; '.'
000000000021e24f         db  0x00 ; '.'
000000000021e250         db  0x00 ; '.'
000000000021e251         db  0x00 ; '.'
000000000021e252         db  0x00 ; '.'
000000000021e253         db  0x00 ; '.'
000000000021e254         db  0x00 ; '.'
000000000021e255         db  0x00 ; '.'
000000000021e256         db  0x00 ; '.'
000000000021e257         db  0x00 ; '.'
000000000021e258         db  0x00 ; '.'
000000000021e259         db  0x00 ; '.'
000000000021e25a         db  0x00 ; '.'
000000000021e25b         db  0x00 ; '.'
000000000021e25c         db  0x00 ; '.'
000000000021e25d         db  0x00 ; '.'
000000000021e25e         db  0x00 ; '.'
000000000021e25f         db  0x00 ; '.'
000000000021e260         db  0x00 ; '.'
000000000021e261         db  0x00 ; '.'
000000000021e262         db  0x00 ; '.'
000000000021e263         db  0x00 ; '.'
000000000021e264         db  0x00 ; '.'
000000000021e265         db  0x00 ; '.'
000000000021e266         db  0x00 ; '.'
000000000021e267         db  0x00 ; '.'
000000000021e268         db  0x00 ; '.'
000000000021e269         db  0x00 ; '.'
000000000021e26a         db  0x00 ; '.'
000000000021e26b         db  0x00 ; '.'
000000000021e26c         db  0x00 ; '.'
000000000021e26d         db  0x00 ; '.'
000000000021e26e         db  0x00 ; '.'
000000000021e26f         db  0x00 ; '.'
000000000021e270         db  0x00 ; '.'
000000000021e271         db  0x00 ; '.'
000000000021e272         db  0x00 ; '.'
000000000021e273         db  0x00 ; '.'
000000000021e274         db  0x00 ; '.'
000000000021e275         db  0x00 ; '.'
000000000021e276         db  0x00 ; '.'
000000000021e277         db  0x00 ; '.'
000000000021e278         db  0x00 ; '.'
000000000021e279         db  0x00 ; '.'
000000000021e27a         db  0x00 ; '.'
000000000021e27b         db  0x00 ; '.'
000000000021e27c         db  0x00 ; '.'
000000000021e27d         db  0x00 ; '.'
000000000021e27e         db  0x00 ; '.'
000000000021e27f         db  0x00 ; '.'
000000000021e280         db  0x00 ; '.'
000000000021e281         db  0x00 ; '.'
000000000021e282         db  0x00 ; '.'
000000000021e283         db  0x00 ; '.'
000000000021e284         db  0x00 ; '.'
000000000021e285         db  0x00 ; '.'
000000000021e286         db  0x00 ; '.'
000000000021e287         db  0x00 ; '.'
000000000021e288         db  0x00 ; '.'
000000000021e289         db  0x00 ; '.'
000000000021e28a         db  0x00 ; '.'
000000000021e28b         db  0x00 ; '.'
000000000021e28c         db  0x00 ; '.'
000000000021e28d         db  0x00 ; '.'
000000000021e28e         db  0x00 ; '.'
000000000021e28f         db  0x00 ; '.'
000000000021e290         db  0x00 ; '.'
000000000021e291         db  0x00 ; '.'
000000000021e292         db  0x00 ; '.'
000000000021e293         db  0x00 ; '.'
000000000021e294         db  0x00 ; '.'
000000000021e295         db  0x00 ; '.'
000000000021e296         db  0x00 ; '.'
000000000021e297         db  0x00 ; '.'
000000000021e298         db  0x00 ; '.'
000000000021e299         db  0x00 ; '.'
000000000021e29a         db  0x00 ; '.'
000000000021e29b         db  0x00 ; '.'
000000000021e29c         db  0x00 ; '.'
000000000021e29d         db  0x00 ; '.'
000000000021e29e         db  0x00 ; '.'
000000000021e29f         db  0x00 ; '.'
000000000021e2a0         db  0x00 ; '.'
000000000021e2a1         db  0x00 ; '.'
000000000021e2a2         db  0x00 ; '.'
000000000021e2a3         db  0x00 ; '.'
000000000021e2a4         db  0x00 ; '.'
000000000021e2a5         db  0x00 ; '.'
000000000021e2a6         db  0x00 ; '.'
000000000021e2a7         db  0x00 ; '.'
000000000021e2a8         db  0x00 ; '.'
000000000021e2a9         db  0x00 ; '.'
000000000021e2aa         db  0x00 ; '.'
000000000021e2ab         db  0x00 ; '.'
000000000021e2ac         db  0x00 ; '.'
000000000021e2ad         db  0x00 ; '.'
000000000021e2ae         db  0x00 ; '.'
000000000021e2af         db  0x00 ; '.'
000000000021e2b0         db  0x00 ; '.'
000000000021e2b1         db  0x00 ; '.'
000000000021e2b2         db  0x00 ; '.'
000000000021e2b3         db  0x00 ; '.'
000000000021e2b4         db  0x00 ; '.'
000000000021e2b5         db  0x00 ; '.'
000000000021e2b6         db  0x00 ; '.'
000000000021e2b7         db  0x00 ; '.'
000000000021e2b8         db  0x00 ; '.'
000000000021e2b9         db  0x00 ; '.'
000000000021e2ba         db  0x00 ; '.'
000000000021e2bb         db  0x00 ; '.'
000000000021e2bc         db  0x00 ; '.'
000000000021e2bd         db  0x00 ; '.'
000000000021e2be         db  0x00 ; '.'
000000000021e2bf         db  0x00 ; '.'
000000000021e2c0         db  0x00 ; '.'
000000000021e2c1         db  0x00 ; '.'
000000000021e2c2         db  0x00 ; '.'
000000000021e2c3         db  0x00 ; '.'
000000000021e2c4         db  0x00 ; '.'
000000000021e2c5         db  0x00 ; '.'
000000000021e2c6         db  0x00 ; '.'
000000000021e2c7         db  0x00 ; '.'
000000000021e2c8         db  0x00 ; '.'
000000000021e2c9         db  0x00 ; '.'
000000000021e2ca         db  0x00 ; '.'
000000000021e2cb         db  0x00 ; '.'
000000000021e2cc         db  0x00 ; '.'
000000000021e2cd         db  0x00 ; '.'
000000000021e2ce         db  0x00 ; '.'
000000000021e2cf         db  0x00 ; '.'
000000000021e2d0         db  0x00 ; '.'
000000000021e2d1         db  0x00 ; '.'
000000000021e2d2         db  0x00 ; '.'
000000000021e2d3         db  0x00 ; '.'
000000000021e2d4         db  0x00 ; '.'
000000000021e2d5         db  0x00 ; '.'
000000000021e2d6         db  0x00 ; '.'
000000000021e2d7         db  0x00 ; '.'
000000000021e2d8         db  0x00 ; '.'
000000000021e2d9         db  0x00 ; '.'
000000000021e2da         db  0x00 ; '.'
000000000021e2db         db  0x00 ; '.'
000000000021e2dc         db  0x00 ; '.'
000000000021e2dd         db  0x00 ; '.'
000000000021e2de         db  0x00 ; '.'
000000000021e2df         db  0x00 ; '.'
000000000021e2e0         db  0x00 ; '.'
000000000021e2e1         db  0x00 ; '.'
000000000021e2e2         db  0x00 ; '.'
000000000021e2e3         db  0x00 ; '.'
000000000021e2e4         db  0x00 ; '.'
000000000021e2e5         db  0x00 ; '.'
000000000021e2e6         db  0x00 ; '.'
000000000021e2e7         db  0x00 ; '.'
000000000021e2e8         db  0x00 ; '.'
000000000021e2e9         db  0x00 ; '.'
000000000021e2ea         db  0x00 ; '.'
000000000021e2eb         db  0x00 ; '.'
000000000021e2ec         db  0x00 ; '.'
000000000021e2ed         db  0x00 ; '.'
000000000021e2ee         db  0x00 ; '.'
000000000021e2ef         db  0x00 ; '.'
000000000021e2f0         db  0x00 ; '.'
000000000021e2f1         db  0x00 ; '.'
000000000021e2f2         db  0x00 ; '.'
000000000021e2f3         db  0x00 ; '.'
000000000021e2f4         db  0x00 ; '.'
000000000021e2f5         db  0x00 ; '.'
000000000021e2f6         db  0x00 ; '.'
000000000021e2f7         db  0x00 ; '.'
000000000021e2f8         db  0x00 ; '.'
000000000021e2f9         db  0x00 ; '.'
000000000021e2fa         db  0x00 ; '.'
000000000021e2fb         db  0x00 ; '.'
000000000021e2fc         db  0x00 ; '.'
000000000021e2fd         db  0x00 ; '.'
000000000021e2fe         db  0x00 ; '.'
000000000021e2ff         db  0x00 ; '.'
000000000021e300         db  0x00 ; '.'
000000000021e301         db  0x00 ; '.'
000000000021e302         db  0x00 ; '.'
000000000021e303         db  0x00 ; '.'
000000000021e304         db  0x00 ; '.'
000000000021e305         db  0x00 ; '.'
000000000021e306         db  0x00 ; '.'
000000000021e307         db  0x00 ; '.'
000000000021e308         db  0x00 ; '.'
000000000021e309         db  0x00 ; '.'
000000000021e30a         db  0x00 ; '.'
000000000021e30b         db  0x00 ; '.'
000000000021e30c         db  0x00 ; '.'
000000000021e30d         db  0x00 ; '.'
000000000021e30e         db  0x00 ; '.'
000000000021e30f         db  0x00 ; '.'
000000000021e310         db  0x00 ; '.'
000000000021e311         db  0x00 ; '.'
000000000021e312         db  0x00 ; '.'
000000000021e313         db  0x00 ; '.'
000000000021e314         db  0x00 ; '.'
000000000021e315         db  0x00 ; '.'
000000000021e316         db  0x00 ; '.'
000000000021e317         db  0x00 ; '.'
000000000021e318         db  0x00 ; '.'
000000000021e319         db  0x00 ; '.'
000000000021e31a         db  0x00 ; '.'
000000000021e31b         db  0x00 ; '.'
000000000021e31c         db  0x00 ; '.'
000000000021e31d         db  0x00 ; '.'
000000000021e31e         db  0x00 ; '.'
000000000021e31f         db  0x00 ; '.'
000000000021e320         db  0x00 ; '.'
000000000021e321         db  0x00 ; '.'
000000000021e322         db  0x00 ; '.'
000000000021e323         db  0x00 ; '.'
000000000021e324         db  0x00 ; '.'
000000000021e325         db  0x00 ; '.'
000000000021e326         db  0x00 ; '.'
000000000021e327         db  0x00 ; '.'
000000000021e328         db  0x00 ; '.'
000000000021e329         db  0x00 ; '.'
000000000021e32a         db  0x00 ; '.'
000000000021e32b         db  0x00 ; '.'
000000000021e32c         db  0x00 ; '.'
000000000021e32d         db  0x00 ; '.'
000000000021e32e         db  0x00 ; '.'
000000000021e32f         db  0x00 ; '.'
000000000021e330         db  0x00 ; '.'
000000000021e331         db  0x00 ; '.'
000000000021e332         db  0x00 ; '.'
000000000021e333         db  0x00 ; '.'
000000000021e334         db  0x00 ; '.'
000000000021e335         db  0x00 ; '.'
000000000021e336         db  0x00 ; '.'
000000000021e337         db  0x00 ; '.'
000000000021e338         db  0x00 ; '.'
000000000021e339         db  0x00 ; '.'
000000000021e33a         db  0x00 ; '.'
000000000021e33b         db  0x00 ; '.'
000000000021e33c         db  0x00 ; '.'
000000000021e33d         db  0x00 ; '.'
000000000021e33e         db  0x00 ; '.'
000000000021e33f         db  0x00 ; '.'
000000000021e340         db  0x00 ; '.'
000000000021e341         db  0x00 ; '.'
000000000021e342         db  0x00 ; '.'
000000000021e343         db  0x00 ; '.'
000000000021e344         db  0x00 ; '.'
000000000021e345         db  0x00 ; '.'
000000000021e346         db  0x00 ; '.'
000000000021e347         db  0x00 ; '.'
000000000021e348         db  0x00 ; '.'
000000000021e349         db  0x00 ; '.'
000000000021e34a         db  0x00 ; '.'
000000000021e34b         db  0x00 ; '.'
000000000021e34c         db  0x00 ; '.'
000000000021e34d         db  0x00 ; '.'
000000000021e34e         db  0x00 ; '.'
000000000021e34f         db  0x00 ; '.'
000000000021e350         db  0x00 ; '.'
000000000021e351         db  0x00 ; '.'
000000000021e352         db  0x00 ; '.'
000000000021e353         db  0x00 ; '.'
000000000021e354         db  0x00 ; '.'
000000000021e355         db  0x00 ; '.'
000000000021e356         db  0x00 ; '.'
000000000021e357         db  0x00 ; '.'
000000000021e358         db  0x00 ; '.'
000000000021e359         db  0x00 ; '.'
000000000021e35a         db  0x00 ; '.'
000000000021e35b         db  0x00 ; '.'
000000000021e35c         db  0x00 ; '.'
000000000021e35d         db  0x00 ; '.'
000000000021e35e         db  0x00 ; '.'
000000000021e35f         db  0x00 ; '.'
000000000021e360         db  0x00 ; '.'
000000000021e361         db  0x00 ; '.'
000000000021e362         db  0x00 ; '.'
000000000021e363         db  0x00 ; '.'
000000000021e364         db  0x00 ; '.'
000000000021e365         db  0x00 ; '.'
000000000021e366         db  0x00 ; '.'
000000000021e367         db  0x00 ; '.'
000000000021e368         db  0x00 ; '.'
000000000021e369         db  0x00 ; '.'
000000000021e36a         db  0x00 ; '.'
000000000021e36b         db  0x00 ; '.'
000000000021e36c         db  0x00 ; '.'
000000000021e36d         db  0x00 ; '.'
000000000021e36e         db  0x00 ; '.'
000000000021e36f         db  0x00 ; '.'
000000000021e370         db  0x00 ; '.'
000000000021e371         db  0x00 ; '.'
000000000021e372         db  0x00 ; '.'
000000000021e373         db  0x00 ; '.'
000000000021e374         db  0x00 ; '.'
000000000021e375         db  0x00 ; '.'
000000000021e376         db  0x00 ; '.'
000000000021e377         db  0x00 ; '.'
000000000021e378         db  0x00 ; '.'
000000000021e379         db  0x00 ; '.'
000000000021e37a         db  0x00 ; '.'
000000000021e37b         db  0x00 ; '.'
000000000021e37c         db  0x00 ; '.'
000000000021e37d         db  0x00 ; '.'
000000000021e37e         db  0x00 ; '.'
000000000021e37f         db  0x00 ; '.'
000000000021e380         db  0x00 ; '.'
000000000021e381         db  0x00 ; '.'
000000000021e382         db  0x00 ; '.'
000000000021e383         db  0x00 ; '.'
000000000021e384         db  0x00 ; '.'
000000000021e385         db  0x00 ; '.'
000000000021e386         db  0x00 ; '.'
000000000021e387         db  0x00 ; '.'
000000000021e388         db  0x00 ; '.'
000000000021e389         db  0x00 ; '.'
000000000021e38a         db  0x00 ; '.'
000000000021e38b         db  0x00 ; '.'
000000000021e38c         db  0x00 ; '.'
000000000021e38d         db  0x00 ; '.'
000000000021e38e         db  0x00 ; '.'
000000000021e38f         db  0x00 ; '.'
000000000021e390         db  0x00 ; '.'
000000000021e391         db  0x00 ; '.'
000000000021e392         db  0x00 ; '.'
000000000021e393         db  0x00 ; '.'
000000000021e394         db  0x00 ; '.'
000000000021e395         db  0x00 ; '.'
000000000021e396         db  0x00 ; '.'
000000000021e397         db  0x00 ; '.'
000000000021e398         db  0x00 ; '.'
000000000021e399         db  0x00 ; '.'
000000000021e39a         db  0x00 ; '.'
000000000021e39b         db  0x00 ; '.'
000000000021e39c         db  0x00 ; '.'
000000000021e39d         db  0x00 ; '.'
000000000021e39e         db  0x00 ; '.'
000000000021e39f         db  0x00 ; '.'
000000000021e3a0         db  0x00 ; '.'
000000000021e3a1         db  0x00 ; '.'
000000000021e3a2         db  0x00 ; '.'
000000000021e3a3         db  0x00 ; '.'
000000000021e3a4         db  0x00 ; '.'
000000000021e3a5         db  0x00 ; '.'
000000000021e3a6         db  0x00 ; '.'
000000000021e3a7         db  0x00 ; '.'
000000000021e3a8         db  0x00 ; '.'
000000000021e3a9         db  0x00 ; '.'
000000000021e3aa         db  0x00 ; '.'
000000000021e3ab         db  0x00 ; '.'
000000000021e3ac         db  0x00 ; '.'
000000000021e3ad         db  0x00 ; '.'
000000000021e3ae         db  0x00 ; '.'
000000000021e3af         db  0x00 ; '.'
000000000021e3b0         db  0x00 ; '.'
000000000021e3b1         db  0x00 ; '.'
000000000021e3b2         db  0x00 ; '.'
000000000021e3b3         db  0x00 ; '.'
000000000021e3b4         db  0x00 ; '.'
000000000021e3b5         db  0x00 ; '.'
000000000021e3b6         db  0x00 ; '.'
000000000021e3b7         db  0x00 ; '.'
000000000021e3b8         db  0x00 ; '.'
000000000021e3b9         db  0x00 ; '.'
000000000021e3ba         db  0x00 ; '.'
000000000021e3bb         db  0x00 ; '.'
000000000021e3bc         db  0x00 ; '.'
000000000021e3bd         db  0x00 ; '.'
000000000021e3be         db  0x00 ; '.'
000000000021e3bf         db  0x00 ; '.'
000000000021e3c0         db  0x00 ; '.'
000000000021e3c1         db  0x00 ; '.'
000000000021e3c2         db  0x00 ; '.'
000000000021e3c3         db  0x00 ; '.'
000000000021e3c4         db  0x00 ; '.'
000000000021e3c5         db  0x00 ; '.'
000000000021e3c6         db  0x00 ; '.'
000000000021e3c7         db  0x00 ; '.'
000000000021e3c8         db  0x00 ; '.'
000000000021e3c9         db  0x00 ; '.'
000000000021e3ca         db  0x00 ; '.'
000000000021e3cb         db  0x00 ; '.'
000000000021e3cc         db  0x00 ; '.'
000000000021e3cd         db  0x00 ; '.'
000000000021e3ce         db  0x00 ; '.'
000000000021e3cf         db  0x00 ; '.'
000000000021e3d0         db  0x00 ; '.'
000000000021e3d1         db  0x00 ; '.'
000000000021e3d2         db  0x00 ; '.'
000000000021e3d3         db  0x00 ; '.'
000000000021e3d4         db  0x00 ; '.'
000000000021e3d5         db  0x00 ; '.'
000000000021e3d6         db  0x00 ; '.'
000000000021e3d7         db  0x00 ; '.'
000000000021e3d8         db  0x00 ; '.'
000000000021e3d9         db  0x00 ; '.'
000000000021e3da         db  0x00 ; '.'
000000000021e3db         db  0x00 ; '.'
000000000021e3dc         db  0x00 ; '.'
000000000021e3dd         db  0x00 ; '.'
000000000021e3de         db  0x00 ; '.'
000000000021e3df         db  0x00 ; '.'
000000000021e3e0         db  0x00 ; '.'
000000000021e3e1         db  0x00 ; '.'
000000000021e3e2         db  0x00 ; '.'
000000000021e3e3         db  0x00 ; '.'
000000000021e3e4         db  0x00 ; '.'
000000000021e3e5         db  0x00 ; '.'
000000000021e3e6         db  0x00 ; '.'
000000000021e3e7         db  0x00 ; '.'
000000000021e3e8         db  0x00 ; '.'
000000000021e3e9         db  0x00 ; '.'
000000000021e3ea         db  0x00 ; '.'
000000000021e3eb         db  0x00 ; '.'
000000000021e3ec         db  0x00 ; '.'
000000000021e3ed         db  0x00 ; '.'
000000000021e3ee         db  0x00 ; '.'
000000000021e3ef         db  0x00 ; '.'
000000000021e3f0         db  0x00 ; '.'
000000000021e3f1         db  0x00 ; '.'
000000000021e3f2         db  0x00 ; '.'
000000000021e3f3         db  0x00 ; '.'
000000000021e3f4         db  0x00 ; '.'
000000000021e3f5         db  0x00 ; '.'
000000000021e3f6         db  0x00 ; '.'
000000000021e3f7         db  0x00 ; '.'
000000000021e3f8         db  0x00 ; '.'
000000000021e3f9         db  0x00 ; '.'
000000000021e3fa         db  0x00 ; '.'
000000000021e3fb         db  0x00 ; '.'
000000000021e3fc         db  0x00 ; '.'
000000000021e3fd         db  0x00 ; '.'
000000000021e3fe         db  0x00 ; '.'
000000000021e3ff         db  0x00 ; '.'
000000000021e400         db  0x00 ; '.'
000000000021e401         db  0x00 ; '.'
000000000021e402         db  0x00 ; '.'
000000000021e403         db  0x00 ; '.'
000000000021e404         db  0x00 ; '.'
000000000021e405         db  0x00 ; '.'
000000000021e406         db  0x00 ; '.'
000000000021e407         db  0x00 ; '.'
000000000021e408         db  0x00 ; '.'
000000000021e409         db  0x00 ; '.'
000000000021e40a         db  0x00 ; '.'
000000000021e40b         db  0x00 ; '.'
000000000021e40c         db  0x00 ; '.'
000000000021e40d         db  0x00 ; '.'
000000000021e40e         db  0x00 ; '.'
000000000021e40f         db  0x00 ; '.'
000000000021e410         db  0x00 ; '.'
000000000021e411         db  0x00 ; '.'
000000000021e412         db  0x00 ; '.'
000000000021e413         db  0x00 ; '.'
000000000021e414         db  0x00 ; '.'
000000000021e415         db  0x00 ; '.'
000000000021e416         db  0x00 ; '.'
000000000021e417         db  0x00 ; '.'
000000000021e418         db  0x00 ; '.'
000000000021e419         db  0x00 ; '.'
000000000021e41a         db  0x00 ; '.'
000000000021e41b         db  0x00 ; '.'
000000000021e41c         db  0x00 ; '.'
000000000021e41d         db  0x00 ; '.'
000000000021e41e         db  0x00 ; '.'
000000000021e41f         db  0x00 ; '.'
000000000021e420         db  0x00 ; '.'
000000000021e421         db  0x00 ; '.'
000000000021e422         db  0x00 ; '.'
000000000021e423         db  0x00 ; '.'
000000000021e424         db  0x00 ; '.'
000000000021e425         db  0x00 ; '.'
000000000021e426         db  0x00 ; '.'
000000000021e427         db  0x00 ; '.'
000000000021e428         db  0x00 ; '.'
000000000021e429         db  0x00 ; '.'
000000000021e42a         db  0x00 ; '.'
000000000021e42b         db  0x00 ; '.'
000000000021e42c         db  0x00 ; '.'
000000000021e42d         db  0x00 ; '.'
000000000021e42e         db  0x00 ; '.'
000000000021e42f         db  0x00 ; '.'
000000000021e430         db  0x00 ; '.'
000000000021e431         db  0x00 ; '.'
000000000021e432         db  0x00 ; '.'
000000000021e433         db  0x00 ; '.'
000000000021e434         db  0x00 ; '.'
000000000021e435         db  0x00 ; '.'
000000000021e436         db  0x00 ; '.'
000000000021e437         db  0x00 ; '.'
000000000021e438         db  0x00 ; '.'
000000000021e439         db  0x00 ; '.'
000000000021e43a         db  0x00 ; '.'
000000000021e43b         db  0x00 ; '.'
000000000021e43c         db  0x00 ; '.'
000000000021e43d         db  0x00 ; '.'
000000000021e43e         db  0x00 ; '.'
000000000021e43f         db  0x00 ; '.'
000000000021e440         db  0x00 ; '.'
000000000021e441         db  0x00 ; '.'
000000000021e442         db  0x00 ; '.'
000000000021e443         db  0x00 ; '.'
000000000021e444         db  0x00 ; '.'
000000000021e445         db  0x00 ; '.'
000000000021e446         db  0x00 ; '.'
000000000021e447         db  0x00 ; '.'
000000000021e448         db  0x00 ; '.'
000000000021e449         db  0x00 ; '.'
000000000021e44a         db  0x00 ; '.'
000000000021e44b         db  0x00 ; '.'
000000000021e44c         db  0x00 ; '.'
000000000021e44d         db  0x00 ; '.'
000000000021e44e         db  0x00 ; '.'
000000000021e44f         db  0x00 ; '.'
000000000021e450         db  0x00 ; '.'
000000000021e451         db  0x00 ; '.'
000000000021e452         db  0x00 ; '.'
000000000021e453         db  0x00 ; '.'
000000000021e454         db  0x00 ; '.'
000000000021e455         db  0x00 ; '.'
000000000021e456         db  0x00 ; '.'
000000000021e457         db  0x00 ; '.'
000000000021e458         db  0x00 ; '.'
000000000021e459         db  0x00 ; '.'
000000000021e45a         db  0x00 ; '.'
000000000021e45b         db  0x00 ; '.'
000000000021e45c         db  0x00 ; '.'
000000000021e45d         db  0x00 ; '.'
000000000021e45e         db  0x00 ; '.'
000000000021e45f         db  0x00 ; '.'
000000000021e460         db  0x00 ; '.'
000000000021e461         db  0x00 ; '.'
000000000021e462         db  0x00 ; '.'
000000000021e463         db  0x00 ; '.'
000000000021e464         db  0x00 ; '.'
000000000021e465         db  0x00 ; '.'
000000000021e466         db  0x00 ; '.'
000000000021e467         db  0x00 ; '.'
000000000021e468         db  0x00 ; '.'
000000000021e469         db  0x00 ; '.'
000000000021e46a         db  0x00 ; '.'
000000000021e46b         db  0x00 ; '.'
000000000021e46c         db  0x00 ; '.'
000000000021e46d         db  0x00 ; '.'
000000000021e46e         db  0x00 ; '.'
000000000021e46f         db  0x00 ; '.'
000000000021e470         db  0x00 ; '.'
000000000021e471         db  0x00 ; '.'
000000000021e472         db  0x00 ; '.'
000000000021e473         db  0x00 ; '.'
000000000021e474         db  0x00 ; '.'
000000000021e475         db  0x00 ; '.'
000000000021e476         db  0x00 ; '.'
000000000021e477         db  0x00 ; '.'
000000000021e478         db  0x00 ; '.'
000000000021e479         db  0x00 ; '.'
000000000021e47a         db  0x00 ; '.'
000000000021e47b         db  0x00 ; '.'
000000000021e47c         db  0x00 ; '.'
000000000021e47d         db  0x00 ; '.'
000000000021e47e         db  0x00 ; '.'
000000000021e47f         db  0x00 ; '.'
000000000021e480         db  0x00 ; '.'
000000000021e481         db  0x00 ; '.'
000000000021e482         db  0x00 ; '.'
000000000021e483         db  0x00 ; '.'
000000000021e484         db  0x00 ; '.'
000000000021e485         db  0x00 ; '.'
000000000021e486         db  0x00 ; '.'
000000000021e487         db  0x00 ; '.'
000000000021e488         db  0x00 ; '.'
000000000021e489         db  0x00 ; '.'
000000000021e48a         db  0x00 ; '.'
000000000021e48b         db  0x00 ; '.'
000000000021e48c         db  0x00 ; '.'
000000000021e48d         db  0x00 ; '.'
000000000021e48e         db  0x00 ; '.'
000000000021e48f         db  0x00 ; '.'
000000000021e490         db  0x00 ; '.'
000000000021e491         db  0x00 ; '.'
000000000021e492         db  0x00 ; '.'
000000000021e493         db  0x00 ; '.'
000000000021e494         db  0x00 ; '.'
000000000021e495         db  0x00 ; '.'
000000000021e496         db  0x00 ; '.'
000000000021e497         db  0x00 ; '.'
000000000021e498         db  0x00 ; '.'
000000000021e499         db  0x00 ; '.'
000000000021e49a         db  0x00 ; '.'
000000000021e49b         db  0x00 ; '.'
000000000021e49c         db  0x00 ; '.'
000000000021e49d         db  0x00 ; '.'
000000000021e49e         db  0x00 ; '.'
000000000021e49f         db  0x00 ; '.'
000000000021e4a0         db  0x00 ; '.'
000000000021e4a1         db  0x00 ; '.'
000000000021e4a2         db  0x00 ; '.'
000000000021e4a3         db  0x00 ; '.'
000000000021e4a4         db  0x00 ; '.'
000000000021e4a5         db  0x00 ; '.'
000000000021e4a6         db  0x00 ; '.'
000000000021e4a7         db  0x00 ; '.'
000000000021e4a8         db  0x00 ; '.'
000000000021e4a9         db  0x00 ; '.'
000000000021e4aa         db  0x00 ; '.'
000000000021e4ab         db  0x00 ; '.'
000000000021e4ac         db  0x00 ; '.'
000000000021e4ad         db  0x00 ; '.'
000000000021e4ae         db  0x00 ; '.'
000000000021e4af         db  0x00 ; '.'
000000000021e4b0         db  0x00 ; '.'
000000000021e4b1         db  0x00 ; '.'
000000000021e4b2         db  0x00 ; '.'
000000000021e4b3         db  0x00 ; '.'
000000000021e4b4         db  0x00 ; '.'
000000000021e4b5         db  0x00 ; '.'
000000000021e4b6         db  0x00 ; '.'
000000000021e4b7         db  0x00 ; '.'
000000000021e4b8         db  0x00 ; '.'
000000000021e4b9         db  0x00 ; '.'
000000000021e4ba         db  0x00 ; '.'
000000000021e4bb         db  0x00 ; '.'
000000000021e4bc         db  0x00 ; '.'
000000000021e4bd         db  0x00 ; '.'
000000000021e4be         db  0x00 ; '.'
000000000021e4bf         db  0x00 ; '.'
000000000021e4c0         db  0x00 ; '.'
000000000021e4c1         db  0x00 ; '.'
000000000021e4c2         db  0x00 ; '.'
000000000021e4c3         db  0x00 ; '.'
000000000021e4c4         db  0x00 ; '.'
000000000021e4c5         db  0x00 ; '.'
000000000021e4c6         db  0x00 ; '.'
000000000021e4c7         db  0x00 ; '.'
000000000021e4c8         db  0x00 ; '.'
000000000021e4c9         db  0x00 ; '.'
000000000021e4ca         db  0x00 ; '.'
000000000021e4cb         db  0x00 ; '.'
000000000021e4cc         db  0x00 ; '.'
000000000021e4cd         db  0x00 ; '.'
000000000021e4ce         db  0x00 ; '.'
000000000021e4cf         db  0x00 ; '.'
000000000021e4d0         db  0x00 ; '.'
000000000021e4d1         db  0x00 ; '.'
000000000021e4d2         db  0x00 ; '.'
000000000021e4d3         db  0x00 ; '.'
000000000021e4d4         db  0x00 ; '.'
000000000021e4d5         db  0x00 ; '.'
000000000021e4d6         db  0x00 ; '.'
000000000021e4d7         db  0x00 ; '.'
000000000021e4d8         db  0x00 ; '.'
000000000021e4d9         db  0x00 ; '.'
000000000021e4da         db  0x00 ; '.'
000000000021e4db         db  0x00 ; '.'
000000000021e4dc         db  0x00 ; '.'
000000000021e4dd         db  0x00 ; '.'
000000000021e4de         db  0x00 ; '.'
000000000021e4df         db  0x00 ; '.'
000000000021e4e0         db  0x00 ; '.'
000000000021e4e1         db  0x00 ; '.'
000000000021e4e2         db  0x00 ; '.'
000000000021e4e3         db  0x00 ; '.'
000000000021e4e4         db  0x00 ; '.'
000000000021e4e5         db  0x00 ; '.'
000000000021e4e6         db  0x00 ; '.'
000000000021e4e7         db  0x00 ; '.'
000000000021e4e8         db  0x00 ; '.'
000000000021e4e9         db  0x00 ; '.'
000000000021e4ea         db  0x00 ; '.'
000000000021e4eb         db  0x00 ; '.'
000000000021e4ec         db  0x00 ; '.'
000000000021e4ed         db  0x00 ; '.'
000000000021e4ee         db  0x00 ; '.'
000000000021e4ef         db  0x00 ; '.'
000000000021e4f0         db  0x00 ; '.'
000000000021e4f1         db  0x00 ; '.'
000000000021e4f2         db  0x00 ; '.'
000000000021e4f3         db  0x00 ; '.'
000000000021e4f4         db  0x00 ; '.'
000000000021e4f5         db  0x00 ; '.'
000000000021e4f6         db  0x00 ; '.'
000000000021e4f7         db  0x00 ; '.'
000000000021e4f8         db  0x00 ; '.'
000000000021e4f9         db  0x00 ; '.'
000000000021e4fa         db  0x00 ; '.'
000000000021e4fb         db  0x00 ; '.'
000000000021e4fc         db  0x00 ; '.'
000000000021e4fd         db  0x00 ; '.'
000000000021e4fe         db  0x00 ; '.'
000000000021e4ff         db  0x00 ; '.'
000000000021e500         db  0x00 ; '.'
000000000021e501         db  0x00 ; '.'
000000000021e502         db  0x00 ; '.'
000000000021e503         db  0x00 ; '.'
000000000021e504         db  0x00 ; '.'
000000000021e505         db  0x00 ; '.'
000000000021e506         db  0x00 ; '.'
000000000021e507         db  0x00 ; '.'
000000000021e508         db  0x00 ; '.'
000000000021e509         db  0x00 ; '.'
000000000021e50a         db  0x00 ; '.'
000000000021e50b         db  0x00 ; '.'
000000000021e50c         db  0x00 ; '.'
000000000021e50d         db  0x00 ; '.'
000000000021e50e         db  0x00 ; '.'
000000000021e50f         db  0x00 ; '.'
000000000021e510         db  0x00 ; '.'
000000000021e511         db  0x00 ; '.'
000000000021e512         db  0x00 ; '.'
000000000021e513         db  0x00 ; '.'
000000000021e514         db  0x00 ; '.'
000000000021e515         db  0x00 ; '.'
000000000021e516         db  0x00 ; '.'
000000000021e517         db  0x00 ; '.'
000000000021e518         db  0x00 ; '.'
000000000021e519         db  0x00 ; '.'
000000000021e51a         db  0x00 ; '.'
000000000021e51b         db  0x00 ; '.'
000000000021e51c         db  0x00 ; '.'
000000000021e51d         db  0x00 ; '.'
000000000021e51e         db  0x00 ; '.'
000000000021e51f         db  0x00 ; '.'
000000000021e520         db  0x00 ; '.'
000000000021e521         db  0x00 ; '.'
000000000021e522         db  0x00 ; '.'
000000000021e523         db  0x00 ; '.'
000000000021e524         db  0x00 ; '.'
000000000021e525         db  0x00 ; '.'
000000000021e526         db  0x00 ; '.'
000000000021e527         db  0x00 ; '.'
000000000021e528         db  0x00 ; '.'
000000000021e529         db  0x00 ; '.'
000000000021e52a         db  0x00 ; '.'
000000000021e52b         db  0x00 ; '.'
000000000021e52c         db  0x00 ; '.'
000000000021e52d         db  0x00 ; '.'
000000000021e52e         db  0x00 ; '.'
000000000021e52f         db  0x00 ; '.'
000000000021e530         db  0x00 ; '.'
000000000021e531         db  0x00 ; '.'
000000000021e532         db  0x00 ; '.'
000000000021e533         db  0x00 ; '.'
000000000021e534         db  0x00 ; '.'
000000000021e535         db  0x00 ; '.'
000000000021e536         db  0x00 ; '.'
000000000021e537         db  0x00 ; '.'
000000000021e538         db  0x00 ; '.'
000000000021e539         db  0x00 ; '.'
000000000021e53a         db  0x00 ; '.'
000000000021e53b         db  0x00 ; '.'
000000000021e53c         db  0x00 ; '.'
000000000021e53d         db  0x00 ; '.'
000000000021e53e         db  0x00 ; '.'
000000000021e53f         db  0x00 ; '.'
000000000021e540         db  0x00 ; '.'
000000000021e541         db  0x00 ; '.'
000000000021e542         db  0x00 ; '.'
000000000021e543         db  0x00 ; '.'
000000000021e544         db  0x00 ; '.'
000000000021e545         db  0x00 ; '.'
000000000021e546         db  0x00 ; '.'
000000000021e547         db  0x00 ; '.'
000000000021e548         db  0x00 ; '.'
000000000021e549         db  0x00 ; '.'
000000000021e54a         db  0x00 ; '.'
000000000021e54b         db  0x00 ; '.'
000000000021e54c         db  0x00 ; '.'
000000000021e54d         db  0x00 ; '.'
000000000021e54e         db  0x00 ; '.'
000000000021e54f         db  0x00 ; '.'
000000000021e550         db  0x00 ; '.'
000000000021e551         db  0x00 ; '.'
000000000021e552         db  0x00 ; '.'
000000000021e553         db  0x00 ; '.'
000000000021e554         db  0x00 ; '.'
000000000021e555         db  0x00 ; '.'
000000000021e556         db  0x00 ; '.'
000000000021e557         db  0x00 ; '.'
000000000021e558         db  0x00 ; '.'
000000000021e559         db  0x00 ; '.'
000000000021e55a         db  0x00 ; '.'
000000000021e55b         db  0x00 ; '.'
000000000021e55c         db  0x00 ; '.'
000000000021e55d         db  0x00 ; '.'
000000000021e55e         db  0x00 ; '.'
000000000021e55f         db  0x00 ; '.'
000000000021e560         db  0x00 ; '.'
000000000021e561         db  0x00 ; '.'
000000000021e562         db  0x00 ; '.'
000000000021e563         db  0x00 ; '.'
000000000021e564         db  0x00 ; '.'
000000000021e565         db  0x00 ; '.'
000000000021e566         db  0x00 ; '.'
000000000021e567         db  0x00 ; '.'
000000000021e568         db  0x00 ; '.'
000000000021e569         db  0x00 ; '.'
000000000021e56a         db  0x00 ; '.'
000000000021e56b         db  0x00 ; '.'
000000000021e56c         db  0x00 ; '.'
000000000021e56d         db  0x00 ; '.'
000000000021e56e         db  0x00 ; '.'
000000000021e56f         db  0x00 ; '.'
000000000021e570         db  0x00 ; '.'
000000000021e571         db  0x00 ; '.'
000000000021e572         db  0x00 ; '.'
000000000021e573         db  0x00 ; '.'
000000000021e574         db  0x00 ; '.'
000000000021e575         db  0x00 ; '.'
000000000021e576         db  0x00 ; '.'
000000000021e577         db  0x00 ; '.'
000000000021e578         db  0x00 ; '.'
000000000021e579         db  0x00 ; '.'
000000000021e57a         db  0x00 ; '.'
000000000021e57b         db  0x00 ; '.'
000000000021e57c         db  0x00 ; '.'
000000000021e57d         db  0x00 ; '.'
000000000021e57e         db  0x00 ; '.'
000000000021e57f         db  0x00 ; '.'
000000000021e580         db  0x00 ; '.'
000000000021e581         db  0x00 ; '.'
000000000021e582         db  0x00 ; '.'
000000000021e583         db  0x00 ; '.'
000000000021e584         db  0x00 ; '.'
000000000021e585         db  0x00 ; '.'
000000000021e586         db  0x00 ; '.'
000000000021e587         db  0x00 ; '.'
000000000021e588         db  0x00 ; '.'
000000000021e589         db  0x00 ; '.'
000000000021e58a         db  0x00 ; '.'
000000000021e58b         db  0x00 ; '.'
000000000021e58c         db  0x00 ; '.'
000000000021e58d         db  0x00 ; '.'
000000000021e58e         db  0x00 ; '.'
000000000021e58f         db  0x00 ; '.'
000000000021e590         db  0x00 ; '.'
000000000021e591         db  0x00 ; '.'
000000000021e592         db  0x00 ; '.'
000000000021e593         db  0x00 ; '.'
000000000021e594         db  0x00 ; '.'
000000000021e595         db  0x00 ; '.'
000000000021e596         db  0x00 ; '.'
000000000021e597         db  0x00 ; '.'
000000000021e598         db  0x00 ; '.'
000000000021e599         db  0x00 ; '.'
000000000021e59a         db  0x00 ; '.'
000000000021e59b         db  0x00 ; '.'
000000000021e59c         db  0x00 ; '.'
000000000021e59d         db  0x00 ; '.'
000000000021e59e         db  0x00 ; '.'
000000000021e59f         db  0x00 ; '.'
000000000021e5a0         db  0x00 ; '.'
000000000021e5a1         db  0x00 ; '.'
000000000021e5a2         db  0x00 ; '.'
000000000021e5a3         db  0x00 ; '.'
000000000021e5a4         db  0x00 ; '.'
000000000021e5a5         db  0x00 ; '.'
000000000021e5a6         db  0x00 ; '.'
000000000021e5a7         db  0x00 ; '.'
000000000021e5a8         db  0x00 ; '.'
000000000021e5a9         db  0x00 ; '.'
000000000021e5aa         db  0x00 ; '.'
000000000021e5ab         db  0x00 ; '.'
000000000021e5ac         db  0x00 ; '.'
000000000021e5ad         db  0x00 ; '.'
000000000021e5ae         db  0x00 ; '.'
000000000021e5af         db  0x00 ; '.'
000000000021e5b0         db  0x00 ; '.'
000000000021e5b1         db  0x00 ; '.'
000000000021e5b2         db  0x00 ; '.'
000000000021e5b3         db  0x00 ; '.'
000000000021e5b4         db  0x00 ; '.'
000000000021e5b5         db  0x00 ; '.'
000000000021e5b6         db  0x00 ; '.'
000000000021e5b7         db  0x00 ; '.'
000000000021e5b8         db  0x00 ; '.'
000000000021e5b9         db  0x00 ; '.'
000000000021e5ba         db  0x00 ; '.'
000000000021e5bb         db  0x00 ; '.'
000000000021e5bc         db  0x00 ; '.'
000000000021e5bd         db  0x00 ; '.'
000000000021e5be         db  0x00 ; '.'
000000000021e5bf         db  0x00 ; '.'
000000000021e5c0         db  0x00 ; '.'
000000000021e5c1         db  0x00 ; '.'
000000000021e5c2         db  0x00 ; '.'
000000000021e5c3         db  0x00 ; '.'
000000000021e5c4         db  0x00 ; '.'
000000000021e5c5         db  0x00 ; '.'
000000000021e5c6         db  0x00 ; '.'
000000000021e5c7         db  0x00 ; '.'
000000000021e5c8         db  0x00 ; '.'
000000000021e5c9         db  0x00 ; '.'
000000000021e5ca         db  0x00 ; '.'
000000000021e5cb         db  0x00 ; '.'
000000000021e5cc         db  0x00 ; '.'
000000000021e5cd         db  0x00 ; '.'
000000000021e5ce         db  0x00 ; '.'
000000000021e5cf         db  0x00 ; '.'
000000000021e5d0         db  0x00 ; '.'
000000000021e5d1         db  0x00 ; '.'
000000000021e5d2         db  0x00 ; '.'
000000000021e5d3         db  0x00 ; '.'
000000000021e5d4         db  0x00 ; '.'
000000000021e5d5         db  0x00 ; '.'
000000000021e5d6         db  0x00 ; '.'
000000000021e5d7         db  0x00 ; '.'
000000000021e5d8         db  0x00 ; '.'
000000000021e5d9         db  0x00 ; '.'
000000000021e5da         db  0x00 ; '.'
000000000021e5db         db  0x00 ; '.'
000000000021e5dc         db  0x00 ; '.'
000000000021e5dd         db  0x00 ; '.'
000000000021e5de         db  0x00 ; '.'
000000000021e5df         db  0x00 ; '.'
000000000021e5e0         db  0x00 ; '.'
000000000021e5e1         db  0x00 ; '.'
000000000021e5e2         db  0x00 ; '.'
000000000021e5e3         db  0x00 ; '.'
000000000021e5e4         db  0x00 ; '.'
000000000021e5e5         db  0x00 ; '.'
000000000021e5e6         db  0x00 ; '.'
000000000021e5e7         db  0x00 ; '.'
000000000021e5e8         db  0x00 ; '.'
000000000021e5e9         db  0x00 ; '.'
000000000021e5ea         db  0x00 ; '.'
000000000021e5eb         db  0x00 ; '.'
000000000021e5ec         db  0x00 ; '.'
000000000021e5ed         db  0x00 ; '.'
000000000021e5ee         db  0x00 ; '.'
000000000021e5ef         db  0x00 ; '.'
000000000021e5f0         db  0x00 ; '.'
000000000021e5f1         db  0x00 ; '.'
000000000021e5f2         db  0x00 ; '.'
000000000021e5f3         db  0x00 ; '.'
000000000021e5f4         db  0x00 ; '.'
000000000021e5f5         db  0x00 ; '.'
000000000021e5f6         db  0x00 ; '.'
000000000021e5f7         db  0x00 ; '.'
000000000021e5f8         db  0x00 ; '.'
000000000021e5f9         db  0x00 ; '.'
000000000021e5fa         db  0x00 ; '.'
000000000021e5fb         db  0x00 ; '.'
000000000021e5fc         db  0x00 ; '.'
000000000021e5fd         db  0x00 ; '.'
000000000021e5fe         db  0x00 ; '.'
000000000021e5ff         db  0x00 ; '.'
000000000021e600         db  0x00 ; '.'
000000000021e601         db  0x00 ; '.'
000000000021e602         db  0x00 ; '.'
000000000021e603         db  0x00 ; '.'
000000000021e604         db  0x00 ; '.'
000000000021e605         db  0x00 ; '.'
000000000021e606         db  0x00 ; '.'
000000000021e607         db  0x00 ; '.'
000000000021e608         db  0x00 ; '.'
000000000021e609         db  0x00 ; '.'
000000000021e60a         db  0x00 ; '.'
000000000021e60b         db  0x00 ; '.'
000000000021e60c         db  0x00 ; '.'
000000000021e60d         db  0x00 ; '.'
000000000021e60e         db  0x00 ; '.'
000000000021e60f         db  0x00 ; '.'
000000000021e610         db  0x00 ; '.'
000000000021e611         db  0x00 ; '.'
000000000021e612         db  0x00 ; '.'
000000000021e613         db  0x00 ; '.'
000000000021e614         db  0x00 ; '.'
000000000021e615         db  0x00 ; '.'
000000000021e616         db  0x00 ; '.'
000000000021e617         db  0x00 ; '.'
000000000021e618         db  0x00 ; '.'
000000000021e619         db  0x00 ; '.'
000000000021e61a         db  0x00 ; '.'
000000000021e61b         db  0x00 ; '.'
000000000021e61c         db  0x00 ; '.'
000000000021e61d         db  0x00 ; '.'
000000000021e61e         db  0x00 ; '.'
000000000021e61f         db  0x00 ; '.'
000000000021e620         db  0x00 ; '.'
000000000021e621         db  0x00 ; '.'
000000000021e622         db  0x00 ; '.'
000000000021e623         db  0x00 ; '.'
000000000021e624         db  0x00 ; '.'
000000000021e625         db  0x00 ; '.'
000000000021e626         db  0x00 ; '.'
000000000021e627         db  0x00 ; '.'
000000000021e628         db  0x00 ; '.'
000000000021e629         db  0x00 ; '.'
000000000021e62a         db  0x00 ; '.'
000000000021e62b         db  0x00 ; '.'
000000000021e62c         db  0x00 ; '.'
000000000021e62d         db  0x00 ; '.'
000000000021e62e         db  0x00 ; '.'
000000000021e62f         db  0x00 ; '.'
000000000021e630         db  0x00 ; '.'
000000000021e631         db  0x00 ; '.'
000000000021e632         db  0x00 ; '.'
000000000021e633         db  0x00 ; '.'
000000000021e634         db  0x00 ; '.'
000000000021e635         db  0x00 ; '.'
000000000021e636         db  0x00 ; '.'
000000000021e637         db  0x00 ; '.'
000000000021e638         db  0x00 ; '.'
000000000021e639         db  0x00 ; '.'
000000000021e63a         db  0x00 ; '.'
000000000021e63b         db  0x00 ; '.'
000000000021e63c         db  0x00 ; '.'
000000000021e63d         db  0x00 ; '.'
000000000021e63e         db  0x00 ; '.'
000000000021e63f         db  0x00 ; '.'
000000000021e640         db  0x00 ; '.'
000000000021e641         db  0x00 ; '.'
000000000021e642         db  0x00 ; '.'
000000000021e643         db  0x00 ; '.'
000000000021e644         db  0x00 ; '.'
000000000021e645         db  0x00 ; '.'
000000000021e646         db  0x00 ; '.'
000000000021e647         db  0x00 ; '.'
000000000021e648         db  0x00 ; '.'
000000000021e649         db  0x00 ; '.'
000000000021e64a         db  0x00 ; '.'
000000000021e64b         db  0x00 ; '.'
000000000021e64c         db  0x00 ; '.'
000000000021e64d         db  0x00 ; '.'
000000000021e64e         db  0x00 ; '.'
000000000021e64f         db  0x00 ; '.'
000000000021e650         db  0x00 ; '.'
000000000021e651         db  0x00 ; '.'
000000000021e652         db  0x00 ; '.'
000000000021e653         db  0x00 ; '.'
000000000021e654         db  0x00 ; '.'
000000000021e655         db  0x00 ; '.'
000000000021e656         db  0x00 ; '.'
000000000021e657         db  0x00 ; '.'
000000000021e658         db  0x00 ; '.'
000000000021e659         db  0x00 ; '.'
000000000021e65a         db  0x00 ; '.'
000000000021e65b         db  0x00 ; '.'
000000000021e65c         db  0x00 ; '.'
000000000021e65d         db  0x00 ; '.'
000000000021e65e         db  0x00 ; '.'
000000000021e65f         db  0x00 ; '.'
000000000021e660         db  0x00 ; '.'
000000000021e661         db  0x00 ; '.'
000000000021e662         db  0x00 ; '.'
000000000021e663         db  0x00 ; '.'
000000000021e664         db  0x00 ; '.'
000000000021e665         db  0x00 ; '.'
000000000021e666         db  0x00 ; '.'
000000000021e667         db  0x00 ; '.'
000000000021e668         db  0x00 ; '.'
000000000021e669         db  0x00 ; '.'
000000000021e66a         db  0x00 ; '.'
000000000021e66b         db  0x00 ; '.'
000000000021e66c         db  0x00 ; '.'
000000000021e66d         db  0x00 ; '.'
000000000021e66e         db  0x00 ; '.'
000000000021e66f         db  0x00 ; '.'
000000000021e670         db  0x00 ; '.'
000000000021e671         db  0x00 ; '.'
000000000021e672         db  0x00 ; '.'
000000000021e673         db  0x00 ; '.'
000000000021e674         db  0x00 ; '.'
000000000021e675         db  0x00 ; '.'
000000000021e676         db  0x00 ; '.'
000000000021e677         db  0x00 ; '.'
000000000021e678         db  0x00 ; '.'
000000000021e679         db  0x00 ; '.'
000000000021e67a         db  0x00 ; '.'
000000000021e67b         db  0x00 ; '.'
000000000021e67c         db  0x00 ; '.'
000000000021e67d         db  0x00 ; '.'
000000000021e67e         db  0x00 ; '.'
000000000021e67f         db  0x00 ; '.'
000000000021e680         db  0x00 ; '.'
000000000021e681         db  0x00 ; '.'
000000000021e682         db  0x00 ; '.'
000000000021e683         db  0x00 ; '.'
000000000021e684         db  0x00 ; '.'
000000000021e685         db  0x00 ; '.'
000000000021e686         db  0x00 ; '.'
000000000021e687         db  0x00 ; '.'
000000000021e688         db  0x00 ; '.'
000000000021e689         db  0x00 ; '.'
000000000021e68a         db  0x00 ; '.'
000000000021e68b         db  0x00 ; '.'
000000000021e68c         db  0x00 ; '.'
000000000021e68d         db  0x00 ; '.'
000000000021e68e         db  0x00 ; '.'
000000000021e68f         db  0x00 ; '.'
000000000021e690         db  0x00 ; '.'
000000000021e691         db  0x00 ; '.'
000000000021e692         db  0x00 ; '.'
000000000021e693         db  0x00 ; '.'
000000000021e694         db  0x00 ; '.'
000000000021e695         db  0x00 ; '.'
000000000021e696         db  0x00 ; '.'
000000000021e697         db  0x00 ; '.'
000000000021e698         db  0x00 ; '.'
000000000021e699         db  0x00 ; '.'
000000000021e69a         db  0x00 ; '.'
000000000021e69b         db  0x00 ; '.'
000000000021e69c         db  0x00 ; '.'
000000000021e69d         db  0x00 ; '.'
000000000021e69e         db  0x00 ; '.'
000000000021e69f         db  0x00 ; '.'
000000000021e6a0         db  0x00 ; '.'
000000000021e6a1         db  0x00 ; '.'
000000000021e6a2         db  0x00 ; '.'
000000000021e6a3         db  0x00 ; '.'
000000000021e6a4         db  0x00 ; '.'
000000000021e6a5         db  0x00 ; '.'
000000000021e6a6         db  0x00 ; '.'
000000000021e6a7         db  0x00 ; '.'
000000000021e6a8         db  0x00 ; '.'
000000000021e6a9         db  0x00 ; '.'
000000000021e6aa         db  0x00 ; '.'
000000000021e6ab         db  0x00 ; '.'
000000000021e6ac         db  0x00 ; '.'
000000000021e6ad         db  0x00 ; '.'
000000000021e6ae         db  0x00 ; '.'
000000000021e6af         db  0x00 ; '.'
000000000021e6b0         db  0x00 ; '.'
000000000021e6b1         db  0x00 ; '.'
000000000021e6b2         db  0x00 ; '.'
000000000021e6b3         db  0x00 ; '.'
000000000021e6b4         db  0x00 ; '.'
000000000021e6b5         db  0x00 ; '.'
000000000021e6b6         db  0x00 ; '.'
000000000021e6b7         db  0x00 ; '.'
000000000021e6b8         db  0x00 ; '.'
000000000021e6b9         db  0x00 ; '.'
000000000021e6ba         db  0x00 ; '.'
000000000021e6bb         db  0x00 ; '.'
000000000021e6bc         db  0x00 ; '.'
000000000021e6bd         db  0x00 ; '.'
000000000021e6be         db  0x00 ; '.'
000000000021e6bf         db  0x00 ; '.'
000000000021e6c0         db  0x00 ; '.'
000000000021e6c1         db  0x00 ; '.'
000000000021e6c2         db  0x00 ; '.'
000000000021e6c3         db  0x00 ; '.'
000000000021e6c4         db  0x00 ; '.'
000000000021e6c5         db  0x00 ; '.'
000000000021e6c6         db  0x00 ; '.'
000000000021e6c7         db  0x00 ; '.'
000000000021e6c8         db  0x00 ; '.'
000000000021e6c9         db  0x00 ; '.'
000000000021e6ca         db  0x00 ; '.'
000000000021e6cb         db  0x00 ; '.'
000000000021e6cc         db  0x00 ; '.'
000000000021e6cd         db  0x00 ; '.'
000000000021e6ce         db  0x00 ; '.'
000000000021e6cf         db  0x00 ; '.'
000000000021e6d0         db  0x00 ; '.'
000000000021e6d1         db  0x00 ; '.'
000000000021e6d2         db  0x00 ; '.'
000000000021e6d3         db  0x00 ; '.'
000000000021e6d4         db  0x00 ; '.'
000000000021e6d5         db  0x00 ; '.'
000000000021e6d6         db  0x00 ; '.'
000000000021e6d7         db  0x00 ; '.'
000000000021e6d8         db  0x00 ; '.'
000000000021e6d9         db  0x00 ; '.'
000000000021e6da         db  0x00 ; '.'
000000000021e6db         db  0x00 ; '.'
000000000021e6dc         db  0x00 ; '.'
000000000021e6dd         db  0x00 ; '.'
000000000021e6de         db  0x00 ; '.'
000000000021e6df         db  0x00 ; '.'
000000000021e6e0         db  0x00 ; '.'
000000000021e6e1         db  0x00 ; '.'
000000000021e6e2         db  0x00 ; '.'
000000000021e6e3         db  0x00 ; '.'
000000000021e6e4         db  0x00 ; '.'
000000000021e6e5         db  0x00 ; '.'
000000000021e6e6         db  0x00 ; '.'
000000000021e6e7         db  0x00 ; '.'
000000000021e6e8         db  0x00 ; '.'
000000000021e6e9         db  0x00 ; '.'
000000000021e6ea         db  0x00 ; '.'
000000000021e6eb         db  0x00 ; '.'
000000000021e6ec         db  0x00 ; '.'
000000000021e6ed         db  0x00 ; '.'
000000000021e6ee         db  0x00 ; '.'
000000000021e6ef         db  0x00 ; '.'
000000000021e6f0         db  0x00 ; '.'
000000000021e6f1         db  0x00 ; '.'
000000000021e6f2         db  0x00 ; '.'
000000000021e6f3         db  0x00 ; '.'
000000000021e6f4         db  0x00 ; '.'
000000000021e6f5         db  0x00 ; '.'
000000000021e6f6         db  0x00 ; '.'
000000000021e6f7         db  0x00 ; '.'
000000000021e6f8         db  0x00 ; '.'
000000000021e6f9         db  0x00 ; '.'
000000000021e6fa         db  0x00 ; '.'
000000000021e6fb         db  0x00 ; '.'
000000000021e6fc         db  0x00 ; '.'
000000000021e6fd         db  0x00 ; '.'
000000000021e6fe         db  0x00 ; '.'
000000000021e6ff         db  0x00 ; '.'
000000000021e700         db  0x00 ; '.'
000000000021e701         db  0x00 ; '.'
000000000021e702         db  0x00 ; '.'
000000000021e703         db  0x00 ; '.'
000000000021e704         db  0x00 ; '.'
000000000021e705         db  0x00 ; '.'
000000000021e706         db  0x00 ; '.'
000000000021e707         db  0x00 ; '.'
000000000021e708         db  0x00 ; '.'
000000000021e709         db  0x00 ; '.'
000000000021e70a         db  0x00 ; '.'
000000000021e70b         db  0x00 ; '.'
000000000021e70c         db  0x00 ; '.'
000000000021e70d         db  0x00 ; '.'
000000000021e70e         db  0x00 ; '.'
000000000021e70f         db  0x00 ; '.'
000000000021e710         db  0x00 ; '.'
000000000021e711         db  0x00 ; '.'
000000000021e712         db  0x00 ; '.'
000000000021e713         db  0x00 ; '.'
000000000021e714         db  0x00 ; '.'
000000000021e715         db  0x00 ; '.'
000000000021e716         db  0x00 ; '.'
000000000021e717         db  0x00 ; '.'
000000000021e718         db  0x00 ; '.'
000000000021e719         db  0x00 ; '.'
000000000021e71a         db  0x00 ; '.'
000000000021e71b         db  0x00 ; '.'
000000000021e71c         db  0x00 ; '.'
000000000021e71d         db  0x00 ; '.'
000000000021e71e         db  0x00 ; '.'
000000000021e71f         db  0x00 ; '.'
000000000021e720         db  0x00 ; '.'
000000000021e721         db  0x00 ; '.'
000000000021e722         db  0x00 ; '.'
000000000021e723         db  0x00 ; '.'
000000000021e724         db  0x00 ; '.'
000000000021e725         db  0x00 ; '.'
000000000021e726         db  0x00 ; '.'
000000000021e727         db  0x00 ; '.'
000000000021e728         db  0x00 ; '.'
000000000021e729         db  0x00 ; '.'
000000000021e72a         db  0x00 ; '.'
000000000021e72b         db  0x00 ; '.'
000000000021e72c         db  0x00 ; '.'
000000000021e72d         db  0x00 ; '.'
000000000021e72e         db  0x00 ; '.'
000000000021e72f         db  0x00 ; '.'
000000000021e730         db  0x00 ; '.'
000000000021e731         db  0x00 ; '.'
000000000021e732         db  0x00 ; '.'
000000000021e733         db  0x00 ; '.'
000000000021e734         db  0x00 ; '.'
000000000021e735         db  0x00 ; '.'
000000000021e736         db  0x00 ; '.'
000000000021e737         db  0x00 ; '.'
000000000021e738         db  0x00 ; '.'
000000000021e739         db  0x00 ; '.'
000000000021e73a         db  0x00 ; '.'
000000000021e73b         db  0x00 ; '.'
000000000021e73c         db  0x00 ; '.'
000000000021e73d         db  0x00 ; '.'
000000000021e73e         db  0x00 ; '.'
000000000021e73f         db  0x00 ; '.'
000000000021e740         db  0x00 ; '.'
000000000021e741         db  0x00 ; '.'
000000000021e742         db  0x00 ; '.'
000000000021e743         db  0x00 ; '.'
000000000021e744         db  0x00 ; '.'
000000000021e745         db  0x00 ; '.'
000000000021e746         db  0x00 ; '.'
000000000021e747         db  0x00 ; '.'
000000000021e748         db  0x00 ; '.'
000000000021e749         db  0x00 ; '.'
000000000021e74a         db  0x00 ; '.'
000000000021e74b         db  0x00 ; '.'
000000000021e74c         db  0x00 ; '.'
000000000021e74d         db  0x00 ; '.'
000000000021e74e         db  0x00 ; '.'
000000000021e74f         db  0x00 ; '.'
000000000021e750         db  0x00 ; '.'
000000000021e751         db  0x00 ; '.'
000000000021e752         db  0x00 ; '.'
000000000021e753         db  0x00 ; '.'
000000000021e754         db  0x00 ; '.'
000000000021e755         db  0x00 ; '.'
000000000021e756         db  0x00 ; '.'
000000000021e757         db  0x00 ; '.'
000000000021e758         db  0x00 ; '.'
000000000021e759         db  0x00 ; '.'
000000000021e75a         db  0x00 ; '.'
000000000021e75b         db  0x00 ; '.'
000000000021e75c         db  0x00 ; '.'
000000000021e75d         db  0x00 ; '.'
000000000021e75e         db  0x00 ; '.'
000000000021e75f         db  0x00 ; '.'
000000000021e760         db  0x00 ; '.'
000000000021e761         db  0x00 ; '.'
000000000021e762         db  0x00 ; '.'
000000000021e763         db  0x00 ; '.'
000000000021e764         db  0x00 ; '.'
000000000021e765         db  0x00 ; '.'
000000000021e766         db  0x00 ; '.'
000000000021e767         db  0x00 ; '.'
000000000021e768         db  0x00 ; '.'
000000000021e769         db  0x00 ; '.'
000000000021e76a         db  0x00 ; '.'
000000000021e76b         db  0x00 ; '.'
000000000021e76c         db  0x00 ; '.'
000000000021e76d         db  0x00 ; '.'
000000000021e76e         db  0x00 ; '.'
000000000021e76f         db  0x00 ; '.'
000000000021e770         db  0x00 ; '.'
000000000021e771         db  0x00 ; '.'
000000000021e772         db  0x00 ; '.'
000000000021e773         db  0x00 ; '.'
000000000021e774         db  0x00 ; '.'
000000000021e775         db  0x00 ; '.'
000000000021e776         db  0x00 ; '.'
000000000021e777         db  0x00 ; '.'
000000000021e778         db  0x00 ; '.'
000000000021e779         db  0x00 ; '.'
000000000021e77a         db  0x00 ; '.'
000000000021e77b         db  0x00 ; '.'
000000000021e77c         db  0x00 ; '.'
000000000021e77d         db  0x00 ; '.'
000000000021e77e         db  0x00 ; '.'
000000000021e77f         db  0x00 ; '.'
000000000021e780         db  0x00 ; '.'
000000000021e781         db  0x00 ; '.'
000000000021e782         db  0x00 ; '.'
000000000021e783         db  0x00 ; '.'
000000000021e784         db  0x00 ; '.'
000000000021e785         db  0x00 ; '.'
000000000021e786         db  0x00 ; '.'
000000000021e787         db  0x00 ; '.'
000000000021e788         db  0x00 ; '.'
000000000021e789         db  0x00 ; '.'
000000000021e78a         db  0x00 ; '.'
000000000021e78b         db  0x00 ; '.'
000000000021e78c         db  0x00 ; '.'
000000000021e78d         db  0x00 ; '.'
000000000021e78e         db  0x00 ; '.'
000000000021e78f         db  0x00 ; '.'
000000000021e790         db  0x00 ; '.'
000000000021e791         db  0x00 ; '.'
000000000021e792         db  0x00 ; '.'
000000000021e793         db  0x00 ; '.'
000000000021e794         db  0x00 ; '.'
000000000021e795         db  0x00 ; '.'
000000000021e796         db  0x00 ; '.'
000000000021e797         db  0x00 ; '.'
000000000021e798         db  0x00 ; '.'
000000000021e799         db  0x00 ; '.'
000000000021e79a         db  0x00 ; '.'
000000000021e79b         db  0x00 ; '.'
000000000021e79c         db  0x00 ; '.'
000000000021e79d         db  0x00 ; '.'
000000000021e79e         db  0x00 ; '.'
000000000021e79f         db  0x00 ; '.'
000000000021e7a0         db  0x00 ; '.'
000000000021e7a1         db  0x00 ; '.'
000000000021e7a2         db  0x00 ; '.'
000000000021e7a3         db  0x00 ; '.'
000000000021e7a4         db  0x00 ; '.'
000000000021e7a5         db  0x00 ; '.'
000000000021e7a6         db  0x00 ; '.'
000000000021e7a7         db  0x00 ; '.'
000000000021e7a8         db  0x00 ; '.'
000000000021e7a9         db  0x00 ; '.'
000000000021e7aa         db  0x00 ; '.'
000000000021e7ab         db  0x00 ; '.'
000000000021e7ac         db  0x00 ; '.'
000000000021e7ad         db  0x00 ; '.'
000000000021e7ae         db  0x00 ; '.'
000000000021e7af         db  0x00 ; '.'
000000000021e7b0         db  0x00 ; '.'
000000000021e7b1         db  0x00 ; '.'
000000000021e7b2         db  0x00 ; '.'
000000000021e7b3         db  0x00 ; '.'
000000000021e7b4         db  0x00 ; '.'
000000000021e7b5         db  0x00 ; '.'
000000000021e7b6         db  0x00 ; '.'
000000000021e7b7         db  0x00 ; '.'
000000000021e7b8         db  0x00 ; '.'
000000000021e7b9         db  0x00 ; '.'
000000000021e7ba         db  0x00 ; '.'
000000000021e7bb         db  0x00 ; '.'
000000000021e7bc         db  0x00 ; '.'
000000000021e7bd         db  0x00 ; '.'
000000000021e7be         db  0x00 ; '.'
000000000021e7bf         db  0x00 ; '.'
000000000021e7c0         db  0x00 ; '.'
000000000021e7c1         db  0x00 ; '.'
000000000021e7c2         db  0x00 ; '.'
000000000021e7c3         db  0x00 ; '.'
000000000021e7c4         db  0x00 ; '.'
000000000021e7c5         db  0x00 ; '.'
000000000021e7c6         db  0x00 ; '.'
000000000021e7c7         db  0x00 ; '.'
000000000021e7c8         db  0x00 ; '.'
000000000021e7c9         db  0x00 ; '.'
000000000021e7ca         db  0x00 ; '.'
000000000021e7cb         db  0x00 ; '.'
000000000021e7cc         db  0x00 ; '.'
000000000021e7cd         db  0x00 ; '.'
000000000021e7ce         db  0x00 ; '.'
000000000021e7cf         db  0x00 ; '.'
000000000021e7d0         db  0x00 ; '.'
000000000021e7d1         db  0x00 ; '.'
000000000021e7d2         db  0x00 ; '.'
000000000021e7d3         db  0x00 ; '.'
000000000021e7d4         db  0x00 ; '.'
000000000021e7d5         db  0x00 ; '.'
000000000021e7d6         db  0x00 ; '.'
000000000021e7d7         db  0x00 ; '.'
000000000021e7d8         db  0x00 ; '.'
000000000021e7d9         db  0x00 ; '.'
000000000021e7da         db  0x00 ; '.'
000000000021e7db         db  0x00 ; '.'
000000000021e7dc         db  0x00 ; '.'
000000000021e7dd         db  0x00 ; '.'
000000000021e7de         db  0x00 ; '.'
000000000021e7df         db  0x00 ; '.'
000000000021e7e0         db  0x00 ; '.'
000000000021e7e1         db  0x00 ; '.'
000000000021e7e2         db  0x00 ; '.'
000000000021e7e3         db  0x00 ; '.'
000000000021e7e4         db  0x00 ; '.'
000000000021e7e5         db  0x00 ; '.'
000000000021e7e6         db  0x00 ; '.'
000000000021e7e7         db  0x00 ; '.'
000000000021e7e8         db  0x00 ; '.'
000000000021e7e9         db  0x00 ; '.'
000000000021e7ea         db  0x00 ; '.'
000000000021e7eb         db  0x00 ; '.'
000000000021e7ec         db  0x00 ; '.'
000000000021e7ed         db  0x00 ; '.'
000000000021e7ee         db  0x00 ; '.'
000000000021e7ef         db  0x00 ; '.'
000000000021e7f0         db  0x00 ; '.'
000000000021e7f1         db  0x00 ; '.'
000000000021e7f2         db  0x00 ; '.'
000000000021e7f3         db  0x00 ; '.'
000000000021e7f4         db  0x00 ; '.'
000000000021e7f5         db  0x00 ; '.'
000000000021e7f6         db  0x00 ; '.'
000000000021e7f7         db  0x00 ; '.'
000000000021e7f8         db  0x00 ; '.'
000000000021e7f9         db  0x00 ; '.'
000000000021e7fa         db  0x00 ; '.'
000000000021e7fb         db  0x00 ; '.'
000000000021e7fc         db  0x00 ; '.'
000000000021e7fd         db  0x00 ; '.'
000000000021e7fe         db  0x00 ; '.'
000000000021e7ff         db  0x00 ; '.'
000000000021e800         db  0x00 ; '.'
000000000021e801         db  0x00 ; '.'
000000000021e802         db  0x00 ; '.'
000000000021e803         db  0x00 ; '.'
000000000021e804         db  0x00 ; '.'
000000000021e805         db  0x00 ; '.'
000000000021e806         db  0x00 ; '.'
000000000021e807         db  0x00 ; '.'
000000000021e808         db  0x00 ; '.'
000000000021e809         db  0x00 ; '.'
000000000021e80a         db  0x00 ; '.'
000000000021e80b         db  0x00 ; '.'
000000000021e80c         db  0x00 ; '.'
000000000021e80d         db  0x00 ; '.'
000000000021e80e         db  0x00 ; '.'
000000000021e80f         db  0x00 ; '.'
000000000021e810         db  0x00 ; '.'
000000000021e811         db  0x00 ; '.'
000000000021e812         db  0x00 ; '.'
000000000021e813         db  0x00 ; '.'
000000000021e814         db  0x00 ; '.'
000000000021e815         db  0x00 ; '.'
000000000021e816         db  0x00 ; '.'
000000000021e817         db  0x00 ; '.'
000000000021e818         db  0x00 ; '.'
000000000021e819         db  0x00 ; '.'
000000000021e81a         db  0x00 ; '.'
000000000021e81b         db  0x00 ; '.'
000000000021e81c         db  0x00 ; '.'
000000000021e81d         db  0x00 ; '.'
000000000021e81e         db  0x00 ; '.'
000000000021e81f         db  0x00 ; '.'
000000000021e820         db  0x00 ; '.'
000000000021e821         db  0x00 ; '.'
000000000021e822         db  0x00 ; '.'
000000000021e823         db  0x00 ; '.'
000000000021e824         db  0x00 ; '.'
000000000021e825         db  0x00 ; '.'
000000000021e826         db  0x00 ; '.'
000000000021e827         db  0x00 ; '.'
000000000021e828         db  0x00 ; '.'
000000000021e829         db  0x00 ; '.'
000000000021e82a         db  0x00 ; '.'
000000000021e82b         db  0x00 ; '.'
000000000021e82c         db  0x00 ; '.'
000000000021e82d         db  0x00 ; '.'
000000000021e82e         db  0x00 ; '.'
000000000021e82f         db  0x00 ; '.'
000000000021e830         db  0x00 ; '.'
000000000021e831         db  0x00 ; '.'
000000000021e832         db  0x00 ; '.'
000000000021e833         db  0x00 ; '.'
000000000021e834         db  0x00 ; '.'
000000000021e835         db  0x00 ; '.'
000000000021e836         db  0x00 ; '.'
000000000021e837         db  0x00 ; '.'
000000000021e838         db  0x00 ; '.'
000000000021e839         db  0x00 ; '.'
000000000021e83a         db  0x00 ; '.'
000000000021e83b         db  0x00 ; '.'
000000000021e83c         db  0x00 ; '.'
000000000021e83d         db  0x00 ; '.'
000000000021e83e         db  0x00 ; '.'
000000000021e83f         db  0x00 ; '.'
000000000021e840         db  0x00 ; '.'
000000000021e841         db  0x00 ; '.'
000000000021e842         db  0x00 ; '.'
000000000021e843         db  0x00 ; '.'
000000000021e844         db  0x00 ; '.'
000000000021e845         db  0x00 ; '.'
000000000021e846         db  0x00 ; '.'
000000000021e847         db  0x00 ; '.'
000000000021e848         db  0x00 ; '.'
000000000021e849         db  0x00 ; '.'
000000000021e84a         db  0x00 ; '.'
000000000021e84b         db  0x00 ; '.'
000000000021e84c         db  0x00 ; '.'
000000000021e84d         db  0x00 ; '.'
000000000021e84e         db  0x00 ; '.'
000000000021e84f         db  0x00 ; '.'
000000000021e850         db  0x00 ; '.'
000000000021e851         db  0x00 ; '.'
000000000021e852         db  0x00 ; '.'
000000000021e853         db  0x00 ; '.'
000000000021e854         db  0x00 ; '.'
000000000021e855         db  0x00 ; '.'
000000000021e856         db  0x00 ; '.'
000000000021e857         db  0x00 ; '.'
000000000021e858         db  0x00 ; '.'
000000000021e859         db  0x00 ; '.'
000000000021e85a         db  0x00 ; '.'
000000000021e85b         db  0x00 ; '.'
000000000021e85c         db  0x00 ; '.'
000000000021e85d         db  0x00 ; '.'
000000000021e85e         db  0x00 ; '.'
000000000021e85f         db  0x00 ; '.'
000000000021e860         db  0x00 ; '.'
000000000021e861         db  0x00 ; '.'
000000000021e862         db  0x00 ; '.'
000000000021e863         db  0x00 ; '.'
000000000021e864         db  0x00 ; '.'
000000000021e865         db  0x00 ; '.'
000000000021e866         db  0x00 ; '.'
000000000021e867         db  0x00 ; '.'
000000000021e868         db  0x00 ; '.'
000000000021e869         db  0x00 ; '.'
000000000021e86a         db  0x00 ; '.'
000000000021e86b         db  0x00 ; '.'
000000000021e86c         db  0x00 ; '.'
000000000021e86d         db  0x00 ; '.'
000000000021e86e         db  0x00 ; '.'
000000000021e86f         db  0x00 ; '.'
000000000021e870         db  0x00 ; '.'
000000000021e871         db  0x00 ; '.'
000000000021e872         db  0x00 ; '.'
000000000021e873         db  0x00 ; '.'
000000000021e874         db  0x00 ; '.'
000000000021e875         db  0x00 ; '.'
000000000021e876         db  0x00 ; '.'
000000000021e877         db  0x00 ; '.'
000000000021e878         db  0x00 ; '.'
000000000021e879         db  0x00 ; '.'
000000000021e87a         db  0x00 ; '.'
000000000021e87b         db  0x00 ; '.'
000000000021e87c         db  0x00 ; '.'
000000000021e87d         db  0x00 ; '.'
000000000021e87e         db  0x00 ; '.'
000000000021e87f         db  0x00 ; '.'
000000000021e880         db  0x00 ; '.'
000000000021e881         db  0x00 ; '.'
000000000021e882         db  0x00 ; '.'
000000000021e883         db  0x00 ; '.'
000000000021e884         db  0x00 ; '.'
000000000021e885         db  0x00 ; '.'
000000000021e886         db  0x00 ; '.'
000000000021e887         db  0x00 ; '.'
000000000021e888         db  0x00 ; '.'
000000000021e889         db  0x00 ; '.'
000000000021e88a         db  0x00 ; '.'
000000000021e88b         db  0x00 ; '.'
000000000021e88c         db  0x00 ; '.'
000000000021e88d         db  0x00 ; '.'
000000000021e88e         db  0x00 ; '.'
000000000021e88f         db  0x00 ; '.'
000000000021e890         db  0x00 ; '.'
000000000021e891         db  0x00 ; '.'
000000000021e892         db  0x00 ; '.'
000000000021e893         db  0x00 ; '.'
000000000021e894         db  0x00 ; '.'
000000000021e895         db  0x00 ; '.'
000000000021e896         db  0x00 ; '.'
000000000021e897         db  0x00 ; '.'
000000000021e898         db  0x00 ; '.'
000000000021e899         db  0x00 ; '.'
000000000021e89a         db  0x00 ; '.'
000000000021e89b         db  0x00 ; '.'
000000000021e89c         db  0x00 ; '.'
000000000021e89d         db  0x00 ; '.'
000000000021e89e         db  0x00 ; '.'
000000000021e89f         db  0x00 ; '.'
000000000021e8a0         db  0x00 ; '.'
000000000021e8a1         db  0x00 ; '.'
000000000021e8a2         db  0x00 ; '.'
000000000021e8a3         db  0x00 ; '.'
000000000021e8a4         db  0x00 ; '.'
000000000021e8a5         db  0x00 ; '.'
000000000021e8a6         db  0x00 ; '.'
000000000021e8a7         db  0x00 ; '.'
000000000021e8a8         db  0x00 ; '.'
000000000021e8a9         db  0x00 ; '.'
000000000021e8aa         db  0x00 ; '.'
000000000021e8ab         db  0x00 ; '.'
000000000021e8ac         db  0x00 ; '.'
000000000021e8ad         db  0x00 ; '.'
000000000021e8ae         db  0x00 ; '.'
000000000021e8af         db  0x00 ; '.'
000000000021e8b0         db  0x00 ; '.'
000000000021e8b1         db  0x00 ; '.'
000000000021e8b2         db  0x00 ; '.'
000000000021e8b3         db  0x00 ; '.'
000000000021e8b4         db  0x00 ; '.'
000000000021e8b5         db  0x00 ; '.'
000000000021e8b6         db  0x00 ; '.'
000000000021e8b7         db  0x00 ; '.'
000000000021e8b8         db  0x00 ; '.'
000000000021e8b9         db  0x00 ; '.'
000000000021e8ba         db  0x00 ; '.'
000000000021e8bb         db  0x00 ; '.'
000000000021e8bc         db  0x00 ; '.'
000000000021e8bd         db  0x00 ; '.'
000000000021e8be         db  0x00 ; '.'
000000000021e8bf         db  0x00 ; '.'
000000000021e8c0         db  0x00 ; '.'
000000000021e8c1         db  0x00 ; '.'
000000000021e8c2         db  0x00 ; '.'
000000000021e8c3         db  0x00 ; '.'
000000000021e8c4         db  0x00 ; '.'
000000000021e8c5         db  0x00 ; '.'
000000000021e8c6         db  0x00 ; '.'
000000000021e8c7         db  0x00 ; '.'
000000000021e8c8         db  0x00 ; '.'
000000000021e8c9         db  0x00 ; '.'
000000000021e8ca         db  0x00 ; '.'
000000000021e8cb         db  0x00 ; '.'
000000000021e8cc         db  0x00 ; '.'
000000000021e8cd         db  0x00 ; '.'
000000000021e8ce         db  0x00 ; '.'
000000000021e8cf         db  0x00 ; '.'
000000000021e8d0         db  0x00 ; '.'
000000000021e8d1         db  0x00 ; '.'
000000000021e8d2         db  0x00 ; '.'
000000000021e8d3         db  0x00 ; '.'
000000000021e8d4         db  0x00 ; '.'
000000000021e8d5         db  0x00 ; '.'
000000000021e8d6         db  0x00 ; '.'
000000000021e8d7         db  0x00 ; '.'
000000000021e8d8         db  0x00 ; '.'
000000000021e8d9         db  0x00 ; '.'
000000000021e8da         db  0x00 ; '.'
000000000021e8db         db  0x00 ; '.'
000000000021e8dc         db  0x00 ; '.'
000000000021e8dd         db  0x00 ; '.'
000000000021e8de         db  0x00 ; '.'
000000000021e8df         db  0x00 ; '.'
000000000021e8e0         db  0x00 ; '.'
000000000021e8e1         db  0x00 ; '.'
000000000021e8e2         db  0x00 ; '.'
000000000021e8e3         db  0x00 ; '.'
000000000021e8e4         db  0x00 ; '.'
000000000021e8e5         db  0x00 ; '.'
000000000021e8e6         db  0x00 ; '.'
000000000021e8e7         db  0x00 ; '.'
000000000021e8e8         db  0x00 ; '.'
000000000021e8e9         db  0x00 ; '.'
000000000021e8ea         db  0x00 ; '.'
000000000021e8eb         db  0x00 ; '.'
000000000021e8ec         db  0x00 ; '.'
000000000021e8ed         db  0x00 ; '.'
000000000021e8ee         db  0x00 ; '.'
000000000021e8ef         db  0x00 ; '.'
000000000021e8f0         db  0x00 ; '.'
000000000021e8f1         db  0x00 ; '.'
000000000021e8f2         db  0x00 ; '.'
000000000021e8f3         db  0x00 ; '.'
000000000021e8f4         db  0x00 ; '.'
000000000021e8f5         db  0x00 ; '.'
000000000021e8f6         db  0x00 ; '.'
000000000021e8f7         db  0x00 ; '.'
000000000021e8f8         db  0x00 ; '.'
000000000021e8f9         db  0x00 ; '.'
000000000021e8fa         db  0x00 ; '.'
000000000021e8fb         db  0x00 ; '.'
000000000021e8fc         db  0x00 ; '.'
000000000021e8fd         db  0x00 ; '.'
000000000021e8fe         db  0x00 ; '.'
000000000021e8ff         db  0x00 ; '.'
000000000021e900         db  0x00 ; '.'
000000000021e901         db  0x00 ; '.'
000000000021e902         db  0x00 ; '.'
000000000021e903         db  0x00 ; '.'
000000000021e904         db  0x00 ; '.'
000000000021e905         db  0x00 ; '.'
000000000021e906         db  0x00 ; '.'
000000000021e907         db  0x00 ; '.'
000000000021e908         db  0x00 ; '.'
000000000021e909         db  0x00 ; '.'
000000000021e90a         db  0x00 ; '.'
000000000021e90b         db  0x00 ; '.'
000000000021e90c         db  0x00 ; '.'
000000000021e90d         db  0x00 ; '.'
000000000021e90e         db  0x00 ; '.'
000000000021e90f         db  0x00 ; '.'
000000000021e910         db  0x00 ; '.'
000000000021e911         db  0x00 ; '.'
000000000021e912         db  0x00 ; '.'
000000000021e913         db  0x00 ; '.'
000000000021e914         db  0x00 ; '.'
000000000021e915         db  0x00 ; '.'
000000000021e916         db  0x00 ; '.'
000000000021e917         db  0x00 ; '.'
000000000021e918         db  0x00 ; '.'
000000000021e919         db  0x00 ; '.'
000000000021e91a         db  0x00 ; '.'
000000000021e91b         db  0x00 ; '.'
000000000021e91c         db  0x00 ; '.'
000000000021e91d         db  0x00 ; '.'
000000000021e91e         db  0x00 ; '.'
000000000021e91f         db  0x00 ; '.'
000000000021e920         db  0x00 ; '.'
000000000021e921         db  0x00 ; '.'
000000000021e922         db  0x00 ; '.'
000000000021e923         db  0x00 ; '.'
000000000021e924         db  0x00 ; '.'
000000000021e925         db  0x00 ; '.'
000000000021e926         db  0x00 ; '.'
000000000021e927         db  0x00 ; '.'
000000000021e928         db  0x00 ; '.'
000000000021e929         db  0x00 ; '.'
000000000021e92a         db  0x00 ; '.'
000000000021e92b         db  0x00 ; '.'
000000000021e92c         db  0x00 ; '.'
000000000021e92d         db  0x00 ; '.'
000000000021e92e         db  0x00 ; '.'
000000000021e92f         db  0x00 ; '.'
000000000021e930         db  0x00 ; '.'
000000000021e931         db  0x00 ; '.'
000000000021e932         db  0x00 ; '.'
000000000021e933         db  0x00 ; '.'
000000000021e934         db  0x00 ; '.'
000000000021e935         db  0x00 ; '.'
000000000021e936         db  0x00 ; '.'
000000000021e937         db  0x00 ; '.'
000000000021e938         db  0x00 ; '.'
000000000021e939         db  0x00 ; '.'
000000000021e93a         db  0x00 ; '.'
000000000021e93b         db  0x00 ; '.'
000000000021e93c         db  0x00 ; '.'
000000000021e93d         db  0x00 ; '.'
000000000021e93e         db  0x00 ; '.'
000000000021e93f         db  0x00 ; '.'
000000000021e940         db  0x00 ; '.'
000000000021e941         db  0x00 ; '.'
000000000021e942         db  0x00 ; '.'
000000000021e943         db  0x00 ; '.'
000000000021e944         db  0x00 ; '.'
000000000021e945         db  0x00 ; '.'
000000000021e946         db  0x00 ; '.'
000000000021e947         db  0x00 ; '.'
000000000021e948         db  0x00 ; '.'
000000000021e949         db  0x00 ; '.'
000000000021e94a         db  0x00 ; '.'
000000000021e94b         db  0x00 ; '.'
000000000021e94c         db  0x00 ; '.'
000000000021e94d         db  0x00 ; '.'
000000000021e94e         db  0x00 ; '.'
000000000021e94f         db  0x00 ; '.'
000000000021e950         db  0x00 ; '.'
000000000021e951         db  0x00 ; '.'
000000000021e952         db  0x00 ; '.'
000000000021e953         db  0x00 ; '.'
000000000021e954         db  0x00 ; '.'
000000000021e955         db  0x00 ; '.'
000000000021e956         db  0x00 ; '.'
000000000021e957         db  0x00 ; '.'
000000000021e958         db  0x00 ; '.'
000000000021e959         db  0x00 ; '.'
000000000021e95a         db  0x00 ; '.'
000000000021e95b         db  0x00 ; '.'
000000000021e95c         db  0x00 ; '.'
000000000021e95d         db  0x00 ; '.'
000000000021e95e         db  0x00 ; '.'
000000000021e95f         db  0x00 ; '.'
000000000021e960         db  0x00 ; '.'
000000000021e961         db  0x00 ; '.'
000000000021e962         db  0x00 ; '.'
000000000021e963         db  0x00 ; '.'
000000000021e964         db  0x00 ; '.'
000000000021e965         db  0x00 ; '.'
000000000021e966         db  0x00 ; '.'
000000000021e967         db  0x00 ; '.'
000000000021e968         db  0x00 ; '.'
000000000021e969         db  0x00 ; '.'
000000000021e96a         db  0x00 ; '.'
000000000021e96b         db  0x00 ; '.'
000000000021e96c         db  0x00 ; '.'
000000000021e96d         db  0x00 ; '.'
000000000021e96e         db  0x00 ; '.'
000000000021e96f         db  0x00 ; '.'
000000000021e970         db  0x00 ; '.'
000000000021e971         db  0x00 ; '.'
000000000021e972         db  0x00 ; '.'
000000000021e973         db  0x00 ; '.'
000000000021e974         db  0x00 ; '.'
000000000021e975         db  0x00 ; '.'
000000000021e976         db  0x00 ; '.'
000000000021e977         db  0x00 ; '.'
000000000021e978         db  0x00 ; '.'
000000000021e979         db  0x00 ; '.'
000000000021e97a         db  0x00 ; '.'
000000000021e97b         db  0x00 ; '.'
000000000021e97c         db  0x00 ; '.'
000000000021e97d         db  0x00 ; '.'
000000000021e97e         db  0x00 ; '.'
000000000021e97f         db  0x00 ; '.'
000000000021e980         db  0x00 ; '.'
000000000021e981         db  0x00 ; '.'
000000000021e982         db  0x00 ; '.'
000000000021e983         db  0x00 ; '.'
000000000021e984         db  0x00 ; '.'
000000000021e985         db  0x00 ; '.'
000000000021e986         db  0x00 ; '.'
000000000021e987         db  0x00 ; '.'
000000000021e988         db  0x00 ; '.'
000000000021e989         db  0x00 ; '.'
000000000021e98a         db  0x00 ; '.'
000000000021e98b         db  0x00 ; '.'
000000000021e98c         db  0x00 ; '.'
000000000021e98d         db  0x00 ; '.'
000000000021e98e         db  0x00 ; '.'
000000000021e98f         db  0x00 ; '.'
000000000021e990         db  0x00 ; '.'
000000000021e991         db  0x00 ; '.'
000000000021e992         db  0x00 ; '.'
000000000021e993         db  0x00 ; '.'
000000000021e994         db  0x00 ; '.'
000000000021e995         db  0x00 ; '.'
000000000021e996         db  0x00 ; '.'
000000000021e997         db  0x00 ; '.'
000000000021e998         db  0x00 ; '.'
000000000021e999         db  0x00 ; '.'
000000000021e99a         db  0x00 ; '.'
000000000021e99b         db  0x00 ; '.'
000000000021e99c         db  0x00 ; '.'
000000000021e99d         db  0x00 ; '.'
000000000021e99e         db  0x00 ; '.'
000000000021e99f         db  0x00 ; '.'
000000000021e9a0         db  0x00 ; '.'
000000000021e9a1         db  0x00 ; '.'
000000000021e9a2         db  0x00 ; '.'
000000000021e9a3         db  0x00 ; '.'
000000000021e9a4         db  0x00 ; '.'
000000000021e9a5         db  0x00 ; '.'
000000000021e9a6         db  0x00 ; '.'
000000000021e9a7         db  0x00 ; '.'
000000000021e9a8         db  0x00 ; '.'
000000000021e9a9         db  0x00 ; '.'
000000000021e9aa         db  0x00 ; '.'
000000000021e9ab         db  0x00 ; '.'
000000000021e9ac         db  0x00 ; '.'
000000000021e9ad         db  0x00 ; '.'
000000000021e9ae         db  0x00 ; '.'
000000000021e9af         db  0x00 ; '.'
000000000021e9b0         db  0x00 ; '.'
000000000021e9b1         db  0x00 ; '.'
000000000021e9b2         db  0x00 ; '.'
000000000021e9b3         db  0x00 ; '.'
000000000021e9b4         db  0x00 ; '.'
000000000021e9b5         db  0x00 ; '.'
000000000021e9b6         db  0x00 ; '.'
000000000021e9b7         db  0x00 ; '.'
000000000021e9b8         db  0x00 ; '.'
000000000021e9b9         db  0x00 ; '.'
000000000021e9ba         db  0x00 ; '.'
000000000021e9bb         db  0x00 ; '.'
000000000021e9bc         db  0x00 ; '.'
000000000021e9bd         db  0x00 ; '.'
000000000021e9be         db  0x00 ; '.'
000000000021e9bf         db  0x00 ; '.'
000000000021e9c0         db  0x00 ; '.'
000000000021e9c1         db  0x00 ; '.'
000000000021e9c2         db  0x00 ; '.'
000000000021e9c3         db  0x00 ; '.'
000000000021e9c4         db  0x00 ; '.'
000000000021e9c5         db  0x00 ; '.'
000000000021e9c6         db  0x00 ; '.'
000000000021e9c7         db  0x00 ; '.'
000000000021e9c8         db  0x00 ; '.'
000000000021e9c9         db  0x00 ; '.'
000000000021e9ca         db  0x00 ; '.'
000000000021e9cb         db  0x00 ; '.'
000000000021e9cc         db  0x00 ; '.'
000000000021e9cd         db  0x00 ; '.'
000000000021e9ce         db  0x00 ; '.'
000000000021e9cf         db  0x00 ; '.'
000000000021e9d0         db  0x00 ; '.'
000000000021e9d1         db  0x00 ; '.'
000000000021e9d2         db  0x00 ; '.'
000000000021e9d3         db  0x00 ; '.'
000000000021e9d4         db  0x00 ; '.'
000000000021e9d5         db  0x00 ; '.'
000000000021e9d6         db  0x00 ; '.'
000000000021e9d7         db  0x00 ; '.'
000000000021e9d8         db  0x00 ; '.'
000000000021e9d9         db  0x00 ; '.'
000000000021e9da         db  0x00 ; '.'
000000000021e9db         db  0x00 ; '.'
000000000021e9dc         db  0x00 ; '.'
000000000021e9dd         db  0x00 ; '.'
000000000021e9de         db  0x00 ; '.'
000000000021e9df         db  0x00 ; '.'
000000000021e9e0         db  0x00 ; '.'
000000000021e9e1         db  0x00 ; '.'
000000000021e9e2         db  0x00 ; '.'
000000000021e9e3         db  0x00 ; '.'
000000000021e9e4         db  0x00 ; '.'
000000000021e9e5         db  0x00 ; '.'
000000000021e9e6         db  0x00 ; '.'
000000000021e9e7         db  0x00 ; '.'
000000000021e9e8         db  0x00 ; '.'
000000000021e9e9         db  0x00 ; '.'
000000000021e9ea         db  0x00 ; '.'
000000000021e9eb         db  0x00 ; '.'
000000000021e9ec         db  0x00 ; '.'
000000000021e9ed         db  0x00 ; '.'
000000000021e9ee         db  0x00 ; '.'
000000000021e9ef         db  0x00 ; '.'
000000000021e9f0         db  0x00 ; '.'
000000000021e9f1         db  0x00 ; '.'
000000000021e9f2         db  0x00 ; '.'
000000000021e9f3         db  0x00 ; '.'
000000000021e9f4         db  0x00 ; '.'
000000000021e9f5         db  0x00 ; '.'
000000000021e9f6         db  0x00 ; '.'
000000000021e9f7         db  0x00 ; '.'
000000000021e9f8         db  0x00 ; '.'
000000000021e9f9         db  0x00 ; '.'
000000000021e9fa         db  0x00 ; '.'
000000000021e9fb         db  0x00 ; '.'
000000000021e9fc         db  0x00 ; '.'
000000000021e9fd         db  0x00 ; '.'
000000000021e9fe         db  0x00 ; '.'
000000000021e9ff         db  0x00 ; '.'
000000000021ea00         db  0x00 ; '.'
000000000021ea01         db  0x00 ; '.'
000000000021ea02         db  0x00 ; '.'
000000000021ea03         db  0x00 ; '.'
000000000021ea04         db  0x00 ; '.'
000000000021ea05         db  0x00 ; '.'
000000000021ea06         db  0x00 ; '.'
000000000021ea07         db  0x00 ; '.'
000000000021ea08         db  0x00 ; '.'
000000000021ea09         db  0x00 ; '.'
000000000021ea0a         db  0x00 ; '.'
000000000021ea0b         db  0x00 ; '.'
000000000021ea0c         db  0x00 ; '.'
000000000021ea0d         db  0x00 ; '.'
000000000021ea0e         db  0x00 ; '.'
000000000021ea0f         db  0x00 ; '.'
000000000021ea10         db  0x00 ; '.'
000000000021ea11         db  0x00 ; '.'
000000000021ea12         db  0x00 ; '.'
000000000021ea13         db  0x00 ; '.'
000000000021ea14         db  0x00 ; '.'
000000000021ea15         db  0x00 ; '.'
000000000021ea16         db  0x00 ; '.'
000000000021ea17         db  0x00 ; '.'
000000000021ea18         db  0x00 ; '.'
000000000021ea19         db  0x00 ; '.'
000000000021ea1a         db  0x00 ; '.'
000000000021ea1b         db  0x00 ; '.'
000000000021ea1c         db  0x00 ; '.'
000000000021ea1d         db  0x00 ; '.'
000000000021ea1e         db  0x00 ; '.'
000000000021ea1f         db  0x00 ; '.'
000000000021ea20         db  0x00 ; '.'
000000000021ea21         db  0x00 ; '.'
000000000021ea22         db  0x00 ; '.'
000000000021ea23         db  0x00 ; '.'
000000000021ea24         db  0x00 ; '.'
000000000021ea25         db  0x00 ; '.'
000000000021ea26         db  0x00 ; '.'
000000000021ea27         db  0x00 ; '.'
000000000021ea28         db  0x00 ; '.'
000000000021ea29         db  0x00 ; '.'
000000000021ea2a         db  0x00 ; '.'
000000000021ea2b         db  0x00 ; '.'
000000000021ea2c         db  0x00 ; '.'
000000000021ea2d         db  0x00 ; '.'
000000000021ea2e         db  0x00 ; '.'
000000000021ea2f         db  0x00 ; '.'
000000000021ea30         db  0x00 ; '.'
000000000021ea31         db  0x00 ; '.'
000000000021ea32         db  0x00 ; '.'
000000000021ea33         db  0x00 ; '.'
000000000021ea34         db  0x00 ; '.'
000000000021ea35         db  0x00 ; '.'
000000000021ea36         db  0x00 ; '.'
000000000021ea37         db  0x00 ; '.'
000000000021ea38         db  0x00 ; '.'
000000000021ea39         db  0x00 ; '.'
000000000021ea3a         db  0x00 ; '.'
000000000021ea3b         db  0x00 ; '.'
000000000021ea3c         db  0x00 ; '.'
000000000021ea3d         db  0x00 ; '.'
000000000021ea3e         db  0x00 ; '.'
000000000021ea3f         db  0x00 ; '.'
000000000021ea40         db  0x00 ; '.'
000000000021ea41         db  0x00 ; '.'
000000000021ea42         db  0x00 ; '.'
000000000021ea43         db  0x00 ; '.'
000000000021ea44         db  0x00 ; '.'
000000000021ea45         db  0x00 ; '.'
000000000021ea46         db  0x00 ; '.'
000000000021ea47         db  0x00 ; '.'
000000000021ea48         db  0x00 ; '.'
000000000021ea49         db  0x00 ; '.'
000000000021ea4a         db  0x00 ; '.'
000000000021ea4b         db  0x00 ; '.'
000000000021ea4c         db  0x00 ; '.'
000000000021ea4d         db  0x00 ; '.'
000000000021ea4e         db  0x00 ; '.'
000000000021ea4f         db  0x00 ; '.'
000000000021ea50         db  0x00 ; '.'
000000000021ea51         db  0x00 ; '.'
000000000021ea52         db  0x00 ; '.'
000000000021ea53         db  0x00 ; '.'
000000000021ea54         db  0x00 ; '.'
000000000021ea55         db  0x00 ; '.'
000000000021ea56         db  0x00 ; '.'
000000000021ea57         db  0x00 ; '.'
000000000021ea58         db  0x00 ; '.'
000000000021ea59         db  0x00 ; '.'
000000000021ea5a         db  0x00 ; '.'
000000000021ea5b         db  0x00 ; '.'
000000000021ea5c         db  0x00 ; '.'
000000000021ea5d         db  0x00 ; '.'
000000000021ea5e         db  0x00 ; '.'
000000000021ea5f         db  0x00 ; '.'
000000000021ea60         db  0x00 ; '.'
000000000021ea61         db  0x00 ; '.'
000000000021ea62         db  0x00 ; '.'
000000000021ea63         db  0x00 ; '.'
000000000021ea64         db  0x00 ; '.'
000000000021ea65         db  0x00 ; '.'
000000000021ea66         db  0x00 ; '.'
000000000021ea67         db  0x00 ; '.'
000000000021ea68         db  0x00 ; '.'
000000000021ea69         db  0x00 ; '.'
000000000021ea6a         db  0x00 ; '.'
000000000021ea6b         db  0x00 ; '.'
000000000021ea6c         db  0x00 ; '.'
000000000021ea6d         db  0x00 ; '.'
000000000021ea6e         db  0x00 ; '.'
000000000021ea6f         db  0x00 ; '.'
000000000021ea70         db  0x00 ; '.'
000000000021ea71         db  0x00 ; '.'
000000000021ea72         db  0x00 ; '.'
000000000021ea73         db  0x00 ; '.'
000000000021ea74         db  0x00 ; '.'
000000000021ea75         db  0x00 ; '.'
000000000021ea76         db  0x00 ; '.'
000000000021ea77         db  0x00 ; '.'
000000000021ea78         db  0x00 ; '.'
000000000021ea79         db  0x00 ; '.'
000000000021ea7a         db  0x00 ; '.'
000000000021ea7b         db  0x00 ; '.'
000000000021ea7c         db  0x00 ; '.'
000000000021ea7d         db  0x00 ; '.'
000000000021ea7e         db  0x00 ; '.'
000000000021ea7f         db  0x00 ; '.'
000000000021ea80         db  0x00 ; '.'
000000000021ea81         db  0x00 ; '.'
000000000021ea82         db  0x00 ; '.'
000000000021ea83         db  0x00 ; '.'
000000000021ea84         db  0x00 ; '.'
000000000021ea85         db  0x00 ; '.'
000000000021ea86         db  0x00 ; '.'
000000000021ea87         db  0x00 ; '.'
000000000021ea88         db  0x00 ; '.'
000000000021ea89         db  0x00 ; '.'
000000000021ea8a         db  0x00 ; '.'
000000000021ea8b         db  0x00 ; '.'
000000000021ea8c         db  0x00 ; '.'
000000000021ea8d         db  0x00 ; '.'
000000000021ea8e         db  0x00 ; '.'
000000000021ea8f         db  0x00 ; '.'
000000000021ea90         db  0x00 ; '.'
000000000021ea91         db  0x00 ; '.'
000000000021ea92         db  0x00 ; '.'
000000000021ea93         db  0x00 ; '.'
000000000021ea94         db  0x00 ; '.'
000000000021ea95         db  0x00 ; '.'
000000000021ea96         db  0x00 ; '.'
000000000021ea97         db  0x00 ; '.'
000000000021ea98         db  0x00 ; '.'
000000000021ea99         db  0x00 ; '.'
000000000021ea9a         db  0x00 ; '.'
000000000021ea9b         db  0x00 ; '.'
000000000021ea9c         db  0x00 ; '.'
000000000021ea9d         db  0x00 ; '.'
000000000021ea9e         db  0x00 ; '.'
000000000021ea9f         db  0x00 ; '.'
000000000021eaa0         db  0x00 ; '.'
000000000021eaa1         db  0x00 ; '.'
000000000021eaa2         db  0x00 ; '.'
000000000021eaa3         db  0x00 ; '.'
000000000021eaa4         db  0x00 ; '.'
000000000021eaa5         db  0x00 ; '.'
000000000021eaa6         db  0x00 ; '.'
000000000021eaa7         db  0x00 ; '.'
000000000021eaa8         db  0x00 ; '.'
000000000021eaa9         db  0x00 ; '.'
000000000021eaaa         db  0x00 ; '.'
000000000021eaab         db  0x00 ; '.'
000000000021eaac         db  0x00 ; '.'
000000000021eaad         db  0x00 ; '.'
000000000021eaae         db  0x00 ; '.'
000000000021eaaf         db  0x00 ; '.'
000000000021eab0         db  0x00 ; '.'
000000000021eab1         db  0x00 ; '.'
000000000021eab2         db  0x00 ; '.'
000000000021eab3         db  0x00 ; '.'
000000000021eab4         db  0x00 ; '.'
000000000021eab5         db  0x00 ; '.'
000000000021eab6         db  0x00 ; '.'
000000000021eab7         db  0x00 ; '.'
000000000021eab8         db  0x00 ; '.'
000000000021eab9         db  0x00 ; '.'
000000000021eaba         db  0x00 ; '.'
000000000021eabb         db  0x00 ; '.'
000000000021eabc         db  0x00 ; '.'
000000000021eabd         db  0x00 ; '.'
000000000021eabe         db  0x00 ; '.'
000000000021eabf         db  0x00 ; '.'
000000000021eac0         db  0x00 ; '.'
000000000021eac1         db  0x00 ; '.'
000000000021eac2         db  0x00 ; '.'
000000000021eac3         db  0x00 ; '.'
000000000021eac4         db  0x00 ; '.'
000000000021eac5         db  0x00 ; '.'
000000000021eac6         db  0x00 ; '.'
000000000021eac7         db  0x00 ; '.'
000000000021eac8         db  0x00 ; '.'
000000000021eac9         db  0x00 ; '.'
000000000021eaca         db  0x00 ; '.'
000000000021eacb         db  0x00 ; '.'
000000000021eacc         db  0x00 ; '.'
000000000021eacd         db  0x00 ; '.'
000000000021eace         db  0x00 ; '.'
000000000021eacf         db  0x00 ; '.'
000000000021ead0         db  0x00 ; '.'
000000000021ead1         db  0x00 ; '.'
000000000021ead2         db  0x00 ; '.'
000000000021ead3         db  0x00 ; '.'
000000000021ead4         db  0x00 ; '.'
000000000021ead5         db  0x00 ; '.'
000000000021ead6         db  0x00 ; '.'
000000000021ead7         db  0x00 ; '.'
000000000021ead8         db  0x00 ; '.'
000000000021ead9         db  0x00 ; '.'
000000000021eada         db  0x00 ; '.'
000000000021eadb         db  0x00 ; '.'
000000000021eadc         db  0x00 ; '.'
000000000021eadd         db  0x00 ; '.'
000000000021eade         db  0x00 ; '.'
000000000021eadf         db  0x00 ; '.'
000000000021eae0         db  0x00 ; '.'
000000000021eae1         db  0x00 ; '.'
000000000021eae2         db  0x00 ; '.'
000000000021eae3         db  0x00 ; '.'
000000000021eae4         db  0x00 ; '.'
000000000021eae5         db  0x00 ; '.'
000000000021eae6         db  0x00 ; '.'
000000000021eae7         db  0x00 ; '.'
000000000021eae8         db  0x00 ; '.'
000000000021eae9         db  0x00 ; '.'
000000000021eaea         db  0x00 ; '.'
000000000021eaeb         db  0x00 ; '.'
000000000021eaec         db  0x00 ; '.'
000000000021eaed         db  0x00 ; '.'
000000000021eaee         db  0x00 ; '.'
000000000021eaef         db  0x00 ; '.'
000000000021eaf0         db  0x00 ; '.'
000000000021eaf1         db  0x00 ; '.'
000000000021eaf2         db  0x00 ; '.'
000000000021eaf3         db  0x00 ; '.'
000000000021eaf4         db  0x00 ; '.'
000000000021eaf5         db  0x00 ; '.'
000000000021eaf6         db  0x00 ; '.'
000000000021eaf7         db  0x00 ; '.'
000000000021eaf8         db  0x00 ; '.'
000000000021eaf9         db  0x00 ; '.'
000000000021eafa         db  0x00 ; '.'
000000000021eafb         db  0x00 ; '.'
000000000021eafc         db  0x00 ; '.'
000000000021eafd         db  0x00 ; '.'
000000000021eafe         db  0x00 ; '.'
000000000021eaff         db  0x00 ; '.'
000000000021eb00         db  0x00 ; '.'
000000000021eb01         db  0x00 ; '.'
000000000021eb02         db  0x00 ; '.'
000000000021eb03         db  0x00 ; '.'
000000000021eb04         db  0x00 ; '.'
000000000021eb05         db  0x00 ; '.'
000000000021eb06         db  0x00 ; '.'
000000000021eb07         db  0x00 ; '.'
000000000021eb08         db  0x00 ; '.'
000000000021eb09         db  0x00 ; '.'
000000000021eb0a         db  0x00 ; '.'
000000000021eb0b         db  0x00 ; '.'
000000000021eb0c         db  0x00 ; '.'
000000000021eb0d         db  0x00 ; '.'
000000000021eb0e         db  0x00 ; '.'
000000000021eb0f         db  0x00 ; '.'
000000000021eb10         db  0x00 ; '.'
000000000021eb11         db  0x00 ; '.'
000000000021eb12         db  0x00 ; '.'
000000000021eb13         db  0x00 ; '.'
000000000021eb14         db  0x00 ; '.'
000000000021eb15         db  0x00 ; '.'
000000000021eb16         db  0x00 ; '.'
000000000021eb17         db  0x00 ; '.'
000000000021eb18         db  0x00 ; '.'
000000000021eb19         db  0x00 ; '.'
000000000021eb1a         db  0x00 ; '.'
000000000021eb1b         db  0x00 ; '.'
000000000021eb1c         db  0x00 ; '.'
000000000021eb1d         db  0x00 ; '.'
000000000021eb1e         db  0x00 ; '.'
000000000021eb1f         db  0x00 ; '.'
000000000021eb20         db  0x00 ; '.'
000000000021eb21         db  0x00 ; '.'
000000000021eb22         db  0x00 ; '.'
000000000021eb23         db  0x00 ; '.'
000000000021eb24         db  0x00 ; '.'
000000000021eb25         db  0x00 ; '.'
000000000021eb26         db  0x00 ; '.'
000000000021eb27         db  0x00 ; '.'
000000000021eb28         db  0x00 ; '.'
000000000021eb29         db  0x00 ; '.'
000000000021eb2a         db  0x00 ; '.'
000000000021eb2b         db  0x00 ; '.'
000000000021eb2c         db  0x00 ; '.'
000000000021eb2d         db  0x00 ; '.'
000000000021eb2e         db  0x00 ; '.'
000000000021eb2f         db  0x00 ; '.'
000000000021eb30         db  0x00 ; '.'
000000000021eb31         db  0x00 ; '.'
000000000021eb32         db  0x00 ; '.'
000000000021eb33         db  0x00 ; '.'
000000000021eb34         db  0x00 ; '.'
000000000021eb35         db  0x00 ; '.'
000000000021eb36         db  0x00 ; '.'
000000000021eb37         db  0x00 ; '.'
000000000021eb38         db  0x00 ; '.'
000000000021eb39         db  0x00 ; '.'
000000000021eb3a         db  0x00 ; '.'
000000000021eb3b         db  0x00 ; '.'
000000000021eb3c         db  0x00 ; '.'
000000000021eb3d         db  0x00 ; '.'
000000000021eb3e         db  0x00 ; '.'
000000000021eb3f         db  0x00 ; '.'
000000000021eb40         db  0x00 ; '.'
000000000021eb41         db  0x00 ; '.'
000000000021eb42         db  0x00 ; '.'
000000000021eb43         db  0x00 ; '.'
000000000021eb44         db  0x00 ; '.'
000000000021eb45         db  0x00 ; '.'
000000000021eb46         db  0x00 ; '.'
000000000021eb47         db  0x00 ; '.'
000000000021eb48         db  0x00 ; '.'
000000000021eb49         db  0x00 ; '.'
000000000021eb4a         db  0x00 ; '.'
000000000021eb4b         db  0x00 ; '.'
000000000021eb4c         db  0x00 ; '.'
000000000021eb4d         db  0x00 ; '.'
000000000021eb4e         db  0x00 ; '.'
000000000021eb4f         db  0x00 ; '.'
000000000021eb50         db  0x00 ; '.'
000000000021eb51         db  0x00 ; '.'
000000000021eb52         db  0x00 ; '.'
000000000021eb53         db  0x00 ; '.'
000000000021eb54         db  0x00 ; '.'
000000000021eb55         db  0x00 ; '.'
000000000021eb56         db  0x00 ; '.'
000000000021eb57         db  0x00 ; '.'
000000000021eb58         db  0x00 ; '.'
000000000021eb59         db  0x00 ; '.'
000000000021eb5a         db  0x00 ; '.'
000000000021eb5b         db  0x00 ; '.'
000000000021eb5c         db  0x00 ; '.'
000000000021eb5d         db  0x00 ; '.'
000000000021eb5e         db  0x00 ; '.'
000000000021eb5f         db  0x00 ; '.'
000000000021eb60         db  0x00 ; '.'
000000000021eb61         db  0x00 ; '.'
000000000021eb62         db  0x00 ; '.'
000000000021eb63         db  0x00 ; '.'
000000000021eb64         db  0x00 ; '.'
000000000021eb65         db  0x00 ; '.'
000000000021eb66         db  0x00 ; '.'
000000000021eb67         db  0x00 ; '.'
000000000021eb68         db  0x00 ; '.'
000000000021eb69         db  0x00 ; '.'
000000000021eb6a         db  0x00 ; '.'
000000000021eb6b         db  0x00 ; '.'
000000000021eb6c         db  0x00 ; '.'
000000000021eb6d         db  0x00 ; '.'
000000000021eb6e         db  0x00 ; '.'
000000000021eb6f         db  0x00 ; '.'
000000000021eb70         db  0x00 ; '.'
000000000021eb71         db  0x00 ; '.'
000000000021eb72         db  0x00 ; '.'
000000000021eb73         db  0x00 ; '.'
000000000021eb74         db  0x00 ; '.'
000000000021eb75         db  0x00 ; '.'
000000000021eb76         db  0x00 ; '.'
000000000021eb77         db  0x00 ; '.'
000000000021eb78         db  0x00 ; '.'
000000000021eb79         db  0x00 ; '.'
000000000021eb7a         db  0x00 ; '.'
000000000021eb7b         db  0x00 ; '.'
000000000021eb7c         db  0x00 ; '.'
000000000021eb7d         db  0x00 ; '.'
000000000021eb7e         db  0x00 ; '.'
000000000021eb7f         db  0x00 ; '.'
000000000021eb80         db  0x00 ; '.'
000000000021eb81         db  0x00 ; '.'
000000000021eb82         db  0x00 ; '.'
000000000021eb83         db  0x00 ; '.'
000000000021eb84         db  0x00 ; '.'
000000000021eb85         db  0x00 ; '.'
000000000021eb86         db  0x00 ; '.'
000000000021eb87         db  0x00 ; '.'
000000000021eb88         db  0x00 ; '.'
000000000021eb89         db  0x00 ; '.'
000000000021eb8a         db  0x00 ; '.'
000000000021eb8b         db  0x00 ; '.'
000000000021eb8c         db  0x00 ; '.'
000000000021eb8d         db  0x00 ; '.'
000000000021eb8e         db  0x00 ; '.'
000000000021eb8f         db  0x00 ; '.'
000000000021eb90         db  0x00 ; '.'
000000000021eb91         db  0x00 ; '.'
000000000021eb92         db  0x00 ; '.'
000000000021eb93         db  0x00 ; '.'
000000000021eb94         db  0x00 ; '.'
000000000021eb95         db  0x00 ; '.'
000000000021eb96         db  0x00 ; '.'
000000000021eb97         db  0x00 ; '.'
000000000021eb98         db  0x00 ; '.'
000000000021eb99         db  0x00 ; '.'
000000000021eb9a         db  0x00 ; '.'
000000000021eb9b         db  0x00 ; '.'
000000000021eb9c         db  0x00 ; '.'
000000000021eb9d         db  0x00 ; '.'
000000000021eb9e         db  0x00 ; '.'
000000000021eb9f         db  0x00 ; '.'
000000000021eba0         db  0x00 ; '.'
000000000021eba1         db  0x00 ; '.'
000000000021eba2         db  0x00 ; '.'
000000000021eba3         db  0x00 ; '.'
000000000021eba4         db  0x00 ; '.'
000000000021eba5         db  0x00 ; '.'
000000000021eba6         db  0x00 ; '.'
000000000021eba7         db  0x00 ; '.'
000000000021eba8         db  0x00 ; '.'
000000000021eba9         db  0x00 ; '.'
000000000021ebaa         db  0x00 ; '.'
000000000021ebab         db  0x00 ; '.'
000000000021ebac         db  0x00 ; '.'
000000000021ebad         db  0x00 ; '.'
000000000021ebae         db  0x00 ; '.'
000000000021ebaf         db  0x00 ; '.'
000000000021ebb0         db  0x00 ; '.'
000000000021ebb1         db  0x00 ; '.'
000000000021ebb2         db  0x00 ; '.'
000000000021ebb3         db  0x00 ; '.'
000000000021ebb4         db  0x00 ; '.'
000000000021ebb5         db  0x00 ; '.'
000000000021ebb6         db  0x00 ; '.'
000000000021ebb7         db  0x00 ; '.'
000000000021ebb8         db  0x00 ; '.'
000000000021ebb9         db  0x00 ; '.'
000000000021ebba         db  0x00 ; '.'
000000000021ebbb         db  0x00 ; '.'
000000000021ebbc         db  0x00 ; '.'
000000000021ebbd         db  0x00 ; '.'
000000000021ebbe         db  0x00 ; '.'
000000000021ebbf         db  0x00 ; '.'
000000000021ebc0         db  0x00 ; '.'
000000000021ebc1         db  0x00 ; '.'
000000000021ebc2         db  0x00 ; '.'
000000000021ebc3         db  0x00 ; '.'
000000000021ebc4         db  0x00 ; '.'
000000000021ebc5         db  0x00 ; '.'
000000000021ebc6         db  0x00 ; '.'
000000000021ebc7         db  0x00 ; '.'
000000000021ebc8         db  0x00 ; '.'
000000000021ebc9         db  0x00 ; '.'
000000000021ebca         db  0x00 ; '.'
000000000021ebcb         db  0x00 ; '.'
000000000021ebcc         db  0x00 ; '.'
000000000021ebcd         db  0x00 ; '.'
000000000021ebce         db  0x00 ; '.'
000000000021ebcf         db  0x00 ; '.'
000000000021ebd0         db  0x00 ; '.'
000000000021ebd1         db  0x00 ; '.'
000000000021ebd2         db  0x00 ; '.'
000000000021ebd3         db  0x00 ; '.'
000000000021ebd4         db  0x00 ; '.'
000000000021ebd5         db  0x00 ; '.'
000000000021ebd6         db  0x00 ; '.'
000000000021ebd7         db  0x00 ; '.'
000000000021ebd8         db  0x00 ; '.'
000000000021ebd9         db  0x00 ; '.'
000000000021ebda         db  0x00 ; '.'
000000000021ebdb         db  0x00 ; '.'
000000000021ebdc         db  0x00 ; '.'
000000000021ebdd         db  0x00 ; '.'
000000000021ebde         db  0x00 ; '.'
000000000021ebdf         db  0x00 ; '.'
000000000021ebe0         db  0x00 ; '.'
000000000021ebe1         db  0x00 ; '.'
000000000021ebe2         db  0x00 ; '.'
000000000021ebe3         db  0x00 ; '.'
000000000021ebe4         db  0x00 ; '.'
000000000021ebe5         db  0x00 ; '.'
000000000021ebe6         db  0x00 ; '.'
000000000021ebe7         db  0x00 ; '.'
000000000021ebe8         db  0x00 ; '.'
000000000021ebe9         db  0x00 ; '.'
000000000021ebea         db  0x00 ; '.'
000000000021ebeb         db  0x00 ; '.'
000000000021ebec         db  0x00 ; '.'
000000000021ebed         db  0x00 ; '.'
000000000021ebee         db  0x00 ; '.'
000000000021ebef         db  0x00 ; '.'
000000000021ebf0         db  0x00 ; '.'
000000000021ebf1         db  0x00 ; '.'
000000000021ebf2         db  0x00 ; '.'
000000000021ebf3         db  0x00 ; '.'
000000000021ebf4         db  0x00 ; '.'
000000000021ebf5         db  0x00 ; '.'
000000000021ebf6         db  0x00 ; '.'
000000000021ebf7         db  0x00 ; '.'
000000000021ebf8         db  0x00 ; '.'
000000000021ebf9         db  0x00 ; '.'
000000000021ebfa         db  0x00 ; '.'
000000000021ebfb         db  0x00 ; '.'
000000000021ebfc         db  0x00 ; '.'
000000000021ebfd         db  0x00 ; '.'
000000000021ebfe         db  0x00 ; '.'
000000000021ebff         db  0x00 ; '.'
000000000021ec00         db  0x00 ; '.'
000000000021ec01         db  0x00 ; '.'
000000000021ec02         db  0x00 ; '.'
000000000021ec03         db  0x00 ; '.'
000000000021ec04         db  0x00 ; '.'
000000000021ec05         db  0x00 ; '.'
000000000021ec06         db  0x00 ; '.'
000000000021ec07         db  0x00 ; '.'
000000000021ec08         db  0x00 ; '.'
000000000021ec09         db  0x00 ; '.'
000000000021ec0a         db  0x00 ; '.'
000000000021ec0b         db  0x00 ; '.'
000000000021ec0c         db  0x00 ; '.'
000000000021ec0d         db  0x00 ; '.'
000000000021ec0e         db  0x00 ; '.'
000000000021ec0f         db  0x00 ; '.'
000000000021ec10         db  0x00 ; '.'
000000000021ec11         db  0x00 ; '.'
000000000021ec12         db  0x00 ; '.'
000000000021ec13         db  0x00 ; '.'
000000000021ec14         db  0x00 ; '.'
000000000021ec15         db  0x00 ; '.'
000000000021ec16         db  0x00 ; '.'
000000000021ec17         db  0x00 ; '.'
000000000021ec18         db  0x00 ; '.'
000000000021ec19         db  0x00 ; '.'
000000000021ec1a         db  0x00 ; '.'
000000000021ec1b         db  0x00 ; '.'
000000000021ec1c         db  0x00 ; '.'
000000000021ec1d         db  0x00 ; '.'
000000000021ec1e         db  0x00 ; '.'
000000000021ec1f         db  0x00 ; '.'
000000000021ec20         db  0x00 ; '.'
000000000021ec21         db  0x00 ; '.'
000000000021ec22         db  0x00 ; '.'
000000000021ec23         db  0x00 ; '.'
000000000021ec24         db  0x00 ; '.'
000000000021ec25         db  0x00 ; '.'
000000000021ec26         db  0x00 ; '.'
000000000021ec27         db  0x00 ; '.'
000000000021ec28         db  0x00 ; '.'
000000000021ec29         db  0x00 ; '.'
000000000021ec2a         db  0x00 ; '.'
000000000021ec2b         db  0x00 ; '.'
000000000021ec2c         db  0x00 ; '.'
000000000021ec2d         db  0x00 ; '.'
000000000021ec2e         db  0x00 ; '.'
000000000021ec2f         db  0x00 ; '.'
000000000021ec30         db  0x00 ; '.'
000000000021ec31         db  0x00 ; '.'
000000000021ec32         db  0x00 ; '.'
000000000021ec33         db  0x00 ; '.'
000000000021ec34         db  0x00 ; '.'
000000000021ec35         db  0x00 ; '.'
000000000021ec36         db  0x00 ; '.'
000000000021ec37         db  0x00 ; '.'
000000000021ec38         db  0x00 ; '.'
000000000021ec39         db  0x00 ; '.'
000000000021ec3a         db  0x00 ; '.'
000000000021ec3b         db  0x00 ; '.'
000000000021ec3c         db  0x00 ; '.'
000000000021ec3d         db  0x00 ; '.'
000000000021ec3e         db  0x00 ; '.'
000000000021ec3f         db  0x00 ; '.'
000000000021ec40         db  0x00 ; '.'
000000000021ec41         db  0x00 ; '.'
000000000021ec42         db  0x00 ; '.'
000000000021ec43         db  0x00 ; '.'
000000000021ec44         db  0x00 ; '.'
000000000021ec45         db  0x00 ; '.'
000000000021ec46         db  0x00 ; '.'
000000000021ec47         db  0x00 ; '.'
000000000021ec48         db  0x00 ; '.'
000000000021ec49         db  0x00 ; '.'
000000000021ec4a         db  0x00 ; '.'
000000000021ec4b         db  0x00 ; '.'
000000000021ec4c         db  0x00 ; '.'
000000000021ec4d         db  0x00 ; '.'
000000000021ec4e         db  0x00 ; '.'
000000000021ec4f         db  0x00 ; '.'
000000000021ec50         db  0x00 ; '.'
000000000021ec51         db  0x00 ; '.'
000000000021ec52         db  0x00 ; '.'
000000000021ec53         db  0x00 ; '.'
000000000021ec54         db  0x00 ; '.'
000000000021ec55         db  0x00 ; '.'
000000000021ec56         db  0x00 ; '.'
000000000021ec57         db  0x00 ; '.'
000000000021ec58         db  0x00 ; '.'
000000000021ec59         db  0x00 ; '.'
000000000021ec5a         db  0x00 ; '.'
000000000021ec5b         db  0x00 ; '.'
000000000021ec5c         db  0x00 ; '.'
000000000021ec5d         db  0x00 ; '.'
000000000021ec5e         db  0x00 ; '.'
000000000021ec5f         db  0x00 ; '.'
000000000021ec60         db  0x00 ; '.'
000000000021ec61         db  0x00 ; '.'
000000000021ec62         db  0x00 ; '.'
000000000021ec63         db  0x00 ; '.'
000000000021ec64         db  0x00 ; '.'
000000000021ec65         db  0x00 ; '.'
000000000021ec66         db  0x00 ; '.'
000000000021ec67         db  0x00 ; '.'
000000000021ec68         db  0x00 ; '.'
000000000021ec69         db  0x00 ; '.'
000000000021ec6a         db  0x00 ; '.'
000000000021ec6b         db  0x00 ; '.'
000000000021ec6c         db  0x00 ; '.'
000000000021ec6d         db  0x00 ; '.'
000000000021ec6e         db  0x00 ; '.'
000000000021ec6f         db  0x00 ; '.'
000000000021ec70         db  0x00 ; '.'
000000000021ec71         db  0x00 ; '.'
000000000021ec72         db  0x00 ; '.'
000000000021ec73         db  0x00 ; '.'
000000000021ec74         db  0x00 ; '.'
000000000021ec75         db  0x00 ; '.'
000000000021ec76         db  0x00 ; '.'
000000000021ec77         db  0x00 ; '.'
000000000021ec78         db  0x00 ; '.'
000000000021ec79         db  0x00 ; '.'
000000000021ec7a         db  0x00 ; '.'
000000000021ec7b         db  0x00 ; '.'
000000000021ec7c         db  0x00 ; '.'
000000000021ec7d         db  0x00 ; '.'
000000000021ec7e         db  0x00 ; '.'
000000000021ec7f         db  0x00 ; '.'
000000000021ec80         db  0x00 ; '.'
000000000021ec81         db  0x00 ; '.'
000000000021ec82         db  0x00 ; '.'
000000000021ec83         db  0x00 ; '.'
000000000021ec84         db  0x00 ; '.'
000000000021ec85         db  0x00 ; '.'
000000000021ec86         db  0x00 ; '.'
000000000021ec87         db  0x00 ; '.'
000000000021ec88         db  0x00 ; '.'
000000000021ec89         db  0x00 ; '.'
000000000021ec8a         db  0x00 ; '.'
000000000021ec8b         db  0x00 ; '.'
000000000021ec8c         db  0x00 ; '.'
000000000021ec8d         db  0x00 ; '.'
000000000021ec8e         db  0x00 ; '.'
000000000021ec8f         db  0x00 ; '.'
000000000021ec90         db  0x00 ; '.'
000000000021ec91         db  0x00 ; '.'
000000000021ec92         db  0x00 ; '.'
000000000021ec93         db  0x00 ; '.'
000000000021ec94         db  0x00 ; '.'
000000000021ec95         db  0x00 ; '.'
000000000021ec96         db  0x00 ; '.'
000000000021ec97         db  0x00 ; '.'
000000000021ec98         db  0x00 ; '.'
000000000021ec99         db  0x00 ; '.'
000000000021ec9a         db  0x00 ; '.'
000000000021ec9b         db  0x00 ; '.'
000000000021ec9c         db  0x00 ; '.'
000000000021ec9d         db  0x00 ; '.'
000000000021ec9e         db  0x00 ; '.'
000000000021ec9f         db  0x00 ; '.'
000000000021eca0         db  0x00 ; '.'
000000000021eca1         db  0x00 ; '.'
000000000021eca2         db  0x00 ; '.'
000000000021eca3         db  0x00 ; '.'
000000000021eca4         db  0x00 ; '.'
000000000021eca5         db  0x00 ; '.'
000000000021eca6         db  0x00 ; '.'
000000000021eca7         db  0x00 ; '.'
000000000021eca8         db  0x00 ; '.'
000000000021eca9         db  0x00 ; '.'
000000000021ecaa         db  0x00 ; '.'
000000000021ecab         db  0x00 ; '.'
000000000021ecac         db  0x00 ; '.'
000000000021ecad         db  0x00 ; '.'
000000000021ecae         db  0x00 ; '.'
000000000021ecaf         db  0x00 ; '.'
000000000021ecb0         db  0x00 ; '.'
000000000021ecb1         db  0x00 ; '.'
000000000021ecb2         db  0x00 ; '.'
000000000021ecb3         db  0x00 ; '.'
000000000021ecb4         db  0x00 ; '.'
000000000021ecb5         db  0x00 ; '.'
000000000021ecb6         db  0x00 ; '.'
000000000021ecb7         db  0x00 ; '.'
000000000021ecb8         db  0x00 ; '.'
000000000021ecb9         db  0x00 ; '.'
000000000021ecba         db  0x00 ; '.'
000000000021ecbb         db  0x00 ; '.'
000000000021ecbc         db  0x00 ; '.'
000000000021ecbd         db  0x00 ; '.'
000000000021ecbe         db  0x00 ; '.'
000000000021ecbf         db  0x00 ; '.'
000000000021ecc0         db  0x00 ; '.'
000000000021ecc1         db  0x00 ; '.'
000000000021ecc2         db  0x00 ; '.'
000000000021ecc3         db  0x00 ; '.'
000000000021ecc4         db  0x00 ; '.'
000000000021ecc5         db  0x00 ; '.'
000000000021ecc6         db  0x00 ; '.'
000000000021ecc7         db  0x00 ; '.'
000000000021ecc8         db  0x00 ; '.'
000000000021ecc9         db  0x00 ; '.'
000000000021ecca         db  0x00 ; '.'
000000000021eccb         db  0x00 ; '.'
000000000021eccc         db  0x00 ; '.'
000000000021eccd         db  0x00 ; '.'
000000000021ecce         db  0x00 ; '.'
000000000021eccf         db  0x00 ; '.'
000000000021ecd0         db  0x00 ; '.'
000000000021ecd1         db  0x00 ; '.'
000000000021ecd2         db  0x00 ; '.'
000000000021ecd3         db  0x00 ; '.'
000000000021ecd4         db  0x00 ; '.'
000000000021ecd5         db  0x00 ; '.'
000000000021ecd6         db  0x00 ; '.'
000000000021ecd7         db  0x00 ; '.'
000000000021ecd8         db  0x00 ; '.'
000000000021ecd9         db  0x00 ; '.'
000000000021ecda         db  0x00 ; '.'
000000000021ecdb         db  0x00 ; '.'
000000000021ecdc         db  0x00 ; '.'
000000000021ecdd         db  0x00 ; '.'
000000000021ecde         db  0x00 ; '.'
000000000021ecdf         db  0x00 ; '.'
000000000021ece0         db  0x00 ; '.'
000000000021ece1         db  0x00 ; '.'
000000000021ece2         db  0x00 ; '.'
000000000021ece3         db  0x00 ; '.'
000000000021ece4         db  0x00 ; '.'
000000000021ece5         db  0x00 ; '.'
000000000021ece6         db  0x00 ; '.'
000000000021ece7         db  0x00 ; '.'
000000000021ece8         db  0x00 ; '.'
000000000021ece9         db  0x00 ; '.'
000000000021ecea         db  0x00 ; '.'
000000000021eceb         db  0x00 ; '.'
000000000021ecec         db  0x00 ; '.'
000000000021eced         db  0x00 ; '.'
000000000021ecee         db  0x00 ; '.'
000000000021ecef         db  0x00 ; '.'
000000000021ecf0         db  0x00 ; '.'
000000000021ecf1         db  0x00 ; '.'
000000000021ecf2         db  0x00 ; '.'
000000000021ecf3         db  0x00 ; '.'
000000000021ecf4         db  0x00 ; '.'
000000000021ecf5         db  0x00 ; '.'
000000000021ecf6         db  0x00 ; '.'
000000000021ecf7         db  0x00 ; '.'
000000000021ecf8         db  0x00 ; '.'
000000000021ecf9         db  0x00 ; '.'
000000000021ecfa         db  0x00 ; '.'
000000000021ecfb         db  0x00 ; '.'
000000000021ecfc         db  0x00 ; '.'
000000000021ecfd         db  0x00 ; '.'
000000000021ecfe         db  0x00 ; '.'
000000000021ecff         db  0x00 ; '.'
000000000021ed00         db  0x00 ; '.'
000000000021ed01         db  0x00 ; '.'
000000000021ed02         db  0x00 ; '.'
000000000021ed03         db  0x00 ; '.'
000000000021ed04         db  0x00 ; '.'
000000000021ed05         db  0x00 ; '.'
000000000021ed06         db  0x00 ; '.'
000000000021ed07         db  0x00 ; '.'
000000000021ed08         db  0x00 ; '.'
000000000021ed09         db  0x00 ; '.'
000000000021ed0a         db  0x00 ; '.'
000000000021ed0b         db  0x00 ; '.'
000000000021ed0c         db  0x00 ; '.'
000000000021ed0d         db  0x00 ; '.'
000000000021ed0e         db  0x00 ; '.'
000000000021ed0f         db  0x00 ; '.'
000000000021ed10         db  0x00 ; '.'
000000000021ed11         db  0x00 ; '.'
000000000021ed12         db  0x00 ; '.'
000000000021ed13         db  0x00 ; '.'
000000000021ed14         db  0x00 ; '.'
000000000021ed15         db  0x00 ; '.'
000000000021ed16         db  0x00 ; '.'
000000000021ed17         db  0x00 ; '.'
000000000021ed18         db  0x00 ; '.'
000000000021ed19         db  0x00 ; '.'
000000000021ed1a         db  0x00 ; '.'
000000000021ed1b         db  0x00 ; '.'
000000000021ed1c         db  0x00 ; '.'
000000000021ed1d         db  0x00 ; '.'
000000000021ed1e         db  0x00 ; '.'
000000000021ed1f         db  0x00 ; '.'
000000000021ed20         db  0x00 ; '.'
000000000021ed21         db  0x00 ; '.'
000000000021ed22         db  0x00 ; '.'
000000000021ed23         db  0x00 ; '.'
000000000021ed24         db  0x00 ; '.'
000000000021ed25         db  0x00 ; '.'
000000000021ed26         db  0x00 ; '.'
000000000021ed27         db  0x00 ; '.'
000000000021ed28         db  0x00 ; '.'
000000000021ed29         db  0x00 ; '.'
000000000021ed2a         db  0x00 ; '.'
000000000021ed2b         db  0x00 ; '.'
000000000021ed2c         db  0x00 ; '.'
000000000021ed2d         db  0x00 ; '.'
000000000021ed2e         db  0x00 ; '.'
000000000021ed2f         db  0x00 ; '.'
000000000021ed30         db  0x00 ; '.'
000000000021ed31         db  0x00 ; '.'
000000000021ed32         db  0x00 ; '.'
000000000021ed33         db  0x00 ; '.'
000000000021ed34         db  0x00 ; '.'
000000000021ed35         db  0x00 ; '.'
000000000021ed36         db  0x00 ; '.'
000000000021ed37         db  0x00 ; '.'
000000000021ed38         db  0x00 ; '.'
000000000021ed39         db  0x00 ; '.'
000000000021ed3a         db  0x00 ; '.'
000000000021ed3b         db  0x00 ; '.'
000000000021ed3c         db  0x00 ; '.'
000000000021ed3d         db  0x00 ; '.'
000000000021ed3e         db  0x00 ; '.'
000000000021ed3f         db  0x00 ; '.'
000000000021ed40         db  0x00 ; '.'
000000000021ed41         db  0x00 ; '.'
000000000021ed42         db  0x00 ; '.'
000000000021ed43         db  0x00 ; '.'
000000000021ed44         db  0x00 ; '.'
000000000021ed45         db  0x00 ; '.'
000000000021ed46         db  0x00 ; '.'
000000000021ed47         db  0x00 ; '.'
000000000021ed48         db  0x00 ; '.'
000000000021ed49         db  0x00 ; '.'
000000000021ed4a         db  0x00 ; '.'
000000000021ed4b         db  0x00 ; '.'
000000000021ed4c         db  0x00 ; '.'
000000000021ed4d         db  0x00 ; '.'
000000000021ed4e         db  0x00 ; '.'
000000000021ed4f         db  0x00 ; '.'
000000000021ed50         db  0x00 ; '.'
000000000021ed51         db  0x00 ; '.'
000000000021ed52         db  0x00 ; '.'
000000000021ed53         db  0x00 ; '.'
000000000021ed54         db  0x00 ; '.'
000000000021ed55         db  0x00 ; '.'
000000000021ed56         db  0x00 ; '.'
000000000021ed57         db  0x00 ; '.'
000000000021ed58         db  0x00 ; '.'
000000000021ed59         db  0x00 ; '.'
000000000021ed5a         db  0x00 ; '.'
000000000021ed5b         db  0x00 ; '.'
000000000021ed5c         db  0x00 ; '.'
000000000021ed5d         db  0x00 ; '.'
000000000021ed5e         db  0x00 ; '.'
000000000021ed5f         db  0x00 ; '.'
000000000021ed60         db  0x00 ; '.'
000000000021ed61         db  0x00 ; '.'
000000000021ed62         db  0x00 ; '.'
000000000021ed63         db  0x00 ; '.'
000000000021ed64         db  0x00 ; '.'
000000000021ed65         db  0x00 ; '.'
000000000021ed66         db  0x00 ; '.'
000000000021ed67         db  0x00 ; '.'
000000000021ed68         db  0x00 ; '.'
000000000021ed69         db  0x00 ; '.'
000000000021ed6a         db  0x00 ; '.'
000000000021ed6b         db  0x00 ; '.'
000000000021ed6c         db  0x00 ; '.'
000000000021ed6d         db  0x00 ; '.'
000000000021ed6e         db  0x00 ; '.'
000000000021ed6f         db  0x00 ; '.'
000000000021ed70         db  0x00 ; '.'
000000000021ed71         db  0x00 ; '.'
000000000021ed72         db  0x00 ; '.'
000000000021ed73         db  0x00 ; '.'
000000000021ed74         db  0x00 ; '.'
000000000021ed75         db  0x00 ; '.'
000000000021ed76         db  0x00 ; '.'
000000000021ed77         db  0x00 ; '.'
000000000021ed78         db  0x00 ; '.'
000000000021ed79         db  0x00 ; '.'
000000000021ed7a         db  0x00 ; '.'
000000000021ed7b         db  0x00 ; '.'
000000000021ed7c         db  0x00 ; '.'
000000000021ed7d         db  0x00 ; '.'
000000000021ed7e         db  0x00 ; '.'
000000000021ed7f         db  0x00 ; '.'
000000000021ed80         db  0x00 ; '.'
000000000021ed81         db  0x00 ; '.'
000000000021ed82         db  0x00 ; '.'
000000000021ed83         db  0x00 ; '.'
000000000021ed84         db  0x00 ; '.'
000000000021ed85         db  0x00 ; '.'
000000000021ed86         db  0x00 ; '.'
000000000021ed87         db  0x00 ; '.'
000000000021ed88         db  0x00 ; '.'
000000000021ed89         db  0x00 ; '.'
000000000021ed8a         db  0x00 ; '.'
000000000021ed8b         db  0x00 ; '.'
000000000021ed8c         db  0x00 ; '.'
000000000021ed8d         db  0x00 ; '.'
000000000021ed8e         db  0x00 ; '.'
000000000021ed8f         db  0x00 ; '.'
000000000021ed90         db  0x00 ; '.'
000000000021ed91         db  0x00 ; '.'
000000000021ed92         db  0x00 ; '.'
000000000021ed93         db  0x00 ; '.'
000000000021ed94         db  0x00 ; '.'
000000000021ed95         db  0x00 ; '.'
000000000021ed96         db  0x00 ; '.'
000000000021ed97         db  0x00 ; '.'
000000000021ed98         db  0x00 ; '.'
000000000021ed99         db  0x00 ; '.'
000000000021ed9a         db  0x00 ; '.'
000000000021ed9b         db  0x00 ; '.'
000000000021ed9c         db  0x00 ; '.'
000000000021ed9d         db  0x00 ; '.'
000000000021ed9e         db  0x00 ; '.'
000000000021ed9f         db  0x00 ; '.'
000000000021eda0         db  0x00 ; '.'
000000000021eda1         db  0x00 ; '.'
000000000021eda2         db  0x00 ; '.'
000000000021eda3         db  0x00 ; '.'
000000000021eda4         db  0x00 ; '.'
000000000021eda5         db  0x00 ; '.'
000000000021eda6         db  0x00 ; '.'
000000000021eda7         db  0x00 ; '.'
000000000021eda8         db  0x00 ; '.'
000000000021eda9         db  0x00 ; '.'
000000000021edaa         db  0x00 ; '.'
000000000021edab         db  0x00 ; '.'
000000000021edac         db  0x00 ; '.'
000000000021edad         db  0x00 ; '.'
000000000021edae         db  0x00 ; '.'
000000000021edaf         db  0x00 ; '.'
000000000021edb0         db  0x00 ; '.'
000000000021edb1         db  0x00 ; '.'
000000000021edb2         db  0x00 ; '.'
000000000021edb3         db  0x00 ; '.'
000000000021edb4         db  0x00 ; '.'
000000000021edb5         db  0x00 ; '.'
000000000021edb6         db  0x00 ; '.'
000000000021edb7         db  0x00 ; '.'
000000000021edb8         db  0x00 ; '.'
000000000021edb9         db  0x00 ; '.'
000000000021edba         db  0x00 ; '.'
000000000021edbb         db  0x00 ; '.'
000000000021edbc         db  0x00 ; '.'
000000000021edbd         db  0x00 ; '.'
000000000021edbe         db  0x00 ; '.'
000000000021edbf         db  0x00 ; '.'
000000000021edc0         db  0x00 ; '.'
000000000021edc1         db  0x00 ; '.'
000000000021edc2         db  0x00 ; '.'
000000000021edc3         db  0x00 ; '.'
000000000021edc4         db  0x00 ; '.'
000000000021edc5         db  0x00 ; '.'
000000000021edc6         db  0x00 ; '.'
000000000021edc7         db  0x00 ; '.'
000000000021edc8         db  0x00 ; '.'
000000000021edc9         db  0x00 ; '.'
000000000021edca         db  0x00 ; '.'
000000000021edcb         db  0x00 ; '.'
000000000021edcc         db  0x00 ; '.'
000000000021edcd         db  0x00 ; '.'
000000000021edce         db  0x00 ; '.'
000000000021edcf         db  0x00 ; '.'
000000000021edd0         db  0x00 ; '.'
000000000021edd1         db  0x00 ; '.'
000000000021edd2         db  0x00 ; '.'
000000000021edd3         db  0x00 ; '.'
000000000021edd4         db  0x00 ; '.'
000000000021edd5         db  0x00 ; '.'
000000000021edd6         db  0x00 ; '.'
000000000021edd7         db  0x00 ; '.'
000000000021edd8         db  0x00 ; '.'
000000000021edd9         db  0x00 ; '.'
000000000021edda         db  0x00 ; '.'
000000000021eddb         db  0x00 ; '.'
000000000021eddc         db  0x00 ; '.'
000000000021eddd         db  0x00 ; '.'
000000000021edde         db  0x00 ; '.'
000000000021eddf         db  0x00 ; '.'
000000000021ede0         db  0x00 ; '.'
000000000021ede1         db  0x00 ; '.'
000000000021ede2         db  0x00 ; '.'
000000000021ede3         db  0x00 ; '.'
000000000021ede4         db  0x00 ; '.'
000000000021ede5         db  0x00 ; '.'
000000000021ede6         db  0x00 ; '.'
000000000021ede7         db  0x00 ; '.'
000000000021ede8         db  0x00 ; '.'
000000000021ede9         db  0x00 ; '.'
000000000021edea         db  0x00 ; '.'
000000000021edeb         db  0x00 ; '.'
000000000021edec         db  0x00 ; '.'
000000000021eded         db  0x00 ; '.'
000000000021edee         db  0x00 ; '.'
000000000021edef         db  0x00 ; '.'
000000000021edf0         db  0x00 ; '.'
000000000021edf1         db  0x00 ; '.'
000000000021edf2         db  0x00 ; '.'
000000000021edf3         db  0x00 ; '.'
000000000021edf4         db  0x00 ; '.'
000000000021edf5         db  0x00 ; '.'
000000000021edf6         db  0x00 ; '.'
000000000021edf7         db  0x00 ; '.'
000000000021edf8         db  0x00 ; '.'
000000000021edf9         db  0x00 ; '.'
000000000021edfa         db  0x00 ; '.'
000000000021edfb         db  0x00 ; '.'
000000000021edfc         db  0x00 ; '.'
000000000021edfd         db  0x00 ; '.'
000000000021edfe         db  0x00 ; '.'
000000000021edff         db  0x00 ; '.'
000000000021ee00         db  0x00 ; '.'
000000000021ee01         db  0x00 ; '.'
000000000021ee02         db  0x00 ; '.'
000000000021ee03         db  0x00 ; '.'
000000000021ee04         db  0x00 ; '.'
000000000021ee05         db  0x00 ; '.'
000000000021ee06         db  0x00 ; '.'
000000000021ee07         db  0x00 ; '.'
000000000021ee08         db  0x00 ; '.'
000000000021ee09         db  0x00 ; '.'
000000000021ee0a         db  0x00 ; '.'
000000000021ee0b         db  0x00 ; '.'
000000000021ee0c         db  0x00 ; '.'
000000000021ee0d         db  0x00 ; '.'
000000000021ee0e         db  0x00 ; '.'
000000000021ee0f         db  0x00 ; '.'
000000000021ee10         db  0x00 ; '.'
000000000021ee11         db  0x00 ; '.'
000000000021ee12         db  0x00 ; '.'
000000000021ee13         db  0x00 ; '.'
000000000021ee14         db  0x00 ; '.'
000000000021ee15         db  0x00 ; '.'
000000000021ee16         db  0x00 ; '.'
000000000021ee17         db  0x00 ; '.'
000000000021ee18         db  0x00 ; '.'
000000000021ee19         db  0x00 ; '.'
000000000021ee1a         db  0x00 ; '.'
000000000021ee1b         db  0x00 ; '.'
000000000021ee1c         db  0x00 ; '.'
000000000021ee1d         db  0x00 ; '.'
000000000021ee1e         db  0x00 ; '.'
000000000021ee1f         db  0x00 ; '.'
000000000021ee20         db  0x00 ; '.'
000000000021ee21         db  0x00 ; '.'
000000000021ee22         db  0x00 ; '.'
000000000021ee23         db  0x00 ; '.'
000000000021ee24         db  0x00 ; '.'
000000000021ee25         db  0x00 ; '.'
000000000021ee26         db  0x00 ; '.'
000000000021ee27         db  0x00 ; '.'
000000000021ee28         db  0x00 ; '.'
000000000021ee29         db  0x00 ; '.'
000000000021ee2a         db  0x00 ; '.'
000000000021ee2b         db  0x00 ; '.'
000000000021ee2c         db  0x00 ; '.'
000000000021ee2d         db  0x00 ; '.'
000000000021ee2e         db  0x00 ; '.'
000000000021ee2f         db  0x00 ; '.'
000000000021ee30         db  0x00 ; '.'
000000000021ee31         db  0x00 ; '.'
000000000021ee32         db  0x00 ; '.'
000000000021ee33         db  0x00 ; '.'
000000000021ee34         db  0x00 ; '.'
000000000021ee35         db  0x00 ; '.'
000000000021ee36         db  0x00 ; '.'
000000000021ee37         db  0x00 ; '.'
000000000021ee38         db  0x00 ; '.'
000000000021ee39         db  0x00 ; '.'
000000000021ee3a         db  0x00 ; '.'
000000000021ee3b         db  0x00 ; '.'
000000000021ee3c         db  0x00 ; '.'
000000000021ee3d         db  0x00 ; '.'
000000000021ee3e         db  0x00 ; '.'
000000000021ee3f         db  0x00 ; '.'
000000000021ee40         db  0x00 ; '.'
000000000021ee41         db  0x00 ; '.'
000000000021ee42         db  0x00 ; '.'
000000000021ee43         db  0x00 ; '.'
000000000021ee44         db  0x00 ; '.'
000000000021ee45         db  0x00 ; '.'
000000000021ee46         db  0x00 ; '.'
000000000021ee47         db  0x00 ; '.'
000000000021ee48         db  0x00 ; '.'
000000000021ee49         db  0x00 ; '.'
000000000021ee4a         db  0x00 ; '.'
000000000021ee4b         db  0x00 ; '.'
000000000021ee4c         db  0x00 ; '.'
000000000021ee4d         db  0x00 ; '.'
000000000021ee4e         db  0x00 ; '.'
000000000021ee4f         db  0x00 ; '.'
000000000021ee50         db  0x00 ; '.'
000000000021ee51         db  0x00 ; '.'
000000000021ee52         db  0x00 ; '.'
000000000021ee53         db  0x00 ; '.'
000000000021ee54         db  0x00 ; '.'
000000000021ee55         db  0x00 ; '.'
000000000021ee56         db  0x00 ; '.'
000000000021ee57         db  0x00 ; '.'
000000000021ee58         db  0x00 ; '.'
000000000021ee59         db  0x00 ; '.'
000000000021ee5a         db  0x00 ; '.'
000000000021ee5b         db  0x00 ; '.'
000000000021ee5c         db  0x00 ; '.'
000000000021ee5d         db  0x00 ; '.'
000000000021ee5e         db  0x00 ; '.'
000000000021ee5f         db  0x00 ; '.'
000000000021ee60         db  0x00 ; '.'
000000000021ee61         db  0x00 ; '.'
000000000021ee62         db  0x00 ; '.'
000000000021ee63         db  0x00 ; '.'
000000000021ee64         db  0x00 ; '.'
000000000021ee65         db  0x00 ; '.'
000000000021ee66         db  0x00 ; '.'
000000000021ee67         db  0x00 ; '.'
000000000021ee68         db  0x00 ; '.'
000000000021ee69         db  0x00 ; '.'
000000000021ee6a         db  0x00 ; '.'
000000000021ee6b         db  0x00 ; '.'
000000000021ee6c         db  0x00 ; '.'
000000000021ee6d         db  0x00 ; '.'
000000000021ee6e         db  0x00 ; '.'
000000000021ee6f         db  0x00 ; '.'
000000000021ee70         db  0x00 ; '.'
000000000021ee71         db  0x00 ; '.'
000000000021ee72         db  0x00 ; '.'
000000000021ee73         db  0x00 ; '.'
000000000021ee74         db  0x00 ; '.'
000000000021ee75         db  0x00 ; '.'
000000000021ee76         db  0x00 ; '.'
000000000021ee77         db  0x00 ; '.'
000000000021ee78         db  0x00 ; '.'
000000000021ee79         db  0x00 ; '.'
000000000021ee7a         db  0x00 ; '.'
000000000021ee7b         db  0x00 ; '.'
000000000021ee7c         db  0x00 ; '.'
000000000021ee7d         db  0x00 ; '.'
000000000021ee7e         db  0x00 ; '.'
000000000021ee7f         db  0x00 ; '.'
000000000021ee80         db  0x00 ; '.'
000000000021ee81         db  0x00 ; '.'
000000000021ee82         db  0x00 ; '.'
000000000021ee83         db  0x00 ; '.'
000000000021ee84         db  0x00 ; '.'
000000000021ee85         db  0x00 ; '.'
000000000021ee86         db  0x00 ; '.'
000000000021ee87         db  0x00 ; '.'
000000000021ee88         db  0x00 ; '.'
000000000021ee89         db  0x00 ; '.'
000000000021ee8a         db  0x00 ; '.'
000000000021ee8b         db  0x00 ; '.'
000000000021ee8c         db  0x00 ; '.'
000000000021ee8d         db  0x00 ; '.'
000000000021ee8e         db  0x00 ; '.'
000000000021ee8f         db  0x00 ; '.'
000000000021ee90         db  0x00 ; '.'
000000000021ee91         db  0x00 ; '.'
000000000021ee92         db  0x00 ; '.'
000000000021ee93         db  0x00 ; '.'
000000000021ee94         db  0x00 ; '.'
000000000021ee95         db  0x00 ; '.'
000000000021ee96         db  0x00 ; '.'
000000000021ee97         db  0x00 ; '.'
000000000021ee98         db  0x00 ; '.'
000000000021ee99         db  0x00 ; '.'
000000000021ee9a         db  0x00 ; '.'
000000000021ee9b         db  0x00 ; '.'
000000000021ee9c         db  0x00 ; '.'
000000000021ee9d         db  0x00 ; '.'
000000000021ee9e         db  0x00 ; '.'
000000000021ee9f         db  0x00 ; '.'
000000000021eea0         db  0x00 ; '.'
000000000021eea1         db  0x00 ; '.'
000000000021eea2         db  0x00 ; '.'
000000000021eea3         db  0x00 ; '.'
000000000021eea4         db  0x00 ; '.'
000000000021eea5         db  0x00 ; '.'
000000000021eea6         db  0x00 ; '.'
000000000021eea7         db  0x00 ; '.'
000000000021eea8         db  0x00 ; '.'
000000000021eea9         db  0x00 ; '.'
000000000021eeaa         db  0x00 ; '.'
000000000021eeab         db  0x00 ; '.'
000000000021eeac         db  0x00 ; '.'
000000000021eead         db  0x00 ; '.'
000000000021eeae         db  0x00 ; '.'
000000000021eeaf         db  0x00 ; '.'
000000000021eeb0         db  0x00 ; '.'
000000000021eeb1         db  0x00 ; '.'
000000000021eeb2         db  0x00 ; '.'
000000000021eeb3         db  0x00 ; '.'
000000000021eeb4         db  0x00 ; '.'
000000000021eeb5         db  0x00 ; '.'
000000000021eeb6         db  0x00 ; '.'
000000000021eeb7         db  0x00 ; '.'
000000000021eeb8         db  0x00 ; '.'
000000000021eeb9         db  0x00 ; '.'
000000000021eeba         db  0x00 ; '.'
000000000021eebb         db  0x00 ; '.'
000000000021eebc         db  0x00 ; '.'
000000000021eebd         db  0x00 ; '.'
000000000021eebe         db  0x00 ; '.'
000000000021eebf         db  0x00 ; '.'
000000000021eec0         db  0x00 ; '.'
000000000021eec1         db  0x00 ; '.'
000000000021eec2         db  0x00 ; '.'
000000000021eec3         db  0x00 ; '.'
000000000021eec4         db  0x00 ; '.'
000000000021eec5         db  0x00 ; '.'
000000000021eec6         db  0x00 ; '.'
000000000021eec7         db  0x00 ; '.'
000000000021eec8         db  0x00 ; '.'
000000000021eec9         db  0x00 ; '.'
000000000021eeca         db  0x00 ; '.'
000000000021eecb         db  0x00 ; '.'
000000000021eecc         db  0x00 ; '.'
000000000021eecd         db  0x00 ; '.'
000000000021eece         db  0x00 ; '.'
000000000021eecf         db  0x00 ; '.'
000000000021eed0         db  0x00 ; '.'
000000000021eed1         db  0x00 ; '.'
000000000021eed2         db  0x00 ; '.'
000000000021eed3         db  0x00 ; '.'
000000000021eed4         db  0x00 ; '.'
000000000021eed5         db  0x00 ; '.'
000000000021eed6         db  0x00 ; '.'
000000000021eed7         db  0x00 ; '.'
000000000021eed8         db  0x00 ; '.'
000000000021eed9         db  0x00 ; '.'
000000000021eeda         db  0x00 ; '.'
000000000021eedb         db  0x00 ; '.'
000000000021eedc         db  0x00 ; '.'
000000000021eedd         db  0x00 ; '.'
000000000021eede         db  0x00 ; '.'
000000000021eedf         db  0x00 ; '.'
000000000021eee0         db  0x00 ; '.'
000000000021eee1         db  0x00 ; '.'
000000000021eee2         db  0x00 ; '.'
000000000021eee3         db  0x00 ; '.'
000000000021eee4         db  0x00 ; '.'
000000000021eee5         db  0x00 ; '.'
000000000021eee6         db  0x00 ; '.'
000000000021eee7         db  0x00 ; '.'
000000000021eee8         db  0x00 ; '.'
000000000021eee9         db  0x00 ; '.'
000000000021eeea         db  0x00 ; '.'
000000000021eeeb         db  0x00 ; '.'
000000000021eeec         db  0x00 ; '.'
000000000021eeed         db  0x00 ; '.'
000000000021eeee         db  0x00 ; '.'
000000000021eeef         db  0x00 ; '.'
000000000021eef0         db  0x00 ; '.'
000000000021eef1         db  0x00 ; '.'
000000000021eef2         db  0x00 ; '.'
000000000021eef3         db  0x00 ; '.'
000000000021eef4         db  0x00 ; '.'
000000000021eef5         db  0x00 ; '.'
000000000021eef6         db  0x00 ; '.'
000000000021eef7         db  0x00 ; '.'
000000000021eef8         db  0x00 ; '.'
000000000021eef9         db  0x00 ; '.'
000000000021eefa         db  0x00 ; '.'
000000000021eefb         db  0x00 ; '.'
000000000021eefc         db  0x00 ; '.'
000000000021eefd         db  0x00 ; '.'
000000000021eefe         db  0x00 ; '.'
000000000021eeff         db  0x00 ; '.'
000000000021ef00         db  0x00 ; '.'
000000000021ef01         db  0x00 ; '.'
000000000021ef02         db  0x00 ; '.'
000000000021ef03         db  0x00 ; '.'
000000000021ef04         db  0x00 ; '.'
000000000021ef05         db  0x00 ; '.'
000000000021ef06         db  0x00 ; '.'
000000000021ef07         db  0x00 ; '.'
000000000021ef08         db  0x00 ; '.'
000000000021ef09         db  0x00 ; '.'
000000000021ef0a         db  0x00 ; '.'
000000000021ef0b         db  0x00 ; '.'
000000000021ef0c         db  0x00 ; '.'
000000000021ef0d         db  0x00 ; '.'
000000000021ef0e         db  0x00 ; '.'
000000000021ef0f         db  0x00 ; '.'
000000000021ef10         db  0x00 ; '.'
000000000021ef11         db  0x00 ; '.'
000000000021ef12         db  0x00 ; '.'
000000000021ef13         db  0x00 ; '.'
000000000021ef14         db  0x00 ; '.'
000000000021ef15         db  0x00 ; '.'
000000000021ef16         db  0x00 ; '.'
000000000021ef17         db  0x00 ; '.'
000000000021ef18         db  0x00 ; '.'
000000000021ef19         db  0x00 ; '.'
000000000021ef1a         db  0x00 ; '.'
000000000021ef1b         db  0x00 ; '.'
000000000021ef1c         db  0x00 ; '.'
000000000021ef1d         db  0x00 ; '.'
000000000021ef1e         db  0x00 ; '.'
000000000021ef1f         db  0x00 ; '.'
000000000021ef20         db  0x00 ; '.'
000000000021ef21         db  0x00 ; '.'
000000000021ef22         db  0x00 ; '.'
000000000021ef23         db  0x00 ; '.'
000000000021ef24         db  0x00 ; '.'
000000000021ef25         db  0x00 ; '.'
000000000021ef26         db  0x00 ; '.'
000000000021ef27         db  0x00 ; '.'
000000000021ef28         db  0x00 ; '.'
000000000021ef29         db  0x00 ; '.'
000000000021ef2a         db  0x00 ; '.'
000000000021ef2b         db  0x00 ; '.'
000000000021ef2c         db  0x00 ; '.'
000000000021ef2d         db  0x00 ; '.'
000000000021ef2e         db  0x00 ; '.'
000000000021ef2f         db  0x00 ; '.'
000000000021ef30         db  0x00 ; '.'
000000000021ef31         db  0x00 ; '.'
000000000021ef32         db  0x00 ; '.'
000000000021ef33         db  0x00 ; '.'
000000000021ef34         db  0x00 ; '.'
000000000021ef35         db  0x00 ; '.'
000000000021ef36         db  0x00 ; '.'
000000000021ef37         db  0x00 ; '.'
000000000021ef38         db  0x00 ; '.'
000000000021ef39         db  0x00 ; '.'
000000000021ef3a         db  0x00 ; '.'
000000000021ef3b         db  0x00 ; '.'
000000000021ef3c         db  0x00 ; '.'
000000000021ef3d         db  0x00 ; '.'
000000000021ef3e         db  0x00 ; '.'
000000000021ef3f         db  0x00 ; '.'
000000000021ef40         db  0x00 ; '.'
000000000021ef41         db  0x00 ; '.'
000000000021ef42         db  0x00 ; '.'
000000000021ef43         db  0x00 ; '.'
000000000021ef44         db  0x00 ; '.'
000000000021ef45         db  0x00 ; '.'
000000000021ef46         db  0x00 ; '.'
000000000021ef47         db  0x00 ; '.'
000000000021ef48         db  0x00 ; '.'
000000000021ef49         db  0x00 ; '.'
000000000021ef4a         db  0x00 ; '.'
000000000021ef4b         db  0x00 ; '.'
000000000021ef4c         db  0x00 ; '.'
000000000021ef4d         db  0x00 ; '.'
000000000021ef4e         db  0x00 ; '.'
000000000021ef4f         db  0x00 ; '.'
000000000021ef50         db  0x00 ; '.'
000000000021ef51         db  0x00 ; '.'
000000000021ef52         db  0x00 ; '.'
000000000021ef53         db  0x00 ; '.'
000000000021ef54         db  0x00 ; '.'
000000000021ef55         db  0x00 ; '.'
000000000021ef56         db  0x00 ; '.'
000000000021ef57         db  0x00 ; '.'
000000000021ef58         db  0x00 ; '.'
000000000021ef59         db  0x00 ; '.'
000000000021ef5a         db  0x00 ; '.'
000000000021ef5b         db  0x00 ; '.'
000000000021ef5c         db  0x00 ; '.'
000000000021ef5d         db  0x00 ; '.'
000000000021ef5e         db  0x00 ; '.'
000000000021ef5f         db  0x00 ; '.'
000000000021ef60         db  0x00 ; '.'
000000000021ef61         db  0x00 ; '.'
000000000021ef62         db  0x00 ; '.'
000000000021ef63         db  0x00 ; '.'
000000000021ef64         db  0x00 ; '.'
000000000021ef65         db  0x00 ; '.'
000000000021ef66         db  0x00 ; '.'
000000000021ef67         db  0x00 ; '.'
000000000021ef68         db  0x00 ; '.'
000000000021ef69         db  0x00 ; '.'
000000000021ef6a         db  0x00 ; '.'
000000000021ef6b         db  0x00 ; '.'
000000000021ef6c         db  0x00 ; '.'
000000000021ef6d         db  0x00 ; '.'
000000000021ef6e         db  0x00 ; '.'
000000000021ef6f         db  0x00 ; '.'
000000000021ef70         db  0x00 ; '.'
000000000021ef71         db  0x00 ; '.'
000000000021ef72         db  0x00 ; '.'
000000000021ef73         db  0x00 ; '.'
000000000021ef74         db  0x00 ; '.'
000000000021ef75         db  0x00 ; '.'
000000000021ef76         db  0x00 ; '.'
000000000021ef77         db  0x00 ; '.'
000000000021ef78         db  0x00 ; '.'
000000000021ef79         db  0x00 ; '.'
000000000021ef7a         db  0x00 ; '.'
000000000021ef7b         db  0x00 ; '.'
000000000021ef7c         db  0x00 ; '.'
000000000021ef7d         db  0x00 ; '.'
000000000021ef7e         db  0x00 ; '.'
000000000021ef7f         db  0x00 ; '.'
000000000021ef80         db  0x00 ; '.'
000000000021ef81         db  0x00 ; '.'
000000000021ef82         db  0x00 ; '.'
000000000021ef83         db  0x00 ; '.'
000000000021ef84         db  0x00 ; '.'
000000000021ef85         db  0x00 ; '.'
000000000021ef86         db  0x00 ; '.'
000000000021ef87         db  0x00 ; '.'
000000000021ef88         db  0x00 ; '.'
000000000021ef89         db  0x00 ; '.'
000000000021ef8a         db  0x00 ; '.'
000000000021ef8b         db  0x00 ; '.'
000000000021ef8c         db  0x00 ; '.'
000000000021ef8d         db  0x00 ; '.'
000000000021ef8e         db  0x00 ; '.'
000000000021ef8f         db  0x00 ; '.'
000000000021ef90         db  0x00 ; '.'
000000000021ef91         db  0x00 ; '.'
000000000021ef92         db  0x00 ; '.'
000000000021ef93         db  0x00 ; '.'
000000000021ef94         db  0x00 ; '.'
000000000021ef95         db  0x00 ; '.'
000000000021ef96         db  0x00 ; '.'
000000000021ef97         db  0x00 ; '.'
000000000021ef98         db  0x00 ; '.'
000000000021ef99         db  0x00 ; '.'
000000000021ef9a         db  0x00 ; '.'
000000000021ef9b         db  0x00 ; '.'
000000000021ef9c         db  0x00 ; '.'
000000000021ef9d         db  0x00 ; '.'
000000000021ef9e         db  0x00 ; '.'
000000000021ef9f         db  0x00 ; '.'
000000000021efa0         db  0x00 ; '.'
000000000021efa1         db  0x00 ; '.'
000000000021efa2         db  0x00 ; '.'
000000000021efa3         db  0x00 ; '.'
000000000021efa4         db  0x00 ; '.'
000000000021efa5         db  0x00 ; '.'
000000000021efa6         db  0x00 ; '.'
000000000021efa7         db  0x00 ; '.'
000000000021efa8         db  0x00 ; '.'
000000000021efa9         db  0x00 ; '.'
000000000021efaa         db  0x00 ; '.'
000000000021efab         db  0x00 ; '.'
000000000021efac         db  0x00 ; '.'
000000000021efad         db  0x00 ; '.'
000000000021efae         db  0x00 ; '.'
000000000021efaf         db  0x00 ; '.'
000000000021efb0         db  0x00 ; '.'
000000000021efb1         db  0x00 ; '.'
000000000021efb2         db  0x00 ; '.'
000000000021efb3         db  0x00 ; '.'
000000000021efb4         db  0x00 ; '.'
000000000021efb5         db  0x00 ; '.'
000000000021efb6         db  0x00 ; '.'
000000000021efb7         db  0x00 ; '.'
000000000021efb8         db  0x00 ; '.'
000000000021efb9         db  0x00 ; '.'
000000000021efba         db  0x00 ; '.'
000000000021efbb         db  0x00 ; '.'
000000000021efbc         db  0x00 ; '.'
000000000021efbd         db  0x00 ; '.'
000000000021efbe         db  0x00 ; '.'
000000000021efbf         db  0x00 ; '.'
000000000021efc0         db  0x00 ; '.'
000000000021efc1         db  0x00 ; '.'
000000000021efc2         db  0x00 ; '.'
000000000021efc3         db  0x00 ; '.'
000000000021efc4         db  0x00 ; '.'
000000000021efc5         db  0x00 ; '.'
000000000021efc6         db  0x00 ; '.'
000000000021efc7         db  0x00 ; '.'
000000000021efc8         db  0x00 ; '.'
000000000021efc9         db  0x00 ; '.'
000000000021efca         db  0x00 ; '.'
000000000021efcb         db  0x00 ; '.'
000000000021efcc         db  0x00 ; '.'
000000000021efcd         db  0x00 ; '.'
000000000021efce         db  0x00 ; '.'
000000000021efcf         db  0x00 ; '.'
000000000021efd0         db  0x00 ; '.'
000000000021efd1         db  0x00 ; '.'
000000000021efd2         db  0x00 ; '.'
000000000021efd3         db  0x00 ; '.'
000000000021efd4         db  0x00 ; '.'
000000000021efd5         db  0x00 ; '.'
000000000021efd6         db  0x00 ; '.'
000000000021efd7         db  0x00 ; '.'
000000000021efd8         db  0x00 ; '.'
000000000021efd9         db  0x00 ; '.'
000000000021efda         db  0x00 ; '.'
000000000021efdb         db  0x00 ; '.'
000000000021efdc         db  0x00 ; '.'
000000000021efdd         db  0x00 ; '.'
000000000021efde         db  0x00 ; '.'
000000000021efdf         db  0x00 ; '.'
000000000021efe0         db  0x00 ; '.'
000000000021efe1         db  0x00 ; '.'
000000000021efe2         db  0x00 ; '.'
000000000021efe3         db  0x00 ; '.'
000000000021efe4         db  0x00 ; '.'
000000000021efe5         db  0x00 ; '.'
000000000021efe6         db  0x00 ; '.'
000000000021efe7         db  0x00 ; '.'
000000000021efe8         db  0x00 ; '.'
000000000021efe9         db  0x00 ; '.'
000000000021efea         db  0x00 ; '.'
000000000021efeb         db  0x00 ; '.'
000000000021efec         db  0x00 ; '.'
000000000021efed         db  0x00 ; '.'
000000000021efee         db  0x00 ; '.'
000000000021efef         db  0x00 ; '.'
000000000021eff0         db  0x00 ; '.'
000000000021eff1         db  0x00 ; '.'
000000000021eff2         db  0x00 ; '.'
000000000021eff3         db  0x00 ; '.'
000000000021eff4         db  0x00 ; '.'
000000000021eff5         db  0x00 ; '.'
000000000021eff6         db  0x00 ; '.'
000000000021eff7         db  0x00 ; '.'
000000000021eff8         db  0x00 ; '.'
000000000021eff9         db  0x00 ; '.'
000000000021effa         db  0x00 ; '.'
000000000021effb         db  0x00 ; '.'
000000000021effc         db  0x00 ; '.'
000000000021effd         db  0x00 ; '.'
000000000021effe         db  0x00 ; '.'
000000000021efff         db  0x00 ; '.'
000000000021f000         db  0x00 ; '.'
000000000021f001         db  0x00 ; '.'
000000000021f002         db  0x00 ; '.'
000000000021f003         db  0x00 ; '.'
000000000021f004         db  0x00 ; '.'
000000000021f005         db  0x00 ; '.'
000000000021f006         db  0x00 ; '.'
000000000021f007         db  0x00 ; '.'
000000000021f008         db  0x00 ; '.'
000000000021f009         db  0x00 ; '.'
000000000021f00a         db  0x00 ; '.'
000000000021f00b         db  0x00 ; '.'
000000000021f00c         db  0x00 ; '.'
000000000021f00d         db  0x00 ; '.'
000000000021f00e         db  0x00 ; '.'
000000000021f00f         db  0x00 ; '.'
000000000021f010         db  0x00 ; '.'
000000000021f011         db  0x00 ; '.'
000000000021f012         db  0x00 ; '.'
000000000021f013         db  0x00 ; '.'
000000000021f014         db  0x00 ; '.'
000000000021f015         db  0x00 ; '.'
000000000021f016         db  0x00 ; '.'
000000000021f017         db  0x00 ; '.'
000000000021f018         db  0x00 ; '.'
000000000021f019         db  0x00 ; '.'
000000000021f01a         db  0x00 ; '.'
000000000021f01b         db  0x00 ; '.'
000000000021f01c         db  0x00 ; '.'
000000000021f01d         db  0x00 ; '.'
000000000021f01e         db  0x00 ; '.'
000000000021f01f         db  0x00 ; '.'
000000000021f020         db  0x00 ; '.'
000000000021f021         db  0x00 ; '.'
000000000021f022         db  0x00 ; '.'
000000000021f023         db  0x00 ; '.'
000000000021f024         db  0x00 ; '.'
000000000021f025         db  0x00 ; '.'
000000000021f026         db  0x00 ; '.'
000000000021f027         db  0x00 ; '.'
000000000021f028         db  0x00 ; '.'
000000000021f029         db  0x00 ; '.'
000000000021f02a         db  0x00 ; '.'
000000000021f02b         db  0x00 ; '.'
000000000021f02c         db  0x00 ; '.'
000000000021f02d         db  0x00 ; '.'
000000000021f02e         db  0x00 ; '.'
000000000021f02f         db  0x00 ; '.'
000000000021f030         db  0x00 ; '.'
000000000021f031         db  0x00 ; '.'
000000000021f032         db  0x00 ; '.'
000000000021f033         db  0x00 ; '.'
000000000021f034         db  0x00 ; '.'
000000000021f035         db  0x00 ; '.'
000000000021f036         db  0x00 ; '.'
000000000021f037         db  0x00 ; '.'
000000000021f038         db  0x00 ; '.'
000000000021f039         db  0x00 ; '.'
000000000021f03a         db  0x00 ; '.'
000000000021f03b         db  0x00 ; '.'
000000000021f03c         db  0x00 ; '.'
000000000021f03d         db  0x00 ; '.'
000000000021f03e         db  0x00 ; '.'
000000000021f03f         db  0x00 ; '.'
000000000021f040         db  0x00 ; '.'
000000000021f041         db  0x00 ; '.'
000000000021f042         db  0x00 ; '.'
000000000021f043         db  0x00 ; '.'
000000000021f044         db  0x00 ; '.'
000000000021f045         db  0x00 ; '.'
000000000021f046         db  0x00 ; '.'
000000000021f047         db  0x00 ; '.'
000000000021f048         db  0x00 ; '.'
000000000021f049         db  0x00 ; '.'
000000000021f04a         db  0x00 ; '.'
000000000021f04b         db  0x00 ; '.'
000000000021f04c         db  0x00 ; '.'
000000000021f04d         db  0x00 ; '.'
000000000021f04e         db  0x00 ; '.'
000000000021f04f         db  0x00 ; '.'
000000000021f050         db  0x00 ; '.'
000000000021f051         db  0x00 ; '.'
000000000021f052         db  0x00 ; '.'
000000000021f053         db  0x00 ; '.'
000000000021f054         db  0x00 ; '.'
000000000021f055         db  0x00 ; '.'
000000000021f056         db  0x00 ; '.'
000000000021f057         db  0x00 ; '.'
000000000021f058         db  0x00 ; '.'
000000000021f059         db  0x00 ; '.'
000000000021f05a         db  0x00 ; '.'
000000000021f05b         db  0x00 ; '.'
000000000021f05c         db  0x00 ; '.'
000000000021f05d         db  0x00 ; '.'
000000000021f05e         db  0x00 ; '.'
000000000021f05f         db  0x00 ; '.'
000000000021f060         db  0x00 ; '.'
000000000021f061         db  0x00 ; '.'
000000000021f062         db  0x00 ; '.'
000000000021f063         db  0x00 ; '.'
000000000021f064         db  0x00 ; '.'
000000000021f065         db  0x00 ; '.'
000000000021f066         db  0x00 ; '.'
000000000021f067         db  0x00 ; '.'
000000000021f068         db  0x00 ; '.'
000000000021f069         db  0x00 ; '.'
000000000021f06a         db  0x00 ; '.'
000000000021f06b         db  0x00 ; '.'
000000000021f06c         db  0x00 ; '.'
000000000021f06d         db  0x00 ; '.'
000000000021f06e         db  0x00 ; '.'
000000000021f06f         db  0x00 ; '.'
000000000021f070         db  0x00 ; '.'
000000000021f071         db  0x00 ; '.'
000000000021f072         db  0x00 ; '.'
000000000021f073         db  0x00 ; '.'
000000000021f074         db  0x00 ; '.'
000000000021f075         db  0x00 ; '.'
000000000021f076         db  0x00 ; '.'
000000000021f077         db  0x00 ; '.'
000000000021f078         db  0x00 ; '.'
000000000021f079         db  0x00 ; '.'
000000000021f07a         db  0x00 ; '.'
000000000021f07b         db  0x00 ; '.'
000000000021f07c         db  0x00 ; '.'
000000000021f07d         db  0x00 ; '.'
000000000021f07e         db  0x00 ; '.'
000000000021f07f         db  0x00 ; '.'
000000000021f080         db  0x00 ; '.'
000000000021f081         db  0x00 ; '.'
000000000021f082         db  0x00 ; '.'
000000000021f083         db  0x00 ; '.'
000000000021f084         db  0x00 ; '.'
000000000021f085         db  0x00 ; '.'
000000000021f086         db  0x00 ; '.'
000000000021f087         db  0x00 ; '.'
000000000021f088         db  0x00 ; '.'
000000000021f089         db  0x00 ; '.'
000000000021f08a         db  0x00 ; '.'
000000000021f08b         db  0x00 ; '.'
000000000021f08c         db  0x00 ; '.'
000000000021f08d         db  0x00 ; '.'
000000000021f08e         db  0x00 ; '.'
000000000021f08f         db  0x00 ; '.'
000000000021f090         db  0x00 ; '.'
000000000021f091         db  0x00 ; '.'
000000000021f092         db  0x00 ; '.'
000000000021f093         db  0x00 ; '.'
000000000021f094         db  0x00 ; '.'
000000000021f095         db  0x00 ; '.'
000000000021f096         db  0x00 ; '.'
000000000021f097         db  0x00 ; '.'
000000000021f098         db  0x00 ; '.'
000000000021f099         db  0x00 ; '.'
000000000021f09a         db  0x00 ; '.'
000000000021f09b         db  0x00 ; '.'
000000000021f09c         db  0x00 ; '.'
000000000021f09d         db  0x00 ; '.'
000000000021f09e         db  0x00 ; '.'
000000000021f09f         db  0x00 ; '.'
000000000021f0a0         db  0x00 ; '.'
000000000021f0a1         db  0x00 ; '.'
000000000021f0a2         db  0x00 ; '.'
000000000021f0a3         db  0x00 ; '.'
000000000021f0a4         db  0x00 ; '.'
000000000021f0a5         db  0x00 ; '.'
000000000021f0a6         db  0x00 ; '.'
000000000021f0a7         db  0x00 ; '.'
000000000021f0a8         db  0x00 ; '.'
000000000021f0a9         db  0x00 ; '.'
000000000021f0aa         db  0x00 ; '.'
000000000021f0ab         db  0x00 ; '.'
000000000021f0ac         db  0x00 ; '.'
000000000021f0ad         db  0x00 ; '.'
000000000021f0ae         db  0x00 ; '.'
000000000021f0af         db  0x00 ; '.'
000000000021f0b0         db  0x00 ; '.'
000000000021f0b1         db  0x00 ; '.'
000000000021f0b2         db  0x00 ; '.'
000000000021f0b3         db  0x00 ; '.'
000000000021f0b4         db  0x00 ; '.'
000000000021f0b5         db  0x00 ; '.'
000000000021f0b6         db  0x00 ; '.'
000000000021f0b7         db  0x00 ; '.'
000000000021f0b8         db  0x00 ; '.'
000000000021f0b9         db  0x00 ; '.'
000000000021f0ba         db  0x00 ; '.'
000000000021f0bb         db  0x00 ; '.'
000000000021f0bc         db  0x00 ; '.'
000000000021f0bd         db  0x00 ; '.'
000000000021f0be         db  0x00 ; '.'
000000000021f0bf         db  0x00 ; '.'
000000000021f0c0         db  0x00 ; '.'
000000000021f0c1         db  0x00 ; '.'
000000000021f0c2         db  0x00 ; '.'
000000000021f0c3         db  0x00 ; '.'
000000000021f0c4         db  0x00 ; '.'
000000000021f0c5         db  0x00 ; '.'
000000000021f0c6         db  0x00 ; '.'
000000000021f0c7         db  0x00 ; '.'
000000000021f0c8         db  0x00 ; '.'
000000000021f0c9         db  0x00 ; '.'
000000000021f0ca         db  0x00 ; '.'
000000000021f0cb         db  0x00 ; '.'
000000000021f0cc         db  0x00 ; '.'
000000000021f0cd         db  0x00 ; '.'
000000000021f0ce         db  0x00 ; '.'
000000000021f0cf         db  0x00 ; '.'
000000000021f0d0         db  0x00 ; '.'
000000000021f0d1         db  0x00 ; '.'
000000000021f0d2         db  0x00 ; '.'
000000000021f0d3         db  0x00 ; '.'
000000000021f0d4         db  0x00 ; '.'
000000000021f0d5         db  0x00 ; '.'
000000000021f0d6         db  0x00 ; '.'
000000000021f0d7         db  0x00 ; '.'
000000000021f0d8         db  0x00 ; '.'
000000000021f0d9         db  0x00 ; '.'
000000000021f0da         db  0x00 ; '.'
000000000021f0db         db  0x00 ; '.'
000000000021f0dc         db  0x00 ; '.'
000000000021f0dd         db  0x00 ; '.'
000000000021f0de         db  0x00 ; '.'
000000000021f0df         db  0x00 ; '.'
000000000021f0e0         db  0x00 ; '.'
000000000021f0e1         db  0x00 ; '.'
000000000021f0e2         db  0x00 ; '.'
000000000021f0e3         db  0x00 ; '.'
000000000021f0e4         db  0x00 ; '.'
000000000021f0e5         db  0x00 ; '.'
000000000021f0e6         db  0x00 ; '.'
000000000021f0e7         db  0x00 ; '.'
000000000021f0e8         db  0x00 ; '.'
000000000021f0e9         db  0x00 ; '.'
000000000021f0ea         db  0x00 ; '.'
000000000021f0eb         db  0x00 ; '.'
000000000021f0ec         db  0x00 ; '.'
000000000021f0ed         db  0x00 ; '.'
000000000021f0ee         db  0x00 ; '.'
000000000021f0ef         db  0x00 ; '.'
000000000021f0f0         db  0x00 ; '.'
000000000021f0f1         db  0x00 ; '.'
000000000021f0f2         db  0x00 ; '.'
000000000021f0f3         db  0x00 ; '.'
000000000021f0f4         db  0x00 ; '.'
000000000021f0f5         db  0x00 ; '.'
000000000021f0f6         db  0x00 ; '.'
000000000021f0f7         db  0x00 ; '.'
000000000021f0f8         db  0x00 ; '.'
000000000021f0f9         db  0x00 ; '.'
000000000021f0fa         db  0x00 ; '.'
000000000021f0fb         db  0x00 ; '.'
000000000021f0fc         db  0x00 ; '.'
000000000021f0fd         db  0x00 ; '.'
000000000021f0fe         db  0x00 ; '.'
000000000021f0ff         db  0x00 ; '.'
000000000021f100         db  0x00 ; '.'
000000000021f101         db  0x00 ; '.'
000000000021f102         db  0x00 ; '.'
000000000021f103         db  0x00 ; '.'
000000000021f104         db  0x00 ; '.'
000000000021f105         db  0x00 ; '.'
000000000021f106         db  0x00 ; '.'
000000000021f107         db  0x00 ; '.'
000000000021f108         db  0x00 ; '.'
000000000021f109         db  0x00 ; '.'
000000000021f10a         db  0x00 ; '.'
000000000021f10b         db  0x00 ; '.'
000000000021f10c         db  0x00 ; '.'
000000000021f10d         db  0x00 ; '.'
000000000021f10e         db  0x00 ; '.'
000000000021f10f         db  0x00 ; '.'
000000000021f110         db  0x00 ; '.'
000000000021f111         db  0x00 ; '.'
000000000021f112         db  0x00 ; '.'
000000000021f113         db  0x00 ; '.'
000000000021f114         db  0x00 ; '.'
000000000021f115         db  0x00 ; '.'
000000000021f116         db  0x00 ; '.'
000000000021f117         db  0x00 ; '.'
000000000021f118         db  0x00 ; '.'
000000000021f119         db  0x00 ; '.'
000000000021f11a         db  0x00 ; '.'
000000000021f11b         db  0x00 ; '.'
000000000021f11c         db  0x00 ; '.'
000000000021f11d         db  0x00 ; '.'
000000000021f11e         db  0x00 ; '.'
000000000021f11f         db  0x00 ; '.'
000000000021f120         db  0x00 ; '.'
000000000021f121         db  0x00 ; '.'
000000000021f122         db  0x00 ; '.'
000000000021f123         db  0x00 ; '.'
000000000021f124         db  0x00 ; '.'
000000000021f125         db  0x00 ; '.'
000000000021f126         db  0x00 ; '.'
000000000021f127         db  0x00 ; '.'
000000000021f128         db  0x00 ; '.'
000000000021f129         db  0x00 ; '.'
000000000021f12a         db  0x00 ; '.'
000000000021f12b         db  0x00 ; '.'
000000000021f12c         db  0x00 ; '.'
000000000021f12d         db  0x00 ; '.'
000000000021f12e         db  0x00 ; '.'
000000000021f12f         db  0x00 ; '.'
000000000021f130         db  0x00 ; '.'
000000000021f131         db  0x00 ; '.'
000000000021f132         db  0x00 ; '.'
000000000021f133         db  0x00 ; '.'
000000000021f134         db  0x00 ; '.'
000000000021f135         db  0x00 ; '.'
000000000021f136         db  0x00 ; '.'
000000000021f137         db  0x00 ; '.'
000000000021f138         db  0x00 ; '.'
000000000021f139         db  0x00 ; '.'
000000000021f13a         db  0x00 ; '.'
000000000021f13b         db  0x00 ; '.'
000000000021f13c         db  0x00 ; '.'
000000000021f13d         db  0x00 ; '.'
000000000021f13e         db  0x00 ; '.'
000000000021f13f         db  0x00 ; '.'
                     dir_arg:
000000000021f140         db  0x00 ; '.'                                         ; DATA XREF=main+391, main+709, main+1124, main+1283, main+1601
                     strip_files:
000000000021f141         db  0x00 ; '.'                                         ; DATA XREF=main+384, main+932, main+1439, main+1472, main+1782, install_file_in_file+195, install_file_in_file+1354
                     copy_only_if_needed:
000000000021f142         db  0x00 ; '.'                                         ; DATA XREF=main+805, main+1452, install_file_in_file+77
000000000021f143         db  0x00 ; '.'
                     group_id:
000000000021f144         db  0x00 ; '.'                                         ; DATA XREF=main+1590, main+2233, process_dir+26, install_file_in_file+390, install_file_in_file+752
000000000021f145         db  0x00 ; '.'
000000000021f146         db  0x00 ; '.'
000000000021f147         db  0x00 ; '.'
                     group_name:
000000000021f148         db  0x00 ; '.'                                         ; DATA XREF=main+373, main+896, main+1557, main+2476, main+2523
000000000021f149         db  0x00 ; '.'
000000000021f14a         db  0x00 ; '.'
000000000021f14b         db  0x00 ; '.'
000000000021f14c         db  0x00 ; '.'
000000000021f14d         db  0x00 ; '.'
000000000021f14e         db  0x00 ; '.'
000000000021f14f         db  0x00 ; '.'
                     owner_id:
000000000021f150         db  0x00 ; '.'                                         ; DATA XREF=main+1546, main+2248, process_dir+42, install_file_in_file+384, install_file_in_file+724
000000000021f151         db  0x00 ; '.'
000000000021f152         db  0x00 ; '.'
000000000021f153         db  0x00 ; '.'
000000000021f154         db  0x00 ; '.'
000000000021f155         db  0x00 ; '.'
000000000021f156         db  0x00 ; '.'
000000000021f157         db  0x00 ; '.'
                     owner_name:
000000000021f158         db  0x00 ; '.'                                         ; DATA XREF=main+362, main+728, main+1513, main+2577, main+2624
000000000021f159         db  0x00 ; '.'
000000000021f15a         db  0x00 ; '.'
000000000021f15b         db  0x00 ; '.'
000000000021f15c         db  0x00 ; '.'
000000000021f15d         db  0x00 ; '.'
000000000021f15e         db  0x00 ; '.'
000000000021f15f         db  0x00 ; '.'
                     selinux_enabled:
000000000021f160         db  0x00 ; '.'                                         ; DATA XREF=main+41, main+759, main+997, install_file_in_file+462, install_file_in_file+780
000000000021f161         db  0x00 ; '.'
000000000021f162         db  0x00 ; '.'
000000000021f163         db  0x00 ; '.'
000000000021f164         db  0x00 ; '.'
000000000021f165         db  0x00 ; '.'
000000000021f166         db  0x00 ; '.'
000000000021f167         db  0x00 ; '.'
000000000021f168         db  0x00 ; '.'
000000000021f169         db  0x00 ; '.'
000000000021f16a         db  0x00 ; '.'
000000000021f16b         db  0x00 ; '.'
000000000021f16c         db  0x00 ; '.'
000000000021f16d         db  0x00 ; '.'
000000000021f16e         db  0x00 ; '.'
000000000021f16f         db  0x00 ; '.'
000000000021f170         db  0x00 ; '.'
000000000021f171         db  0x00 ; '.'
000000000021f172         db  0x00 ; '.'
000000000021f173         db  0x00 ; '.'
000000000021f174         db  0x00 ; '.'
000000000021f175         db  0x00 ; '.'
000000000021f176         db  0x00 ; '.'
000000000021f177         db  0x00 ; '.'
000000000021f178         db  0x00 ; '.'
000000000021f179         db  0x00 ; '.'
000000000021f17a         db  0x00 ; '.'
000000000021f17b         db  0x00 ; '.'
000000000021f17c         db  0x00 ; '.'
000000000021f17d         db  0x00 ; '.'
000000000021f17e         db  0x00 ; '.'
000000000021f17f         db  0x00 ; '.'
                     fallback.7572:
000000000021f180         db  0x00 ; '.'                                         ; DATA XREF=write_zeros+135
000000000021f181         db  0x00 ; '.'
000000000021f182         db  0x00 ; '.'
000000000021f183         db  0x00 ; '.'
000000000021f184         db  0x00 ; '.'
000000000021f185         db  0x00 ; '.'
000000000021f186         db  0x00 ; '.'
000000000021f187         db  0x00 ; '.'
000000000021f188         db  0x00 ; '.'
000000000021f189         db  0x00 ; '.'
000000000021f18a         db  0x00 ; '.'
000000000021f18b         db  0x00 ; '.'
000000000021f18c         db  0x00 ; '.'
000000000021f18d         db  0x00 ; '.'
000000000021f18e         db  0x00 ; '.'
000000000021f18f         db  0x00 ; '.'
000000000021f190         db  0x00 ; '.'
000000000021f191         db  0x00 ; '.'
000000000021f192         db  0x00 ; '.'
000000000021f193         db  0x00 ; '.'
000000000021f194         db  0x00 ; '.'
000000000021f195         db  0x00 ; '.'
000000000021f196         db  0x00 ; '.'
000000000021f197         db  0x00 ; '.'
000000000021f198         db  0x00 ; '.'
000000000021f199         db  0x00 ; '.'
000000000021f19a         db  0x00 ; '.'
000000000021f19b         db  0x00 ; '.'
000000000021f19c         db  0x00 ; '.'
000000000021f19d         db  0x00 ; '.'
000000000021f19e         db  0x00 ; '.'
000000000021f19f         db  0x00 ; '.'
000000000021f1a0         db  0x00 ; '.'
000000000021f1a1         db  0x00 ; '.'
000000000021f1a2         db  0x00 ; '.'
000000000021f1a3         db  0x00 ; '.'
000000000021f1a4         db  0x00 ; '.'
000000000021f1a5         db  0x00 ; '.'
000000000021f1a6         db  0x00 ; '.'
000000000021f1a7         db  0x00 ; '.'
000000000021f1a8         db  0x00 ; '.'
000000000021f1a9         db  0x00 ; '.'
000000000021f1aa         db  0x00 ; '.'
000000000021f1ab         db  0x00 ; '.'
000000000021f1ac         db  0x00 ; '.'
000000000021f1ad         db  0x00 ; '.'
000000000021f1ae         db  0x00 ; '.'
000000000021f1af         db  0x00 ; '.'
000000000021f1b0         db  0x00 ; '.'
000000000021f1b1         db  0x00 ; '.'
000000000021f1b2         db  0x00 ; '.'
000000000021f1b3         db  0x00 ; '.'
000000000021f1b4         db  0x00 ; '.'
000000000021f1b5         db  0x00 ; '.'
000000000021f1b6         db  0x00 ; '.'
000000000021f1b7         db  0x00 ; '.'
000000000021f1b8         db  0x00 ; '.'
000000000021f1b9         db  0x00 ; '.'
000000000021f1ba         db  0x00 ; '.'
000000000021f1bb         db  0x00 ; '.'
000000000021f1bc         db  0x00 ; '.'
000000000021f1bd         db  0x00 ; '.'
000000000021f1be         db  0x00 ; '.'
000000000021f1bf         db  0x00 ; '.'
000000000021f1c0         db  0x00 ; '.'
000000000021f1c1         db  0x00 ; '.'
000000000021f1c2         db  0x00 ; '.'
000000000021f1c3         db  0x00 ; '.'
000000000021f1c4         db  0x00 ; '.'
000000000021f1c5         db  0x00 ; '.'
000000000021f1c6         db  0x00 ; '.'
000000000021f1c7         db  0x00 ; '.'
000000000021f1c8         db  0x00 ; '.'
000000000021f1c9         db  0x00 ; '.'
000000000021f1ca         db  0x00 ; '.'
000000000021f1cb         db  0x00 ; '.'
000000000021f1cc         db  0x00 ; '.'
000000000021f1cd         db  0x00 ; '.'
000000000021f1ce         db  0x00 ; '.'
000000000021f1cf         db  0x00 ; '.'
000000000021f1d0         db  0x00 ; '.'
000000000021f1d1         db  0x00 ; '.'
000000000021f1d2         db  0x00 ; '.'
000000000021f1d3         db  0x00 ; '.'
000000000021f1d4         db  0x00 ; '.'
000000000021f1d5         db  0x00 ; '.'
000000000021f1d6         db  0x00 ; '.'
000000000021f1d7         db  0x00 ; '.'
000000000021f1d8         db  0x00 ; '.'
000000000021f1d9         db  0x00 ; '.'
000000000021f1da         db  0x00 ; '.'
000000000021f1db         db  0x00 ; '.'
000000000021f1dc         db  0x00 ; '.'
000000000021f1dd         db  0x00 ; '.'
000000000021f1de         db  0x00 ; '.'
000000000021f1df         db  0x00 ; '.'
000000000021f1e0         db  0x00 ; '.'
000000000021f1e1         db  0x00 ; '.'
000000000021f1e2         db  0x00 ; '.'
000000000021f1e3         db  0x00 ; '.'
000000000021f1e4         db  0x00 ; '.'
000000000021f1e5         db  0x00 ; '.'
000000000021f1e6         db  0x00 ; '.'
000000000021f1e7         db  0x00 ; '.'
000000000021f1e8         db  0x00 ; '.'
000000000021f1e9         db  0x00 ; '.'
000000000021f1ea         db  0x00 ; '.'
000000000021f1eb         db  0x00 ; '.'
000000000021f1ec         db  0x00 ; '.'
000000000021f1ed         db  0x00 ; '.'
000000000021f1ee         db  0x00 ; '.'
000000000021f1ef         db  0x00 ; '.'
000000000021f1f0         db  0x00 ; '.'
000000000021f1f1         db  0x00 ; '.'
000000000021f1f2         db  0x00 ; '.'
000000000021f1f3         db  0x00 ; '.'
000000000021f1f4         db  0x00 ; '.'
000000000021f1f5         db  0x00 ; '.'
000000000021f1f6         db  0x00 ; '.'
000000000021f1f7         db  0x00 ; '.'
000000000021f1f8         db  0x00 ; '.'
000000000021f1f9         db  0x00 ; '.'
000000000021f1fa         db  0x00 ; '.'
000000000021f1fb         db  0x00 ; '.'
000000000021f1fc         db  0x00 ; '.'
000000000021f1fd         db  0x00 ; '.'
000000000021f1fe         db  0x00 ; '.'
000000000021f1ff         db  0x00 ; '.'
000000000021f200         db  0x00 ; '.'
000000000021f201         db  0x00 ; '.'
000000000021f202         db  0x00 ; '.'
000000000021f203         db  0x00 ; '.'
000000000021f204         db  0x00 ; '.'
000000000021f205         db  0x00 ; '.'
000000000021f206         db  0x00 ; '.'
000000000021f207         db  0x00 ; '.'
000000000021f208         db  0x00 ; '.'
000000000021f209         db  0x00 ; '.'
000000000021f20a         db  0x00 ; '.'
000000000021f20b         db  0x00 ; '.'
000000000021f20c         db  0x00 ; '.'
000000000021f20d         db  0x00 ; '.'
000000000021f20e         db  0x00 ; '.'
000000000021f20f         db  0x00 ; '.'
000000000021f210         db  0x00 ; '.'
000000000021f211         db  0x00 ; '.'
000000000021f212         db  0x00 ; '.'
000000000021f213         db  0x00 ; '.'
000000000021f214         db  0x00 ; '.'
000000000021f215         db  0x00 ; '.'
000000000021f216         db  0x00 ; '.'
000000000021f217         db  0x00 ; '.'
000000000021f218         db  0x00 ; '.'
000000000021f219         db  0x00 ; '.'
000000000021f21a         db  0x00 ; '.'
000000000021f21b         db  0x00 ; '.'
000000000021f21c         db  0x00 ; '.'
000000000021f21d         db  0x00 ; '.'
000000000021f21e         db  0x00 ; '.'
000000000021f21f         db  0x00 ; '.'
000000000021f220         db  0x00 ; '.'
000000000021f221         db  0x00 ; '.'
000000000021f222         db  0x00 ; '.'
000000000021f223         db  0x00 ; '.'
000000000021f224         db  0x00 ; '.'
000000000021f225         db  0x00 ; '.'
000000000021f226         db  0x00 ; '.'
000000000021f227         db  0x00 ; '.'
000000000021f228         db  0x00 ; '.'
000000000021f229         db  0x00 ; '.'
000000000021f22a         db  0x00 ; '.'
000000000021f22b         db  0x00 ; '.'
000000000021f22c         db  0x00 ; '.'
000000000021f22d         db  0x00 ; '.'
000000000021f22e         db  0x00 ; '.'
000000000021f22f         db  0x00 ; '.'
000000000021f230         db  0x00 ; '.'
000000000021f231         db  0x00 ; '.'
000000000021f232         db  0x00 ; '.'
000000000021f233         db  0x00 ; '.'
000000000021f234         db  0x00 ; '.'
000000000021f235         db  0x00 ; '.'
000000000021f236         db  0x00 ; '.'
000000000021f237         db  0x00 ; '.'
000000000021f238         db  0x00 ; '.'
000000000021f239         db  0x00 ; '.'
000000000021f23a         db  0x00 ; '.'
000000000021f23b         db  0x00 ; '.'
000000000021f23c         db  0x00 ; '.'
000000000021f23d         db  0x00 ; '.'
000000000021f23e         db  0x00 ; '.'
000000000021f23f         db  0x00 ; '.'
000000000021f240         db  0x00 ; '.'
000000000021f241         db  0x00 ; '.'
000000000021f242         db  0x00 ; '.'
000000000021f243         db  0x00 ; '.'
000000000021f244         db  0x00 ; '.'
000000000021f245         db  0x00 ; '.'
000000000021f246         db  0x00 ; '.'
000000000021f247         db  0x00 ; '.'
000000000021f248         db  0x00 ; '.'
000000000021f249         db  0x00 ; '.'
000000000021f24a         db  0x00 ; '.'
000000000021f24b         db  0x00 ; '.'
000000000021f24c         db  0x00 ; '.'
000000000021f24d         db  0x00 ; '.'
000000000021f24e         db  0x00 ; '.'
000000000021f24f         db  0x00 ; '.'
000000000021f250         db  0x00 ; '.'
000000000021f251         db  0x00 ; '.'
000000000021f252         db  0x00 ; '.'
000000000021f253         db  0x00 ; '.'
000000000021f254         db  0x00 ; '.'
000000000021f255         db  0x00 ; '.'
000000000021f256         db  0x00 ; '.'
000000000021f257         db  0x00 ; '.'
000000000021f258         db  0x00 ; '.'
000000000021f259         db  0x00 ; '.'
000000000021f25a         db  0x00 ; '.'
000000000021f25b         db  0x00 ; '.'
000000000021f25c         db  0x00 ; '.'
000000000021f25d         db  0x00 ; '.'
000000000021f25e         db  0x00 ; '.'
000000000021f25f         db  0x00 ; '.'
000000000021f260         db  0x00 ; '.'
000000000021f261         db  0x00 ; '.'
000000000021f262         db  0x00 ; '.'
000000000021f263         db  0x00 ; '.'
000000000021f264         db  0x00 ; '.'
000000000021f265         db  0x00 ; '.'
000000000021f266         db  0x00 ; '.'
000000000021f267         db  0x00 ; '.'
000000000021f268         db  0x00 ; '.'
000000000021f269         db  0x00 ; '.'
000000000021f26a         db  0x00 ; '.'
000000000021f26b         db  0x00 ; '.'
000000000021f26c         db  0x00 ; '.'
000000000021f26d         db  0x00 ; '.'
000000000021f26e         db  0x00 ; '.'
000000000021f26f         db  0x00 ; '.'
000000000021f270         db  0x00 ; '.'
000000000021f271         db  0x00 ; '.'
000000000021f272         db  0x00 ; '.'
000000000021f273         db  0x00 ; '.'
000000000021f274         db  0x00 ; '.'
000000000021f275         db  0x00 ; '.'
000000000021f276         db  0x00 ; '.'
000000000021f277         db  0x00 ; '.'
000000000021f278         db  0x00 ; '.'
000000000021f279         db  0x00 ; '.'
000000000021f27a         db  0x00 ; '.'
000000000021f27b         db  0x00 ; '.'
000000000021f27c         db  0x00 ; '.'
000000000021f27d         db  0x00 ; '.'
000000000021f27e         db  0x00 ; '.'
000000000021f27f         db  0x00 ; '.'
000000000021f280         db  0x00 ; '.'
000000000021f281         db  0x00 ; '.'
000000000021f282         db  0x00 ; '.'
000000000021f283         db  0x00 ; '.'
000000000021f284         db  0x00 ; '.'
000000000021f285         db  0x00 ; '.'
000000000021f286         db  0x00 ; '.'
000000000021f287         db  0x00 ; '.'
000000000021f288         db  0x00 ; '.'
000000000021f289         db  0x00 ; '.'
000000000021f28a         db  0x00 ; '.'
000000000021f28b         db  0x00 ; '.'
000000000021f28c         db  0x00 ; '.'
000000000021f28d         db  0x00 ; '.'
000000000021f28e         db  0x00 ; '.'
000000000021f28f         db  0x00 ; '.'
000000000021f290         db  0x00 ; '.'
000000000021f291         db  0x00 ; '.'
000000000021f292         db  0x00 ; '.'
000000000021f293         db  0x00 ; '.'
000000000021f294         db  0x00 ; '.'
000000000021f295         db  0x00 ; '.'
000000000021f296         db  0x00 ; '.'
000000000021f297         db  0x00 ; '.'
000000000021f298         db  0x00 ; '.'
000000000021f299         db  0x00 ; '.'
000000000021f29a         db  0x00 ; '.'
000000000021f29b         db  0x00 ; '.'
000000000021f29c         db  0x00 ; '.'
000000000021f29d         db  0x00 ; '.'
000000000021f29e         db  0x00 ; '.'
000000000021f29f         db  0x00 ; '.'
000000000021f2a0         db  0x00 ; '.'
000000000021f2a1         db  0x00 ; '.'
000000000021f2a2         db  0x00 ; '.'
000000000021f2a3         db  0x00 ; '.'
000000000021f2a4         db  0x00 ; '.'
000000000021f2a5         db  0x00 ; '.'
000000000021f2a6         db  0x00 ; '.'
000000000021f2a7         db  0x00 ; '.'
000000000021f2a8         db  0x00 ; '.'
000000000021f2a9         db  0x00 ; '.'
000000000021f2aa         db  0x00 ; '.'
000000000021f2ab         db  0x00 ; '.'
000000000021f2ac         db  0x00 ; '.'
000000000021f2ad         db  0x00 ; '.'
000000000021f2ae         db  0x00 ; '.'
000000000021f2af         db  0x00 ; '.'
000000000021f2b0         db  0x00 ; '.'
000000000021f2b1         db  0x00 ; '.'
000000000021f2b2         db  0x00 ; '.'
000000000021f2b3         db  0x00 ; '.'
000000000021f2b4         db  0x00 ; '.'
000000000021f2b5         db  0x00 ; '.'
000000000021f2b6         db  0x00 ; '.'
000000000021f2b7         db  0x00 ; '.'
000000000021f2b8         db  0x00 ; '.'
000000000021f2b9         db  0x00 ; '.'
000000000021f2ba         db  0x00 ; '.'
000000000021f2bb         db  0x00 ; '.'
000000000021f2bc         db  0x00 ; '.'
000000000021f2bd         db  0x00 ; '.'
000000000021f2be         db  0x00 ; '.'
000000000021f2bf         db  0x00 ; '.'
000000000021f2c0         db  0x00 ; '.'
000000000021f2c1         db  0x00 ; '.'
000000000021f2c2         db  0x00 ; '.'
000000000021f2c3         db  0x00 ; '.'
000000000021f2c4         db  0x00 ; '.'
000000000021f2c5         db  0x00 ; '.'
000000000021f2c6         db  0x00 ; '.'
000000000021f2c7         db  0x00 ; '.'
000000000021f2c8         db  0x00 ; '.'
000000000021f2c9         db  0x00 ; '.'
000000000021f2ca         db  0x00 ; '.'
000000000021f2cb         db  0x00 ; '.'
000000000021f2cc         db  0x00 ; '.'
000000000021f2cd         db  0x00 ; '.'
000000000021f2ce         db  0x00 ; '.'
000000000021f2cf         db  0x00 ; '.'
000000000021f2d0         db  0x00 ; '.'
000000000021f2d1         db  0x00 ; '.'
000000000021f2d2         db  0x00 ; '.'
000000000021f2d3         db  0x00 ; '.'
000000000021f2d4         db  0x00 ; '.'
000000000021f2d5         db  0x00 ; '.'
000000000021f2d6         db  0x00 ; '.'
000000000021f2d7         db  0x00 ; '.'
000000000021f2d8         db  0x00 ; '.'
000000000021f2d9         db  0x00 ; '.'
000000000021f2da         db  0x00 ; '.'
000000000021f2db         db  0x00 ; '.'
000000000021f2dc         db  0x00 ; '.'
000000000021f2dd         db  0x00 ; '.'
000000000021f2de         db  0x00 ; '.'
000000000021f2df         db  0x00 ; '.'
000000000021f2e0         db  0x00 ; '.'
000000000021f2e1         db  0x00 ; '.'
000000000021f2e2         db  0x00 ; '.'
000000000021f2e3         db  0x00 ; '.'
000000000021f2e4         db  0x00 ; '.'
000000000021f2e5         db  0x00 ; '.'
000000000021f2e6         db  0x00 ; '.'
000000000021f2e7         db  0x00 ; '.'
000000000021f2e8         db  0x00 ; '.'
000000000021f2e9         db  0x00 ; '.'
000000000021f2ea         db  0x00 ; '.'
000000000021f2eb         db  0x00 ; '.'
000000000021f2ec         db  0x00 ; '.'
000000000021f2ed         db  0x00 ; '.'
000000000021f2ee         db  0x00 ; '.'
000000000021f2ef         db  0x00 ; '.'
000000000021f2f0         db  0x00 ; '.'
000000000021f2f1         db  0x00 ; '.'
000000000021f2f2         db  0x00 ; '.'
000000000021f2f3         db  0x00 ; '.'
000000000021f2f4         db  0x00 ; '.'
000000000021f2f5         db  0x00 ; '.'
000000000021f2f6         db  0x00 ; '.'
000000000021f2f7         db  0x00 ; '.'
000000000021f2f8         db  0x00 ; '.'
000000000021f2f9         db  0x00 ; '.'
000000000021f2fa         db  0x00 ; '.'
000000000021f2fb         db  0x00 ; '.'
000000000021f2fc         db  0x00 ; '.'
000000000021f2fd         db  0x00 ; '.'
000000000021f2fe         db  0x00 ; '.'
000000000021f2ff         db  0x00 ; '.'
000000000021f300         db  0x00 ; '.'
000000000021f301         db  0x00 ; '.'
000000000021f302         db  0x00 ; '.'
000000000021f303         db  0x00 ; '.'
000000000021f304         db  0x00 ; '.'
000000000021f305         db  0x00 ; '.'
000000000021f306         db  0x00 ; '.'
000000000021f307         db  0x00 ; '.'
000000000021f308         db  0x00 ; '.'
000000000021f309         db  0x00 ; '.'
000000000021f30a         db  0x00 ; '.'
000000000021f30b         db  0x00 ; '.'
000000000021f30c         db  0x00 ; '.'
000000000021f30d         db  0x00 ; '.'
000000000021f30e         db  0x00 ; '.'
000000000021f30f         db  0x00 ; '.'
000000000021f310         db  0x00 ; '.'
000000000021f311         db  0x00 ; '.'
000000000021f312         db  0x00 ; '.'
000000000021f313         db  0x00 ; '.'
000000000021f314         db  0x00 ; '.'
000000000021f315         db  0x00 ; '.'
000000000021f316         db  0x00 ; '.'
000000000021f317         db  0x00 ; '.'
000000000021f318         db  0x00 ; '.'
000000000021f319         db  0x00 ; '.'
000000000021f31a         db  0x00 ; '.'
000000000021f31b         db  0x00 ; '.'
000000000021f31c         db  0x00 ; '.'
000000000021f31d         db  0x00 ; '.'
000000000021f31e         db  0x00 ; '.'
000000000021f31f         db  0x00 ; '.'
000000000021f320         db  0x00 ; '.'
000000000021f321         db  0x00 ; '.'
000000000021f322         db  0x00 ; '.'
000000000021f323         db  0x00 ; '.'
000000000021f324         db  0x00 ; '.'
000000000021f325         db  0x00 ; '.'
000000000021f326         db  0x00 ; '.'
000000000021f327         db  0x00 ; '.'
000000000021f328         db  0x00 ; '.'
000000000021f329         db  0x00 ; '.'
000000000021f32a         db  0x00 ; '.'
000000000021f32b         db  0x00 ; '.'
000000000021f32c         db  0x00 ; '.'
000000000021f32d         db  0x00 ; '.'
000000000021f32e         db  0x00 ; '.'
000000000021f32f         db  0x00 ; '.'
000000000021f330         db  0x00 ; '.'
000000000021f331         db  0x00 ; '.'
000000000021f332         db  0x00 ; '.'
000000000021f333         db  0x00 ; '.'
000000000021f334         db  0x00 ; '.'
000000000021f335         db  0x00 ; '.'
000000000021f336         db  0x00 ; '.'
000000000021f337         db  0x00 ; '.'
000000000021f338         db  0x00 ; '.'
000000000021f339         db  0x00 ; '.'
000000000021f33a         db  0x00 ; '.'
000000000021f33b         db  0x00 ; '.'
000000000021f33c         db  0x00 ; '.'
000000000021f33d         db  0x00 ; '.'
000000000021f33e         db  0x00 ; '.'
000000000021f33f         db  0x00 ; '.'
000000000021f340         db  0x00 ; '.'
000000000021f341         db  0x00 ; '.'
000000000021f342         db  0x00 ; '.'
000000000021f343         db  0x00 ; '.'
000000000021f344         db  0x00 ; '.'
000000000021f345         db  0x00 ; '.'
000000000021f346         db  0x00 ; '.'
000000000021f347         db  0x00 ; '.'
000000000021f348         db  0x00 ; '.'
000000000021f349         db  0x00 ; '.'
000000000021f34a         db  0x00 ; '.'
000000000021f34b         db  0x00 ; '.'
000000000021f34c         db  0x00 ; '.'
000000000021f34d         db  0x00 ; '.'
000000000021f34e         db  0x00 ; '.'
000000000021f34f         db  0x00 ; '.'
000000000021f350         db  0x00 ; '.'
000000000021f351         db  0x00 ; '.'
000000000021f352         db  0x00 ; '.'
000000000021f353         db  0x00 ; '.'
000000000021f354         db  0x00 ; '.'
000000000021f355         db  0x00 ; '.'
000000000021f356         db  0x00 ; '.'
000000000021f357         db  0x00 ; '.'
000000000021f358         db  0x00 ; '.'
000000000021f359         db  0x00 ; '.'
000000000021f35a         db  0x00 ; '.'
000000000021f35b         db  0x00 ; '.'
000000000021f35c         db  0x00 ; '.'
000000000021f35d         db  0x00 ; '.'
000000000021f35e         db  0x00 ; '.'
000000000021f35f         db  0x00 ; '.'
000000000021f360         db  0x00 ; '.'
000000000021f361         db  0x00 ; '.'
000000000021f362         db  0x00 ; '.'
000000000021f363         db  0x00 ; '.'
000000000021f364         db  0x00 ; '.'
000000000021f365         db  0x00 ; '.'
000000000021f366         db  0x00 ; '.'
000000000021f367         db  0x00 ; '.'
000000000021f368         db  0x00 ; '.'
000000000021f369         db  0x00 ; '.'
000000000021f36a         db  0x00 ; '.'
000000000021f36b         db  0x00 ; '.'
000000000021f36c         db  0x00 ; '.'
000000000021f36d         db  0x00 ; '.'
000000000021f36e         db  0x00 ; '.'
000000000021f36f         db  0x00 ; '.'
000000000021f370         db  0x00 ; '.'
000000000021f371         db  0x00 ; '.'
000000000021f372         db  0x00 ; '.'
000000000021f373         db  0x00 ; '.'
000000000021f374         db  0x00 ; '.'
000000000021f375         db  0x00 ; '.'
000000000021f376         db  0x00 ; '.'
000000000021f377         db  0x00 ; '.'
000000000021f378         db  0x00 ; '.'
000000000021f379         db  0x00 ; '.'
000000000021f37a         db  0x00 ; '.'
000000000021f37b         db  0x00 ; '.'
000000000021f37c         db  0x00 ; '.'
000000000021f37d         db  0x00 ; '.'
000000000021f37e         db  0x00 ; '.'
000000000021f37f         db  0x00 ; '.'
000000000021f380         db  0x00 ; '.'
000000000021f381         db  0x00 ; '.'
000000000021f382         db  0x00 ; '.'
000000000021f383         db  0x00 ; '.'
000000000021f384         db  0x00 ; '.'
000000000021f385         db  0x00 ; '.'
000000000021f386         db  0x00 ; '.'
000000000021f387         db  0x00 ; '.'
000000000021f388         db  0x00 ; '.'
000000000021f389         db  0x00 ; '.'
000000000021f38a         db  0x00 ; '.'
000000000021f38b         db  0x00 ; '.'
000000000021f38c         db  0x00 ; '.'
000000000021f38d         db  0x00 ; '.'
000000000021f38e         db  0x00 ; '.'
000000000021f38f         db  0x00 ; '.'
000000000021f390         db  0x00 ; '.'
000000000021f391         db  0x00 ; '.'
000000000021f392         db  0x00 ; '.'
000000000021f393         db  0x00 ; '.'
000000000021f394         db  0x00 ; '.'
000000000021f395         db  0x00 ; '.'
000000000021f396         db  0x00 ; '.'
000000000021f397         db  0x00 ; '.'
000000000021f398         db  0x00 ; '.'
000000000021f399         db  0x00 ; '.'
000000000021f39a         db  0x00 ; '.'
000000000021f39b         db  0x00 ; '.'
000000000021f39c         db  0x00 ; '.'
000000000021f39d         db  0x00 ; '.'
000000000021f39e         db  0x00 ; '.'
000000000021f39f         db  0x00 ; '.'
000000000021f3a0         db  0x00 ; '.'
000000000021f3a1         db  0x00 ; '.'
000000000021f3a2         db  0x00 ; '.'
000000000021f3a3         db  0x00 ; '.'
000000000021f3a4         db  0x00 ; '.'
000000000021f3a5         db  0x00 ; '.'
000000000021f3a6         db  0x00 ; '.'
000000000021f3a7         db  0x00 ; '.'
000000000021f3a8         db  0x00 ; '.'
000000000021f3a9         db  0x00 ; '.'
000000000021f3aa         db  0x00 ; '.'
000000000021f3ab         db  0x00 ; '.'
000000000021f3ac         db  0x00 ; '.'
000000000021f3ad         db  0x00 ; '.'
000000000021f3ae         db  0x00 ; '.'
000000000021f3af         db  0x00 ; '.'
000000000021f3b0         db  0x00 ; '.'
000000000021f3b1         db  0x00 ; '.'
000000000021f3b2         db  0x00 ; '.'
000000000021f3b3         db  0x00 ; '.'
000000000021f3b4         db  0x00 ; '.'
000000000021f3b5         db  0x00 ; '.'
000000000021f3b6         db  0x00 ; '.'
000000000021f3b7         db  0x00 ; '.'
000000000021f3b8         db  0x00 ; '.'
000000000021f3b9         db  0x00 ; '.'
000000000021f3ba         db  0x00 ; '.'
000000000021f3bb         db  0x00 ; '.'
000000000021f3bc         db  0x00 ; '.'
000000000021f3bd         db  0x00 ; '.'
000000000021f3be         db  0x00 ; '.'
000000000021f3bf         db  0x00 ; '.'
000000000021f3c0         db  0x00 ; '.'
000000000021f3c1         db  0x00 ; '.'
000000000021f3c2         db  0x00 ; '.'
000000000021f3c3         db  0x00 ; '.'
000000000021f3c4         db  0x00 ; '.'
000000000021f3c5         db  0x00 ; '.'
000000000021f3c6         db  0x00 ; '.'
000000000021f3c7         db  0x00 ; '.'
000000000021f3c8         db  0x00 ; '.'
000000000021f3c9         db  0x00 ; '.'
000000000021f3ca         db  0x00 ; '.'
000000000021f3cb         db  0x00 ; '.'
000000000021f3cc         db  0x00 ; '.'
000000000021f3cd         db  0x00 ; '.'
000000000021f3ce         db  0x00 ; '.'
000000000021f3cf         db  0x00 ; '.'
000000000021f3d0         db  0x00 ; '.'
000000000021f3d1         db  0x00 ; '.'
000000000021f3d2         db  0x00 ; '.'
000000000021f3d3         db  0x00 ; '.'
000000000021f3d4         db  0x00 ; '.'
000000000021f3d5         db  0x00 ; '.'
000000000021f3d6         db  0x00 ; '.'
000000000021f3d7         db  0x00 ; '.'
000000000021f3d8         db  0x00 ; '.'
000000000021f3d9         db  0x00 ; '.'
000000000021f3da         db  0x00 ; '.'
000000000021f3db         db  0x00 ; '.'
000000000021f3dc         db  0x00 ; '.'
000000000021f3dd         db  0x00 ; '.'
000000000021f3de         db  0x00 ; '.'
000000000021f3df         db  0x00 ; '.'
000000000021f3e0         db  0x00 ; '.'
000000000021f3e1         db  0x00 ; '.'
000000000021f3e2         db  0x00 ; '.'
000000000021f3e3         db  0x00 ; '.'
000000000021f3e4         db  0x00 ; '.'
000000000021f3e5         db  0x00 ; '.'
000000000021f3e6         db  0x00 ; '.'
000000000021f3e7         db  0x00 ; '.'
000000000021f3e8         db  0x00 ; '.'
000000000021f3e9         db  0x00 ; '.'
000000000021f3ea         db  0x00 ; '.'
000000000021f3eb         db  0x00 ; '.'
000000000021f3ec         db  0x00 ; '.'
000000000021f3ed         db  0x00 ; '.'
000000000021f3ee         db  0x00 ; '.'
000000000021f3ef         db  0x00 ; '.'
000000000021f3f0         db  0x00 ; '.'
000000000021f3f1         db  0x00 ; '.'
000000000021f3f2         db  0x00 ; '.'
000000000021f3f3         db  0x00 ; '.'
000000000021f3f4         db  0x00 ; '.'
000000000021f3f5         db  0x00 ; '.'
000000000021f3f6         db  0x00 ; '.'
000000000021f3f7         db  0x00 ; '.'
000000000021f3f8         db  0x00 ; '.'
000000000021f3f9         db  0x00 ; '.'
000000000021f3fa         db  0x00 ; '.'
000000000021f3fb         db  0x00 ; '.'
000000000021f3fc         db  0x00 ; '.'
000000000021f3fd         db  0x00 ; '.'
000000000021f3fe         db  0x00 ; '.'
000000000021f3ff         db  0x00 ; '.'
000000000021f400         db  0x00 ; '.'
000000000021f401         db  0x00 ; '.'
000000000021f402         db  0x00 ; '.'
000000000021f403         db  0x00 ; '.'
000000000021f404         db  0x00 ; '.'
000000000021f405         db  0x00 ; '.'
000000000021f406         db  0x00 ; '.'
000000000021f407         db  0x00 ; '.'
000000000021f408         db  0x00 ; '.'
000000000021f409         db  0x00 ; '.'
000000000021f40a         db  0x00 ; '.'
000000000021f40b         db  0x00 ; '.'
000000000021f40c         db  0x00 ; '.'
000000000021f40d         db  0x00 ; '.'
000000000021f40e         db  0x00 ; '.'
000000000021f40f         db  0x00 ; '.'
000000000021f410         db  0x00 ; '.'
000000000021f411         db  0x00 ; '.'
000000000021f412         db  0x00 ; '.'
000000000021f413         db  0x00 ; '.'
000000000021f414         db  0x00 ; '.'
000000000021f415         db  0x00 ; '.'
000000000021f416         db  0x00 ; '.'
000000000021f417         db  0x00 ; '.'
000000000021f418         db  0x00 ; '.'
000000000021f419         db  0x00 ; '.'
000000000021f41a         db  0x00 ; '.'
000000000021f41b         db  0x00 ; '.'
000000000021f41c         db  0x00 ; '.'
000000000021f41d         db  0x00 ; '.'
000000000021f41e         db  0x00 ; '.'
000000000021f41f         db  0x00 ; '.'
000000000021f420         db  0x00 ; '.'
000000000021f421         db  0x00 ; '.'
000000000021f422         db  0x00 ; '.'
000000000021f423         db  0x00 ; '.'
000000000021f424         db  0x00 ; '.'
000000000021f425         db  0x00 ; '.'
000000000021f426         db  0x00 ; '.'
000000000021f427         db  0x00 ; '.'
000000000021f428         db  0x00 ; '.'
000000000021f429         db  0x00 ; '.'
000000000021f42a         db  0x00 ; '.'
000000000021f42b         db  0x00 ; '.'
000000000021f42c         db  0x00 ; '.'
000000000021f42d         db  0x00 ; '.'
000000000021f42e         db  0x00 ; '.'
000000000021f42f         db  0x00 ; '.'
000000000021f430         db  0x00 ; '.'
000000000021f431         db  0x00 ; '.'
000000000021f432         db  0x00 ; '.'
000000000021f433         db  0x00 ; '.'
000000000021f434         db  0x00 ; '.'
000000000021f435         db  0x00 ; '.'
000000000021f436         db  0x00 ; '.'
000000000021f437         db  0x00 ; '.'
000000000021f438         db  0x00 ; '.'
000000000021f439         db  0x00 ; '.'
000000000021f43a         db  0x00 ; '.'
000000000021f43b         db  0x00 ; '.'
000000000021f43c         db  0x00 ; '.'
000000000021f43d         db  0x00 ; '.'
000000000021f43e         db  0x00 ; '.'
000000000021f43f         db  0x00 ; '.'
000000000021f440         db  0x00 ; '.'
000000000021f441         db  0x00 ; '.'
000000000021f442         db  0x00 ; '.'
000000000021f443         db  0x00 ; '.'
000000000021f444         db  0x00 ; '.'
000000000021f445         db  0x00 ; '.'
000000000021f446         db  0x00 ; '.'
000000000021f447         db  0x00 ; '.'
000000000021f448         db  0x00 ; '.'
000000000021f449         db  0x00 ; '.'
000000000021f44a         db  0x00 ; '.'
000000000021f44b         db  0x00 ; '.'
000000000021f44c         db  0x00 ; '.'
000000000021f44d         db  0x00 ; '.'
000000000021f44e         db  0x00 ; '.'
000000000021f44f         db  0x00 ; '.'
000000000021f450         db  0x00 ; '.'
000000000021f451         db  0x00 ; '.'
000000000021f452         db  0x00 ; '.'
000000000021f453         db  0x00 ; '.'
000000000021f454         db  0x00 ; '.'
000000000021f455         db  0x00 ; '.'
000000000021f456         db  0x00 ; '.'
000000000021f457         db  0x00 ; '.'
000000000021f458         db  0x00 ; '.'
000000000021f459         db  0x00 ; '.'
000000000021f45a         db  0x00 ; '.'
000000000021f45b         db  0x00 ; '.'
000000000021f45c         db  0x00 ; '.'
000000000021f45d         db  0x00 ; '.'
000000000021f45e         db  0x00 ; '.'
000000000021f45f         db  0x00 ; '.'
000000000021f460         db  0x00 ; '.'
000000000021f461         db  0x00 ; '.'
000000000021f462         db  0x00 ; '.'
000000000021f463         db  0x00 ; '.'
000000000021f464         db  0x00 ; '.'
000000000021f465         db  0x00 ; '.'
000000000021f466         db  0x00 ; '.'
000000000021f467         db  0x00 ; '.'
000000000021f468         db  0x00 ; '.'
000000000021f469         db  0x00 ; '.'
000000000021f46a         db  0x00 ; '.'
000000000021f46b         db  0x00 ; '.'
000000000021f46c         db  0x00 ; '.'
000000000021f46d         db  0x00 ; '.'
000000000021f46e         db  0x00 ; '.'
000000000021f46f         db  0x00 ; '.'
000000000021f470         db  0x00 ; '.'
000000000021f471         db  0x00 ; '.'
000000000021f472         db  0x00 ; '.'
000000000021f473         db  0x00 ; '.'
000000000021f474         db  0x00 ; '.'
000000000021f475         db  0x00 ; '.'
000000000021f476         db  0x00 ; '.'
000000000021f477         db  0x00 ; '.'
000000000021f478         db  0x00 ; '.'
000000000021f479         db  0x00 ; '.'
000000000021f47a         db  0x00 ; '.'
000000000021f47b         db  0x00 ; '.'
000000000021f47c         db  0x00 ; '.'
000000000021f47d         db  0x00 ; '.'
000000000021f47e         db  0x00 ; '.'
000000000021f47f         db  0x00 ; '.'
000000000021f480         db  0x00 ; '.'
000000000021f481         db  0x00 ; '.'
000000000021f482         db  0x00 ; '.'
000000000021f483         db  0x00 ; '.'
000000000021f484         db  0x00 ; '.'
000000000021f485         db  0x00 ; '.'
000000000021f486         db  0x00 ; '.'
000000000021f487         db  0x00 ; '.'
000000000021f488         db  0x00 ; '.'
000000000021f489         db  0x00 ; '.'
000000000021f48a         db  0x00 ; '.'
000000000021f48b         db  0x00 ; '.'
000000000021f48c         db  0x00 ; '.'
000000000021f48d         db  0x00 ; '.'
000000000021f48e         db  0x00 ; '.'
000000000021f48f         db  0x00 ; '.'
000000000021f490         db  0x00 ; '.'
000000000021f491         db  0x00 ; '.'
000000000021f492         db  0x00 ; '.'
000000000021f493         db  0x00 ; '.'
000000000021f494         db  0x00 ; '.'
000000000021f495         db  0x00 ; '.'
000000000021f496         db  0x00 ; '.'
000000000021f497         db  0x00 ; '.'
000000000021f498         db  0x00 ; '.'
000000000021f499         db  0x00 ; '.'
000000000021f49a         db  0x00 ; '.'
000000000021f49b         db  0x00 ; '.'
000000000021f49c         db  0x00 ; '.'
000000000021f49d         db  0x00 ; '.'
000000000021f49e         db  0x00 ; '.'
000000000021f49f         db  0x00 ; '.'
000000000021f4a0         db  0x00 ; '.'
000000000021f4a1         db  0x00 ; '.'
000000000021f4a2         db  0x00 ; '.'
000000000021f4a3         db  0x00 ; '.'
000000000021f4a4         db  0x00 ; '.'
000000000021f4a5         db  0x00 ; '.'
000000000021f4a6         db  0x00 ; '.'
000000000021f4a7         db  0x00 ; '.'
000000000021f4a8         db  0x00 ; '.'
000000000021f4a9         db  0x00 ; '.'
000000000021f4aa         db  0x00 ; '.'
000000000021f4ab         db  0x00 ; '.'
000000000021f4ac         db  0x00 ; '.'
000000000021f4ad         db  0x00 ; '.'
000000000021f4ae         db  0x00 ; '.'
000000000021f4af         db  0x00 ; '.'
000000000021f4b0         db  0x00 ; '.'
000000000021f4b1         db  0x00 ; '.'
000000000021f4b2         db  0x00 ; '.'
000000000021f4b3         db  0x00 ; '.'
000000000021f4b4         db  0x00 ; '.'
000000000021f4b5         db  0x00 ; '.'
000000000021f4b6         db  0x00 ; '.'
000000000021f4b7         db  0x00 ; '.'
000000000021f4b8         db  0x00 ; '.'
000000000021f4b9         db  0x00 ; '.'
000000000021f4ba         db  0x00 ; '.'
000000000021f4bb         db  0x00 ; '.'
000000000021f4bc         db  0x00 ; '.'
000000000021f4bd         db  0x00 ; '.'
000000000021f4be         db  0x00 ; '.'
000000000021f4bf         db  0x00 ; '.'
000000000021f4c0         db  0x00 ; '.'
000000000021f4c1         db  0x00 ; '.'
000000000021f4c2         db  0x00 ; '.'
000000000021f4c3         db  0x00 ; '.'
000000000021f4c4         db  0x00 ; '.'
000000000021f4c5         db  0x00 ; '.'
000000000021f4c6         db  0x00 ; '.'
000000000021f4c7         db  0x00 ; '.'
000000000021f4c8         db  0x00 ; '.'
000000000021f4c9         db  0x00 ; '.'
000000000021f4ca         db  0x00 ; '.'
000000000021f4cb         db  0x00 ; '.'
000000000021f4cc         db  0x00 ; '.'
000000000021f4cd         db  0x00 ; '.'
000000000021f4ce         db  0x00 ; '.'
000000000021f4cf         db  0x00 ; '.'
000000000021f4d0         db  0x00 ; '.'
000000000021f4d1         db  0x00 ; '.'
000000000021f4d2         db  0x00 ; '.'
000000000021f4d3         db  0x00 ; '.'
000000000021f4d4         db  0x00 ; '.'
000000000021f4d5         db  0x00 ; '.'
000000000021f4d6         db  0x00 ; '.'
000000000021f4d7         db  0x00 ; '.'
000000000021f4d8         db  0x00 ; '.'
000000000021f4d9         db  0x00 ; '.'
000000000021f4da         db  0x00 ; '.'
000000000021f4db         db  0x00 ; '.'
000000000021f4dc         db  0x00 ; '.'
000000000021f4dd         db  0x00 ; '.'
000000000021f4de         db  0x00 ; '.'
000000000021f4df         db  0x00 ; '.'
000000000021f4e0         db  0x00 ; '.'
000000000021f4e1         db  0x00 ; '.'
000000000021f4e2         db  0x00 ; '.'
000000000021f4e3         db  0x00 ; '.'
000000000021f4e4         db  0x00 ; '.'
000000000021f4e5         db  0x00 ; '.'
000000000021f4e6         db  0x00 ; '.'
000000000021f4e7         db  0x00 ; '.'
000000000021f4e8         db  0x00 ; '.'
000000000021f4e9         db  0x00 ; '.'
000000000021f4ea         db  0x00 ; '.'
000000000021f4eb         db  0x00 ; '.'
000000000021f4ec         db  0x00 ; '.'
000000000021f4ed         db  0x00 ; '.'
000000000021f4ee         db  0x00 ; '.'
000000000021f4ef         db  0x00 ; '.'
000000000021f4f0         db  0x00 ; '.'
000000000021f4f1         db  0x00 ; '.'
000000000021f4f2         db  0x00 ; '.'
000000000021f4f3         db  0x00 ; '.'
000000000021f4f4         db  0x00 ; '.'
000000000021f4f5         db  0x00 ; '.'
000000000021f4f6         db  0x00 ; '.'
000000000021f4f7         db  0x00 ; '.'
000000000021f4f8         db  0x00 ; '.'
000000000021f4f9         db  0x00 ; '.'
000000000021f4fa         db  0x00 ; '.'
000000000021f4fb         db  0x00 ; '.'
000000000021f4fc         db  0x00 ; '.'
000000000021f4fd         db  0x00 ; '.'
000000000021f4fe         db  0x00 ; '.'
000000000021f4ff         db  0x00 ; '.'
000000000021f500         db  0x00 ; '.'
000000000021f501         db  0x00 ; '.'
000000000021f502         db  0x00 ; '.'
000000000021f503         db  0x00 ; '.'
000000000021f504         db  0x00 ; '.'
000000000021f505         db  0x00 ; '.'
000000000021f506         db  0x00 ; '.'
000000000021f507         db  0x00 ; '.'
000000000021f508         db  0x00 ; '.'
000000000021f509         db  0x00 ; '.'
000000000021f50a         db  0x00 ; '.'
000000000021f50b         db  0x00 ; '.'
000000000021f50c         db  0x00 ; '.'
000000000021f50d         db  0x00 ; '.'
000000000021f50e         db  0x00 ; '.'
000000000021f50f         db  0x00 ; '.'
000000000021f510         db  0x00 ; '.'
000000000021f511         db  0x00 ; '.'
000000000021f512         db  0x00 ; '.'
000000000021f513         db  0x00 ; '.'
000000000021f514         db  0x00 ; '.'
000000000021f515         db  0x00 ; '.'
000000000021f516         db  0x00 ; '.'
000000000021f517         db  0x00 ; '.'
000000000021f518         db  0x00 ; '.'
000000000021f519         db  0x00 ; '.'
000000000021f51a         db  0x00 ; '.'
000000000021f51b         db  0x00 ; '.'
000000000021f51c         db  0x00 ; '.'
000000000021f51d         db  0x00 ; '.'
000000000021f51e         db  0x00 ; '.'
000000000021f51f         db  0x00 ; '.'
000000000021f520         db  0x00 ; '.'
000000000021f521         db  0x00 ; '.'
000000000021f522         db  0x00 ; '.'
000000000021f523         db  0x00 ; '.'
000000000021f524         db  0x00 ; '.'
000000000021f525         db  0x00 ; '.'
000000000021f526         db  0x00 ; '.'
000000000021f527         db  0x00 ; '.'
000000000021f528         db  0x00 ; '.'
000000000021f529         db  0x00 ; '.'
000000000021f52a         db  0x00 ; '.'
000000000021f52b         db  0x00 ; '.'
000000000021f52c         db  0x00 ; '.'
000000000021f52d         db  0x00 ; '.'
000000000021f52e         db  0x00 ; '.'
000000000021f52f         db  0x00 ; '.'
000000000021f530         db  0x00 ; '.'
000000000021f531         db  0x00 ; '.'
000000000021f532         db  0x00 ; '.'
000000000021f533         db  0x00 ; '.'
000000000021f534         db  0x00 ; '.'
000000000021f535         db  0x00 ; '.'
000000000021f536         db  0x00 ; '.'
000000000021f537         db  0x00 ; '.'
000000000021f538         db  0x00 ; '.'
000000000021f539         db  0x00 ; '.'
000000000021f53a         db  0x00 ; '.'
000000000021f53b         db  0x00 ; '.'
000000000021f53c         db  0x00 ; '.'
000000000021f53d         db  0x00 ; '.'
000000000021f53e         db  0x00 ; '.'
000000000021f53f         db  0x00 ; '.'
000000000021f540         db  0x00 ; '.'
000000000021f541         db  0x00 ; '.'
000000000021f542         db  0x00 ; '.'
000000000021f543         db  0x00 ; '.'
000000000021f544         db  0x00 ; '.'
000000000021f545         db  0x00 ; '.'
000000000021f546         db  0x00 ; '.'
000000000021f547         db  0x00 ; '.'
000000000021f548         db  0x00 ; '.'
000000000021f549         db  0x00 ; '.'
000000000021f54a         db  0x00 ; '.'
000000000021f54b         db  0x00 ; '.'
000000000021f54c         db  0x00 ; '.'
000000000021f54d         db  0x00 ; '.'
000000000021f54e         db  0x00 ; '.'
000000000021f54f         db  0x00 ; '.'
000000000021f550         db  0x00 ; '.'
000000000021f551         db  0x00 ; '.'
000000000021f552         db  0x00 ; '.'
000000000021f553         db  0x00 ; '.'
000000000021f554         db  0x00 ; '.'
000000000021f555         db  0x00 ; '.'
000000000021f556         db  0x00 ; '.'
000000000021f557         db  0x00 ; '.'
000000000021f558         db  0x00 ; '.'
000000000021f559         db  0x00 ; '.'
000000000021f55a         db  0x00 ; '.'
000000000021f55b         db  0x00 ; '.'
000000000021f55c         db  0x00 ; '.'
000000000021f55d         db  0x00 ; '.'
000000000021f55e         db  0x00 ; '.'
000000000021f55f         db  0x00 ; '.'
000000000021f560         db  0x00 ; '.'
000000000021f561         db  0x00 ; '.'
000000000021f562         db  0x00 ; '.'
000000000021f563         db  0x00 ; '.'
000000000021f564         db  0x00 ; '.'
000000000021f565         db  0x00 ; '.'
000000000021f566         db  0x00 ; '.'
000000000021f567         db  0x00 ; '.'
000000000021f568         db  0x00 ; '.'
000000000021f569         db  0x00 ; '.'
000000000021f56a         db  0x00 ; '.'
000000000021f56b         db  0x00 ; '.'
000000000021f56c         db  0x00 ; '.'
000000000021f56d         db  0x00 ; '.'
000000000021f56e         db  0x00 ; '.'
000000000021f56f         db  0x00 ; '.'
000000000021f570         db  0x00 ; '.'
000000000021f571         db  0x00 ; '.'
000000000021f572         db  0x00 ; '.'
000000000021f573         db  0x00 ; '.'
000000000021f574         db  0x00 ; '.'
000000000021f575         db  0x00 ; '.'
000000000021f576         db  0x00 ; '.'
000000000021f577         db  0x00 ; '.'
000000000021f578         db  0x00 ; '.'
000000000021f579         db  0x00 ; '.'
000000000021f57a         db  0x00 ; '.'
000000000021f57b         db  0x00 ; '.'
000000000021f57c         db  0x00 ; '.'
000000000021f57d         db  0x00 ; '.'
000000000021f57e         db  0x00 ; '.'
000000000021f57f         db  0x00 ; '.'
                     zeros.7570:
000000000021f580         db  0x00 ; '.'                                         ; DATA XREF=write_zeros, write_zeros+47, write_zeros+126, write_zeros+153
000000000021f581         db  0x00 ; '.'
000000000021f582         db  0x00 ; '.'
000000000021f583         db  0x00 ; '.'
000000000021f584         db  0x00 ; '.'
000000000021f585         db  0x00 ; '.'
000000000021f586         db  0x00 ; '.'
000000000021f587         db  0x00 ; '.'
                     top_level_dst_name:
000000000021f588         db  0x00 ; '.'                                         ; DATA XREF=copy_internal+4262, copy_internal+6576, copy+106
000000000021f589         db  0x00 ; '.'
000000000021f58a         db  0x00 ; '.'
000000000021f58b         db  0x00 ; '.'
000000000021f58c         db  0x00 ; '.'
000000000021f58d         db  0x00 ; '.'
000000000021f58e         db  0x00 ; '.'
000000000021f58f         db  0x00 ; '.'
                     top_level_src_name:
000000000021f590         db  0x00 ; '.'                                         ; DATA XREF=copy_internal+4284, copy_internal+6598, copy_internal+9930, copy+113
000000000021f591         db  0x00 ; '.'
000000000021f592         db  0x00 ; '.'
000000000021f593         db  0x00 ; '.'
000000000021f594         db  0x00 ; '.'
000000000021f595         db  0x00 ; '.'
000000000021f596         db  0x00 ; '.'
000000000021f597         db  0x00 ; '.'
                     src_to_dest:
000000000021f598         db  0x00 ; '.'                                         ; DATA XREF=forget_created+9, src_to_dest_lookup+8, remember_copied+40, hash_init+40, forget_all
000000000021f599         db  0x00 ; '.'
000000000021f59a         db  0x00 ; '.'
000000000021f59b         db  0x00 ; '.'
000000000021f59c         db  0x00 ; '.'
000000000021f59d         db  0x00 ; '.'
000000000021f59e         db  0x00 ; '.'
000000000021f59f         db  0x00 ; '.'
                     simple_backup_suffix:
000000000021f5a0         db  0x00 ; '.'                                         ; DATA XREF=copy_internal+3476, copy_internal+10379, set_simple_backup_suffix+21, backupfile_internal+72, backupfile_internal+970, backupfile_internal+1009, backupfile_internal+1513
000000000021f5a1         db  0x00 ; '.'
000000000021f5a2         db  0x00 ; '.'
000000000021f5a3         db  0x00 ; '.'
000000000021f5a4         db  0x00 ; '.'
000000000021f5a5         db  0x00 ; '.'
000000000021f5a6         db  0x00 ; '.'
000000000021f5a7         db  0x00 ; '.'
                     file_name:
000000000021f5a8         db  0x00 ; '.'                                         ; DATA XREF=close_stdin_set_file_name, close_stdin+107
000000000021f5a9         db  0x00 ; '.'
000000000021f5aa         db  0x00 ; '.'
000000000021f5ab         db  0x00 ; '.'
000000000021f5ac         db  0x00 ; '.'
000000000021f5ad         db  0x00 ; '.'
000000000021f5ae         db  0x00 ; '.'
000000000021f5af         db  0x00 ; '.'
                     ignore_EPIPE:
000000000021f5b0         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
000000000021f5b1         db  0x00 ; '.'
000000000021f5b2         db  0x00 ; '.'
000000000021f5b3         db  0x00 ; '.'
000000000021f5b4         db  0x00 ; '.'
000000000021f5b5         db  0x00 ; '.'
000000000021f5b6         db  0x00 ; '.'
000000000021f5b7         db  0x00 ; '.'
                     file_name_21f5b8:        // file_name
000000000021f5b8         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
000000000021f5b9         db  0x00 ; '.'
000000000021f5ba         db  0x00 ; '.'
000000000021f5bb         db  0x00 ; '.'
000000000021f5bc         db  0x00 ; '.'
000000000021f5bd         db  0x00 ; '.'
000000000021f5be         db  0x00 ; '.'
000000000021f5bf         db  0x00 ; '.'
                     program_name:
000000000021f5c0         db  0x00 ; '.'                                         ; DATA XREF=usage+20, prog_fprintf+113, overwrite_ok.isra.12+106, overwrite_ok.isra.12+220, set_program_name+109
000000000021f5c1         db  0x00 ; '.'
000000000021f5c2         db  0x00 ; '.'
000000000021f5c3         db  0x00 ; '.'
000000000021f5c4         db  0x00 ; '.'
000000000021f5c5         db  0x00 ; '.'
000000000021f5c6         db  0x00 ; '.'
000000000021f5c7         db  0x00 ; '.'
000000000021f5c8         db  0x00 ; '.'
000000000021f5c9         db  0x00 ; '.'
000000000021f5ca         db  0x00 ; '.'
000000000021f5cb         db  0x00 ; '.'
000000000021f5cc         db  0x00 ; '.'
000000000021f5cd         db  0x00 ; '.'
000000000021f5ce         db  0x00 ; '.'
000000000021f5cf         db  0x00 ; '.'
000000000021f5d0         db  0x00 ; '.'
000000000021f5d1         db  0x00 ; '.'
000000000021f5d2         db  0x00 ; '.'
000000000021f5d3         db  0x00 ; '.'
000000000021f5d4         db  0x00 ; '.'
000000000021f5d5         db  0x00 ; '.'
000000000021f5d6         db  0x00 ; '.'
000000000021f5d7         db  0x00 ; '.'
000000000021f5d8         db  0x00 ; '.'
000000000021f5d9         db  0x00 ; '.'
000000000021f5da         db  0x00 ; '.'
000000000021f5db         db  0x00 ; '.'
000000000021f5dc         db  0x00 ; '.'
000000000021f5dd         db  0x00 ; '.'
000000000021f5de         db  0x00 ; '.'
000000000021f5df         db  0x00 ; '.'
                     slot0:
000000000021f5e0         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
000000000021f5e1         db  0x00 ; '.'
000000000021f5e2         db  0x00 ; '.'
000000000021f5e3         db  0x00 ; '.'
000000000021f5e4         db  0x00 ; '.'
000000000021f5e5         db  0x00 ; '.'
000000000021f5e6         db  0x00 ; '.'
000000000021f5e7         db  0x00 ; '.'
000000000021f5e8         db  0x00 ; '.'
000000000021f5e9         db  0x00 ; '.'
000000000021f5ea         db  0x00 ; '.'
000000000021f5eb         db  0x00 ; '.'
000000000021f5ec         db  0x00 ; '.'
000000000021f5ed         db  0x00 ; '.'
000000000021f5ee         db  0x00 ; '.'
000000000021f5ef         db  0x00 ; '.'
000000000021f5f0         db  0x00 ; '.'
000000000021f5f1         db  0x00 ; '.'
000000000021f5f2         db  0x00 ; '.'
000000000021f5f3         db  0x00 ; '.'
000000000021f5f4         db  0x00 ; '.'
000000000021f5f5         db  0x00 ; '.'
000000000021f5f6         db  0x00 ; '.'
000000000021f5f7         db  0x00 ; '.'
000000000021f5f8         db  0x00 ; '.'
000000000021f5f9         db  0x00 ; '.'
000000000021f5fa         db  0x00 ; '.'
000000000021f5fb         db  0x00 ; '.'
000000000021f5fc         db  0x00 ; '.'
000000000021f5fd         db  0x00 ; '.'
000000000021f5fe         db  0x00 ; '.'
000000000021f5ff         db  0x00 ; '.'
000000000021f600         db  0x00 ; '.'
000000000021f601         db  0x00 ; '.'
000000000021f602         db  0x00 ; '.'
000000000021f603         db  0x00 ; '.'
000000000021f604         db  0x00 ; '.'
000000000021f605         db  0x00 ; '.'
000000000021f606         db  0x00 ; '.'
000000000021f607         db  0x00 ; '.'
000000000021f608         db  0x00 ; '.'
000000000021f609         db  0x00 ; '.'
000000000021f60a         db  0x00 ; '.'
000000000021f60b         db  0x00 ; '.'
000000000021f60c         db  0x00 ; '.'
000000000021f60d         db  0x00 ; '.'
000000000021f60e         db  0x00 ; '.'
000000000021f60f         db  0x00 ; '.'
000000000021f610         db  0x00 ; '.'
000000000021f611         db  0x00 ; '.'
000000000021f612         db  0x00 ; '.'
000000000021f613         db  0x00 ; '.'
000000000021f614         db  0x00 ; '.'
000000000021f615         db  0x00 ; '.'
000000000021f616         db  0x00 ; '.'
000000000021f617         db  0x00 ; '.'
000000000021f618         db  0x00 ; '.'
000000000021f619         db  0x00 ; '.'
000000000021f61a         db  0x00 ; '.'
000000000021f61b         db  0x00 ; '.'
000000000021f61c         db  0x00 ; '.'
000000000021f61d         db  0x00 ; '.'
000000000021f61e         db  0x00 ; '.'
000000000021f61f         db  0x00 ; '.'
000000000021f620         db  0x00 ; '.'
000000000021f621         db  0x00 ; '.'
000000000021f622         db  0x00 ; '.'
000000000021f623         db  0x00 ; '.'
000000000021f624         db  0x00 ; '.'
000000000021f625         db  0x00 ; '.'
000000000021f626         db  0x00 ; '.'
000000000021f627         db  0x00 ; '.'
000000000021f628         db  0x00 ; '.'
000000000021f629         db  0x00 ; '.'
000000000021f62a         db  0x00 ; '.'
000000000021f62b         db  0x00 ; '.'
000000000021f62c         db  0x00 ; '.'
000000000021f62d         db  0x00 ; '.'
000000000021f62e         db  0x00 ; '.'
000000000021f62f         db  0x00 ; '.'
000000000021f630         db  0x00 ; '.'
000000000021f631         db  0x00 ; '.'
000000000021f632         db  0x00 ; '.'
000000000021f633         db  0x00 ; '.'
000000000021f634         db  0x00 ; '.'
000000000021f635         db  0x00 ; '.'
000000000021f636         db  0x00 ; '.'
000000000021f637         db  0x00 ; '.'
000000000021f638         db  0x00 ; '.'
000000000021f639         db  0x00 ; '.'
000000000021f63a         db  0x00 ; '.'
000000000021f63b         db  0x00 ; '.'
000000000021f63c         db  0x00 ; '.'
000000000021f63d         db  0x00 ; '.'
000000000021f63e         db  0x00 ; '.'
000000000021f63f         db  0x00 ; '.'
000000000021f640         db  0x00 ; '.'
000000000021f641         db  0x00 ; '.'
000000000021f642         db  0x00 ; '.'
000000000021f643         db  0x00 ; '.'
000000000021f644         db  0x00 ; '.'
000000000021f645         db  0x00 ; '.'
000000000021f646         db  0x00 ; '.'
000000000021f647         db  0x00 ; '.'
000000000021f648         db  0x00 ; '.'
000000000021f649         db  0x00 ; '.'
000000000021f64a         db  0x00 ; '.'
000000000021f64b         db  0x00 ; '.'
000000000021f64c         db  0x00 ; '.'
000000000021f64d         db  0x00 ; '.'
000000000021f64e         db  0x00 ; '.'
000000000021f64f         db  0x00 ; '.'
000000000021f650         db  0x00 ; '.'
000000000021f651         db  0x00 ; '.'
000000000021f652         db  0x00 ; '.'
000000000021f653         db  0x00 ; '.'
000000000021f654         db  0x00 ; '.'
000000000021f655         db  0x00 ; '.'
000000000021f656         db  0x00 ; '.'
000000000021f657         db  0x00 ; '.'
000000000021f658         db  0x00 ; '.'
000000000021f659         db  0x00 ; '.'
000000000021f65a         db  0x00 ; '.'
000000000021f65b         db  0x00 ; '.'
000000000021f65c         db  0x00 ; '.'
000000000021f65d         db  0x00 ; '.'
000000000021f65e         db  0x00 ; '.'
000000000021f65f         db  0x00 ; '.'
000000000021f660         db  0x00 ; '.'
000000000021f661         db  0x00 ; '.'
000000000021f662         db  0x00 ; '.'
000000000021f663         db  0x00 ; '.'
000000000021f664         db  0x00 ; '.'
000000000021f665         db  0x00 ; '.'
000000000021f666         db  0x00 ; '.'
000000000021f667         db  0x00 ; '.'
000000000021f668         db  0x00 ; '.'
000000000021f669         db  0x00 ; '.'
000000000021f66a         db  0x00 ; '.'
000000000021f66b         db  0x00 ; '.'
000000000021f66c         db  0x00 ; '.'
000000000021f66d         db  0x00 ; '.'
000000000021f66e         db  0x00 ; '.'
000000000021f66f         db  0x00 ; '.'
000000000021f670         db  0x00 ; '.'
000000000021f671         db  0x00 ; '.'
000000000021f672         db  0x00 ; '.'
000000000021f673         db  0x00 ; '.'
000000000021f674         db  0x00 ; '.'
000000000021f675         db  0x00 ; '.'
000000000021f676         db  0x00 ; '.'
000000000021f677         db  0x00 ; '.'
000000000021f678         db  0x00 ; '.'
000000000021f679         db  0x00 ; '.'
000000000021f67a         db  0x00 ; '.'
000000000021f67b         db  0x00 ; '.'
000000000021f67c         db  0x00 ; '.'
000000000021f67d         db  0x00 ; '.'
000000000021f67e         db  0x00 ; '.'
000000000021f67f         db  0x00 ; '.'
000000000021f680         db  0x00 ; '.'
000000000021f681         db  0x00 ; '.'
000000000021f682         db  0x00 ; '.'
000000000021f683         db  0x00 ; '.'
000000000021f684         db  0x00 ; '.'
000000000021f685         db  0x00 ; '.'
000000000021f686         db  0x00 ; '.'
000000000021f687         db  0x00 ; '.'
000000000021f688         db  0x00 ; '.'
000000000021f689         db  0x00 ; '.'
000000000021f68a         db  0x00 ; '.'
000000000021f68b         db  0x00 ; '.'
000000000021f68c         db  0x00 ; '.'
000000000021f68d         db  0x00 ; '.'
000000000021f68e         db  0x00 ; '.'
000000000021f68f         db  0x00 ; '.'
000000000021f690         db  0x00 ; '.'
000000000021f691         db  0x00 ; '.'
000000000021f692         db  0x00 ; '.'
000000000021f693         db  0x00 ; '.'
000000000021f694         db  0x00 ; '.'
000000000021f695         db  0x00 ; '.'
000000000021f696         db  0x00 ; '.'
000000000021f697         db  0x00 ; '.'
000000000021f698         db  0x00 ; '.'
000000000021f699         db  0x00 ; '.'
000000000021f69a         db  0x00 ; '.'
000000000021f69b         db  0x00 ; '.'
000000000021f69c         db  0x00 ; '.'
000000000021f69d         db  0x00 ; '.'
000000000021f69e         db  0x00 ; '.'
000000000021f69f         db  0x00 ; '.'
000000000021f6a0         db  0x00 ; '.'
000000000021f6a1         db  0x00 ; '.'
000000000021f6a2         db  0x00 ; '.'
000000000021f6a3         db  0x00 ; '.'
000000000021f6a4         db  0x00 ; '.'
000000000021f6a5         db  0x00 ; '.'
000000000021f6a6         db  0x00 ; '.'
000000000021f6a7         db  0x00 ; '.'
000000000021f6a8         db  0x00 ; '.'
000000000021f6a9         db  0x00 ; '.'
000000000021f6aa         db  0x00 ; '.'
000000000021f6ab         db  0x00 ; '.'
000000000021f6ac         db  0x00 ; '.'
000000000021f6ad         db  0x00 ; '.'
000000000021f6ae         db  0x00 ; '.'
000000000021f6af         db  0x00 ; '.'
000000000021f6b0         db  0x00 ; '.'
000000000021f6b1         db  0x00 ; '.'
000000000021f6b2         db  0x00 ; '.'
000000000021f6b3         db  0x00 ; '.'
000000000021f6b4         db  0x00 ; '.'
000000000021f6b5         db  0x00 ; '.'
000000000021f6b6         db  0x00 ; '.'
000000000021f6b7         db  0x00 ; '.'
000000000021f6b8         db  0x00 ; '.'
000000000021f6b9         db  0x00 ; '.'
000000000021f6ba         db  0x00 ; '.'
000000000021f6bb         db  0x00 ; '.'
000000000021f6bc         db  0x00 ; '.'
000000000021f6bd         db  0x00 ; '.'
000000000021f6be         db  0x00 ; '.'
000000000021f6bf         db  0x00 ; '.'
000000000021f6c0         db  0x00 ; '.'
000000000021f6c1         db  0x00 ; '.'
000000000021f6c2         db  0x00 ; '.'
000000000021f6c3         db  0x00 ; '.'
000000000021f6c4         db  0x00 ; '.'
000000000021f6c5         db  0x00 ; '.'
000000000021f6c6         db  0x00 ; '.'
000000000021f6c7         db  0x00 ; '.'
000000000021f6c8         db  0x00 ; '.'
000000000021f6c9         db  0x00 ; '.'
000000000021f6ca         db  0x00 ; '.'
000000000021f6cb         db  0x00 ; '.'
000000000021f6cc         db  0x00 ; '.'
000000000021f6cd         db  0x00 ; '.'
000000000021f6ce         db  0x00 ; '.'
000000000021f6cf         db  0x00 ; '.'
000000000021f6d0         db  0x00 ; '.'
000000000021f6d1         db  0x00 ; '.'
000000000021f6d2         db  0x00 ; '.'
000000000021f6d3         db  0x00 ; '.'
000000000021f6d4         db  0x00 ; '.'
000000000021f6d5         db  0x00 ; '.'
000000000021f6d6         db  0x00 ; '.'
000000000021f6d7         db  0x00 ; '.'
000000000021f6d8         db  0x00 ; '.'
000000000021f6d9         db  0x00 ; '.'
000000000021f6da         db  0x00 ; '.'
000000000021f6db         db  0x00 ; '.'
000000000021f6dc         db  0x00 ; '.'
000000000021f6dd         db  0x00 ; '.'
000000000021f6de         db  0x00 ; '.'
000000000021f6df         db  0x00 ; '.'
                     default_quoting_options:
000000000021f6e0         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
000000000021f6e1         db  0x00 ; '.'
000000000021f6e2         db  0x00 ; '.'
000000000021f6e3         db  0x00 ; '.'
000000000021f6e4         db  0x00 ; '.'
000000000021f6e5         db  0x00 ; '.'
000000000021f6e6         db  0x00 ; '.'
000000000021f6e7         db  0x00 ; '.'
000000000021f6e8         db  0x00 ; '.'
000000000021f6e9         db  0x00 ; '.'
000000000021f6ea         db  0x00 ; '.'
000000000021f6eb         db  0x00 ; '.'
000000000021f6ec         db  0x00 ; '.'
000000000021f6ed         db  0x00 ; '.'
000000000021f6ee         db  0x00 ; '.'
000000000021f6ef         db  0x00 ; '.'
000000000021f6f0         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
000000000021f6f1         db  0x00 ; '.'
000000000021f6f2         db  0x00 ; '.'
000000000021f6f3         db  0x00 ; '.'
000000000021f6f4         db  0x00 ; '.'
000000000021f6f5         db  0x00 ; '.'
000000000021f6f6         db  0x00 ; '.'
000000000021f6f7         db  0x00 ; '.'
000000000021f6f8         db  0x00 ; '.'
000000000021f6f9         db  0x00 ; '.'
000000000021f6fa         db  0x00 ; '.'
000000000021f6fb         db  0x00 ; '.'
000000000021f6fc         db  0x00 ; '.'
000000000021f6fd         db  0x00 ; '.'
000000000021f6fe         db  0x00 ; '.'
000000000021f6ff         db  0x00 ; '.'
000000000021f700         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
000000000021f701         db  0x00 ; '.'
000000000021f702         db  0x00 ; '.'
000000000021f703         db  0x00 ; '.'
000000000021f704         db  0x00 ; '.'
000000000021f705         db  0x00 ; '.'
000000000021f706         db  0x00 ; '.'
000000000021f707         db  0x00 ; '.'
000000000021f708         db  0x00 ; '.'
000000000021f709         db  0x00 ; '.'
000000000021f70a         db  0x00 ; '.'
000000000021f70b         db  0x00 ; '.'
000000000021f70c         db  0x00 ; '.'
000000000021f70d         db  0x00 ; '.'
000000000021f70e         db  0x00 ; '.'
000000000021f70f         db  0x00 ; '.'
                     qword_21f710:
000000000021f710         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
000000000021f711         db  0x00 ; '.'
000000000021f712         db  0x00 ; '.'
000000000021f713         db  0x00 ; '.'
000000000021f714         db  0x00 ; '.'
000000000021f715         db  0x00 ; '.'
000000000021f716         db  0x00 ; '.'
000000000021f717         db  0x00 ; '.'
                     new_dst_res.5308:
000000000021f718         db  0x00 ; '.'                                         ; DATA XREF=utimecmpat+153, utimecmpat+228, utimecmpat+420, utimecmpat+1680
000000000021f719         db  0x00 ; '.'
000000000021f71a         db  0x00 ; '.'
000000000021f71b         db  0x00 ; '.'
000000000021f71c         db  0x00 ; '.'
000000000021f71d         db  0x00 ; '.'
000000000021f71e         db  0x00 ; '.'
000000000021f71f         db  0x00 ; '.'
                     ht.5307:
000000000021f720         db  0x00 ; '.'                                         ; DATA XREF=utimecmpat+134, utimecmpat+472, utimecmpat+1638
000000000021f721         db  0x00 ; '.'
000000000021f722         db  0x00 ; '.'
000000000021f723         db  0x00 ; '.'
000000000021f724         db  0x00 ; '.'
000000000021f725         db  0x00 ; '.'
000000000021f726         db  0x00 ; '.'
000000000021f727         db  0x00 ; '.'
                     lutimensat_works_really:
000000000021f728         db  0x00 ; '.'                                         ; DATA XREF=fdutimens+181, lutimens+86, lutimens+152, lutimens+288, lutimens+315, lutimens+384
000000000021f729         db  0x00 ; '.'
000000000021f72a         db  0x00 ; '.'
000000000021f72b         db  0x00 ; '.'
                     utimensat_works_really:
000000000021f72c         db  0x00 ; '.'                                         ; DATA XREF=fdutimens+106, fdutimens+171, fdutimens+975, lutimens+374
000000000021f72d         db  0x00 ; '.'
000000000021f72e         db  0x00 ; '.'
000000000021f72f         db  0x00 ; '.'
                     can_write.3065:
000000000021f730         db  0x00 ; '.'                                         ; DATA XREF=can_write_any_file+9, can_write_any_file+45
                     initialized.3064:
000000000021f731         db  0x00 ; '.'                                         ; DATA XREF=can_write_any_file, can_write_any_file+35
000000000021f732         db  0x00 ; '.'
000000000021f733         db  0x00 ; '.'
                     have_dupfd_cloexec.3326:
000000000021f734         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+94, rpl_fcntl+143, rpl_fcntl+438, rpl_fcntl+574
000000000021f735         db  0x00 ; '.'
000000000021f736         db  0x00 ; '.'
000000000021f737         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x21f740; 0x21ff80[ (2112 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x21f740; 0x43f6c0[ (2228096 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     endgrent:
000000000021f740         extern function code                                   ; DATA XREF=endgrent@GOT
                     getenv:
000000000021f748         extern function code                                   ; DATA XREF=getenv@GOT
                     __snprintf_chk:
000000000021f750         extern function code                                   ; DATA XREF=__snprintf_chk@GOT
                     raise:
000000000021f758         extern function code                                   ; DATA XREF=raise@GOT
                     free:
000000000021f760         extern function code
                     utimensat:
000000000021f768         extern function code                                   ; DATA XREF=utimensat@GOT
                     abort:
000000000021f770         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
000000000021f778         extern function code                                   ; DATA XREF=__errno_location@GOT
                     unlink:
000000000021f780         extern function code                                   ; DATA XREF=unlink@GOT
                     strncmp:
000000000021f788         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
000000000021f790         extern function code
                     _exit:
000000000021f798         extern function code                                   ; DATA XREF=_exit@GOT
                     strcpy:
000000000021f7a0         extern function code                                   ; DATA XREF=strcpy@GOT
                     __fpending:
000000000021f7a8         extern function code                                   ; DATA XREF=__fpending@GOT
                     __read_chk:
000000000021f7b0         extern function code                                   ; DATA XREF=__read_chk@GOT
                     mkdir:
000000000021f7b8         extern function code                                   ; DATA XREF=mkdir@GOT
                     unlinkat:
000000000021f7c0         extern function code                                   ; DATA XREF=unlinkat@GOT
                     qsort:
000000000021f7c8         extern function code                                   ; DATA XREF=qsort@GOT
                     readlink:
000000000021f7d0         extern function code                                   ; DATA XREF=readlink@GOT
                     fcntl:
000000000021f7d8         extern function code                                   ; DATA XREF=fcntl@GOT
                     clock_gettime:
000000000021f7e0         extern function code                                   ; DATA XREF=clock_gettime@GOT
                     write:
000000000021f7e8         extern function code                                   ; DATA XREF=write@GOT
                     getpid:
000000000021f7f0         extern function code                                   ; DATA XREF=getpid@GOT
                     fread_unlocked:
000000000021f7f8         extern function code                                   ; DATA XREF=fread_unlocked@GOT
                     textdomain:
000000000021f800         extern function code                                   ; DATA XREF=textdomain@GOT
                     pathconf:
000000000021f808         extern function code                                   ; DATA XREF=pathconf@GOT
                     __open_2:
000000000021f810         extern function code                                   ; DATA XREF=__open_2@GOT
                     fclose:
000000000021f818         extern function code                                   ; DATA XREF=fclose@GOT
                     opendir:
000000000021f820         extern function code                                   ; DATA XREF=opendir@GOT
                     bindtextdomain:
000000000021f828         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     stpcpy:
000000000021f830         extern function code                                   ; DATA XREF=stpcpy@GOT
                     rmdir:
000000000021f838         extern function code                                   ; DATA XREF=rmdir@GOT
                     dcgettext:
000000000021f840         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
000000000021f848         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
000000000021f850         extern function code                                   ; DATA XREF=strlen@GOT
                     __lxstat:
000000000021f858         extern function code                                   ; DATA XREF=__lxstat@GOT
                     openat:
000000000021f860         extern function code                                   ; DATA XREF=openat@GOT
                     chdir:
000000000021f868         extern function code                                   ; DATA XREF=chdir@GOT
                     __stack_chk_fail:
000000000021f870         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getuid:
000000000021f878         extern function code                                   ; DATA XREF=getuid@GOT
                     getopt_long:
000000000021f880         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
000000000021f888         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     strchr:
000000000021f890         extern function code                                   ; DATA XREF=strchr@GOT
                     __fxstatat:
000000000021f898         extern function code                                   ; DATA XREF=__fxstatat@GOT
                     __overflow:
000000000021f8a0         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
000000000021f8a8         extern function code                                   ; DATA XREF=strrchr@GOT
                     ftruncate:
000000000021f8b0         extern function code                                   ; DATA XREF=ftruncate@GOT
                     lseek:
000000000021f8b8         extern function code                                   ; DATA XREF=lseek@GOT
                     gettimeofday:
000000000021f8c0         extern function code                                   ; DATA XREF=gettimeofday@GOT
                     __assert_fail:
000000000021f8c8         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     memset:
000000000021f8d0         extern function code                                   ; DATA XREF=memset@GOT
                     geteuid:
000000000021f8d8         extern function code                                   ; DATA XREF=geteuid@GOT
                     ioctl:
000000000021f8e0         extern function code                                   ; DATA XREF=ioctl@GOT
                     canonicalize_file_name:
000000000021f8e8         extern function code                                   ; DATA XREF=canonicalize_file_name@GOT
                     close:
000000000021f8f0         extern function code                                   ; DATA XREF=close@GOT
                     rewinddir:
000000000021f8f8         extern function code                                   ; DATA XREF=rewinddir@GOT
                     strspn:
000000000021f900         extern function code                                   ; DATA XREF=strspn@GOT
                     closedir:
000000000021f908         extern function code                                   ; DATA XREF=closedir@GOT
                     posix_fadvise:
000000000021f910         extern function code                                   ; DATA XREF=posix_fadvise@GOT
                     read:
000000000021f918         extern function code                                   ; DATA XREF=read@GOT
                     __libc_start_main:
000000000021f920         extern function code
                     memcmp:
000000000021f928         extern function code                                   ; DATA XREF=memcmp@GOT
                     fallocate:
000000000021f930         extern function code                                   ; DATA XREF=fallocate@GOT
                     fputs_unlocked:
000000000021f938         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     utimes:
000000000021f940         extern function code                                   ; DATA XREF=utimes@GOT
                     calloc:
000000000021f948         extern function code                                   ; DATA XREF=calloc@GOT
                     __getdelim:
000000000021f950         extern function code                                   ; DATA XREF=__getdelim@GOT
                     strcmp:
000000000021f958         extern function code                                   ; DATA XREF=strcmp@GOT
                     signal:
000000000021f960         extern function code                                   ; DATA XREF=signal@GOT
                     dirfd:
000000000021f968         extern function code                                   ; DATA XREF=dirfd@GOT
                     getpwnam:
000000000021f970         extern function code                                   ; DATA XREF=getpwnam@GOT
                     fpathconf:
000000000021f978         extern function code                                   ; DATA XREF=fpathconf@GOT
                     rpmatch:
000000000021f980         extern function code                                   ; DATA XREF=rpmatch@GOT
                     syscall:
000000000021f988         extern function code                                   ; DATA XREF=syscall@GOT
                     mkfifo:
000000000021f990         extern function code                                   ; DATA XREF=mkfifo@GOT
                     __gmon_start__:
000000000021f998         extern function code
                     umask:
000000000021f9a0         extern function code                                   ; DATA XREF=umask@GOT
                     memcpy:
000000000021f9a8         extern function code                                   ; DATA XREF=memcpy@GOT
                     getgrnam:
000000000021f9b0         extern function code                                   ; DATA XREF=getgrnam@GOT
                     __xmknod:
000000000021f9b8         extern function code                                   ; DATA XREF=__xmknod@GOT
                     fileno:
000000000021f9c0         extern function code                                   ; DATA XREF=fileno@GOT
                     getgid:
000000000021f9c8         extern function code                                   ; DATA XREF=getgid@GOT
                     __xstat:
000000000021f9d0         extern function code                                   ; DATA XREF=__xstat@GOT
                     readdir:
000000000021f9d8         extern function code                                   ; DATA XREF=readdir@GOT
                     malloc:
000000000021f9e0         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
000000000021f9e8         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
000000000021f9f0         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __fxstat:
000000000021f9f8         extern function code                                   ; DATA XREF=__fxstat@GOT
                     endpwent:
000000000021fa00         extern function code                                   ; DATA XREF=endpwent@GOT
                     lchown:
000000000021fa08         extern function code                                   ; DATA XREF=lchown@GOT
                     __freading:
000000000021fa10         extern function code                                   ; DATA XREF=__freading@GOT
                     fchdir:
000000000021fa18         extern function code                                   ; DATA XREF=fchdir@GOT
                     fwrite_unlocked:
000000000021fa20         extern function code                                   ; DATA XREF=fwrite_unlocked@GOT
                     chown:
000000000021fa28         extern function code                                   ; DATA XREF=chown@GOT
                     realloc:
000000000021fa30         extern function code                                   ; DATA XREF=realloc@GOT
                     stpncpy:
000000000021fa38         extern function code                                   ; DATA XREF=stpncpy@GOT
                     fdopen:
000000000021fa40         extern function code                                   ; DATA XREF=fdopen@GOT
                     linkat:
000000000021fa48         extern function code                                   ; DATA XREF=linkat@GOT
                     setlocale:
000000000021fa50         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
000000000021fa58         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     fchmod:
000000000021fa60         extern function code                                   ; DATA XREF=fchmod@GOT
                     setvbuf:
000000000021fa68         extern function code                                   ; DATA XREF=setvbuf@GOT
                     chmod:
000000000021fa70         extern function code                                   ; DATA XREF=chmod@GOT
                     mempcpy:
000000000021fa78         extern function code                                   ; DATA XREF=mempcpy@GOT
                     error:
000000000021fa80         extern function code                                   ; DATA XREF=error@GOT
                     waitpid:
000000000021fa88         extern function code                                   ; DATA XREF=waitpid@GOT
                     __explicit_bzero_chk:
000000000021fa90         extern function code                                   ; DATA XREF=__explicit_bzero_chk@GOT
                     open:
000000000021fa98         extern function code                                   ; DATA XREF=open@GOT
                     fseeko:
000000000021faa0         extern function code                                   ; DATA XREF=fseeko@GOT
                     fchown:
000000000021faa8         extern function code                                   ; DATA XREF=fchown@GOT
                     fopen:
000000000021fab0         extern function code                                   ; DATA XREF=fopen@GOT
                     rename:
000000000021fab8         extern function code                                   ; DATA XREF=rename@GOT
                     fdopendir:
000000000021fac0         extern function code                                   ; DATA XREF=fdopendir@GOT
                     futimens:
000000000021fac8         extern function code                                   ; DATA XREF=futimens@GOT
                     euidaccess:
000000000021fad0         extern function code                                   ; DATA XREF=euidaccess@GOT
                     strtoul:
000000000021fad8         extern function code                                   ; DATA XREF=strtoul@GOT
                     __cxa_atexit:
000000000021fae0         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     renameat:
000000000021fae8         extern function code                                   ; DATA XREF=renameat@GOT
                     getpagesize:
000000000021faf0         extern function code                                   ; DATA XREF=getpagesize@GOT
                     getppid:
000000000021faf8         extern function code                                   ; DATA XREF=getppid@GOT
                     exit:
000000000021fb00         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
000000000021fb08         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
000000000021fb10         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
000000000021fb18         extern function code
                     mbsinit:
000000000021fb20         extern function code                                   ; DATA XREF=mbsinit@GOT
                     symlinkat:
000000000021fb28         extern function code                                   ; DATA XREF=symlinkat@GOT
                     execlp:
000000000021fb30         extern function code                                   ; DATA XREF=execlp@GOT
                     iswprint:
000000000021fb38         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
000000000021fb40         extern function code
                     fork:
000000000021fb48         extern function code                                   ; DATA XREF=fork@GOT
                     futimesat:
000000000021fb50         extern function code                                   ; DATA XREF=futimesat@GOT
                     __ctype_b_loc:
000000000021fb58         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     endgrent@@GLIBC_2.2.5:
000000000021fb60         extern function code
                     getenv@@GLIBC_2.2.5:
000000000021fb68         extern function code
                     __snprintf_chk@@GLIBC_2.3.4:
000000000021fb70         extern function code
                     raise@@GLIBC_2.2.5:
000000000021fb78         extern function code
                     free@@GLIBC_2.2.5:
000000000021fb80         extern function code
                     utimensat@@GLIBC_2.6:
000000000021fb88         extern function code
                     abort@@GLIBC_2.2.5:
000000000021fb90         extern function code
                     __errno_location@@GLIBC_2.2.5:
000000000021fb98         extern function code
                     unlink@@GLIBC_2.2.5:
000000000021fba0         extern function code
                     strncmp@@GLIBC_2.2.5:
000000000021fba8         extern function code
                     _ITM_deregisterTMCloneTable_21fbb0:        // _ITM_deregisterTMCloneTable
000000000021fbb0         extern function code
                     _exit@@GLIBC_2.2.5:
000000000021fbb8         extern function code
                     strcpy@@GLIBC_2.2.5:
000000000021fbc0         extern function code
                     __fpending@@GLIBC_2.2.5:
000000000021fbc8         extern function code
                     __read_chk@@GLIBC_2.4:
000000000021fbd0         extern function code
                     mkdir@@GLIBC_2.2.5:
000000000021fbd8         extern function code
                     unlinkat@@GLIBC_2.4:
000000000021fbe0         extern function code
                     qsort@@GLIBC_2.2.5:
000000000021fbe8         extern function code
                     readlink@@GLIBC_2.2.5:
000000000021fbf0         extern function code
                     fcntl@@GLIBC_2.2.5:
000000000021fbf8         extern function code
                     clock_gettime@@GLIBC_2.17:
000000000021fc00         extern function code
                     write@@GLIBC_2.2.5:
000000000021fc08         extern function code
                     getpid@@GLIBC_2.2.5:
000000000021fc10         extern function code
                     fread_unlocked@@GLIBC_2.2.5:
000000000021fc18         extern function code
                     textdomain@@GLIBC_2.2.5:
000000000021fc20         extern function code
                     pathconf@@GLIBC_2.2.5:
000000000021fc28         extern function code
                     __open_2@@GLIBC_2.7:
000000000021fc30         extern function code
                     fclose@@GLIBC_2.2.5:
000000000021fc38         extern function code
                     opendir@@GLIBC_2.2.5:
000000000021fc40         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
000000000021fc48         extern function code
                     stpcpy@@GLIBC_2.2.5:
000000000021fc50         extern function code
                     rmdir@@GLIBC_2.2.5:
000000000021fc58         extern function code
                     dcgettext@@GLIBC_2.2.5:
000000000021fc60         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
000000000021fc68         extern function code
                     strlen@@GLIBC_2.2.5:
000000000021fc70         extern function code
                     __lxstat@@GLIBC_2.2.5:
000000000021fc78         extern function code
                     openat@@GLIBC_2.4:
000000000021fc80         extern function code
                     chdir@@GLIBC_2.2.5:
000000000021fc88         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
000000000021fc90         extern function code
                     getuid@@GLIBC_2.2.5:
000000000021fc98         extern function code
                     getopt_long@@GLIBC_2.2.5:
000000000021fca0         extern function code
                     mbrtowc@@GLIBC_2.2.5:
000000000021fca8         extern function code
                     strchr@@GLIBC_2.2.5:
000000000021fcb0         extern function code
                     __fxstatat@@GLIBC_2.4:
000000000021fcb8         extern function code
                     __overflow@@GLIBC_2.2.5:
000000000021fcc0         extern function code
                     strrchr@@GLIBC_2.2.5:
000000000021fcc8         extern function code
                     ftruncate@@GLIBC_2.2.5:
000000000021fcd0         extern function code
                     lseek@@GLIBC_2.2.5:
000000000021fcd8         extern function code
                     gettimeofday@@GLIBC_2.2.5:
000000000021fce0         extern function code
                     __assert_fail@@GLIBC_2.2.5:
000000000021fce8         extern function code
                     memset@@GLIBC_2.2.5:
000000000021fcf0         extern function code
                     geteuid@@GLIBC_2.2.5:
000000000021fcf8         extern function code
                     ioctl@@GLIBC_2.2.5:
000000000021fd00         extern function code
                     canonicalize_file_name@@GLIBC_2.2.5:
000000000021fd08         extern function code
                     close@@GLIBC_2.2.5:
000000000021fd10         extern function code
                     rewinddir@@GLIBC_2.2.5:
000000000021fd18         extern function code
                     strspn@@GLIBC_2.2.5:
000000000021fd20         extern function code
                     closedir@@GLIBC_2.2.5:
000000000021fd28         extern function code
                     posix_fadvise@@GLIBC_2.2.5:
000000000021fd30         extern function code
                     read@@GLIBC_2.2.5:
000000000021fd38         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
000000000021fd40         extern function code
                     memcmp@@GLIBC_2.2.5:
000000000021fd48         extern function code
                     fallocate@@GLIBC_2.10:
000000000021fd50         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
000000000021fd58         extern function code
                     utimes@@GLIBC_2.2.5:
000000000021fd60         extern function code
                     calloc@@GLIBC_2.2.5:
000000000021fd68         extern function code
                     __getdelim@@GLIBC_2.2.5:
000000000021fd70         extern function code
                     strcmp@@GLIBC_2.2.5:
000000000021fd78         extern function code
                     signal@@GLIBC_2.2.5:
000000000021fd80         extern function code
                     dirfd@@GLIBC_2.2.5:
000000000021fd88         extern function code
                     getpwnam@@GLIBC_2.2.5:
000000000021fd90         extern function code
                     fpathconf@@GLIBC_2.2.5:
000000000021fd98         extern function code
                     rpmatch@@GLIBC_2.2.5:
000000000021fda0         extern function code
                     syscall@@GLIBC_2.2.5:
000000000021fda8         extern function code
                     mkfifo@@GLIBC_2.2.5:
000000000021fdb0         extern function code
                     __gmon_start___21fdb8:        // __gmon_start__
000000000021fdb8         extern function code
                     umask@@GLIBC_2.2.5:
000000000021fdc0         extern function code
                     memcpy@@GLIBC_2.14:
000000000021fdc8         extern function code
                     getgrnam@@GLIBC_2.2.5:
000000000021fdd0         extern function code
                     __xmknod@@GLIBC_2.2.5:
000000000021fdd8         extern function code
                     fileno@@GLIBC_2.2.5:
000000000021fde0         extern function code
                     getgid@@GLIBC_2.2.5:
000000000021fde8         extern function code
                     __xstat@@GLIBC_2.2.5:
000000000021fdf0         extern function code
                     readdir@@GLIBC_2.2.5:
000000000021fdf8         extern function code
                     malloc@@GLIBC_2.2.5:
000000000021fe00         extern function code
                     fflush@@GLIBC_2.2.5:
000000000021fe08         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
000000000021fe10         extern function code
                     __fxstat@@GLIBC_2.2.5:
000000000021fe18         extern function code
                     endpwent@@GLIBC_2.2.5:
000000000021fe20         extern function code
                     lchown@@GLIBC_2.2.5:
000000000021fe28         extern function code
                     __freading@@GLIBC_2.2.5:
000000000021fe30         extern function code
                     fchdir@@GLIBC_2.2.5:
000000000021fe38         extern function code
                     fwrite_unlocked@@GLIBC_2.2.5:
000000000021fe40         extern function code
                     chown@@GLIBC_2.2.5:
000000000021fe48         extern function code
                     realloc@@GLIBC_2.2.5:
000000000021fe50         extern function code
                     stpncpy@@GLIBC_2.2.5:
000000000021fe58         extern function code
                     fdopen@@GLIBC_2.2.5:
000000000021fe60         extern function code
                     linkat@@GLIBC_2.4:
000000000021fe68         extern function code
                     setlocale@@GLIBC_2.2.5:
000000000021fe70         extern function code
                     __printf_chk@@GLIBC_2.3.4:
000000000021fe78         extern function code
                     fchmod@@GLIBC_2.2.5:
000000000021fe80         extern function code
                     setvbuf@@GLIBC_2.2.5:
000000000021fe88         extern function code
                     chmod@@GLIBC_2.2.5:
000000000021fe90         extern function code
                     mempcpy@@GLIBC_2.2.5:
000000000021fe98         extern function code
                     error@@GLIBC_2.2.5:
000000000021fea0         extern function code
                     waitpid@@GLIBC_2.2.5:
000000000021fea8         extern function code
                     __explicit_bzero_chk@@GLIBC_2.25:
000000000021feb0         extern function code
                     open@@GLIBC_2.2.5:
000000000021feb8         extern function code
                     fseeko@@GLIBC_2.2.5:
000000000021fec0         extern function code
                     fchown@@GLIBC_2.2.5:
000000000021fec8         extern function code
                     fopen@@GLIBC_2.2.5:
000000000021fed0         extern function code
                     rename@@GLIBC_2.2.5:
000000000021fed8         extern function code
                     fdopendir@@GLIBC_2.4:
000000000021fee0         extern function code
                     futimens@@GLIBC_2.6:
000000000021fee8         extern function code
                     euidaccess@@GLIBC_2.2.5:
000000000021fef0         extern function code
                     strtoul@@GLIBC_2.2.5:
000000000021fef8         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
000000000021ff00         extern function code
                     renameat@@GLIBC_2.4:
000000000021ff08         extern function code
                     getpagesize@@GLIBC_2.2.5:
000000000021ff10         extern function code
                     getppid@@GLIBC_2.2.5:
000000000021ff18         extern function code
                     exit@@GLIBC_2.2.5:
000000000021ff20         extern function code
                     fwrite@@GLIBC_2.2.5:
000000000021ff28         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
000000000021ff30         extern function code
                     _ITM_registerTMCloneTable_21ff38:        // _ITM_registerTMCloneTable
000000000021ff38         extern function code
                     mbsinit@@GLIBC_2.2.5:
000000000021ff40         extern function code
                     symlinkat@@GLIBC_2.4:
000000000021ff48         extern function code
                     execlp@@GLIBC_2.2.5:
000000000021ff50         extern function code
                     iswprint@@GLIBC_2.2.5:
000000000021ff58         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
000000000021ff60         extern function code
                     fork@@GLIBC_2.2.5:
000000000021ff68         extern function code
                     futimesat@@GLIBC_2.4:
000000000021ff70         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
000000000021ff78         extern function code
