
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/split
        UUID: AF012C87-9EB2-324A-9B0C-8B2233952527
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0xb800[ (47104 bytes)
        ; File offset : [0; 47104[ (47104 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x10 ; '.'
0000000000000019         db  0x3d ; '='
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0xb0 ; '.'
0000000000000029         db  0xc2 ; '.'
000000000000002a         db  0x03 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x00 ; '.'
00000000000000d1         db  0xb8 ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x00 ; '.'
00000000000000d9         db  0xb8 ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0xf0 ; '.'
00000000000000f1         db  0xb8 ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0xf0 ; '.'
00000000000000f9         db  0xb8 ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0xf0 ; '.'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0xb8 ; '.'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x54 ; 'T'
0000000000000109         db  0x09 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x70 ; 'p'
0000000000000111         db  0x0d ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x78 ; 'x'
0000000000000129         db  0xbb ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x78 ; 'x'
0000000000000131         db  0xbb ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x78 ; 'x'
0000000000000139         db  0xbb ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'                                         ; DATA XREF=main+21, main+3960
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0xac ; '.'                                         ; DATA XREF=next_file_name+700
0000000000000199         db  0xa5 ; '.'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0xac ; '.'
00000000000001a1         db  0xa5 ; '.'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0xac ; '.'
00000000000001a9         db  0xa5 ; '.'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0xec ; '.'
00000000000001b1         db  0x02 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'                                         ; DATA XREF=create+503
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0xec ; '.'
00000000000001b9         db  0x02 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'                                         ; DATA XREF=xstrtoumax+573
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0xf0 ; '.'
0000000000000209         db  0xb8 ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0xf0 ; '.'
0000000000000211         db  0xb8 ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0xf0 ; '.'
0000000000000219         db  0xb8 ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0x10 ; '.'
0000000000000221         db  0x07 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0x10 ; '.'
0000000000000229         db  0x07 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0xaf ; '.'
0000000000000285         db  0x01 ; '.'
0000000000000286         db  0x2c ; ','
0000000000000287         db  0x87 ; '.'
0000000000000288         db  0x9e ; '.'
0000000000000289         db  0xb2 ; '.'
000000000000028a         db  0x32 ; '2'
000000000000028b         db  0x4a ; 'J'
000000000000028c         db  0x9b ; '.'
000000000000028d         db  0x0c ; '.'
000000000000028e         db  0x8b ; '.'
000000000000028f         db  0x22 ; '"'
0000000000000290         db  0x33 ; '3'
0000000000000291         db  0x95 ; '.'
0000000000000292         db  0x25 ; '%'
0000000000000293         db  0x27 ; '''
0000000000000294         db  0x76 ; 'v'
0000000000000295         db  0x0a ; '.'
0000000000000296         db  0x1f ; '.'
0000000000000297         db  0xbc ; '.'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2dc[ (68 bytes)
        ; File offset : [664; 732[ (68 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x50 ; 'P'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x41 ; 'A'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0x20 ; ' '
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x50 ; 'P'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x51 ; 'Q'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x56 ; 'V'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x96 ; '.'
00000000000002c5         db  0xa0 ; '.'
00000000000002c6         db  0x89 ; '.'
00000000000002c7         db  0x97 ; '.'
00000000000002c8         db  0xce ; '.'
00000000000002c9         db  0x2c ; ','
00000000000002ca         db  0x63 ; 'c'
00000000000002cb         db  0x72 ; 'r'
00000000000002cc         db  0xe4 ; '.'
00000000000002cd         db  0x62 ; 'b'
00000000000002ce         db  0x41 ; 'A'
00000000000002cf         db  0xf5 ; '.'
00000000000002d0         db  0x39 ; '9'
00000000000002d1         db  0xf2 ; '.'
00000000000002d2         db  0x8b ; '.'
00000000000002d3         db  0x1c ; '.'
00000000000002d4         db  0x32 ; '2'
00000000000002d5         db  0xc4 ; '.'
00000000000002d6         db  0xf7 ; '.'
00000000000002d7         db  0x12 ; '.'
00000000000002d8         db  0xb3 ; '.'
00000000000002d9         db  0xa2 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0x00 ; '.'
00000000000002dd         db  0x00 ; '.'
00000000000002de         db  0x00 ; '.'
00000000000002df         db  0x00 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0xb20[ (2112 bytes)
        ; File offset : [736; 2848[ (2112 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0xe2 ; '.'
00000000000002f9         db  0x01 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x8b ; '.'
0000000000000311         db  0x00 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x19 ; '.'
0000000000000329         db  0x03 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0xb9 ; '.'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x40 ; '@'
0000000000000359         db  0x01 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x12 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'                                         ; DATA XREF=main+7133
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x50 ; 'P'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x12 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x7d ; '}'
0000000000000389         db  0x03 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x20 ; ' '
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0xbf ; '.'
00000000000003a1         db  0x00 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0x12 ; '.'
00000000000003b9         db  0x00 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x37 ; '7'
00000000000003d1         db  0x02 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'                                         ; DATA XREF=main+6512
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x25 ; '%'                                         ; DATA XREF=main+2298, xstrtoumax+420
00000000000003e9         db  0x02 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x95 ; '.'                                         ; DATA XREF=xstrtoumax+437, xstrtoumax+806, xstrtoumax+878, rpl_fcntl+288
0000000000000401         db  0x02 ; '.'                                         ; DATA XREF=rpl_fcntl+272
0000000000000402         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+280
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+81, rpl_fcntl+123, rpl_fcntl+264
0000000000000407         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+256
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+336
000000000000040a         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+350
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0xe9 ; '.'
0000000000000419         db  0x02 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0x2c ; ','
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x1f ; '.'
0000000000000449         db  0x02 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0xb5 ; '.'
0000000000000461         db  0x02 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x9a ; '.'
0000000000000479         db  0x01 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0xb1 ; '.'
0000000000000491         db  0x02 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x76 ; 'v'
00000000000004a9         db  0x00 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x01 ; '.'
00000000000004c1         db  0x01 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x26 ; '&'
00000000000004d9         db  0x01 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x97 ; '.'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x02 ; '.'
0000000000000509         db  0x02 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x48 ; 'H'
0000000000000521         db  0x00 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0x69 ; 'i'
0000000000000539         db  0x01 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x42 ; 'B'
0000000000000551         db  0x02 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x69 ; 'i'
0000000000000569         db  0x00 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x58 ; 'X'
0000000000000581         db  0x00 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x8d ; '.'
0000000000000599         db  0x01 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0xf3 ; '.'
00000000000005b1         db  0x00 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0xf7 ; '.'
00000000000005c9         db  0x02 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x39 ; '9'
00000000000005e1         db  0x01 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x9b ; '.'
00000000000005f9         db  0x01 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x71 ; 'q'
0000000000000611         db  0x00 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0xd4 ; '.'
0000000000000629         db  0x00 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0xc5 ; '.'
0000000000000641         db  0x00 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x51 ; 'Q'
0000000000000659         db  0x01 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0xd7 ; '.'
0000000000000671         db  0x02 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x56 ; 'V'
0000000000000689         db  0x01 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x0a ; '.'
00000000000006a1         db  0x03 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x1f ; '.'
00000000000006b9         db  0x01 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0xd0 ; '.'
00000000000006d1         db  0x02 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x2d ; '-'
00000000000006e9         db  0x01 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x99 ; '.'
0000000000000701         db  0x03 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x20 ; ' '
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x18 ; '.'
0000000000000719         db  0x01 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x93 ; '.'
0000000000000731         db  0x01 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x17 ; '.'
0000000000000749         db  0x02 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0xa1 ; '.'
0000000000000761         db  0x01 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x0b ; '.'
0000000000000779         db  0x00 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0xb0 ; '.'
0000000000000791         db  0x01 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x0e ; '.'
00000000000007a9         db  0x02 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x12 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0xf0 ; '.'
00000000000007c1         db  0x01 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x12 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0xc0 ; '.'
00000000000007d9         db  0x02 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0xb1 ; '.'
00000000000007f1         db  0x00 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x12 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x00 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x67 ; 'g'
0000000000000809         db  0x02 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x12 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x00 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x3e ; '>'
0000000000000821         db  0x00 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x12 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x00 ; '.'
0000000000000829         db  0x00 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x00 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x19 ; '.'
0000000000000839         db  0x00 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x12 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x00 ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x00 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0xa9 ; '.'
0000000000000851         db  0x02 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x12 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x00 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x00 ; '.'
0000000000000859         db  0x00 ; '.'
000000000000085a         db  0x00 ; '.'
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x00 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x80 ; '.'
0000000000000869         db  0x00 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x12 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x00 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x00 ; '.'
0000000000000871         db  0x00 ; '.'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x00 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0xcc ; '.'
0000000000000881         db  0x00 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x12 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x00 ; '.'
0000000000000889         db  0x00 ; '.'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x00 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x2f ; '/'
0000000000000899         db  0x02 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x12 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x00 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0x00 ; '.'
00000000000008a1         db  0x00 ; '.'
00000000000008a2         db  0x00 ; '.'
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x00 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x69 ; 'i'
00000000000008b1         db  0x02 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x12 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x00 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0x00 ; '.'
00000000000008b9         db  0x00 ; '.'
00000000000008ba         db  0x00 ; '.'
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x00 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0xf0 ; '.'
00000000000008c9         db  0x02 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x12 ; '.'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x00 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0x00 ; '.'
00000000000008d1         db  0x00 ; '.'
00000000000008d2         db  0x00 ; '.'
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x00 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x00 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0x39 ; '9'
00000000000008e1         db  0x03 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x12 ; '.'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x00 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0x00 ; '.'
00000000000008e9         db  0x00 ; '.'
00000000000008ea         db  0x00 ; '.'
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x00 ; '.'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x00 ; '.'
00000000000008f1         db  0x00 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x00 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'
00000000000008f8         db  0x5d ; ']'
00000000000008f9         db  0x01 ; '.'
00000000000008fa         db  0x00 ; '.'
00000000000008fb         db  0x00 ; '.'
00000000000008fc         db  0x12 ; '.'
00000000000008fd         db  0x00 ; '.'
00000000000008fe         db  0x00 ; '.'
00000000000008ff         db  0x00 ; '.'
0000000000000900         db  0x00 ; '.'
0000000000000901         db  0x00 ; '.'
0000000000000902         db  0x00 ; '.'
0000000000000903         db  0x00 ; '.'
0000000000000904         db  0x00 ; '.'
0000000000000905         db  0x00 ; '.'
0000000000000906         db  0x00 ; '.'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x00 ; '.'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x00 ; '.'
000000000000090c         db  0x00 ; '.'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x00 ; '.'
000000000000090f         db  0x00 ; '.'
0000000000000910         db  0x7d ; '}'
0000000000000911         db  0x02 ; '.'
0000000000000912         db  0x00 ; '.'
0000000000000913         db  0x00 ; '.'
0000000000000914         db  0x12 ; '.'
0000000000000915         db  0x00 ; '.'
0000000000000916         db  0x00 ; '.'
0000000000000917         db  0x00 ; '.'
0000000000000918         db  0x00 ; '.'
0000000000000919         db  0x00 ; '.'
000000000000091a         db  0x00 ; '.'
000000000000091b         db  0x00 ; '.'
000000000000091c         db  0x00 ; '.'
000000000000091d         db  0x00 ; '.'
000000000000091e         db  0x00 ; '.'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x00 ; '.'
0000000000000921         db  0x00 ; '.'
0000000000000922         db  0x00 ; '.'
0000000000000923         db  0x00 ; '.'
0000000000000924         db  0x00 ; '.'
0000000000000925         db  0x00 ; '.'
0000000000000926         db  0x00 ; '.'
0000000000000927         db  0x00 ; '.'
0000000000000928         db  0xc0 ; '.'
0000000000000929         db  0x00 ; '.'
000000000000092a         db  0x00 ; '.'
000000000000092b         db  0x00 ; '.'
000000000000092c         db  0x12 ; '.'
000000000000092d         db  0x00 ; '.'
000000000000092e         db  0x00 ; '.'
000000000000092f         db  0x00 ; '.'
0000000000000930         db  0x00 ; '.'
0000000000000931         db  0x00 ; '.'
0000000000000932         db  0x00 ; '.'
0000000000000933         db  0x00 ; '.'
0000000000000934         db  0x00 ; '.'
0000000000000935         db  0x00 ; '.'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x00 ; '.'
0000000000000938         db  0x00 ; '.'
0000000000000939         db  0x00 ; '.'
000000000000093a         db  0x00 ; '.'
000000000000093b         db  0x00 ; '.'
000000000000093c         db  0x00 ; '.'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x00 ; '.'
000000000000093f         db  0x00 ; '.'
0000000000000940         db  0x1e ; '.'
0000000000000941         db  0x02 ; '.'
0000000000000942         db  0x00 ; '.'
0000000000000943         db  0x00 ; '.'
0000000000000944         db  0x12 ; '.'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x00 ; '.'
0000000000000947         db  0x00 ; '.'
0000000000000948         db  0x00 ; '.'
0000000000000949         db  0x00 ; '.'
000000000000094a         db  0x00 ; '.'
000000000000094b         db  0x00 ; '.'
000000000000094c         db  0x00 ; '.'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x00 ; '.'
000000000000094f         db  0x00 ; '.'
0000000000000950         db  0x00 ; '.'
0000000000000951         db  0x00 ; '.'
0000000000000952         db  0x00 ; '.'
0000000000000953         db  0x00 ; '.'
0000000000000954         db  0x00 ; '.'
0000000000000955         db  0x00 ; '.'
0000000000000956         db  0x00 ; '.'
0000000000000957         db  0x00 ; '.'
0000000000000958         db  0x6e ; 'n'
0000000000000959         db  0x01 ; '.'
000000000000095a         db  0x00 ; '.'
000000000000095b         db  0x00 ; '.'
000000000000095c         db  0x12 ; '.'
000000000000095d         db  0x00 ; '.'
000000000000095e         db  0x00 ; '.'
000000000000095f         db  0x00 ; '.'
0000000000000960         db  0x00 ; '.'
0000000000000961         db  0x00 ; '.'
0000000000000962         db  0x00 ; '.'
0000000000000963         db  0x00 ; '.'
0000000000000964         db  0x00 ; '.'
0000000000000965         db  0x00 ; '.'
0000000000000966         db  0x00 ; '.'
0000000000000967         db  0x00 ; '.'
0000000000000968         db  0x00 ; '.'
0000000000000969         db  0x00 ; '.'
000000000000096a         db  0x00 ; '.'
000000000000096b         db  0x00 ; '.'
000000000000096c         db  0x00 ; '.'
000000000000096d         db  0x00 ; '.'
000000000000096e         db  0x00 ; '.'
000000000000096f         db  0x00 ; '.'
0000000000000970         db  0xbc ; '.'
0000000000000971         db  0x01 ; '.'
0000000000000972         db  0x00 ; '.'
0000000000000973         db  0x00 ; '.'
0000000000000974         db  0x12 ; '.'
0000000000000975         db  0x00 ; '.'
0000000000000976         db  0x00 ; '.'
0000000000000977         db  0x00 ; '.'
0000000000000978         db  0x00 ; '.'
0000000000000979         db  0x00 ; '.'
000000000000097a         db  0x00 ; '.'
000000000000097b         db  0x00 ; '.'
000000000000097c         db  0x00 ; '.'
000000000000097d         db  0x00 ; '.'
000000000000097e         db  0x00 ; '.'
000000000000097f         db  0x00 ; '.'
0000000000000980         db  0x00 ; '.'
0000000000000981         db  0x00 ; '.'
0000000000000982         db  0x00 ; '.'
0000000000000983         db  0x00 ; '.'
0000000000000984         db  0x00 ; '.'
0000000000000985         db  0x00 ; '.'
0000000000000986         db  0x00 ; '.'
0000000000000987         db  0x00 ; '.'
0000000000000988         db  0xa8 ; '.'
0000000000000989         db  0x03 ; '.'
000000000000098a         db  0x00 ; '.'
000000000000098b         db  0x00 ; '.'
000000000000098c         db  0x20 ; ' '
000000000000098d         db  0x00 ; '.'
000000000000098e         db  0x00 ; '.'
000000000000098f         db  0x00 ; '.'
0000000000000990         db  0x00 ; '.'
0000000000000991         db  0x00 ; '.'
0000000000000992         db  0x00 ; '.'
0000000000000993         db  0x00 ; '.'
0000000000000994         db  0x00 ; '.'
0000000000000995         db  0x00 ; '.'
0000000000000996         db  0x00 ; '.'
0000000000000997         db  0x00 ; '.'
0000000000000998         db  0x00 ; '.'
0000000000000999         db  0x00 ; '.'
000000000000099a         db  0x00 ; '.'
000000000000099b         db  0x00 ; '.'
000000000000099c         db  0x00 ; '.'
000000000000099d         db  0x00 ; '.'
000000000000099e         db  0x00 ; '.'
000000000000099f         db  0x00 ; '.'
00000000000009a0         db  0xa8 ; '.'
00000000000009a1         db  0x01 ; '.'
00000000000009a2         db  0x00 ; '.'
00000000000009a3         db  0x00 ; '.'
00000000000009a4         db  0x12 ; '.'
00000000000009a5         db  0x00 ; '.'
00000000000009a6         db  0x00 ; '.'
00000000000009a7         db  0x00 ; '.'
00000000000009a8         db  0x00 ; '.'
00000000000009a9         db  0x00 ; '.'
00000000000009aa         db  0x00 ; '.'
00000000000009ab         db  0x00 ; '.'
00000000000009ac         db  0x00 ; '.'
00000000000009ad         db  0x00 ; '.'
00000000000009ae         db  0x00 ; '.'
00000000000009af         db  0x00 ; '.'
00000000000009b0         db  0x00 ; '.'
00000000000009b1         db  0x00 ; '.'
00000000000009b2         db  0x00 ; '.'
00000000000009b3         db  0x00 ; '.'
00000000000009b4         db  0x00 ; '.'
00000000000009b5         db  0x00 ; '.'
00000000000009b6         db  0x00 ; '.'
00000000000009b7         db  0x00 ; '.'
00000000000009b8         db  0x26 ; '&'
00000000000009b9         db  0x00 ; '.'
00000000000009ba         db  0x00 ; '.'
00000000000009bb         db  0x00 ; '.'
00000000000009bc         db  0x12 ; '.'
00000000000009bd         db  0x00 ; '.'
00000000000009be         db  0x00 ; '.'
00000000000009bf         db  0x00 ; '.'
00000000000009c0         db  0x00 ; '.'
00000000000009c1         db  0x00 ; '.'
00000000000009c2         db  0x00 ; '.'
00000000000009c3         db  0x00 ; '.'
00000000000009c4         db  0x00 ; '.'
00000000000009c5         db  0x00 ; '.'
00000000000009c6         db  0x00 ; '.'
00000000000009c7         db  0x00 ; '.'
00000000000009c8         db  0x00 ; '.'
00000000000009c9         db  0x00 ; '.'
00000000000009ca         db  0x00 ; '.'
00000000000009cb         db  0x00 ; '.'
00000000000009cc         db  0x00 ; '.'
00000000000009cd         db  0x00 ; '.'
00000000000009ce         db  0x00 ; '.'
00000000000009cf         db  0x00 ; '.'
00000000000009d0         db  0xa8 ; '.'
00000000000009d1         db  0x00 ; '.'
00000000000009d2         db  0x00 ; '.'
00000000000009d3         db  0x00 ; '.'
00000000000009d4         db  0x12 ; '.'
00000000000009d5         db  0x00 ; '.'
00000000000009d6         db  0x00 ; '.'
00000000000009d7         db  0x00 ; '.'
00000000000009d8         db  0x00 ; '.'
00000000000009d9         db  0x00 ; '.'
00000000000009da         db  0x00 ; '.'
00000000000009db         db  0x00 ; '.'
00000000000009dc         db  0x00 ; '.'
00000000000009dd         db  0x00 ; '.'
00000000000009de         db  0x00 ; '.'
00000000000009df         db  0x00 ; '.'
00000000000009e0         db  0x00 ; '.'
00000000000009e1         db  0x00 ; '.'
00000000000009e2         db  0x00 ; '.'
00000000000009e3         db  0x00 ; '.'
00000000000009e4         db  0x00 ; '.'
00000000000009e5         db  0x00 ; '.'
00000000000009e6         db  0x00 ; '.'
00000000000009e7         db  0x00 ; '.'
00000000000009e8         db  0x6e ; 'n'
00000000000009e9         db  0x02 ; '.'
00000000000009ea         db  0x00 ; '.'
00000000000009eb         db  0x00 ; '.'
00000000000009ec         db  0x22 ; '"'
00000000000009ed         db  0x00 ; '.'
00000000000009ee         db  0x00 ; '.'
00000000000009ef         db  0x00 ; '.'
00000000000009f0         db  0x00 ; '.'
00000000000009f1         db  0x00 ; '.'
00000000000009f2         db  0x00 ; '.'
00000000000009f3         db  0x00 ; '.'
00000000000009f4         db  0x00 ; '.'
00000000000009f5         db  0x00 ; '.'
00000000000009f6         db  0x00 ; '.'
00000000000009f7         db  0x00 ; '.'
00000000000009f8         db  0x00 ; '.'
00000000000009f9         db  0x00 ; '.'
00000000000009fa         db  0x00 ; '.'
00000000000009fb         db  0x00 ; '.'
00000000000009fc         db  0x00 ; '.'
00000000000009fd         db  0x00 ; '.'
00000000000009fe         db  0x00 ; '.'
00000000000009ff         db  0x00 ; '.'
0000000000000a00         db  0x7c ; '|'
0000000000000a01         db  0x01 ; '.'
0000000000000a02         db  0x00 ; '.'
0000000000000a03         db  0x00 ; '.'
0000000000000a04         db  0x12 ; '.'
0000000000000a05         db  0x00 ; '.'
0000000000000a06         db  0x00 ; '.'
0000000000000a07         db  0x00 ; '.'
0000000000000a08         db  0x00 ; '.'
0000000000000a09         db  0x00 ; '.'
0000000000000a0a         db  0x00 ; '.'
0000000000000a0b         db  0x00 ; '.'
0000000000000a0c         db  0x00 ; '.'
0000000000000a0d         db  0x00 ; '.'
0000000000000a0e         db  0x00 ; '.'
0000000000000a0f         db  0x00 ; '.'
0000000000000a10         db  0x00 ; '.'
0000000000000a11         db  0x00 ; '.'
0000000000000a12         db  0x00 ; '.'
0000000000000a13         db  0x00 ; '.'
0000000000000a14         db  0x00 ; '.'
0000000000000a15         db  0x00 ; '.'
0000000000000a16         db  0x00 ; '.'
0000000000000a17         db  0x00 ; '.'
0000000000000a18         db  0x86 ; '.'
0000000000000a19         db  0x00 ; '.'
0000000000000a1a         db  0x00 ; '.'
0000000000000a1b         db  0x00 ; '.'
0000000000000a1c         db  0x12 ; '.'
0000000000000a1d         db  0x00 ; '.'
0000000000000a1e         db  0x00 ; '.'
0000000000000a1f         db  0x00 ; '.'
0000000000000a20         db  0x00 ; '.'
0000000000000a21         db  0x00 ; '.'
0000000000000a22         db  0x00 ; '.'
0000000000000a23         db  0x00 ; '.'
0000000000000a24         db  0x00 ; '.'
0000000000000a25         db  0x00 ; '.'
0000000000000a26         db  0x00 ; '.'
0000000000000a27         db  0x00 ; '.'
0000000000000a28         db  0x00 ; '.'
0000000000000a29         db  0x00 ; '.'
0000000000000a2a         db  0x00 ; '.'
0000000000000a2b         db  0x00 ; '.'
0000000000000a2c         db  0x00 ; '.'
0000000000000a2d         db  0x00 ; '.'
0000000000000a2e         db  0x00 ; '.'
0000000000000a2f         db  0x00 ; '.'
0000000000000a30         db  0xd4 ; '.'
0000000000000a31         db  0x01 ; '.'
0000000000000a32         db  0x00 ; '.'
0000000000000a33         db  0x00 ; '.'
0000000000000a34         db  0x12 ; '.'
0000000000000a35         db  0x00 ; '.'
0000000000000a36         db  0x00 ; '.'
0000000000000a37         db  0x00 ; '.'
0000000000000a38         db  0x00 ; '.'
0000000000000a39         db  0x00 ; '.'
0000000000000a3a         db  0x00 ; '.'
0000000000000a3b         db  0x00 ; '.'
0000000000000a3c         db  0x00 ; '.'
0000000000000a3d         db  0x00 ; '.'
0000000000000a3e         db  0x00 ; '.'
0000000000000a3f         db  0x00 ; '.'
0000000000000a40         db  0x00 ; '.'
0000000000000a41         db  0x00 ; '.'
0000000000000a42         db  0x00 ; '.'
0000000000000a43         db  0x00 ; '.'
0000000000000a44         db  0x00 ; '.'
0000000000000a45         db  0x00 ; '.'
0000000000000a46         db  0x00 ; '.'
0000000000000a47         db  0x00 ; '.'
0000000000000a48         db  0x9b ; '.'
0000000000000a49         db  0x02 ; '.'
0000000000000a4a         db  0x00 ; '.'
0000000000000a4b         db  0x00 ; '.'
0000000000000a4c         db  0x12 ; '.'
0000000000000a4d         db  0x00 ; '.'
0000000000000a4e         db  0x00 ; '.'
0000000000000a4f         db  0x00 ; '.'
0000000000000a50         db  0x00 ; '.'
0000000000000a51         db  0x00 ; '.'
0000000000000a52         db  0x00 ; '.'
0000000000000a53         db  0x00 ; '.'
0000000000000a54         db  0x00 ; '.'
0000000000000a55         db  0x00 ; '.'
0000000000000a56         db  0x00 ; '.'
0000000000000a57         db  0x00 ; '.'
0000000000000a58         db  0x00 ; '.'
0000000000000a59         db  0x00 ; '.'
0000000000000a5a         db  0x00 ; '.'
0000000000000a5b         db  0x00 ; '.'
0000000000000a5c         db  0x00 ; '.'
0000000000000a5d         db  0x00 ; '.'
0000000000000a5e         db  0x00 ; '.'
0000000000000a5f         db  0x00 ; '.'
0000000000000a60         db  0x86 ; '.'
0000000000000a61         db  0x01 ; '.'
0000000000000a62         db  0x00 ; '.'
0000000000000a63         db  0x00 ; '.'
0000000000000a64         db  0x11 ; '.'
0000000000000a65         db  0x00 ; '.'
0000000000000a66         db  0x19 ; '.'
0000000000000a67         db  0x00 ; '.'
0000000000000a68         db  0x68 ; 'h'
0000000000000a69         db  0xc2 ; '.'
0000000000000a6a         db  0x20 ; ' '
0000000000000a6b         db  0x00 ; '.'
0000000000000a6c         db  0x00 ; '.'
0000000000000a6d         db  0x00 ; '.'
0000000000000a6e         db  0x00 ; '.'
0000000000000a6f         db  0x00 ; '.'
0000000000000a70         db  0x08 ; '.'
0000000000000a71         db  0x00 ; '.'
0000000000000a72         db  0x00 ; '.'
0000000000000a73         db  0x00 ; '.'
0000000000000a74         db  0x00 ; '.'
0000000000000a75         db  0x00 ; '.'
0000000000000a76         db  0x00 ; '.'
0000000000000a77         db  0x00 ; '.'
0000000000000a78         db  0x1e ; '.'
0000000000000a79         db  0x03 ; '.'
0000000000000a7a         db  0x00 ; '.'
0000000000000a7b         db  0x00 ; '.'
0000000000000a7c         db  0x11 ; '.'
0000000000000a7d         db  0x00 ; '.'
0000000000000a7e         db  0x19 ; '.'
0000000000000a7f         db  0x00 ; '.'
0000000000000a80         db  0x60 ; '`'
0000000000000a81         db  0xc2 ; '.'
0000000000000a82         db  0x20 ; ' '
0000000000000a83         db  0x00 ; '.'
0000000000000a84         db  0x00 ; '.'
0000000000000a85         db  0x00 ; '.'
0000000000000a86         db  0x00 ; '.'
0000000000000a87         db  0x00 ; '.'
0000000000000a88         db  0x08 ; '.'
0000000000000a89         db  0x00 ; '.'
0000000000000a8a         db  0x00 ; '.'
0000000000000a8b         db  0x00 ; '.'
0000000000000a8c         db  0x00 ; '.'
0000000000000a8d         db  0x00 ; '.'
0000000000000a8e         db  0x00 ; '.'
0000000000000a8f         db  0x00 ; '.'
0000000000000a90         db  0xdb ; '.'
0000000000000a91         db  0x00 ; '.'
0000000000000a92         db  0x00 ; '.'
0000000000000a93         db  0x00 ; '.'
0000000000000a94         db  0x21 ; '!'
0000000000000a95         db  0x00 ; '.'
0000000000000a96         db  0x19 ; '.'
0000000000000a97         db  0x00 ; '.'
0000000000000a98         db  0x80 ; '.'
0000000000000a99         db  0xc2 ; '.'
0000000000000a9a         db  0x20 ; ' '
0000000000000a9b         db  0x00 ; '.'
0000000000000a9c         db  0x00 ; '.'
0000000000000a9d         db  0x00 ; '.'
0000000000000a9e         db  0x00 ; '.'
0000000000000a9f         db  0x00 ; '.'
0000000000000aa0         db  0x08 ; '.'
0000000000000aa1         db  0x00 ; '.'
0000000000000aa2         db  0x00 ; '.'
0000000000000aa3         db  0x00 ; '.'
0000000000000aa4         db  0x00 ; '.'
0000000000000aa5         db  0x00 ; '.'
0000000000000aa6         db  0x00 ; '.'
0000000000000aa7         db  0x00 ; '.'
0000000000000aa8         db  0x29 ; ')'
0000000000000aa9         db  0x03 ; '.'
0000000000000aaa         db  0x00 ; '.'
0000000000000aab         db  0x00 ; '.'
0000000000000aac         db  0x11 ; '.'
0000000000000aad         db  0x00 ; '.'
0000000000000aae         db  0x19 ; '.'
0000000000000aaf         db  0x00 ; '.'
0000000000000ab0         db  0x80 ; '.'
0000000000000ab1         db  0xc2 ; '.'
0000000000000ab2         db  0x20 ; ' '
0000000000000ab3         db  0x00 ; '.'
0000000000000ab4         db  0x00 ; '.'
0000000000000ab5         db  0x00 ; '.'
0000000000000ab6         db  0x00 ; '.'
0000000000000ab7         db  0x00 ; '.'
0000000000000ab8         db  0x08 ; '.'
0000000000000ab9         db  0x00 ; '.'
0000000000000aba         db  0x00 ; '.'
0000000000000abb         db  0x00 ; '.'
0000000000000abc         db  0x00 ; '.'
0000000000000abd         db  0x00 ; '.'
0000000000000abe         db  0x00 ; '.'
0000000000000abf         db  0x00 ; '.'
0000000000000ac0         db  0x49 ; 'I'
0000000000000ac1         db  0x02 ; '.'
0000000000000ac2         db  0x00 ; '.'
0000000000000ac3         db  0x00 ; '.'
0000000000000ac4         db  0x21 ; '!'
0000000000000ac5         db  0x00 ; '.'
0000000000000ac6         db  0x19 ; '.'
0000000000000ac7         db  0x00 ; '.'
0000000000000ac8         db  0x60 ; '`'
0000000000000ac9         db  0xc2 ; '.'
0000000000000aca         db  0x20 ; ' '
0000000000000acb         db  0x00 ; '.'
0000000000000acc         db  0x00 ; '.'
0000000000000acd         db  0x00 ; '.'
0000000000000ace         db  0x00 ; '.'
0000000000000acf         db  0x00 ; '.'
0000000000000ad0         db  0x08 ; '.'
0000000000000ad1         db  0x00 ; '.'
0000000000000ad2         db  0x00 ; '.'
0000000000000ad3         db  0x00 ; '.'
0000000000000ad4         db  0x00 ; '.'
0000000000000ad5         db  0x00 ; '.'
0000000000000ad6         db  0x00 ; '.'
0000000000000ad7         db  0x00 ; '.'
0000000000000ad8         db  0xfb ; '.'
0000000000000ad9         db  0x01 ; '.'
0000000000000ada         db  0x00 ; '.'
0000000000000adb         db  0x00 ; '.'
0000000000000adc         db  0x11 ; '.'
0000000000000add         db  0x00 ; '.'
0000000000000ade         db  0x19 ; '.'
0000000000000adf         db  0x00 ; '.'
0000000000000ae0         db  0xa0 ; '.'
0000000000000ae1         db  0xc2 ; '.'
0000000000000ae2         db  0x20 ; ' '
0000000000000ae3         db  0x00 ; '.'
0000000000000ae4         db  0x00 ; '.'
0000000000000ae5         db  0x00 ; '.'
0000000000000ae6         db  0x00 ; '.'
0000000000000ae7         db  0x00 ; '.'
0000000000000ae8         db  0x08 ; '.'
0000000000000ae9         db  0x00 ; '.'
0000000000000aea         db  0x00 ; '.'
0000000000000aeb         db  0x00 ; '.'
0000000000000aec         db  0x00 ; '.'
0000000000000aed         db  0x00 ; '.'
0000000000000aee         db  0x00 ; '.'
0000000000000aef         db  0x00 ; '.'
0000000000000af0         db  0x62 ; 'b'
0000000000000af1         db  0x00 ; '.'
0000000000000af2         db  0x00 ; '.'
0000000000000af3         db  0x00 ; '.'
0000000000000af4         db  0x11 ; '.'
0000000000000af5         db  0x00 ; '.'
0000000000000af6         db  0x19 ; '.'
0000000000000af7         db  0x00 ; '.'
0000000000000af8         db  0x70 ; 'p'
0000000000000af9         db  0xc2 ; '.'
0000000000000afa         db  0x20 ; ' '
0000000000000afb         db  0x00 ; '.'
0000000000000afc         db  0x00 ; '.'
0000000000000afd         db  0x00 ; '.'
0000000000000afe         db  0x00 ; '.'
0000000000000aff         db  0x00 ; '.'
0000000000000b00         db  0x04 ; '.'
0000000000000b01         db  0x00 ; '.'
0000000000000b02         db  0x00 ; '.'
0000000000000b03         db  0x00 ; '.'
0000000000000b04         db  0x00 ; '.'
0000000000000b05         db  0x00 ; '.'
0000000000000b06         db  0x00 ; '.'
0000000000000b07         db  0x00 ; '.'
0000000000000b08         db  0xe9 ; '.'
0000000000000b09         db  0x01 ; '.'
0000000000000b0a         db  0x00 ; '.'
0000000000000b0b         db  0x00 ; '.'
0000000000000b0c         db  0x11 ; '.'
0000000000000b0d         db  0x00 ; '.'
0000000000000b0e         db  0x19 ; '.'
0000000000000b0f         db  0x00 ; '.'
0000000000000b10         db  0x78 ; 'x'
0000000000000b11         db  0xc2 ; '.'
0000000000000b12         db  0x20 ; ' '
0000000000000b13         db  0x00 ; '.'
0000000000000b14         db  0x00 ; '.'
0000000000000b15         db  0x00 ; '.'
0000000000000b16         db  0x00 ; '.'
0000000000000b17         db  0x00 ; '.'
0000000000000b18         db  0x08 ; '.'
0000000000000b19         db  0x00 ; '.'
0000000000000b1a         db  0x00 ; '.'
0000000000000b1b         db  0x00 ; '.'
0000000000000b1c         db  0x00 ; '.'
0000000000000b1d         db  0x00 ; '.'
0000000000000b1e         db  0x00 ; '.'
0000000000000b1f         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0xb20; 0xee2[ (962 bytes)
        ; File offset : [2848; 3810[ (962 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000000b20         db  0x00 ; '.'
0000000000000b21         db  0x6c ; 'l'
0000000000000b22         db  0x69 ; 'i'
0000000000000b23         db  0x62 ; 'b'
0000000000000b24         db  0x63 ; 'c'
0000000000000b25         db  0x2e ; '.'
0000000000000b26         db  0x73 ; 's'
0000000000000b27         db  0x6f ; 'o'
0000000000000b28         db  0x2e ; '.'
0000000000000b29         db  0x36 ; '6'
0000000000000b2a         db  0x00 ; '.'
0000000000000b2b         db  0x66 ; 'f'
0000000000000b2c         db  0x66 ; 'f'
0000000000000b2d         db  0x6c ; 'l'
0000000000000b2e         db  0x75 ; 'u'
0000000000000b2f         db  0x73 ; 's'
0000000000000b30         db  0x68 ; 'h'
0000000000000b31         db  0x00 ; '.'
0000000000000b32         db  0x73 ; 's'
0000000000000b33         db  0x74 ; 't'
0000000000000b34         db  0x72 ; 'r'
0000000000000b35         db  0x63 ; 'c'
0000000000000b36         db  0x70 ; 'p'
0000000000000b37         db  0x79 ; 'y'
0000000000000b38         db  0x00 ; '.'
0000000000000b39         db  0x5f ; '_'
0000000000000b3a         db  0x5f ; '_'
0000000000000b3b         db  0x70 ; 'p'
0000000000000b3c         db  0x72 ; 'r'
0000000000000b3d         db  0x69 ; 'i'
0000000000000b3e         db  0x6e ; 'n'
0000000000000b3f         db  0x74 ; 't'
0000000000000b40         db  0x66 ; 'f'
                     aChk:
0000000000000b41         db         "_chk", 0
0000000000000b46         db  0x65 ; 'e'
0000000000000b47         db  0x78 ; 'x'
0000000000000b48         db  0x65 ; 'e'
0000000000000b49         db  0x63 ; 'c'
0000000000000b4a         db  0x6c ; 'l'
0000000000000b4b         db  0x00 ; '.'
0000000000000b4c         db  0x63 ; 'c'
0000000000000b4d         db  0x6c ; 'l'
0000000000000b4e         db  0x65 ; 'e'
0000000000000b4f         db  0x61 ; 'a'
0000000000000b50         db  0x72 ; 'r'
0000000000000b51         db  0x65 ; 'e'
0000000000000b52         db  0x72 ; 'r'
0000000000000b53         db  0x72 ; 'r'
0000000000000b54         db  0x5f ; '_'
0000000000000b55         db  0x75 ; 'u'
0000000000000b56         db  0x6e ; 'n'
0000000000000b57         db  0x6c ; 'l'
0000000000000b58         db  0x6f ; 'o'
0000000000000b59         db  0x63 ; 'c'
0000000000000b5a         db  0x6b ; 'k'
0000000000000b5b         db  0x65 ; 'e'
0000000000000b5c         db  0x64 ; 'd'
0000000000000b5d         db  0x00 ; '.'
0000000000000b5e         db  0x73 ; 's'
0000000000000b5f         db  0x65 ; 'e'
0000000000000b60         db  0x74 ; 't'
0000000000000b61         db  0x6c ; 'l'
0000000000000b62         db  0x6f ; 'o'
0000000000000b63         db  0x63 ; 'c'
0000000000000b64         db  0x61 ; 'a'
0000000000000b65         db  0x6c ; 'l'
0000000000000b66         db  0x65 ; 'e'
0000000000000b67         db  0x00 ; '.'
0000000000000b68         db  0x6d ; 'm'
0000000000000b69         db  0x62 ; 'b'
0000000000000b6a         db  0x72 ; 'r'
0000000000000b6b         db  0x74 ; 't'
0000000000000b6c         db  0x6f ; 'o'
0000000000000b6d         db  0x77 ; 'w'
0000000000000b6e         db  0x63 ; 'c'
0000000000000b6f         db  0x00 ; '.'
0000000000000b70         db  0x73 ; 's'
0000000000000b71         db  0x74 ; 't'
0000000000000b72         db  0x72 ; 'r'
0000000000000b73         db  0x6e ; 'n'
0000000000000b74         db  0x63 ; 'c'
0000000000000b75         db  0x6d ; 'm'
0000000000000b76         db  0x70 ; 'p'
0000000000000b77         db  0x00 ; '.'
0000000000000b78         db  0x66 ; 'f'
0000000000000b79         db  0x74 ; 't'
0000000000000b7a         db  0x72 ; 'r'
0000000000000b7b         db  0x75 ; 'u'
0000000000000b7c         db  0x6e ; 'n'
0000000000000b7d         db  0x63 ; 'c'
0000000000000b7e         db  0x61 ; 'a'
0000000000000b7f         db  0x74 ; 't'
0000000000000b80         db  0x65 ; 'e'
0000000000000b81         db  0x00 ; '.'
0000000000000b82         db  0x6f ; 'o'
0000000000000b83         db  0x70 ; 'p'
0000000000000b84         db  0x74 ; 't'
0000000000000b85         db  0x69 ; 'i'
0000000000000b86         db  0x6e ; 'n'
0000000000000b87         db  0x64 ; 'd'
0000000000000b88         db  0x00 ; '.'
0000000000000b89         db  0x73 ; 's'
0000000000000b8a         db  0x74 ; 't'
0000000000000b8b         db  0x72 ; 'r'
0000000000000b8c         db  0x72 ; 'r'
0000000000000b8d         db  0x63 ; 'c'
0000000000000b8e         db  0x68 ; 'h'
0000000000000b8f         db  0x72 ; 'r'
0000000000000b90         db  0x00 ; '.'
0000000000000b91         db  0x70 ; 'p'
0000000000000b92         db  0x69 ; 'i'
0000000000000b93         db  0x70 ; 'p'
0000000000000b94         db  0x65 ; 'e'
0000000000000b95         db  0x00 ; '.'
0000000000000b96         db  0x64 ; 'd'
0000000000000b97         db  0x63 ; 'c'
0000000000000b98         db  0x67 ; 'g'
0000000000000b99         db  0x65 ; 'e'
0000000000000b9a         db  0x74 ; 't'
0000000000000b9b         db  0x74 ; 't'
0000000000000b9c         db  0x65 ; 'e'
0000000000000b9d         db  0x78 ; 'x'
0000000000000b9e         db  0x74 ; 't'
0000000000000b9f         db  0x00 ; '.'
0000000000000ba0         db  0x65 ; 'e'
0000000000000ba1         db  0x72 ; 'r'
0000000000000ba2         db  0x72 ; 'r'
0000000000000ba3         db  0x6f ; 'o'
0000000000000ba4         db  0x72 ; 'r'
0000000000000ba5         db  0x00 ; '.'
0000000000000ba6         db  0x66 ; 'f'
0000000000000ba7         db  0x6f ; 'o'
0000000000000ba8         db  0x72 ; 'r'
0000000000000ba9         db  0x6b ; 'k'
0000000000000baa         db  0x00 ; '.'
0000000000000bab         db  0x73 ; 's'
0000000000000bac         db  0x69 ; 'i'
0000000000000bad         db  0x67 ; 'g'
0000000000000bae         db  0x70 ; 'p'
0000000000000baf         db  0x72 ; 'r'
0000000000000bb0         db  0x6f ; 'o'
0000000000000bb1         db  0x63 ; 'c'
0000000000000bb2         db  0x6d ; 'm'
0000000000000bb3         db  0x61 ; 'a'
0000000000000bb4         db  0x73 ; 's'
0000000000000bb5         db  0x6b ; 'k'
0000000000000bb6         db  0x00 ; '.'
0000000000000bb7         db  0x5f ; '_'
0000000000000bb8         db  0x5f ; '_'
0000000000000bb9         db  0x73 ; 's'
0000000000000bba         db  0x74 ; 't'
0000000000000bbb         db  0x61 ; 'a'
0000000000000bbc         db  0x63 ; 'c'
0000000000000bbd         db  0x6b ; 'k'
0000000000000bbe         db  0x5f ; '_'
0000000000000bbf         db  0x63 ; 'c'
0000000000000bc0         db  0x68 ; 'h'
0000000000000bc1         db  0x6b ; 'k'
0000000000000bc2         db  0x5f ; '_'
0000000000000bc3         db  0x66 ; 'f'
0000000000000bc4         db  0x61 ; 'a'
0000000000000bc5         db  0x69 ; 'i'
0000000000000bc6         db  0x6c ; 'l'
0000000000000bc7         db  0x00 ; '.'
0000000000000bc8         db  0x69 ; 'i'
0000000000000bc9         db  0x73 ; 's'
0000000000000bca         db  0x77 ; 'w'
0000000000000bcb         db  0x70 ; 'p'
0000000000000bcc         db  0x72 ; 'r'
0000000000000bcd         db  0x69 ; 'i'
0000000000000bce         db  0x6e ; 'n'
0000000000000bcf         db  0x74 ; 't'
0000000000000bd0         db  0x00 ; '.'
0000000000000bd1         db  0x72 ; 'r'
0000000000000bd2         db  0x65 ; 'e'
0000000000000bd3         db  0x61 ; 'a'
0000000000000bd4         db  0x6c ; 'l'
0000000000000bd5         db  0x6c ; 'l'
0000000000000bd6         db  0x6f ; 'o'
0000000000000bd7         db  0x63 ; 'c'
0000000000000bd8         db  0x00 ; '.'
0000000000000bd9         db  0x61 ; 'a'
0000000000000bda         db  0x62 ; 'b'
0000000000000bdb         db  0x6f ; 'o'
0000000000000bdc         db  0x72 ; 'r'
0000000000000bdd         db  0x74 ; 't'
0000000000000bde         db  0x00 ; '.'
0000000000000bdf         db  0x5f ; '_'
0000000000000be0         db  0x65 ; 'e'
0000000000000be1         db  0x78 ; 'x'
0000000000000be2         db  0x69 ; 'i'
0000000000000be3         db  0x74 ; 't'
0000000000000be4         db  0x00 ; '.'
0000000000000be5         db  0x6d ; 'm'
0000000000000be6         db  0x65 ; 'e'
0000000000000be7         db  0x6d ; 'm'
0000000000000be8         db  0x63 ; 'c'
0000000000000be9         db  0x68 ; 'h'
0000000000000bea         db  0x72 ; 'r'
0000000000000beb         db  0x00 ; '.'
0000000000000bec         db  0x6d ; 'm'
0000000000000bed         db  0x65 ; 'e'
0000000000000bee         db  0x6d ; 'm'
0000000000000bef         db  0x72 ; 'r'
0000000000000bf0         db  0x63 ; 'c'
0000000000000bf1         db  0x68 ; 'h'
0000000000000bf2         db  0x72 ; 'r'
0000000000000bf3         db  0x00 ; '.'
0000000000000bf4         db  0x73 ; 's'
0000000000000bf5         db  0x74 ; 't'
0000000000000bf6         db  0x72 ; 'r'
0000000000000bf7         db  0x73 ; 's'
0000000000000bf8         db  0x70 ; 'p'
0000000000000bf9         db  0x6e ; 'n'
0000000000000bfa         db  0x00 ; '.'
0000000000000bfb         db  0x70 ; 'p'
0000000000000bfc         db  0x72 ; 'r'
0000000000000bfd         db  0x6f ; 'o'
0000000000000bfe         db  0x67 ; 'g'
0000000000000bff         db  0x72 ; 'r'
0000000000000c00         db  0x61 ; 'a'
                     aMinvocationnam:
0000000000000c01         db         "m_invocation_name", 0                      ; DATA XREF=ofile_open+90
0000000000000c13         db  0x5f ; '_'
0000000000000c14         db  0x5f ; '_'
0000000000000c15         db  0x61 ; 'a'
0000000000000c16         db  0x73 ; 's'
0000000000000c17         db  0x73 ; 's'
0000000000000c18         db  0x65 ; 'e'
0000000000000c19         db  0x72 ; 'r'
0000000000000c1a         db  0x74 ; 't'
0000000000000c1b         db  0x5f ; '_'
0000000000000c1c         db  0x66 ; 'f'
0000000000000c1d         db  0x61 ; 'a'
0000000000000c1e         db  0x69 ; 'i'
0000000000000c1f         db  0x6c ; 'l'
0000000000000c20         db  0x00 ; '.'
0000000000000c21         db  0x5f ; '_'
0000000000000c22         db  0x5f ; '_'
0000000000000c23         db  0x63 ; 'c'
0000000000000c24         db  0x74 ; 't'
0000000000000c25         db  0x79 ; 'y'
0000000000000c26         db  0x70 ; 'p'
0000000000000c27         db  0x65 ; 'e'
0000000000000c28         db  0x5f ; '_'
0000000000000c29         db  0x67 ; 'g'
0000000000000c2a         db  0x65 ; 'e'
0000000000000c2b         db  0x74 ; 't'
0000000000000c2c         db  0x5f ; '_'
0000000000000c2d         db  0x6d ; 'm'
0000000000000c2e         db  0x62 ; 'b'
0000000000000c2f         db  0x5f ; '_'
0000000000000c30         db  0x63 ; 'c'
0000000000000c31         db  0x75 ; 'u'
0000000000000c32         db  0x72 ; 'r'
0000000000000c33         db  0x5f ; '_'
0000000000000c34         db  0x6d ; 'm'
0000000000000c35         db  0x61 ; 'a'
0000000000000c36         db  0x78 ; 'x'
0000000000000c37         db  0x00 ; '.'
0000000000000c38         db  0x73 ; 's'
0000000000000c39         db  0x74 ; 't'
0000000000000c3a         db  0x72 ; 'r'
0000000000000c3b         db  0x74 ; 't'
0000000000000c3c         db  0x6f ; 'o'
0000000000000c3d         db  0x6c ; 'l'
0000000000000c3e         db  0x00 ; '.'
0000000000000c3f         db  0x63 ; 'c'
0000000000000c40         db  0x61 ; 'a'
0000000000000c41         db  0x6c ; 'l'
0000000000000c42         db  0x6c ; 'l'
0000000000000c43         db  0x6f ; 'o'
0000000000000c44         db  0x63 ; 'c'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x73 ; 's'
0000000000000c47         db  0x74 ; 't'
0000000000000c48         db  0x72 ; 'r'
0000000000000c49         db  0x6c ; 'l'
0000000000000c4a         db  0x65 ; 'e'
0000000000000c4b         db  0x6e ; 'n'
0000000000000c4c         db  0x00 ; '.'
0000000000000c4d         db  0x73 ; 's'
0000000000000c4e         db  0x69 ; 'i'
0000000000000c4f         db  0x67 ; 'g'
0000000000000c50         db  0x65 ; 'e'
0000000000000c51         db  0x6d ; 'm'
0000000000000c52         db  0x70 ; 'p'
0000000000000c53         db  0x74 ; 't'
0000000000000c54         db  0x79 ; 'y'
0000000000000c55         db  0x73 ; 's'
0000000000000c56         db  0x65 ; 'e'
0000000000000c57         db  0x74 ; 't'
0000000000000c58         db  0x00 ; '.'
0000000000000c59         db  0x6d ; 'm'
0000000000000c5a         db  0x65 ; 'e'
0000000000000c5b         db  0x6d ; 'm'
0000000000000c5c         db  0x73 ; 's'
0000000000000c5d         db  0x65 ; 'e'
0000000000000c5e         db  0x74 ; 't'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0x5f ; '_'
0000000000000c61         db  0x5f ; '_'
0000000000000c62         db  0x65 ; 'e'
0000000000000c63         db  0x72 ; 'r'
0000000000000c64         db  0x72 ; 'r'
0000000000000c65         db  0x6e ; 'n'
0000000000000c66         db  0x6f ; 'o'
0000000000000c67         db  0x5f ; '_'
0000000000000c68         db  0x6c ; 'l'
0000000000000c69         db  0x6f ; 'o'
0000000000000c6a         db  0x63 ; 'c'
0000000000000c6b         db  0x61 ; 'a'
0000000000000c6c         db  0x74 ; 't'
0000000000000c6d         db  0x69 ; 'i'
0000000000000c6e         db  0x6f ; 'o'
0000000000000c6f         db  0x6e ; 'n'
0000000000000c70         db  0x00 ; '.'
0000000000000c71         db  0x72 ; 'r'
0000000000000c72         db  0x65 ; 'e'
0000000000000c73         db  0x61 ; 'a'
0000000000000c74         db  0x64 ; 'd'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x6d ; 'm'
0000000000000c77         db  0x65 ; 'e'
0000000000000c78         db  0x6d ; 'm'
0000000000000c79         db  0x63 ; 'c'
0000000000000c7a         db  0x6d ; 'm'
0000000000000c7b         db  0x70 ; 'p'
0000000000000c7c         db  0x00 ; '.'
0000000000000c7d         db  0x67 ; 'g'
0000000000000c7e         db  0x65 ; 'e'
0000000000000c7f         db  0x74 ; 't'
0000000000000c80         db  0x70 ; 'p'
0000000000000c81         db  0x61 ; 'a'
0000000000000c82         db  0x67 ; 'g'
0000000000000c83         db  0x65 ; 'e'
0000000000000c84         db  0x73 ; 's'
0000000000000c85         db  0x69 ; 'i'
0000000000000c86         db  0x7a ; 'z'
0000000000000c87         db  0x65 ; 'e'
0000000000000c88         db  0x00 ; '.'
0000000000000c89         db  0x64 ; 'd'
0000000000000c8a         db  0x75 ; 'u'
0000000000000c8b         db  0x70 ; 'p'
0000000000000c8c         db  0x32 ; '2'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x5f ; '_'
0000000000000c8f         db  0x5f ; '_'
0000000000000c90         db  0x66 ; 'f'
0000000000000c91         db  0x70 ; 'p'
0000000000000c92         db  0x72 ; 'r'
0000000000000c93         db  0x69 ; 'i'
0000000000000c94         db  0x6e ; 'n'
0000000000000c95         db  0x74 ; 't'
0000000000000c96         db  0x66 ; 'f'
0000000000000c97         db  0x5f ; '_'
0000000000000c98         db  0x63 ; 'c'
0000000000000c99         db  0x68 ; 'h'
0000000000000c9a         db  0x6b ; 'k'
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x73 ; 's'
0000000000000c9d         db  0x69 ; 'i'
0000000000000c9e         db  0x67 ; 'g'
0000000000000c9f         db  0x61 ; 'a'
0000000000000ca0         db  0x64 ; 'd'
0000000000000ca1         db  0x64 ; 'd'
0000000000000ca2         db  0x73 ; 's'
0000000000000ca3         db  0x65 ; 'e'
0000000000000ca4         db  0x74 ; 't'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x73 ; 's'
0000000000000ca7         db  0x74 ; 't'
0000000000000ca8         db  0x64 ; 'd'
0000000000000ca9         db  0x6f ; 'o'
0000000000000caa         db  0x75 ; 'u'
0000000000000cab         db  0x74 ; 't'
0000000000000cac         db  0x00 ; '.'
0000000000000cad         db  0x6c ; 'l'
0000000000000cae         db  0x73 ; 's'
0000000000000caf         db  0x65 ; 'e'
0000000000000cb0         db  0x65 ; 'e'
0000000000000cb1         db  0x6b ; 'k'
0000000000000cb2         db  0x00 ; '.'
0000000000000cb3         db  0x6d ; 'm'
0000000000000cb4         db  0x65 ; 'e'
0000000000000cb5         db  0x6d ; 'm'
0000000000000cb6         db  0x63 ; 'c'
0000000000000cb7         db  0x70 ; 'p'
0000000000000cb8         db  0x79 ; 'y'
0000000000000cb9         db  0x00 ; '.'
0000000000000cba         db  0x66 ; 'f'
0000000000000cbb         db  0x63 ; 'c'
0000000000000cbc         db  0x6c ; 'l'
0000000000000cbd         db  0x6f ; 'o'
0000000000000cbe         db  0x73 ; 's'
0000000000000cbf         db  0x65 ; 'e'
0000000000000cc0         db  0x00 ; '.'
0000000000000cc1         db  0x6d ; 'm'
0000000000000cc2         db  0x61 ; 'a'
0000000000000cc3         db  0x6c ; 'l'
0000000000000cc4         db  0x6c ; 'l'
0000000000000cc5         db  0x6f ; 'o'
0000000000000cc6         db  0x63 ; 'c'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0x6d ; 'm'
0000000000000cc9         db  0x62 ; 'b'
0000000000000cca         db  0x73 ; 's'
0000000000000ccb         db  0x69 ; 'i'
0000000000000ccc         db  0x6e ; 'n'
0000000000000ccd         db  0x69 ; 'i'
0000000000000cce         db  0x74 ; 't'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x6e ; 'n'
0000000000000cd1         db  0x6c ; 'l'
0000000000000cd2         db  0x5f ; '_'
0000000000000cd3         db  0x6c ; 'l'
0000000000000cd4         db  0x61 ; 'a'
0000000000000cd5         db  0x6e ; 'n'
0000000000000cd6         db  0x67 ; 'g'
0000000000000cd7         db  0x69 ; 'i'
0000000000000cd8         db  0x6e ; 'n'
0000000000000cd9         db  0x66 ; 'f'
0000000000000cda         db  0x6f ; 'o'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x5f ; '_'
0000000000000cdd         db  0x5f ; '_'
0000000000000cde         db  0x6c ; 'l'
0000000000000cdf         db  0x69 ; 'i'
0000000000000ce0         db  0x62 ; 'b'
0000000000000ce1         db  0x63 ; 'c'
0000000000000ce2         db  0x5f ; '_'
0000000000000ce3         db  0x63 ; 'c'
0000000000000ce4         db  0x75 ; 'u'
0000000000000ce5         db  0x72 ; 'r'
0000000000000ce6         db  0x72 ; 'r'
0000000000000ce7         db  0x65 ; 'e'
0000000000000ce8         db  0x6e ; 'n'
0000000000000ce9         db  0x74 ; 't'
0000000000000cea         db  0x5f ; '_'
0000000000000ceb         db  0x73 ; 's'
0000000000000cec         db  0x69 ; 'i'
0000000000000ced         db  0x67 ; 'g'
0000000000000cee         db  0x72 ; 'r'
0000000000000cef         db  0x74 ; 't'
0000000000000cf0         db  0x6d ; 'm'
0000000000000cf1         db  0x61 ; 'a'
0000000000000cf2         db  0x78 ; 'x'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x5f ; '_'
0000000000000cf5         db  0x5f ; '_'
0000000000000cf6         db  0x63 ; 'c'
0000000000000cf7         db  0x74 ; 't'
0000000000000cf8         db  0x79 ; 'y'
0000000000000cf9         db  0x70 ; 'p'
0000000000000cfa         db  0x65 ; 'e'
0000000000000cfb         db  0x5f ; '_'
0000000000000cfc         db  0x62 ; 'b'
0000000000000cfd         db  0x5f ; '_'
0000000000000cfe         db  0x6c ; 'l'
0000000000000cff         db  0x6f ; 'o'
0000000000000d00         db  0x63 ; 'c'
0000000000000d01         db  0x00 ; '.'
0000000000000d02         db  0x67 ; 'g'
0000000000000d03         db  0x65 ; 'e'
0000000000000d04         db  0x74 ; 't'
0000000000000d05         db  0x65 ; 'e'
0000000000000d06         db  0x6e ; 'n'
0000000000000d07         db  0x76 ; 'v'
0000000000000d08         db  0x00 ; '.'
0000000000000d09         db  0x6f ; 'o'
0000000000000d0a         db  0x70 ; 'p'
0000000000000d0b         db  0x74 ; 't'
0000000000000d0c         db  0x61 ; 'a'
0000000000000d0d         db  0x72 ; 'r'
0000000000000d0e         db  0x67 ; 'g'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x5f ; '_'
0000000000000d11         db  0x5f ; '_'
0000000000000d12         db  0x66 ; 'f'
0000000000000d13         db  0x72 ; 'r'
0000000000000d14         db  0x65 ; 'e'
0000000000000d15         db  0x61 ; 'a'
0000000000000d16         db  0x64 ; 'd'
0000000000000d17         db  0x69 ; 'i'
0000000000000d18         db  0x6e ; 'n'
0000000000000d19         db  0x67 ; 'g'
0000000000000d1a         db  0x00 ; '.'
0000000000000d1b         db  0x73 ; 's'
0000000000000d1c         db  0x74 ; 't'
0000000000000d1d         db  0x64 ; 'd'
0000000000000d1e         db  0x65 ; 'e'
0000000000000d1f         db  0x72 ; 'r'
0000000000000d20         db  0x72 ; 'r'
0000000000000d21         db  0x00 ; '.'
0000000000000d22         db  0x67 ; 'g'
0000000000000d23         db  0x65 ; 'e'
0000000000000d24         db  0x74 ; 't'
0000000000000d25         db  0x6f ; 'o'
0000000000000d26         db  0x70 ; 'p'
0000000000000d27         db  0x74 ; 't'
0000000000000d28         db  0x5f ; '_'
0000000000000d29         db  0x6c ; 'l'
0000000000000d2a         db  0x6f ; 'o'
0000000000000d2b         db  0x6e ; 'n'
0000000000000d2c         db  0x67 ; 'g'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x5f ; '_'
0000000000000d2f         db  0x5f ; '_'
0000000000000d30         db  0x66 ; 'f'
0000000000000d31         db  0x78 ; 'x'
0000000000000d32         db  0x73 ; 's'
0000000000000d33         db  0x74 ; 't'
0000000000000d34         db  0x61 ; 'a'
0000000000000d35         db  0x74 ; 't'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x66 ; 'f'
0000000000000d38         db  0x69 ; 'i'
0000000000000d39         db  0x6c ; 'l'
0000000000000d3a         db  0x65 ; 'e'
0000000000000d3b         db  0x6e ; 'n'
0000000000000d3c         db  0x6f ; 'o'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x66 ; 'f'
0000000000000d3f         db  0x77 ; 'w'
0000000000000d40         db  0x72 ; 'r'
0000000000000d41         db  0x69 ; 'i'
0000000000000d42         db  0x74 ; 't'
0000000000000d43         db  0x65 ; 'e'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x73 ; 's'
0000000000000d46         db  0x69 ; 'i'
0000000000000d47         db  0x67 ; 'g'
0000000000000d48         db  0x61 ; 'a'
0000000000000d49         db  0x63 ; 'c'
0000000000000d4a         db  0x74 ; 't'
0000000000000d4b         db  0x69 ; 'i'
0000000000000d4c         db  0x6f ; 'o'
0000000000000d4d         db  0x6e ; 'n'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x77 ; 'w'
0000000000000d50         db  0x61 ; 'a'
0000000000000d51         db  0x69 ; 'i'
0000000000000d52         db  0x74 ; 't'
0000000000000d53         db  0x70 ; 'p'
0000000000000d54         db  0x69 ; 'i'
0000000000000d55         db  0x64 ; 'd'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x5f ; '_'
0000000000000d58         db  0x5f ; '_'
0000000000000d59         db  0x66 ; 'f'
0000000000000d5a         db  0x70 ; 'p'
0000000000000d5b         db  0x65 ; 'e'
0000000000000d5c         db  0x6e ; 'n'
0000000000000d5d         db  0x64 ; 'd'
0000000000000d5e         db  0x69 ; 'i'
0000000000000d5f         db  0x6e ; 'n'
0000000000000d60         db  0x67 ; 'g'
0000000000000d61         db  0x00 ; '.'
0000000000000d62         db  0x73 ; 's'
0000000000000d63         db  0x74 ; 't'
0000000000000d64         db  0x72 ; 'r'
0000000000000d65         db  0x63 ; 'c'
0000000000000d66         db  0x68 ; 'h'
0000000000000d67         db  0x72 ; 'r'
0000000000000d68         db  0x00 ; '.'
0000000000000d69         db  0x70 ; 'p'
0000000000000d6a         db  0x72 ; 'r'
0000000000000d6b         db  0x6f ; 'o'
0000000000000d6c         db  0x67 ; 'g'
0000000000000d6d         db  0x72 ; 'r'
0000000000000d6e         db  0x61 ; 'a'
0000000000000d6f         db  0x6d ; 'm'
0000000000000d70         db  0x5f ; '_'
0000000000000d71         db  0x69 ; 'i'
0000000000000d72         db  0x6e ; 'n'
0000000000000d73         db  0x76 ; 'v'
0000000000000d74         db  0x6f ; 'o'
0000000000000d75         db  0x63 ; 'c'
0000000000000d76         db  0x61 ; 'a'
0000000000000d77         db  0x74 ; 't'
0000000000000d78         db  0x69 ; 'i'
0000000000000d79         db  0x6f ; 'o'
0000000000000d7a         db  0x6e ; 'n'
0000000000000d7b         db  0x5f ; '_'
0000000000000d7c         db  0x73 ; 's'
0000000000000d7d         db  0x68 ; 'h'
0000000000000d7e         db  0x6f ; 'o'
0000000000000d7f         db  0x72 ; 'r'
0000000000000d80         db  0x74 ; 't'
0000000000000d81         db  0x5f ; '_'
0000000000000d82         db  0x6e ; 'n'
0000000000000d83         db  0x61 ; 'a'
0000000000000d84         db  0x6d ; 'm'
0000000000000d85         db  0x65 ; 'e'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x66 ; 'f'
0000000000000d88         db  0x64 ; 'd'
0000000000000d89         db  0x6f ; 'o'
0000000000000d8a         db  0x70 ; 'p'
0000000000000d8b         db  0x65 ; 'e'
0000000000000d8c         db  0x6e ; 'n'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x5f ; '_'
0000000000000d8f         db  0x5f ; '_'
0000000000000d90         db  0x63 ; 'c'
0000000000000d91         db  0x78 ; 'x'
0000000000000d92         db  0x61 ; 'a'
0000000000000d93         db  0x5f ; '_'
0000000000000d94         db  0x66 ; 'f'
0000000000000d95         db  0x69 ; 'i'
0000000000000d96         db  0x6e ; 'n'
0000000000000d97         db  0x61 ; 'a'
0000000000000d98         db  0x6c ; 'l'
0000000000000d99         db  0x69 ; 'i'
0000000000000d9a         db  0x7a ; 'z'
0000000000000d9b         db  0x65 ; 'e'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x5f ; '_'
0000000000000d9e         db  0x5f ; '_'
0000000000000d9f         db  0x6c ; 'l'
0000000000000da0         db  0x69 ; 'i'
0000000000000da1         db  0x62 ; 'b'
0000000000000da2         db  0x63 ; 'c'
0000000000000da3         db  0x5f ; '_'
0000000000000da4         db  0x63 ; 'c'
0000000000000da5         db  0x75 ; 'u'
0000000000000da6         db  0x72 ; 'r'
0000000000000da7         db  0x72 ; 'r'
0000000000000da8         db  0x65 ; 'e'
0000000000000da9         db  0x6e ; 'n'
0000000000000daa         db  0x74 ; 't'
0000000000000dab         db  0x5f ; '_'
0000000000000dac         db  0x73 ; 's'
0000000000000dad         db  0x69 ; 'i'
0000000000000dae         db  0x67 ; 'g'
0000000000000daf         db  0x72 ; 'r'
0000000000000db0         db  0x74 ; 't'
0000000000000db1         db  0x6d ; 'm'
0000000000000db2         db  0x69 ; 'i'
0000000000000db3         db  0x6e ; 'n'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x66 ; 'f'
0000000000000db6         db  0x63 ; 'c'
0000000000000db7         db  0x6e ; 'n'
0000000000000db8         db  0x74 ; 't'
0000000000000db9         db  0x6c ; 'l'
0000000000000dba         db  0x00 ; '.'
0000000000000dbb         db  0x5f ; '_'
0000000000000dbc         db  0x5f ; '_'
0000000000000dbd         db  0x73 ; 's'
0000000000000dbe         db  0x70 ; 'p'
0000000000000dbf         db  0x72 ; 'r'
0000000000000dc0         db  0x69 ; 'i'
0000000000000dc1         db  0x6e ; 'n'
0000000000000dc2         db  0x74 ; 't'
0000000000000dc3         db  0x66 ; 'f'
0000000000000dc4         db  0x5f ; '_'
0000000000000dc5         db  0x63 ; 'c'
0000000000000dc6         db  0x68 ; 'h'
0000000000000dc7         db  0x6b ; 'k'
0000000000000dc8         db  0x00 ; '.'
0000000000000dc9         db  0x6d ; 'm'
0000000000000dca         db  0x65 ; 'e'
0000000000000dcb         db  0x6d ; 'm'
0000000000000dcc         db  0x6d ; 'm'
0000000000000dcd         db  0x6f ; 'o'
0000000000000dce         db  0x76 ; 'v'
0000000000000dcf         db  0x65 ; 'e'
0000000000000dd0         db  0x00 ; '.'
0000000000000dd1         db  0x62 ; 'b'
0000000000000dd2         db  0x69 ; 'i'
0000000000000dd3         db  0x6e ; 'n'
0000000000000dd4         db  0x64 ; 'd'
0000000000000dd5         db  0x74 ; 't'
0000000000000dd6         db  0x65 ; 'e'
0000000000000dd7         db  0x78 ; 'x'
0000000000000dd8         db  0x74 ; 't'
0000000000000dd9         db  0x64 ; 'd'
0000000000000dda         db  0x6f ; 'o'
0000000000000ddb         db  0x6d ; 'm'
0000000000000ddc         db  0x61 ; 'a'
0000000000000ddd         db  0x69 ; 'i'
0000000000000dde         db  0x6e ; 'n'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x66 ; 'f'
0000000000000de1         db  0x77 ; 'w'
0000000000000de2         db  0x72 ; 'r'
0000000000000de3         db  0x69 ; 'i'
0000000000000de4         db  0x74 ; 't'
0000000000000de5         db  0x65 ; 'e'
0000000000000de6         db  0x5f ; '_'
0000000000000de7         db  0x75 ; 'u'
0000000000000de8         db  0x6e ; 'n'
0000000000000de9         db  0x6c ; 'l'
0000000000000dea         db  0x6f ; 'o'
0000000000000deb         db  0x63 ; 'c'
0000000000000dec         db  0x6b ; 'k'
0000000000000ded         db  0x65 ; 'e'
0000000000000dee         db  0x64 ; 'd'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x73 ; 's'
0000000000000df1         db  0x74 ; 't'
0000000000000df2         db  0x72 ; 'r'
0000000000000df3         db  0x63 ; 'c'
0000000000000df4         db  0x6d ; 'm'
0000000000000df5         db  0x70 ; 'p'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x5f ; '_'
0000000000000df8         db  0x5f ; '_'
0000000000000df9         db  0x6c ; 'l'
0000000000000dfa         db  0x69 ; 'i'
0000000000000dfb         db  0x62 ; 'b'
0000000000000dfc         db  0x63 ; 'c'
0000000000000dfd         db  0x5f ; '_'
0000000000000dfe         db  0x73 ; 's'
0000000000000dff         db  0x74 ; 't'
                     aArtmain:
0000000000000e00         db         "art_main", 0
0000000000000e09         db  0x73 ; 's'
0000000000000e0a         db  0x65 ; 'e'
0000000000000e0b         db  0x74 ; 't'
0000000000000e0c         db  0x65 ; 'e'
0000000000000e0d         db  0x6e ; 'n'
0000000000000e0e         db  0x76 ; 'v'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x66 ; 'f'
0000000000000e11         db  0x73 ; 's'
0000000000000e12         db  0x65 ; 'e'
0000000000000e13         db  0x65 ; 'e'
0000000000000e14         db  0x6b ; 'k'
0000000000000e15         db  0x6f ; 'o'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x5f ; '_'
0000000000000e18         db  0x5f ; '_'
0000000000000e19         db  0x73 ; 's'
0000000000000e1a         db  0x74 ; 't'
0000000000000e1b         db  0x72 ; 'r'
0000000000000e1c         db  0x74 ; 't'
0000000000000e1d         db  0x6f ; 'o'
0000000000000e1e         db  0x75 ; 'u'
0000000000000e1f         db  0x6c ; 'l'
0000000000000e20         db  0x5f ; '_'
0000000000000e21         db  0x69 ; 'i'
0000000000000e22         db  0x6e ; 'n'
0000000000000e23         db  0x74 ; 't'
0000000000000e24         db  0x65 ; 'e'
0000000000000e25         db  0x72 ; 'r'
0000000000000e26         db  0x6e ; 'n'
0000000000000e27         db  0x61 ; 'a'
0000000000000e28         db  0x6c ; 'l'
0000000000000e29         db  0x00 ; '.'
0000000000000e2a         db  0x66 ; 'f'
0000000000000e2b         db  0x70 ; 'p'
0000000000000e2c         db  0x75 ; 'u'
0000000000000e2d         db  0x74 ; 't'
0000000000000e2e         db  0x73 ; 's'
0000000000000e2f         db  0x5f ; '_'
0000000000000e30         db  0x75 ; 'u'
0000000000000e31         db  0x6e ; 'n'
0000000000000e32         db  0x6c ; 'l'
0000000000000e33         db  0x6f ; 'o'
0000000000000e34         db  0x63 ; 'c'
0000000000000e35         db  0x6b ; 'k'
0000000000000e36         db  0x65 ; 'e'
0000000000000e37         db  0x64 ; 'd'
0000000000000e38         db  0x00 ; '.'
0000000000000e39         db  0x66 ; 'f'
0000000000000e3a         db  0x72 ; 'r'
0000000000000e3b         db  0x65 ; 'e'
0000000000000e3c         db  0x65 ; 'e'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x5f ; '_'
0000000000000e3f         db  0x5f ; '_'
0000000000000e40         db  0x70 ; 'p'
0000000000000e41         db  0x72 ; 'r'
0000000000000e42         db  0x6f ; 'o'
0000000000000e43         db  0x67 ; 'g'
0000000000000e44         db  0x6e ; 'n'
0000000000000e45         db  0x61 ; 'a'
0000000000000e46         db  0x6d ; 'm'
0000000000000e47         db  0x65 ; 'e'
0000000000000e48         db  0x00 ; '.'
0000000000000e49         db  0x5f ; '_'
0000000000000e4a         db  0x5f ; '_'
0000000000000e4b         db  0x70 ; 'p'
0000000000000e4c         db  0x72 ; 'r'
0000000000000e4d         db  0x6f ; 'o'
0000000000000e4e         db  0x67 ; 'g'
0000000000000e4f         db  0x6e ; 'n'
0000000000000e50         db  0x61 ; 'a'
0000000000000e51         db  0x6d ; 'm'
0000000000000e52         db  0x65 ; 'e'
0000000000000e53         db  0x5f ; '_'
0000000000000e54         db  0x66 ; 'f'
0000000000000e55         db  0x75 ; 'u'
0000000000000e56         db  0x6c ; 'l'
0000000000000e57         db  0x6c ; 'l'
0000000000000e58         db  0x00 ; '.'
0000000000000e59         db  0x5f ; '_'
0000000000000e5a         db  0x5f ; '_'
0000000000000e5b         db  0x63 ; 'c'
0000000000000e5c         db  0x78 ; 'x'
0000000000000e5d         db  0x61 ; 'a'
0000000000000e5e         db  0x5f ; '_'
0000000000000e5f         db  0x61 ; 'a'
0000000000000e60         db  0x74 ; 't'
0000000000000e61         db  0x65 ; 'e'
0000000000000e62         db  0x78 ; 'x'
0000000000000e63         db  0x69 ; 'i'
0000000000000e64         db  0x74 ; 't'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x47 ; 'G'
0000000000000e67         db  0x4c ; 'L'
0000000000000e68         db  0x49 ; 'I'
0000000000000e69         db  0x42 ; 'B'
0000000000000e6a         db  0x43 ; 'C'
0000000000000e6b         db  0x5f ; '_'
0000000000000e6c         db  0x32 ; '2'
0000000000000e6d         db  0x2e ; '.'
0000000000000e6e         db  0x33 ; '3'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x47 ; 'G'
0000000000000e71         db  0x4c ; 'L'
0000000000000e72         db  0x49 ; 'I'
0000000000000e73         db  0x42 ; 'B'
0000000000000e74         db  0x43 ; 'C'
0000000000000e75         db  0x5f ; '_'
0000000000000e76         db  0x32 ; '2'
0000000000000e77         db  0x2e ; '.'
0000000000000e78         db  0x33 ; '3'
0000000000000e79         db  0x2e ; '.'
0000000000000e7a         db  0x34 ; '4'
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x47 ; 'G'
0000000000000e7d         db  0x4c ; 'L'
0000000000000e7e         db  0x49 ; 'I'
0000000000000e7f         db  0x42 ; 'B'
0000000000000e80         db  0x43 ; 'C'
0000000000000e81         db  0x5f ; '_'
0000000000000e82         db  0x32 ; '2'
0000000000000e83         db  0x2e ; '.'
0000000000000e84         db  0x31 ; '1'
0000000000000e85         db  0x34 ; '4'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x47 ; 'G'
0000000000000e88         db  0x4c ; 'L'
0000000000000e89         db  0x49 ; 'I'
0000000000000e8a         db  0x42 ; 'B'
0000000000000e8b         db  0x43 ; 'C'
0000000000000e8c         db  0x5f ; '_'
0000000000000e8d         db  0x32 ; '2'
0000000000000e8e         db  0x2e ; '.'
0000000000000e8f         db  0x34 ; '4'
0000000000000e90         db  0x00 ; '.'
0000000000000e91         db  0x47 ; 'G'
0000000000000e92         db  0x4c ; 'L'
0000000000000e93         db  0x49 ; 'I'
0000000000000e94         db  0x42 ; 'B'
0000000000000e95         db  0x43 ; 'C'
0000000000000e96         db  0x5f ; '_'
0000000000000e97         db  0x32 ; '2'
0000000000000e98         db  0x2e ; '.'
0000000000000e99         db  0x32 ; '2'
0000000000000e9a         db  0x2e ; '.'
0000000000000e9b         db  0x35 ; '5'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x5f ; '_'
0000000000000e9e         db  0x49 ; 'I'
0000000000000e9f         db  0x54 ; 'T'
0000000000000ea0         db  0x4d ; 'M'
0000000000000ea1         db  0x5f ; '_'
0000000000000ea2         db  0x64 ; 'd'
0000000000000ea3         db  0x65 ; 'e'
0000000000000ea4         db  0x72 ; 'r'
0000000000000ea5         db  0x65 ; 'e'
0000000000000ea6         db  0x67 ; 'g'
0000000000000ea7         db  0x69 ; 'i'
0000000000000ea8         db  0x73 ; 's'
0000000000000ea9         db  0x74 ; 't'
0000000000000eaa         db  0x65 ; 'e'
0000000000000eab         db  0x72 ; 'r'
0000000000000eac         db  0x54 ; 'T'
0000000000000ead         db  0x4d ; 'M'
0000000000000eae         db  0x43 ; 'C'
0000000000000eaf         db  0x6c ; 'l'
0000000000000eb0         db  0x6f ; 'o'
0000000000000eb1         db  0x6e ; 'n'
0000000000000eb2         db  0x65 ; 'e'
0000000000000eb3         db  0x54 ; 'T'
0000000000000eb4         db  0x61 ; 'a'
0000000000000eb5         db  0x62 ; 'b'
0000000000000eb6         db  0x6c ; 'l'
0000000000000eb7         db  0x65 ; 'e'
0000000000000eb8         db  0x00 ; '.'
0000000000000eb9         db  0x5f ; '_'
0000000000000eba         db  0x5f ; '_'
0000000000000ebb         db  0x67 ; 'g'
0000000000000ebc         db  0x6d ; 'm'
0000000000000ebd         db  0x6f ; 'o'
0000000000000ebe         db  0x6e ; 'n'
0000000000000ebf         db  0x5f ; '_'
0000000000000ec0         db  0x73 ; 's'
0000000000000ec1         db  0x74 ; 't'
0000000000000ec2         db  0x61 ; 'a'
0000000000000ec3         db  0x72 ; 'r'
0000000000000ec4         db  0x74 ; 't'
0000000000000ec5         db  0x5f ; '_'
0000000000000ec6         db  0x5f ; '_'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x5f ; '_'
0000000000000ec9         db  0x49 ; 'I'
0000000000000eca         db  0x54 ; 'T'
0000000000000ecb         db  0x4d ; 'M'
0000000000000ecc         db  0x5f ; '_'
0000000000000ecd         db  0x72 ; 'r'
0000000000000ece         db  0x65 ; 'e'
0000000000000ecf         db  0x67 ; 'g'
0000000000000ed0         db  0x69 ; 'i'
0000000000000ed1         db  0x73 ; 's'
0000000000000ed2         db  0x74 ; 't'
0000000000000ed3         db  0x65 ; 'e'
0000000000000ed4         db  0x72 ; 'r'
0000000000000ed5         db  0x54 ; 'T'
0000000000000ed6         db  0x4d ; 'M'
0000000000000ed7         db  0x43 ; 'C'
0000000000000ed8         db  0x6c ; 'l'
0000000000000ed9         db  0x6f ; 'o'
0000000000000eda         db  0x6e ; 'n'
0000000000000edb         db  0x65 ; 'e'
0000000000000edc         db  0x54 ; 'T'
0000000000000edd         db  0x61 ; 'a'
0000000000000ede         db  0x62 ; 'b'
0000000000000edf         db  0x6c ; 'l'
0000000000000ee0         db  0x65 ; 'e'
0000000000000ee1         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xee2; 0xf92[ (176 bytes)
        ; File offset : [3810; 3986[ (176 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x02 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x02 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x02 ; '.'
0000000000000ee9         db  0x00 ; '.'
0000000000000eea         db  0x02 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x02 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x02 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x00 ; '.'
0000000000000ef1         db  0x00 ; '.'
0000000000000ef2         db  0x02 ; '.'
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x02 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x02 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0x02 ; '.'
0000000000000ef9         db  0x00 ; '.'
0000000000000efa         db  0x02 ; '.'
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x02 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x02 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x02 ; '.'
0000000000000f01         db  0x00 ; '.'
0000000000000f02         db  0x02 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x02 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x02 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x02 ; '.'
0000000000000f09         db  0x00 ; '.'
0000000000000f0a         db  0x02 ; '.'
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x02 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x03 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x02 ; '.'
0000000000000f11         db  0x00 ; '.'
0000000000000f12         db  0x02 ; '.'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x02 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x02 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x02 ; '.'
0000000000000f19         db  0x00 ; '.'
0000000000000f1a         db  0x02 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x02 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x02 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x02 ; '.'
0000000000000f21         db  0x00 ; '.'
0000000000000f22         db  0x02 ; '.'
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x02 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x02 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x02 ; '.'
0000000000000f29         db  0x00 ; '.'
0000000000000f2a         db  0x02 ; '.'
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x02 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x02 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x02 ; '.'
0000000000000f31         db  0x00 ; '.'
0000000000000f32         db  0x02 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x02 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x02 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x02 ; '.'
0000000000000f39         db  0x00 ; '.'
0000000000000f3a         db  0x00 ; '.'
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x02 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x04 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x02 ; '.'
0000000000000f41         db  0x00 ; '.'
0000000000000f42         db  0x02 ; '.'
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x02 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x02 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x02 ; '.'
0000000000000f49         db  0x00 ; '.'
0000000000000f4a         db  0x02 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x02 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x02 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x02 ; '.'
0000000000000f51         db  0x00 ; '.'
0000000000000f52         db  0x02 ; '.'
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x05 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x02 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x02 ; '.'
0000000000000f59         db  0x00 ; '.'
0000000000000f5a         db  0x02 ; '.'
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x02 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x02 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x02 ; '.'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x02 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x02 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x02 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x02 ; '.'
0000000000000f69         db  0x00 ; '.'
0000000000000f6a         db  0x02 ; '.'
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x05 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x02 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x00 ; '.'
0000000000000f71         db  0x00 ; '.'
0000000000000f72         db  0x02 ; '.'
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x02 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x02 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x02 ; '.'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x02 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x02 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x06 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x05 ; '.'
0000000000000f81         db  0x00 ; '.'
0000000000000f82         db  0x02 ; '.'
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x02 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x02 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x02 ; '.'
0000000000000f89         db  0x00 ; '.'
0000000000000f8a         db  0x02 ; '.'
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x02 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x02 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x02 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xf98; 0xff8[ (96 bytes)
        ; File offset : [3992; 4088[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000f98         db  0x01 ; '.'
0000000000000f99         db  0x00 ; '.'
0000000000000f9a         db  0x05 ; '.'
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x01 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x10 ; '.'
0000000000000fa1         db  0x00 ; '.'
0000000000000fa2         db  0x00 ; '.'
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x00 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x13 ; '.'
0000000000000fa9         db  0x69 ; 'i'
0000000000000faa         db  0x69 ; 'i'
0000000000000fab         db  0x0d ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x06 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x46 ; 'F'
0000000000000fb1         db  0x03 ; '.'
0000000000000fb2         db  0x00 ; '.'
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x10 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x74 ; 't'
0000000000000fb9         db  0x19 ; '.'
0000000000000fba         db  0x69 ; 'i'
0000000000000fbb         db  0x09 ; '.'
0000000000000fbc         db  0x00 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x05 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x50 ; 'P'
0000000000000fc1         db  0x03 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x10 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x94 ; '.'
0000000000000fc9         db  0x91 ; '.'
0000000000000fca         db  0x96 ; '.'
0000000000000fcb         db  0x06 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x04 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x5c ; '\'
0000000000000fd1         db  0x03 ; '.'
0000000000000fd2         db  0x00 ; '.'
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x10 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x14 ; '.'
0000000000000fd9         db  0x69 ; 'i'
0000000000000fda         db  0x69 ; 'i'
0000000000000fdb         db  0x0d ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x03 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x67 ; 'g'
0000000000000fe1         db  0x03 ; '.'
0000000000000fe2         db  0x00 ; '.'
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x10 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x75 ; 'u'
0000000000000fe9         db  0x1a ; '.'
0000000000000fea         db  0x69 ; 'i'
0000000000000feb         db  0x09 ; '.'
0000000000000fec         db  0x00 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x02 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x71 ; 'q'
0000000000000ff1         db  0x03 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xff8; 0x1418[ (1056 bytes)
        ; File offset : [4088; 5144[ (1056 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000ff8         db  0xf0 ; '.'
0000000000000ff9         db  0xb8 ; '.'
0000000000000ffa         db  0x20 ; ' '
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0x08 ; '.'
0000000000001001         db  0x00 ; '.'
0000000000001002         db  0x00 ; '.'
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x00 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x10 ; '.'
0000000000001009         db  0x3e ; '>'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0xf8 ; '.'
0000000000001011         db  0xb8 ; '.'
0000000000001012         db  0x20 ; ' '
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x08 ; '.'
0000000000001019         db  0x00 ; '.'
000000000000101a         db  0x00 ; '.'
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x00 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0xd0 ; '.'
0000000000001021         db  0x3d ; '='
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x00 ; '.'
0000000000001029         db  0xb9 ; '.'
000000000000102a         db  0x20 ; ' '
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x08 ; '.'
0000000000001031         db  0x00 ; '.'
0000000000001032         db  0x00 ; '.'
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x00 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x09 ; '.'
0000000000001039         db  0x8d ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x20 ; ' '
0000000000001041         db  0xb9 ; '.'
0000000000001042         db  0x20 ; ' '
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x08 ; '.'
0000000000001049         db  0x00 ; '.'
000000000000104a         db  0x00 ; '.'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x00 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x21 ; '!'
0000000000001051         db  0x8d ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x40 ; '@'
0000000000001059         db  0xb9 ; '.'
000000000000105a         db  0x20 ; ' '
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x08 ; '.'
0000000000001061         db  0x00 ; '.'
0000000000001062         db  0x00 ; '.'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x00 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x47 ; 'G'
0000000000001069         db  0x8e ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x60 ; '`'
0000000000001071         db  0xb9 ; '.'
0000000000001072         db  0x20 ; ' '
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x08 ; '.'
0000000000001079         db  0x00 ; '.'
000000000000107a         db  0x00 ; '.'
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x54 ; 'T'
0000000000001081         db  0x8d ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x80 ; '.'
0000000000001089         db  0xb9 ; '.'
000000000000108a         db  0x20 ; ' '
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x08 ; '.'
0000000000001091         db  0x00 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x00 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x52 ; 'R'
0000000000001099         db  0x8e ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0xa0 ; '.'
00000000000010a1         db  0xb9 ; '.'
00000000000010a2         db  0x20 ; ' '
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x08 ; '.'
00000000000010a9         db  0x00 ; '.'
00000000000010aa         db  0x00 ; '.'
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x64 ; 'd'
00000000000010b1         db  0x8e ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0xc0 ; '.'
00000000000010b9         db  0xb9 ; '.'
00000000000010ba         db  0x20 ; ' '
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x08 ; '.'
00000000000010c1         db  0x00 ; '.'
00000000000010c2         db  0x00 ; '.'
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x00 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x6f ; 'o'
00000000000010c9         db  0x8e ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0xe0 ; '.'
00000000000010d1         db  0xb9 ; '.'
00000000000010d2         db  0x20 ; ' '
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x08 ; '.'
00000000000010d9         db  0x00 ; '.'
00000000000010da         db  0x00 ; '.'
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x7d ; '}'
00000000000010e1         db  0x8e ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x00 ; '.'
00000000000010e9         db  0xba ; '.'
00000000000010ea         db  0x20 ; ' '
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x08 ; '.'
00000000000010f1         db  0x00 ; '.'
00000000000010f2         db  0x00 ; '.'
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x00 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x8f ; '.'
00000000000010f9         db  0x8e ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x20 ; ' '
0000000000001101         db  0xba ; '.'
0000000000001102         db  0x20 ; ' '
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x08 ; '.'
0000000000001109         db  0x00 ; '.'
000000000000110a         db  0x00 ; '.'
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x00 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0xa0 ; '.'
0000000000001111         db  0x8e ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x40 ; '@'
0000000000001119         db  0xba ; '.'
000000000000111a         db  0x20 ; ' '
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x08 ; '.'
0000000000001121         db  0x00 ; '.'
0000000000001122         db  0x00 ; '.'
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x00 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0xad ; '.'
0000000000001129         db  0x8e ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x60 ; '`'
0000000000001131         db  0xba ; '.'
0000000000001132         db  0x20 ; ' '
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x08 ; '.'
0000000000001139         db  0x00 ; '.'
000000000000113a         db  0x00 ; '.'
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x00 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0xb4 ; '.'
0000000000001141         db  0x8e ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x80 ; '.'
0000000000001149         db  0xba ; '.'
000000000000114a         db  0x20 ; ' '
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x08 ; '.'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x00 ; '.'
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x00 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x68 ; 'h'
0000000000001159         db  0x8d ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0xa0 ; '.'
0000000000001161         db  0xba ; '.'
0000000000001162         db  0x20 ; ' '
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x08 ; '.'
0000000000001169         db  0x00 ; '.'
000000000000116a         db  0x00 ; '.'
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x00 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0xbc ; '.'
0000000000001171         db  0x8e ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0xc0 ; '.'
0000000000001179         db  0xba ; '.'
000000000000117a         db  0x20 ; ' '
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x08 ; '.'
0000000000001181         db  0x00 ; '.'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x00 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0xc8 ; '.'
0000000000001189         db  0x8e ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0xe0 ; '.'
0000000000001191         db  0xba ; '.'
0000000000001192         db  0x20 ; ' '
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x08 ; '.'
0000000000001199         db  0x00 ; '.'
000000000000119a         db  0x00 ; '.'
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x00 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0xcd ; '.'
00000000000011a1         db  0x8e ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x20 ; ' '
00000000000011a9         db  0xbb ; '.'
00000000000011aa         db  0x20 ; ' '
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x08 ; '.'
00000000000011b1         db  0x00 ; '.'
00000000000011b2         db  0x00 ; '.'
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x00 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x29 ; ')'
00000000000011b9         db  0x9c ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x28 ; '('
00000000000011c1         db  0xbb ; '.'
00000000000011c2         db  0x20 ; ' '
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x08 ; '.'
00000000000011c9         db  0x00 ; '.'
00000000000011ca         db  0x00 ; '.'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x00 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x31 ; '1'
00000000000011d1         db  0x9c ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x30 ; '0'
00000000000011d9         db  0xbb ; '.'
00000000000011da         db  0x20 ; ' '
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x08 ; '.'
00000000000011e1         db  0x00 ; '.'
00000000000011e2         db  0x00 ; '.'
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x00 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x37 ; '7'
00000000000011e9         db  0x9c ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x38 ; '8'
00000000000011f1         db  0xbb ; '.'
00000000000011f2         db  0x20 ; ' '
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x08 ; '.'
00000000000011f9         db  0x00 ; '.'
00000000000011fa         db  0x00 ; '.'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x00 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x44 ; 'D'
0000000000001201         db  0x9c ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x40 ; '@'
0000000000001209         db  0xbb ; '.'
000000000000120a         db  0x20 ; ' '
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x08 ; '.'
0000000000001211         db  0x00 ; '.'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x00 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x51 ; 'Q'
0000000000001219         db  0x9c ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x48 ; 'H'
0000000000001221         db  0xbb ; '.'
0000000000001222         db  0x20 ; ' '
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x08 ; '.'
0000000000001229         db  0x00 ; '.'
000000000000122a         db  0x00 ; '.'
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x00 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0xb1 ; '.'
0000000000001231         db  0x8b ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x50 ; 'P'
0000000000001239         db  0xbb ; '.'
000000000000123a         db  0x20 ; ' '
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x08 ; '.'
0000000000001241         db  0x00 ; '.'
0000000000001242         db  0x00 ; '.'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x00 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x65 ; 'e'
0000000000001249         db  0x9c ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x58 ; 'X'
0000000000001251         db  0xbb ; '.'
0000000000001252         db  0x20 ; ' '
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x08 ; '.'
0000000000001259         db  0x00 ; '.'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x00 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x4a ; 'J'
0000000000001261         db  0x9c ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x60 ; '`'
0000000000001269         db  0xbb ; '.'
000000000000126a         db  0x20 ; ' '
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x08 ; '.'
0000000000001271         db  0x00 ; '.'
0000000000001272         db  0x00 ; '.'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x00 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0xbf ; '.'
0000000000001279         db  0x8c ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x68 ; 'h'
0000000000001281         db  0xbb ; '.'
0000000000001282         db  0x20 ; ' '
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x08 ; '.'
0000000000001289         db  0x00 ; '.'
000000000000128a         db  0x00 ; '.'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x00 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x6d ; 'm'
0000000000001291         db  0x9c ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x08 ; '.'
0000000000001299         db  0xc0 ; '.'
000000000000129a         db  0x20 ; ' '
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x08 ; '.'
00000000000012a1         db  0x00 ; '.'
00000000000012a2         db  0x00 ; '.'
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x00 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x08 ; '.'
00000000000012a9         db  0xc0 ; '.'
00000000000012aa         db  0x20 ; ' '
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x20 ; ' '
00000000000012b1         db  0xc0 ; '.'
00000000000012b2         db  0x20 ; ' '
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x08 ; '.'
00000000000012b9         db  0x00 ; '.'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x00 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0xd5 ; '.'
00000000000012c1         db  0x8e ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x28 ; '('
00000000000012c9         db  0xc0 ; '.'
00000000000012ca         db  0x20 ; ' '
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x08 ; '.'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x00 ; '.'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x00 ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0xc5 ; '.'
00000000000012d9         db  0x9b ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x80 ; '.'
00000000000012e1         db  0xc0 ; '.'
00000000000012e2         db  0x20 ; ' '
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x08 ; '.'
00000000000012e9         db  0x00 ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x00 ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x90 ; '.'
00000000000012f1         db  0xc0 ; '.'
00000000000012f2         db  0x20 ; ' '
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x98 ; '.'
00000000000012f9         db  0xc0 ; '.'
00000000000012fa         db  0x20 ; ' '
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x08 ; '.'
0000000000001301         db  0x00 ; '.'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x00 ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x20 ; ' '
0000000000001309         db  0xc5 ; '.'
000000000000130a         db  0x20 ; ' '
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0xd0 ; '.'
0000000000001311         db  0xbf ; '.'
0000000000001312         db  0x20 ; ' '
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x06 ; '.'
0000000000001319         db  0x00 ; '.'
000000000000131a         db  0x00 ; '.'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x07 ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x00 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0xd8 ; '.'
0000000000001329         db  0xbf ; '.'
000000000000132a         db  0x20 ; ' '
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x06 ; '.'
0000000000001331         db  0x00 ; '.'
0000000000001332         db  0x00 ; '.'
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x26 ; '&'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x00 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0xe0 ; '.'
0000000000001341         db  0xbf ; '.'
0000000000001342         db  0x20 ; ' '
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x06 ; '.'
0000000000001349         db  0x00 ; '.'
000000000000134a         db  0x00 ; '.'
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x2c ; ','
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x00 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0xe8 ; '.'
0000000000001359         db  0xbf ; '.'
000000000000135a         db  0x20 ; ' '
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x06 ; '.'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x00 ; '.'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x47 ; 'G'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x00 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0xf0 ; '.'
0000000000001371         db  0xbf ; '.'
0000000000001372         db  0x20 ; ' '
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x06 ; '.'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x00 ; '.'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x4b ; 'K'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x00 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x60 ; '`'
0000000000001389         db  0xc2 ; '.'
000000000000138a         db  0x20 ; ' '
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x05 ; '.'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x51 ; 'Q'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x00 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x68 ; 'h'
00000000000013a1         db  0xc2 ; '.'
00000000000013a2         db  0x20 ; ' '
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x05 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x50 ; 'P'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x00 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x70 ; 'p'
00000000000013b9         db  0xc2 ; '.'
00000000000013ba         db  0x20 ; ' '
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x00 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x05 ; '.'
00000000000013c1         db  0x00 ; '.'
00000000000013c2         db  0x00 ; '.'
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x56 ; 'V'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x00 ; '.'
00000000000013c9         db  0x00 ; '.'
00000000000013ca         db  0x00 ; '.'
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x00 ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x78 ; 'x'
00000000000013d1         db  0xc2 ; '.'
00000000000013d2         db  0x20 ; ' '
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x00 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x05 ; '.'
00000000000013d9         db  0x00 ; '.'
00000000000013da         db  0x00 ; '.'
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x57 ; 'W'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x00 ; '.'
00000000000013e1         db  0x00 ; '.'
00000000000013e2         db  0x00 ; '.'
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x00 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x80 ; '.'
00000000000013e9         db  0xc2 ; '.'
00000000000013ea         db  0x20 ; ' '
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x00 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x05 ; '.'
00000000000013f1         db  0x00 ; '.'
00000000000013f2         db  0x00 ; '.'
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x53 ; 'S'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x00 ; '.'
00000000000013f9         db  0x00 ; '.'
00000000000013fa         db  0x00 ; '.'
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x00 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0xa0 ; '.'
0000000000001401         db  0xc2 ; '.'
0000000000001402         db  0x20 ; ' '
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x00 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x05 ; '.'
0000000000001409         db  0x00 ; '.'
000000000000140a         db  0x00 ; '.'
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x55 ; 'U'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x00 ; '.'
0000000000001411         db  0x00 ; '.'
0000000000001412         db  0x00 ; '.'
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x00 ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x1418; 0x1b08[ (1776 bytes)
        ; File offset : [5144; 6920[ (1776 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000001418         db  0x80 ; '.'
0000000000001419         db  0xbd ; '.'
000000000000141a         db  0x20 ; ' '
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x00 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x07 ; '.'
0000000000001421         db  0x00 ; '.'
0000000000001422         db  0x00 ; '.'
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x01 ; '.'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x00 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x00 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x00 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x88 ; '.'
0000000000001431         db  0xbd ; '.'
0000000000001432         db  0x20 ; ' '
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x00 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x07 ; '.'
0000000000001439         db  0x00 ; '.'
000000000000143a         db  0x00 ; '.'
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x02 ; '.'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x00 ; '.'
0000000000001441         db  0x00 ; '.'
0000000000001442         db  0x00 ; '.'
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x00 ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0x90 ; '.'
0000000000001449         db  0xbd ; '.'
000000000000144a         db  0x20 ; ' '
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x00 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x07 ; '.'
0000000000001451         db  0x00 ; '.'
0000000000001452         db  0x00 ; '.'
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x03 ; '.'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x00 ; '.'
0000000000001459         db  0x00 ; '.'
000000000000145a         db  0x00 ; '.'
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x00 ; '.'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0x98 ; '.'
0000000000001461         db  0xbd ; '.'
0000000000001462         db  0x20 ; ' '
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x00 ; '.'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x07 ; '.'
0000000000001469         db  0x00 ; '.'
000000000000146a         db  0x00 ; '.'
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x04 ; '.'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x00 ; '.'
0000000000001471         db  0x00 ; '.'
0000000000001472         db  0x00 ; '.'
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x00 ; '.'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0xa0 ; '.'
0000000000001479         db  0xbd ; '.'
000000000000147a         db  0x20 ; ' '
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x00 ; '.'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0x07 ; '.'
0000000000001481         db  0x00 ; '.'
0000000000001482         db  0x00 ; '.'
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x05 ; '.'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0x00 ; '.'
0000000000001489         db  0x00 ; '.'
000000000000148a         db  0x00 ; '.'
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x00 ; '.'
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0xa8 ; '.'
0000000000001491         db  0xbd ; '.'
0000000000001492         db  0x20 ; ' '
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x00 ; '.'
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0x07 ; '.'
0000000000001499         db  0x00 ; '.'
000000000000149a         db  0x00 ; '.'
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x06 ; '.'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0x00 ; '.'
00000000000014a1         db  0x00 ; '.'
00000000000014a2         db  0x00 ; '.'
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x00 ; '.'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0xb0 ; '.'
00000000000014a9         db  0xbd ; '.'
00000000000014aa         db  0x20 ; ' '
00000000000014ab         db  0x00 ; '.'
00000000000014ac         db  0x00 ; '.'
00000000000014ad         db  0x00 ; '.'
00000000000014ae         db  0x00 ; '.'
00000000000014af         db  0x00 ; '.'
00000000000014b0         db  0x07 ; '.'
00000000000014b1         db  0x00 ; '.'
00000000000014b2         db  0x00 ; '.'
00000000000014b3         db  0x00 ; '.'
00000000000014b4         db  0x08 ; '.'
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x00 ; '.'
00000000000014b7         db  0x00 ; '.'
00000000000014b8         db  0x00 ; '.'
00000000000014b9         db  0x00 ; '.'
00000000000014ba         db  0x00 ; '.'
00000000000014bb         db  0x00 ; '.'
00000000000014bc         db  0x00 ; '.'
00000000000014bd         db  0x00 ; '.'
00000000000014be         db  0x00 ; '.'
00000000000014bf         db  0x00 ; '.'
00000000000014c0         db  0xb8 ; '.'
00000000000014c1         db  0xbd ; '.'
00000000000014c2         db  0x20 ; ' '
00000000000014c3         db  0x00 ; '.'
00000000000014c4         db  0x00 ; '.'
00000000000014c5         db  0x00 ; '.'
00000000000014c6         db  0x00 ; '.'
00000000000014c7         db  0x00 ; '.'
00000000000014c8         db  0x07 ; '.'
00000000000014c9         db  0x00 ; '.'
00000000000014ca         db  0x00 ; '.'
00000000000014cb         db  0x00 ; '.'
00000000000014cc         db  0x09 ; '.'
00000000000014cd         db  0x00 ; '.'
00000000000014ce         db  0x00 ; '.'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0x00 ; '.'
00000000000014d1         db  0x00 ; '.'
00000000000014d2         db  0x00 ; '.'
00000000000014d3         db  0x00 ; '.'
00000000000014d4         db  0x00 ; '.'
00000000000014d5         db  0x00 ; '.'
00000000000014d6         db  0x00 ; '.'
00000000000014d7         db  0x00 ; '.'
00000000000014d8         db  0xc0 ; '.'
00000000000014d9         db  0xbd ; '.'
00000000000014da         db  0x20 ; ' '
00000000000014db         db  0x00 ; '.'
00000000000014dc         db  0x00 ; '.'
00000000000014dd         db  0x00 ; '.'
00000000000014de         db  0x00 ; '.'
00000000000014df         db  0x00 ; '.'
00000000000014e0         db  0x07 ; '.'
00000000000014e1         db  0x00 ; '.'
00000000000014e2         db  0x00 ; '.'
00000000000014e3         db  0x00 ; '.'
00000000000014e4         db  0x0a ; '.'
00000000000014e5         db  0x00 ; '.'
00000000000014e6         db  0x00 ; '.'
00000000000014e7         db  0x00 ; '.'
00000000000014e8         db  0x00 ; '.'
00000000000014e9         db  0x00 ; '.'
00000000000014ea         db  0x00 ; '.'
00000000000014eb         db  0x00 ; '.'
00000000000014ec         db  0x00 ; '.'
00000000000014ed         db  0x00 ; '.'
00000000000014ee         db  0x00 ; '.'
00000000000014ef         db  0x00 ; '.'
00000000000014f0         db  0xc8 ; '.'
00000000000014f1         db  0xbd ; '.'
00000000000014f2         db  0x20 ; ' '
00000000000014f3         db  0x00 ; '.'
00000000000014f4         db  0x00 ; '.'
00000000000014f5         db  0x00 ; '.'
00000000000014f6         db  0x00 ; '.'
00000000000014f7         db  0x00 ; '.'
00000000000014f8         db  0x07 ; '.'
00000000000014f9         db  0x00 ; '.'
00000000000014fa         db  0x00 ; '.'
00000000000014fb         db  0x00 ; '.'
00000000000014fc         db  0x0b ; '.'
00000000000014fd         db  0x00 ; '.'
00000000000014fe         db  0x00 ; '.'
00000000000014ff         db  0x00 ; '.'
0000000000001500         db  0x00 ; '.'
0000000000001501         db  0x00 ; '.'
0000000000001502         db  0x00 ; '.'
0000000000001503         db  0x00 ; '.'
0000000000001504         db  0x00 ; '.'
0000000000001505         db  0x00 ; '.'
0000000000001506         db  0x00 ; '.'
0000000000001507         db  0x00 ; '.'
0000000000001508         db  0xd0 ; '.'
0000000000001509         db  0xbd ; '.'
000000000000150a         db  0x20 ; ' '
000000000000150b         db  0x00 ; '.'
000000000000150c         db  0x00 ; '.'
000000000000150d         db  0x00 ; '.'
000000000000150e         db  0x00 ; '.'
000000000000150f         db  0x00 ; '.'
0000000000001510         db  0x07 ; '.'
0000000000001511         db  0x00 ; '.'
0000000000001512         db  0x00 ; '.'
0000000000001513         db  0x00 ; '.'
0000000000001514         db  0x0c ; '.'
0000000000001515         db  0x00 ; '.'
0000000000001516         db  0x00 ; '.'
0000000000001517         db  0x00 ; '.'
0000000000001518         db  0x00 ; '.'
0000000000001519         db  0x00 ; '.'
000000000000151a         db  0x00 ; '.'
000000000000151b         db  0x00 ; '.'
000000000000151c         db  0x00 ; '.'
000000000000151d         db  0x00 ; '.'
000000000000151e         db  0x00 ; '.'
000000000000151f         db  0x00 ; '.'
0000000000001520         db  0xd8 ; '.'
0000000000001521         db  0xbd ; '.'
0000000000001522         db  0x20 ; ' '
0000000000001523         db  0x00 ; '.'
0000000000001524         db  0x00 ; '.'
0000000000001525         db  0x00 ; '.'
0000000000001526         db  0x00 ; '.'
0000000000001527         db  0x00 ; '.'
0000000000001528         db  0x07 ; '.'
0000000000001529         db  0x00 ; '.'
000000000000152a         db  0x00 ; '.'
000000000000152b         db  0x00 ; '.'
000000000000152c         db  0x0d ; '.'
000000000000152d         db  0x00 ; '.'
000000000000152e         db  0x00 ; '.'
000000000000152f         db  0x00 ; '.'
0000000000001530         db  0x00 ; '.'
0000000000001531         db  0x00 ; '.'
0000000000001532         db  0x00 ; '.'
0000000000001533         db  0x00 ; '.'
0000000000001534         db  0x00 ; '.'
0000000000001535         db  0x00 ; '.'
0000000000001536         db  0x00 ; '.'
0000000000001537         db  0x00 ; '.'
0000000000001538         db  0xe0 ; '.'
0000000000001539         db  0xbd ; '.'
000000000000153a         db  0x20 ; ' '
000000000000153b         db  0x00 ; '.'
000000000000153c         db  0x00 ; '.'
000000000000153d         db  0x00 ; '.'
000000000000153e         db  0x00 ; '.'
000000000000153f         db  0x00 ; '.'
0000000000001540         db  0x07 ; '.'
0000000000001541         db  0x00 ; '.'
0000000000001542         db  0x00 ; '.'
0000000000001543         db  0x00 ; '.'
0000000000001544         db  0x0e ; '.'
0000000000001545         db  0x00 ; '.'
0000000000001546         db  0x00 ; '.'
0000000000001547         db  0x00 ; '.'
0000000000001548         db  0x00 ; '.'
0000000000001549         db  0x00 ; '.'
000000000000154a         db  0x00 ; '.'
000000000000154b         db  0x00 ; '.'
000000000000154c         db  0x00 ; '.'
000000000000154d         db  0x00 ; '.'
000000000000154e         db  0x00 ; '.'
000000000000154f         db  0x00 ; '.'
0000000000001550         db  0xe8 ; '.'
0000000000001551         db  0xbd ; '.'
0000000000001552         db  0x20 ; ' '
0000000000001553         db  0x00 ; '.'
0000000000001554         db  0x00 ; '.'
0000000000001555         db  0x00 ; '.'
0000000000001556         db  0x00 ; '.'
0000000000001557         db  0x00 ; '.'
0000000000001558         db  0x07 ; '.'
0000000000001559         db  0x00 ; '.'
000000000000155a         db  0x00 ; '.'
000000000000155b         db  0x00 ; '.'
000000000000155c         db  0x0f ; '.'
000000000000155d         db  0x00 ; '.'
000000000000155e         db  0x00 ; '.'
000000000000155f         db  0x00 ; '.'
0000000000001560         db  0x00 ; '.'
0000000000001561         db  0x00 ; '.'
0000000000001562         db  0x00 ; '.'
0000000000001563         db  0x00 ; '.'
0000000000001564         db  0x00 ; '.'
0000000000001565         db  0x00 ; '.'
0000000000001566         db  0x00 ; '.'
0000000000001567         db  0x00 ; '.'
0000000000001568         db  0xf0 ; '.'
0000000000001569         db  0xbd ; '.'
000000000000156a         db  0x20 ; ' '
000000000000156b         db  0x00 ; '.'
000000000000156c         db  0x00 ; '.'
000000000000156d         db  0x00 ; '.'
000000000000156e         db  0x00 ; '.'
000000000000156f         db  0x00 ; '.'
0000000000001570         db  0x07 ; '.'
0000000000001571         db  0x00 ; '.'
0000000000001572         db  0x00 ; '.'
0000000000001573         db  0x00 ; '.'
0000000000001574         db  0x10 ; '.'
0000000000001575         db  0x00 ; '.'
0000000000001576         db  0x00 ; '.'
0000000000001577         db  0x00 ; '.'
0000000000001578         db  0x00 ; '.'
0000000000001579         db  0x00 ; '.'
000000000000157a         db  0x00 ; '.'
000000000000157b         db  0x00 ; '.'
000000000000157c         db  0x00 ; '.'
000000000000157d         db  0x00 ; '.'
000000000000157e         db  0x00 ; '.'
000000000000157f         db  0x00 ; '.'
0000000000001580         db  0xf8 ; '.'
0000000000001581         db  0xbd ; '.'
0000000000001582         db  0x20 ; ' '
0000000000001583         db  0x00 ; '.'
0000000000001584         db  0x00 ; '.'
0000000000001585         db  0x00 ; '.'
0000000000001586         db  0x00 ; '.'
0000000000001587         db  0x00 ; '.'
0000000000001588         db  0x07 ; '.'
0000000000001589         db  0x00 ; '.'
000000000000158a         db  0x00 ; '.'
000000000000158b         db  0x00 ; '.'
000000000000158c         db  0x11 ; '.'
000000000000158d         db  0x00 ; '.'
000000000000158e         db  0x00 ; '.'
000000000000158f         db  0x00 ; '.'
0000000000001590         db  0x00 ; '.'
0000000000001591         db  0x00 ; '.'
0000000000001592         db  0x00 ; '.'
0000000000001593         db  0x00 ; '.'
0000000000001594         db  0x00 ; '.'
0000000000001595         db  0x00 ; '.'
0000000000001596         db  0x00 ; '.'
0000000000001597         db  0x00 ; '.'
0000000000001598         db  0x00 ; '.'
0000000000001599         db  0xbe ; '.'
000000000000159a         db  0x20 ; ' '
000000000000159b         db  0x00 ; '.'
000000000000159c         db  0x00 ; '.'
000000000000159d         db  0x00 ; '.'
000000000000159e         db  0x00 ; '.'
000000000000159f         db  0x00 ; '.'
00000000000015a0         db  0x07 ; '.'
00000000000015a1         db  0x00 ; '.'
00000000000015a2         db  0x00 ; '.'
00000000000015a3         db  0x00 ; '.'
00000000000015a4         db  0x12 ; '.'
00000000000015a5         db  0x00 ; '.'
00000000000015a6         db  0x00 ; '.'
00000000000015a7         db  0x00 ; '.'
00000000000015a8         db  0x00 ; '.'
00000000000015a9         db  0x00 ; '.'
00000000000015aa         db  0x00 ; '.'
00000000000015ab         db  0x00 ; '.'
00000000000015ac         db  0x00 ; '.'
00000000000015ad         db  0x00 ; '.'
00000000000015ae         db  0x00 ; '.'
00000000000015af         db  0x00 ; '.'
00000000000015b0         db  0x08 ; '.'
00000000000015b1         db  0xbe ; '.'
00000000000015b2         db  0x20 ; ' '
00000000000015b3         db  0x00 ; '.'
00000000000015b4         db  0x00 ; '.'
00000000000015b5         db  0x00 ; '.'
00000000000015b6         db  0x00 ; '.'
00000000000015b7         db  0x00 ; '.'
00000000000015b8         db  0x07 ; '.'
00000000000015b9         db  0x00 ; '.'
00000000000015ba         db  0x00 ; '.'
00000000000015bb         db  0x00 ; '.'
00000000000015bc         db  0x13 ; '.'
00000000000015bd         db  0x00 ; '.'
00000000000015be         db  0x00 ; '.'
00000000000015bf         db  0x00 ; '.'
00000000000015c0         db  0x00 ; '.'
00000000000015c1         db  0x00 ; '.'
00000000000015c2         db  0x00 ; '.'
00000000000015c3         db  0x00 ; '.'
00000000000015c4         db  0x00 ; '.'
00000000000015c5         db  0x00 ; '.'
00000000000015c6         db  0x00 ; '.'
00000000000015c7         db  0x00 ; '.'
00000000000015c8         db  0x10 ; '.'
00000000000015c9         db  0xbe ; '.'
00000000000015ca         db  0x20 ; ' '
00000000000015cb         db  0x00 ; '.'
00000000000015cc         db  0x00 ; '.'
00000000000015cd         db  0x00 ; '.'
00000000000015ce         db  0x00 ; '.'
00000000000015cf         db  0x00 ; '.'
00000000000015d0         db  0x07 ; '.'
00000000000015d1         db  0x00 ; '.'
00000000000015d2         db  0x00 ; '.'
00000000000015d3         db  0x00 ; '.'
00000000000015d4         db  0x14 ; '.'
00000000000015d5         db  0x00 ; '.'
00000000000015d6         db  0x00 ; '.'
00000000000015d7         db  0x00 ; '.'
00000000000015d8         db  0x00 ; '.'
00000000000015d9         db  0x00 ; '.'
00000000000015da         db  0x00 ; '.'
00000000000015db         db  0x00 ; '.'
00000000000015dc         db  0x00 ; '.'
00000000000015dd         db  0x00 ; '.'
00000000000015de         db  0x00 ; '.'
00000000000015df         db  0x00 ; '.'
00000000000015e0         db  0x18 ; '.'
00000000000015e1         db  0xbe ; '.'
00000000000015e2         db  0x20 ; ' '
00000000000015e3         db  0x00 ; '.'
00000000000015e4         db  0x00 ; '.'
00000000000015e5         db  0x00 ; '.'
00000000000015e6         db  0x00 ; '.'
00000000000015e7         db  0x00 ; '.'
00000000000015e8         db  0x07 ; '.'
00000000000015e9         db  0x00 ; '.'
00000000000015ea         db  0x00 ; '.'
00000000000015eb         db  0x00 ; '.'
00000000000015ec         db  0x15 ; '.'
00000000000015ed         db  0x00 ; '.'
00000000000015ee         db  0x00 ; '.'
00000000000015ef         db  0x00 ; '.'
00000000000015f0         db  0x00 ; '.'
00000000000015f1         db  0x00 ; '.'
00000000000015f2         db  0x00 ; '.'
00000000000015f3         db  0x00 ; '.'
00000000000015f4         db  0x00 ; '.'
00000000000015f5         db  0x00 ; '.'
00000000000015f6         db  0x00 ; '.'
00000000000015f7         db  0x00 ; '.'
00000000000015f8         db  0x20 ; ' '
00000000000015f9         db  0xbe ; '.'
00000000000015fa         db  0x20 ; ' '
00000000000015fb         db  0x00 ; '.'
00000000000015fc         db  0x00 ; '.'
00000000000015fd         db  0x00 ; '.'
00000000000015fe         db  0x00 ; '.'
00000000000015ff         db  0x00 ; '.'
0000000000001600         db  0x07 ; '.'
0000000000001601         db  0x00 ; '.'
0000000000001602         db  0x00 ; '.'
0000000000001603         db  0x00 ; '.'
0000000000001604         db  0x16 ; '.'
0000000000001605         db  0x00 ; '.'
0000000000001606         db  0x00 ; '.'
0000000000001607         db  0x00 ; '.'
0000000000001608         db  0x00 ; '.'
0000000000001609         db  0x00 ; '.'
000000000000160a         db  0x00 ; '.'
000000000000160b         db  0x00 ; '.'
000000000000160c         db  0x00 ; '.'
000000000000160d         db  0x00 ; '.'
000000000000160e         db  0x00 ; '.'
000000000000160f         db  0x00 ; '.'
0000000000001610         db  0x28 ; '('
0000000000001611         db  0xbe ; '.'
0000000000001612         db  0x20 ; ' '
0000000000001613         db  0x00 ; '.'
0000000000001614         db  0x00 ; '.'
0000000000001615         db  0x00 ; '.'
0000000000001616         db  0x00 ; '.'
0000000000001617         db  0x00 ; '.'
0000000000001618         db  0x07 ; '.'
0000000000001619         db  0x00 ; '.'
000000000000161a         db  0x00 ; '.'
000000000000161b         db  0x00 ; '.'
000000000000161c         db  0x17 ; '.'
000000000000161d         db  0x00 ; '.'
000000000000161e         db  0x00 ; '.'
000000000000161f         db  0x00 ; '.'
0000000000001620         db  0x00 ; '.'
0000000000001621         db  0x00 ; '.'
0000000000001622         db  0x00 ; '.'
0000000000001623         db  0x00 ; '.'
0000000000001624         db  0x00 ; '.'
0000000000001625         db  0x00 ; '.'
0000000000001626         db  0x00 ; '.'
0000000000001627         db  0x00 ; '.'
0000000000001628         db  0x30 ; '0'
0000000000001629         db  0xbe ; '.'
000000000000162a         db  0x20 ; ' '
000000000000162b         db  0x00 ; '.'
000000000000162c         db  0x00 ; '.'
000000000000162d         db  0x00 ; '.'
000000000000162e         db  0x00 ; '.'
000000000000162f         db  0x00 ; '.'
0000000000001630         db  0x07 ; '.'
0000000000001631         db  0x00 ; '.'
0000000000001632         db  0x00 ; '.'
0000000000001633         db  0x00 ; '.'
0000000000001634         db  0x18 ; '.'
0000000000001635         db  0x00 ; '.'
0000000000001636         db  0x00 ; '.'
0000000000001637         db  0x00 ; '.'
0000000000001638         db  0x00 ; '.'
0000000000001639         db  0x00 ; '.'
000000000000163a         db  0x00 ; '.'
000000000000163b         db  0x00 ; '.'
000000000000163c         db  0x00 ; '.'
000000000000163d         db  0x00 ; '.'
000000000000163e         db  0x00 ; '.'
000000000000163f         db  0x00 ; '.'
0000000000001640         db  0x38 ; '8'
0000000000001641         db  0xbe ; '.'
0000000000001642         db  0x20 ; ' '
0000000000001643         db  0x00 ; '.'
0000000000001644         db  0x00 ; '.'
0000000000001645         db  0x00 ; '.'
0000000000001646         db  0x00 ; '.'
0000000000001647         db  0x00 ; '.'
0000000000001648         db  0x07 ; '.'
0000000000001649         db  0x00 ; '.'
000000000000164a         db  0x00 ; '.'
000000000000164b         db  0x00 ; '.'
000000000000164c         db  0x19 ; '.'
000000000000164d         db  0x00 ; '.'
000000000000164e         db  0x00 ; '.'
000000000000164f         db  0x00 ; '.'
0000000000001650         db  0x00 ; '.'
0000000000001651         db  0x00 ; '.'
0000000000001652         db  0x00 ; '.'
0000000000001653         db  0x00 ; '.'
0000000000001654         db  0x00 ; '.'
0000000000001655         db  0x00 ; '.'
0000000000001656         db  0x00 ; '.'
0000000000001657         db  0x00 ; '.'
0000000000001658         db  0x40 ; '@'
0000000000001659         db  0xbe ; '.'
000000000000165a         db  0x20 ; ' '
000000000000165b         db  0x00 ; '.'
000000000000165c         db  0x00 ; '.'
000000000000165d         db  0x00 ; '.'
000000000000165e         db  0x00 ; '.'
000000000000165f         db  0x00 ; '.'
0000000000001660         db  0x07 ; '.'
0000000000001661         db  0x00 ; '.'
0000000000001662         db  0x00 ; '.'
0000000000001663         db  0x00 ; '.'
0000000000001664         db  0x1a ; '.'
0000000000001665         db  0x00 ; '.'
0000000000001666         db  0x00 ; '.'
0000000000001667         db  0x00 ; '.'
0000000000001668         db  0x00 ; '.'
0000000000001669         db  0x00 ; '.'
000000000000166a         db  0x00 ; '.'
000000000000166b         db  0x00 ; '.'
000000000000166c         db  0x00 ; '.'
000000000000166d         db  0x00 ; '.'
000000000000166e         db  0x00 ; '.'
000000000000166f         db  0x00 ; '.'
0000000000001670         db  0x48 ; 'H'
0000000000001671         db  0xbe ; '.'
0000000000001672         db  0x20 ; ' '
0000000000001673         db  0x00 ; '.'
0000000000001674         db  0x00 ; '.'
0000000000001675         db  0x00 ; '.'
0000000000001676         db  0x00 ; '.'
0000000000001677         db  0x00 ; '.'
0000000000001678         db  0x07 ; '.'
0000000000001679         db  0x00 ; '.'
000000000000167a         db  0x00 ; '.'
000000000000167b         db  0x00 ; '.'
000000000000167c         db  0x1b ; '.'
000000000000167d         db  0x00 ; '.'
000000000000167e         db  0x00 ; '.'
000000000000167f         db  0x00 ; '.'
0000000000001680         db  0x00 ; '.'
0000000000001681         db  0x00 ; '.'
0000000000001682         db  0x00 ; '.'
0000000000001683         db  0x00 ; '.'
0000000000001684         db  0x00 ; '.'
0000000000001685         db  0x00 ; '.'
0000000000001686         db  0x00 ; '.'
0000000000001687         db  0x00 ; '.'
0000000000001688         db  0x50 ; 'P'
0000000000001689         db  0xbe ; '.'
000000000000168a         db  0x20 ; ' '
000000000000168b         db  0x00 ; '.'
000000000000168c         db  0x00 ; '.'
000000000000168d         db  0x00 ; '.'
000000000000168e         db  0x00 ; '.'
000000000000168f         db  0x00 ; '.'
0000000000001690         db  0x07 ; '.'
0000000000001691         db  0x00 ; '.'
0000000000001692         db  0x00 ; '.'
0000000000001693         db  0x00 ; '.'
0000000000001694         db  0x1c ; '.'
0000000000001695         db  0x00 ; '.'
0000000000001696         db  0x00 ; '.'
0000000000001697         db  0x00 ; '.'
0000000000001698         db  0x00 ; '.'
0000000000001699         db  0x00 ; '.'
000000000000169a         db  0x00 ; '.'
000000000000169b         db  0x00 ; '.'
000000000000169c         db  0x00 ; '.'
000000000000169d         db  0x00 ; '.'
000000000000169e         db  0x00 ; '.'
000000000000169f         db  0x00 ; '.'
00000000000016a0         db  0x58 ; 'X'
00000000000016a1         db  0xbe ; '.'
00000000000016a2         db  0x20 ; ' '
00000000000016a3         db  0x00 ; '.'
00000000000016a4         db  0x00 ; '.'
00000000000016a5         db  0x00 ; '.'
00000000000016a6         db  0x00 ; '.'
00000000000016a7         db  0x00 ; '.'
00000000000016a8         db  0x07 ; '.'
00000000000016a9         db  0x00 ; '.'
00000000000016aa         db  0x00 ; '.'
00000000000016ab         db  0x00 ; '.'
00000000000016ac         db  0x1d ; '.'
00000000000016ad         db  0x00 ; '.'
00000000000016ae         db  0x00 ; '.'
00000000000016af         db  0x00 ; '.'
00000000000016b0         db  0x00 ; '.'
00000000000016b1         db  0x00 ; '.'
00000000000016b2         db  0x00 ; '.'
00000000000016b3         db  0x00 ; '.'
00000000000016b4         db  0x00 ; '.'
00000000000016b5         db  0x00 ; '.'
00000000000016b6         db  0x00 ; '.'
00000000000016b7         db  0x00 ; '.'
00000000000016b8         db  0x60 ; '`'
00000000000016b9         db  0xbe ; '.'
00000000000016ba         db  0x20 ; ' '
00000000000016bb         db  0x00 ; '.'
00000000000016bc         db  0x00 ; '.'
00000000000016bd         db  0x00 ; '.'
00000000000016be         db  0x00 ; '.'
00000000000016bf         db  0x00 ; '.'
00000000000016c0         db  0x07 ; '.'
00000000000016c1         db  0x00 ; '.'
00000000000016c2         db  0x00 ; '.'
00000000000016c3         db  0x00 ; '.'
00000000000016c4         db  0x1e ; '.'
00000000000016c5         db  0x00 ; '.'
00000000000016c6         db  0x00 ; '.'
00000000000016c7         db  0x00 ; '.'
00000000000016c8         db  0x00 ; '.'
00000000000016c9         db  0x00 ; '.'
00000000000016ca         db  0x00 ; '.'
00000000000016cb         db  0x00 ; '.'
00000000000016cc         db  0x00 ; '.'
00000000000016cd         db  0x00 ; '.'
00000000000016ce         db  0x00 ; '.'
00000000000016cf         db  0x00 ; '.'
00000000000016d0         db  0x68 ; 'h'
00000000000016d1         db  0xbe ; '.'
00000000000016d2         db  0x20 ; ' '
00000000000016d3         db  0x00 ; '.'
00000000000016d4         db  0x00 ; '.'
00000000000016d5         db  0x00 ; '.'
00000000000016d6         db  0x00 ; '.'
00000000000016d7         db  0x00 ; '.'
00000000000016d8         db  0x07 ; '.'
00000000000016d9         db  0x00 ; '.'
00000000000016da         db  0x00 ; '.'
00000000000016db         db  0x00 ; '.'
00000000000016dc         db  0x1f ; '.'
00000000000016dd         db  0x00 ; '.'
00000000000016de         db  0x00 ; '.'
00000000000016df         db  0x00 ; '.'
00000000000016e0         db  0x00 ; '.'
00000000000016e1         db  0x00 ; '.'
00000000000016e2         db  0x00 ; '.'
00000000000016e3         db  0x00 ; '.'
00000000000016e4         db  0x00 ; '.'
00000000000016e5         db  0x00 ; '.'
00000000000016e6         db  0x00 ; '.'
00000000000016e7         db  0x00 ; '.'
00000000000016e8         db  0x70 ; 'p'
00000000000016e9         db  0xbe ; '.'
00000000000016ea         db  0x20 ; ' '
00000000000016eb         db  0x00 ; '.'
00000000000016ec         db  0x00 ; '.'
00000000000016ed         db  0x00 ; '.'
00000000000016ee         db  0x00 ; '.'
00000000000016ef         db  0x00 ; '.'
00000000000016f0         db  0x07 ; '.'
00000000000016f1         db  0x00 ; '.'
00000000000016f2         db  0x00 ; '.'
00000000000016f3         db  0x00 ; '.'
00000000000016f4         db  0x20 ; ' '
00000000000016f5         db  0x00 ; '.'
00000000000016f6         db  0x00 ; '.'
00000000000016f7         db  0x00 ; '.'
00000000000016f8         db  0x00 ; '.'
00000000000016f9         db  0x00 ; '.'
00000000000016fa         db  0x00 ; '.'
00000000000016fb         db  0x00 ; '.'
00000000000016fc         db  0x00 ; '.'
00000000000016fd         db  0x00 ; '.'
00000000000016fe         db  0x00 ; '.'
00000000000016ff         db  0x00 ; '.'
0000000000001700         db  0x78 ; 'x'
0000000000001701         db  0xbe ; '.'
0000000000001702         db  0x20 ; ' '
0000000000001703         db  0x00 ; '.'
0000000000001704         db  0x00 ; '.'
0000000000001705         db  0x00 ; '.'
0000000000001706         db  0x00 ; '.'
0000000000001707         db  0x00 ; '.'
0000000000001708         db  0x07 ; '.'
0000000000001709         db  0x00 ; '.'
000000000000170a         db  0x00 ; '.'
000000000000170b         db  0x00 ; '.'
000000000000170c         db  0x21 ; '!'
000000000000170d         db  0x00 ; '.'
000000000000170e         db  0x00 ; '.'
000000000000170f         db  0x00 ; '.'
0000000000001710         db  0x00 ; '.'
0000000000001711         db  0x00 ; '.'
0000000000001712         db  0x00 ; '.'
0000000000001713         db  0x00 ; '.'
0000000000001714         db  0x00 ; '.'
0000000000001715         db  0x00 ; '.'
0000000000001716         db  0x00 ; '.'
0000000000001717         db  0x00 ; '.'
0000000000001718         db  0x80 ; '.'
0000000000001719         db  0xbe ; '.'
000000000000171a         db  0x20 ; ' '
000000000000171b         db  0x00 ; '.'
000000000000171c         db  0x00 ; '.'
000000000000171d         db  0x00 ; '.'
000000000000171e         db  0x00 ; '.'
000000000000171f         db  0x00 ; '.'
0000000000001720         db  0x07 ; '.'
0000000000001721         db  0x00 ; '.'
0000000000001722         db  0x00 ; '.'
0000000000001723         db  0x00 ; '.'
0000000000001724         db  0x22 ; '"'
0000000000001725         db  0x00 ; '.'
0000000000001726         db  0x00 ; '.'
0000000000001727         db  0x00 ; '.'
0000000000001728         db  0x00 ; '.'
0000000000001729         db  0x00 ; '.'
000000000000172a         db  0x00 ; '.'
000000000000172b         db  0x00 ; '.'
000000000000172c         db  0x00 ; '.'
000000000000172d         db  0x00 ; '.'
000000000000172e         db  0x00 ; '.'
000000000000172f         db  0x00 ; '.'
0000000000001730         db  0x88 ; '.'
0000000000001731         db  0xbe ; '.'
0000000000001732         db  0x20 ; ' '
0000000000001733         db  0x00 ; '.'
0000000000001734         db  0x00 ; '.'
0000000000001735         db  0x00 ; '.'
0000000000001736         db  0x00 ; '.'
0000000000001737         db  0x00 ; '.'
0000000000001738         db  0x07 ; '.'
0000000000001739         db  0x00 ; '.'
000000000000173a         db  0x00 ; '.'
000000000000173b         db  0x00 ; '.'
000000000000173c         db  0x23 ; '#'
000000000000173d         db  0x00 ; '.'
000000000000173e         db  0x00 ; '.'
000000000000173f         db  0x00 ; '.'
0000000000001740         db  0x00 ; '.'
0000000000001741         db  0x00 ; '.'
0000000000001742         db  0x00 ; '.'
0000000000001743         db  0x00 ; '.'
0000000000001744         db  0x00 ; '.'
0000000000001745         db  0x00 ; '.'
0000000000001746         db  0x00 ; '.'
0000000000001747         db  0x00 ; '.'
0000000000001748         db  0x90 ; '.'
0000000000001749         db  0xbe ; '.'
000000000000174a         db  0x20 ; ' '
000000000000174b         db  0x00 ; '.'
000000000000174c         db  0x00 ; '.'
000000000000174d         db  0x00 ; '.'
000000000000174e         db  0x00 ; '.'
000000000000174f         db  0x00 ; '.'
0000000000001750         db  0x07 ; '.'
0000000000001751         db  0x00 ; '.'
0000000000001752         db  0x00 ; '.'
0000000000001753         db  0x00 ; '.'
0000000000001754         db  0x24 ; '$'
0000000000001755         db  0x00 ; '.'
0000000000001756         db  0x00 ; '.'
0000000000001757         db  0x00 ; '.'
0000000000001758         db  0x00 ; '.'
0000000000001759         db  0x00 ; '.'
000000000000175a         db  0x00 ; '.'
000000000000175b         db  0x00 ; '.'
000000000000175c         db  0x00 ; '.'
000000000000175d         db  0x00 ; '.'
000000000000175e         db  0x00 ; '.'
000000000000175f         db  0x00 ; '.'
0000000000001760         db  0x98 ; '.'
0000000000001761         db  0xbe ; '.'
0000000000001762         db  0x20 ; ' '
0000000000001763         db  0x00 ; '.'
0000000000001764         db  0x00 ; '.'
0000000000001765         db  0x00 ; '.'
0000000000001766         db  0x00 ; '.'
0000000000001767         db  0x00 ; '.'
0000000000001768         db  0x07 ; '.'
0000000000001769         db  0x00 ; '.'
000000000000176a         db  0x00 ; '.'
000000000000176b         db  0x00 ; '.'
000000000000176c         db  0x25 ; '%'
000000000000176d         db  0x00 ; '.'
000000000000176e         db  0x00 ; '.'
000000000000176f         db  0x00 ; '.'
0000000000001770         db  0x00 ; '.'
0000000000001771         db  0x00 ; '.'
0000000000001772         db  0x00 ; '.'
0000000000001773         db  0x00 ; '.'
0000000000001774         db  0x00 ; '.'
0000000000001775         db  0x00 ; '.'
0000000000001776         db  0x00 ; '.'
0000000000001777         db  0x00 ; '.'
0000000000001778         db  0xa0 ; '.'
0000000000001779         db  0xbe ; '.'
000000000000177a         db  0x20 ; ' '
000000000000177b         db  0x00 ; '.'
000000000000177c         db  0x00 ; '.'
000000000000177d         db  0x00 ; '.'
000000000000177e         db  0x00 ; '.'
000000000000177f         db  0x00 ; '.'
0000000000001780         db  0x07 ; '.'
0000000000001781         db  0x00 ; '.'
0000000000001782         db  0x00 ; '.'
0000000000001783         db  0x00 ; '.'
0000000000001784         db  0x27 ; '''
0000000000001785         db  0x00 ; '.'
0000000000001786         db  0x00 ; '.'
0000000000001787         db  0x00 ; '.'
0000000000001788         db  0x00 ; '.'
0000000000001789         db  0x00 ; '.'
000000000000178a         db  0x00 ; '.'
000000000000178b         db  0x00 ; '.'
000000000000178c         db  0x00 ; '.'
000000000000178d         db  0x00 ; '.'
000000000000178e         db  0x00 ; '.'
000000000000178f         db  0x00 ; '.'
0000000000001790         db  0xa8 ; '.'
0000000000001791         db  0xbe ; '.'
0000000000001792         db  0x20 ; ' '
0000000000001793         db  0x00 ; '.'
0000000000001794         db  0x00 ; '.'
0000000000001795         db  0x00 ; '.'
0000000000001796         db  0x00 ; '.'
0000000000001797         db  0x00 ; '.'
0000000000001798         db  0x07 ; '.'
0000000000001799         db  0x00 ; '.'
000000000000179a         db  0x00 ; '.'
000000000000179b         db  0x00 ; '.'
000000000000179c         db  0x28 ; '('
000000000000179d         db  0x00 ; '.'
000000000000179e         db  0x00 ; '.'
000000000000179f         db  0x00 ; '.'
00000000000017a0         db  0x00 ; '.'
00000000000017a1         db  0x00 ; '.'
00000000000017a2         db  0x00 ; '.'
00000000000017a3         db  0x00 ; '.'
00000000000017a4         db  0x00 ; '.'
00000000000017a5         db  0x00 ; '.'
00000000000017a6         db  0x00 ; '.'
00000000000017a7         db  0x00 ; '.'
00000000000017a8         db  0xb0 ; '.'
00000000000017a9         db  0xbe ; '.'
00000000000017aa         db  0x20 ; ' '
00000000000017ab         db  0x00 ; '.'
00000000000017ac         db  0x00 ; '.'
00000000000017ad         db  0x00 ; '.'
00000000000017ae         db  0x00 ; '.'
00000000000017af         db  0x00 ; '.'
00000000000017b0         db  0x07 ; '.'
00000000000017b1         db  0x00 ; '.'
00000000000017b2         db  0x00 ; '.'
00000000000017b3         db  0x00 ; '.'
00000000000017b4         db  0x29 ; ')'
00000000000017b5         db  0x00 ; '.'
00000000000017b6         db  0x00 ; '.'
00000000000017b7         db  0x00 ; '.'
00000000000017b8         db  0x00 ; '.'
00000000000017b9         db  0x00 ; '.'
00000000000017ba         db  0x00 ; '.'
00000000000017bb         db  0x00 ; '.'
00000000000017bc         db  0x00 ; '.'
00000000000017bd         db  0x00 ; '.'
00000000000017be         db  0x00 ; '.'
00000000000017bf         db  0x00 ; '.'
00000000000017c0         db  0xb8 ; '.'
00000000000017c1         db  0xbe ; '.'
00000000000017c2         db  0x20 ; ' '
00000000000017c3         db  0x00 ; '.'
00000000000017c4         db  0x00 ; '.'
00000000000017c5         db  0x00 ; '.'
00000000000017c6         db  0x00 ; '.'
00000000000017c7         db  0x00 ; '.'
00000000000017c8         db  0x07 ; '.'
00000000000017c9         db  0x00 ; '.'
00000000000017ca         db  0x00 ; '.'
00000000000017cb         db  0x00 ; '.'
00000000000017cc         db  0x2a ; '*'
00000000000017cd         db  0x00 ; '.'
00000000000017ce         db  0x00 ; '.'
00000000000017cf         db  0x00 ; '.'
00000000000017d0         db  0x00 ; '.'
00000000000017d1         db  0x00 ; '.'
00000000000017d2         db  0x00 ; '.'
00000000000017d3         db  0x00 ; '.'
00000000000017d4         db  0x00 ; '.'
00000000000017d5         db  0x00 ; '.'
00000000000017d6         db  0x00 ; '.'
00000000000017d7         db  0x00 ; '.'
00000000000017d8         db  0xc0 ; '.'
00000000000017d9         db  0xbe ; '.'
00000000000017da         db  0x20 ; ' '
00000000000017db         db  0x00 ; '.'
00000000000017dc         db  0x00 ; '.'
00000000000017dd         db  0x00 ; '.'
00000000000017de         db  0x00 ; '.'
00000000000017df         db  0x00 ; '.'
00000000000017e0         db  0x07 ; '.'
00000000000017e1         db  0x00 ; '.'
00000000000017e2         db  0x00 ; '.'
00000000000017e3         db  0x00 ; '.'
00000000000017e4         db  0x2b ; '+'
00000000000017e5         db  0x00 ; '.'
00000000000017e6         db  0x00 ; '.'
00000000000017e7         db  0x00 ; '.'
00000000000017e8         db  0x00 ; '.'
00000000000017e9         db  0x00 ; '.'
00000000000017ea         db  0x00 ; '.'
00000000000017eb         db  0x00 ; '.'
00000000000017ec         db  0x00 ; '.'
00000000000017ed         db  0x00 ; '.'
00000000000017ee         db  0x00 ; '.'
00000000000017ef         db  0x00 ; '.'
00000000000017f0         db  0xc8 ; '.'
00000000000017f1         db  0xbe ; '.'
00000000000017f2         db  0x20 ; ' '
00000000000017f3         db  0x00 ; '.'
00000000000017f4         db  0x00 ; '.'
00000000000017f5         db  0x00 ; '.'
00000000000017f6         db  0x00 ; '.'
00000000000017f7         db  0x00 ; '.'
00000000000017f8         db  0x07 ; '.'
00000000000017f9         db  0x00 ; '.'
00000000000017fa         db  0x00 ; '.'
00000000000017fb         db  0x00 ; '.'
00000000000017fc         db  0x2d ; '-'
00000000000017fd         db  0x00 ; '.'
00000000000017fe         db  0x00 ; '.'
00000000000017ff         db  0x00 ; '.'
0000000000001800         db  0x00 ; '.'
0000000000001801         db  0x00 ; '.'
0000000000001802         db  0x00 ; '.'
0000000000001803         db  0x00 ; '.'
0000000000001804         db  0x00 ; '.'
0000000000001805         db  0x00 ; '.'
0000000000001806         db  0x00 ; '.'
0000000000001807         db  0x00 ; '.'
0000000000001808         db  0xd0 ; '.'
0000000000001809         db  0xbe ; '.'
000000000000180a         db  0x20 ; ' '
000000000000180b         db  0x00 ; '.'
000000000000180c         db  0x00 ; '.'
000000000000180d         db  0x00 ; '.'
000000000000180e         db  0x00 ; '.'
000000000000180f         db  0x00 ; '.'
0000000000001810         db  0x07 ; '.'
0000000000001811         db  0x00 ; '.'
0000000000001812         db  0x00 ; '.'
0000000000001813         db  0x00 ; '.'
0000000000001814         db  0x2e ; '.'
0000000000001815         db  0x00 ; '.'
0000000000001816         db  0x00 ; '.'
0000000000001817         db  0x00 ; '.'
0000000000001818         db  0x00 ; '.'
0000000000001819         db  0x00 ; '.'
000000000000181a         db  0x00 ; '.'
000000000000181b         db  0x00 ; '.'
000000000000181c         db  0x00 ; '.'
000000000000181d         db  0x00 ; '.'
000000000000181e         db  0x00 ; '.'
000000000000181f         db  0x00 ; '.'
0000000000001820         db  0xd8 ; '.'
0000000000001821         db  0xbe ; '.'
0000000000001822         db  0x20 ; ' '
0000000000001823         db  0x00 ; '.'
0000000000001824         db  0x00 ; '.'
0000000000001825         db  0x00 ; '.'
0000000000001826         db  0x00 ; '.'
0000000000001827         db  0x00 ; '.'
0000000000001828         db  0x07 ; '.'
0000000000001829         db  0x00 ; '.'
000000000000182a         db  0x00 ; '.'
000000000000182b         db  0x00 ; '.'
000000000000182c         db  0x2f ; '/'
000000000000182d         db  0x00 ; '.'
000000000000182e         db  0x00 ; '.'
000000000000182f         db  0x00 ; '.'
0000000000001830         db  0x00 ; '.'
0000000000001831         db  0x00 ; '.'
0000000000001832         db  0x00 ; '.'
0000000000001833         db  0x00 ; '.'
0000000000001834         db  0x00 ; '.'
0000000000001835         db  0x00 ; '.'
0000000000001836         db  0x00 ; '.'
0000000000001837         db  0x00 ; '.'
0000000000001838         db  0xe0 ; '.'
0000000000001839         db  0xbe ; '.'
000000000000183a         db  0x20 ; ' '
000000000000183b         db  0x00 ; '.'
000000000000183c         db  0x00 ; '.'
000000000000183d         db  0x00 ; '.'
000000000000183e         db  0x00 ; '.'
000000000000183f         db  0x00 ; '.'
0000000000001840         db  0x07 ; '.'
0000000000001841         db  0x00 ; '.'
0000000000001842         db  0x00 ; '.'
0000000000001843         db  0x00 ; '.'
0000000000001844         db  0x30 ; '0'
0000000000001845         db  0x00 ; '.'
0000000000001846         db  0x00 ; '.'
0000000000001847         db  0x00 ; '.'
0000000000001848         db  0x00 ; '.'
0000000000001849         db  0x00 ; '.'
000000000000184a         db  0x00 ; '.'
000000000000184b         db  0x00 ; '.'
000000000000184c         db  0x00 ; '.'
000000000000184d         db  0x00 ; '.'
000000000000184e         db  0x00 ; '.'
000000000000184f         db  0x00 ; '.'
0000000000001850         db  0xe8 ; '.'
0000000000001851         db  0xbe ; '.'
0000000000001852         db  0x20 ; ' '
0000000000001853         db  0x00 ; '.'
0000000000001854         db  0x00 ; '.'
0000000000001855         db  0x00 ; '.'
0000000000001856         db  0x00 ; '.'
0000000000001857         db  0x00 ; '.'
0000000000001858         db  0x07 ; '.'
0000000000001859         db  0x00 ; '.'
000000000000185a         db  0x00 ; '.'
000000000000185b         db  0x00 ; '.'
000000000000185c         db  0x31 ; '1'
000000000000185d         db  0x00 ; '.'
000000000000185e         db  0x00 ; '.'
000000000000185f         db  0x00 ; '.'
0000000000001860         db  0x00 ; '.'
0000000000001861         db  0x00 ; '.'
0000000000001862         db  0x00 ; '.'
0000000000001863         db  0x00 ; '.'
0000000000001864         db  0x00 ; '.'
0000000000001865         db  0x00 ; '.'
0000000000001866         db  0x00 ; '.'
0000000000001867         db  0x00 ; '.'
0000000000001868         db  0xf0 ; '.'
0000000000001869         db  0xbe ; '.'
000000000000186a         db  0x20 ; ' '
000000000000186b         db  0x00 ; '.'
000000000000186c         db  0x00 ; '.'
000000000000186d         db  0x00 ; '.'
000000000000186e         db  0x00 ; '.'
000000000000186f         db  0x00 ; '.'
0000000000001870         db  0x07 ; '.'
0000000000001871         db  0x00 ; '.'
0000000000001872         db  0x00 ; '.'
0000000000001873         db  0x00 ; '.'
0000000000001874         db  0x32 ; '2'
0000000000001875         db  0x00 ; '.'
0000000000001876         db  0x00 ; '.'
0000000000001877         db  0x00 ; '.'
0000000000001878         db  0x00 ; '.'
0000000000001879         db  0x00 ; '.'
000000000000187a         db  0x00 ; '.'
000000000000187b         db  0x00 ; '.'
000000000000187c         db  0x00 ; '.'
000000000000187d         db  0x00 ; '.'
000000000000187e         db  0x00 ; '.'
000000000000187f         db  0x00 ; '.'
0000000000001880         db  0xf8 ; '.'
0000000000001881         db  0xbe ; '.'
0000000000001882         db  0x20 ; ' '
0000000000001883         db  0x00 ; '.'
0000000000001884         db  0x00 ; '.'
0000000000001885         db  0x00 ; '.'
0000000000001886         db  0x00 ; '.'
0000000000001887         db  0x00 ; '.'
0000000000001888         db  0x07 ; '.'
0000000000001889         db  0x00 ; '.'
000000000000188a         db  0x00 ; '.'
000000000000188b         db  0x00 ; '.'
000000000000188c         db  0x33 ; '3'
000000000000188d         db  0x00 ; '.'
000000000000188e         db  0x00 ; '.'
000000000000188f         db  0x00 ; '.'
0000000000001890         db  0x00 ; '.'
0000000000001891         db  0x00 ; '.'
0000000000001892         db  0x00 ; '.'
0000000000001893         db  0x00 ; '.'
0000000000001894         db  0x00 ; '.'
0000000000001895         db  0x00 ; '.'
0000000000001896         db  0x00 ; '.'
0000000000001897         db  0x00 ; '.'
0000000000001898         db  0x00 ; '.'
0000000000001899         db  0xbf ; '.'
000000000000189a         db  0x20 ; ' '
000000000000189b         db  0x00 ; '.'
000000000000189c         db  0x00 ; '.'
000000000000189d         db  0x00 ; '.'
000000000000189e         db  0x00 ; '.'
000000000000189f         db  0x00 ; '.'
00000000000018a0         db  0x07 ; '.'
00000000000018a1         db  0x00 ; '.'
00000000000018a2         db  0x00 ; '.'
00000000000018a3         db  0x00 ; '.'
00000000000018a4         db  0x34 ; '4'
00000000000018a5         db  0x00 ; '.'
00000000000018a6         db  0x00 ; '.'
00000000000018a7         db  0x00 ; '.'
00000000000018a8         db  0x00 ; '.'
00000000000018a9         db  0x00 ; '.'
00000000000018aa         db  0x00 ; '.'
00000000000018ab         db  0x00 ; '.'
00000000000018ac         db  0x00 ; '.'
00000000000018ad         db  0x00 ; '.'
00000000000018ae         db  0x00 ; '.'
00000000000018af         db  0x00 ; '.'
00000000000018b0         db  0x08 ; '.'
00000000000018b1         db  0xbf ; '.'
00000000000018b2         db  0x20 ; ' '
00000000000018b3         db  0x00 ; '.'
00000000000018b4         db  0x00 ; '.'
00000000000018b5         db  0x00 ; '.'
00000000000018b6         db  0x00 ; '.'
00000000000018b7         db  0x00 ; '.'
00000000000018b8         db  0x07 ; '.'
00000000000018b9         db  0x00 ; '.'
00000000000018ba         db  0x00 ; '.'
00000000000018bb         db  0x00 ; '.'
00000000000018bc         db  0x35 ; '5'
00000000000018bd         db  0x00 ; '.'
00000000000018be         db  0x00 ; '.'
00000000000018bf         db  0x00 ; '.'
00000000000018c0         db  0x00 ; '.'
00000000000018c1         db  0x00 ; '.'
00000000000018c2         db  0x00 ; '.'
00000000000018c3         db  0x00 ; '.'
00000000000018c4         db  0x00 ; '.'
00000000000018c5         db  0x00 ; '.'
00000000000018c6         db  0x00 ; '.'
00000000000018c7         db  0x00 ; '.'
00000000000018c8         db  0x10 ; '.'
00000000000018c9         db  0xbf ; '.'
00000000000018ca         db  0x20 ; ' '
00000000000018cb         db  0x00 ; '.'
00000000000018cc         db  0x00 ; '.'
00000000000018cd         db  0x00 ; '.'
00000000000018ce         db  0x00 ; '.'
00000000000018cf         db  0x00 ; '.'
00000000000018d0         db  0x07 ; '.'
00000000000018d1         db  0x00 ; '.'
00000000000018d2         db  0x00 ; '.'
00000000000018d3         db  0x00 ; '.'
00000000000018d4         db  0x36 ; '6'
00000000000018d5         db  0x00 ; '.'
00000000000018d6         db  0x00 ; '.'
00000000000018d7         db  0x00 ; '.'
00000000000018d8         db  0x00 ; '.'
00000000000018d9         db  0x00 ; '.'
00000000000018da         db  0x00 ; '.'
00000000000018db         db  0x00 ; '.'
00000000000018dc         db  0x00 ; '.'
00000000000018dd         db  0x00 ; '.'
00000000000018de         db  0x00 ; '.'
00000000000018df         db  0x00 ; '.'
00000000000018e0         db  0x18 ; '.'
00000000000018e1         db  0xbf ; '.'
00000000000018e2         db  0x20 ; ' '
00000000000018e3         db  0x00 ; '.'
00000000000018e4         db  0x00 ; '.'
00000000000018e5         db  0x00 ; '.'
00000000000018e6         db  0x00 ; '.'
00000000000018e7         db  0x00 ; '.'
00000000000018e8         db  0x07 ; '.'
00000000000018e9         db  0x00 ; '.'
00000000000018ea         db  0x00 ; '.'
00000000000018eb         db  0x00 ; '.'
00000000000018ec         db  0x37 ; '7'
00000000000018ed         db  0x00 ; '.'
00000000000018ee         db  0x00 ; '.'
00000000000018ef         db  0x00 ; '.'
00000000000018f0         db  0x00 ; '.'
00000000000018f1         db  0x00 ; '.'
00000000000018f2         db  0x00 ; '.'
00000000000018f3         db  0x00 ; '.'
00000000000018f4         db  0x00 ; '.'
00000000000018f5         db  0x00 ; '.'
00000000000018f6         db  0x00 ; '.'
00000000000018f7         db  0x00 ; '.'
00000000000018f8         db  0x20 ; ' '
00000000000018f9         db  0xbf ; '.'
00000000000018fa         db  0x20 ; ' '
00000000000018fb         db  0x00 ; '.'
00000000000018fc         db  0x00 ; '.'
00000000000018fd         db  0x00 ; '.'
00000000000018fe         db  0x00 ; '.'
00000000000018ff         db  0x00 ; '.'
0000000000001900         db  0x07 ; '.'
0000000000001901         db  0x00 ; '.'
0000000000001902         db  0x00 ; '.'
0000000000001903         db  0x00 ; '.'
0000000000001904         db  0x38 ; '8'
0000000000001905         db  0x00 ; '.'
0000000000001906         db  0x00 ; '.'
0000000000001907         db  0x00 ; '.'
0000000000001908         db  0x00 ; '.'
0000000000001909         db  0x00 ; '.'
000000000000190a         db  0x00 ; '.'
000000000000190b         db  0x00 ; '.'
000000000000190c         db  0x00 ; '.'
000000000000190d         db  0x00 ; '.'
000000000000190e         db  0x00 ; '.'
000000000000190f         db  0x00 ; '.'
0000000000001910         db  0x28 ; '('
0000000000001911         db  0xbf ; '.'
0000000000001912         db  0x20 ; ' '
0000000000001913         db  0x00 ; '.'
0000000000001914         db  0x00 ; '.'
0000000000001915         db  0x00 ; '.'
0000000000001916         db  0x00 ; '.'
0000000000001917         db  0x00 ; '.'
0000000000001918         db  0x07 ; '.'
0000000000001919         db  0x00 ; '.'
000000000000191a         db  0x00 ; '.'
000000000000191b         db  0x00 ; '.'
000000000000191c         db  0x39 ; '9'
000000000000191d         db  0x00 ; '.'
000000000000191e         db  0x00 ; '.'
000000000000191f         db  0x00 ; '.'
0000000000001920         db  0x00 ; '.'
0000000000001921         db  0x00 ; '.'
0000000000001922         db  0x00 ; '.'
0000000000001923         db  0x00 ; '.'
0000000000001924         db  0x00 ; '.'
0000000000001925         db  0x00 ; '.'
0000000000001926         db  0x00 ; '.'
0000000000001927         db  0x00 ; '.'
0000000000001928         db  0x30 ; '0'
0000000000001929         db  0xbf ; '.'
000000000000192a         db  0x20 ; ' '
000000000000192b         db  0x00 ; '.'
000000000000192c         db  0x00 ; '.'
000000000000192d         db  0x00 ; '.'
000000000000192e         db  0x00 ; '.'
000000000000192f         db  0x00 ; '.'
0000000000001930         db  0x07 ; '.'
0000000000001931         db  0x00 ; '.'
0000000000001932         db  0x00 ; '.'
0000000000001933         db  0x00 ; '.'
0000000000001934         db  0x3a ; ':'
0000000000001935         db  0x00 ; '.'
0000000000001936         db  0x00 ; '.'
0000000000001937         db  0x00 ; '.'
0000000000001938         db  0x00 ; '.'
0000000000001939         db  0x00 ; '.'
000000000000193a         db  0x00 ; '.'
000000000000193b         db  0x00 ; '.'
000000000000193c         db  0x00 ; '.'
000000000000193d         db  0x00 ; '.'
000000000000193e         db  0x00 ; '.'
000000000000193f         db  0x00 ; '.'
0000000000001940         db  0x38 ; '8'
0000000000001941         db  0xbf ; '.'
0000000000001942         db  0x20 ; ' '
0000000000001943         db  0x00 ; '.'
0000000000001944         db  0x00 ; '.'
0000000000001945         db  0x00 ; '.'
0000000000001946         db  0x00 ; '.'
0000000000001947         db  0x00 ; '.'
0000000000001948         db  0x07 ; '.'
0000000000001949         db  0x00 ; '.'
000000000000194a         db  0x00 ; '.'
000000000000194b         db  0x00 ; '.'
000000000000194c         db  0x3b ; ';'
000000000000194d         db  0x00 ; '.'
000000000000194e         db  0x00 ; '.'
000000000000194f         db  0x00 ; '.'
0000000000001950         db  0x00 ; '.'
0000000000001951         db  0x00 ; '.'
0000000000001952         db  0x00 ; '.'
0000000000001953         db  0x00 ; '.'
0000000000001954         db  0x00 ; '.'
0000000000001955         db  0x00 ; '.'
0000000000001956         db  0x00 ; '.'
0000000000001957         db  0x00 ; '.'
0000000000001958         db  0x40 ; '@'
0000000000001959         db  0xbf ; '.'
000000000000195a         db  0x20 ; ' '
000000000000195b         db  0x00 ; '.'
000000000000195c         db  0x00 ; '.'
000000000000195d         db  0x00 ; '.'
000000000000195e         db  0x00 ; '.'
000000000000195f         db  0x00 ; '.'
0000000000001960         db  0x07 ; '.'
0000000000001961         db  0x00 ; '.'
0000000000001962         db  0x00 ; '.'
0000000000001963         db  0x00 ; '.'
0000000000001964         db  0x3c ; '<'
0000000000001965         db  0x00 ; '.'
0000000000001966         db  0x00 ; '.'
0000000000001967         db  0x00 ; '.'
0000000000001968         db  0x00 ; '.'
0000000000001969         db  0x00 ; '.'
000000000000196a         db  0x00 ; '.'
000000000000196b         db  0x00 ; '.'
000000000000196c         db  0x00 ; '.'
000000000000196d         db  0x00 ; '.'
000000000000196e         db  0x00 ; '.'
000000000000196f         db  0x00 ; '.'
0000000000001970         db  0x48 ; 'H'
0000000000001971         db  0xbf ; '.'
0000000000001972         db  0x20 ; ' '
0000000000001973         db  0x00 ; '.'
0000000000001974         db  0x00 ; '.'
0000000000001975         db  0x00 ; '.'
0000000000001976         db  0x00 ; '.'
0000000000001977         db  0x00 ; '.'
0000000000001978         db  0x07 ; '.'
0000000000001979         db  0x00 ; '.'
000000000000197a         db  0x00 ; '.'
000000000000197b         db  0x00 ; '.'
000000000000197c         db  0x3d ; '='
000000000000197d         db  0x00 ; '.'
000000000000197e         db  0x00 ; '.'
000000000000197f         db  0x00 ; '.'
0000000000001980         db  0x00 ; '.'
0000000000001981         db  0x00 ; '.'
0000000000001982         db  0x00 ; '.'
0000000000001983         db  0x00 ; '.'
0000000000001984         db  0x00 ; '.'
0000000000001985         db  0x00 ; '.'
0000000000001986         db  0x00 ; '.'
0000000000001987         db  0x00 ; '.'
0000000000001988         db  0x50 ; 'P'
0000000000001989         db  0xbf ; '.'
000000000000198a         db  0x20 ; ' '
000000000000198b         db  0x00 ; '.'
000000000000198c         db  0x00 ; '.'
000000000000198d         db  0x00 ; '.'
000000000000198e         db  0x00 ; '.'
000000000000198f         db  0x00 ; '.'
0000000000001990         db  0x07 ; '.'
0000000000001991         db  0x00 ; '.'
0000000000001992         db  0x00 ; '.'
0000000000001993         db  0x00 ; '.'
0000000000001994         db  0x3e ; '>'
0000000000001995         db  0x00 ; '.'
0000000000001996         db  0x00 ; '.'
0000000000001997         db  0x00 ; '.'
0000000000001998         db  0x00 ; '.'
0000000000001999         db  0x00 ; '.'
000000000000199a         db  0x00 ; '.'
000000000000199b         db  0x00 ; '.'
000000000000199c         db  0x00 ; '.'
000000000000199d         db  0x00 ; '.'
000000000000199e         db  0x00 ; '.'
000000000000199f         db  0x00 ; '.'
00000000000019a0         db  0x58 ; 'X'
00000000000019a1         db  0xbf ; '.'
00000000000019a2         db  0x20 ; ' '
00000000000019a3         db  0x00 ; '.'
00000000000019a4         db  0x00 ; '.'
00000000000019a5         db  0x00 ; '.'
00000000000019a6         db  0x00 ; '.'
00000000000019a7         db  0x00 ; '.'
00000000000019a8         db  0x07 ; '.'
00000000000019a9         db  0x00 ; '.'
00000000000019aa         db  0x00 ; '.'
00000000000019ab         db  0x00 ; '.'
00000000000019ac         db  0x3f ; '?'
00000000000019ad         db  0x00 ; '.'
00000000000019ae         db  0x00 ; '.'
00000000000019af         db  0x00 ; '.'
00000000000019b0         db  0x00 ; '.'
00000000000019b1         db  0x00 ; '.'
00000000000019b2         db  0x00 ; '.'
00000000000019b3         db  0x00 ; '.'
00000000000019b4         db  0x00 ; '.'
00000000000019b5         db  0x00 ; '.'
00000000000019b6         db  0x00 ; '.'
00000000000019b7         db  0x00 ; '.'
00000000000019b8         db  0x60 ; '`'
00000000000019b9         db  0xbf ; '.'
00000000000019ba         db  0x20 ; ' '
00000000000019bb         db  0x00 ; '.'
00000000000019bc         db  0x00 ; '.'
00000000000019bd         db  0x00 ; '.'
00000000000019be         db  0x00 ; '.'
00000000000019bf         db  0x00 ; '.'
00000000000019c0         db  0x07 ; '.'
00000000000019c1         db  0x00 ; '.'
00000000000019c2         db  0x00 ; '.'
00000000000019c3         db  0x00 ; '.'
00000000000019c4         db  0x40 ; '@'
00000000000019c5         db  0x00 ; '.'
00000000000019c6         db  0x00 ; '.'
00000000000019c7         db  0x00 ; '.'
00000000000019c8         db  0x00 ; '.'
00000000000019c9         db  0x00 ; '.'
00000000000019ca         db  0x00 ; '.'
00000000000019cb         db  0x00 ; '.'
00000000000019cc         db  0x00 ; '.'
00000000000019cd         db  0x00 ; '.'
00000000000019ce         db  0x00 ; '.'
00000000000019cf         db  0x00 ; '.'
00000000000019d0         db  0x68 ; 'h'
00000000000019d1         db  0xbf ; '.'
00000000000019d2         db  0x20 ; ' '
00000000000019d3         db  0x00 ; '.'
00000000000019d4         db  0x00 ; '.'
00000000000019d5         db  0x00 ; '.'
00000000000019d6         db  0x00 ; '.'
00000000000019d7         db  0x00 ; '.'
00000000000019d8         db  0x07 ; '.'
00000000000019d9         db  0x00 ; '.'
00000000000019da         db  0x00 ; '.'
00000000000019db         db  0x00 ; '.'
00000000000019dc         db  0x41 ; 'A'
00000000000019dd         db  0x00 ; '.'
00000000000019de         db  0x00 ; '.'
00000000000019df         db  0x00 ; '.'
00000000000019e0         db  0x00 ; '.'
00000000000019e1         db  0x00 ; '.'
00000000000019e2         db  0x00 ; '.'
00000000000019e3         db  0x00 ; '.'
00000000000019e4         db  0x00 ; '.'
00000000000019e5         db  0x00 ; '.'
00000000000019e6         db  0x00 ; '.'
00000000000019e7         db  0x00 ; '.'
00000000000019e8         db  0x70 ; 'p'
00000000000019e9         db  0xbf ; '.'
00000000000019ea         db  0x20 ; ' '
00000000000019eb         db  0x00 ; '.'
00000000000019ec         db  0x00 ; '.'
00000000000019ed         db  0x00 ; '.'
00000000000019ee         db  0x00 ; '.'
00000000000019ef         db  0x00 ; '.'
00000000000019f0         db  0x07 ; '.'
00000000000019f1         db  0x00 ; '.'
00000000000019f2         db  0x00 ; '.'
00000000000019f3         db  0x00 ; '.'
00000000000019f4         db  0x42 ; 'B'
00000000000019f5         db  0x00 ; '.'
00000000000019f6         db  0x00 ; '.'
00000000000019f7         db  0x00 ; '.'
00000000000019f8         db  0x00 ; '.'
00000000000019f9         db  0x00 ; '.'
00000000000019fa         db  0x00 ; '.'
00000000000019fb         db  0x00 ; '.'
00000000000019fc         db  0x00 ; '.'
00000000000019fd         db  0x00 ; '.'
00000000000019fe         db  0x00 ; '.'
00000000000019ff         db  0x00 ; '.'
0000000000001a00         db  0x78 ; 'x'
0000000000001a01         db  0xbf ; '.'
0000000000001a02         db  0x20 ; ' '
0000000000001a03         db  0x00 ; '.'
0000000000001a04         db  0x00 ; '.'
0000000000001a05         db  0x00 ; '.'
0000000000001a06         db  0x00 ; '.'
0000000000001a07         db  0x00 ; '.'
0000000000001a08         db  0x07 ; '.'
0000000000001a09         db  0x00 ; '.'
0000000000001a0a         db  0x00 ; '.'
0000000000001a0b         db  0x00 ; '.'
0000000000001a0c         db  0x43 ; 'C'
0000000000001a0d         db  0x00 ; '.'
0000000000001a0e         db  0x00 ; '.'
0000000000001a0f         db  0x00 ; '.'
0000000000001a10         db  0x00 ; '.'
0000000000001a11         db  0x00 ; '.'
0000000000001a12         db  0x00 ; '.'
0000000000001a13         db  0x00 ; '.'
0000000000001a14         db  0x00 ; '.'
0000000000001a15         db  0x00 ; '.'
0000000000001a16         db  0x00 ; '.'
0000000000001a17         db  0x00 ; '.'
0000000000001a18         db  0x80 ; '.'
0000000000001a19         db  0xbf ; '.'
0000000000001a1a         db  0x20 ; ' '
0000000000001a1b         db  0x00 ; '.'
0000000000001a1c         db  0x00 ; '.'
0000000000001a1d         db  0x00 ; '.'
0000000000001a1e         db  0x00 ; '.'
0000000000001a1f         db  0x00 ; '.'
0000000000001a20         db  0x07 ; '.'
0000000000001a21         db  0x00 ; '.'
0000000000001a22         db  0x00 ; '.'
0000000000001a23         db  0x00 ; '.'
0000000000001a24         db  0x44 ; 'D'
0000000000001a25         db  0x00 ; '.'
0000000000001a26         db  0x00 ; '.'
0000000000001a27         db  0x00 ; '.'
0000000000001a28         db  0x00 ; '.'
0000000000001a29         db  0x00 ; '.'
0000000000001a2a         db  0x00 ; '.'
0000000000001a2b         db  0x00 ; '.'
0000000000001a2c         db  0x00 ; '.'
0000000000001a2d         db  0x00 ; '.'
0000000000001a2e         db  0x00 ; '.'
0000000000001a2f         db  0x00 ; '.'
0000000000001a30         db  0x88 ; '.'
0000000000001a31         db  0xbf ; '.'
0000000000001a32         db  0x20 ; ' '
0000000000001a33         db  0x00 ; '.'
0000000000001a34         db  0x00 ; '.'
0000000000001a35         db  0x00 ; '.'
0000000000001a36         db  0x00 ; '.'
0000000000001a37         db  0x00 ; '.'
0000000000001a38         db  0x07 ; '.'
0000000000001a39         db  0x00 ; '.'
0000000000001a3a         db  0x00 ; '.'
0000000000001a3b         db  0x00 ; '.'
0000000000001a3c         db  0x45 ; 'E'
0000000000001a3d         db  0x00 ; '.'
0000000000001a3e         db  0x00 ; '.'
0000000000001a3f         db  0x00 ; '.'
0000000000001a40         db  0x00 ; '.'
0000000000001a41         db  0x00 ; '.'
0000000000001a42         db  0x00 ; '.'
0000000000001a43         db  0x00 ; '.'
0000000000001a44         db  0x00 ; '.'
0000000000001a45         db  0x00 ; '.'
0000000000001a46         db  0x00 ; '.'
0000000000001a47         db  0x00 ; '.'
0000000000001a48         db  0x90 ; '.'
0000000000001a49         db  0xbf ; '.'
0000000000001a4a         db  0x20 ; ' '
0000000000001a4b         db  0x00 ; '.'
0000000000001a4c         db  0x00 ; '.'
0000000000001a4d         db  0x00 ; '.'
0000000000001a4e         db  0x00 ; '.'
0000000000001a4f         db  0x00 ; '.'
0000000000001a50         db  0x07 ; '.'
0000000000001a51         db  0x00 ; '.'
0000000000001a52         db  0x00 ; '.'
0000000000001a53         db  0x00 ; '.'
0000000000001a54         db  0x46 ; 'F'
0000000000001a55         db  0x00 ; '.'
0000000000001a56         db  0x00 ; '.'
0000000000001a57         db  0x00 ; '.'
0000000000001a58         db  0x00 ; '.'
0000000000001a59         db  0x00 ; '.'
0000000000001a5a         db  0x00 ; '.'
0000000000001a5b         db  0x00 ; '.'
0000000000001a5c         db  0x00 ; '.'
0000000000001a5d         db  0x00 ; '.'
0000000000001a5e         db  0x00 ; '.'
0000000000001a5f         db  0x00 ; '.'
0000000000001a60         db  0x98 ; '.'
0000000000001a61         db  0xbf ; '.'
0000000000001a62         db  0x20 ; ' '
0000000000001a63         db  0x00 ; '.'
0000000000001a64         db  0x00 ; '.'
0000000000001a65         db  0x00 ; '.'
0000000000001a66         db  0x00 ; '.'
0000000000001a67         db  0x00 ; '.'
0000000000001a68         db  0x07 ; '.'
0000000000001a69         db  0x00 ; '.'
0000000000001a6a         db  0x00 ; '.'
0000000000001a6b         db  0x00 ; '.'
0000000000001a6c         db  0x48 ; 'H'
0000000000001a6d         db  0x00 ; '.'
0000000000001a6e         db  0x00 ; '.'
0000000000001a6f         db  0x00 ; '.'
0000000000001a70         db  0x00 ; '.'
0000000000001a71         db  0x00 ; '.'
0000000000001a72         db  0x00 ; '.'
0000000000001a73         db  0x00 ; '.'
0000000000001a74         db  0x00 ; '.'
0000000000001a75         db  0x00 ; '.'
0000000000001a76         db  0x00 ; '.'
0000000000001a77         db  0x00 ; '.'
0000000000001a78         db  0xa0 ; '.'
0000000000001a79         db  0xbf ; '.'
0000000000001a7a         db  0x20 ; ' '
0000000000001a7b         db  0x00 ; '.'
0000000000001a7c         db  0x00 ; '.'
0000000000001a7d         db  0x00 ; '.'
0000000000001a7e         db  0x00 ; '.'
0000000000001a7f         db  0x00 ; '.'
0000000000001a80         db  0x07 ; '.'
0000000000001a81         db  0x00 ; '.'
0000000000001a82         db  0x00 ; '.'
0000000000001a83         db  0x00 ; '.'
0000000000001a84         db  0x49 ; 'I'
0000000000001a85         db  0x00 ; '.'
0000000000001a86         db  0x00 ; '.'
0000000000001a87         db  0x00 ; '.'
0000000000001a88         db  0x00 ; '.'
0000000000001a89         db  0x00 ; '.'
0000000000001a8a         db  0x00 ; '.'
0000000000001a8b         db  0x00 ; '.'
0000000000001a8c         db  0x00 ; '.'
0000000000001a8d         db  0x00 ; '.'
0000000000001a8e         db  0x00 ; '.'
0000000000001a8f         db  0x00 ; '.'
0000000000001a90         db  0xa8 ; '.'
0000000000001a91         db  0xbf ; '.'
0000000000001a92         db  0x20 ; ' '
0000000000001a93         db  0x00 ; '.'
0000000000001a94         db  0x00 ; '.'
0000000000001a95         db  0x00 ; '.'
0000000000001a96         db  0x00 ; '.'
0000000000001a97         db  0x00 ; '.'
0000000000001a98         db  0x07 ; '.'
0000000000001a99         db  0x00 ; '.'
0000000000001a9a         db  0x00 ; '.'
0000000000001a9b         db  0x00 ; '.'
0000000000001a9c         db  0x4a ; 'J'
0000000000001a9d         db  0x00 ; '.'
0000000000001a9e         db  0x00 ; '.'
0000000000001a9f         db  0x00 ; '.'
0000000000001aa0         db  0x00 ; '.'
0000000000001aa1         db  0x00 ; '.'
0000000000001aa2         db  0x00 ; '.'
0000000000001aa3         db  0x00 ; '.'
0000000000001aa4         db  0x00 ; '.'
0000000000001aa5         db  0x00 ; '.'
0000000000001aa6         db  0x00 ; '.'
0000000000001aa7         db  0x00 ; '.'
0000000000001aa8         db  0xb0 ; '.'
0000000000001aa9         db  0xbf ; '.'
0000000000001aaa         db  0x20 ; ' '
0000000000001aab         db  0x00 ; '.'
0000000000001aac         db  0x00 ; '.'
0000000000001aad         db  0x00 ; '.'
0000000000001aae         db  0x00 ; '.'
0000000000001aaf         db  0x00 ; '.'
0000000000001ab0         db  0x07 ; '.'
0000000000001ab1         db  0x00 ; '.'
0000000000001ab2         db  0x00 ; '.'
0000000000001ab3         db  0x00 ; '.'
0000000000001ab4         db  0x4c ; 'L'
0000000000001ab5         db  0x00 ; '.'
0000000000001ab6         db  0x00 ; '.'
0000000000001ab7         db  0x00 ; '.'
0000000000001ab8         db  0x00 ; '.'
0000000000001ab9         db  0x00 ; '.'
0000000000001aba         db  0x00 ; '.'
0000000000001abb         db  0x00 ; '.'
0000000000001abc         db  0x00 ; '.'
0000000000001abd         db  0x00 ; '.'
0000000000001abe         db  0x00 ; '.'
0000000000001abf         db  0x00 ; '.'
0000000000001ac0         db  0xb8 ; '.'
0000000000001ac1         db  0xbf ; '.'
0000000000001ac2         db  0x20 ; ' '
0000000000001ac3         db  0x00 ; '.'
0000000000001ac4         db  0x00 ; '.'
0000000000001ac5         db  0x00 ; '.'
0000000000001ac6         db  0x00 ; '.'
0000000000001ac7         db  0x00 ; '.'
0000000000001ac8         db  0x07 ; '.'
0000000000001ac9         db  0x00 ; '.'
0000000000001aca         db  0x00 ; '.'
0000000000001acb         db  0x00 ; '.'
0000000000001acc         db  0x4d ; 'M'
0000000000001acd         db  0x00 ; '.'
0000000000001ace         db  0x00 ; '.'
0000000000001acf         db  0x00 ; '.'
0000000000001ad0         db  0x00 ; '.'
0000000000001ad1         db  0x00 ; '.'
0000000000001ad2         db  0x00 ; '.'
0000000000001ad3         db  0x00 ; '.'
0000000000001ad4         db  0x00 ; '.'
0000000000001ad5         db  0x00 ; '.'
0000000000001ad6         db  0x00 ; '.'
0000000000001ad7         db  0x00 ; '.'
0000000000001ad8         db  0xc0 ; '.'
0000000000001ad9         db  0xbf ; '.'
0000000000001ada         db  0x20 ; ' '
0000000000001adb         db  0x00 ; '.'
0000000000001adc         db  0x00 ; '.'
0000000000001add         db  0x00 ; '.'
0000000000001ade         db  0x00 ; '.'
0000000000001adf         db  0x00 ; '.'
0000000000001ae0         db  0x07 ; '.'
0000000000001ae1         db  0x00 ; '.'
0000000000001ae2         db  0x00 ; '.'
0000000000001ae3         db  0x00 ; '.'
0000000000001ae4         db  0x4e ; 'N'
0000000000001ae5         db  0x00 ; '.'
0000000000001ae6         db  0x00 ; '.'
0000000000001ae7         db  0x00 ; '.'
0000000000001ae8         db  0x00 ; '.'
0000000000001ae9         db  0x00 ; '.'
0000000000001aea         db  0x00 ; '.'
0000000000001aeb         db  0x00 ; '.'
0000000000001aec         db  0x00 ; '.'
0000000000001aed         db  0x00 ; '.'
0000000000001aee         db  0x00 ; '.'
0000000000001aef         db  0x00 ; '.'
0000000000001af0         db  0xc8 ; '.'
0000000000001af1         db  0xbf ; '.'
0000000000001af2         db  0x20 ; ' '
0000000000001af3         db  0x00 ; '.'
0000000000001af4         db  0x00 ; '.'
0000000000001af5         db  0x00 ; '.'
0000000000001af6         db  0x00 ; '.'
0000000000001af7         db  0x00 ; '.'
0000000000001af8         db  0x07 ; '.'
0000000000001af9         db  0x00 ; '.'
0000000000001afa         db  0x00 ; '.'
0000000000001afb         db  0x00 ; '.'
0000000000001afc         db  0x4f ; 'O'
0000000000001afd         db  0x00 ; '.'
0000000000001afe         db  0x00 ; '.'
0000000000001aff         db  0x00 ; '.'
0000000000001b00         db  0x00 ; '.'
0000000000001b01         db  0x00 ; '.'
0000000000001b02         db  0x00 ; '.'
0000000000001b03         db  0x00 ; '.'
0000000000001b04         db  0x00 ; '.'
0000000000001b05         db  0x00 ; '.'
0000000000001b06         db  0x00 ; '.'
0000000000001b07         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x1b08; 0x1b1f[ (23 bytes)
        ; File offset : [6920; 6943[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
0000000000001b08         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
0000000000001b0c         mov        rax, qword [qword_20bfe0]                   ; qword_20bfe0
0000000000001b13         test       rax, rax
0000000000001b16         je         loc_1b1a

0000000000001b18         call       rax

                     loc_1b1a:
0000000000001b1a         add        rsp, 0x8                                    ; CODE XREF=_init+14
0000000000001b1e         ret
                        ; endp
0000000000001b1f         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x1b20; 0x1fd0[ (1200 bytes)
        ; File offset : [6944; 8144[ (1200 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_1b20:
0000000000001b20         push       qword [qword_20bd70]                        ; Begin of unwind block (FDE at 0xa8e4), qword_20bd70, CODE XREF=sub_1b36+5
0000000000001b26         jmp        qword [qword_20bd70+8]                      ; 0x20bd78
                        ; endp
0000000000001b2c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getenv:        // getenv
0000000000001b30         jmp        qword [getenv@GOT]                          ; getenv, getenv@GOT, CODE XREF=create+54
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b36:
0000000000001b36         push       0x0
0000000000001b3b         jmp        loc_1b20


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_sigprocmask:        // sigprocmask
0000000000001b40         jmp        qword [sigprocmask@GOT]                     ; sigprocmask, sigprocmask@GOT, CODE XREF=main+2215, create+397
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b46:
0000000000001b46         push       0x1
0000000000001b4b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
0000000000001b50         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=main+4320, next_file_name+380, quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b56:
0000000000001b56         push       0x2
0000000000001b5b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000001b60         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_5ee0+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b66:
0000000000001b66         push       0x3
0000000000001b6b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
0000000000001b70         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+3978, main+4038, main+4697, main+4976, main+5263, main+5428, main+5727, main+5853, main+5967, main+6072, main+6226
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b76:
0000000000001b76         push       0x4
0000000000001b7b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
0000000000001b80         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=main+1464, usage+748, usage+941
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b86:
0000000000001b86         push       0x5
0000000000001b8b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
0000000000001b90         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b96:
0000000000001b96         push       0x6
0000000000001b9b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcpy:        // strcpy
0000000000001ba0         jmp        qword [strcpy@GOT]                          ; strcpy, strcpy@GOT, CODE XREF=sig2str+57
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ba6:
0000000000001ba6         push       0x7
0000000000001bab         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000001bb0         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bb6:
0000000000001bb6         push       0x8
0000000000001bbb         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_sigaction:        // sigaction
0000000000001bc0         jmp        qword [sigaction@GOT]                       ; sigaction, sigaction@GOT, CODE XREF=main+2166
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bc6:
0000000000001bc6         push       0x9
0000000000001bcb         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fcntl:        // fcntl
0000000000001bd0         jmp        qword [fcntl@GOT]                           ; fcntl, fcntl@GOT, CODE XREF=rpl_fcntl+128, rpl_fcntl+212, rpl_fcntl+320, rpl_fcntl+407, rpl_fcntl+423, rpl_fcntl+460, rpl_fcntl+483, rpl_fcntl+559, rpl_fcntl+606
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bd6:
0000000000001bd6         push       0xa
0000000000001bdb         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setenv:        // setenv
0000000000001be0         jmp        qword [setenv@GOT]                          ; setenv, setenv@GOT, CODE XREF=create+91
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1be6:
0000000000001be6         push       0xb
0000000000001beb         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_clearerr_unlocked:        // clearerr_unlocked
0000000000001bf0         jmp        qword [clearerr_unlocked@GOT]               ; clearerr_unlocked, clearerr_unlocked@GOT, CODE XREF=main+4949
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bf6:
0000000000001bf6         push       0xc
0000000000001bfb         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_write:        // write
0000000000001c00         jmp        qword [write@GOT]                           ; write, write@GOT, CODE XREF=safe_write+33
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c06:
0000000000001c06         push       0xd
0000000000001c0b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001c10         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+110
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c16:
0000000000001c16         push       0xe
0000000000001c1b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001c20         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c26:
0000000000001c26         push       0xf
0000000000001c2b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001c30         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+98
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c36:
0000000000001c36         push       0x10
0000000000001c3b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001c40         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+382, main+814, main+1020, main+1095, main+1190, main+1262, main+1334, main+2250, main+4030, main+4968, main+5255
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c46:
0000000000001c46         push       0x11
0000000000001c4b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001c50         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c56:
0000000000001c56         push       0x12
0000000000001c5b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001c60         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=next_file_name+179, next_file_name+208, next_file_name+432, base_len+4, quotearg_buffer_restyled+343, sub_5ee0+411, sub_5ee0+1742, xstrdup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c66:
0000000000001c66         push       0x13
0000000000001c6b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000001c70         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+6948, sub_44cf+45, closeout+704, open_safer+105, sub_5ee0+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, version_etc_va+101
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c76:
0000000000001c76         push       0x14
0000000000001c7b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000001c80         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+225
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c86:
0000000000001c86         push       0x15
0000000000001c8b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000001c90         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c96:
0000000000001c96         push       0x16
0000000000001c9b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dup2:        // dup2
0000000000001ca0         jmp        qword [dup2@GOT]                            ; dup2, dup2@GOT, CODE XREF=create+354, fd_reopen+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ca6:
0000000000001ca6         push       0x17
0000000000001cab         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strchr:        // strchr
0000000000001cb0         jmp        qword [strchr@GOT]                          ; strchr, strchr@GOT, CODE XREF=main+989, xstrtoumax+291, xstrtoumax+323, xstrtoumax+380
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1cb6:
0000000000001cb6         push       0x18
0000000000001cbb         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000001cc0         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1cc6:
0000000000001cc6         push       0x19
0000000000001ccb         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_ftruncate:        // ftruncate
0000000000001cd0         jmp        qword [ftruncate@GOT]                       ; ftruncate, ftruncate@GOT, CODE XREF=create+589
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1cd6:
0000000000001cd6         push       0x1a
0000000000001cdb         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
0000000000001ce0         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=main+2584, main+5926, main+6036, main+6148, main+6177, bytes_split+415, rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ce6:
0000000000001ce6         push       0x1b
0000000000001ceb         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
0000000000001cf0         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=main+6517, main+7138, next_file_name+705, xstrtoumax+927
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1cf6:
0000000000001cf6         push       0x1c
0000000000001cfb         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___strtoul_internal:        // __strtoul_internal
0000000000001d00         jmp        qword [__strtoul_internal@GOT]              ; __strtoul_internal, __strtoul_internal@GOT, CODE XREF=xstrtoumax+142
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d06:
0000000000001d06         push       0x1d
0000000000001d0b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000001d10         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=next_file_name+332, quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d16:
0000000000001d16         push       0x1e
0000000000001d1b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_close:        // close
0000000000001d20         jmp        qword [close@GOT]                           ; close, close@GOT, CODE XREF=main+3896, create+156, create+290, create+320, create+370, closeout+322, fd_reopen+61, fd_safer+38, rpl_fcntl+510
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d26:
0000000000001d26         push       0x1f
0000000000001d2b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_pipe:        // pipe
0000000000001d30         jmp        qword [pipe@GOT]                            ; pipe, pipe@GOT, CODE XREF=create+120
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d36:
0000000000001d36         push       0x20
0000000000001d3b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strspn:        // strspn
0000000000001d40         jmp        qword [strspn@GOT]                          ; strspn, strspn@GOT, CODE XREF=main+1565
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d46:
0000000000001d46         push       0x21
0000000000001d4b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memchr:        // memchr
0000000000001d50         jmp        qword [memchr@GOT]                          ; memchr, memchr@GOT, CODE XREF=main+2816, main+3639, main+4622
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d56:
0000000000001d56         push       0x22
0000000000001d5b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_read:        // read
0000000000001d60         jmp        qword [read@GOT]                            ; read, read@GOT, CODE XREF=safe_read+33
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d66:
0000000000001d66         push       0x23
0000000000001d6b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001d70         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d76:
0000000000001d76         push       0x24
0000000000001d7b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001d80         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+157, usage+194, usage+231, usage+314, usage+351, usage+388, usage+425, usage+469, usage+1056, version_etc_arn+135, emit_bug_reporting_address+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d86:
0000000000001d86         push       0x25
0000000000001d8b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001d90         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d96:
0000000000001d96         push       0x26
0000000000001d9b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcmp:        // strcmp
0000000000001da0         jmp        qword [strcmp@GOT]                          ; strcmp, strcmp@GOT, CODE XREF=main+725, main+1954, str2sig+82
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1da6:
0000000000001da6         push       0x27
0000000000001dab         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_sigemptyset:        // sigemptyset
0000000000001db0         jmp        qword [sigemptyset@GOT]                     ; sigemptyset, sigemptyset@GOT, CODE XREF=main+2146
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1db6:
0000000000001db6         push       0x28
0000000000001dbb         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strtol:        // strtol
0000000000001dc0         jmp        qword [strtol@GOT]                          ; strtol, strtol@GOT, CODE XREF=str2sig+152, str2sig+279, str2sig+336
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1dc6:
0000000000001dc6         push       0x29
0000000000001dcb         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001dd0         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=main+3313, next_file_name+286, next_file_name+360, next_file_name+470, xmemdup+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1dd6:
0000000000001dd6         push       0x2a
0000000000001ddb         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001de0         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1de6:
0000000000001de6         push       0x2b
0000000000001deb         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000001df0         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1df6:
0000000000001df6         push       0x2c
0000000000001dfb         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000001e00         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e06:
0000000000001e06         push       0x2d
0000000000001e0b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000001e10         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e16:
0000000000001e16         push       0x2e
0000000000001e1b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fxstat:        // __fxstat
0000000000001e20         jmp        qword [__fxstat@GOT]                        ; __fxstat, __fxstat@GOT, CODE XREF=main+1999, create+541
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e26:
0000000000001e26         push       0x2f
0000000000001e2b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000001e30         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e36:
0000000000001e36         push       0x30
0000000000001e3b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite_unlocked:        // fwrite_unlocked
0000000000001e40         jmp        qword [fwrite_unlocked@GOT]                 ; fwrite_unlocked, fwrite_unlocked@GOT, CODE XREF=main+4735, main+4927
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e46:
0000000000001e46         push       0x31
0000000000001e4b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
0000000000001e50         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e56:
0000000000001e56         push       0x32
0000000000001e5b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fdopen:        // fdopen
0000000000001e60         jmp        qword [fdopen@GOT]                          ; fdopen, fdopen@GOT, CODE XREF=ofile_open+261
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e66:
0000000000001e66         push       0x33
0000000000001e6b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000001e70         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+79, usage+723, usage+916, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e76:
0000000000001e76         push       0x34
0000000000001e7b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000001e80         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=usage+120, usage+711, usage+804, usage+865, usage+904, usage+1007, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e86:
0000000000001e86         push       0x35
0000000000001e8b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memmove:        // memmove
0000000000001e90         jmp        qword [memmove@GOT]                         ; memmove, memmove@GOT, CODE XREF=main+3452, main+5647
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e96:
0000000000001e96         push       0x36
0000000000001e9b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000001ea0         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+4058, main+5000, main+5066, main+5207, main+5287, main+5452, main+5790, main+5877, main+5991, main+6096, main+6344
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ea6:
0000000000001ea6         push       0x37
0000000000001eab         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memrchr:        // memrchr
0000000000001eb0         jmp        qword [memrchr@GOT]                         ; memrchr, memrchr@GOT, CODE XREF=main+2987, main+3124
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1eb6:
0000000000001eb6         push       0x38
0000000000001ebb         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_waitpid:        // waitpid
0000000000001ec0         jmp        qword [waitpid@GOT]                         ; waitpid, waitpid@GOT, CODE XREF=closeout+151
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ec6:
0000000000001ec6         push       0x39
0000000000001ecb         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_open:        // open
0000000000001ed0         jmp        qword [open@GOT]                            ; open, open@GOT, CODE XREF=open_safer+35, fd_reopen+21
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ed6:
0000000000001ed6         push       0x3a
0000000000001edb         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001ee0         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ee6:
0000000000001ee6         push       0x3b
0000000000001eeb         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001ef0         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ef6:
0000000000001ef6         push       0x3c
0000000000001efb         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getpagesize:        // getpagesize
0000000000001f00         jmp        qword [getpagesize@GOT]                     ; getpagesize, getpagesize@GOT, CODE XREF=main+47
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f06:
0000000000001f06         push       0x3d
0000000000001f0b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___libc_current_sigrtmin:        // __libc_current_sigrtmin
0000000000001f10         jmp        qword [__libc_current_sigrtmin@GOT]         ; __libc_current_sigrtmin, __libc_current_sigrtmin@GOT, CODE XREF=str2sig+192, sig2str+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f16:
0000000000001f16         push       0x3e
0000000000001f1b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001f20         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+593, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f26:
0000000000001f26         push       0x3f
0000000000001f2b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001f30         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f36:
0000000000001f36         push       0x40
0000000000001f3b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001f40         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=create+745, create+855, usage+81, usage+277, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f46:
0000000000001f46         push       0x41
0000000000001f4b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___libc_current_sigrtmax:        // __libc_current_sigrtmax
0000000000001f50         jmp        qword [__libc_current_sigrtmax@GOT]         ; __libc_current_sigrtmax, __libc_current_sigrtmax@GOT, CODE XREF=str2sig+199, sig2str+92
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f56:
0000000000001f56         push       0x42
0000000000001f5b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000001f60         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_5ee0+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f66:
0000000000001f66         push       0x43
0000000000001f6b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_execl:        // execl
0000000000001f70         jmp        qword [execl@GOT]                           ; execl, execl@GOT, CODE XREF=create+438
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f76:
0000000000001f76         push       0x44
0000000000001f7b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001f80         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_5ee0+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f86:
0000000000001f86         push       0x45
0000000000001f8b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_sigaddset:        // sigaddset
0000000000001f90         jmp        qword [sigaddset@GOT]                       ; sigaddset, sigaddset@GOT, CODE XREF=main+2194
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f96:
0000000000001f96         push       0x46
0000000000001f9b         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fork:        // fork
0000000000001fa0         jmp        qword [fork@GOT]                            ; fork, fork@GOT, CODE XREF=create+133
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1fa6:
0000000000001fa6         push       0x47
0000000000001fab         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000001fb0         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=main+881, sub_5c80+51, xstrtoumax+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1fb6:
0000000000001fb6         push       0x48
0000000000001fbb         jmp        0x1b20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___sprintf_chk:        // __sprintf_chk
0000000000001fc0         jmp        qword [__sprintf_chk@GOT]                   ; __sprintf_chk, __sprintf_chk@GOT, CODE XREF=closeout+697, sig2str+173
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1fc6:
0000000000001fc6         push       0x49
0000000000001fcb         jmp        0x1b20
                        ; endp


        ; Section .plt.got
        ; Range: [0x1fd0; 0x1fd8[ (8 bytes)
        ; File offset : [8144; 8152[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_20bff0:        // qword_20bff0
0000000000001fd0         jmp        qword [qword_20bff0]                        ; qword, End of unwind block (FDE at 0xa8e4), Begin of unwind block (FDE at 0xa90c), qword_20bff0, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000001fd6         align      8
0000000000001fd8         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0xa90c)
0000000000001fd9         db  0x00 ; '.'
0000000000001fda         db  0x00 ; '.'
0000000000001fdb         db  0x00 ; '.'
0000000000001fdc         db  0x00 ; '.'
0000000000001fdd         db  0x00 ; '.'
0000000000001fde         db  0x00 ; '.'
0000000000001fdf         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x1fe0; 0x8a9e[ (27326 bytes)
        ; File offset : [8160; 35486[ (27326 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_58: int8_t, -88
        ;    var_F8: int64_t, -248
        ;    var_100: int64_t, -256
        ;    var_110: int64_t, -272
        ;    var_111: int8_t, -273
        ;    var_112: int8_t, -274
        ;    var_120: int64_t, -288
        ;    var_128: int64_t, -296
        ;    var_130: int64_t, -304
        ;    var_138: int64_t, -312
        ;    var_140: int64_t, -320
        ;    var_148: int64_t, -328
        ;    var_150: int64_t, -336
        ;    var_158: int64_t, -344
        ;    var_160: int64_t, -352
        ;    var_168: int64_t, -360
        ;    var_170: int64_t, -368
        ;    var_178: int64_t, -376


                     main:
0000000000001fe0         push       r15                                         ; Begin of unwind block (FDE at 0xaadc), DATA XREF=_start+29
0000000000001fe2         push       r14
0000000000001fe4         xor        r14d, r14d
0000000000001fe7         push       r13
0000000000001fe9         push       r12
0000000000001feb         xor        r12d, r12d
0000000000001fee         push       rbp
0000000000001fef         push       rbx
0000000000001ff0         mov        rbx, rsi
0000000000001ff3         mov        ebp, edi
0000000000001ff5         sub        rsp, 0x148
0000000000001ffc         mov        rax, qword [fs:0x28]
0000000000002005         mov        qword [rsp+0x178+var_40], rax
000000000000200d         xor        eax, eax
000000000000200f         call       j_getpagesize                               ; getpagesize
0000000000002014         mov        rdi, qword [rbx]
0000000000002017         cdqe
0000000000002019         mov        qword [rsp+0x178+var_170], rax
000000000000201e         call       set_program_name                            ; set_program_name
0000000000002023         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0xa141
000000000000202a         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
000000000000202f         call       j_setlocale                                 ; setlocale
0000000000002034         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
000000000000203b         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000002042         call       j_bindtextdomain                            ; bindtextdomain
0000000000002047         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
000000000000204e         call       j_textdomain                                ; textdomain
0000000000002053         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
000000000000205a         call       atexit                                      ; atexit
000000000000205f         lea        rax, qword [aLibs+10]                       ; 0x9c12
0000000000002066         mov        qword [rsp+0x178+var_178], 0x0
000000000000206e         mov        qword [rsp+0x178+var_168], 0x0
0000000000002077         mov        qword [rsp+0x178+var_138], 0x0
0000000000002080         mov        qword [infile], rax                         ; infile
0000000000002087         lea        rax, qword [aAdditionalsuff+16]             ; 0x8e8d
000000000000208e         mov        qword [outbase], rax                        ; outbase
0000000000002095         nop        dword [rax]

                     loc_2098:
0000000000002098         mov        r13d, dword [optind@@GLIBC_2.2.5]           ; optind@@GLIBC_2.2.5, CODE XREF=main+308, main+431, main+510, main+615, main+677, main+764, main+860, main+1070, main+1138, main+1239, main+1311
000000000000209f         mov        eax, 0x1
00000000000020a4         lea        rcx, qword [longopts]                       ; argument "__longopts" for method j_getopt_long, longopts
00000000000020ab         lea        rdx, qword [a0123456789cabd]                ; argument "__shortopts" for method j_getopt_long, "0123456789C:a:b:del:n:t:ux"
00000000000020b2         mov        rsi, rbx                                    ; argument "___argv" for method j_getopt_long
00000000000020b5         mov        edi, ebp                                    ; argument "___argc" for method j_getopt_long
00000000000020b7         test       r13d, r13d
00000000000020ba         cmove      r13d, eax
00000000000020be         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
00000000000020c1         call       j_getopt_long                               ; getopt_long
00000000000020c6         cmp        eax, 0xffffffff
00000000000020c9         mov        r15d, eax
00000000000020cc         je         loc_2668

00000000000020d2         cmp        eax, 0x65
00000000000020d5         je         loc_2240

00000000000020db         jle        loc_2120

00000000000020dd         cmp        eax, 0x78
00000000000020e0         je         loc_25bb

00000000000020e6         jg         loc_2198

00000000000020ec         cmp        eax, 0x6e
00000000000020ef         je         loc_2348

00000000000020f5         jle        loc_22e8

00000000000020fb         cmp        eax, 0x74
00000000000020fe         je         loc_2290

0000000000002104         cmp        eax, 0x75
0000000000002107         jne        loc_392c

000000000000210d         mov        byte [unbuffered], 0x1                      ; unbuffered
0000000000002114         jmp        loc_2098
0000000000002116         align      32

                     loc_2120:
0000000000002120         cmp        eax, 0x39                                   ; CODE XREF=main+251
0000000000002123         jle        loc_21e8

0000000000002129         cmp        eax, 0x61
000000000000212c         je         loc_24c0

0000000000002132         jle        loc_2460

0000000000002138         cmp        eax, 0x62
000000000000213b         jne        loc_264c

0000000000002141         test       r12d, r12d
0000000000002144         jne        loc_3ca8

000000000000214a         lea        rsi, qword [aInvalidNumberO_8cf7]           ; argument "msgid" for method j_dcgettext, "invalid number of bytes"
0000000000002151         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002156         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002158         mov        r12d, 0x1
000000000000215e         call       j_dcgettext                                 ; dcgettext
0000000000002163         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
000000000000216a         lea        rcx, qword [multipliers.7397]               ; "bEGKkMmPTYZ0"
0000000000002171         mov        r8, rax
0000000000002174         xor        r9d, r9d
0000000000002177         movabs     rdx, 0x7fffffffffffffff
0000000000002181         mov        esi, 0x1
0000000000002186         call       xdectoumax                                  ; xdectoumax
000000000000218b         mov        qword [rsp+0x178+var_178], rax
000000000000218f         jmp        loc_2098
0000000000002194         align      8

                     loc_2198:
0000000000002198         cmp        eax, 0x81                                   ; CODE XREF=main+262
000000000000219d         je         loc_2570

00000000000021a3         jle        loc_2550

00000000000021a9         cmp        eax, 0x82
00000000000021ae         je         loc_2508

00000000000021b4         cmp        eax, 0x83
00000000000021b9         jne        loc_392c

00000000000021bf         mov        r13, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
00000000000021c6         mov        rdi, r13                                    ; argument #1 for method last_component
00000000000021c9         call       last_component                              ; last_component
00000000000021ce         cmp        r13, rax
00000000000021d1         jne        loc_3a9e

00000000000021d7         mov        qword [additional_suffix], r13              ; additional_suffix
00000000000021de         jmp        loc_2098
00000000000021e3         align      8

                     loc_21e8:
00000000000021e8         cmp        eax, 0x30                                   ; CODE XREF=main+323
00000000000021eb         jge        loc_2250

00000000000021ed         cmp        eax, 0xffffff7d
00000000000021f2         jne        loc_3842

00000000000021f8         sub        rsp, 0x8
00000000000021fc         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002203         mov        rcx, qword [Version]                        ; Version
000000000000220a         push       0x0
000000000000220c         lea        r9, qword [aRichardMStallm]                 ; "Richard M. Stallman"
0000000000002213         lea        r8, qword [aTorbjornGranlu]                 ; "Torbjorn Granlund"
000000000000221a         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x8c81
0000000000002221         lea        rsi, qword [aSplit]                         ; "split"
0000000000002228         xor        eax, eax
000000000000222a         call       version_etc                                 ; version_etc
000000000000222f         xor        edi, edi                                    ; argument "__status" for method j_exit
0000000000002231         call       j_exit                                      ; exit
                        ; endp
0000000000002236         align      64

                     loc_2240:
0000000000002240         mov        byte [elide_empty_files], 0x1               ; elide_empty_files, CODE XREF=main+245
0000000000002247         jmp        loc_2098
000000000000224c         align      16

                     loc_2250:
0000000000002250         test       r12d, r12d                                  ; CODE XREF=main+523
0000000000002253         je         loc_2271

0000000000002255         cmp        r12d, 0x4
0000000000002259         jne        loc_3ca8

000000000000225f         test       r14d, r14d
0000000000002262         je         loc_28ed

0000000000002268         cmp        r14d, r13d
000000000000226b         je         loc_28ed

                     loc_2271:
0000000000002271         sub        r15d, 0x30                                  ; CODE XREF=main+627
0000000000002275         mov        r14d, r13d
0000000000002278         mov        r12d, 0x4
000000000000227e         movsxd     rax, r15d
0000000000002281         mov        qword [rsp+0x178+var_178], rax
0000000000002285         jmp        loc_2098
000000000000228a         align      16

                     loc_2290:
0000000000002290         mov        r13, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+286
0000000000002297         movsx      eax, byte [r13]
000000000000229c         test       al, al
000000000000229e         je         loc_3c40

00000000000022a4         cmp        byte [r13+1], 0x0
00000000000022a9         je         loc_22c4

00000000000022ab         lea        rsi, qword [aEmptyRecordSep+23]             ; argument "__s2" for method j_strcmp, 0x8d72
00000000000022b2         mov        rdi, r13                                    ; argument "__s1" for method j_strcmp
00000000000022b5         call       j_strcmp                                    ; strcmp
00000000000022ba         test       eax, eax
00000000000022bc         jne        loc_3cdd

00000000000022c2         xor        eax, eax

                     loc_22c4:
00000000000022c4         mov        edx, dword [eolchar]                        ; eolchar, CODE XREF=main+713
00000000000022ca         test       edx, edx
00000000000022cc         js         loc_22d6

00000000000022ce         cmp        edx, eax
00000000000022d0         jne        loc_3cb9

                     loc_22d6:
00000000000022d6         mov        dword [eolchar], eax                        ; eolchar, CODE XREF=main+748
00000000000022dc         jmp        loc_2098
00000000000022e1         align      8

                     loc_22e8:
00000000000022e8         cmp        eax, 0x6c                                   ; CODE XREF=main+277
00000000000022eb         jne        loc_392c

00000000000022f1         test       r12d, r12d
00000000000022f4         jne        loc_3ca8

00000000000022fa         lea        rsi, qword [aInvalidNumberO]                ; argument "msgid" for method j_dcgettext, "invalid number of lines"
0000000000002301         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002306         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002308         mov        r12d, 0x3
000000000000230e         call       j_dcgettext                                 ; dcgettext
0000000000002313         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
000000000000231a         lea        rcx, qword [aWrittenBySSAnd+27]             ; 0xa141
0000000000002321         mov        r8, rax
0000000000002324         xor        r9d, r9d
0000000000002327         mov        rdx, 0xffffffffffffffff
000000000000232e         mov        esi, 0x1
0000000000002333         call       xdectoumax                                  ; xdectoumax
0000000000002338         mov        qword [rsp+0x178+var_178], rax
000000000000233c         jmp        loc_2098
0000000000002341         align      8

                     loc_2348:
0000000000002348         test       r12d, r12d                                  ; CODE XREF=main+271
000000000000234b         jne        loc_3ca8

0000000000002351         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000002356         mov        rcx, qword [rax]
0000000000002359         mov        rax, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000002360         jmp        loc_236f
0000000000002362         align      8

                     loc_2368:
0000000000002368         mov        qword [optarg@@GLIBC_2.2.5], rax            ; optarg@@GLIBC_2.2.5, CODE XREF=main+928

                     loc_236f:
000000000000236f         mov        r13, rax                                    ; CODE XREF=main+896
0000000000002372         add        rax, 0x1
0000000000002376         movzx      edx, byte [r13]
000000000000237b         test       byte [rcx+rdx*2+1], 0x20
0000000000002380         jne        loc_2368

0000000000002382         lea        rdi, qword [aInvalidNumberO+24]             ; 0x8d27
0000000000002389         mov        ecx, 0x2
000000000000238e         mov        rsi, r13
0000000000002391         rep  cmpsb byte [rsi], byte [rdi]
0000000000002393         seta       al
0000000000002396         sbb        al, 0x0
0000000000002398         test       al, al
000000000000239a         jne        loc_2583

00000000000023a0         add        r13, 0x2
00000000000023a4         mov        r12d, 0x7
00000000000023aa         mov        qword [optarg@@GLIBC_2.2.5], r13            ; optarg@@GLIBC_2.2.5

                     loc_23b1:
00000000000023b1         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; argument "__s" for method j_strchr, optarg@@GLIBC_2.2.5, CODE XREF=main+1471, main+1494
00000000000023b8         mov        esi, 0x2f                                   ; argument "__c" for method j_strchr
00000000000023bd         call       j_strchr                                    ; strchr
00000000000023c2         xor        edi, edi
00000000000023c4         test       rax, rax
00000000000023c7         mov        r13, rax
00000000000023ca         mov        edx, 0x5
00000000000023cf         lea        rsi, qword [aInvalidNumberO_8d2d]           ; "invalid number of chunks"
00000000000023d6         je         loc_28aa

00000000000023dc         call       j_dcgettext                                 ; dcgettext
00000000000023e1         lea        rdi, qword [r13+1]
00000000000023e5         lea        rcx, qword [aWrittenBySSAnd+27]             ; 0xa141
00000000000023ec         xor        r9d, r9d
00000000000023ef         or         rdx, 0xffffffffffffffff
00000000000023f3         mov        r8, rax
00000000000023f6         mov        esi, 0x1
00000000000023fb         call       xdectoumax                                  ; xdectoumax
0000000000002400         cmp        r13, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000002407         mov        r15, rax
000000000000240a         mov        qword [rsp+0x178+var_178], rax
000000000000240e         je         loc_2098

0000000000002414         lea        rsi, qword [aInvalidChunkNu]                ; argument "msgid" for method j_dcgettext, "invalid chunk number"
000000000000241b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002420         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002422         mov        byte [r13], 0x0
0000000000002427         call       j_dcgettext                                 ; dcgettext
000000000000242c         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000002433         lea        rcx, qword [aWrittenBySSAnd+27]             ; 0xa141
000000000000243a         mov        r8, rax
000000000000243d         xor        r9d, r9d
0000000000002440         mov        rdx, r15
0000000000002443         mov        esi, 0x1
0000000000002448         call       xdectoumax                                  ; xdectoumax
000000000000244d         mov        qword [rsp+0x178+var_168], rax
0000000000002452         jmp        loc_2098
0000000000002457         align      32

                     loc_2460:
0000000000002460         cmp        eax, 0x43                                   ; CODE XREF=main+338
0000000000002463         jne        loc_392c

0000000000002469         test       r12d, r12d
000000000000246c         jne        loc_3ca8

0000000000002472         lea        rsi, qword [aInvalidNumberO_8cf7]           ; argument "msgid" for method j_dcgettext, "invalid number of bytes"
0000000000002479         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000247e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002480         mov        r12d, 0x2
0000000000002486         call       j_dcgettext                                 ; dcgettext
000000000000248b         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000002492         lea        rcx, qword [multipliers.7397]               ; "bEGKkMmPTYZ0"
0000000000002499         mov        r8, rax
000000000000249c         xor        r9d, r9d
000000000000249f         movabs     rdx, 0x7fffffffffffffff
00000000000024a9         mov        esi, 0x1
00000000000024ae         call       xdectoumax                                  ; xdectoumax
00000000000024b3         mov        qword [rsp+0x178+var_178], rax
00000000000024b7         jmp        loc_2098
00000000000024bc         align      64

                     loc_24c0:
00000000000024c0         lea        rsi, qword [aInvalidSuffixL]                ; argument "msgid" for method j_dcgettext, "invalid suffix length", CODE XREF=main+332
00000000000024c7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000024cc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000024ce         call       j_dcgettext                                 ; dcgettext
00000000000024d3         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
00000000000024da         lea        rcx, qword [aWrittenBySSAnd+27]             ; 0xa141
00000000000024e1         mov        r8, rax
00000000000024e4         xor        r9d, r9d
00000000000024e7         movabs     rdx, 0x1fffffffffffffff
00000000000024f1         xor        esi, esi
00000000000024f3         call       xdectoumax                                  ; xdectoumax
00000000000024f8         mov        qword [suffix_length], rax                  ; suffix_length
00000000000024ff         jmp        loc_2098
0000000000002504         align      8

                     loc_2508:
0000000000002508         lea        rsi, qword [aInvalidIoBlock]                ; argument "msgid" for method j_dcgettext, "invalid IO block size", CODE XREF=main+462
000000000000250f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002514         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002516         call       j_dcgettext                                 ; dcgettext
000000000000251b         mov        rdx, qword [rsp+0x178+var_170]
0000000000002520         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000002527         lea        rcx, qword [multipliers.7397]               ; "bEGKkMmPTYZ0"
000000000000252e         mov        r8, rax
0000000000002531         xor        r9d, r9d
0000000000002534         mov        esi, 0x1
0000000000002539         not        rdx
000000000000253c         call       xdectoumax                                  ; xdectoumax
0000000000002541         mov        qword [rsp+0x178+var_138], rax
0000000000002546         jmp        loc_2098
000000000000254b         align      16

                     loc_2550:
0000000000002550         add        r15d, 0xffffff80                            ; CODE XREF=main+451
0000000000002554         jne        loc_392c

000000000000255a         mov        byte [verbose], 0x1                         ; verbose
0000000000002561         jmp        loc_2098
0000000000002566         align      16

                     loc_2570:
0000000000002570         mov        rax, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+445
0000000000002577         mov        qword [filter_command], rax                 ; filter_command
000000000000257e         jmp        loc_2098

                     loc_2583:
0000000000002583         lea        rsi, qword [aInvalidNumberO+27]             ; argument "__s2" for method j_strncmp, 0x8d2a, CODE XREF=main+954
000000000000258a         mov        edx, 0x2                                    ; argument "__n" for method j_strncmp
000000000000258f         mov        rdi, r13                                    ; argument "__s1" for method j_strncmp
0000000000002592         mov        r12d, 0x5
0000000000002598         call       j_strncmp                                   ; strncmp
000000000000259d         test       eax, eax
000000000000259f         jne        loc_23b1

00000000000025a5         add        r13, 0x2
00000000000025a9         mov        r12d, 0x6
00000000000025af         mov        qword [optarg@@GLIBC_2.2.5], r13            ; optarg@@GLIBC_2.2.5
00000000000025b6         jmp        loc_23b1

                     loc_25bb:
00000000000025bb         lea        rax, qword [a0123456789abcd]                ; "0123456789abcdef", CODE XREF=main+256
00000000000025c2         mov        qword [suffix_alphabet], rax                ; suffix_alphabet

                     loc_25c9:
00000000000025c9         mov        r13, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+1667
00000000000025d0         test       r13, r13
00000000000025d3         je         loc_2098

00000000000025d9         xor        eax, eax
00000000000025db         or         rcx, 0xffffffffffffffff
00000000000025df         mov        rdi, r13
00000000000025e2         repne scasb al, byte [rdi]
00000000000025e4         mov        rdi, r13                                    ; argument "__s" for method j_strspn
00000000000025e7         mov        rsi, rcx
00000000000025ea         not        rsi
00000000000025ed         lea        rax, qword [rsi-1]
00000000000025f1         mov        rsi, qword [suffix_alphabet]                ; argument "__accept" for method j_strspn, suffix_alphabet
00000000000025f8         mov        qword [rsp+0x178+var_160], rax
00000000000025fd         call       j_strspn                                    ; strspn
0000000000002602         cmp        qword [rsp+0x178+var_160], rax
0000000000002607         jne        loc_3c04

000000000000260d         cmp        byte [r13], 0x30
0000000000002612         jne        loc_2640

0000000000002614         cmp        byte [r13+1], 0x0
0000000000002619         lea        rax, qword [r13+1]
000000000000261d         jne        loc_2631

000000000000261f         jmp        loc_2640
0000000000002621         align      8

                     loc_2628:
0000000000002628         add        rax, 0x1                                    ; CODE XREF=main+1630
000000000000262c         cmp        byte [rax], 0x0
000000000000262f         je         loc_2640

                     loc_2631:
0000000000002631         mov        qword [optarg@@GLIBC_2.2.5], rax            ; optarg@@GLIBC_2.2.5, CODE XREF=main+1597
0000000000002638         cmp        byte [rax], 0x30
000000000000263b         mov        r13, rax
000000000000263e         je         loc_2628

                     loc_2640:
0000000000002640         mov        qword [numeric_suffix_start], r13           ; numeric_suffix_start, CODE XREF=main+1586, main+1599, main+1615
0000000000002647         jmp        loc_2098

                     loc_264c:
000000000000264c         cmp        eax, 0x64                                   ; CODE XREF=main+347
000000000000264f         jne        loc_392c

0000000000002655         lea        rax, qword [a0123456789]                    ; "0123456789"
000000000000265c         mov        qword [suffix_alphabet], rax                ; suffix_alphabet
0000000000002663         jmp        loc_25c9

                     loc_2668:
0000000000002668         cmp        qword [rsp+0x178+var_168], 0x0              ; CODE XREF=main+236
000000000000266e         je         loc_267e

0000000000002670         cmp        qword [filter_command], 0x0                 ; filter_command
0000000000002678         jne        loc_390b

                     loc_267e:
000000000000267e         test       r12d, r12d                                  ; CODE XREF=main+1678
0000000000002681         je         loc_28da

0000000000002687         cmp        qword [rsp+0x178+var_178], 0x0
000000000000268c         je         loc_3c64

                     loc_2692:
0000000000002692         cmp        dword [eolchar], 0x0                        ; eolchar, CODE XREF=main+2312
0000000000002699         jns        loc_26a5

000000000000269b         mov        dword [eolchar], 0xa                        ; eolchar

                     loc_26a5:
00000000000026a5         mov        rdi, qword [numeric_suffix_start]           ; numeric_suffix_start, CODE XREF=main+1721
00000000000026ac         lea        r13d, dword [r12-5]
00000000000026b1         test       rdi, rdi
00000000000026b4         je         loc_2927

00000000000026ba         cmp        r13d, 0x2
00000000000026be         mov        byte [suffix_auto], 0x0                     ; suffix_auto
00000000000026c5         jbe        loc_29a6

                     loc_26cb:
00000000000026cb         xor        r14d, r14d                                  ; CODE XREF=main+2383
00000000000026ce         cmp        qword [suffix_length], 0x0                  ; suffix_length
00000000000026d6         jne        loc_299a

                     loc_26dc:
00000000000026dc         cmp        r14, 0x2                                    ; CODE XREF=main+2475
00000000000026e0         mov        eax, 0x2
00000000000026e5         cmovae     rax, r14
00000000000026e9         mov        qword [suffix_length], rax                  ; suffix_length

                     loc_26f0:
00000000000026f0         mov        eax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+2497
00000000000026f6         cmp        eax, ebp
00000000000026f8         jge        loc_273a

00000000000026fa         movsxd     rcx, eax
00000000000026fd         lea        edx, dword [rax+1]
0000000000002700         lea        rsi, qword [rcx*8]
0000000000002708         mov        rcx, qword [rbx+rcx*8]
000000000000270c         cmp        edx, ebp
000000000000270e         mov        dword [optind@@GLIBC_2.2.5], edx            ; optind@@GLIBC_2.2.5
0000000000002714         mov        qword [infile], rcx                         ; infile
000000000000271b         jge        loc_273a

000000000000271d         mov        rdx, qword [rbx+rsi+8]
0000000000002722         add        eax, 0x2
0000000000002725         cmp        eax, ebp
0000000000002727         mov        dword [optind@@GLIBC_2.2.5], eax            ; optind@@GLIBC_2.2.5
000000000000272d         mov        qword [outbase], rdx                        ; outbase
0000000000002734         jl         loc_3a62

                     loc_273a:
000000000000273a         mov        rdi, qword [numeric_suffix_start]           ; numeric_suffix_start, CODE XREF=main+1816, main+1851
0000000000002741         test       rdi, rdi
0000000000002744         je         loc_2771

0000000000002746         xor        eax, eax
0000000000002748         or         rcx, 0xffffffffffffffff
000000000000274c         mov        edx, 0x5
0000000000002751         repne scasb al, byte [rdi]
0000000000002753         lea        rsi, qword [aNumericalSuffi]                ; "numerical suffix start value is too large for the suffix length"
000000000000275a         mov        rax, rcx
000000000000275d         not        rax
0000000000002760         sub        rax, 0x1
0000000000002764         cmp        rax, qword [suffix_length]                  ; suffix_length
000000000000276b         ja         loc_3917

                     loc_2771:
0000000000002771         mov        rbx, qword [infile]                         ; infile, CODE XREF=main+1892
0000000000002778         lea        rsi, qword [aLibs+10]                       ; argument "__s2" for method j_strcmp, 0x9c12
000000000000277f         mov        rdi, rbx                                    ; argument "__s1" for method j_strcmp
0000000000002782         call       j_strcmp                                    ; strcmp
0000000000002787         test       eax, eax
0000000000002789         je         loc_27a1

000000000000278b         xor        ecx, ecx
000000000000278d         xor        edx, edx
000000000000278f         xor        edi, edi
0000000000002791         mov        rsi, rbx
0000000000002794         call       fd_reopen                                   ; fd_reopen
0000000000002799         test       eax, eax
000000000000279b         js         loc_3a1f

                     loc_27a1:
00000000000027a1         lea        rdx, qword [in_stat_buf]                    ; argument "__stat_buf" for method j___fxstat, in_stat_buf, CODE XREF=main+1961
00000000000027a8         xor        esi, esi                                    ; argument "__fildes" for method j___fxstat
00000000000027aa         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
00000000000027af         call       j___fxstat                                  ; __fxstat
00000000000027b4         test       eax, eax
00000000000027b6         jne        loc_39ec

00000000000027bc         cmp        qword [rsp+0x178+var_138], 0x0
00000000000027c2         jne        loc_27ed

00000000000027c4         mov        rsi, qword [qword_20c338]                   ; qword_20c338
00000000000027cb         movabs     rax, 0x1ffffffffffe0000
00000000000027d5         lea        rdx, qword [rsi-0x20000]
00000000000027dc         cmp        rdx, rax
00000000000027df         mov        eax, 0x20000
00000000000027e4         cmovbe     rax, rsi
00000000000027e8         mov        qword [rsp+0x178+var_138], rax

                     loc_27ed:
00000000000027ed         mov        rbx, qword [rsp+0x178+var_170]              ; CODE XREF=main+2018
00000000000027f2         mov        rdi, qword [rsp+0x178+var_138]
00000000000027f7         or         rbp, 0xffffffffffffffff
00000000000027fb         add        rdi, rbx                                    ; argument #1 for method xmalloc
00000000000027fe         call       xmalloc                                     ; xmalloc
0000000000002803         lea        rcx, qword [rax+rbx-1]
0000000000002808         xor        edx, edx
000000000000280a         mov        rax, rcx
000000000000280d         div        rbx
0000000000002810         movabs     rax, 0x7fffffffffffffff
000000000000281a         mov        qword [rsp+0x178+var_160], rax
000000000000281f         sub        rcx, rdx
0000000000002822         cmp        r13d, 0x1
0000000000002826         mov        qword [rsp+0x178+var_130], rcx
000000000000282b         jbe        loc_29ef

                     loc_2831:
0000000000002831         cmp        qword [filter_command], 0x0                 ; filter_command, CODE XREF=main+2716
0000000000002839         je         loc_288c

000000000000283b         lea        rdi, qword [newblocked]                     ; argument "__set" for method j_sigemptyset, newblocked
0000000000002842         call       j_sigemptyset                               ; sigemptyset
0000000000002847         lea        rdx, qword [rsp+0x178+var_F8]               ; argument "__oact" for method j_sigaction
000000000000284f         xor        esi, esi                                    ; argument "__act" for method j_sigaction
0000000000002851         mov        edi, 0xd                                    ; argument "__sig" for method j_sigaction
0000000000002856         call       j_sigaction                                 ; sigaction
000000000000285b         cmp        qword [rsp+0x178+var_F8], 0x1
0000000000002864         je         loc_2877

0000000000002866         lea        rdi, qword [newblocked]                     ; argument "__set" for method j_sigaddset, newblocked
000000000000286d         mov        esi, 0xd                                    ; argument "__signo" for method j_sigaddset
0000000000002872         call       j_sigaddset                                 ; sigaddset

                     loc_2877:
0000000000002877         lea        rdx, qword [oldblocked]                     ; argument "__oset" for method j_sigprocmask, oldblocked, CODE XREF=main+2180
000000000000287e         lea        rsi, qword [newblocked]                     ; argument "__set" for method j_sigprocmask, newblocked
0000000000002885         xor        edi, edi                                    ; argument "__how" for method j_sigprocmask
0000000000002887         call       j_sigprocmask                               ; sigprocmask

                     loc_288c:
000000000000288c         sub        r12d, 0x2                                   ; CODE XREF=main+2137
0000000000002890         cmp        r12d, 0x5
0000000000002894         ja         loc_348c

000000000000289a         lea        rdx, qword [switch_table_9b50]              ; switch_table_9b50
00000000000028a1         movsxd     rax, dword [rdx+r12*4]
00000000000028a5         add        rax, rdx
00000000000028a8         jmp        rax                                         ; switch statement using table at 0x9b50, with 6 cases, 0x2a81,0x2b29,0x2cf9,0x2ee7,0x30ca

                     loc_28aa:
00000000000028aa         call       j_dcgettext                                 ; dcgettext, CODE XREF=main+1014
00000000000028af         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
00000000000028b6         lea        rcx, qword [aWrittenBySSAnd+27]             ; 0xa141
00000000000028bd         mov        r8, rax
00000000000028c0         xor        r9d, r9d
00000000000028c3         or         rdx, 0xffffffffffffffff
00000000000028c7         mov        esi, 0x1
00000000000028cc         call       xdectoumax                                  ; xdectoumax
00000000000028d1         mov        qword [rsp+0x178+var_178], rax
00000000000028d5         jmp        loc_2098

                     loc_28da:
00000000000028da         mov        qword [rsp+0x178+var_178], 0x3e8            ; CODE XREF=main+1697
00000000000028e2         mov        r12d, 0x3
00000000000028e8         jmp        loc_2692

                     loc_28ed:
00000000000028ed         mov        rdi, qword [rsp+0x178+var_178]              ; CODE XREF=main+642, main+651
00000000000028f1         movabs     rax, 0x1999999999999999
00000000000028fb         cmp        rdi, rax
00000000000028fe         ja         loc_3b63

0000000000002904         imul       rax, rdi, 0xa
0000000000002908         lea        edx, dword [r15-0x30]
000000000000290c         movsxd     rdx, edx
000000000000290f         add        rax, rdx
0000000000002912         cmp        rax, rdi
0000000000002915         jb         loc_3b63

000000000000291b         mov        qword [rsp+0x178+var_178], rax
000000000000291f         mov        r14d, r13d
0000000000002922         jmp        loc_2098

                     loc_2927:
0000000000002927         cmp        r13d, 0x2                                   ; CODE XREF=main+1748
000000000000292b         mov        rdx, qword [rsp+0x178+var_178]
000000000000292f         ja         loc_26cb

                     loc_2935:
0000000000002935         mov        rdi, qword [suffix_alphabet]                ; suffix_alphabet, CODE XREF=main+2535, main+2570, main+6263
000000000000293c         xor        eax, eax
000000000000293e         or         rcx, 0xffffffffffffffff
0000000000002942         repne scasb al, byte [rdi]
0000000000002944         mov        rax, rdx
0000000000002947         xor        edx, edx
0000000000002949         not        rcx
000000000000294c         sub        rcx, 0x1
0000000000002950         div        rcx
0000000000002953         test       rdx, rdx
0000000000002956         setne      dil
000000000000295a         test       rax, rax
000000000000295d         je         loc_2972

000000000000295f         xor        esi, esi

                     loc_2961:
0000000000002961         xor        edx, edx                                    ; CODE XREF=main+2445
0000000000002963         add        rsi, 0x1
0000000000002967         div        rcx
000000000000296a         test       rax, rax
000000000000296d         jne        loc_2961

000000000000296f         mov        rax, rsi

                     loc_2972:
0000000000002972         movzx      edi, dil                                    ; CODE XREF=main+2429
0000000000002976         mov        byte [suffix_auto], 0x0                     ; suffix_auto
000000000000297d         lea        r14, qword [rdi+rax]
0000000000002981         mov        rax, qword [suffix_length]                  ; suffix_length
0000000000002988         test       rax, rax
000000000000298b         je         loc_26dc

0000000000002991         cmp        r14, rax
0000000000002994         ja         loc_3b3c

                     loc_299a:
000000000000299a         mov        byte [suffix_auto], 0x0                     ; suffix_auto, CODE XREF=main+1782
00000000000029a1         jmp        loc_26f0

                     loc_29a6:
00000000000029a6         lea        rcx, qword [rsp+0x178+var_100]              ; CODE XREF=main+1765
00000000000029ab         lea        r8, qword [aWrittenBySSAnd+27]              ; 0xa141
00000000000029b2         mov        edx, 0xa
00000000000029b7         xor        esi, esi
00000000000029b9         call       xstrtoumax                                  ; xstrtoumax
00000000000029be         mov        rcx, qword [rsp+0x178+var_178]
00000000000029c2         test       eax, eax
00000000000029c4         mov        rdx, rcx
00000000000029c7         jne        loc_2935

00000000000029cd         mov        rdx, qword [rsp+0x178+var_100]
00000000000029d2         mov        rax, rcx
00000000000029d5         not        rax
00000000000029d8         cmp        rax, rdx
00000000000029db         jb         loc_29e6

00000000000029dd         cmp        rdx, rcx
00000000000029e0         jb         loc_3854

                     loc_29e6:
00000000000029e6         mov        rdx, qword [rsp+0x178+var_178]              ; CODE XREF=main+2555
00000000000029ea         jmp        loc_2935

                     loc_29ef:
00000000000029ef         xor        esi, esi                                    ; argument "__offset" for method j_lseek, CODE XREF=main+2123
00000000000029f1         xor        edi, edi                                    ; argument "__fd" for method j_lseek
00000000000029f3         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
00000000000029f8         call       j_lseek                                     ; lseek
00000000000029fd         xor        r13d, r13d
0000000000002a00         test       rax, rax
0000000000002a03         mov        rbx, rax
0000000000002a06         js         loc_2f6a

0000000000002a0c         mov        r14, qword [rsp+0x178+var_138]
0000000000002a11         mov        r15, qword [rsp+0x178+var_130]
0000000000002a16         jmp        loc_2a33

                     loc_2a18:
0000000000002a18         cmp        rax, 0xffffffffffffffff                     ; CODE XREF=main+2663
0000000000002a1c         je         loc_2f7a

0000000000002a22         lea        rbp, qword [r13+rax]
0000000000002a27         cmp        r14, rbp
0000000000002a2a         mov        r13, rbp
0000000000002a2d         jbe        loc_37b5

                     loc_2a33:
0000000000002a33         mov        rdx, r14                                    ; CODE XREF=main+2614
0000000000002a36         lea        rsi, qword [r15+r13]
0000000000002a3a         xor        edi, edi
0000000000002a3c         sub        rdx, r13
0000000000002a3f         call       safe_read                                   ; safe_read
0000000000002a44         test       rax, rax
0000000000002a47         jne        loc_2a18

                     loc_2a49:
0000000000002a49         test       r13, r13                                    ; CODE XREF=main+6220
0000000000002a4c         js         loc_2f7a

0000000000002a52         mov        rax, qword [rsp+0x178+var_138]
0000000000002a57         cmp        r13, rax
0000000000002a5a         mov        rbp, rax
0000000000002a5d         cmovbe     rbp, r13
0000000000002a61         cmp        qword [rsp+0x178+var_178], 0x0
0000000000002a66         js         loc_3ab7

0000000000002a6c         mov        rax, qword [rsp+0x178+var_178]
0000000000002a70         cmp        r13, rax
0000000000002a73         cmovb      r13, rax
0000000000002a77         mov        qword [rsp+0x178+var_160], r13
0000000000002a7c         jmp        loc_2831

                     loc_2a81:
0000000000002a81         mov        r15, qword [rsp+0x178+var_178]              ; case 2, CODE XREF=main+2248
0000000000002a85         xor        ebx, ebx
0000000000002a87         mov        r13d, 0x1

                     loc_2a8d:
0000000000002a8d         mov        rdx, qword [rsp+0x178+var_138]              ; CODE XREF=main+4256
0000000000002a92         mov        rsi, qword [rsp+0x178+var_130]
0000000000002a97         xor        edi, edi
0000000000002a99         call       safe_read                                   ; safe_read
0000000000002a9e         mov        qword [rsp+0x178+var_170], rax
0000000000002aa3         add        rax, 0x1
0000000000002aa7         je         loc_395a

0000000000002aad         mov        rax, qword [rsp+0x178+var_130]
0000000000002ab2         mov        rbp, qword [rsp+0x178+var_170]
0000000000002ab7         mov        r12d, dword [eolchar]                       ; eolchar
0000000000002abe         add        rbp, rax
0000000000002ac1         mov        r14, rax
0000000000002ac4         mov        rcx, rax
0000000000002ac7         mov        byte [rbp], r12b
0000000000002acb         nop        dword [rax+rax]

                     loc_2ad0:
0000000000002ad0         mov        rdx, rbp                                    ; CODE XREF=main+2841, main+2887
0000000000002ad3         mov        esi, r12d                                   ; argument "__c" for method j_memchr
0000000000002ad6         mov        rdi, rcx                                    ; argument "__s" for method j_memchr
0000000000002ad9         sub        rdx, rcx
0000000000002adc         add        rdx, 0x1                                    ; argument "__n" for method j_memchr
0000000000002ae0         call       j_memchr                                    ; memchr
0000000000002ae5         cmp        rbp, rax
0000000000002ae8         je         loc_3060

0000000000002aee         add        rbx, 0x1
0000000000002af2         lea        rcx, qword [rax+1]
0000000000002af6         cmp        rbx, r15
0000000000002af9         jb         loc_2ad0

0000000000002afb         mov        rdx, rcx
0000000000002afe         movzx      edi, r13b                                   ; argument #1 for method cwrite
0000000000002b02         mov        rsi, r14                                    ; argument #2 for method cwrite
0000000000002b05         sub        rdx, r14                                    ; argument #3 for method cwrite
0000000000002b08         mov        qword [rsp+0x178+var_178], rcx
0000000000002b0c         xor        ebx, ebx
0000000000002b0e         call       cwrite                                      ; cwrite
0000000000002b13         mov        rcx, qword [rsp+0x178+var_178]
0000000000002b17         mov        r12d, dword [eolchar]                       ; eolchar
0000000000002b1e         mov        r13d, 0x1
0000000000002b24         mov        r14, rcx
0000000000002b27         jmp        loc_2ad0

                     loc_2b29:
0000000000002b29         mov        byte [rsp+0x178+var_168], 0x0               ; case 0, CODE XREF=main+2248
0000000000002b2e         mov        qword [rsp+0x178+var_160], 0x0
0000000000002b37         xor        r12d, r12d
0000000000002b3a         mov        qword [rsp+0x178+var_170], 0x0
0000000000002b43         xor        r13d, r13d
0000000000002b46         nop        word [cs:rax+rax]

                     loc_2b50:
0000000000002b50         mov        rdx, qword [rsp+0x178+var_138]              ; CODE XREF=main+3081, main+4206
0000000000002b55         mov        rsi, qword [rsp+0x178+var_130]
0000000000002b5a         xor        edi, edi
0000000000002b5c         call       safe_read                                   ; safe_read
0000000000002b61         cmp        rax, 0xffffffffffffffff
0000000000002b65         mov        rbp, rax
0000000000002b68         je         loc_39b9

0000000000002b6e         test       rax, rax
0000000000002b71         je         loc_30b2

0000000000002b77         mov        rbx, qword [rsp+0x178+var_130]
0000000000002b7c         jmp        loc_2bef
0000000000002b7e         align      128

                     loc_2b80:
0000000000002b80         mov        rdx, rcx                                    ; argument "__n" for method j_memrchr, CODE XREF=main+3109
0000000000002b83         mov        rdi, rbx                                    ; argument "__s" for method j_memrchr
0000000000002b86         lea        r14, qword [rbx+rcx-1]
0000000000002b8b         call       j_memrchr                                   ; memrchr
0000000000002b90         test       r12, r12
0000000000002b93         mov        r8, rax
0000000000002b96         je         loc_2c28

                     loc_2b9c:
0000000000002b9c         test       r13, r13                                    ; CODE XREF=main+3138
0000000000002b9f         sete       dil
0000000000002ba3         test       r8, r8
0000000000002ba6         jne        loc_2fe8

0000000000002bac         test       dil, dil
0000000000002baf         jne        loc_2fe8

                     loc_2bb5:
0000000000002bb5         cmp        byte [rsp+0x178+var_168], 0x0               ; CODE XREF=main+4219
0000000000002bba         jne        loc_2c69

0000000000002bc0         xor        edi, edi
0000000000002bc2         test       r13, r13
0000000000002bc5         sete       dil
0000000000002bc9         test       r14, r14
0000000000002bcc         je         loc_3040

0000000000002bd2         mov        rsi, rbx                                    ; argument #2 for method cwrite
0000000000002bd5         mov        rdx, r15                                    ; argument #3 for method cwrite
0000000000002bd8         sub        rbp, r15
0000000000002bdb         add        rbx, r15
0000000000002bde         xor        r13d, r13d
0000000000002be1         call       cwrite                                      ; cwrite

                     loc_2be6:
0000000000002be6         test       rbp, rbp                                    ; CODE XREF=main+3348
0000000000002be9         je         loc_2b50

                     loc_2bef:
0000000000002bef         mov        rcx, qword [rsp+0x178+var_178]              ; CODE XREF=main+2972
0000000000002bf3         mov        esi, dword [eolchar]                        ; eolchar
0000000000002bf9         sub        rcx, r13
0000000000002bfc         sub        rcx, r12
0000000000002bff         cmp        rbp, rcx
0000000000002c02         mov        r15, rcx
0000000000002c05         jae        loc_2b80

0000000000002c0b         mov        rdx, rbp                                    ; argument "__n" for method j_memrchr
0000000000002c0e         mov        rdi, rbx                                    ; argument "__s" for method j_memrchr
0000000000002c11         xor        r14d, r14d
0000000000002c14         call       j_memrchr                                   ; memrchr
0000000000002c19         xor        r15d, r15d
0000000000002c1c         test       r12, r12
0000000000002c1f         mov        r8, rax
0000000000002c22         jne        loc_2b9c

                     loc_2c28:
0000000000002c28         test       r8, r8                                      ; CODE XREF=main+2998, main+4147, main+4184
0000000000002c2b         je         loc_3058

0000000000002c31         sub        r8, rbx                                     ; argument #5 for method cwrite
0000000000002c34         xor        edi, edi
0000000000002c36         test       r13, r13
0000000000002c39         lea        r12, qword [r8+1]
0000000000002c3d         sete       dil                                         ; argument #1 for method cwrite
0000000000002c41         mov        rsi, rbx                                    ; argument #2 for method cwrite
0000000000002c44         mov        rdx, r12                                    ; argument #3 for method cwrite
0000000000002c47         add        r13, r12
0000000000002c4a         sub        rbp, r12
0000000000002c4d         call       cwrite                                      ; cwrite
0000000000002c52         add        rbx, r12
0000000000002c55         test       r14, r14
0000000000002c58         je         loc_2fc0

0000000000002c5e         sub        r15, r12
0000000000002c61         mov        byte [rsp+0x178+var_168], 0x1
0000000000002c66         xor        r12d, r12d

                     loc_2c69:
0000000000002c69         test       r14, r14                                    ; CODE XREF=main+3034
0000000000002c6c         je         loc_2fc8

0000000000002c72         test       r15, r15
0000000000002c75         je         loc_2fc8

                     loc_2c7b:
0000000000002c7b         mov        rcx, qword [rsp+0x178+var_160]              ; CODE XREF=main+4093
0000000000002c80         mov        rax, rcx
0000000000002c83         sub        rax, r12
0000000000002c86         cmp        rax, r15
0000000000002c89         jae        loc_2cb9

0000000000002c8b         mov        rsi, qword [rsp+0x178+var_138]
0000000000002c90         mov        rax, rsi
0000000000002c93         not        rax
0000000000002c96         cmp        rax, rcx
0000000000002c99         jb         loc_3936

0000000000002c9f         mov        rdi, qword [rsp+0x178+var_170]
0000000000002ca4         add        rcx, rsi
0000000000002ca7         mov        rsi, rcx
0000000000002caa         mov        qword [rsp+0x178+var_160], rcx
0000000000002caf         call       xrealloc                                    ; xrealloc
0000000000002cb4         mov        qword [rsp+0x178+var_170], rax

                     loc_2cb9:
0000000000002cb9         mov        rax, qword [rsp+0x178+var_170]              ; CODE XREF=main+3241
0000000000002cbe         mov        rsi, rbx                                    ; argument "__src" for method j_memcpy
0000000000002cc1         mov        rdx, r15                                    ; argument "__n" for method j_memcpy
0000000000002cc4         sub        rbp, r15
0000000000002cc7         add        rbx, r15
0000000000002cca         lea        rdi, qword [rax+r12]                        ; argument "__dest" for method j_memcpy
0000000000002cce         add        r12, r15
0000000000002cd1         call       j_memcpy                                    ; memcpy

                     loc_2cd6:
0000000000002cd6         movzx      edi, byte [rsp+0x178+var_168]               ; CODE XREF=main+4075, main+4084
0000000000002cdb         test       r14, r14
0000000000002cde         mov        eax, 0x0
0000000000002ce3         cmovne     edi, eax
0000000000002ce6         mov        eax, 0x0
0000000000002ceb         mov        byte [rsp+0x178+var_168], dil
0000000000002cf0         cmovne     r13, rax
0000000000002cf4         jmp        loc_2be6

                     loc_2cf9:
0000000000002cf9         mov        rax, qword [rsp+0x178+var_178]              ; case 4, CODE XREF=main+2248
0000000000002cfd         cmp        qword [rsp+0x178+var_168], rax
0000000000002d02         ja         loc_3ba8

0000000000002d08         cmp        qword [rsp+0x178+var_160], rax
0000000000002d0d         jb         loc_3ba8

0000000000002d13         mov        rax, qword [rsp+0x178+var_160]
0000000000002d18         xor        edx, edx
0000000000002d1a         mov        rsi, qword [rsp+0x178+var_168]
0000000000002d1f         div        qword [rsp+0x178+var_178]
0000000000002d23         cmp        rsi, 0x1
0000000000002d27         mov        qword [rsp+0x178+var_170], rax
0000000000002d2c         jbe        loc_374c

0000000000002d32         lea        r12, qword [rsi-1]
0000000000002d36         imul       rax, r12
0000000000002d3a         mov        rbx, rax
0000000000002d3d         sub        rbx, 0x1
0000000000002d41         cmp        rbp, rbx
0000000000002d44         mov        r13, rbx
0000000000002d47         jbe        loc_36f5

0000000000002d4d         mov        rdi, qword [rsp+0x178+var_130]              ; argument "__dest" for method j_memmove
0000000000002d52         sub        rbp, rbx
0000000000002d55         mov        rdx, rbp                                    ; argument "__n" for method j_memmove
0000000000002d58         lea        rsi, qword [rdi+rbx]                        ; argument "__src" for method j_memmove
0000000000002d5c         call       j_memmove                                   ; memmove
0000000000002d61         mov        qword [rsp+0x178+var_158], rbx

                     loc_2d66:
0000000000002d66         mov        rax, qword [rsp+0x178+var_160]              ; CODE XREF=main+5939, main+6020
0000000000002d6b         mov        rbx, qword [rsp+0x178+var_168]
0000000000002d70         mov        byte [rsp+0x178+var_111], 0x0
0000000000002d75         mov        byte [rsp+0x178+var_128], 0x1
0000000000002d7a         sub        rax, 0x1
0000000000002d7e         mov        qword [rsp+0x178+var_110], rax

                     loc_2d83:
0000000000002d83         mov        rdi, qword [rsp+0x178+var_158]              ; CODE XREF=main+6385
0000000000002d88         cmp        qword [rsp+0x178+var_160], rdi
0000000000002d8d         jle        loc_38d6

0000000000002d93         cmp        rbp, 0xffffffffffffffff
0000000000002d97         je         loc_385c

                     loc_2d9d:
0000000000002d9d         test       rbp, rbp                                    ; CODE XREF=main+6292
0000000000002da0         je         loc_38d6

0000000000002da6         mov        rax, qword [rsp+0x178+var_160]
0000000000002dab         sub        rax, qword [rsp+0x178+var_158]
0000000000002db0         mov        r8, qword [rsp+0x178+var_130]
0000000000002db5         mov        byte [rsp+0x178+var_111], 0x0
0000000000002dba         cmp        rax, rbp
0000000000002dbd         mov        r14, r8
0000000000002dc0         cmovbe     rbp, rax
0000000000002dc4         add        r14, rbp
0000000000002dc7         mov        qword [rsp+0x178+var_140], rbp
0000000000002dcc         mov        rbp, qword [rsp+0x178+var_178]
0000000000002dd0         mov        r15, r14
0000000000002dd3         mov        r14, qword [rsp+0x178+var_110]

                     loc_2dd8:
0000000000002dd8         or         rax, 0xffffffffffffffff                     ; CODE XREF=main+4301
0000000000002ddc         cmp        r15, r8
0000000000002ddf         je         loc_38ce

0000000000002de5         mov        rax, r13
0000000000002de8         sub        rax, qword [rsp+0x178+var_158]
0000000000002ded         mov        rsi, qword [rsp+0x178+var_140]
0000000000002df2         mov        edx, 0x0
0000000000002df7         mov        qword [rsp+0x178+var_150], r8
0000000000002dfc         cmovs      rax, rdx
0000000000002e00         cmp        rax, rsi
0000000000002e03         cmova      rax, rsi
0000000000002e07         sub        rsi, rax
0000000000002e0a         lea        rdi, qword [r8+rax]                         ; argument "__s" for method j_memchr
0000000000002e0e         mov        rdx, rsi                                    ; argument "__n" for method j_memchr
0000000000002e11         mov        esi, dword [eolchar]                        ; argument "__c" for method j_memchr, eolchar
0000000000002e17         call       j_memchr                                    ; memchr
0000000000002e1c         test       rax, rax
0000000000002e1f         mov        r8, qword [rsp+0x178+var_150]
0000000000002e24         je         loc_34ab

0000000000002e2a         lea        r9, qword [rax+1]
0000000000002e2e         mov        byte [rsp+0x178+var_148], 0x1

                     loc_2e33:
0000000000002e33         mov        rax, r9                                     ; CODE XREF=main+5331
0000000000002e36         sub        rax, r8
0000000000002e39         cmp        r12, rbx
0000000000002e3c         mov        qword [rsp+0x178+var_150], rax
0000000000002e41         je         loc_34d9

0000000000002e47         test       rbx, rbx
0000000000002e4a         je         loc_34b8

                     loc_2e50:
0000000000002e50         mov        rcx, qword [rsp+0x178+var_158]              ; CODE XREF=main+5364, main+5400
0000000000002e55         add        rcx, qword [rsp+0x178+var_150]
0000000000002e5a         movzx      r8d, byte [rsp+0x178+var_148]
0000000000002e60         mov        qword [rsp+0x178+var_158], rcx
0000000000002e65         nop        dword [rax]

                     loc_2e68:
0000000000002e68         cmp        rcx, r13                                    ; CODE XREF=main+3798, main+3845, main+4270
0000000000002e6b         jg         loc_2e76

0000000000002e6d         test       r8b, r8b
0000000000002e70         je         loc_3097

                     loc_2e76:
0000000000002e76         mov        eax, r8d                                    ; CODE XREF=main+3723
0000000000002e79         xor        eax, 0x1
0000000000002e7c         cmp        r15, r9
0000000000002e7f         sete       dl
0000000000002e82         and        al, dl
0000000000002e84         jne        loc_3093

0000000000002e8a         add        r12, 0x1
0000000000002e8e         test       rbx, rbx
0000000000002e91         setne      dl
0000000000002e94         cmp        r12, rbx
0000000000002e97         seta       al
0000000000002e9a         test       dl, al
0000000000002e9c         jne        loc_2f16

0000000000002e9e         add        r13, qword [rsp+0x178+var_170]
0000000000002ea3         cmp        r12, rbp
0000000000002ea6         cmove      r13, r14
0000000000002eaa         cmp        rcx, r13
0000000000002ead         jle        loc_308b

0000000000002eb3         test       rbx, rbx
0000000000002eb6         jne        loc_2e68

0000000000002eb8         xor        edx, edx                                    ; argument #3 for method cwrite
0000000000002eba         xor        esi, esi                                    ; argument #2 for method cwrite
0000000000002ebc         mov        edi, 0x1                                    ; argument #1 for method cwrite
0000000000002ec1         mov        byte [rsp+0x178+var_112], r8b
0000000000002ec6         mov        qword [rsp+0x178+var_120], rcx
0000000000002ecb         mov        qword [rsp+0x178+var_128], r9
0000000000002ed0         call       cwrite                                      ; cwrite
0000000000002ed5         mov        r9, qword [rsp+0x178+var_128]
0000000000002eda         mov        rcx, qword [rsp+0x178+var_120]
0000000000002edf         movzx      r8d, byte [rsp+0x178+var_112]
0000000000002ee5         jmp        loc_2e68

                     loc_2ee7:
0000000000002ee7         cmp        qword [rsp+0x178+var_168], 0x0              ; case 3, CODE XREF=main+2248
0000000000002eed         jne        loc_358f

0000000000002ef3         mov        rax, qword [rsp+0x178+var_160]
0000000000002ef8         mov        r8, qword [rsp+0x178+var_178]               ; argument #5 for method bytes_split
0000000000002efc         xor        edx, edx
0000000000002efe         mov        rsi, qword [rsp+0x178+var_130]              ; argument #2 for method bytes_split
0000000000002f03         mov        rcx, rbp                                    ; argument #4 for method bytes_split
0000000000002f06         div        r8
0000000000002f09         mov        rdx, qword [rsp+0x178+var_138]              ; argument #3 for method bytes_split
0000000000002f0e         mov        rdi, rax                                    ; argument #1 for method bytes_split
0000000000002f11         call       bytes_split                                 ; bytes_split

                     loc_2f16:
0000000000002f16         xor        edi, edi                                    ; argument "__fd" for method j_close, CODE XREF=main+3772, main+4262, main+4325, main+5318, main+5546, main+5672, main+5687, main+6355, main+6409, main+6438
0000000000002f18         call       j_close                                     ; close
0000000000002f1d         test       eax, eax
0000000000002f1f         jne        loc_3b09

0000000000002f25         mov        rcx, qword [outfile]                        ; argument #4 for method closeout, outfile
0000000000002f2c         mov        edx, dword [filter_pid]                     ; argument #3 for method closeout, filter_pid
0000000000002f32         xor        edi, edi                                    ; argument #1 for method closeout
0000000000002f34         mov        esi, dword [output_desc]                    ; argument #2 for method closeout, output_desc
0000000000002f3a         call       closeout                                    ; closeout
0000000000002f3f         xor        eax, eax
0000000000002f41         mov        rcx, qword [rsp+0x178+var_40]
0000000000002f49         xor        rcx, qword [fs:0x28]
0000000000002f52         jne        loc_3b04

0000000000002f58         add        rsp, 0x148
0000000000002f5f         pop        rbx
0000000000002f60         pop        rbp
0000000000002f61         pop        r12
0000000000002f63         pop        r13
0000000000002f65         pop        r14
0000000000002f67         pop        r15
0000000000002f69         ret
                        ; endp

                     loc_2f6a:
0000000000002f6a         call       j___errno_location                          ; __errno_location, CODE XREF=main+2598
0000000000002f6f         cmp        dword [rax], 0x1d
0000000000002f72         jne        loc_2f7a

0000000000002f74         mov        dword [rax], 0x0

                     loc_2f7a:
0000000000002f7a         mov        rdx, qword [infile]                         ; argument #3 for method quotearg_n_style_colon, infile, CODE XREF=main+2620, main+2668, main+3986, main+6159, main+6185, main+6237
0000000000002f81         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
0000000000002f86         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
0000000000002f88         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002f8d         lea        rsi, qword [aSCannotDetermi]                ; argument "msgid" for method j_dcgettext, "%s: cannot determine file size"
0000000000002f94         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002f99         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002f9b         mov        rbp, rax
0000000000002f9e         call       j_dcgettext                                 ; dcgettext
0000000000002fa3         mov        rbx, rax
0000000000002fa6         call       j___errno_location                          ; __errno_location
0000000000002fab         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002fad         mov        rcx, rbp
0000000000002fb0         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000002fb3         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002fb8         xor        eax, eax
0000000000002fba         call       j_error                                     ; error
0000000000002fbf         nop

                     loc_2fc0:
0000000000002fc0         xor        r12d, r12d                                  ; CODE XREF=main+3192
0000000000002fc3         mov        byte [rsp+0x178+var_168], 0x1

                     loc_2fc8:
0000000000002fc8         test       r14, r14                                    ; CODE XREF=main+3212, main+3221
0000000000002fcb         jne        loc_2cd6

0000000000002fd1         test       rbp, rbp
0000000000002fd4         je         loc_2cd6

0000000000002fda         mov        r15, rbp
0000000000002fdd         jmp        loc_2c7b
0000000000002fe2         align      8

                     loc_2fe8:
0000000000002fe8         mov        rsi, qword [rsp+0x178+var_170]              ; argument #2 for method cwrite, CODE XREF=main+3014, main+3023
0000000000002fed         movzx      edi, dil                                    ; argument #1 for method cwrite
0000000000002ff1         mov        rdx, r12                                    ; argument #3 for method cwrite
0000000000002ff4         mov        qword [rsp+0x178+var_158], r8
0000000000002ff9         add        r13, r12
0000000000002ffc         call       cwrite                                      ; cwrite
0000000000003001         mov        rax, qword [rsp+0x178+var_138]
0000000000003006         mov        r8, qword [rsp+0x178+var_158]
000000000000300b         cmp        rax, r12
000000000000300e         mov        qword [rsp+0x178+var_160], rax
0000000000003013         jae        loc_2c28

0000000000003019         mov        rdi, qword [rsp+0x178+var_170]
000000000000301e         mov        r12, rax
0000000000003021         mov        rsi, rax
0000000000003024         call       xrealloc                                    ; xrealloc
0000000000003029         mov        qword [rsp+0x178+var_160], r12
000000000000302e         mov        qword [rsp+0x178+var_170], rax
0000000000003033         mov        r8, qword [rsp+0x178+var_158]
0000000000003038         jmp        loc_2c28
000000000000303d         align      64

                     loc_3040:
0000000000003040         mov        rdx, rbp                                    ; argument #3 for method cwrite, CODE XREF=main+3052
0000000000003043         mov        rsi, rbx                                    ; argument #2 for method cwrite
0000000000003046         add        r13, rbp
0000000000003049         call       cwrite                                      ; cwrite
000000000000304e         jmp        loc_2b50
0000000000003053         align      8

                     loc_3058:
0000000000003058         xor        r12d, r12d                                  ; CODE XREF=main+3147
000000000000305b         jmp        loc_2bb5

                     loc_3060:
0000000000003060         cmp        rbp, r14                                    ; CODE XREF=main+2824
0000000000003063         je         loc_307a

0000000000003065         mov        rdx, rbp
0000000000003068         movzx      edi, r13b                                   ; argument #1 for method cwrite
000000000000306c         mov        rsi, r14                                    ; argument #2 for method cwrite
000000000000306f         sub        rdx, r14                                    ; argument #3 for method cwrite
0000000000003072         xor        r13d, r13d
0000000000003075         call       cwrite                                      ; cwrite

                     loc_307a:
000000000000307a         cmp        qword [rsp+0x178+var_170], 0x0              ; CODE XREF=main+4227
0000000000003080         jne        loc_2a8d

0000000000003086         jmp        loc_2f16

                     loc_308b:
000000000000308b         xor        r8d, r8d                                    ; CODE XREF=main+3789
000000000000308e         jmp        loc_2e68

                     loc_3093:
0000000000003093         mov        byte [rsp+0x178+var_111], al                ; CODE XREF=main+3748

                     loc_3097:
0000000000003097         movzx      eax, byte [rsp+0x178+var_148]               ; CODE XREF=main+3728
000000000000309c         mov        rcx, qword [rsp+0x178+var_150]
00000000000030a1         mov        r8, r9
00000000000030a4         sub        qword [rsp+0x178+var_140], rcx
00000000000030a9         mov        byte [rsp+0x178+var_128], al
00000000000030ad         jmp        loc_2dd8

                     loc_30b2:
00000000000030b2         test       r12, r12                                    ; CODE XREF=main+2961
00000000000030b5         jne        loc_36da

                     loc_30bb:
00000000000030bb         mov        rdi, qword [rsp+0x178+var_170]              ; argument "__ptr" for method j_free, CODE XREF=main+5904
00000000000030c0         call       j_free                                      ; free
00000000000030c5         jmp        loc_2f16

                     loc_30ca:
00000000000030ca         cmp        qword [rsp+0x178+var_168], 0x0              ; case 5, CODE XREF=main+2248
00000000000030d0         jne        loc_314a

00000000000030d2         mov        edx, 0x20
00000000000030d7         xor        ecx, ecx
00000000000030d9         mov        rax, rdx
00000000000030dc         mul        qword [rsp+0x178+var_178]
00000000000030e0         jo         loc_3bfa

                     loc_30e6:
00000000000030e6         test       rax, rax                                    ; CODE XREF=main+7199
00000000000030e9         js         loc_3936

00000000000030ef         test       rcx, rcx
00000000000030f2         jne        loc_3936

00000000000030f8         mov        r12, qword [rsp+0x178+var_178]
00000000000030fc         xor        ebp, ebp
00000000000030fe         mov        rdi, r12
0000000000003101         shl        rdi, 0x5                                    ; argument #1 for method xmalloc
0000000000003105         call       xmalloc                                     ; xmalloc
000000000000310a         mov        qword [rsp+0x178+var_148], rax
000000000000310f         mov        rbx, rax

                     loc_3112:
0000000000003112         call       next_file_name                              ; next_file_name, CODE XREF=main+4456
0000000000003117         mov        rdi, qword [outfile]                        ; outfile
000000000000311e         add        rbp, 0x1
0000000000003122         add        rbx, 0x20
0000000000003126         call       xstrdup                                     ; xstrdup
000000000000312b         mov        dword [rbx-0x18], 0xffffffff
0000000000003132         mov        qword [rbx-0x20], rax
0000000000003136         mov        qword [rbx-0x10], 0x0
000000000000313e         mov        dword [rbx-8], 0x0
0000000000003145         cmp        rbp, r12
0000000000003148         jne        loc_3112

                     loc_314a:
000000000000314a         mov        qword [rsp+0x178+var_170], 0x1              ; CODE XREF=main+4336
0000000000003153         mov        qword [rsp+0x178+var_160], 0x0
000000000000315c         mov        byte [rsp+0x178+var_140], 0x0
0000000000003161         mov        byte [rsp+0x178+var_150], 0x0
0000000000003166         mov        byte [rsp+0x178+var_128], 0x0

                     loc_316b:
000000000000316b         mov        rdx, qword [rsp+0x178+var_138]              ; CODE XREF=main+4539, main+4602
0000000000003170         mov        rsi, qword [rsp+0x178+var_130]
0000000000003175         xor        edi, edi
0000000000003177         call       safe_read                                   ; safe_read
000000000000317c         cmp        rax, 0xffffffffffffffff
0000000000003180         je         loc_3bc7

0000000000003186         test       rax, rax
0000000000003189         je         loc_38ad

000000000000318f         mov        rdi, qword [rsp+0x178+var_130]
0000000000003194         lea        rbp, qword [rdi+rax]
0000000000003198         cmp        rdi, rbp
000000000000319b         je         loc_316b

000000000000319d         mov        r13, rdi
00000000000031a0         jmp        loc_31dc
00000000000031a2         align      8

                     loc_31a8:
00000000000031a8         cmp        qword [rsp+0x178+var_170], rax              ; CODE XREF=main+4660
00000000000031ad         je         loc_3300

                     loc_31b3:
00000000000031b3         test       r15b, r15b                                  ; CODE XREF=main+4936, main+5235
00000000000031b6         je         loc_31d4

00000000000031b8         mov        rdx, qword [rsp+0x178+var_170]
00000000000031bd         cmp        rdx, qword [rsp+0x178+var_178]
00000000000031c1         mov        r13d, 0x1
00000000000031c7         lea        rax, qword [rdx+1]
00000000000031cb         cmovne     r13, rax
00000000000031cf         mov        qword [rsp+0x178+var_170], r13

                     loc_31d4:
00000000000031d4         cmp        rbp, r12                                    ; CODE XREF=main+4566, main+4807, main+4828, main+4868
00000000000031d7         mov        r13, r12
00000000000031da         je         loc_316b

                     loc_31dc:
00000000000031dc         mov        rbx, rbp                                    ; CODE XREF=main+4544
00000000000031df         mov        esi, dword [eolchar]                        ; argument "__c" for method j_memchr, eolchar
00000000000031e5         mov        rdi, r13                                    ; argument "__s" for method j_memchr
00000000000031e8         sub        rbx, r13
00000000000031eb         mov        rdx, rbx                                    ; argument "__n" for method j_memchr
00000000000031ee         call       j_memchr                                    ; memchr
00000000000031f3         test       rax, rax
00000000000031f6         je         loc_32f0

00000000000031fc         lea        r12, qword [rax+1]
0000000000003200         mov        r15d, 0x1
0000000000003206         mov        rbx, r12
0000000000003209         sub        rbx, r13

                     loc_320c:
000000000000320c         mov        rax, qword [rsp+0x178+var_168]              ; CODE XREF=main+4886
0000000000003211         test       rax, rax
0000000000003214         jne        loc_31a8

0000000000003216         mov        r14, qword [rsp+0x178+var_160]
000000000000321b         mov        rdx, qword [rsp+0x178+var_178]              ; argument #3 for method ofile_open
000000000000321f         mov        rdi, qword [rsp+0x178+var_148]              ; argument #1 for method ofile_open
0000000000003224         mov        rsi, r14                                    ; argument #2 for method ofile_open
0000000000003227         shl        r14, 0x5
000000000000322b         call       ofile_open                                  ; ofile_open
0000000000003230         add        r14, qword [rsp+0x178+var_148]
0000000000003235         or         byte [rsp+0x178+var_140], al
0000000000003239         call       j___errno_location                          ; __errno_location
000000000000323e         cmp        byte [unbuffered], 0x0                      ; unbuffered
0000000000003245         mov        qword [rsp+0x178+var_158], rax
000000000000324a         jne        loc_33e0

0000000000003250         mov        rcx, qword [r14+0x10]                       ; argument "__stream" for method j_fwrite_unlocked
0000000000003254         mov        edx, 0x1                                    ; argument "__n" for method j_fwrite_unlocked
0000000000003259         mov        rsi, rbx                                    ; argument "__size" for method j_fwrite_unlocked
000000000000325c         mov        rdi, r13                                    ; argument "__ptr" for method j_fwrite_unlocked
000000000000325f         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000003264         cmp        rax, 0x1
0000000000003268         mov        rax, qword [rsp+0x178+var_158]
000000000000326d         jne        loc_3370

                     loc_3273:
0000000000003273         cmp        dword [rax], 0x20                           ; CODE XREF=main+5143
0000000000003276         sete       al
0000000000003279         cmp        qword [filter_command], 0x0                 ; filter_command
0000000000003281         setne      dl
0000000000003284         and        eax, edx
0000000000003286         mov        edx, 0x1
000000000000328b         test       al, al
000000000000328d         movzx      eax, byte [rsp+0x178+var_150]
0000000000003292         cmove      eax, edx
0000000000003295         mov        byte [rsp+0x178+var_150], al

                     loc_3299:
0000000000003299         cmp        byte [rsp+0x178+var_140], 0x0               ; CODE XREF=main+5021, main+5162
000000000000329e         jne        loc_33b0

                     loc_32a4:
00000000000032a4         test       r15b, r15b                                  ; CODE XREF=main+5105
00000000000032a7         je         loc_31d4

00000000000032ad         add        qword [rsp+0x178+var_160], 0x1
00000000000032b3         mov        rax, qword [rsp+0x178+var_160]
00000000000032b8         cmp        rax, qword [rsp+0x178+var_178]
00000000000032bc         jne        loc_31d4

00000000000032c2         cmp        byte [rsp+0x178+var_150], 0x0
00000000000032c7         je         loc_3531

00000000000032cd         movzx      eax, byte [rsp+0x178+var_150]
00000000000032d2         mov        qword [rsp+0x178+var_160], 0x0
00000000000032db         mov        byte [rsp+0x178+var_150], 0x0
00000000000032e0         mov        byte [rsp+0x178+var_128], al
00000000000032e4         jmp        loc_31d4
00000000000032e9         align      16

                     loc_32f0:
00000000000032f0         mov        r12, rbp                                    ; CODE XREF=main+4630
00000000000032f3         xor        r15d, r15d
00000000000032f6         jmp        loc_320c
00000000000032fb         align      256

                     loc_3300:
0000000000003300         cmp        byte [unbuffered], 0x0                      ; unbuffered, CODE XREF=main+4557
0000000000003307         jne        loc_3440

000000000000330d         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5
0000000000003314         mov        edx, 0x1                                    ; argument "__n" for method j_fwrite_unlocked
0000000000003319         mov        rsi, rbx                                    ; argument "__size" for method j_fwrite_unlocked
000000000000331c         mov        rdi, r13                                    ; argument "__ptr" for method j_fwrite_unlocked
000000000000331f         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000003324         cmp        rax, 0x1
0000000000003328         je         loc_31b3

000000000000332e         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_clearerr_unlocked, stdout@@GLIBC_2.2.5
0000000000003335         call       j_clearerr_unlocked                         ; clearerr_unlocked
000000000000333a         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error"
0000000000003341         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003346         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003348         call       j_dcgettext                                 ; dcgettext
000000000000334d         mov        rbx, rax
0000000000003350         call       j___errno_location                          ; __errno_location
0000000000003355         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000003357         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
000000000000335e         mov        rcx, rbx
0000000000003361         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003366         xor        eax, eax
0000000000003368         call       j_error                                     ; error
000000000000336d         nop        dword [rax]

                     loc_3370:
0000000000003370         cmp        dword [rax], 0x20                           ; CODE XREF=main+4749
0000000000003373         jne        loc_3383

0000000000003375         cmp        qword [filter_command], 0x0                 ; filter_command
000000000000337d         jne        loc_3299

                     loc_3383:
0000000000003383         mov        rdx, qword [r14]                            ; argument #3 for method quotearg_n_style_colon, CODE XREF=main+5011
0000000000003386         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
000000000000338b         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
000000000000338d         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000003392         mov        rcx, rax
0000000000003395         mov        rax, qword [rsp+0x178+var_158]
000000000000339a         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
00000000000033a1         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000033a6         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000033a8         xor        eax, eax
00000000000033aa         call       j_error                                     ; error
00000000000033af         nop

                     loc_33b0:
00000000000033b0         mov        rdi, qword [r14+0x10]                       ; CODE XREF=main+4798
00000000000033b4         call       rpl_fclose                                  ; rpl_fclose
00000000000033b9         test       eax, eax
00000000000033bb         jne        loc_398d

00000000000033c1         mov        qword [r14+0x10], 0x0
00000000000033c9         mov        dword [r14+8], 0xfffffffe
00000000000033d1         jmp        loc_32a4
00000000000033d6         align      32

                     loc_33e0:
00000000000033e0         mov        edi, dword [r14+8]                          ; argument #1 for method full_write, CODE XREF=main+4714
00000000000033e4         mov        rdx, rbx                                    ; argument #3 for method full_write
00000000000033e7         mov        rsi, r13                                    ; argument #2 for method full_write
00000000000033ea         call       full_write                                  ; full_write
00000000000033ef         cmp        rax, rbx
00000000000033f2         mov        rax, qword [rsp+0x178+var_158]
00000000000033f7         je         loc_3273

00000000000033fd         cmp        dword [rax], 0x20
0000000000003400         jne        loc_3410

0000000000003402         cmp        qword [filter_command], 0x0                 ; filter_command
000000000000340a         jne        loc_3299

                     loc_3410:
0000000000003410         mov        rdx, qword [r14]                            ; argument #3 for method quotearg_n_style_colon, CODE XREF=main+5152
0000000000003413         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
0000000000003418         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
000000000000341a         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000341f         mov        rcx, rax
0000000000003422         mov        rax, qword [rsp+0x178+var_158]
0000000000003427         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
000000000000342e         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003433         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000003435         xor        eax, eax
0000000000003437         call       j_error                                     ; error
000000000000343c         nop        dword [rax]

                     loc_3440:
0000000000003440         mov        rdx, rbx                                    ; argument #3 for method full_write, CODE XREF=main+4903
0000000000003443         mov        rsi, r13                                    ; argument #2 for method full_write
0000000000003446         mov        edi, 0x1                                    ; argument #1 for method full_write
000000000000344b         call       full_write                                  ; full_write
0000000000003450         cmp        rax, rbx
0000000000003453         je         loc_31b3

0000000000003459         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error"
0000000000003460         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003465         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003467         call       j_dcgettext                                 ; dcgettext
000000000000346c         mov        rbx, rax
000000000000346f         call       j___errno_location                          ; __errno_location
0000000000003474         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000003476         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
000000000000347d         mov        rcx, rbx
0000000000003480         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003485         xor        eax, eax
0000000000003487         call       j_error                                     ; error

                     loc_348c:
000000000000348c         mov        rdx, qword [rsp+0x178+var_138]              ; argument #3 for method bytes_split, CODE XREF=main+2228
0000000000003491         mov        rsi, qword [rsp+0x178+var_130]              ; argument #2 for method bytes_split
0000000000003496         xor        r8d, r8d                                    ; argument #5 for method bytes_split
0000000000003499         mov        rdi, qword [rsp+0x178+var_178]              ; argument #1 for method bytes_split
000000000000349d         or         rcx, 0xffffffffffffffff                     ; argument #4 for method bytes_split
00000000000034a1         call       bytes_split                                 ; bytes_split
00000000000034a6         jmp        loc_2f16

                     loc_34ab:
00000000000034ab         mov        r9, r15                                     ; CODE XREF=main+3652
00000000000034ae         mov        byte [rsp+0x178+var_148], 0x0
00000000000034b3         jmp        loc_2e33

                     loc_34b8:
00000000000034b8         movzx      edi, byte [rsp+0x178+var_128]               ; argument #1 for method cwrite, CODE XREF=main+3690
00000000000034bd         mov        rdx, qword [rsp+0x178+var_150]              ; argument #3 for method cwrite
00000000000034c2         mov        rsi, r8                                     ; argument #2 for method cwrite
00000000000034c5         mov        qword [rsp+0x178+var_120], r9
00000000000034ca         call       cwrite                                      ; cwrite
00000000000034cf         mov        r9, qword [rsp+0x178+var_120]
00000000000034d4         jmp        loc_2e50

                     loc_34d9:
00000000000034d9         mov        rdx, rax                                    ; argument #3 for method full_write, CODE XREF=main+3681
00000000000034dc         mov        rsi, r8                                     ; argument #2 for method full_write
00000000000034df         mov        edi, 0x1                                    ; argument #1 for method full_write
00000000000034e4         mov        qword [rsp+0x178+var_128], r9
00000000000034e9         call       full_write                                  ; full_write
00000000000034ee         cmp        qword [rsp+0x178+var_150], rax
00000000000034f3         mov        r9, qword [rsp+0x178+var_128]
00000000000034f8         je         loc_2e50

00000000000034fe         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error"
0000000000003505         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000350a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000350c         call       j_dcgettext                                 ; dcgettext
0000000000003511         mov        rbx, rax
0000000000003514         call       j___errno_location                          ; __errno_location
0000000000003519         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000351b         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
0000000000003522         mov        rcx, rbx
0000000000003525         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000352a         xor        eax, eax
000000000000352c         call       j_error                                     ; error

                     loc_3531:
0000000000003531         movsxd     rbx, dword [rsp+0x178+var_178]              ; CODE XREF=main+4839, main+6366

                     loc_3535:
0000000000003535         mov        rbp, qword [rsp+0x178+var_148]              ; CODE XREF=main+6377
000000000000353a         mov        r13, qword [rsp+0x178+var_178]
000000000000353e         xor        r12d, r12d

                     loc_3541:
0000000000003541         cmp        rbx, r12                                    ; CODE XREF=main+5544
0000000000003544         ja         loc_355f

0000000000003546         cmp        byte [elide_empty_files], 0x0               ; elide_empty_files
000000000000354d         jne        loc_355f

000000000000354f         mov        rdi, qword [rsp+0x178+var_148]              ; argument #1 for method ofile_open
0000000000003554         mov        rdx, r13                                    ; argument #3 for method ofile_open
0000000000003557         mov        rsi, r12                                    ; argument #2 for method ofile_open
000000000000355a         call       ofile_open                                  ; ofile_open

                     loc_355f:
000000000000355f         mov        esi, dword [rbp+8]                          ; CODE XREF=main+5476, main+5485
0000000000003562         test       esi, esi
0000000000003564         js         loc_3576

0000000000003566         mov        edx, dword [rbp+0x18]                       ; argument #3 for method closeout
0000000000003569         mov        rdi, qword [rbp+0x10]                       ; argument #1 for method closeout
000000000000356d         mov        rcx, qword [rbp]                            ; argument #4 for method closeout
0000000000003571         call       closeout                                    ; closeout

                     loc_3576:
0000000000003576         add        r12, 0x1                                    ; CODE XREF=main+5508
000000000000357a         mov        dword [rbp+8], 0xfffffffe
0000000000003581         add        rbp, 0x20
0000000000003585         cmp        r12, r13
0000000000003588         jne        loc_3541

000000000000358a         jmp        loc_2f16

                     loc_358f:
000000000000358f         mov        rax, qword [rsp+0x178+var_178]              ; CODE XREF=main+3853
0000000000003593         cmp        qword [rsp+0x178+var_168], rax
0000000000003598         ja         loc_393b

000000000000359e         mov        rcx, qword [rsp+0x178+var_160]
00000000000035a3         cmp        rax, rcx
00000000000035a6         ja         loc_393b

00000000000035ac         mov        rdi, qword [rsp+0x178+var_178]
00000000000035b0         mov        rax, qword [rsp+0x178+var_160]
00000000000035b5         xor        edx, edx
00000000000035b7         mov        rcx, qword [rsp+0x178+var_168]
00000000000035bc         div        rdi
00000000000035bf         lea        rsi, qword [rcx-1]
00000000000035c3         imul       rsi, rax
00000000000035c7         cmp        rcx, rdi
00000000000035ca         mov        rbx, rsi
00000000000035cd         je         loc_35d8

00000000000035cf         imul       rax, rcx
00000000000035d3         mov        qword [rsp+0x178+var_160], rax

                     loc_35d8:
00000000000035d8         cmp        rbp, rsi                                    ; CODE XREF=main+5613
00000000000035db         jbe        loc_3769

00000000000035e1         mov        rdi, qword [rsp+0x178+var_130]              ; argument "__dest" for method j_memmove
00000000000035e6         sub        rbp, rsi
00000000000035e9         mov        rdx, rbp                                    ; argument "__n" for method j_memmove
00000000000035ec         add        rsi, rdi                                    ; argument "__src" for method j_memmove
00000000000035ef         call       j_memmove                                   ; memmove

                     loc_35f4:
00000000000035f4         mov        r14, qword [rsp+0x178+var_160]              ; CODE XREF=main+6044
00000000000035f9         mov        r15, qword [rsp+0x178+var_130]
00000000000035fe         or         r12, 0xffffffffffffffff
0000000000003602         mov        rax, rbp

                     loc_3605:
0000000000003605         cmp        r14, rbx                                    ; CODE XREF=main+5801
0000000000003608         jle        loc_2f16

000000000000360e         cmp        rax, 0xffffffffffffffff
0000000000003612         je         loc_368e

                     loc_3614:
0000000000003614         test       rax, rax                                    ; CODE XREF=main+5825
0000000000003617         je         loc_2f16

000000000000361d         mov        rbp, r14
0000000000003620         mov        rsi, r15                                    ; argument #2 for method full_write
0000000000003623         mov        edi, 0x1                                    ; argument #1 for method full_write
0000000000003628         sub        rbp, rbx
000000000000362b         cmp        rbp, rax
000000000000362e         cmova      rbp, rax
0000000000003632         mov        rdx, rbp                                    ; argument #3 for method full_write
0000000000003635         call       full_write                                  ; full_write
000000000000363a         cmp        rbp, rax
000000000000363d         je         loc_3683

000000000000363f         call       j___errno_location                          ; __errno_location
0000000000003644         cmp        qword [filter_command], 0x0                 ; filter_command
000000000000364c         je         loc_3653

000000000000364e         cmp        dword [rax], 0x20
0000000000003651         je         loc_3683

                     loc_3653:
0000000000003653         lea        rdx, qword [aLibs+10]                       ; argument #3 for method quotearg_n_style_colon, 0x9c12, CODE XREF=main+5740
000000000000365a         mov        r13, rax
000000000000365d         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
0000000000003662         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
0000000000003664         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000003669         mov        esi, dword [r13]                            ; argument "__errnum" for method j_error
000000000000366d         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
0000000000003674         mov        rcx, rax
0000000000003677         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000367c         xor        eax, eax
000000000000367e         call       j_error                                     ; error

                     loc_3683:
0000000000003683         add        rbx, rbp                                    ; CODE XREF=main+5725, main+5745
0000000000003686         mov        rax, r12
0000000000003689         jmp        loc_3605

                     loc_368e:
000000000000368e         mov        rdx, qword [rsp+0x178+var_138]              ; CODE XREF=main+5682
0000000000003693         xor        edi, edi
0000000000003695         mov        rsi, r15
0000000000003698         call       safe_read                                   ; safe_read
000000000000369d         cmp        rax, 0xffffffffffffffff
00000000000036a1         jne        loc_3614

00000000000036a7         mov        rdx, qword [infile]                         ; argument #3 for method quotearg_n_style_colon, infile
00000000000036ae         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
00000000000036b3         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
00000000000036b5         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000036ba         mov        rbx, rax
00000000000036bd         call       j___errno_location                          ; __errno_location
00000000000036c2         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000036c4         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
00000000000036cb         mov        rcx, rbx
00000000000036ce         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000036d3         xor        eax, eax
00000000000036d5         call       j_error                                     ; error

                     loc_36da:
00000000000036da         mov        rsi, qword [rsp+0x178+var_170]              ; argument #2 for method cwrite, CODE XREF=main+4309
00000000000036df         xor        edi, edi
00000000000036e1         test       r13, r13
00000000000036e4         sete       dil                                         ; argument #1 for method cwrite
00000000000036e8         mov        rdx, r12                                    ; argument #3 for method cwrite
00000000000036eb         call       cwrite                                      ; cwrite
00000000000036f0         jmp        loc_30bb

                     loc_36f5:
00000000000036f5         mov        rsi, rbx                                    ; CODE XREF=main+3431
00000000000036f8         xor        edi, edi                                    ; argument "__fd" for method j_lseek
00000000000036fa         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
00000000000036ff         sub        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000003702         or         rbp, 0xffffffffffffffff
0000000000003706         call       j_lseek                                     ; lseek
000000000000370b         test       rax, rax
000000000000370e         mov        qword [rsp+0x178+var_158], rbx
0000000000003713         jns        loc_2d66

0000000000003719         mov        rdx, qword [infile]                         ; argument #3 for method quotearg_n_style_colon, infile
0000000000003720         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
0000000000003725         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
0000000000003727         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000372c         mov        rbx, rax
000000000000372f         call       j___errno_location                          ; __errno_location
0000000000003734         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000003736         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
000000000000373d         mov        rcx, rbx
0000000000003740         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003745         xor        eax, eax
0000000000003747         call       j_error                                     ; error

                     loc_374c:
000000000000374c         mov        rax, qword [rsp+0x178+var_170]              ; CODE XREF=main+3404
0000000000003751         mov        qword [rsp+0x178+var_158], 0x0
000000000000375a         mov        r12d, 0x1
0000000000003760         lea        r13, qword [rax-1]
0000000000003764         jmp        loc_2d66

                     loc_3769:
0000000000003769         xor        edi, edi                                    ; argument "__fd" for method j_lseek, CODE XREF=main+5627
000000000000376b         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000003770         or         rbp, 0xffffffffffffffff
0000000000003774         call       j_lseek                                     ; lseek
0000000000003779         test       rax, rax
000000000000377c         jns        loc_35f4

0000000000003782         mov        rdx, qword [infile]                         ; argument #3 for method quotearg_n_style_colon, infile
0000000000003789         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
000000000000378e         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
0000000000003790         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000003795         mov        rbx, rax
0000000000003798         call       j___errno_location                          ; __errno_location
000000000000379d         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000379f         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
00000000000037a6         mov        rcx, rbx
00000000000037a9         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000037ae         xor        eax, eax
00000000000037b0         call       j_error                                     ; error

                     loc_37b5:
00000000000037b5         mov        r14, qword [qword_20c330]                   ; qword_20c330, CODE XREF=main+2637
00000000000037bc         test       r14, r14
00000000000037bf         je         loc_3832

00000000000037c1         mov        eax, dword [dword_20c318]                   ; dword_20c318
00000000000037c7         add        rbx, rbp
00000000000037ca         and        eax, 0xd000
00000000000037cf         cmp        eax, 0x8000
00000000000037d4         jne        loc_37db

00000000000037d6         cmp        r14, rbx
00000000000037d9         jge        loc_3816

                     loc_37db:
00000000000037db         xor        esi, esi                                    ; argument "__offset" for method j_lseek, CODE XREF=main+6132
00000000000037dd         xor        edi, edi                                    ; argument "__fd" for method j_lseek
00000000000037df         mov        edx, 0x2                                    ; argument "__whence" for method j_lseek
00000000000037e4         call       j_lseek                                     ; lseek
00000000000037e9         test       rax, rax
00000000000037ec         mov        r14, rax
00000000000037ef         js         loc_2f7a

00000000000037f5         cmp        rbx, rax
00000000000037f8         je         loc_3816

00000000000037fa         xor        edx, edx                                    ; argument "__whence" for method j_lseek
00000000000037fc         xor        edi, edi                                    ; argument "__fd" for method j_lseek
00000000000037fe         mov        rsi, rbx                                    ; argument "__offset" for method j_lseek
0000000000003801         call       j_lseek                                     ; lseek
0000000000003806         test       rax, rax
0000000000003809         js         loc_2f7a

000000000000380f         cmp        r14, rbx
0000000000003812         cmovl      r14, rbx

                     loc_3816:
0000000000003816         sub        r14, rbx                                    ; CODE XREF=main+6137, main+6168
0000000000003819         movabs     rax, 0x7fffffffffffffff
0000000000003823         mov        r13, r14
0000000000003826         add        r13, rbp
0000000000003829         cmp        r13, rax
000000000000382c         jne        loc_2a49

                     loc_3832:
0000000000003832         call       j___errno_location                          ; __errno_location, CODE XREF=main+6111
0000000000003837         mov        dword [rax], 0x4b
000000000000383d         jmp        loc_2f7a

                     loc_3842:
0000000000003842         cmp        eax, 0xffffff7e                             ; CODE XREF=main+530
0000000000003847         jne        loc_392c

000000000000384d         xor        edi, edi                                    ; argument #1 for method usage
000000000000384f         call       usage                                       ; usage

                     loc_3854:
0000000000003854         add        rdx, rcx                                    ; CODE XREF=main+2560
0000000000003857         jmp        loc_2935

                     loc_385c:
000000000000385c         mov        rdx, qword [rsp+0x178+var_138]              ; CODE XREF=main+3511
0000000000003861         mov        rsi, qword [rsp+0x178+var_130]
0000000000003866         xor        edi, edi
0000000000003868         call       safe_read                                   ; safe_read
000000000000386d         cmp        rax, 0xffffffffffffffff
0000000000003871         mov        rbp, rax
0000000000003874         jne        loc_2d9d

000000000000387a         mov        rdx, qword [infile]                         ; argument #3 for method quotearg_n_style_colon, infile
0000000000003881         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
0000000000003886         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
0000000000003888         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000388d         mov        rbx, rax
0000000000003890         call       j___errno_location                          ; __errno_location
0000000000003895         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000003897         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
000000000000389e         mov        rcx, rbx
00000000000038a1         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000038a6         xor        eax, eax
00000000000038a8         call       j_error                                     ; error

                     loc_38ad:
00000000000038ad         cmp        qword [rsp+0x178+var_168], 0x0              ; CODE XREF=main+4521
00000000000038b3         jne        loc_2f16

00000000000038b9         cmp        byte [rsp+0x178+var_128], 0x0
00000000000038be         jne        loc_3531

00000000000038c4         movsxd     rbx, dword [rsp+0x178+var_160]
00000000000038c9         jmp        loc_3535

                     loc_38ce:
00000000000038ce         mov        rbp, rax                                    ; CODE XREF=main+3583
00000000000038d1         jmp        loc_2d83

                     loc_38d6:
00000000000038d6         cmp        byte [rsp+0x178+var_111], 0x0               ; CODE XREF=main+3501, main+3520
00000000000038db         je         loc_38e1

00000000000038dd         add        r12, 0x1

                     loc_38e1:
00000000000038e1         cmp        qword [rsp+0x178+var_168], 0x0              ; CODE XREF=main+6395
00000000000038e7         je         loc_3900

00000000000038e9         jmp        loc_2f16

                     loc_38ee:
00000000000038ee         xor        edx, edx                                    ; argument #3 for method cwrite, CODE XREF=main+6436
00000000000038f0         xor        esi, esi                                    ; argument #2 for method cwrite
00000000000038f2         mov        edi, 0x1                                    ; argument #1 for method cwrite
00000000000038f7         add        r12, 0x1
00000000000038fb         call       cwrite                                      ; cwrite

                     loc_3900:
0000000000003900         cmp        r12, qword [rsp+0x178+var_178]              ; CODE XREF=main+6407
0000000000003904         jbe        loc_38ee

0000000000003906         jmp        loc_2f16

                     loc_390b:
000000000000390b         lea        rsi, qword [aFilterDoesNotP]                ; "--filter does not process a chunk extracted to stdout", CODE XREF=main+1688
0000000000003912         mov        edx, 0x5

                     loc_3917:
0000000000003917         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=main+1931, main+7380
0000000000003919         call       j_dcgettext                                 ; dcgettext
000000000000391e         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003920         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003923         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003925         xor        eax, eax
0000000000003927         call       j_error                                     ; error

                     loc_392c:
000000000000392c         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+295, main+473, main+779, main+1155, main+1396, main+1647, main+6247
0000000000003931         call       usage                                       ; usage

                     loc_3936:
0000000000003936         call       xalloc_die                                  ; xalloc_die, CODE XREF=main+3257, main+4361, main+4370
                        ; endp

                     loc_393b:
000000000000393b         lea        rcx, qword [__PRETTY_FUNCTION__.7285]       ; argument "__function" for method j___assert_fail, "bytes_chunk_extract", CODE XREF=main+5560, main+5574
0000000000003942         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/split.c"
0000000000003949         lea        rdi, qword [aKNKNNFilesize]                 ; argument "__assertion" for method j___assert_fail, "k && n && k <= n && n <= file_size"
0000000000003950         mov        edx, 0x3e0                                  ; argument "__line" for method j___assert_fail
0000000000003955         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_395a:
000000000000395a         mov        rdx, qword [infile]                         ; argument #3 for method quotearg_n_style_colon, infile, CODE XREF=main+2759
0000000000003961         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
0000000000003966         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
0000000000003968         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000396d         mov        rbx, rax
0000000000003970         call       j___errno_location                          ; __errno_location
0000000000003975         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000003977         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
000000000000397e         mov        rcx, rbx
0000000000003981         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003986         xor        eax, eax
0000000000003988         call       j_error                                     ; error

                     loc_398d:
000000000000398d         mov        rdx, qword [r14]                            ; argument #3 for method quotearg_n_style_colon, CODE XREF=main+5083
0000000000003990         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
0000000000003995         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
0000000000003997         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000399c         mov        rcx, rax
000000000000399f         mov        rax, qword [rsp+0x178+var_158]
00000000000039a4         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
00000000000039ab         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000039b0         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000039b2         xor        eax, eax
00000000000039b4         call       j_error                                     ; error

                     loc_39b9:
00000000000039b9         mov        rdx, qword [infile]                         ; argument #3 for method quotearg_n_style_colon, infile, CODE XREF=main+2952
00000000000039c0         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
00000000000039c5         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
00000000000039c7         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000039cc         mov        rbx, rax
00000000000039cf         call       j___errno_location                          ; __errno_location
00000000000039d4         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000039d6         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
00000000000039dd         mov        rcx, rbx
00000000000039e0         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000039e5         xor        eax, eax
00000000000039e7         call       j_error                                     ; error

                     loc_39ec:
00000000000039ec         mov        rdx, qword [infile]                         ; argument #3 for method quotearg_n_style_colon, infile, CODE XREF=main+2006
00000000000039f3         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
00000000000039f8         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
00000000000039fa         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000039ff         mov        rbx, rax
0000000000003a02         call       j___errno_location                          ; __errno_location
0000000000003a07         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000003a09         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
0000000000003a10         mov        rcx, rbx
0000000000003a13         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003a18         xor        eax, eax
0000000000003a1a         call       j_error                                     ; error

                     loc_3a1f:
0000000000003a1f         mov        rsi, qword [infile]                         ; argument #2 for method quotearg_style, infile, CODE XREF=main+1979
0000000000003a26         mov        edi, 0x4                                    ; argument #1 for method quotearg_style
0000000000003a2b         call       quotearg_style                              ; quotearg_style
0000000000003a30         lea        rsi, qword [aCannotOpenSFor]                ; argument "msgid" for method j_dcgettext, "cannot open %s for reading"
0000000000003a37         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003a3c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003a3e         mov        rbp, rax
0000000000003a41         call       j_dcgettext                                 ; dcgettext
0000000000003a46         mov        rbx, rax
0000000000003a49         call       j___errno_location                          ; __errno_location
0000000000003a4e         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000003a50         mov        rcx, rbp
0000000000003a53         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000003a56         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003a5b         xor        eax, eax
0000000000003a5d         call       j_error                                     ; error

                     loc_3a62:
0000000000003a62         cdqe                                                   ; CODE XREF=main+1876
0000000000003a64         mov        rdi, qword [rbx+rax*8]
0000000000003a68         call       quote                                       ; quote
0000000000003a6d         lea        rsi, qword [aExtraOperandS]                 ; "extra operand %s"
0000000000003a74         mov        rbx, rax
0000000000003a77         mov        edx, 0x5

                     loc_3a7c:
0000000000003a7c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=main+6869, main+7239
0000000000003a7e         call       j_dcgettext                                 ; dcgettext

                     loc_3a83:
0000000000003a83         mov        rdx, rax                                    ; argument "__format" for method j_error, CODE XREF=main+7259
0000000000003a86         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003a88         mov        rcx, rbx
0000000000003a8b         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003a8d         xor        eax, eax
0000000000003a8f         call       j_error                                     ; error
0000000000003a94         mov        edi, 0x1                                    ; argument #1 for method usage
0000000000003a99         call       usage                                       ; usage

                     loc_3a9e:
0000000000003a9e         mov        rdi, r13                                    ; CODE XREF=main+497
0000000000003aa1         call       quote                                       ; quote
0000000000003aa6         mov        edx, 0x5
0000000000003aab         mov        rbx, rax
0000000000003aae         lea        rsi, qword [aInvalidSuffixS]                ; "invalid suffix %s, contains directory separator"
0000000000003ab5         jmp        loc_3a7c

                     loc_3ab7:
0000000000003ab7         mov        rdi, qword [rsp+0x178+var_178]              ; CODE XREF=main+2694
0000000000003abb         lea        rsi, qword [rsp+0x178+var_58]
0000000000003ac3         call       umaxtostr                                   ; umaxtostr
0000000000003ac8         mov        rdi, rax
0000000000003acb         call       quote                                       ; quote
0000000000003ad0         lea        rsi, qword [aInvalidNumberO_8d2d]           ; argument "msgid" for method j_dcgettext, "invalid number of chunks"
0000000000003ad7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003adc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003ade         mov        rbx, rax
0000000000003ae1         call       j_dcgettext                                 ; dcgettext
0000000000003ae6         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000003aed         mov        rcx, rax
0000000000003af0         mov        r8, rbx
0000000000003af3         mov        esi, 0x4b                                   ; argument "__errnum" for method j_error
0000000000003af8         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003afd         xor        eax, eax
0000000000003aff         call       j_error                                     ; error

                     loc_3b04:
0000000000003b04         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+3954
                        ; endp

                     loc_3b09:
0000000000003b09         mov        rdx, qword [infile]                         ; argument #3 for method quotearg_n_style_colon, infile, CODE XREF=main+3903
0000000000003b10         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
0000000000003b15         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
0000000000003b17         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000003b1c         mov        rbx, rax
0000000000003b1f         call       j___errno_location                          ; __errno_location
0000000000003b24         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000003b26         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
0000000000003b2d         mov        rcx, rbx
0000000000003b30         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003b35         xor        eax, eax
0000000000003b37         call       j_error                                     ; error

                     loc_3b3c:
0000000000003b3c         lea        rsi, qword [aTheSuffixLengt]                ; argument "msgid" for method j_dcgettext, "the suffix length needs to be at least %lu", CODE XREF=main+2484
0000000000003b43         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003b48         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003b4a         call       j_dcgettext                                 ; dcgettext
0000000000003b4f         mov        rcx, r14
0000000000003b52         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003b55         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003b57         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003b5c         xor        eax, eax
0000000000003b5e         call       j_error                                     ; error

                     loc_3b63:
0000000000003b63         mov        rdi, qword [rsp+0x178+var_178]              ; CODE XREF=main+2334, main+2357
0000000000003b67         lea        rsi, qword [rsp+0x178+var_58]
0000000000003b6f         mov        dword [rsp+0x178+var_170], r15d
0000000000003b74         call       umaxtostr                                   ; umaxtostr
0000000000003b79         lea        rsi, qword [aLineCountOptio]                ; argument "msgid" for method j_dcgettext, "line count option -%s%c... is too large"
0000000000003b80         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003b85         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003b87         mov        rbx, rax
0000000000003b8a         call       j_dcgettext                                 ; dcgettext
0000000000003b8f         mov        r8d, dword [rsp+0x178+var_170]
0000000000003b94         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003b97         mov        rcx, rbx
0000000000003b9a         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003b9c         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003ba1         xor        eax, eax
0000000000003ba3         call       j_error                                     ; error

                     loc_3ba8:
0000000000003ba8         lea        rcx, qword [__PRETTY_FUNCTION__.7242]       ; argument "__function" for method j___assert_fail, "lines_chunk_split", CODE XREF=main+3362, main+3373
0000000000003baf         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/split.c"
0000000000003bb6         lea        rdi, qword [aNKNNFilesize]                  ; argument "__assertion" for method j___assert_fail, "n && k <= n && n <= file_size"
0000000000003bbd         mov        edx, 0x362                                  ; argument "__line" for method j___assert_fail
0000000000003bc2         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_3bc7:
0000000000003bc7         mov        rdx, qword [infile]                         ; argument #3 for method quotearg_n_style_colon, infile, CODE XREF=main+4512
0000000000003bce         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
0000000000003bd3         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
0000000000003bd5         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000003bda         mov        rbx, rax
0000000000003bdd         call       j___errno_location                          ; __errno_location
0000000000003be2         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000003be4         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
0000000000003beb         mov        rcx, rbx
0000000000003bee         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003bf3         xor        eax, eax
0000000000003bf5         call       j_error                                     ; error

                     loc_3bfa:
0000000000003bfa         mov        ecx, 0x1                                    ; CODE XREF=main+4352
0000000000003bff         jmp        loc_30e6

                     loc_3c04:
0000000000003c04         mov        rdi, r13                                    ; CODE XREF=main+1575
0000000000003c07         mov        dword [rsp+0x178+var_178], r15d
0000000000003c0b         call       quote                                       ; quote
0000000000003c10         mov        r8d, dword [rsp+0x178+var_178]
0000000000003c14         mov        rbx, rax
0000000000003c17         mov        edx, 0x5
0000000000003c1c         lea        rsi, qword [aSInvalidStartV]                ; "%s: invalid start value for hexadecimal suffix"
0000000000003c23         cmp        r8d, 0x64
0000000000003c27         jne        loc_3a7c

0000000000003c2d         lea        rsi, qword [aSInvalidStartV_99f8]           ; argument "msgid" for method j_dcgettext, "%s: invalid start value for numerical suffix"
0000000000003c34         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003c36         call       j_dcgettext                                 ; dcgettext
0000000000003c3b         jmp        loc_3a83

                     loc_3c40:
0000000000003c40         lea        rsi, qword [aEmptyRecordSep]                ; argument "msgid" for method j_dcgettext, "empty record separator", CODE XREF=main+702
0000000000003c47         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003c4c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003c4e         call       j_dcgettext                                 ; dcgettext
0000000000003c53         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003c55         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003c58         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003c5d         xor        eax, eax
0000000000003c5f         call       j_error                                     ; error

                     loc_3c64:
0000000000003c64         lea        rdi, qword [aEmptyRecordSep+24]             ; 0x8d73, CODE XREF=main+1708
0000000000003c6b         call       quote                                       ; quote
0000000000003c70         lea        rsi, qword [aInvalidNumberO]                ; argument "msgid" for method j_dcgettext, "invalid number of lines"
0000000000003c77         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003c7c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003c7e         mov        rbx, rax
0000000000003c81         call       j_dcgettext                                 ; dcgettext
0000000000003c86         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000003c8d         mov        rcx, rax
0000000000003c90         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003c92         mov        r8, rbx
0000000000003c95         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003c97         xor        eax, eax
0000000000003c99         call       j_error                                     ; error
0000000000003c9e         mov        edi, 0x1                                    ; argument #1 for method usage
0000000000003ca3         call       usage                                       ; usage

                     loc_3ca8:
0000000000003ca8         mov        edx, 0x5                                    ; CODE XREF=main+356, main+633, main+788, main+875, main+1164
0000000000003cad         lea        rsi, qword [aCannotSplitInM]                ; "cannot split in more than one way"
0000000000003cb4         jmp        loc_3917

                     loc_3cb9:
0000000000003cb9         lea        rsi, qword [aMultipleSepara]                ; argument "msgid" for method j_dcgettext, "multiple separator characters specified", CODE XREF=main+752
0000000000003cc0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003cc5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003cc7         call       j_dcgettext                                 ; dcgettext
0000000000003ccc         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003cce         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003cd1         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003cd6         xor        eax, eax
0000000000003cd8         call       j_error                                     ; error

                     loc_3cdd:
0000000000003cdd         mov        rdi, r13                                    ; CODE XREF=main+732
0000000000003ce0         call       quote                                       ; quote
0000000000003ce5         lea        rsi, qword [aMulticharacter]                ; argument "msgid" for method j_dcgettext, "multi-character separator %s"
0000000000003cec         mov        rbx, rax
0000000000003cef         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003cf4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003cf6         call       j_dcgettext                                 ; dcgettext
0000000000003cfb         mov        rcx, rbx
0000000000003cfe         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003d01         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003d03         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003d08         xor        eax, eax
0000000000003d0a         call       j_error                                     ; error
0000000000003d0f         nop                                                    ; End of unwind block (FDE at 0xaadc)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000003d10         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0xa8b4)
0000000000003d12         mov        r9, rdx
0000000000003d15         pop        rsi
0000000000003d16         mov        rdx, rsp
0000000000003d19         and        rsp, 0xfffffffffffffff0
0000000000003d1d         push       rax
0000000000003d1e         push       rsp
0000000000003d1f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000003d26         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
0000000000003d2d         lea        rdi, qword [main]                           ; main
0000000000003d34         call       qword [qword_20bfd0+8]                      ; 0x20bfd8
0000000000003d3a         hlt
                        ; endp
0000000000003d3b         align      64                                          ; End of unwind block (FDE at 0xa8b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000003d40         lea        rdi, qword [__TMC_END__]                    ; __TMC_END__, CODE XREF=__do_global_dtors_aux+35
0000000000003d47         push       rbp
0000000000003d48         lea        rax, qword [__TMC_END__]                    ; __TMC_END__
0000000000003d4f         cmp        rax, rdi
0000000000003d52         mov        rbp, rsp
0000000000003d55         je         loc_3d70

0000000000003d57         mov        rax, qword [qword_20bfd0]                   ; qword_20bfd0
0000000000003d5e         test       rax, rax
0000000000003d61         je         loc_3d70

0000000000003d63         pop        rbp
0000000000003d64         jmp        rax
                        ; endp
0000000000003d66         align      16

                     loc_3d70:
0000000000003d70         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000003d71         ret
                        ; endp
0000000000003d72         align      128

                     register_tm_clones:
0000000000003d80         lea        rdi, qword [__TMC_END__]                    ; __TMC_END__, CODE XREF=frame_dummy+5
0000000000003d87         lea        rsi, qword [__TMC_END__]                    ; __TMC_END__
0000000000003d8e         push       rbp
0000000000003d8f         sub        rsi, rdi
0000000000003d92         mov        rbp, rsp
0000000000003d95         sar        rsi, 0x3
0000000000003d99         mov        rax, rsi
0000000000003d9c         shr        rax, 0x3f
0000000000003da0         add        rsi, rax
0000000000003da3         sar        rsi, 0x1
0000000000003da6         je         loc_3dc0

0000000000003da8         mov        rax, qword [qword_20bfe8]                   ; qword_20bfe8
0000000000003daf         test       rax, rax
0000000000003db2         je         loc_3dc0

0000000000003db4         pop        rbp
0000000000003db5         jmp        rax
                        ; endp
0000000000003db7         align      64

                     loc_3dc0:
0000000000003dc0         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000003dc1         ret
                        ; endp
0000000000003dc2         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000003dd0         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000003dd7         jne        loc_3e08

0000000000003dd9         cmp        qword [qword_20bff0], 0x0                   ; qword_20bff0
0000000000003de1         push       rbp
0000000000003de2         mov        rbp, rsp
0000000000003de5         je         loc_3df3

0000000000003de7         mov        rdi, qword [__dso_handle]                   ; __dso_handle
0000000000003dee         call       j_qword_20bff0                              ; qword_20bff0

                     loc_3df3:
0000000000003df3         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000003df8         mov        byte [completed.7697], 0x1                  ; completed.7697
0000000000003dff         pop        rbp
0000000000003e00         ret
                        ; endp
0000000000003e01         align      8

                     loc_3e08:
0000000000003e08         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
0000000000003e0a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000003e10         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000003e11         mov        rbp, rsp
0000000000003e14         pop        rbp
0000000000003e15         jmp        register_tm_clones                          ; register_tm_clones
0000000000003e1a         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     next_file_name:
0000000000003e20         push       r13                                         ; Begin of unwind block (FDE at 0xa924), CODE XREF=main+4402, cwrite+70
0000000000003e22         push       r12
0000000000003e24         push       rbp
0000000000003e25         push       rbx
0000000000003e26         sub        rsp, 0x8
0000000000003e2a         mov        r12, qword [outfile]                        ; outfile
0000000000003e31         mov        rbx, qword [suffix_length]                  ; suffix_length
0000000000003e38         test       r12, r12
0000000000003e3b         je         loc_3ebc

0000000000003e3d         test       rbx, rbx
0000000000003e40         lea        rax, qword [rbx-1]
0000000000003e44         je         loc_409e

0000000000003e4a         mov        rcx, qword [sufindex.7081]                  ; sufindex.7081
0000000000003e51         movzx      r8d, byte [suffix_auto]                     ; suffix_auto
0000000000003e59         mov        rsi, qword [suffix_alphabet]                ; suffix_alphabet
0000000000003e60         mov        rdi, qword [outfile_mid]                    ; outfile_mid
0000000000003e67         jmp        loc_3e9b
0000000000003e69         align      16

                     loc_3e70:
0000000000003e70         movzx      edx, byte [rsi+rdx]                         ; CODE XREF=next_file_name+138, next_file_name+143, next_file_name+154
0000000000003e74         test       dl, dl
0000000000003e76         mov        byte [rdi+rax], dl
0000000000003e79         jne        loc_4029

0000000000003e7f         mov        qword [rcx+rax*8], 0x0
0000000000003e87         movzx      edx, byte [rsi]
0000000000003e8a         mov        byte [rdi+rax], dl
0000000000003e8d         sub        rax, 0x1
0000000000003e91         cmp        rax, 0xffffffffffffffff
0000000000003e95         je         loc_409e

                     loc_3e9b:
0000000000003e9b         mov        rdx, qword [rcx+rax*8]                      ; CODE XREF=next_file_name+71
0000000000003e9f         add        rdx, 0x1
0000000000003ea3         test       rax, rax
0000000000003ea6         mov        qword [rcx+rax*8], rdx
0000000000003eaa         jne        loc_3e70

0000000000003eac         test       r8b, r8b
0000000000003eaf         je         loc_3e70

0000000000003eb1         mov        r9, qword [rcx]
0000000000003eb4         cmp        byte [rsi+r9+1], 0x0
0000000000003eba         jne        loc_3e70

                     loc_3ebc:
0000000000003ebc         mov        rbp, qword [outfile_length.7083]            ; outfile_length.7083, CODE XREF=next_file_name+27
0000000000003ec3         test       rbp, rbp
0000000000003ec6         jne        loc_4038

0000000000003ecc         mov        rdi, qword [outbase]                        ; argument "__s" for method j_strlen, outbase
0000000000003ed3         call       j_strlen                                    ; strlen
0000000000003ed8         mov        rdi, qword [additional_suffix]              ; additional_suffix
0000000000003edf         mov        r13, rax
0000000000003ee2         mov        qword [outbase_length.7082], rax            ; outbase_length.7082
0000000000003ee9         xor        eax, eax
0000000000003eeb         test       rdi, rdi
0000000000003eee         je         loc_3ef5

0000000000003ef0         call       j_strlen                                    ; strlen

                     loc_3ef5:
0000000000003ef5         lea        rsi, qword [r13+rbx]                        ; CODE XREF=next_file_name+206
0000000000003efa         mov        qword [addsuf_length.7084], rax             ; addsuf_length.7084
0000000000003f01         add        rsi, rax
0000000000003f04         mov        qword [outfile_length.7083], rsi            ; outfile_length.7083
0000000000003f0b         add        rsi, 0x1
0000000000003f0f         cmp        r13, rsi
0000000000003f12         ja         loc_40c2

0000000000003f18         mov        rdi, r12
0000000000003f1b         call       xrealloc                                    ; xrealloc
0000000000003f20         mov        rbx, qword [outbase_length.7082]            ; outbase_length.7082
0000000000003f27         mov        rsi, qword [outbase]                        ; argument "__src" for method j_memcpy, outbase
0000000000003f2e         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000003f31         mov        r12, rax
0000000000003f34         mov        qword [outfile], rax                        ; outfile
0000000000003f3b         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
0000000000003f3e         call       j_memcpy                                    ; memcpy
0000000000003f43         mov        rax, qword [suffix_alphabet]                ; suffix_alphabet
0000000000003f4a         mov        r13, qword [sufindex.7081]                  ; sufindex.7081

                     loc_3f51:
0000000000003f51         lea        rcx, qword [r12+rbx]                        ; CODE XREF=next_file_name+633
0000000000003f55         movsx      esi, byte [rax]                             ; argument "__c" for method j_memset
0000000000003f58         mov        rbx, qword [suffix_length]                  ; suffix_length
0000000000003f5f         mov        rdi, rcx                                    ; argument "__s" for method j_memset
0000000000003f62         mov        qword [outfile_mid], rcx                    ; outfile_mid
0000000000003f69         mov        rdx, rbx                                    ; argument "__n" for method j_memset
0000000000003f6c         call       j_memset                                    ; memset
0000000000003f71         mov        rsi, qword [additional_suffix]              ; additional_suffix
0000000000003f78         test       rsi, rsi
0000000000003f7b         je         loc_3f8d

0000000000003f7d         mov        rdx, qword [addsuf_length.7084]             ; argument "__n" for method j_memcpy, addsuf_length.7084
0000000000003f84         lea        rdi, qword [rax+rbx]                        ; argument "__dest" for method j_memcpy
0000000000003f88         call       j_memcpy                                    ; memcpy

                     loc_3f8d:
0000000000003f8d         mov        rax, qword [outfile_length.7083]            ; outfile_length.7083, CODE XREF=next_file_name+347
0000000000003f94         mov        rdi, r13                                    ; argument "__ptr" for method j_free
0000000000003f97         mov        byte [r12+rax], 0x0
0000000000003f9c         call       j_free                                      ; free
0000000000003fa1         mov        rdi, rbx
0000000000003fa4         mov        esi, 0x8
0000000000003fa9         call       xcalloc                                     ; xcalloc
0000000000003fae         mov        r12, qword [numeric_suffix_start]           ; numeric_suffix_start
0000000000003fb5         mov        rbx, rax
0000000000003fb8         mov        qword [sufindex.7081], rax                  ; sufindex.7081
0000000000003fbf         test       r12, r12
0000000000003fc2         je         loc_4029

0000000000003fc4         test       rbp, rbp
0000000000003fc7         jne        loc_40c7

0000000000003fcd         mov        rdi, r12                                    ; argument "__s" for method j_strlen
0000000000003fd0         call       j_strlen                                    ; strlen
0000000000003fd5         mov        r13, qword [suffix_length]                  ; suffix_length
0000000000003fdc         mov        rbp, rax
0000000000003fdf         mov        rdx, rax                                    ; argument "__n" for method j_memcpy
0000000000003fe2         mov        rsi, r12                                    ; argument "__src" for method j_memcpy
0000000000003fe5         mov        rdi, r13
0000000000003fe8         shl        r13, 0x3
0000000000003fec         sub        rdi, rax
0000000000003fef         add        rdi, qword [outfile_mid]                    ; argument "__dest" for method j_memcpy, outfile_mid
0000000000003ff6         call       j_memcpy                                    ; memcpy
0000000000003ffb         test       rbp, rbp
0000000000003ffe         lea        rcx, qword [rbp-1]
0000000000004002         je         loc_4029

0000000000004004         neg        rbp
0000000000004007         lea        rax, qword [r13+rbp*8]
000000000000400c         add        rax, rbx
000000000000400f         nop

                     loc_4010:
0000000000004010         movsx      edx, byte [r12+rcx]                         ; CODE XREF=next_file_name+519
0000000000004015         sub        edx, 0x30
0000000000004018         movsxd     rdx, edx
000000000000401b         mov        qword [rax+rcx*8], rdx
000000000000401f         sub        rcx, 0x1
0000000000004023         cmp        rcx, 0xffffffffffffffff
0000000000004027         jne        loc_4010

                     loc_4029:
0000000000004029         add        rsp, 0x8                                    ; CODE XREF=next_file_name+89, next_file_name+418, next_file_name+482
000000000000402d         pop        rbx
000000000000402e         pop        rbp
000000000000402f         pop        r12
0000000000004031         pop        r13
0000000000004033         ret
                        ; endp
0000000000004034         align      8

                     loc_4038:
0000000000004038         add        rbx, 0x1                                    ; CODE XREF=next_file_name+166
000000000000403c         lea        rsi, qword [rbp+3]
0000000000004040         cmp        rsi, qword [outbase_length.7082]            ; outbase_length.7082
0000000000004047         lea        rax, qword [rbp+2]
000000000000404b         mov        qword [suffix_length], rbx                  ; suffix_length
0000000000004052         mov        qword [outfile_length.7083], rax            ; outfile_length.7083
0000000000004059         jb         loc_40c2

000000000000405b         mov        rdi, r12
000000000000405e         call       xrealloc                                    ; xrealloc
0000000000004063         mov        r13, qword [sufindex.7081]                  ; sufindex.7081
000000000000406a         mov        r12, rax
000000000000406d         mov        qword [outfile], rax                        ; outfile
0000000000004074         mov        rax, qword [suffix_alphabet]                ; suffix_alphabet
000000000000407b         mov        rcx, qword [outbase_length.7082]            ; outbase_length.7082
0000000000004082         mov        rdx, qword [r13]
0000000000004086         lea        rbx, qword [rcx+1]
000000000000408a         movzx      edx, byte [rax+rdx]
000000000000408e         mov        qword [outbase_length.7082], rbx            ; outbase_length.7082
0000000000004095         mov        byte [r12+rcx], dl
0000000000004099         jmp        loc_3f51

                     loc_409e:
000000000000409e         lea        rsi, qword [aOutputFileSuff]                ; argument "msgid" for method j_dcgettext, "output file suffixes exhausted", CODE XREF=next_file_name+36, next_file_name+117
00000000000040a5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000040aa         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000040ac         call       j_dcgettext                                 ; dcgettext
00000000000040b1         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000040b3         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000040b6         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000040bb         xor        eax, eax
00000000000040bd         call       j_error                                     ; error

                     loc_40c2:
00000000000040c2         call       xalloc_die                                  ; xalloc_die, CODE XREF=next_file_name+242, next_file_name+569
                        ; endp

                     loc_40c7:
00000000000040c7         lea        rcx, qword [__PRETTY_FUNCTION__.7087]       ; argument "__function" for method j___assert_fail, "next_file_name", CODE XREF=next_file_name+423
00000000000040ce         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/split.c"
00000000000040d5         lea        rdi, qword [aWiden]                         ; argument "__assertion" for method j___assert_fail, "! widen"
00000000000040dc         mov        edx, 0x198                                  ; argument "__line" for method j___assert_fail
00000000000040e1         call       j___assert_fail                             ; __assert_fail
                        ; endp
00000000000040e6         align      16                                          ; End of unwind block (FDE at 0xa924)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_A0: int32_t, -160
        ;    var_B0: int64_t, -176
        ;    var_B4: int32_t, -180
        ;    var_B8: int64_t, -184
        ;    var_F8: int64_t, -248
        ;    var_130: int64_t, -304
        ;    var_148: int8_t, -328
        ;    var_14C: int32_t, -332
        ;    var_15C: int32_t, -348
        ;    var_1C0: int64_t, -448
        ;    var_1C8: int64_t, -456
        ;    var_1C9: int8_t, -457
        ;    var_1CA: int8_t, -458
        ;    var_1D8: int64_t, -472
        ;    var_1E0: int64_t, -480
        ;    var_218: int64_t, -536
        ;    var_228: int64_t, -552
        ;    var_230: int64_t, -560
        ;    var_238: int64_t, -568
        ;    var_240: int64_t, -576
        ;    var_248: int64_t, -584
        ;    var_250: int64_t, -592
        ;    var_258: int64_t, -600
        ;    var_260: int64_t, -608
        ;    var_268: int64_t, -616
        ;    var_270: int64_t, -624
        ;    var_278: int64_t, -632
        ;    var_280: int64_t, -640
        ;    var_288: int64_t, -648
        ;    var_290: int64_t, -656


                     create:
00000000000040f0         push       r12                                         ; Begin of unwind block (FDE at 0xa960), CODE XREF=loc_476b, cwrite+82
00000000000040f2         push       rbp
00000000000040f3         mov        r12, rdi
00000000000040f6         push       rbx
00000000000040f7         sub        rsp, 0xa0
00000000000040fe         mov        rax, qword [fs:0x28]
0000000000004107         mov        qword [rsp+0xb8+var_20], rax
000000000000410f         xor        eax, eax
0000000000004111         cmp        qword [filter_command], 0x0                 ; filter_command
0000000000004119         je         loc_42d8

000000000000411f         lea        rdi, qword [aShell]                         ; argument "__name" for method j_getenv, "SHELL"
0000000000004126         call       j_getenv                                    ; getenv
000000000000412b         lea        rdi, qword [aShell+6]                       ; argument "__name" for method j_setenv, 0x8b31
0000000000004132         test       rax, rax
0000000000004135         mov        rbp, rax
0000000000004138         lea        rax, qword [aBinsh]                         ; "/bin/sh"
000000000000413f         mov        edx, 0x1                                    ; argument "__replace" for method j_setenv
0000000000004144         mov        rsi, r12                                    ; argument "__value" for method j_setenv
0000000000004147         cmove      rbp, rax
000000000000414b         call       j_setenv                                    ; setenv
0000000000004150         test       eax, eax
0000000000004152         jne        loc_4501

0000000000004158         cmp        byte [verbose], 0x0                         ; verbose
000000000000415f         jne        loc_43a0

                     loc_4165:
0000000000004165         mov        rdi, rsp                                    ; argument "__pipedes" for method j_pipe, CODE XREF=create+750
0000000000004168         call       j_pipe                                      ; pipe
000000000000416d         test       eax, eax
000000000000416f         jne        loc_452d

0000000000004175         call       j_fork                                      ; fork
000000000000417a         test       eax, eax
000000000000417c         mov        ebx, eax
000000000000417e         je         loc_41f8

0000000000004180         cmp        eax, 0xffffffff
0000000000004183         je         loc_464d

0000000000004189         mov        edi, dword [rsp+0xb8+var_B8]                ; argument "__fd" for method j_close
000000000000418c         call       j_close                                     ; close
0000000000004191         test       eax, eax
0000000000004193         jne        loc_4621

0000000000004199         mov        rcx, qword [n_open_pipes]                   ; n_open_pipes
00000000000041a0         cmp        rcx, qword [open_pipes_alloc]               ; open_pipes_alloc
00000000000041a7         mov        dword [filter_pid], ebx                     ; filter_pid
00000000000041ad         mov        rdi, qword [open_pipes]                     ; open_pipes
00000000000041b4         je         loc_4458

                     loc_41ba:
00000000000041ba         lea        rax, qword [rcx+1]                          ; CODE XREF=create+940
00000000000041be         mov        qword [n_open_pipes], rax                   ; n_open_pipes
00000000000041c5         mov        eax, dword [rsp+0xb8+var_B4]
00000000000041c9         mov        dword [rdi+rcx*4], eax
00000000000041cc         mov        ebx, dword [rsp+0xb8+var_B4]

                     loc_41d0:
00000000000041d0         mov        rcx, qword [rsp+0xb8+var_20]                ; CODE XREF=create+525, create+596, create+616
00000000000041d8         xor        rcx, qword [fs:0x28]
00000000000041e1         mov        eax, ebx
00000000000041e3         jne        loc_44fc

00000000000041e9         add        rsp, 0xa0
00000000000041f0         pop        rbx
00000000000041f1         pop        rbp
00000000000041f2         pop        r12
00000000000041f4         ret
                        ; endp
00000000000041f5         align      8

                     loc_41f8:
00000000000041f8         cmp        qword [n_open_pipes], 0x0                   ; n_open_pipes, CODE XREF=create+142
0000000000004200         je         loc_422c

0000000000004202         xor        ebx, ebx
0000000000004204         nop        dword [rax]

                     loc_4208:
0000000000004208         mov        rax, qword [open_pipes]                     ; open_pipes, CODE XREF=create+314
000000000000420f         mov        edi, dword [rax+rbx*4]                      ; argument "__fd" for method j_close
0000000000004212         call       j_close                                     ; close
0000000000004217         test       eax, eax
0000000000004219         jne        loc_44d0

000000000000421f         add        rbx, 0x1
0000000000004223         cmp        qword [n_open_pipes], rbx                   ; n_open_pipes
000000000000422a         ja         loc_4208

                     loc_422c:
000000000000422c         mov        edi, dword [rsp+0xb8+var_B4]                ; argument "__fd" for method j_close, CODE XREF=create+272
0000000000004230         call       j_close                                     ; close
0000000000004235         mov        r12d, eax
0000000000004238         call       j___errno_location                          ; __errno_location
000000000000423d         test       r12d, r12d
0000000000004240         mov        rbx, rax
0000000000004243         jne        loc_459a

0000000000004249         mov        edi, dword [rsp+0xb8+var_B8]
000000000000424c         test       edi, edi
000000000000424e         je         loc_426f

0000000000004250         xor        esi, esi                                    ; argument "__fd2" for method j_dup2
0000000000004252         call       j_dup2                                      ; dup2
0000000000004257         test       eax, eax
0000000000004259         jne        loc_45be

000000000000425f         mov        edi, dword [rsp+0xb8+var_B8]                ; argument "__fd" for method j_close
0000000000004262         call       j_close                                     ; close
0000000000004267         test       eax, eax
0000000000004269         jne        loc_43e8

                     loc_426f:
000000000000426f         lea        rsi, qword [oldblocked]                     ; argument "__set" for method j_sigprocmask, oldblocked, CODE XREF=create+350
0000000000004276         xor        edx, edx                                    ; argument "__oset" for method j_sigprocmask
0000000000004278         mov        edi, 0x2                                    ; argument "__how" for method j_sigprocmask
000000000000427d         call       j_sigprocmask                               ; sigprocmask
0000000000004282         mov        r12, qword [filter_command]                 ; filter_command
0000000000004289         mov        rdi, rbp                                    ; argument #1 for method last_component
000000000000428c         call       last_component                              ; last_component
0000000000004291         lea        rdx, qword [aClosingInputPi+19]             ; 0x8bb0
0000000000004298         xor        r8d, r8d
000000000000429b         mov        rsi, rax                                    ; argument "__arg" for method j_execl
000000000000429e         mov        rcx, r12
00000000000042a1         mov        rdi, rbp                                    ; argument "__path" for method j_execl
00000000000042a4         xor        eax, eax
00000000000042a6         call       j_execl                                     ; execl
00000000000042ab         lea        rsi, qword [aFailedToRunCom]                ; argument "msgid" for method j_dcgettext, "failed to run command: \\\"%s -c %s\\\""
00000000000042b2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000042b7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000042b9         call       j_dcgettext                                 ; dcgettext
00000000000042be         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
00000000000042c0         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000042c3         mov        r8, r12
00000000000042c6         mov        rcx, rbp
00000000000042c9         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000042ce         xor        eax, eax
00000000000042d0         call       j_error                                     ; error
00000000000042d5         nop        dword [rax]

                     loc_42d8:
00000000000042d8         cmp        byte [verbose], 0x0                         ; verbose, CODE XREF=create+41
00000000000042df         jne        loc_4410

                     loc_42e5:
00000000000042e5         xor        eax, eax                                    ; CODE XREF=create+860
00000000000042e7         mov        edx, 0x1b6                                  ; argument #3 for method open_safer
00000000000042ec         mov        esi, 0x41                                   ; argument #2 for method open_safer
00000000000042f1         mov        rdi, r12                                    ; argument #1 for method open_safer
00000000000042f4         call       open_safer                                  ; open_safer
00000000000042f9         test       eax, eax
00000000000042fb         mov        ebx, eax
00000000000042fd         js         loc_41d0

0000000000004303         mov        rdx, rsp                                    ; argument "__stat_buf" for method j___fxstat
0000000000004306         mov        esi, eax                                    ; argument "__fildes" for method j___fxstat
0000000000004308         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
000000000000430d         call       j___fxstat                                  ; __fxstat
0000000000004312         test       eax, eax
0000000000004314         jne        loc_45e2

000000000000431a         mov        rax, qword [rsp+0xb8+var_B0]
000000000000431f         cmp        qword [qword_20c308], rax                   ; qword_20c308
0000000000004326         jne        loc_4339

0000000000004328         mov        rax, qword [rsp+0xb8+var_B8]
000000000000432c         cmp        qword [in_stat_buf], rax                    ; in_stat_buf
0000000000004333         je         loc_4563

                     loc_4339:
0000000000004339         xor        esi, esi                                    ; argument "__length" for method j_ftruncate, CODE XREF=create+566
000000000000433b         mov        edi, ebx                                    ; argument "__fd" for method j_ftruncate
000000000000433d         call       j_ftruncate                                 ; ftruncate
0000000000004342         test       eax, eax
0000000000004344         je         loc_41d0

000000000000434a         mov        eax, dword [rsp+0xb8+var_A0]
000000000000434e         and        eax, 0xf000
0000000000004353         cmp        eax, 0x8000
0000000000004358         jne        loc_41d0

000000000000435e         mov        rdx, r12                                    ; argument #3 for method quotearg_n_style_colon
0000000000004361         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
0000000000004366         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
0000000000004368         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000436d         lea        rsi, qword [aSErrorTruncati]                ; argument "msgid" for method j_dcgettext, "%s: error truncating"
0000000000004374         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004379         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000437b         mov        rbp, rax
000000000000437e         call       j_dcgettext                                 ; dcgettext
0000000000004383         mov        rbx, rax
0000000000004386         call       j___errno_location                          ; __errno_location
000000000000438b         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000438d         mov        rcx, rbp
0000000000004390         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000004393         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000004398         xor        eax, eax
000000000000439a         call       j_error                                     ; error
000000000000439f         nop

                     loc_43a0:
00000000000043a0         mov        rdx, r12                                    ; argument #3 for method quotearg_n_style_colon, CODE XREF=create+111
00000000000043a3         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
00000000000043a5         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
00000000000043aa         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000043af         lea        rsi, qword [aExecutingWithF]                ; argument "msgid" for method j_dcgettext, "executing with FILE=%s\\n"
00000000000043b6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000043b8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000043bd         mov        rbx, rax
00000000000043c0         call       j_dcgettext                                 ; dcgettext
00000000000043c5         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000043cc         mov        rdx, rax
00000000000043cf         mov        rcx, rbx
00000000000043d2         mov        esi, 0x1
00000000000043d7         xor        eax, eax
00000000000043d9         call       j___fprintf_chk                             ; __fprintf_chk
00000000000043de         jmp        loc_4165
00000000000043e3         align      8

                     loc_43e8:
00000000000043e8         lea        rsi, qword [aClosingInputPi]                ; argument "msgid" for method j_dcgettext, "closing input pipe", CODE XREF=create+377
00000000000043ef         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000043f4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000043f6         call       j_dcgettext                                 ; dcgettext
00000000000043fb         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
00000000000043fd         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000004400         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000004405         xor        eax, eax
0000000000004407         call       j_error                                     ; error
000000000000440c         nop        dword [rax]

                     loc_4410:
0000000000004410         mov        rsi, rdi                                    ; argument #2 for method quotearg_style, CODE XREF=create+495
0000000000004413         mov        edi, 0x4                                    ; argument #1 for method quotearg_style
0000000000004418         call       quotearg_style                              ; quotearg_style
000000000000441d         lea        rsi, qword [aCreatingFileSn]                ; argument "msgid" for method j_dcgettext, "creating file %s\\n"
0000000000004424         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004426         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000442b         mov        rbx, rax
000000000000442e         call       j_dcgettext                                 ; dcgettext
0000000000004433         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000443a         mov        rdx, rax
000000000000443d         mov        rcx, rbx
0000000000004440         mov        esi, 0x1
0000000000004445         xor        eax, eax
0000000000004447         call       j___fprintf_chk                             ; __fprintf_chk
000000000000444c         jmp        loc_42e5
0000000000004451         align      8

                     loc_4458:
0000000000004458         test       rdi, rdi                                    ; CODE XREF=create+196
000000000000445b         je         loc_44a1

000000000000445d         movabs     rax, 0x1555555555555554
0000000000004467         cmp        rcx, rax
000000000000446a         ja         loc_44ca

000000000000446c         mov        rax, rcx
000000000000446f         shr        rax, 0x1
0000000000004472         lea        rcx, qword [rcx+rax+1]

                     loc_4477:
0000000000004477         lea        rsi, qword [rcx*4]                          ; CODE XREF=create+984
000000000000447f         mov        qword [open_pipes_alloc], rcx               ; open_pipes_alloc
0000000000004486         call       xrealloc                                    ; xrealloc
000000000000448b         mov        rcx, qword [n_open_pipes]                   ; n_open_pipes
0000000000004492         mov        rdi, rax
0000000000004495         mov        qword [open_pipes], rax                     ; open_pipes
000000000000449c         jmp        loc_41ba

                     loc_44a1:
00000000000044a1         test       rcx, rcx                                    ; CODE XREF=create+875
00000000000044a4         mov        eax, 0x20
00000000000044a9         mov        edx, 0x4
00000000000044ae         cmove      rcx, rax
00000000000044b2         mov        rax, rdx
00000000000044b5         xor        esi, esi
00000000000044b7         mul        rcx
00000000000044ba         jo         loc_4559

                     loc_44c0:
00000000000044c0         test       rax, rax                                    ; CODE XREF=sub_44cf+143
00000000000044c3         js         loc_44ca

00000000000044c5         test       rsi, rsi
00000000000044c8         je         loc_4477

                     loc_44ca:
00000000000044ca         call       xalloc_die                                  ; xalloc_die, CODE XREF=create+890, create+979
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_44cf:
00000000000044cf         nop
                        ; endp

                     loc_44d0:
00000000000044d0         lea        rsi, qword [aClosingPriorPi]                ; argument "msgid" for method j_dcgettext, "closing prior pipe", CODE XREF=create+297
00000000000044d7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000044dc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000044de         call       j_dcgettext                                 ; dcgettext
00000000000044e3         mov        rbx, rax
00000000000044e6         call       j___errno_location                          ; __errno_location
00000000000044eb         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000044ed         mov        rdx, rbx                                    ; argument "__format" for method j_error
00000000000044f0         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000044f5         xor        eax, eax
00000000000044f7         call       j_error                                     ; error

                     loc_44fc:
00000000000044fc         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=create+243
                        ; endp

                     loc_4501:
0000000000004501         lea        rsi, qword [aFailedToSetFil]                ; argument "msgid" for method j_dcgettext, "failed to set FILE environment variable", CODE XREF=create+98
0000000000004508         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000450d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000450f         call       j_dcgettext                                 ; dcgettext
0000000000004514         mov        rbx, rax
0000000000004517         call       j___errno_location                          ; __errno_location
000000000000451c         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000451e         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000004521         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000004526         xor        eax, eax
0000000000004528         call       j_error                                     ; error

                     loc_452d:
000000000000452d         lea        rsi, qword [aFailedToCreate]                ; argument "msgid" for method j_dcgettext, "failed to create pipe", CODE XREF=create+127
0000000000004534         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004539         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000453b         call       j_dcgettext                                 ; dcgettext
0000000000004540         mov        rbx, rax
0000000000004543         call       j___errno_location                          ; __errno_location
0000000000004548         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000454a         mov        rdx, rbx                                    ; argument "__format" for method j_error
000000000000454d         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000004552         xor        eax, eax
0000000000004554         call       j_error                                     ; error

                     loc_4559:
0000000000004559         mov        esi, 0x1                                    ; CODE XREF=create+970
000000000000455e         jmp        loc_44c0

                     loc_4563:
0000000000004563         mov        rsi, r12                                    ; argument #2 for method quotearg_style, CODE XREF=create+579
0000000000004566         mov        edi, 0x4                                    ; argument #1 for method quotearg_style
000000000000456b         call       quotearg_style                              ; quotearg_style
0000000000004570         lea        rsi, qword [aSWouldOverwrit]                ; argument "msgid" for method j_dcgettext, "%s would overwrite input; aborting"
0000000000004577         mov        rbx, rax
000000000000457a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000457f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004581         call       j_dcgettext                                 ; dcgettext
0000000000004586         mov        rcx, rbx
0000000000004589         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000458c         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000458e         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000004593         xor        eax, eax
0000000000004595         call       j_error                                     ; error

                     loc_459a:
000000000000459a         lea        rsi, qword [aClosingOutputP]                ; argument "msgid" for method j_dcgettext, "closing output pipe", CODE XREF=create+339
00000000000045a1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000045a6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000045a8         call       j_dcgettext                                 ; dcgettext
00000000000045ad         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
00000000000045af         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000045b2         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000045b7         xor        eax, eax
00000000000045b9         call       j_error                                     ; error

                     loc_45be:
00000000000045be         lea        rsi, qword [aMovingInputPip]                ; argument "msgid" for method j_dcgettext, "moving input pipe", CODE XREF=create+361
00000000000045c5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000045ca         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000045cc         call       j_dcgettext                                 ; dcgettext
00000000000045d1         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
00000000000045d3         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000045d6         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000045db         xor        eax, eax
00000000000045dd         call       j_error                                     ; error

                     loc_45e2:
00000000000045e2         mov        rsi, r12                                    ; argument #2 for method quotearg_style, CODE XREF=create+548
00000000000045e5         mov        edi, 0x4                                    ; argument #1 for method quotearg_style
00000000000045ea         call       quotearg_style                              ; quotearg_style
00000000000045ef         lea        rsi, qword [aFailedToStatS]                 ; argument "msgid" for method j_dcgettext, "failed to stat %s"
00000000000045f6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000045fb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000045fd         mov        rbp, rax
0000000000004600         call       j_dcgettext                                 ; dcgettext
0000000000004605         mov        rbx, rax
0000000000004608         call       j___errno_location                          ; __errno_location
000000000000460d         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000460f         mov        rcx, rbp
0000000000004612         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000004615         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000461a         xor        eax, eax
000000000000461c         call       j_error                                     ; error

                     loc_4621:
0000000000004621         lea        rsi, qword [aFailedToCloseI]                ; argument "msgid" for method j_dcgettext, "failed to close input pipe", CODE XREF=create+163
0000000000004628         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000462d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000462f         call       j_dcgettext                                 ; dcgettext
0000000000004634         mov        rbx, rax
0000000000004637         call       j___errno_location                          ; __errno_location
000000000000463c         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000463e         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000004641         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000004646         xor        eax, eax
0000000000004648         call       j_error                                     ; error

                     loc_464d:
000000000000464d         lea        rsi, qword [aForkSystemCall]                ; argument "msgid" for method j_dcgettext, "fork system call failed", CODE XREF=create+147
0000000000004654         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004659         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000465b         call       j_dcgettext                                 ; dcgettext
0000000000004660         mov        rbx, rax
0000000000004663         call       j___errno_location                          ; __errno_location
0000000000004668         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000466a         mov        rdx, rbx                                    ; argument "__format" for method j_error
000000000000466d         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000004672         xor        eax, eax
0000000000004674         call       j_error                                     ; error
0000000000004679         nop        dword [rax]                                 ; End of unwind block (FDE at 0xa960)
                     ofile_open:
0000000000004680         push       r15                                         ; Begin of unwind block (FDE at 0xa994), CODE XREF=main+4683, main+5498
0000000000004682         push       r14
0000000000004684         push       r13
0000000000004686         mov        r13, rsi
0000000000004689         push       r12
000000000000468b         shl        r13, 0x5
000000000000468f         push       rbp
0000000000004690         push       rbx
0000000000004691         add        r13, rdi
0000000000004694         xor        ebp, ebp
0000000000004696         sub        rsp, 0x18
000000000000469a         mov        eax, dword [r13+8]
000000000000469e         test       eax, eax
00000000000046a0         js         loc_46b3

                     loc_46a2:
00000000000046a2         add        rsp, 0x18                                   ; CODE XREF=ofile_open+299
00000000000046a6         mov        eax, ebp
00000000000046a8         pop        rbx
00000000000046a9         pop        rbp
00000000000046aa         pop        r12
00000000000046ac         pop        r13
00000000000046ae         pop        r14
00000000000046b0         pop        r15
00000000000046b2         ret
                        ; endp

                     loc_46b3:
00000000000046b3         lea        rbx, qword [rsi-1]                          ; CODE XREF=ofile_open+32
00000000000046b7         lea        r14, qword [rdx-1]
00000000000046bb         test       rsi, rsi
00000000000046be         mov        r12, rdi
00000000000046c1         mov        r15, rsi
00000000000046c4         mov        rdi, qword [r13]
00000000000046c8         cmove      rbx, r14
00000000000046cc         cmp        eax, 0xffffffff
00000000000046cf         je         loc_476b

00000000000046d5         nop        dword [rax]

                     loc_46d8:
00000000000046d8         xor        eax, eax                                    ; CODE XREF=ofile_open+229
00000000000046da         mov        esi, aMinvocationnam                        ; argument #2 for method open_safer, "m_invocation_name"
00000000000046df         call       open_safer                                  ; open_safer
00000000000046e4         test       eax, eax
00000000000046e6         jns        loc_4778

                     loc_46ec:
00000000000046ec         call       j___errno_location                          ; __errno_location, CODE XREF=ofile_open+242
00000000000046f1         mov        r8, rax
00000000000046f4         mov        eax, dword [rax]
00000000000046f6         sub        eax, 0x17
00000000000046f9         cmp        eax, 0x1
00000000000046fc         jbe        loc_471f

00000000000046fe         jmp        loc_47e3
0000000000004703         align      8

                     loc_4708:
0000000000004708         lea        rax, qword [rbx-1]                          ; CODE XREF=ofile_open+174
000000000000470c         test       rbx, rbx
000000000000470f         cmove      rax, r14
0000000000004713         cmp        rax, r15
0000000000004716         mov        rbx, rax
0000000000004719         je         loc_47b0

                     loc_471f:
000000000000471f         mov        rbp, rbx                                    ; CODE XREF=ofile_open+124
0000000000004722         shl        rbp, 0x5
0000000000004726         add        rbp, r12
0000000000004729         mov        eax, dword [rbp+8]
000000000000472c         test       eax, eax
000000000000472e         js         loc_4708

0000000000004730         mov        rdi, qword [rbp+0x10]
0000000000004734         mov        qword [rsp+0x100+var_F8], r8
0000000000004739         call       rpl_fclose                                  ; rpl_fclose
000000000000473e         test       eax, eax
0000000000004740         jne        loc_4816

0000000000004746         mov        dword [rbp+8], 0xfffffffe
000000000000474d         mov        eax, dword [r13+8]
0000000000004751         mov        qword [rbp+0x10], 0x0
0000000000004759         mov        rdi, qword [r13]
000000000000475d         mov        ebp, 0x1
0000000000004762         cmp        eax, 0xffffffff
0000000000004765         jne        loc_46d8

                     loc_476b:
000000000000476b         call       create                                      ; create, CODE XREF=ofile_open+79
0000000000004770         test       eax, eax
0000000000004772         js         loc_46ec

                     loc_4778:
0000000000004778         lea        rsi, qword [aFailedToCloseI+27]             ; argument "__modes" for method j_fdopen, 0x8be6, CODE XREF=ofile_open+102
000000000000477f         mov        dword [r13+8], eax
0000000000004783         mov        edi, eax                                    ; argument "__fd" for method j_fdopen
0000000000004785         call       j_fdopen                                    ; fdopen
000000000000478a         test       rax, rax
000000000000478d         mov        qword [r13+0x10], rax
0000000000004791         je         loc_4844

0000000000004797         mov        eax, dword [filter_pid]                     ; filter_pid
000000000000479d         mov        dword [filter_pid], 0x0                     ; filter_pid
00000000000047a7         mov        dword [r13+0x18], eax
00000000000047ab         jmp        loc_46a2

                     loc_47b0:
00000000000047b0         mov        rdx, qword [r13]                            ; argument #3 for method quotearg_n_style_colon, CODE XREF=ofile_open+153
00000000000047b4         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
00000000000047b9         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
00000000000047bb         mov        qword [rsp+0x100+var_F8], r8
00000000000047c0         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000047c5         mov        r8, qword [rsp+0x100+var_F8]
00000000000047ca         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
00000000000047d1         mov        rcx, rax
00000000000047d4         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000047d9         xor        eax, eax
00000000000047db         mov        esi, dword [r8]                             ; argument "__errnum" for method j_error
00000000000047de         call       j_error                                     ; error

                     loc_47e3:
00000000000047e3         mov        rdx, qword [r13]                            ; argument #3 for method quotearg_n_style_colon, CODE XREF=ofile_open+126
00000000000047e7         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
00000000000047ec         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
00000000000047ee         mov        qword [rsp+0x100+var_F8], r8
00000000000047f3         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000047f8         mov        r8, qword [rsp+0x100+var_F8]
00000000000047fd         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
0000000000004804         mov        rcx, rax
0000000000004807         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000480c         xor        eax, eax
000000000000480e         mov        esi, dword [r8]                             ; argument "__errnum" for method j_error
0000000000004811         call       j_error                                     ; error

                     loc_4816:
0000000000004816         mov        rdx, qword [rbp]                            ; argument #3 for method quotearg_n_style_colon, CODE XREF=ofile_open+192
000000000000481a         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
000000000000481f         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
0000000000004821         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000004826         mov        r8, qword [rsp+0x100+var_F8]
000000000000482b         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
0000000000004832         mov        rcx, rax
0000000000004835         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000483a         xor        eax, eax
000000000000483c         mov        esi, dword [r8]                             ; argument "__errnum" for method j_error
000000000000483f         call       j_error                                     ; error

                     loc_4844:
0000000000004844         mov        rdx, qword [r13]                            ; argument #3 for method quotearg_n_style_colon, CODE XREF=ofile_open+273
0000000000004848         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
000000000000484d         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
000000000000484f         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000004854         mov        rbx, rax
0000000000004857         call       j___errno_location                          ; __errno_location
000000000000485c         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000485e         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
0000000000004865         mov        rcx, rbx
0000000000004868         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000486d         xor        eax, eax
000000000000486f         call       j_error                                     ; error
0000000000004874         nop                                                    ; End of unwind block (FDE at 0xa994)
0000000000004876         nop        word [cs:rax+rax]
                     closeout:
0000000000004880         push       r13                                         ; Begin of unwind block (FDE at 0xa9e0), CODE XREF=main+3930, main+5521, cwrite+65
0000000000004882         push       r12
0000000000004884         mov        r12d, edx
0000000000004887         push       rbp
0000000000004888         push       rbx
0000000000004889         mov        ebp, esi
000000000000488b         mov        rbx, rcx
000000000000488e         sub        rsp, 0x48
0000000000004892         mov        rax, qword [fs:0x28]
000000000000489b         mov        qword [rsp+0x168+var_130], rax
00000000000048a0         xor        eax, eax
00000000000048a2         test       rdi, rdi
00000000000048a5         je         loc_49b8

00000000000048ab         call       rpl_fclose                                  ; rpl_fclose
00000000000048b0         test       eax, eax
00000000000048b2         jne        loc_4970

                     loc_48b8:
00000000000048b8         test       ebp, ebp                                    ; CODE XREF=closeout+261
00000000000048ba         js         loc_4900

                     loc_48bc:
00000000000048bc         mov        rdi, qword [n_open_pipes]                   ; n_open_pipes, CODE XREF=closeout+329
00000000000048c3         test       rdi, rdi
00000000000048c6         je         loc_4900

00000000000048c8         mov        rsi, qword [open_pipes]                     ; open_pipes
00000000000048cf         cmp        ebp, dword [rsi]
00000000000048d1         je         loc_4a00

00000000000048d7         lea        rdx, qword [rsi+4]
00000000000048db         sub        rdi, 0x1
00000000000048df         xor        eax, eax
00000000000048e1         jmp        loc_48fb
00000000000048e3         align      8

                     loc_48e8:
00000000000048e8         mov        rcx, rdx                                    ; CODE XREF=closeout+126
00000000000048eb         add        rax, 0x1
00000000000048ef         add        rdx, 0x4
00000000000048f3         cmp        dword [rcx], ebp
00000000000048f5         je         loc_4a10

                     loc_48fb:
00000000000048fb         cmp        rdi, rax                                    ; CODE XREF=closeout+97
00000000000048fe         jne        loc_48e8

                     loc_4900:
0000000000004900         test       r12d, r12d                                  ; CODE XREF=closeout+58, closeout+70, closeout+314, closeout+412
0000000000004903         jle        loc_4948

0000000000004905         lea        rsi, qword [rsp+0x168+var_14C]              ; argument "__stat_loc" for method j_waitpid
000000000000490a         xor        edx, edx                                    ; argument "__options" for method j_waitpid
000000000000490c         mov        edi, r12d                                   ; argument "__pid" for method j_waitpid
000000000000490f         mov        dword [rsp+0x168+var_14C], 0x0
0000000000004917         call       j_waitpid                                   ; waitpid
000000000000491c         cmp        eax, 0xffffffff
000000000000491f         je         loc_4a88

                     loc_4925:
0000000000004925         mov        ecx, dword [rsp+0x168+var_14C]              ; CODE XREF=closeout+531
0000000000004929         mov        ebp, ecx
000000000000492b         and        ebp, 0x7f
000000000000492e         lea        eax, dword [rbp+1]
0000000000004931         cmp        al, 0x1
0000000000004933         jle        loc_4a28

0000000000004939         cmp        ebp, 0xd
000000000000493c         jne        loc_4ac0

0000000000004942         nop        word [rax+rax]

                     loc_4948:
0000000000004948         mov        rax, qword [rsp+0x168+var_130]              ; CODE XREF=closeout+131, closeout+437, closeout+510, closeout+666
000000000000494d         xor        rax, qword [fs:0x28]
0000000000004956         jne        loc_4b40

000000000000495c         add        rsp, 0x48
0000000000004960         pop        rbx
0000000000004961         pop        rbp
0000000000004962         pop        r12
0000000000004964         pop        r13
0000000000004966         ret
                        ; endp
0000000000004967         align      16

                     loc_4970:
0000000000004970         call       j___errno_location                          ; __errno_location, CODE XREF=closeout+50
0000000000004975         cmp        qword [filter_command], 0x0                 ; filter_command
000000000000497d         mov        r13, rax
0000000000004980         je         loc_498b

0000000000004982         cmp        dword [rax], 0x20
0000000000004985         je         loc_48b8

                     loc_498b:
000000000000498b         mov        rdx, rbx                                    ; argument #3 for method quotearg_n_style_colon, CODE XREF=closeout+256
000000000000498e         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
0000000000004993         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
0000000000004995         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000499a         mov        esi, dword [r13]                            ; argument "__errnum" for method j_error
000000000000499e         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
00000000000049a5         mov        rcx, rax
00000000000049a8         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000049ad         xor        eax, eax
00000000000049af         call       j_error                                     ; error
00000000000049b4         nop        dword [rax]

                     loc_49b8:
00000000000049b8         test       esi, esi                                    ; CODE XREF=closeout+37
00000000000049ba         js         loc_4900

00000000000049c0         mov        edi, ebp                                    ; argument "__fd" for method j_close
00000000000049c2         call       j_close                                     ; close
00000000000049c7         test       eax, eax
00000000000049c9         jns        loc_48bc

00000000000049cf         mov        rdx, rbx                                    ; argument #3 for method quotearg_n_style_colon
00000000000049d2         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
00000000000049d7         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
00000000000049d9         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000049de         mov        rbx, rax
00000000000049e1         call       j___errno_location                          ; __errno_location
00000000000049e6         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000049e8         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
00000000000049ef         mov        rcx, rbx
00000000000049f2         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000049f7         xor        eax, eax
00000000000049f9         call       j_error                                     ; error
00000000000049fe         nop

                     loc_4a00:
0000000000004a00         mov        rcx, rsi                                    ; CODE XREF=closeout+81
0000000000004a03         sub        rdi, 0x1
0000000000004a07         nop        word [rax+rax]

                     loc_4a10:
0000000000004a10         mov        eax, dword [rsi+rdi*4]                      ; CODE XREF=closeout+117
0000000000004a13         mov        qword [n_open_pipes], rdi                   ; n_open_pipes
0000000000004a1a         mov        dword [rcx], eax
0000000000004a1c         jmp        loc_4900
0000000000004a21         align      8

                     loc_4a28:
0000000000004a28         test       ebp, ebp                                    ; CODE XREF=closeout+179
0000000000004a2a         jne        loc_4b45

0000000000004a30         movzx      ebp, ch
0000000000004a33         test       ebp, ebp
0000000000004a35         je         loc_4948

0000000000004a3b         mov        r12, qword [filter_command]                 ; filter_command
0000000000004a42         mov        rdx, rbx                                    ; argument #3 for method quotearg_n_style_colon
0000000000004a45         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
0000000000004a47         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
0000000000004a4c         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000004a51         lea        rsi, qword [aWithFilesExitD]                ; argument "msgid" for method j_dcgettext, "with FILE=%s, exit %d from command: %s"
0000000000004a58         mov        rbx, rax
0000000000004a5b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004a5d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004a62         call       j_dcgettext                                 ; dcgettext
0000000000004a67         mov        r9, r12
0000000000004a6a         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000004a6d         mov        r8d, ebp
0000000000004a70         mov        rcx, rbx
0000000000004a73         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000004a75         mov        edi, ebp                                    ; argument "__status" for method j_error
0000000000004a77         xor        eax, eax
0000000000004a79         call       j_error                                     ; error
0000000000004a7e         jmp        loc_4948
0000000000004a83         align      8

                     loc_4a88:
0000000000004a88         call       j___errno_location                          ; __errno_location, CODE XREF=closeout+159
0000000000004a8d         cmp        dword [rax], 0xa
0000000000004a90         mov        rbp, rax
0000000000004a93         je         loc_4925

0000000000004a99         lea        rsi, qword [aWaitingForChil]                ; argument "msgid" for method j_dcgettext, "waiting for child process"
0000000000004aa0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004aa5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004aa7         call       j_dcgettext                                 ; dcgettext
0000000000004aac         mov        esi, dword [rbp]                            ; argument "__errnum" for method j_error
0000000000004aaf         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000004ab2         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000004ab7         xor        eax, eax
0000000000004ab9         call       j_error                                     ; error
0000000000004abe         nop

                     loc_4ac0:
0000000000004ac0         lea        r12, qword [rsp+0x168+var_148]              ; CODE XREF=closeout+188
0000000000004ac5         mov        edi, ebp
0000000000004ac7         mov        rsi, r12
0000000000004aca         call       sig2str                                     ; sig2str
0000000000004acf         test       eax, eax
0000000000004ad1         jne        loc_4b20

                     loc_4ad3:
0000000000004ad3         mov        rdx, rbx                                    ; argument #3 for method quotearg_n_style_colon, CODE XREF=closeout+702
0000000000004ad6         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
0000000000004ad8         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
0000000000004add         mov        r13, qword [filter_command]                 ; filter_command
0000000000004ae4         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000004ae9         lea        rsi, qword [aWithFilesSigna]                ; argument "msgid" for method j_dcgettext, "with FILE=%s, signal %s from command: %s"
0000000000004af0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004af2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004af7         mov        rbx, rax
0000000000004afa         call       j_dcgettext                                 ; dcgettext
0000000000004aff         lea        edi, dword [rbp+0x80]                       ; argument "__status" for method j_error
0000000000004b05         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000004b08         mov        r9, r13
0000000000004b0b         mov        r8, r12
0000000000004b0e         mov        rcx, rbx
0000000000004b11         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000004b13         xor        eax, eax
0000000000004b15         call       j_error                                     ; error
0000000000004b1a         jmp        loc_4948
0000000000004b1f         align      32

                     loc_4b20:
0000000000004b20         lea        rcx, qword [aWaitingForChil+26]             ; 0x8c02, CODE XREF=closeout+593
0000000000004b27         mov        r8d, ebp
0000000000004b2a         mov        edx, 0x13
0000000000004b2f         mov        esi, 0x1
0000000000004b34         mov        rdi, r12
0000000000004b37         xor        eax, eax
0000000000004b39         call       j___sprintf_chk                             ; __sprintf_chk
0000000000004b3e         jmp        loc_4ad3

                     loc_4b40:
0000000000004b40         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=closeout+214
                        ; endp

                     loc_4b45:
0000000000004b45         lea        rsi, qword [aUnknownStatusF]                ; argument "msgid" for method j_dcgettext, "unknown status from command (0x%X)", CODE XREF=closeout+426
0000000000004b4c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004b51         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004b53         mov        dword [rsp+0x168+var_15C], ecx
0000000000004b57         call       j_dcgettext                                 ; dcgettext
0000000000004b5c         mov        ecx, dword [rsp+0x168+var_15C]
0000000000004b60         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000004b63         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000004b65         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000004b6a         xor        eax, eax
0000000000004b6c         call       j_error                                     ; error
0000000000004b71         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0xa9e0)
0000000000004b76         nop        word [cs:rax+rax]
                     cwrite:
0000000000004b80         push       rbp                                         ; Begin of unwind block (FDE at 0xaa1c), CODE XREF=main+2862, main+3073, main+3181, main+3824, main+4124, main+4201, main+4245, main+5354, main+5899, main+6427, bytes_split+165
0000000000004b81         push       rbx
0000000000004b82         mov        rbp, rsi
0000000000004b85         mov        rbx, rdx
0000000000004b88         sub        rsp, 0x8
0000000000004b8c         test       dil, dil
0000000000004b8f         je         loc_4c50

0000000000004b95         test       rsi, rsi
0000000000004b98         jne        loc_4bac

0000000000004b9a         test       rdx, rdx
0000000000004b9d         jne        loc_4bac

0000000000004b9f         cmp        byte [elide_empty_files], 0x0               ; elide_empty_files
0000000000004ba6         jne        loc_4c40

                     loc_4bac:
0000000000004bac         mov        rcx, qword [outfile]                        ; argument #4 for method closeout, outfile, CODE XREF=cwrite+24, cwrite+29
0000000000004bb3         mov        edx, dword [filter_pid]                     ; argument #3 for method closeout, filter_pid
0000000000004bb9         xor        edi, edi                                    ; argument #1 for method closeout
0000000000004bbb         mov        esi, dword [output_desc]                    ; argument #2 for method closeout, output_desc
0000000000004bc1         call       closeout                                    ; closeout
0000000000004bc6         call       next_file_name                              ; next_file_name
0000000000004bcb         mov        rdi, qword [outfile]                        ; argument #1 for method create, outfile
0000000000004bd2         call       create                                      ; create
0000000000004bd7         test       eax, eax
0000000000004bd9         mov        edi, eax
0000000000004bdb         mov        dword [output_desc], eax                    ; output_desc
0000000000004be1         js         loc_4c58

                     loc_4be3:
0000000000004be3         mov        rdx, rbx                                    ; argument #3 for method full_write, CODE XREF=cwrite+214
0000000000004be6         mov        rsi, rbp                                    ; argument #2 for method full_write
0000000000004be9         call       full_write                                  ; full_write
0000000000004bee         cmp        rax, rbx
0000000000004bf1         je         loc_4c40

0000000000004bf3         call       j___errno_location                          ; __errno_location
0000000000004bf8         cmp        qword [filter_command], 0x0                 ; filter_command
0000000000004c00         mov        rbx, rax
0000000000004c03         je         loc_4c0c

0000000000004c05         xor        eax, eax
0000000000004c07         cmp        dword [rbx], 0x20
0000000000004c0a         je         loc_4c45

                     loc_4c0c:
0000000000004c0c         mov        rdx, qword [outfile]                        ; argument #3 for method quotearg_n_style_colon, outfile, CODE XREF=cwrite+131
0000000000004c13         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
0000000000004c18         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
0000000000004c1a         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000004c1f         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000004c21         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
0000000000004c28         mov        rcx, rax
0000000000004c2b         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000004c30         xor        eax, eax
0000000000004c32         call       j_error                                     ; error
0000000000004c37         nop        word [rax+rax]

                     loc_4c40:
0000000000004c40         mov        eax, 0x1                                    ; CODE XREF=cwrite+38, cwrite+113

                     loc_4c45:
0000000000004c45         add        rsp, 0x8                                    ; CODE XREF=cwrite+138
0000000000004c49         pop        rbx
0000000000004c4a         pop        rbp
0000000000004c4b         ret
                        ; endp
0000000000004c4c         align      16

                     loc_4c50:
0000000000004c50         mov        edi, dword [output_desc]                    ; output_desc, CODE XREF=cwrite+15
0000000000004c56         jmp        loc_4be3

                     loc_4c58:
0000000000004c58         mov        rdx, qword [outfile]                        ; argument #3 for method quotearg_n_style_colon, outfile, CODE XREF=cwrite+97
0000000000004c5f         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
0000000000004c64         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
0000000000004c66         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000004c6b         mov        rbx, rax
0000000000004c6e         call       j___errno_location                          ; __errno_location
0000000000004c73         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000004c75         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
0000000000004c7c         mov        rcx, rbx
0000000000004c7f         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000004c84         xor        eax, eax
0000000000004c86         call       j_error                                     ; error
0000000000004c8b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0xaa1c)
                     bytes_split:
0000000000004c90         push       r15                                         ; Begin of unwind block (FDE at 0xaa48), CODE XREF=main+3889, main+5313
0000000000004c92         push       r14
0000000000004c94         xor        r14d, r14d
0000000000004c97         push       r13
0000000000004c99         push       r12
0000000000004c9b         mov        r15, rdi
0000000000004c9e         push       rbp
0000000000004c9f         push       rbx
0000000000004ca0         mov        r12, rdi
0000000000004ca3         mov        ebp, 0x1
0000000000004ca8         mov        ebx, 0x1
0000000000004cad         sub        rsp, 0x38
0000000000004cb1         cmp        rcx, 0xffffffffffffffff
0000000000004cb5         mov        qword [rsp+0x1e8+var_1C8], rsi
0000000000004cba         mov        qword [rsp+0x1e8+var_1C0], rdx
0000000000004cbf         je         loc_4d64

0000000000004cc5         cmp        rcx, rdx
0000000000004cc8         mov        r13, rcx
0000000000004ccb         setb       byte [rsp+0x1e8+var_1C9]
0000000000004cd0         cmp        r13, r12
0000000000004cd3         jb         loc_4da6

                     loc_4cd9:
0000000000004cd9         test       r8, r8                                      ; CODE XREF=bytes_split+272
0000000000004cdc         mov        r9, qword [rsp+0x1e8+var_1C8]
0000000000004ce1         sete       r11b
0000000000004ce5         jmp        loc_4d18
0000000000004ce7         align      16

                     loc_4cf0:
0000000000004cf0         movzx      ebx, bl                                     ; CODE XREF=bytes_split+139, bytes_split+188
0000000000004cf3         add        r14, rbx
0000000000004cf6         cmp        r14, r8
0000000000004cf9         setb       bl
0000000000004cfc         or         bl, r11b
0000000000004cff         jne        loc_4d0a

0000000000004d01         test       bpl, bpl
0000000000004d04         je         loc_4dc8

                     loc_4d0a:
0000000000004d0a         sub        r13, r12                                    ; CODE XREF=bytes_split+111
0000000000004d0d         add        r9, r12
0000000000004d10         mov        r12, r15
0000000000004d13         cmp        r15, r13
0000000000004d16         ja         loc_4d50

                     loc_4d18:
0000000000004d18         or         bpl, bl                                     ; CODE XREF=bytes_split+85
0000000000004d1b         je         loc_4cf0

0000000000004d1d         mov        rsi, r9                                     ; argument #2 for method cwrite
0000000000004d20         movzx      edi, bl                                     ; argument #1 for method cwrite
0000000000004d23         mov        rdx, r12                                    ; argument #3 for method cwrite
0000000000004d26         mov        qword [rsp+0x1e8+var_1D8], r8
0000000000004d2b         mov        byte [rsp+0x1e8+var_1CA], r11b
0000000000004d30         mov        qword [rsp+0x1e8+var_1E0], r9
0000000000004d35         call       cwrite                                      ; cwrite
0000000000004d3a         mov        r8, qword [rsp+0x1e8+var_1D8]
0000000000004d3f         mov        ebp, eax
0000000000004d41         movzx      r11d, byte [rsp+0x1e8+var_1CA]
0000000000004d47         mov        r9, qword [rsp+0x1e8+var_1E0]
0000000000004d4c         jmp        loc_4cf0
0000000000004d4e         align      16

                     loc_4d50:
0000000000004d50         test       r13, r13                                    ; CODE XREF=bytes_split+134
0000000000004d53         jne        loc_4de0

                     loc_4d59:
0000000000004d59         cmp        byte [rsp+0x1e8+var_1C9], 0x0               ; CODE XREF=bytes_split+281, bytes_split+388
0000000000004d5e         jne        loc_4e4e

                     loc_4d64:
0000000000004d64         test       bpl, bpl                                    ; CODE XREF=bytes_split+47
0000000000004d67         je         loc_4e20

                     loc_4d6d:
0000000000004d6d         mov        rdx, qword [rsp+0x1e8+var_1C0]              ; CODE XREF=bytes_split+441
0000000000004d72         mov        rsi, qword [rsp+0x1e8+var_1C8]
0000000000004d77         xor        edi, edi
0000000000004d79         mov        qword [rsp+0x1e8+var_1E0], r8
0000000000004d7e         call       safe_read                                   ; safe_read
0000000000004d83         cmp        rax, 0xffffffffffffffff
0000000000004d87         mov        r13, rax
0000000000004d8a         mov        r8, qword [rsp+0x1e8+var_1E0]
0000000000004d8f         je         loc_4e86

0000000000004d95         test       rax, rax
0000000000004d98         sete       byte [rsp+0x1e8+var_1C9]
0000000000004d9d         cmp        r13, r12
0000000000004da0         jae        loc_4cd9

                     loc_4da6:
0000000000004da6         test       r13, r13                                    ; CODE XREF=bytes_split+67
0000000000004da9         je         loc_4d59

0000000000004dab         mov        eax, ebp
0000000000004dad         or         al, bl
0000000000004daf         jne        loc_4dd7

0000000000004db1         movzx      eax, al
0000000000004db4         xor        ebp, ebp
0000000000004db6         mov        edx, 0x1
0000000000004dbb         add        r14, rax
0000000000004dbe         cmp        r8, r14
0000000000004dc1         sete       bl
0000000000004dc4         and        bl, dl
0000000000004dc6         je         loc_4e11

                     loc_4dc8:
0000000000004dc8         add        rsp, 0x38                                   ; CODE XREF=bytes_split+116, bytes_split+383, bytes_split+453
0000000000004dcc         pop        rbx
0000000000004dcd         pop        rbp
0000000000004dce         pop        r12
0000000000004dd0         pop        r13
0000000000004dd2         pop        r14
0000000000004dd4         pop        r15
0000000000004dd6         ret
                        ; endp

                     loc_4dd7:
0000000000004dd7         mov        r9, qword [rsp+0x1e8+var_1C8]               ; CODE XREF=bytes_split+287
0000000000004ddc         nop        dword [rax]

                     loc_4de0:
0000000000004de0         movzx      edi, bl                                     ; argument #1 for method cwrite, CODE XREF=bytes_split+195
0000000000004de3         mov        rdx, r13                                    ; argument #3 for method cwrite
0000000000004de6         mov        rsi, r9                                     ; argument #2 for method cwrite
0000000000004de9         mov        qword [rsp+0x1e8+var_1E0], r8
0000000000004dee         call       cwrite                                      ; cwrite
0000000000004df3         mov        r8, qword [rsp+0x1e8+var_1E0]
0000000000004df8         mov        edx, eax
0000000000004dfa         mov        ebp, eax
0000000000004dfc         mov        eax, ebx
0000000000004dfe         xor        edx, 0x1
0000000000004e01         movzx      eax, al
0000000000004e04         add        r14, rax
0000000000004e07         cmp        r8, r14
0000000000004e0a         sete       bl
0000000000004e0d         and        bl, dl
0000000000004e0f         jne        loc_4dc8

                     loc_4e11:
0000000000004e11         sub        r12, r13                                    ; CODE XREF=bytes_split+310
0000000000004e14         jmp        loc_4d59
0000000000004e19         align      32

                     loc_4e20:
0000000000004e20         mov        rsi, r12                                    ; argument "__offset" for method j_lseek, CODE XREF=bytes_split+215
0000000000004e23         xor        edi, edi                                    ; argument "__fd" for method j_lseek
0000000000004e25         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000004e2a         mov        qword [rsp+0x1e8+var_1E0], r8
0000000000004e2f         call       j_lseek                                     ; lseek
0000000000004e34         cmp        rax, 0xffffffffffffffff
0000000000004e38         mov        eax, 0x1
0000000000004e3d         mov        r8, qword [rsp+0x1e8+var_1E0]
0000000000004e42         cmovne     r12, r15
0000000000004e46         cmovne     ebx, eax
0000000000004e49         jmp        loc_4d6d

                     loc_4e4e:
0000000000004e4e         cmp        r14, r8                                     ; CODE XREF=bytes_split+206
0000000000004e51         lea        rbx, qword [r14+1]
0000000000004e55         jae        loc_4dc8

0000000000004e5b         lea        rbp, qword [r8+1]
0000000000004e5f         nop

                     loc_4e60:
0000000000004e60         xor        edx, edx                                    ; argument #3 for method cwrite, CODE XREF=bytes_split+485
0000000000004e62         xor        esi, esi                                    ; argument #2 for method cwrite
0000000000004e64         mov        edi, 0x1                                    ; argument #1 for method cwrite
0000000000004e69         add        rbx, 0x1
0000000000004e6d         call       cwrite                                      ; cwrite
0000000000004e72         cmp        rbp, rbx
0000000000004e75         jne        loc_4e60

0000000000004e77         add        rsp, 0x38
0000000000004e7b         pop        rbx
0000000000004e7c         pop        rbp
0000000000004e7d         pop        r12
0000000000004e7f         pop        r13
0000000000004e81         pop        r14
0000000000004e83         pop        r15
0000000000004e85         ret
                        ; endp

                     loc_4e86:
0000000000004e86         mov        rdx, qword [infile]                         ; argument #3 for method quotearg_n_style_colon, infile, CODE XREF=bytes_split+255
0000000000004e8d         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
0000000000004e92         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
0000000000004e94         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000004e99         mov        rbx, rax
0000000000004e9c         call       j___errno_location                          ; __errno_location
0000000000004ea1         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000004ea3         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
0000000000004eaa         mov        rcx, rbx
0000000000004ead         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000004eb2         xor        eax, eax
0000000000004eb4         call       j_error                                     ; error
0000000000004eb9         nop        dword [rax]                                 ; End of unwind block (FDE at 0xaa48)
                     usage:
0000000000004ec0         push       r13                                         ; Begin of unwind block (FDE at 0xaab0), CODE XREF=main+6255, main+6481, main+6841, main+7363
0000000000004ec2         push       r12
0000000000004ec4         mov        edx, 0x5
0000000000004ec9         push       rbp
0000000000004eca         push       rbx
0000000000004ecb         mov        ebp, edi
0000000000004ecd         sub        rsp, 0x88
0000000000004ed4         mov        rbx, qword [program_name]                   ; program_name
0000000000004edb         mov        rax, qword [fs:0x28]
0000000000004ee4         mov        qword [rsp+0x290+var_218], rax
0000000000004ee9         xor        eax, eax
0000000000004eeb         test       edi, edi
0000000000004eed         je         loc_4f1d

0000000000004eef         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000004ef6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004ef8         call       j_dcgettext                                 ; dcgettext
0000000000004efd         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000004f04         mov        rdx, rax
0000000000004f07         mov        rcx, rbx
0000000000004f0a         mov        esi, 0x1
0000000000004f0f         xor        eax, eax
0000000000004f11         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_4f16:
0000000000004f16         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+870
0000000000004f18         call       j_exit                                      ; exit
                        ; endp

                     loc_4f1d:
0000000000004f1d         lea        rsi, qword [aUsageSOptionFi]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... [FILE [PREFIX]]\\n", CODE XREF=usage+45
0000000000004f24         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004f26         call       j_dcgettext                                 ; dcgettext
0000000000004f2b         mov        rdx, rbx
0000000000004f2e         mov        rsi, rax
0000000000004f31         mov        edi, 0x1
0000000000004f36         xor        eax, eax
0000000000004f38         call       j___printf_chk                              ; __printf_chk
0000000000004f3d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004f44         lea        rsi, qword [aOutputPiecesOf]                ; argument "msgid" for method j_dcgettext, "Output pieces of FILE to PREFIXaa, PREFIXab, ...;\\ndefault size is 1000 lines, and default PREFIX is 'x'.\\n"
0000000000004f4b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004f50         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004f52         call       j_dcgettext                                 ; dcgettext
0000000000004f57         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004f5a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004f5d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004f62         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004f69         lea        rsi, qword [aNwithNoFileOrW]                ; argument "msgid" for method j_dcgettext, "\\nWith no FILE, or when FILE is -, read standard input.\\n"
0000000000004f70         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004f75         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004f77         call       j_dcgettext                                 ; dcgettext
0000000000004f7c         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004f7f         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004f82         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004f87         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004f8e         lea        rsi, qword [aNmandatoryArgu]                ; argument "msgid" for method j_dcgettext, "\\nMandatory arguments to long options are mandatory for short options too.\\n"
0000000000004f95         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004f9a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004f9c         call       j_dcgettext                                 ; dcgettext
0000000000004fa1         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004fa4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004fa7         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004fac         lea        rsi, qword [aASuffixlengthn]                ; argument "msgid" for method j_dcgettext, "  -a, --suffix-length=N   generate suffixes of length N (default %d)\\n      --additional-suffix=SUFFIX  append an additional SUFFIX to file names\\n  -b, --bytes=SIZE        put SIZE bytes per output file\\n  -C, --line-bytes=SIZE   put at most SIZE bytes of re…"
0000000000004fb3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004fb8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004fba         call       j_dcgettext                                 ; dcgettext
0000000000004fbf         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004fc6         mov        ecx, 0x2
0000000000004fcb         mov        rdx, rax
0000000000004fce         mov        esi, 0x1
0000000000004fd3         xor        eax, eax
0000000000004fd5         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004fda         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004fe1         lea        rsi, qword [aVerbosePrintAD]                ; argument "msgid" for method j_dcgettext, "      --verbose           print a diagnostic just before each\\n                            output file is opened\\n"
0000000000004fe8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004fed         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004fef         call       j_dcgettext                                 ; dcgettext
0000000000004ff4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004ff7         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004ffa         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004fff         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000005006         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
000000000000500d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005012         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005014         call       j_dcgettext                                 ; dcgettext
0000000000005019         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000501c         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000501f         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000005024         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000502b         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
0000000000005032         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005037         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005039         call       j_dcgettext                                 ; dcgettext
000000000000503e         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000005041         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000005044         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000005049         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000005050         lea        rsi, qword [aNtheSizeArgume]                ; argument "msgid" for method j_dcgettext, "\\nThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\\nUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\\nBinary prefixes can be used, too: KiB=K, MiB=M, and so on.\\n"
0000000000005057         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000505c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000505e         call       j_dcgettext                                 ; dcgettext
0000000000005063         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000005066         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000005069         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000506e         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000005075         lea        rsi, qword [aNchunksMayBenN]                ; argument "msgid" for method j_dcgettext, "\\nCHUNKS may be:\\n  N       split into N files based on size of input\\n  K/N     output Kth of N to stdout\\n  l/N     split into N files without splitting lines/records\\n  l/K/N   output Kth of N to stdout without splitting lines/records\\n  r/N     like 'l' but …"
000000000000507c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005081         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005083         call       j_dcgettext                                 ; dcgettext
0000000000005088         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000508b         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000508e         lea        rbx, qword [aSplit]                         ; "split"
0000000000005095         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000509a         lea        rax, qword [aSplit+6]                       ; 0x8c0b
00000000000050a1         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
00000000000050a8         mov        qword [rsp+0x290+var_230], 0x0
00000000000050b1         mov        qword [rsp+0x290+var_228], 0x0
00000000000050ba         mov        rdx, rsp
00000000000050bd         mov        qword [rsp+0x290+var_290], rax
00000000000050c1         lea        rax, qword [aTestInvocation]                ; "test invocation"
00000000000050c8         mov        qword [rsp+0x290+var_260], rcx
00000000000050cd         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
00000000000050d4         mov        qword [rsp+0x290+var_288], rax
00000000000050d9         lea        rax, qword [aCoreutils]                     ; "coreutils"
00000000000050e0         mov        qword [rsp+0x290+var_250], rcx
00000000000050e5         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
00000000000050ec         mov        qword [rsp+0x290+var_280], rax
00000000000050f1         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
00000000000050f8         mov        qword [rsp+0x290+var_240], rcx
00000000000050fd         mov        qword [rsp+0x290+var_278], rax
0000000000005102         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000005109         mov        qword [rsp+0x290+var_270], rax
000000000000510e         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
0000000000005115         mov        qword [rsp+0x290+var_268], rax
000000000000511a         mov        qword [rsp+0x290+var_258], rax
000000000000511f         mov        qword [rsp+0x290+var_248], rax
0000000000005124         mov        qword [rsp+0x290+var_238], rax
0000000000005129         nop        dword [rax]

                     loc_5130:
0000000000005130         add        rdx, 0x10                                   ; CODE XREF=usage+653
0000000000005134         mov        rdi, qword [rdx]
0000000000005137         test       rdi, rdi
000000000000513a         je         loc_514f

000000000000513c         mov        ecx, 0x6
0000000000005141         mov        rsi, rbx
0000000000005144         rep  cmpsb byte [rsi], byte [rdi]
0000000000005146         seta       al
0000000000005149         sbb        al, 0x0
000000000000514b         test       al, al
000000000000514d         jne        loc_5130

                     loc_514f:
000000000000514f         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+634
0000000000005153         xor        edi, edi
0000000000005155         mov        edx, 0x5
000000000000515a         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000005161         test       r12, r12
0000000000005164         je         loc_522b

000000000000516a         call       j_dcgettext                                 ; dcgettext
000000000000516f         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000005176         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x8c81
000000000000517d         mov        rsi, rax
0000000000005180         mov        edi, 0x1
0000000000005185         xor        eax, eax
0000000000005187         call       j___printf_chk                              ; __printf_chk
000000000000518c         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000518e         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000005193         call       j_setlocale                                 ; setlocale
0000000000005198         test       rax, rax
000000000000519b         je         loc_51b9

000000000000519d         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x8c8f
00000000000051a4         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
00000000000051a9         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
00000000000051ac         call       j_strncmp                                   ; strncmp
00000000000051b1         test       eax, eax
00000000000051b3         jne        loc_52c0

                     loc_51b9:
00000000000051b9         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+731, usage+1061
00000000000051c0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000051c2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000051c7         call       j_dcgettext                                 ; dcgettext
00000000000051cc         lea        rcx, qword [aSplit]                         ; "split"
00000000000051d3         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000051da         mov        rsi, rax
00000000000051dd         mov        edi, 0x1
00000000000051e2         xor        eax, eax
00000000000051e4         call       j___printf_chk                              ; __printf_chk
00000000000051e9         cmp        r12, rbx
00000000000051ec         lea        rcx, qword [aMulticallInvoc+10]             ; 0x8c27
00000000000051f3         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0xa141
00000000000051fa         cmove      rbx, rcx

                     loc_51fe:
00000000000051fe         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+1012
0000000000005205         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005207         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000520c         call       j_dcgettext                                 ; dcgettext
0000000000005211         mov        rcx, rbx
0000000000005214         mov        rsi, rax
0000000000005217         mov        rdx, r12
000000000000521a         mov        edi, 0x1
000000000000521f         xor        eax, eax
0000000000005221         call       j___printf_chk                              ; __printf_chk
0000000000005226         jmp        loc_4f16

                     loc_522b:
000000000000522b         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+676
0000000000005230         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000005237         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x8c81
000000000000523e         mov        rsi, rax
0000000000005241         mov        edi, 0x1
0000000000005246         xor        eax, eax
0000000000005248         call       j___printf_chk                              ; __printf_chk
000000000000524d         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000524f         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000005254         call       j_setlocale                                 ; setlocale
0000000000005259         test       rax, rax
000000000000525c         je         loc_5276

000000000000525e         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x8c8f
0000000000005265         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
000000000000526a         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000526d         call       j_strncmp                                   ; strncmp
0000000000005272         test       eax, eax
0000000000005274         jne        loc_52b9

                     loc_5276:
0000000000005276         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+924
000000000000527d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005282         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005284         lea        r12, qword [aSplit]                         ; "split"
000000000000528b         lea        rbx, qword [aMulticallInvoc+10]             ; 0x8c27
0000000000005292         call       j_dcgettext                                 ; dcgettext
0000000000005297         lea        rcx, qword [aSplit]                         ; "split"
000000000000529e         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000052a5         mov        rsi, rax
00000000000052a8         mov        edi, 0x1
00000000000052ad         xor        eax, eax
00000000000052af         call       j___printf_chk                              ; __printf_chk
00000000000052b4         jmp        loc_51fe

                     loc_52b9:
00000000000052b9         lea        r12, qword [aSplit]                         ; "split", CODE XREF=usage+948

                     loc_52c0:
00000000000052c0         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+755
00000000000052c7         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
00000000000052ce         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000052d0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000052d5         call       j_dcgettext                                 ; dcgettext
00000000000052da         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
00000000000052dd         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000052e0         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000052e5         jmp        loc_51b9
00000000000052ea         align      16                                          ; End of unwind block (FDE at 0xaab0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
00000000000052f0         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0xab3c), file_name
00000000000052f7         ret
                        ; endp
00000000000052f8         align      256                                         ; End of unwind block (FDE at 0xab3c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000005300         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0xab50), ignore_EPIPE
0000000000005307         ret
                        ; endp
0000000000005308         align      16                                          ; End of unwind block (FDE at 0xab50)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000005310         push       rbp                                         ; Begin of unwind block (FDE at 0xab64), DATA XREF=main+115
0000000000005311         push       rbx
0000000000005312         sub        rsp, 0x8
0000000000005316         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000531d         call       close_stream                                ; close_stream
0000000000005322         test       eax, eax
0000000000005324         je         loc_533c

0000000000005326         call       j___errno_location                          ; __errno_location
000000000000532b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000005332         mov        rbx, rax
0000000000005335         je         loc_5353

0000000000005337         cmp        dword [rax], 0x20
000000000000533a         jne        loc_5353

                     loc_533c:
000000000000533c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000005343         call       close_stream                                ; close_stream
0000000000005348         test       eax, eax
000000000000534a         jne        loc_5392

000000000000534c         add        rsp, 0x8
0000000000005350         pop        rbx
0000000000005351         pop        rbp
0000000000005352         ret
                        ; endp

                     loc_5353:
0000000000005353         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
000000000000535a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000535c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005361         call       j_dcgettext                                 ; dcgettext
0000000000005366         mov        rdi, qword [file_name]                      ; file_name
000000000000536d         mov        rbp, rax
0000000000005370         test       rdi, rdi
0000000000005373         je         loc_539d

0000000000005375         call       quotearg_colon                              ; quotearg_colon
000000000000537a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
000000000000537c         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000005383         mov        rcx, rax
0000000000005386         mov        r8, rbp
0000000000005389         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000538b         xor        eax, eax
000000000000538d         call       j_error                                     ; error

                     loc_5392:
0000000000005392         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000005398         call       j__exit                                     ; _exit
                        ; endp

                     loc_539d:
000000000000539d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
000000000000539f         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
00000000000053a6         mov        rcx, rax
00000000000053a9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000053ab         xor        eax, eax
00000000000053ad         call       j_error                                     ; error
00000000000053b2         jmp        loc_5392
00000000000053b4         align      64                                          ; End of unwind block (FDE at 0xab64)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     last_component:
00000000000053c0         movzx      edx, byte [rdi]                             ; Begin of unwind block (FDE at 0xab94), CODE XREF=main+489, create+412
00000000000053c3         mov        rax, rdi
00000000000053c6         cmp        dl, 0x2f
00000000000053c9         jne        loc_53dc

00000000000053cb         nop        dword [rax+rax]

                     loc_53d0:
00000000000053d0         add        rax, 0x1                                    ; CODE XREF=last_component+26
00000000000053d4         movzx      edx, byte [rax]
00000000000053d7         cmp        dl, 0x2f
00000000000053da         je         loc_53d0

                     loc_53dc:
00000000000053dc         test       dl, dl                                      ; CODE XREF=last_component+9
00000000000053de         je         loc_541a

00000000000053e0         mov        rcx, rax
00000000000053e3         xor        esi, esi
00000000000053e5         jmp        loc_5405
00000000000053e7         align      16

                     loc_53f0:
00000000000053f0         test       sil, sil                                    ; CODE XREF=last_component+72
00000000000053f3         je         loc_53fa

00000000000053f5         mov        rax, rcx
00000000000053f8         xor        esi, esi

                     loc_53fa:
00000000000053fa         add        rcx, 0x1                                    ; CODE XREF=last_component+51
00000000000053fe         movzx      edx, byte [rcx]
0000000000005401         test       dl, dl
0000000000005403         je         loc_541a

                     loc_5405:
0000000000005405         cmp        dl, 0x2f                                    ; CODE XREF=last_component+37, last_component+88
0000000000005408         jne        loc_53f0

000000000000540a         add        rcx, 0x1
000000000000540e         movzx      edx, byte [rcx]
0000000000005411         mov        esi, 0x1
0000000000005416         test       dl, dl
0000000000005418         jne        loc_5405

                     loc_541a:
000000000000541a         ret                                                    ; CODE XREF=last_component+30, last_component+67
                        ; endp
000000000000541c         align      32                                          ; End of unwind block (FDE at 0xab94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base_len:
0000000000005420         push       rbx                                         ; Begin of unwind block (FDE at 0xaba8)
0000000000005421         mov        rbx, rdi
0000000000005424         call       j_strlen                                    ; strlen
0000000000005429         cmp        rax, 0x1
000000000000542d         jbe        loc_543a

000000000000542f         cmp        byte [rbx+rax-1], 0x2f
0000000000005434         lea        rdx, qword [rax-1]
0000000000005438         je         loc_5448

                     loc_543a:
000000000000543a         pop        rbx                                         ; CODE XREF=base_len+13
000000000000543b         ret
                        ; endp
000000000000543c         align      64

                     loc_5440:
0000000000005440         mov        rdx, rax                                    ; CODE XREF=base_len+55
0000000000005443         nop        dword [rax+rax]

                     loc_5448:
0000000000005448         cmp        rdx, 0x1                                    ; CODE XREF=base_len+24
000000000000544c         je         loc_5460

000000000000544e         cmp        byte [rbx+rdx-1], 0x2f
0000000000005453         lea        rax, qword [rdx-1]
0000000000005457         je         loc_5440

0000000000005459         mov        rax, rdx
000000000000545c         pop        rbx
000000000000545d         ret
                        ; endp
000000000000545e         align      32

                     loc_5460:
0000000000005460         mov        eax, 0x1                                    ; CODE XREF=base_len+44
0000000000005465         pop        rbx
0000000000005466         ret
                        ; endp
0000000000005467         align      16                                          ; End of unwind block (FDE at 0xaba8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_28: int64_t, -40
        ;    var_38: int8_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int32_t, -88


                     open_safer:
0000000000005470         sub        rsp, 0x58                                   ; Begin of unwind block (FDE at 0xabd4), CODE XREF=create+516, ofile_open+95
0000000000005474         mov        qword [rsp+0x58+var_28], rdx
0000000000005479         xor        edx, edx
000000000000547b         mov        rax, qword [fs:0x28]
0000000000005484         mov        qword [rsp+0x58+var_40], rax
0000000000005489         xor        eax, eax
000000000000548b         test       sil, 0x40
000000000000548f         jne        loc_54b8

                     loc_5491:
0000000000005491         xor        eax, eax                                    ; CODE XREF=open_safer+103
0000000000005493         call       j_open                                      ; open
0000000000005498         mov        edi, eax
000000000000549a         call       fd_safer                                    ; fd_safer
000000000000549f         mov        rcx, qword [rsp+0x58+var_40]
00000000000054a4         xor        rcx, qword [fs:0x28]
00000000000054ad         jne        loc_54d9

00000000000054af         add        rsp, 0x58
00000000000054b3         ret
                        ; endp
00000000000054b4         align      8

                     loc_54b8:
00000000000054b8         lea        rax, qword [rsp+0x58+arg_0]                 ; CODE XREF=open_safer+31
00000000000054bd         mov        dword [rsp+0x58+var_58], 0x10
00000000000054c4         mov        edx, dword [rsp+0x58+var_28]
00000000000054c8         mov        qword [rsp+0x58+var_50], rax
00000000000054cd         lea        rax, qword [rsp+0x58+var_38]
00000000000054d2         mov        qword [rsp+0x58+var_48], rax
00000000000054d7         jmp        loc_5491

                     loc_54d9:
00000000000054d9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=open_safer+61
                        ; endp
00000000000054de         align      32                                          ; End of unwind block (FDE at 0xabd4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fd_reopen:
00000000000054e0         push       r13                                         ; Begin of unwind block (FDE at 0xabf4), CODE XREF=main+1972
00000000000054e2         push       r12
00000000000054e4         xor        eax, eax
00000000000054e6         push       rbp
00000000000054e7         push       rbx
00000000000054e8         mov        ebp, edi
00000000000054ea         mov        rdi, rsi                                    ; argument "__file" for method j_open
00000000000054ed         mov        esi, edx                                    ; argument "__oflag" for method j_open
00000000000054ef         mov        edx, ecx
00000000000054f1         sub        rsp, 0x8
00000000000054f5         call       j_open                                      ; open
00000000000054fa         cmp        ebp, eax
00000000000054fc         mov        ebx, eax
00000000000054fe         je         loc_5529

0000000000005500         test       eax, eax
0000000000005502         js         loc_5529

0000000000005504         mov        esi, ebp                                    ; argument "__fd2" for method j_dup2
0000000000005506         mov        edi, eax                                    ; argument "__fd" for method j_dup2
0000000000005508         call       j_dup2                                      ; dup2
000000000000550d         mov        r12d, eax
0000000000005510         call       j___errno_location                          ; __errno_location
0000000000005515         mov        r13d, dword [rax]
0000000000005518         mov        rbp, rax
000000000000551b         mov        edi, ebx                                    ; argument "__fd" for method j_close
000000000000551d         call       j_close                                     ; close
0000000000005522         mov        ebx, r12d
0000000000005525         mov        dword [rbp], r13d

                     loc_5529:
0000000000005529         add        rsp, 0x8                                    ; CODE XREF=fd_reopen+30, fd_reopen+34
000000000000552d         mov        eax, ebx
000000000000552f         pop        rbx
0000000000005530         pop        rbp
0000000000005531         pop        r12
0000000000005533         pop        r13
0000000000005535         ret
                        ; endp
0000000000005536         align      64                                          ; End of unwind block (FDE at 0xabf4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     full_write:
0000000000005540         push       r13                                         ; Begin of unwind block (FDE at 0xac2c), CODE XREF=main+5130, main+5227, main+5385, main+5717, cwrite+105
0000000000005542         push       r12
0000000000005544         push       rbp
0000000000005545         push       rbx
0000000000005546         sub        rsp, 0x8
000000000000554a         test       rdx, rdx
000000000000554d         je         loc_55b1

000000000000554f         mov        r13d, edi
0000000000005552         mov        rbp, rsi
0000000000005555         mov        rbx, rdx
0000000000005558         xor        r12d, r12d
000000000000555b         jmp        loc_5570
000000000000555d         align      32

                     loc_5560:
0000000000005560         test       rax, rax                                    ; CODE XREF=full_write+66
0000000000005563         je         loc_5598

0000000000005565         add        r12, rax
0000000000005568         add        rbp, rax
000000000000556b         sub        rbx, rax
000000000000556e         je         loc_5584

                     loc_5570:
0000000000005570         mov        rdx, rbx                                    ; CODE XREF=full_write+27
0000000000005573         mov        rsi, rbp
0000000000005576         mov        edi, r13d
0000000000005579         call       safe_write                                  ; safe_write
000000000000557e         cmp        rax, 0xffffffffffffffff
0000000000005582         jne        loc_5560

                     loc_5584:
0000000000005584         add        rsp, 0x8                                    ; CODE XREF=full_write+46, full_write+116
0000000000005588         mov        rax, r12
000000000000558b         pop        rbx
000000000000558c         pop        rbp
000000000000558d         pop        r12
000000000000558f         pop        r13
0000000000005591         ret
                        ; endp
0000000000005592         align      8

                     loc_5598:
0000000000005598         call       j___errno_location                          ; __errno_location, CODE XREF=full_write+35
000000000000559d         mov        dword [rax], 0x1c
00000000000055a3         add        rsp, 0x8
00000000000055a7         mov        rax, r12
00000000000055aa         pop        rbx
00000000000055ab         pop        rbp
00000000000055ac         pop        r12
00000000000055ae         pop        r13
00000000000055b0         ret
                        ; endp

                     loc_55b1:
00000000000055b1         xor        r12d, r12d                                  ; CODE XREF=full_write+13
00000000000055b4         jmp        loc_5584
00000000000055b6         align      64                                          ; End of unwind block (FDE at 0xac2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     umaxtostr:
00000000000055c0         lea        rcx, qword [rsi+0x14]                       ; Begin of unwind block (FDE at 0xac7c), CODE XREF=main+6883, main+7060
00000000000055c4         mov        byte [rsi+0x14], 0x0
00000000000055c8         movabs     rsi, 0xcccccccccccccccd
00000000000055d2         nop        word [rax+rax]

                     loc_55d8:
00000000000055d8         mov        rax, rdi                                    ; CODE XREF=umaxtostr+60
00000000000055db         sub        rcx, 0x1
00000000000055df         mul        rsi
00000000000055e2         shr        rdx, 0x3
00000000000055e6         lea        rax, qword [rdx+rdx*4]
00000000000055ea         add        rax, rax
00000000000055ed         sub        rdi, rax
00000000000055f0         add        edi, 0x30
00000000000055f3         test       rdx, rdx
00000000000055f6         mov        byte [rcx], dil
00000000000055f9         mov        rdi, rdx
00000000000055fc         jne        loc_55d8

00000000000055fe         mov        rax, rcx
0000000000005601         ret
                        ; endp
0000000000005602         align      16                                          ; End of unwind block (FDE at 0xac7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000005610         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xac94), CODE XREF=main+62
0000000000005613         push       rbx
0000000000005614         je         loc_568d

0000000000005616         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
000000000000561b         mov        rbx, rdi
000000000000561e         call       j_strrchr                                   ; strrchr
0000000000005623         test       rax, rax
0000000000005626         je         loc_567d

0000000000005628         lea        r8, qword [rax+1]
000000000000562c         mov        rdx, r8
000000000000562f         sub        rdx, rbx
0000000000005632         cmp        rdx, 0x6
0000000000005636         jle        loc_567d

0000000000005638         lea        rsi, qword [rax-6]
000000000000563c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000005643         mov        ecx, 0x7
0000000000005648         rep  cmpsb byte [rsi], byte [rdi]
000000000000564a         seta       dl
000000000000564d         sbb        dl, 0x0
0000000000005650         test       dl, dl
0000000000005652         jne        loc_567d

0000000000005654         lea        rdi, qword [aLibs+8]                        ; 0x9c10
000000000000565b         mov        ecx, 0x3
0000000000005660         mov        rsi, r8
0000000000005663         mov        rbx, r8
0000000000005666         rep  cmpsb byte [rsi], byte [rdi]
0000000000005668         seta       dl
000000000000566b         sbb        dl, 0x0
000000000000566e         test       dl, dl
0000000000005670         jne        loc_567d

0000000000005672         lea        rbx, qword [rax+4]
0000000000005676         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_567d:
000000000000567d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000005684         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
000000000000568b         pop        rbx
000000000000568c         ret
                        ; endp

                     loc_568d:
000000000000568d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000005694         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
000000000000569b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
00000000000056a0         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
00000000000056a5         call       j_fwrite                                    ; fwrite
00000000000056aa         call       j_abort                                     ; abort
                        ; endp
00000000000056af         align      16                                          ; End of unwind block (FDE at 0xac94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
00000000000056b0         push       rbp                                         ; Begin of unwind block (FDE at 0xacb4), CODE XREF=sub_5ee0+2597, sub_5ee0+2619
00000000000056b1         push       rbx
00000000000056b2         mov        rbp, rdi
00000000000056b5         mov        ebx, esi
00000000000056b7         sub        rsp, 0x8
00000000000056bb         call       locale_charset                              ; locale_charset
00000000000056c0         movzx      edx, byte [rax]
00000000000056c3         and        edx, 0xffffffdf
00000000000056c6         cmp        dl, 0x55
00000000000056c9         je         loc_5740

00000000000056cb         cmp        dl, 0x47
00000000000056ce         je         loc_56f0

                     loc_56d0:
00000000000056d0         lea        rax, qword [aLibs+27]                       ; 0x9c23, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
00000000000056d7         lea        rdx, qword [aLibs+29]                       ; 0x9c25
00000000000056de         cmp        ebx, 0x9
00000000000056e1         cmovne     rax, rdx
00000000000056e5         add        rsp, 0x8
00000000000056e9         pop        rbx
00000000000056ea         pop        rbp
00000000000056eb         ret
                        ; endp
00000000000056ec         align      16

                     loc_56f0:
00000000000056f0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
00000000000056f4         and        edx, 0xffffffdf
00000000000056f7         cmp        dl, 0x42
00000000000056fa         jne        loc_56d0

00000000000056fc         cmp        byte [rax+2], 0x31
0000000000005700         jne        loc_56d0

0000000000005702         cmp        byte [rax+3], 0x38
0000000000005706         jne        loc_56d0

0000000000005708         cmp        byte [rax+4], 0x30
000000000000570c         jne        loc_56d0

000000000000570e         cmp        byte [rax+5], 0x33
0000000000005712         jne        loc_56d0

0000000000005714         cmp        byte [rax+6], 0x30
0000000000005718         jne        loc_56d0

000000000000571a         cmp        byte [rax+7], 0x0
000000000000571e         jne        loc_56d0

0000000000005720         cmp        byte [rbp], 0x60
0000000000005724         lea        rax, qword [aLibs+20]                       ; 0x9c1c
000000000000572b         lea        rdx, qword [aLibs+24]                       ; 0x9c20
0000000000005732         cmovne     rax, rdx
0000000000005736         add        rsp, 0x8
000000000000573a         pop        rbx
000000000000573b         pop        rbp
000000000000573c         ret
                        ; endp
000000000000573d         align      64

                     loc_5740:
0000000000005740         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000005744         and        edx, 0xffffffdf
0000000000005747         cmp        dl, 0x54
000000000000574a         jne        loc_56d0

000000000000574c         movzx      edx, byte [rax+2]
0000000000005750         and        edx, 0xffffffdf
0000000000005753         cmp        dl, 0x46
0000000000005756         jne        loc_56d0

000000000000575c         cmp        byte [rax+3], 0x2d
0000000000005760         jne        loc_56d0

0000000000005766         cmp        byte [rax+4], 0x38
000000000000576a         jne        loc_56d0

0000000000005770         cmp        byte [rax+5], 0x0
0000000000005774         jne        loc_56d0

000000000000577a         cmp        byte [rbp], 0x60
000000000000577e         lea        rax, qword [aLibs+12]                       ; 0x9c14
0000000000005785         lea        rdx, qword [aLibs+16]                       ; 0x9c18
000000000000578c         cmovne     rax, rdx
0000000000005790         add        rsp, 0x8
0000000000005794         pop        rbx
0000000000005795         pop        rbp
0000000000005796         ret
                        ; endp
0000000000005797         align      32                                          ; End of unwind block (FDE at 0xacb4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
00000000000057a0         push       r15                                         ; Begin of unwind block (FDE at 0xacf8), CODE XREF=sub_5ee0+1165, sub_5ee0+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
00000000000057a2         push       r14
00000000000057a4         mov        r15d, r8d
00000000000057a7         push       r13
00000000000057a9         push       r12
00000000000057ab         mov        r14, rdi
00000000000057ae         push       rbp
00000000000057af         push       rbx
00000000000057b0         mov        ebx, r9d
00000000000057b3         mov        r13, rsi
00000000000057b6         mov        rbp, rcx
00000000000057b9         and        ebx, 0x2
00000000000057bc         sub        rsp, 0xb8
00000000000057c3         mov        rax, qword [rsp+0xe8+arg_0]
00000000000057cb         mov        qword [rsp+0xe8+var_D8], rdx
00000000000057d0         mov        dword [rsp+0xe8+var_E0], r8d
00000000000057d5         mov        dword [rsp+0xe8+var_70], r9d
00000000000057da         mov        qword [rsp+0xe8+var_C8], rax
00000000000057df         mov        rax, qword [rsp+0xe8+arg_8]
00000000000057e7         mov        qword [rsp+0xe8+var_80], rax
00000000000057ec         mov        rax, qword [rsp+0xe8+arg_10]
00000000000057f4         mov        qword [rsp+0xe8+var_88], rax
00000000000057f9         mov        rax, qword [fs:0x28]
0000000000005802         mov        qword [rsp+0xe8+var_40], rax
000000000000580a         xor        eax, eax
000000000000580c         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000005811         cmp        r15d, 0xa
0000000000005815         mov        qword [rsp+0xe8+var_90], rax
000000000000581a         ja         loc_69cf

0000000000005820         lea        rcx, qword [switch_table_9c80]              ; switch_table_9c80
0000000000005827         mov        edx, r15d
000000000000582a         movsxd     rax, dword [rcx+rdx*4]
000000000000582e         add        rax, rcx
0000000000005831         jmp        rax                                         ; switch statement using table at 0x9c80, with 11 cases, 0x5833,0x6404,0x6460,0x64b5,0x64fa,0x6534,0x65da,0x6614,0x6808

                     loc_5833:
0000000000005833         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_5ee0+1318
0000000000005838         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000583d         xor        r12d, r12d
0000000000005840         mov        qword [rsp+0xe8+var_98], 0x0
0000000000005849         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000584e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_5853:
0000000000005853         lea        rax, qword [aLibs+29]                       ; 0x9c25, CODE XREF=sub_5ee0+1876
000000000000585a         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000005863         xor        r15d, r15d
0000000000005866         mov        dword [rsp+0xe8+var_E0], 0x2
000000000000586e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_5873:
0000000000005873         xor        r11d, r11d                                  ; CODE XREF=sub_5ee0+180, sub_5ee0+1400, sub_5ee0+1488, sub_5ee0+1557, sub_5ee0+1615, sub_5ee0+1781, sub_5ee0+1839, sub_5ee0+2408, sub_5ee0+2485
0000000000005876         mov        rax, rbp
0000000000005879         mov        r8d, r12d
000000000000587c         mov        rbp, r11
000000000000587f         mov        r11, rax
0000000000005882         nop        word [rax+rax]

                     loc_5888:
0000000000005888         cmp        r11, rbp                                    ; CODE XREF=sub_5990+194
000000000000588b         setne      r12b
000000000000588f         cmp        r11, 0xffffffffffffffff
0000000000005893         jne        loc_58a2

0000000000005895         mov        rax, qword [rsp+0xe8+var_D8]
000000000000589a         cmp        byte [rax+rbp], 0x0
000000000000589e         setne      r12b

                     loc_58a2:
00000000000058a2         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
00000000000058a5         je         loc_5f00

00000000000058ab         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000058b0         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000058b5         lea        r9, qword [rdi+rbp]
00000000000058b9         setne      al
00000000000058bc         and        al, byte [rsp+0xe8+var_DB]
00000000000058c0         mov        r10d, eax
00000000000058c3         je         loc_5970

00000000000058c9         mov        rax, qword [rsp+0xe8+var_D0]
00000000000058ce         test       rax, rax
00000000000058d1         je         loc_5d00

00000000000058d7         cmp        r11, 0xffffffffffffffff
00000000000058db         lea        rbx, qword [rbp+rax]
00000000000058e0         jne        loc_5910

00000000000058e2         cmp        rax, 0x1
00000000000058e6         jbe        loc_5910

00000000000058e8         mov        byte [rsp+0xe8+var_B0], r8b
00000000000058ed         mov        byte [rsp+0xe8+var_B8], r10b
00000000000058f2         mov        qword [rsp+0xe8+var_C0], r9
00000000000058f7         call       j_strlen                                    ; strlen
00000000000058fc         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000005902         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000005908         mov        r11, rax
000000000000590b         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_5910:
0000000000005910         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000005913         mov        byte [rsp+0xe8+var_C0], r10b
0000000000005918         ja         loc_5ed0

000000000000591e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000005923         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000005928         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
000000000000592b         mov        qword [rsp+0xe8+var_A8], r11
0000000000005930         mov        byte [rsp+0xe8+var_B0], r8b
0000000000005935         mov        qword [rsp+0xe8+var_B8], r9
000000000000593a         call       j_memcmp                                    ; memcmp
000000000000593f         test       eax, eax
0000000000005941         mov        r9, qword [rsp+0xe8+var_B8]
0000000000005946         movzx      r8d, byte [rsp+0xe8+var_B0]
000000000000594c         mov        r11, qword [rsp+0xe8+var_A8]
0000000000005951         jne        loc_5ed0

0000000000005957         cmp        byte [rsp+0xe8+var_D9], 0x0
000000000000595c         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000005962         jne        loc_68e5

0000000000005968         nop        dword [rax+rax]

                     loc_5970:
0000000000005970         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_5ec0+19
0000000000005974         cmp        bl, 0x7e
0000000000005977         ja         loc_5c98

000000000000597d         lea        rcx, qword [switch_table_9c80+44]           ; 0x9cac
0000000000005984         movzx      edx, bl
0000000000005987         movsxd     rax, dword [rcx+rdx*4]
000000000000598b         add        rax, rcx
000000000000598e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_5990:
0000000000005990         xor        r10d, r10d
0000000000005993         cmp        r11, 0x1
0000000000005997         setne      al
000000000000599a         cmp        r11, 0xffffffffffffffff
000000000000599e         jne        loc_59ac

00000000000059a0         mov        rax, qword [rsp+arg_8]
00000000000059a5         cmp        byte [rax+1], 0x0
00000000000059a9         setne      al

                     loc_59ac:
00000000000059ac         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_5990+14
00000000000059b1         sete       dl
00000000000059b4         test       al, al
00000000000059b6         je         loc_5c08

                     loc_59bc:
00000000000059bc         xor        r12d, r12d                                  ; CODE XREF=sub_5c00+11
00000000000059bf         xor        eax, eax
00000000000059c1         nop        dword [rax]
                        ; endp

                     loc_59c8:
00000000000059c8         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_5bb0+50, sub_5c80+119
00000000000059cd         jne        loc_5ae2

00000000000059d3         test       dl, dl
00000000000059d5         jne        loc_5ae2

                     loc_59db:
00000000000059db         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_5a90+87
00000000000059e0         test       rsi, rsi
00000000000059e3         je         loc_59f9

00000000000059e5         mov        edx, ebx
00000000000059e7         shr        dl, 0x5
00000000000059ea         movzx      edx, dl
00000000000059ed         mov        edx, dword [rsi+rdx*4]
00000000000059f0         bt         edx, ebx
00000000000059f3         jb         loc_5b43

                     loc_59f9:
00000000000059f9         test       r10b, r10b                                  ; CODE XREF=sub_5990+83, sub_5a90+93
00000000000059fc         jne        loc_5b43

0000000000005a02         xor        eax, 0x1
0000000000005a05         add        rbp, 0x1
0000000000005a09         and        eax, r8d

                     loc_5a0c:
0000000000005a0c         test       al, al                                      ; CODE XREF=sub_5ee0+936
0000000000005a0e         je         loc_5a30

0000000000005a10         cmp        r13, r15
0000000000005a13         jbe        loc_5a1a

0000000000005a15         mov        byte [r14+r15], 0x27

                     loc_5a1a:
0000000000005a1a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_5990+131
0000000000005a1e         cmp        r13, rax
0000000000005a21         jbe        loc_5a29

0000000000005a23         mov        byte [r14+r15+1], 0x27

                     loc_5a29:
0000000000005a29         add        r15, 0x2                                    ; CODE XREF=sub_5990+145
0000000000005a2d         xor        r8d, r8d

                     loc_5a30:
0000000000005a30         cmp        r15, r13                                    ; CODE XREF=sub_5990+126, sub_5a90+275, sub_5ee0+869
0000000000005a33         jae        loc_5a39

0000000000005a35         mov        byte [r14+r15], bl

                     loc_5a39:
0000000000005a39         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_5990+163
0000000000005a3e         add        r15, 0x1
0000000000005a42         mov        eax, 0x0
0000000000005a47         test       r12b, r12b
0000000000005a4a         cmove      edi, eax
0000000000005a4d         mov        byte [rsp+0xe8+var_DA], dil
0000000000005a52         jmp        loc_5888
0000000000005a57         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_5a60:
0000000000005a60         xor        r10d, r10d
0000000000005a63         mov        eax, dword [rsp+arg_0]
0000000000005a67         cmp        eax, 0x2
0000000000005a6a         je         loc_6028

0000000000005a70         cmp        eax, 0x5
0000000000005a73         je         loc_5fe8

0000000000005a79         cmp        eax, 0x2
0000000000005a7c         mov        ebx, 0x3f
0000000000005a81         sete       dl
0000000000005a84         xor        r12d, r12d
0000000000005a87         xor        eax, eax
0000000000005a89         jmp        sub_5990+56
                        ; endp
0000000000005a8e         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_5a90:
0000000000005a90         xor        r10d, r10d
0000000000005a93         cmp        dword [rsp+arg_0], 0x2
0000000000005a98         je         loc_5fa0

0000000000005a9e         mov        byte [rsp+arg_74], r12b
0000000000005aa3         xor        edx, edx
0000000000005aa5         xor        eax, eax
0000000000005aa7         mov        ebx, 0x27
0000000000005aac         jmp        sub_5990+56
                        ; endp
0000000000005ab1         nop        dword [rax]
0000000000005ab8         mov        edx, 0x9
0000000000005abd         mov        ebx, 0x74

                     loc_5ac2:
0000000000005ac2         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_5c50+10, sub_5d40+37, sub_5e80+53
0000000000005ac7         sete       al
0000000000005aca         and        al, byte [rsp+arg_7]
0000000000005ace         jne        sub_5c00+30

0000000000005ad4         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_5a90+114
0000000000005ad9         jne        loc_5b40

                     loc_5adb:
0000000000005adb         mov        ebx, edx                                    ; CODE XREF=sub_5bb0+18
0000000000005add         xor        r12d, r12d
0000000000005ae0         xor        eax, eax
                        ; endp

                     loc_5ae2:
0000000000005ae2         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_5990+61, sub_5990+69
0000000000005ae7         jne        loc_59db

0000000000005aed         jmp        loc_59f9
0000000000005af2         nop        word [rax+rax]
0000000000005af8         mov        edx, 0x8
0000000000005afd         mov        ebx, 0x62
0000000000005b02         jmp        sub_5a90+68
0000000000005b04         nop        dword [rax]
0000000000005b08         cmp        dword [rsp+8], 0x2
0000000000005b0d         je         sub_5ee0                                    ; sub_5ee0
0000000000005b13         cmp        byte [rsp+0xd], 0x0
0000000000005b18         je         sub_5d20+16

                     loc_5b1e:
0000000000005b1e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_5d20+8
0000000000005b23         je         loc_5d30

0000000000005b29         cmp        qword [rsp+arg_10], 0x0
0000000000005b2f         jne        loc_5eeb

0000000000005b35         mov        ebx, 0x5c
0000000000005b3a         nop        word [rax+rax]
                        ; endp

                     loc_5b40:
0000000000005b40         xor        r12d, r12d                                  ; CODE XREF=sub_5a90+73, sub_5e80+29
                        ; endp

                     loc_5b43:
0000000000005b43         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_5990+99, sub_5990+108
0000000000005b48         sete       dl
0000000000005b4b         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000005b50         mov        eax, edx
0000000000005b52         jne        loc_63a8

0000000000005b58         mov        eax, r8d
0000000000005b5b         xor        eax, 0x1
0000000000005b5e         and        al, dl
0000000000005b60         je         loc_5b91

0000000000005b62         cmp        r13, r15
0000000000005b65         jbe        loc_5b6c

0000000000005b67         mov        byte [r14+r15], 0x27

                     loc_5b6c:
0000000000005b6c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_5a90+213
0000000000005b70         cmp        r13, rdx
0000000000005b73         jbe        loc_5b7b

0000000000005b75         mov        byte [r14+r15+1], 0x24

                     loc_5b7b:
0000000000005b7b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_5a90+227
0000000000005b7f         cmp        r13, rdx
0000000000005b82         jbe        loc_5b8a

0000000000005b84         mov        byte [r14+r15+2], 0x27

                     loc_5b8a:
0000000000005b8a         add        r15, 0x3                                    ; CODE XREF=sub_5a90+242
0000000000005b8e         mov        r8d, eax

                     loc_5b91:
0000000000005b91         cmp        r13, r15                                    ; CODE XREF=sub_5a90+208
0000000000005b94         jbe        loc_5b9b

0000000000005b96         mov        byte [r14+r15], 0x5c

                     loc_5b9b:
0000000000005b9b         add        r15, 0x1                                    ; CODE XREF=sub_5a90+260
0000000000005b9f         add        rbp, 0x1
0000000000005ba3         jmp        loc_5a30
0000000000005ba8         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_5bb0:
0000000000005bb0         cmp        byte [rsp+arg_5], 0x0
0000000000005bb5         jne        loc_5d83

0000000000005bbb         xor        edx, edx
0000000000005bbd         test       byte [rsp+arg_70], 0x1
0000000000005bc2         je         loc_5adb

0000000000005bc8         add        rbp, 0x1
0000000000005bcc         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000005bd1         nop        dword [rax]
0000000000005bd8         cmp        dword [rsp+8], 0x2
0000000000005bdd         sete       dl
0000000000005be0         xor        eax, eax
0000000000005be2         jmp        sub_5990+56
0000000000005be7         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5bf0:
0000000000005bf0         mov        edx, 0x7
0000000000005bf5         mov        ebx, 0x61
0000000000005bfa         jmp        sub_5a90+68
                        ; endp
0000000000005bff         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5c00:
0000000000005c00         cmp        dword [rsp+8], 0x2
0000000000005c05         sete       dl
                        ; endp

                     loc_5c08:
0000000000005c08         test       rbp, rbp                                    ; CODE XREF=sub_5990+38, sub_5e20+35
0000000000005c0b         jne        loc_59bc

0000000000005c11         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_5e50+43
0000000000005c16         and        al, dl
0000000000005c18         je         sub_5990+56

0000000000005c1e         mov        rbp, r11
0000000000005c21         mov        dword [rsp+arg_0], 0x2
0000000000005c29         jmp        sub_5ee0+1097
                        ; endp
0000000000005c2e         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_5c30:
0000000000005c30         cmp        dword [rsp+arg_0], 0x2
0000000000005c35         sete       dl
0000000000005c38         xor        r12d, r12d
0000000000005c3b         jmp        sub_5c00+17
                        ; endp
0000000000005c3d         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_5c40:
0000000000005c40         cmp        dword [rsp+arg_0], 0x2
0000000000005c45         mov        ebx, 0x20
0000000000005c4a         sete       dl
0000000000005c4d         jmp        sub_5c00+17
                        ; endp
0000000000005c4f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_5c50:
0000000000005c50         mov        edx, 0xd
0000000000005c55         mov        ebx, 0x72
0000000000005c5a         jmp        loc_5ac2
0000000000005c5f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5c60:
0000000000005c60         mov        edx, 0xc
0000000000005c65         mov        ebx, 0x66
0000000000005c6a         jmp        sub_5a90+68
                        ; endp
0000000000005c6f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5c70:
0000000000005c70         mov        edx, 0xb
0000000000005c75         mov        ebx, 0x76
0000000000005c7a         jmp        sub_5a90+68
                        ; endp
0000000000005c7f         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5c80:
0000000000005c80         mov        edx, 0xa
0000000000005c85         mov        ebx, 0x6e
0000000000005c8a         jmp        sub_5a90+50
                        ; endp
0000000000005c8f         align      16

                     loc_5c90:
0000000000005c90         xor        r10d, r10d                                  ; CODE XREF=sub_5c80+135
0000000000005c93         nop        dword [rax+rax]

                     loc_5c98:
0000000000005c98         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
0000000000005c9e         jne        loc_6048

0000000000005ca4         mov        qword [rsp+0xe8+var_B0], r11
0000000000005ca9         mov        byte [rsp+0xe8+var_B8], r8b
0000000000005cae         mov        byte [rsp+0xe8+var_C0], r10b
0000000000005cb3         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000005cb8         mov        rcx, qword [rax]
0000000000005cbb         movzx      edx, bl
0000000000005cbe         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000005cc4         movzx      r8d, byte [rsp+0xe8+var_B8]
0000000000005cca         mov        r11, qword [rsp+0xe8+var_B0]
0000000000005ccf         mov        edi, 0x1
0000000000005cd4         movzx      eax, word [rcx+rdx*2]
0000000000005cd8         and        ax, 0x4000
0000000000005cdc         setne      r12b
0000000000005ce0         sete       al
0000000000005ce3         and        al, byte [rsp+0xe8+var_DB]

                     loc_5ce7:
0000000000005ce7         test       al, al                                      ; CODE XREF=sub_5ee0+2221
0000000000005ce9         jne        loc_6681

0000000000005cef         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000005cf4         sete       dl
0000000000005cf7         jmp        loc_59c8
0000000000005cfc         align      256

                     loc_5d00:
0000000000005d00         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000005d04         cmp        bl, 0x7e
0000000000005d07         ja         loc_5c90

0000000000005d09         lea        rcx, qword [switch_table_9c80+552]          ; 0x9ea8
0000000000005d10         movzx      edx, bl
0000000000005d13         movsxd     rax, dword [rcx+rdx*4]
0000000000005d17         add        rax, rcx
0000000000005d1a         jmp        rax
                        ; endp
0000000000005d1c         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_5d20:
0000000000005d20         xor        r10d, r10d
0000000000005d23         cmp        byte [rsp+arg_5], 0x0
0000000000005d28         jne        loc_5b1e

0000000000005d2e         nop

                     loc_5d30:
0000000000005d30         mov        edx, 0x5c                                   ; CODE XREF=sub_5a90+136, sub_5a90+147
0000000000005d35         mov        ebx, 0x5c
0000000000005d3a         jmp        sub_5a90+68
                        ; endp
0000000000005d3f         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5d40:
0000000000005d40         mov        edx, 0xc
0000000000005d45         xor        r10d, r10d
0000000000005d48         mov        ebx, 0x66
0000000000005d4d         jmp        sub_5a90+68
                        ; endp
0000000000005d52         nop        word [rax+rax]
0000000000005d58         mov        edx, 0xa
0000000000005d5d         xor        r10d, r10d
0000000000005d60         mov        ebx, 0x6e
0000000000005d65         jmp        sub_5a90+50
0000000000005d6a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5d70:
0000000000005d70         mov        ebx, 0x61
0000000000005d75         jmp        sub_5a90+176
                        ; endp
0000000000005d7a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5d80:
0000000000005d80         xor        r10d, r10d
                        ; endp

                     loc_5d83:
0000000000005d83         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_5bb0+5
0000000000005d88         sete       dl
0000000000005d8b         cmp        byte [rsp+arg_7], 0x0
0000000000005d90         jne        loc_692a

0000000000005d96         mov        eax, r8d
0000000000005d99         mov        rcx, r15
0000000000005d9c         xor        eax, 0x1
0000000000005d9f         and        al, dl
0000000000005da1         je         loc_5dd0

0000000000005da3         cmp        r13, r15
0000000000005da6         jbe        loc_5dad

0000000000005da8         mov        byte [r14+r15], 0x27

                     loc_5dad:
0000000000005dad         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_5d80+38
0000000000005db1         cmp        r13, rcx
0000000000005db4         jbe        loc_5dbc

0000000000005db6         mov        byte [r14+r15+1], 0x24

                     loc_5dbc:
0000000000005dbc         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_5d80+52
0000000000005dc0         cmp        r13, rcx
0000000000005dc3         ja         loc_63f9

                     loc_5dc9:
0000000000005dc9         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_5ee0+1311
0000000000005dcd         mov        r8d, eax

                     loc_5dd0:
0000000000005dd0         cmp        r13, rcx                                    ; CODE XREF=sub_5d80+33
0000000000005dd3         jbe        loc_5dda

0000000000005dd5         mov        byte [r14+rcx], 0x5c

                     loc_5dda:
0000000000005dda         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_5d80+83
0000000000005ddf         lea        r15, qword [rcx+1]
0000000000005de3         je         loc_63e9

0000000000005de9         lea        rax, qword [rbp+1]
0000000000005ded         cmp        rax, r11
0000000000005df0         jae        loc_5e0b

0000000000005df2         mov        rax, qword [rsp+arg_8]
0000000000005df7         movzx      eax, byte [rax+rbp+1]
0000000000005dfc         mov        byte [rsp+arg_20], al
0000000000005e00         sub        eax, 0x30
0000000000005e03         cmp        al, 0x9
0000000000005e05         jbe        loc_6639

                     loc_5e0b:
0000000000005e0b         mov        eax, r12d                                   ; CODE XREF=sub_5d80+112
0000000000005e0e         mov        ebx, 0x30
0000000000005e13         xor        r12d, r12d
0000000000005e16         jmp        sub_5990+56
                        ; endp
0000000000005e1b         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_5e20:
0000000000005e20         cmp        dword [rsp+arg_0], 0x2
0000000000005e25         mov        r12d, r10d
0000000000005e28         sete       dl
0000000000005e2b         xor        r10d, r10d
0000000000005e2e         xor        eax, eax
0000000000005e30         jmp        sub_5990+56
                        ; endp
0000000000005e35         nop        dword [rax]
0000000000005e38         cmp        dword [rsp+8], 0x2
0000000000005e3d         sete       dl
0000000000005e40         xor        r10d, r10d
0000000000005e43         jmp        sub_5c00+8
0000000000005e48         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5e50:
0000000000005e50         cmp        dword [rsp+8], 0x2
0000000000005e55         sete       dl
0000000000005e58         xor        r10d, r10d
0000000000005e5b         xor        r12d, r12d
0000000000005e5e         jmp        sub_5c00+17
                        ; endp
0000000000005e63         nop        dword [rax+rax]
0000000000005e68         cmp        dword [rsp+8], 0x2
0000000000005e6d         mov        r12d, r10d
0000000000005e70         mov        ebx, 0x20
0000000000005e75         sete       dl
0000000000005e78         xor        r10d, r10d
0000000000005e7b         jmp        sub_5c00+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5e80:
0000000000005e80         mov        edx, 0xd
0000000000005e85         xor        r10d, r10d
0000000000005e88         mov        ebx, 0x72
0000000000005e8d         jmp        sub_5a90+50
                        ; endp
0000000000005e92         nop        word [rax+rax]
0000000000005e98         mov        ebx, 0x76
0000000000005e9d         jmp        sub_5a90+176
0000000000005ea2         nop        word [rax+rax]
0000000000005ea8         mov        edx, 0x9
0000000000005ead         xor        r10d, r10d
0000000000005eb0         mov        ebx, 0x74
0000000000005eb5         jmp        sub_5a90+50
0000000000005eba         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5ec0:
0000000000005ec0         mov        ebx, 0x62
0000000000005ec5         jmp        sub_5a90+176
                        ; endp
0000000000005eca         nop        word [rax+rax]

                     loc_5ed0:
0000000000005ed0         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000005ed3         jmp        loc_5970
0000000000005ed8         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_5ee0:
0000000000005ee0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_5a90+125
0000000000005ee5         jne        sub_5ee0+2416
                        ; endp

                     loc_5eeb:
0000000000005eeb         add        rbp, 0x1                                    ; CODE XREF=sub_5a90+159
0000000000005eef         mov        eax, r8d
0000000000005ef2         xor        r12d, r12d
0000000000005ef5         mov        ebx, 0x5c
0000000000005efa         jmp        sub_5990+124
                        ; endp
0000000000005eff         align      256

                     loc_5f00:
0000000000005f00         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000005f05         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000005f0a         mov        r12d, r8d
0000000000005f0d         mov        rbp, r11
0000000000005f10         sete       dl
0000000000005f13         mov        eax, ebx
0000000000005f15         test       r15, r15
0000000000005f18         sete       cl
0000000000005f1b         and        eax, edx
0000000000005f1d         and        al, cl
0000000000005f1f         jne        loc_6986

0000000000005f25         mov        eax, ebx
0000000000005f27         xor        eax, 0x1
0000000000005f2a         and        dl, al
0000000000005f2c         je         loc_689c

0000000000005f32         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000005f37         je         loc_689a

0000000000005f3d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000005f42         jne        loc_693d

0000000000005f48         test       r13, r13
0000000000005f4b         sete       al
0000000000005f4e         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000005f54         setne      dl
0000000000005f57         and        al, dl
0000000000005f59         je         loc_697c

0000000000005f5f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_5f64:
0000000000005f64         lea        rbx, qword [aLibs+29]                       ; 0x9c25, CODE XREF=sub_5ee0+2781
0000000000005f6b         mov        byte [r14], 0x27
0000000000005f6f         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000005f77         mov        r15d, 0x1
0000000000005f7d         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000005f86         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000005f8b         mov        qword [rsp+0xe8+var_A0], rbx
0000000000005f90         mov        byte [rsp+0xe8+var_6C], al
0000000000005f94         jmp        loc_5873
0000000000005f99         align      32

                     loc_5fa0:
0000000000005fa0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_5a90+8
0000000000005fa5         jne        sub_5ee0+2416

0000000000005fab         test       r13, r13
0000000000005fae         je         loc_63b0

0000000000005fb4         xor        edx, edx
0000000000005fb6         cmp        qword [rsp+arg_48], 0x0
0000000000005fbc         jne        loc_63b0

                     loc_5fc2:
0000000000005fc2         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_5ee0+1284, sub_5ee0+2794
0000000000005fc7         add        r15, 0x3
0000000000005fcb         xor        eax, eax
0000000000005fcd         mov        byte [rsp+arg_74], r12b
0000000000005fd2         xor        r8d, r8d
0000000000005fd5         mov        r13, rdx
0000000000005fd8         mov        ebx, 0x27
0000000000005fdd         jmp        sub_5990+105
                        ; endp
0000000000005fe2         align      8

                     loc_5fe8:
0000000000005fe8         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_5a60+19
0000000000005fed         je         loc_6010

0000000000005fef         lea        rcx, qword [rbp+2]
0000000000005ff3         cmp        rcx, r11
0000000000005ff6         jae        loc_6010

0000000000005ff8         mov        rax, qword [rsp+arg_8]
0000000000005ffd         cmp        byte [rax+rbp+1], 0x3f
0000000000006002         je         loc_6792

0000000000006008         nop        dword [rax+rax]

                     loc_6010:
0000000000006010         xor        edx, edx                                    ; CODE XREF=sub_5ee0+269, sub_5ee0+278, sub_5ee0+2233, sub_5ee0+2253
0000000000006012         xor        r12d, r12d
0000000000006015         xor        eax, eax
0000000000006017         mov        ebx, 0x3f
000000000000601c         jmp        sub_5990+56
                        ; endp
0000000000006021         align      8

                     loc_6028:
0000000000006028         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_5a60+10
000000000000602d         jne        loc_6850

0000000000006033         xor        r12d, r12d
0000000000006036         xor        eax, eax
0000000000006038         mov        ebx, 0x3f
000000000000603d         jmp        sub_5990+105
                        ; endp
0000000000006042         align      8

                     loc_6048:
0000000000006048         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_5c80+30
0000000000006050         cmp        r11, 0xffffffffffffffff
0000000000006054         mov        qword [rsp+0xe8+var_48], 0x0
0000000000006060         mov        qword [rsp+0xe8+var_C0], rax
0000000000006065         jne        loc_6094

0000000000006067         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
000000000000606c         mov        byte [rsp+0xe8+var_A8], r8b
0000000000006071         mov        byte [rsp+0xe8+var_B0], r10b
0000000000006076         mov        qword [rsp+0xe8+var_B8], r9
000000000000607b         call       j_strlen                                    ; strlen
0000000000006080         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000006086         movzx      r10d, byte [rsp+0xe8+var_B0]
000000000000608c         mov        r11, rax
000000000000608f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_6094:
0000000000006094         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_5ee0+389
000000000000609c         xor        ecx, ecx
000000000000609e         mov        byte [rsp+0xe8+var_6A], bl
00000000000060a2         mov        byte [rsp+0xe8+var_6B], r8b
00000000000060a7         mov        rbx, rcx
00000000000060aa         mov        qword [rsp+0xe8+var_60], r9
00000000000060b2         mov        qword [rsp+0xe8+var_B0], rax
00000000000060b7         mov        byte [rsp+0xe8+var_69], r10b
00000000000060bc         mov        qword [rsp+0xe8+var_68], r15
00000000000060c4         mov        qword [rsp+0xe8+var_A8], r14
00000000000060c9         mov        qword [rsp+0xe8+var_78], r13
00000000000060ce         mov        qword [rsp+0xe8+var_B8], r11

                     loc_60d3:
00000000000060d3         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_5ee0+623
00000000000060d8         lea        r14, qword [rbp+rbx]
00000000000060dd         mov        rdx, qword [rsp+0xe8+var_B8]
00000000000060e2         mov        rcx, qword [rsp+0xe8+var_C0]
00000000000060e7         mov        rdi, qword [rsp+0xe8+var_B0]
00000000000060ec         lea        r13, qword [rax+r14]
00000000000060f0         sub        rdx, r14
00000000000060f3         mov        rsi, r13
00000000000060f6         call       rpl_mbrtowc                                 ; rpl_mbrtowc
00000000000060fb         test       rax, rax
00000000000060fe         mov        r15, rax
0000000000006101         je         loc_6151

0000000000006103         cmp        rax, 0xffffffffffffffff
0000000000006107         je         loc_6725

000000000000610d         cmp        rax, 0xfffffffffffffffe
0000000000006111         je         loc_66b1

0000000000006117         cmp        dword [rsp+0xe8+var_E0], 0x2
000000000000611c         sete       al
000000000000611f         and        al, byte [rsp+0xe8+var_D9]
0000000000006123         jne        loc_62c0

                     loc_6129:
0000000000006129         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_5ee0+996, sub_5ee0+1031
0000000000006130         call       j_iswprint                                  ; iswprint
0000000000006135         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
000000000000613a         test       eax, eax
000000000000613c         mov        eax, 0x0
0000000000006141         cmove      r12d, eax
0000000000006145         add        rbx, r15
0000000000006148         call       j_mbsinit                                   ; mbsinit
000000000000614d         test       eax, eax
000000000000614f         je         loc_60d3

                     loc_6151:
0000000000006151         mov        edx, r12d                                   ; CODE XREF=sub_5ee0+545
0000000000006154         mov        rdi, rbx
0000000000006157         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000615d         xor        edx, 0x1
0000000000006160         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000006165         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000616b         and        dl, byte [rsp+0xe8+var_DB]
000000000000616f         mov        r15, qword [rsp+0xe8+var_68]
0000000000006177         mov        r14, qword [rsp+0xe8+var_A8]
000000000000617c         mov        r13, qword [rsp+0xe8+var_78]
0000000000006181         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_6186:
0000000000006186         cmp        rdi, 0x1                                    ; CODE XREF=sub_5ee0+2112, sub_5ee0+2168
000000000000618a         jbe        loc_678b

                     loc_6190:
0000000000006190         mov        rcx, rdi                                    ; CODE XREF=sub_5ee0+1961
0000000000006193         xor        esi, esi
0000000000006195         movzx      r9d, byte [rsp+0xe8+var_D9]
000000000000619b         add        rcx, rbp
000000000000619e         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000061a3         jmp        loc_625e
00000000000061a8         align      16

                     loc_61b0:
00000000000061b0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_5ee0+896
00000000000061b5         sete       al
00000000000061b8         test       r9b, r9b
00000000000061bb         jne        loc_6670

00000000000061c1         mov        esi, r8d
00000000000061c4         xor        esi, 0x1
00000000000061c7         and        al, sil
00000000000061ca         je         loc_61fb

00000000000061cc         cmp        r13, r15
00000000000061cf         jbe        loc_61d6

00000000000061d1         mov        byte [r14+r15], 0x27

                     loc_61d6:
00000000000061d6         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_5ee0+751
00000000000061da         cmp        r13, rsi
00000000000061dd         jbe        loc_61e5

00000000000061df         mov        byte [r14+r15+1], 0x24

                     loc_61e5:
00000000000061e5         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_5ee0+765
00000000000061e9         cmp        r13, rsi
00000000000061ec         jbe        loc_61f4

00000000000061ee         mov        byte [r14+r15+2], 0x27

                     loc_61f4:
00000000000061f4         add        r15, 0x3                                    ; CODE XREF=sub_5ee0+780
00000000000061f8         mov        r8d, eax

                     loc_61fb:
00000000000061fb         cmp        r13, r15                                    ; CODE XREF=sub_5ee0+746
00000000000061fe         jbe        loc_6205

0000000000006200         mov        byte [r14+r15], 0x5c

                     loc_6205:
0000000000006205         lea        rax, qword [r15+1]                          ; CODE XREF=sub_5ee0+798
0000000000006209         cmp        r13, rax
000000000000620c         jbe        loc_621b

000000000000620e         mov        eax, ebx
0000000000006210         shr        al, 0x6
0000000000006213         add        eax, 0x30
0000000000006216         mov        byte [r14+r15+1], al

                     loc_621b:
000000000000621b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_5ee0+812
000000000000621f         cmp        r13, rax
0000000000006222         jbe        loc_6234

0000000000006224         mov        eax, ebx
0000000000006226         shr        al, 0x3
0000000000006229         and        eax, 0x7
000000000000622c         add        eax, 0x30
000000000000622f         mov        byte [r14+r15+2], al

                     loc_6234:
0000000000006234         and        ebx, 0x7                                    ; CODE XREF=sub_5ee0+834
0000000000006237         add        rbp, 0x1
000000000000623b         add        r15, 0x3
000000000000623f         add        ebx, 0x30
0000000000006242         cmp        rbp, rcx
0000000000006245         jae        loc_5a30

000000000000624b         mov        esi, edx

                     loc_624d:
000000000000624d         cmp        r13, r15                                    ; CODE XREF=sub_5ee0+985, sub_5ee0+1969
0000000000006250         jbe        loc_6256

0000000000006252         mov        byte [r14+r15], bl

                     loc_6256:
0000000000006256         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_5ee0+880
000000000000625a         add        r15, 0x1

                     loc_625e:
000000000000625e         test       dl, dl                                      ; CODE XREF=sub_5ee0+707
0000000000006260         jne        loc_61b0

0000000000006266         mov        eax, esi
0000000000006268         xor        eax, 0x1
000000000000626b         and        eax, r8d
000000000000626e         test       r10b, r10b
0000000000006271         je         loc_6281

0000000000006273         cmp        r13, r15
0000000000006276         jbe        loc_627d

0000000000006278         mov        byte [r14+r15], 0x5c

                     loc_627d:
000000000000627d         add        r15, 0x1                                    ; CODE XREF=sub_5ee0+918

                     loc_6281:
0000000000006281         add        rbp, 0x1                                    ; CODE XREF=sub_5ee0+913
0000000000006285         cmp        rbp, rcx
0000000000006288         jae        loc_5a0c

000000000000628e         test       al, al
0000000000006290         je         loc_668e

0000000000006296         cmp        r13, r15
0000000000006299         jbe        loc_62a0

000000000000629b         mov        byte [r14+r15], 0x27

                     loc_62a0:
00000000000062a0         lea        rax, qword [r15+1]                          ; CODE XREF=sub_5ee0+953
00000000000062a4         cmp        r13, rax
00000000000062a7         jbe        loc_62af

00000000000062a9         mov        byte [r14+r15+1], 0x27

                     loc_62af:
00000000000062af         add        r15, 0x2                                    ; CODE XREF=sub_5ee0+967
00000000000062b3         xor        r10d, r10d
00000000000062b6         xor        r8d, r8d
00000000000062b9         jmp        loc_624d
00000000000062bb         align      64

                     loc_62c0:
00000000000062c0         cmp        r15, 0x1                                    ; CODE XREF=sub_5ee0+579
00000000000062c4         je         loc_6129

00000000000062ca         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000062cf         lea        rcx, qword [rdi+r15]
00000000000062d3         lea        rdx, qword [rdi+r14+1]
00000000000062d8         lea        r8, qword [rcx+r14]
00000000000062dc         jmp        loc_62ed
00000000000062de         align      32

                     loc_62e0:
00000000000062e0         add        rdx, 0x1                                    ; CODE XREF=sub_5ee0+1046, sub_5ee0+1072
00000000000062e4         cmp        r8, rdx
00000000000062e7         je         loc_6129

                     loc_62ed:
00000000000062ed         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_5ee0+1020
00000000000062f0         sub        ecx, 0x5b
00000000000062f3         cmp        cl, 0x21
00000000000062f6         ja         loc_62e0

00000000000062f8         mov        esi, 0x1
00000000000062fd         shl        rsi, cl
0000000000006300         mov        rcx, rsi
0000000000006303         movabs     rsi, 0x20000002b
000000000000630d         test       rcx, rsi
0000000000006310         je         loc_62e0

0000000000006312         mov        r14, qword [rsp+0xe8+var_A8]
0000000000006317         mov        r13, qword [rsp+0xe8+var_78]
000000000000631c         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000006321         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_6329:
0000000000006329         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_5ee0+1227, sub_5ee0+1948, sub_5ee0+2585, sub_5ee0+2734
000000000000632e         je         loc_6340

0000000000006330         test       al, al
0000000000006332         mov        eax, 0x4
0000000000006337         cmove      eax, dword [rsp+0xe8+var_E0]
000000000000633c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_6340:
0000000000006340         sub        rsp, 0x8                                    ; CODE XREF=sub_5ee0+1102
0000000000006344         mov        rcx, rbp
0000000000006347         mov        rsi, r13
000000000000634a         push       qword [rsp+0xf0+var_88]
000000000000634e         push       qword [rsp+0xf8+var_80]
0000000000006352         mov        rdi, r14
0000000000006355         push       0x0
0000000000006357         mov        r9d, dword [rsp+0x108+var_70]
000000000000635f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000006364         mov        rdx, qword [rsp+0x108+var_D8]
0000000000006369         and        r9d, 0xfffffffd
000000000000636d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000006372         add        rsp, 0x20
0000000000006376         mov        r15, rax

                     loc_6379:
0000000000006379         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_5ee0+2549, sub_5ee0+2560, sub_5ee0+2711
0000000000006381         xor        rbx, qword [fs:0x28]
000000000000638a         mov        rax, r15
000000000000638d         jne        loc_6993

0000000000006393         add        rsp, 0xb8
000000000000639a         pop        rbx
000000000000639b         pop        rbp
000000000000639c         pop        r12
000000000000639e         pop        r13
00000000000063a0         pop        r14
00000000000063a2         pop        r15
00000000000063a4         ret
                        ; endp
00000000000063a5         align      8

                     loc_63a8:
00000000000063a8         mov        rbp, r11                                    ; CODE XREF=sub_5a90+194
00000000000063ab         jmp        loc_6329

                     loc_63b0:
00000000000063b0         cmp        r13, r15                                    ; CODE XREF=sub_5ee0+206, sub_5ee0+220
00000000000063b3         jbe        loc_63ba

00000000000063b5         mov        byte [r14+r15], 0x27

                     loc_63ba:
00000000000063ba         lea        rax, qword [r15+1]                          ; CODE XREF=sub_5ee0+1235
00000000000063be         cmp        r13, rax
00000000000063c1         jbe        loc_63c9

00000000000063c3         mov        byte [r14+r15+1], 0x5c

                     loc_63c9:
00000000000063c9         lea        rax, qword [r15+2]                          ; CODE XREF=sub_5ee0+1249
00000000000063cd         cmp        r13, rax
00000000000063d0         jbe        loc_69c2

00000000000063d6         mov        rdx, r13
00000000000063d9         mov        byte [r14+r15+2], 0x27
00000000000063df         mov        r13, qword [rsp+arg_48]
00000000000063e4         jmp        loc_5fc2

                     loc_63e9:
00000000000063e9         mov        eax, r12d                                   ; CODE XREF=sub_5d80+99
00000000000063ec         mov        ebx, 0x30
00000000000063f1         xor        r12d, r12d
00000000000063f4         jmp        sub_5990+105
                        ; endp

                     loc_63f9:
00000000000063f9         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_5d80+67
00000000000063ff         jmp        loc_5dc9

                     loc_6404:
0000000000006404         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000006406         jne        loc_5833

000000000000640c         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_6411:
0000000000006411         test       r13, r13                                    ; CODE XREF=sub_5ee0+2749
0000000000006414         jne        loc_69aa

000000000000641a         lea        rax, qword [aLibs+29]                       ; 0x9c25
0000000000006421         mov        qword [rsp+0xe8+var_98], 0x0
000000000000642a         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000642f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000006434         xor        r12d, r12d
0000000000006437         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000643c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000006445         mov        qword [rsp+0xe8+var_A0], rax
000000000000644a         mov        r15d, 0x1
0000000000006450         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000006458         jmp        loc_5873
000000000000645d         align      32

                     loc_6460:
0000000000006460         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000006462         jne        loc_685d

0000000000006468         test       r13, r13
000000000000646b         je         loc_6696

0000000000006471         mov        byte [r14], 0x22
0000000000006475         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000647a         xor        r12d, r12d
000000000000647d         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000006482         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_648b:
000000000000648b         lea        rax, qword [aLibs+27]                       ; 0x9c23, CODE XREF=sub_5ee0+1996
0000000000006492         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000006497         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000649c         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000064a5         mov        r15d, 0x1
00000000000064ab         mov        qword [rsp+0xe8+var_A0], rax
00000000000064b0         jmp        loc_5873

                     loc_64b5:
00000000000064b5         lea        rax, qword [aLibs+27]                       ; case 6, 0x9c23, CODE XREF=quotearg_buffer_restyled+145
00000000000064bc         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000064c1         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000064c6         xor        r12d, r12d
00000000000064c9         mov        qword [rsp+0xe8+var_98], 0x0
00000000000064d2         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000064d7         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000064dc         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000064e5         xor        r15d, r15d
00000000000064e8         mov        qword [rsp+0xe8+var_A0], rax
00000000000064ed         mov        dword [rsp+0xe8+var_E0], 0x5
00000000000064f5         jmp        loc_5873

                     loc_64fa:
00000000000064fa         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
00000000000064ff         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000006504         xor        r12d, r12d
0000000000006507         mov        qword [rsp+0xe8+var_98], 0x0
0000000000006510         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000006515         xor        r15d, r15d
0000000000006518         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000651d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000006526         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000652f         jmp        loc_5873

                     loc_6534:
0000000000006534         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000006539         je         loc_6591

000000000000653b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x9c27
0000000000006542         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006544         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006549         call       j_dcgettext                                 ; dcgettext
000000000000654e         mov        rcx, rax
0000000000006551         mov        qword [rsp+0xe8+var_80], rax
0000000000006556         lea        rax, qword [aLibs+31]                       ; 0x9c27
000000000000655d         cmp        rcx, rax
0000000000006560         je         loc_68fe

                     loc_6566:
0000000000006566         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x9c25, CODE XREF=sub_5ee0+2607
000000000000656d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000656f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006574         call       j_dcgettext                                 ; dcgettext
0000000000006579         mov        rcx, rax
000000000000657c         mov        qword [rsp+0xe8+var_88], rax
0000000000006581         lea        rax, qword [aLibs+29]                       ; 0x9c25
0000000000006588         cmp        rcx, rax
000000000000658b         je         loc_6914

                     loc_6591:
0000000000006591         xor        r15d, r15d                                  ; CODE XREF=sub_5ee0+1625, sub_5ee0+2629
0000000000006594         test       ebx, ebx
0000000000006596         je         loc_675d

                     loc_659c:
000000000000659c         test       ebx, ebx                                    ; CODE XREF=sub_5ee0+2183, sub_5ee0+2214
000000000000659e         mov        rbx, qword [rsp+0xe8+var_88]
00000000000065a3         setne      byte [rsp+0xe8+var_D9]
00000000000065a8         xor        r12d, r12d
00000000000065ab         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
00000000000065ae         call       j_strlen                                    ; strlen
00000000000065b3         mov        qword [rsp+0xe8+var_A0], rbx
00000000000065b8         mov        qword [rsp+0xe8+var_D0], rax
00000000000065bd         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000065c2         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000065c7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000065d0         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000065d5         jmp        loc_5873

                     loc_65da:
00000000000065da         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
00000000000065df         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000065e4         xor        r12d, r12d
00000000000065e7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000065f0         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000065f5         xor        r15d, r15d
00000000000065f8         mov        byte [rsp+0xe8+var_DB], 0x0
00000000000065fd         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000006606         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000660f         jmp        loc_5873

                     loc_6614:
0000000000006614         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000006619         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000661e         xor        r12d, r12d
0000000000006621         mov        qword [rsp+0xe8+var_98], 0x0
000000000000662a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000662f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000006634         jmp        loc_5853

                     loc_6639:
0000000000006639         cmp        r13, r15                                    ; CODE XREF=sub_5d80+133
000000000000663c         jbe        loc_6643

000000000000663e         mov        byte [r14+r15], 0x30

                     loc_6643:
0000000000006643         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_5ee0+1884
0000000000006647         cmp        r13, rax
000000000000664a         jbe        loc_6652

000000000000664c         mov        byte [r14+rcx+2], 0x30

                     loc_6652:
0000000000006652         mov        eax, r12d                                   ; CODE XREF=sub_5ee0+1898
0000000000006655         lea        r15, qword [rcx+3]
0000000000006659         xor        r12d, r12d
000000000000665c         mov        ebx, 0x30
0000000000006661         jmp        sub_5990+56
                        ; endp
0000000000006666         align      16

                     loc_6670:
0000000000006670         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_5ee0+731
0000000000006675         mov        rbp, r11
0000000000006678         mov        byte [rsp+0xe8+var_DB], bl
000000000000667c         jmp        loc_6329

                     loc_6681:
0000000000006681         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_5c80+105
0000000000006686         xor        r12d, r12d
0000000000006689         jmp        loc_6190

                     loc_668e:
000000000000668e         xor        r10d, r10d                                  ; CODE XREF=sub_5ee0+944
0000000000006691         jmp        loc_624d

                     loc_6696:
0000000000006696         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_5ee0+1419
000000000000669f         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000066a4         xor        r12d, r12d
00000000000066a7         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000066ac         jmp        loc_648b

                     loc_66b1:
00000000000066b1         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_5ee0+561
00000000000066b6         mov        rsi, r14
00000000000066b9         mov        rcx, r13
00000000000066bc         mov        rax, rbx
00000000000066bf         mov        rdi, rbx
00000000000066c2         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000066c8         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000066cd         mov        r9, qword [rsp+0xe8+var_60]
00000000000066d5         cmp        rsi, r11
00000000000066d8         movzx      r10d, byte [rsp+0xe8+var_69]
00000000000066de         mov        r15, qword [rsp+0xe8+var_68]
00000000000066e6         mov        r14, qword [rsp+0xe8+var_A8]
00000000000066eb         mov        r13, qword [rsp+0xe8+var_78]
00000000000066f0         jae        loc_6718

00000000000066f2         cmp        byte [rcx], 0x0
00000000000066f5         jne        loc_6707

00000000000066f7         jmp        loc_6718
00000000000066f9         align      256

                     loc_6700:
0000000000006700         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_5ee0+2099
0000000000006705         je         loc_6715

                     loc_6707:
0000000000006707         add        rax, 0x1                                    ; CODE XREF=sub_5ee0+2069
000000000000670b         lea        rdx, qword [rbp+rax]
0000000000006710         cmp        r11, rdx
0000000000006713         ja         loc_6700

                     loc_6715:
0000000000006715         mov        rdi, rax                                    ; CODE XREF=sub_5ee0+2085

                     loc_6718:
0000000000006718         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_5ee0+2064, sub_5ee0+2071
000000000000671d         xor        r12d, r12d
0000000000006720         jmp        loc_6186

                     loc_6725:
0000000000006725         mov        rdi, rbx                                    ; CODE XREF=sub_5ee0+551
0000000000006728         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000672e         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000006733         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000006739         mov        r15, qword [rsp+0xe8+var_68]
0000000000006741         xor        r12d, r12d
0000000000006744         mov        r14, qword [rsp+0xe8+var_A8]
0000000000006749         mov        r13, qword [rsp+0xe8+var_78]
000000000000674e         mov        r11, qword [rsp+0xe8+var_B8]
0000000000006753         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000006758         jmp        loc_6186

                     loc_675d:
000000000000675d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_5ee0+1718
0000000000006762         movzx      eax, byte [rdx]
0000000000006765         test       al, al
0000000000006767         je         loc_659c

000000000000676d         nop        dword [rax]

                     loc_6770:
0000000000006770         cmp        r13, r15                                    ; CODE XREF=sub_5ee0+2212
0000000000006773         jbe        loc_6779

0000000000006775         mov        byte [r14+r15], al

                     loc_6779:
0000000000006779         add        r15, 0x1                                    ; CODE XREF=sub_5ee0+2195
000000000000677d         movzx      eax, byte [rdx+r15]
0000000000006782         test       al, al
0000000000006784         jne        loc_6770

0000000000006786         jmp        loc_659c

                     loc_678b:
000000000000678b         mov        eax, edx                                    ; CODE XREF=sub_5ee0+682
000000000000678d         jmp        loc_5ce7

                     loc_6792:
0000000000006792         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_5ee0+290
0000000000006796         cmp        bl, 0x3e
0000000000006799         ja         loc_6010

000000000000679f         movabs     rax, 0x7000a38200000000
00000000000067a9         bt         rax, rbx
00000000000067ad         jae        loc_6010

00000000000067b3         cmp        byte [rsp+arg_7], 0x0
00000000000067b8         jne        loc_69a2

00000000000067be         cmp        r13, r15
00000000000067c1         jbe        loc_67c8

00000000000067c3         mov        byte [r14+r15], 0x3f

                     loc_67c8:
00000000000067c8         lea        rax, qword [r15+1]                          ; CODE XREF=sub_5ee0+2273
00000000000067cc         cmp        r13, rax
00000000000067cf         jbe        loc_67d7

00000000000067d1         mov        byte [r14+r15+1], 0x22

                     loc_67d7:
00000000000067d7         lea        rax, qword [r15+2]                          ; CODE XREF=sub_5ee0+2287
00000000000067db         cmp        r13, rax
00000000000067de         jbe        loc_67e6

00000000000067e0         mov        byte [r14+r15+2], 0x22

                     loc_67e6:
00000000000067e6         lea        rax, qword [r15+3]                          ; CODE XREF=sub_5ee0+2302
00000000000067ea         cmp        r13, rax
00000000000067ed         jbe        loc_67f5

00000000000067ef         mov        byte [r14+r15+3], 0x3f

                     loc_67f5:
00000000000067f5         add        r15, 0x4                                    ; CODE XREF=sub_5ee0+2317
00000000000067f9         xor        edx, edx
00000000000067fb         xor        r12d, r12d
00000000000067fe         xor        eax, eax
0000000000006800         mov        rbp, rcx
0000000000006803         jmp        sub_5990+56
                        ; endp

                     loc_6808:
0000000000006808         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
000000000000680a         je         loc_6998

0000000000006810         lea        rax, qword [aLibs+29]                       ; 0x9c25
0000000000006817         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000681c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000006821         xor        r12d, r12d
0000000000006824         mov        qword [rsp+0xe8+var_98], 0x0
000000000000682d         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000006832         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000006837         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000006840         xor        r15d, r15d
0000000000006843         mov        qword [rsp+0xe8+var_A0], rax
0000000000006848         jmp        loc_5873
000000000000684d         align      16

                     loc_6850:
0000000000006850         mov        rbp, r11                                    ; CODE XREF=sub_5ee0+333
0000000000006853         movzx      eax, byte [rsp+arg_7]
0000000000006858         jmp        sub_5ee0+1097
                        ; endp

                     loc_685d:
000000000000685d         lea        rax, qword [aLibs+27]                       ; 0x9c23, CODE XREF=sub_5ee0+1410
0000000000006864         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000006869         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000686e         xor        r12d, r12d
0000000000006871         mov        qword [rsp+0xe8+var_98], 0x0
000000000000687a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000687f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000006884         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000688d         xor        r15d, r15d
0000000000006890         mov        qword [rsp+0xe8+var_A0], rax
0000000000006895         jmp        loc_5873

                     loc_689a:
000000000000689a         mov        eax, edx                                    ; CODE XREF=sub_5ee0+87

                     loc_689c:
000000000000689c         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_5ee0+76, sub_5ee0+2721
00000000000068a1         test       rbx, rbx
00000000000068a4         je         loc_68d2

00000000000068a6         test       al, al
00000000000068a8         je         loc_68d2

00000000000068aa         movzx      ecx, byte [rbx]
00000000000068ad         mov        rax, rbx
00000000000068b0         test       cl, cl
00000000000068b2         je         loc_68d2

00000000000068b4         mov        rdx, r15
00000000000068b7         sub        rax, r15

                     loc_68ba:
00000000000068ba         cmp        r13, rdx                                    ; CODE XREF=sub_5ee0+2541
00000000000068bd         jbe        loc_68c3

00000000000068bf         mov        byte [r14+rdx], cl

                     loc_68c3:
00000000000068c3         add        rdx, 0x1                                    ; CODE XREF=sub_5ee0+2525
00000000000068c7         movzx      ecx, byte [rax+rdx]
00000000000068cb         test       cl, cl
00000000000068cd         jne        loc_68ba

00000000000068cf         mov        r15, rdx

                     loc_68d2:
00000000000068d2         cmp        r13, r15                                    ; CODE XREF=sub_5ee0+2500, sub_5ee0+2504, sub_5ee0+2514
00000000000068d5         jbe        loc_6379

00000000000068db         mov        byte [r14+r15], 0x0
00000000000068e0         jmp        loc_6379

                     loc_68e5:
00000000000068e5         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
00000000000068ea         movzx      ebx, byte [rsp+0xe8+var_D9]
00000000000068ef         mov        rbp, r11
00000000000068f2         sete       al
00000000000068f5         mov        byte [rsp+0xe8+var_DB], bl
00000000000068f9         jmp        loc_6329

                     loc_68fe:
00000000000068fe         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_5ee0+1664
0000000000006902         mov        rdi, rcx
0000000000006905         call       gettext_quote.part.1                        ; gettext_quote.part.1
000000000000690a         mov        qword [rsp+0xe8+var_80], rax
000000000000690f         jmp        loc_6566

                     loc_6914:
0000000000006914         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_5ee0+1707
0000000000006918         mov        rdi, rcx
000000000000691b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000006920         mov        qword [rsp+0xe8+var_88], rax
0000000000006925         jmp        loc_6591

                     loc_692a:
000000000000692a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_5d80+16
000000000000692f         mov        rbp, r11
0000000000006932         mov        eax, edx
0000000000006934         mov        byte [rsp+arg_5], bl
0000000000006938         jmp        sub_5ee0+1097
                        ; endp

                     loc_693d:
000000000000693d         sub        rsp, 0x8                                    ; CODE XREF=sub_5ee0+98
0000000000006941         mov        r8d, 0x5
0000000000006947         mov        rcx, r11
000000000000694a         push       qword [rsp+0xf0+var_88]
000000000000694e         push       qword [rsp+0xf8+var_80]
0000000000006952         mov        rdi, r14
0000000000006955         push       qword [rsp+0x100+var_C8]
0000000000006959         mov        r9d, dword [rsp+0x108+var_70]
0000000000006961         mov        rdx, qword [rsp+0x108+var_D8]
0000000000006966         mov        rsi, qword [rsp+0x108+var_98]
000000000000696b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000006970         add        rsp, 0x20
0000000000006974         mov        r15, rax
0000000000006977         jmp        loc_6379

                     loc_697c:
000000000000697c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_5ee0+121
0000000000006981         jmp        loc_689c

                     loc_6986:
0000000000006986         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_5ee0+63
000000000000698e         jmp        loc_6329

                     loc_6993:
0000000000006993         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_5ee0+1197
                        ; endp

                     loc_6998:
0000000000006998         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_5ee0+2346
000000000000699d         jmp        loc_6411

                     loc_69a2:
00000000000069a2         mov        rbp, r11                                    ; CODE XREF=sub_5ee0+2264
00000000000069a5         jmp        sub_5ee0+1120
                        ; endp

                     loc_69aa:
00000000000069aa         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_5ee0+1332
00000000000069af         xor        eax, eax
00000000000069b1         xor        r12d, r12d
00000000000069b4         mov        qword [rsp+0xe8+var_98], 0x0
00000000000069bd         jmp        loc_5f64

                     loc_69c2:
00000000000069c2         mov        rdx, r13                                    ; CODE XREF=sub_5ee0+1264
00000000000069c5         mov        r13, qword [rsp+arg_48]
00000000000069ca         jmp        loc_5fc2

                     loc_69cf:
00000000000069cf         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
00000000000069d4         align      32                                          ; End of unwind block (FDE at 0xacf8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
00000000000069e0         push       r15                                         ; Begin of unwind block (FDE at 0xad70), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
00000000000069e2         push       r14
00000000000069e4         movsxd     r15, edi
00000000000069e7         push       r13
00000000000069e9         push       r12
00000000000069eb         mov        r14, rdx
00000000000069ee         push       rbp
00000000000069ef         push       rbx
00000000000069f0         mov        rbp, rcx
00000000000069f3         sub        rsp, 0x28
00000000000069f7         mov        qword [rsp+0x58+var_50], rsi
00000000000069fc         call       j___errno_location                          ; __errno_location
0000000000006a01         mov        r13, rax
0000000000006a04         mov        eax, dword [rax]
0000000000006a06         test       r15d, r15d
0000000000006a09         mov        rbx, qword [slotvec]                        ; slotvec
0000000000006a10         mov        dword [rsp+0x58+var_40], eax
0000000000006a14         js         loc_6b81

0000000000006a1a         cmp        dword [nslots], r15d                        ; nslots
0000000000006a21         jg         loc_6a85

0000000000006a23         cmp        r15d, 0x7fffffff
0000000000006a2a         je         loc_6b86

0000000000006a30         lea        r12d, dword [r15+1]
0000000000006a34         lea        rax, qword [slotvec0]                       ; slotvec0
0000000000006a3b         movsxd     rsi, r12d
0000000000006a3e         shl        rsi, 0x4
0000000000006a42         cmp        rbx, rax
0000000000006a45         je         loc_6b60

0000000000006a4b         mov        rdi, rbx
0000000000006a4e         call       xrealloc                                    ; xrealloc
0000000000006a53         mov        rbx, rax
0000000000006a56         mov        qword [slotvec], rax                        ; slotvec

                     loc_6a5d:
0000000000006a5d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000006a64         mov        edx, r12d
0000000000006a67         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000006a69         sub        edx, edi
0000000000006a6b         shl        rdi, 0x4
0000000000006a6f         movsxd     rdx, edx
0000000000006a72         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000006a75         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000006a79         call       j_memset                                    ; memset
0000000000006a7e         mov        dword [nslots], r12d                        ; nslots

                     loc_6a85:
0000000000006a85         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000006a88         shl        r15, 0x4
0000000000006a8c         sub        rsp, 0x8
0000000000006a90         add        rbx, r15
0000000000006a93         lea        r15, qword [rbp+8]
0000000000006a97         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000006a9b         mov        r11, qword [rbx]
0000000000006a9e         mov        r12, qword [rbx+8]
0000000000006aa2         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000006aa5         or         eax, 0x1
0000000000006aa8         mov        dword [rsp+0x60+var_3C], eax
0000000000006aac         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000006aaf         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000006ab2         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000006ab5         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000006ab7         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
0000000000006aba         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000006abf         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000006ac2         mov        qword [rsp+0x78+var_48], r11
0000000000006ac7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000006acc         add        rsp, 0x20
0000000000006ad0         mov        r11, qword [rsp+0x58+var_48]
0000000000006ad5         cmp        r11, rax
0000000000006ad8         ja         loc_6b41

0000000000006ada         lea        rsi, qword [rax+1]
0000000000006ade         lea        rax, qword [slot0]                          ; slot0
0000000000006ae5         cmp        r12, rax
0000000000006ae8         mov        qword [rbx], rsi
0000000000006aeb         je         loc_6aff

0000000000006aed         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000006af0         mov        qword [rsp+0x58+var_48], rsi
0000000000006af5         call       j_free                                      ; free
0000000000006afa         mov        rsi, qword [rsp+0x58+var_48]

                     loc_6aff:
0000000000006aff         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000006b02         mov        qword [rsp+0x58+var_48], rsi
0000000000006b07         call       xmalloc                                     ; xmalloc
0000000000006b0c         sub        rsp, 0x8
0000000000006b10         mov        qword [rbx+8], rax
0000000000006b14         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000006b18         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000006b1b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000006b1e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000006b21         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000006b23         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000006b28         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
0000000000006b2b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000006b30         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000006b35         mov        r12, rax
0000000000006b38         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000006b3d         add        rsp, 0x20

                     loc_6b41:
0000000000006b41         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000006b45         mov        dword [r13], eax
0000000000006b49         add        rsp, 0x28
0000000000006b4d         mov        rax, r12
0000000000006b50         pop        rbx
0000000000006b51         pop        rbp
0000000000006b52         pop        r12
0000000000006b54         pop        r13
0000000000006b56         pop        r14
0000000000006b58         pop        r15
0000000000006b5a         ret
                        ; endp
0000000000006b5b         align      32

                     loc_6b60:
0000000000006b60         xor        edi, edi                                    ; CODE XREF=quotearg_n_options+101
0000000000006b62         call       xrealloc                                    ; xrealloc
0000000000006b67         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
0000000000006b6f         mov        rbx, rax
0000000000006b72         mov        qword [slotvec], rax                        ; slotvec
0000000000006b79         movups     xmmword [rax], xmm0
0000000000006b7c         jmp        loc_6a5d

                     loc_6b81:
0000000000006b81         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_6b86:
0000000000006b86         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6b8b:
0000000000006b8b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0xad70)
                     clone_quoting_options:
0000000000006b90         push       r12                                         ; Begin of unwind block (FDE at 0xaddc)
0000000000006b92         push       rbp
0000000000006b93         push       rbx
0000000000006b94         mov        rbx, rdi
0000000000006b97         call       j___errno_location                          ; __errno_location
0000000000006b9c         mov        r12d, dword [rax]
0000000000006b9f         mov        rbp, rax
0000000000006ba2         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000006ba9         test       rbx, rbx
0000000000006bac         mov        esi, 0x38
0000000000006bb1         cmove      rbx, rax
0000000000006bb5         mov        rdi, rbx
0000000000006bb8         call       xmemdup                                     ; xmemdup
0000000000006bbd         mov        dword [rbp], r12d
0000000000006bc1         pop        rbx
0000000000006bc2         pop        rbp
0000000000006bc3         pop        r12
0000000000006bc5         ret
                        ; endp
0000000000006bc6         align      16                                          ; End of unwind block (FDE at 0xaddc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000006bd0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xae08), default_quoting_options
0000000000006bd7         test       rdi, rdi
0000000000006bda         cmove      rdi, rax
0000000000006bde         mov        eax, dword [rdi]
0000000000006be0         ret
                        ; endp
0000000000006be1         align      16                                          ; End of unwind block (FDE at 0xae08)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000006bf0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xae1c), default_quoting_options
0000000000006bf7         test       rdi, rdi
0000000000006bfa         cmove      rdi, rax
0000000000006bfe         mov        dword [rdi], esi
0000000000006c00         ret
                        ; endp
0000000000006c01         align      16                                          ; End of unwind block (FDE at 0xae1c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000006c10         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xae30), default_quoting_options
0000000000006c17         test       rdi, rdi
0000000000006c1a         mov        ecx, esi
0000000000006c1c         cmove      rdi, rax
0000000000006c20         mov        eax, esi
0000000000006c22         and        ecx, 0x1f
0000000000006c25         shr        al, 0x5
0000000000006c28         movzx      eax, al
0000000000006c2b         lea        rdi, qword [rdi+rax*4+8]
0000000000006c30         mov        esi, dword [rdi]
0000000000006c32         mov        eax, esi
0000000000006c34         shr        eax, cl
0000000000006c36         xor        edx, eax
0000000000006c38         and        eax, 0x1
0000000000006c3b         and        edx, 0x1
0000000000006c3e         shl        edx, cl
0000000000006c40         xor        edx, esi
0000000000006c42         mov        dword [rdi], edx
0000000000006c44         ret
                        ; endp
0000000000006c45         align      16                                          ; End of unwind block (FDE at 0xae30)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000006c50         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xae44), default_quoting_options
0000000000006c57         test       rdi, rdi
0000000000006c5a         cmove      rdi, rax
0000000000006c5e         mov        eax, dword [rdi+4]
0000000000006c61         mov        dword [rdi+4], esi
0000000000006c64         ret
                        ; endp
0000000000006c65         align      16                                          ; End of unwind block (FDE at 0xae44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000006c70         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xae58), default_quoting_options
0000000000006c77         test       rdi, rdi
0000000000006c7a         cmove      rdi, rax
0000000000006c7e         test       rsi, rsi
0000000000006c81         mov        dword [rdi], 0xa
0000000000006c87         je         loc_6c97

0000000000006c89         test       rdx, rdx
0000000000006c8c         je         loc_6c97

0000000000006c8e         mov        qword [rdi+0x28], rsi
0000000000006c92         mov        qword [rdi+0x30], rdx
0000000000006c96         ret
                        ; endp

                     loc_6c97:
0000000000006c97         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
0000000000006c9b         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000006ca0         push       r15                                         ; End of unwind block (FDE at 0xae58), Begin of unwind block (FDE at 0xae6c)
0000000000006ca2         push       r14
0000000000006ca4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000006cab         push       r13
0000000000006cad         push       r12
0000000000006caf         mov        r13, rdi
0000000000006cb2         push       rbp
0000000000006cb3         push       rbx
0000000000006cb4         mov        rbx, r8
0000000000006cb7         mov        r14, rsi
0000000000006cba         mov        r15, rdx
0000000000006cbd         sub        rsp, 0x18
0000000000006cc1         test       r8, r8
0000000000006cc4         cmove      rbx, rax
0000000000006cc8         mov        qword [rsp+0x48+var_40], rcx
0000000000006ccd         call       j___errno_location                          ; __errno_location
0000000000006cd2         mov        r12d, dword [rax]
0000000000006cd5         mov        rbp, rax
0000000000006cd8         lea        rax, qword [rbx+8]
0000000000006cdc         sub        rsp, 0x8
0000000000006ce0         mov        r9d, dword [rbx+4]
0000000000006ce4         push       qword [rbx+0x30]
0000000000006ce7         mov        r8d, dword [rbx]
0000000000006cea         push       qword [rbx+0x28]
0000000000006ced         mov        rdx, r15
0000000000006cf0         push       rax
0000000000006cf1         mov        rcx, qword [rsp+0x68+var_40]
0000000000006cf6         mov        rsi, r14
0000000000006cf9         mov        rdi, r13
0000000000006cfc         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000006d01         mov        dword [rbp], r12d
0000000000006d05         add        rsp, 0x38
0000000000006d09         pop        rbx
0000000000006d0a         pop        rbp
0000000000006d0b         pop        r12
0000000000006d0d         pop        r13
0000000000006d0f         pop        r14
0000000000006d11         pop        r15
0000000000006d13         ret
                        ; endp
0000000000006d14         align      32                                          ; End of unwind block (FDE at 0xae6c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000006d20         push       r15                                         ; Begin of unwind block (FDE at 0xaec0), CODE XREF=quotearg_alloc+5
0000000000006d22         push       r14
0000000000006d24         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000006d2b         push       r13
0000000000006d2d         push       r12
0000000000006d2f         mov        r12, rdx
0000000000006d32         push       rbp
0000000000006d33         push       rbx
0000000000006d34         mov        rbx, rcx
0000000000006d37         mov        r14, rdi
0000000000006d3a         mov        r15, rsi
0000000000006d3d         sub        rsp, 0x38
0000000000006d41         test       rcx, rcx
0000000000006d44         cmove      rbx, rax
0000000000006d48         xor        ebp, ebp
0000000000006d4a         call       j___errno_location                          ; __errno_location
0000000000006d4f         test       r12, r12
0000000000006d52         mov        r13, rax
0000000000006d55         mov        eax, dword [rax]
0000000000006d57         sete       bpl
0000000000006d5b         or         ebp, dword [rbx+4]
0000000000006d5e         lea        r10, qword [rbx+8]
0000000000006d62         sub        rsp, 0x8
0000000000006d66         mov        r8d, dword [rbx]
0000000000006d69         mov        rcx, r15
0000000000006d6c         mov        dword [rsp+0x70+var_5C], eax
0000000000006d70         push       qword [rbx+0x30]
0000000000006d73         mov        rdx, r14
0000000000006d76         push       qword [rbx+0x28]
0000000000006d79         push       r10
0000000000006d7b         xor        esi, esi
0000000000006d7d         mov        r9d, ebp
0000000000006d80         xor        edi, edi
0000000000006d82         mov        qword [rsp+0x88+var_48], r10
0000000000006d87         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000006d8c         lea        rsi, qword [rax+1]
0000000000006d90         mov        qword [rsp+0x88+var_40], rax
0000000000006d95         add        rsp, 0x20
0000000000006d99         mov        rdi, rsi
0000000000006d9c         mov        qword [rsp+0x68+var_50], rsi
0000000000006da1         call       xmalloc                                     ; xmalloc
0000000000006da6         mov        qword [rsp+0x68+var_58], rax
0000000000006dab         sub        rsp, 0x8
0000000000006daf         push       qword [rbx+0x30]
0000000000006db2         push       qword [rbx+0x28]
0000000000006db5         mov        r10, qword [rsp+0x80+var_48]
0000000000006dba         mov        r9d, ebp
0000000000006dbd         mov        r8d, dword [rbx]
0000000000006dc0         mov        rcx, r15
0000000000006dc3         mov        rdx, r14
0000000000006dc6         mov        rdi, rax
0000000000006dc9         push       r10
0000000000006dcb         mov        rsi, qword [rsp+0x88+var_50]
0000000000006dd0         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000006dd5         mov        eax, dword [rsp+0x88+var_5C]
0000000000006dd9         add        rsp, 0x20
0000000000006ddd         test       r12, r12
0000000000006de0         mov        dword [r13], eax
0000000000006de4         je         loc_6def

0000000000006de6         mov        r11, qword [rsp+0x68+var_40]
0000000000006deb         mov        qword [r12], r11

                     loc_6def:
0000000000006def         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000006df4         add        rsp, 0x38
0000000000006df8         pop        rbx
0000000000006df9         pop        rbp
0000000000006dfa         pop        r12
0000000000006dfc         pop        r13
0000000000006dfe         pop        r14
0000000000006e00         pop        r15
0000000000006e02         ret
                        ; endp
0000000000006e03         align      16                                          ; End of unwind block (FDE at 0xaec0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000006e10         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xaf2c)
0000000000006e13         xor        edx, edx
0000000000006e15         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
0000000000006e1a         align      32                                          ; End of unwind block (FDE at 0xaf2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000006e20         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0xaf40), nslots
0000000000006e26         push       r12
0000000000006e28         mov        r12, qword [slotvec]                        ; slotvec
0000000000006e2f         push       rbp
0000000000006e30         push       rbx
0000000000006e31         cmp        eax, 0x1
0000000000006e34         jle        loc_6e61

0000000000006e36         sub        eax, 0x2
0000000000006e39         lea        rbx, qword [r12+0x18]
0000000000006e3e         shl        rax, 0x4
0000000000006e42         lea        rbp, qword [r12+rax+0x28]
0000000000006e47         nop        word [rax+rax]

                     loc_6e50:
0000000000006e50         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
0000000000006e53         add        rbx, 0x10
0000000000006e57         call       j_free                                      ; free
0000000000006e5c         cmp        rbx, rbp
0000000000006e5f         jne        loc_6e50

                     loc_6e61:
0000000000006e61         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000006e66         lea        rbx, qword [slot0]                          ; slot0
0000000000006e6d         cmp        rdi, rbx
0000000000006e70         je         loc_6e89

0000000000006e72         call       j_free                                      ; free
0000000000006e77         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000006e82         mov        qword [slotvec0+8], rbx                     ; 0x20c098

                     loc_6e89:
0000000000006e89         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000006e90         cmp        r12, rbx
0000000000006e93         je         loc_6ea4

0000000000006e95         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000006e98         call       j_free                                      ; free
0000000000006e9d         mov        qword [slotvec], rbx                        ; slotvec

                     loc_6ea4:
0000000000006ea4         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000006ea5         mov        dword [nslots], 0x1                         ; nslots
0000000000006eaf         pop        rbp
0000000000006eb0         pop        r12
0000000000006eb2         ret
                        ; endp
0000000000006eb3         align      64                                          ; End of unwind block (FDE at 0xaf40)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000006ec0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xaf6c), default_quoting_options
0000000000006ec7         mov        rdx, 0xffffffffffffffff
0000000000006ece         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000006ed3         align      32                                          ; End of unwind block (FDE at 0xaf6c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000006ee0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xaf80), default_quoting_options
0000000000006ee7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000006eec         align      16                                          ; End of unwind block (FDE at 0xaf80)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000006ef0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xaf94), default_quoting_options
0000000000006ef7         mov        rsi, rdi
0000000000006efa         mov        rdx, 0xffffffffffffffff
0000000000006f01         xor        edi, edi
0000000000006f03         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000006f08         align      16                                          ; End of unwind block (FDE at 0xaf94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000006f10         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xafa8), default_quoting_options
0000000000006f17         mov        rdx, rsi
0000000000006f1a         mov        rsi, rdi
0000000000006f1d         xor        edi, edi
0000000000006f1f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000006f24         align      16                                          ; End of unwind block (FDE at 0xafa8)

                     quotearg_n_style:
0000000000006f30         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xafbc), CODE XREF=quotearg_style+7
0000000000006f34         mov        rax, rdx
0000000000006f37         mov        rdx, qword [fs:0x28]
0000000000006f40         mov        qword [rsp+0x48+var_10], rdx
0000000000006f45         xor        edx, edx
0000000000006f47         cmp        esi, 0xa
0000000000006f4a         je         loc_6fb4

0000000000006f4c         mov        dword [rsp+0x48+var_48], esi
0000000000006f4f         mov        rcx, rsp
0000000000006f52         mov        rdx, 0xffffffffffffffff
0000000000006f59         mov        rsi, rax
0000000000006f5c         mov        qword [rsp+0x48+var_44], 0x0
0000000000006f65         mov        qword [rsp+0x48+var_3C], 0x0
0000000000006f6e         mov        qword [rsp+0x48+var_34], 0x0
0000000000006f77         mov        qword [rsp+0x48+var_2C], 0x0
0000000000006f80         mov        qword [rsp+0x48+var_24], 0x0
0000000000006f89         mov        qword [rsp+0x48+var_1C], 0x0
0000000000006f92         mov        dword [rsp+0x48+var_14], 0x0
0000000000006f9a         call       quotearg_n_options                          ; quotearg_n_options
0000000000006f9f         mov        rcx, qword [rsp+0x48+var_10]
0000000000006fa4         xor        rcx, qword [fs:0x28]
0000000000006fad         jne        loc_6fb9

0000000000006faf         add        rsp, 0x48
0000000000006fb3         ret
                        ; endp

                     loc_6fb4:
0000000000006fb4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_6fb9:
0000000000006fb9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
0000000000006fbe         align      64                                          ; End of unwind block (FDE at 0xafbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000006fc0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xafd8), CODE XREF=quotearg_style_mem+10
0000000000006fc4         mov        rax, rdx
0000000000006fc7         mov        rdx, rcx
0000000000006fca         mov        rcx, qword [fs:0x28]
0000000000006fd3         mov        qword [rsp+0x48+var_10], rcx
0000000000006fd8         xor        ecx, ecx
0000000000006fda         cmp        esi, 0xa
0000000000006fdd         je         loc_7040

0000000000006fdf         mov        dword [rsp+0x48+var_48], esi
0000000000006fe2         mov        rcx, rsp
0000000000006fe5         mov        rsi, rax
0000000000006fe8         mov        qword [rsp+0x48+var_44], 0x0
0000000000006ff1         mov        qword [rsp+0x48+var_3C], 0x0
0000000000006ffa         mov        qword [rsp+0x48+var_34], 0x0
0000000000007003         mov        qword [rsp+0x48+var_2C], 0x0
000000000000700c         mov        qword [rsp+0x48+var_24], 0x0
0000000000007015         mov        qword [rsp+0x48+var_1C], 0x0
000000000000701e         mov        dword [rsp+0x48+var_14], 0x0
0000000000007026         call       quotearg_n_options                          ; quotearg_n_options
000000000000702b         mov        rdx, qword [rsp+0x48+var_10]
0000000000007030         xor        rdx, qword [fs:0x28]
0000000000007039         jne        loc_7045

000000000000703b         add        rsp, 0x48
000000000000703f         ret
                        ; endp

                     loc_7040:
0000000000007040         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_7045:
0000000000007045         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
000000000000704a         align      16                                          ; End of unwind block (FDE at 0xafd8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_style:
0000000000007050         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0xaff4), CODE XREF=main+6731, create+808, sub_44cf+156, sub_44cf+283
0000000000007053         mov        esi, edi
0000000000007055         xor        edi, edi
0000000000007057         jmp        quotearg_n_style                            ; quotearg_n_style
000000000000705c         align      32                                          ; End of unwind block (FDE at 0xaff4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000007060         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xb008)
0000000000007063         mov        rdx, rsi
0000000000007066         mov        esi, edi
0000000000007068         xor        edi, edi
000000000000706a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
000000000000706f         align      16                                          ; End of unwind block (FDE at 0xb008)

                     quotearg_char_mem:
0000000000007070         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xb01c), CODE XREF=quotearg_char+11
0000000000007074         mov        ecx, edx
0000000000007076         mov        rax, qword [fs:0x28]
000000000000707f         mov        qword [rsp+0x48+var_10], rax
0000000000007084         xor        eax, eax
0000000000007086         mov        rax, qword [qword_20c650]                   ; qword_20c650
000000000000708d         mov        r8, rsp
0000000000007090         and        ecx, 0x1f
0000000000007093         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
000000000000709b         mov        qword [rsp+0x48+var_18], rax
00000000000070a0         mov        eax, edx
00000000000070a2         movaps     xmmword [rsp+0x48+var_48], xmm0
00000000000070a6         shr        al, 0x5
00000000000070a9         movzx      eax, al
00000000000070ac         lea        r9, qword [r8+rax*4+8]
00000000000070b1         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20c630
00000000000070b9         movaps     xmmword [rsp+0x48+var_38], xmm0
00000000000070be         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20c640
00000000000070c6         movaps     xmmword [rsp+0x48+var_28], xmm0
00000000000070cb         mov        edx, dword [r9]
00000000000070ce         mov        eax, edx
00000000000070d0         shr        eax, cl
00000000000070d2         not        eax
00000000000070d4         and        eax, 0x1
00000000000070d7         shl        eax, cl
00000000000070d9         mov        rcx, r8
00000000000070dc         xor        eax, edx
00000000000070de         mov        rdx, rsi
00000000000070e1         mov        rsi, rdi
00000000000070e4         mov        dword [r9], eax
00000000000070e7         xor        edi, edi
00000000000070e9         call       quotearg_n_options                          ; quotearg_n_options
00000000000070ee         mov        rsi, qword [rsp+0x48+var_10]
00000000000070f3         xor        rsi, qword [fs:0x28]
00000000000070fc         jne        loc_7103

00000000000070fe         add        rsp, 0x48
0000000000007102         ret
                        ; endp

                     loc_7103:
0000000000007103         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000007108         align      16                                          ; End of unwind block (FDE at 0xb01c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000007110         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0xb038)
0000000000007114         mov        rsi, 0xffffffffffffffff
000000000000711b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000007120         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0xb038), Begin of unwind block (FDE at 0xb04c), CODE XREF=close_stdout+101
0000000000007125         mov        rsi, 0xffffffffffffffff
000000000000712c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000007131         align      64                                          ; End of unwind block (FDE at 0xb04c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000007140         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0xb060)
0000000000007145         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
000000000000714a         align      16                                          ; End of unwind block (FDE at 0xb060)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000007150         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xb074), CODE XREF=main+4008, main+5037, main+5178, main+5764, main+5845, main+5959, main+6064, main+6312, main+6536, main+6583, main+6631
0000000000007154         mov        rax, rdx
0000000000007157         mov        rdx, qword [fs:0x28]
0000000000007160         mov        qword [rsp+0x48+var_10], rdx
0000000000007165         xor        edx, edx
0000000000007167         cmp        esi, 0xa
000000000000716a         je         loc_71d4

000000000000716c         mov        dword [rsp+0x48+var_48], esi
000000000000716f         mov        rcx, rsp
0000000000007172         mov        rdx, 0xffffffffffffffff
0000000000007179         mov        rsi, rax
000000000000717c         mov        qword [rsp+0x48+var_44], 0x0
0000000000007185         mov        qword [rsp+0x48+var_3C], 0x4000000
000000000000718e         mov        qword [rsp+0x48+var_34], 0x0
0000000000007197         mov        qword [rsp+0x48+var_2C], 0x0
00000000000071a0         mov        qword [rsp+0x48+var_24], 0x0
00000000000071a9         mov        qword [rsp+0x48+var_1C], 0x0
00000000000071b2         mov        dword [rsp+0x48+var_14], 0x0
00000000000071ba         call       quotearg_n_options                          ; quotearg_n_options
00000000000071bf         mov        rcx, qword [rsp+0x48+var_10]
00000000000071c4         xor        rcx, qword [fs:0x28]
00000000000071cd         jne        loc_71d9

00000000000071cf         add        rsp, 0x48
00000000000071d3         ret
                        ; endp

                     loc_71d4:
00000000000071d4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_71d9:
00000000000071d9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
00000000000071de         align      32                                          ; End of unwind block (FDE at 0xb074)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom_mem:
00000000000071e0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xb090), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
00000000000071e4         mov        r9, rcx
00000000000071e7         mov        rcx, qword [qword_20c650]                   ; qword_20c650
00000000000071ee         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
00000000000071f6         mov        rax, qword [fs:0x28]
00000000000071ff         mov        qword [rsp+0x48+var_10], rax
0000000000007204         xor        eax, eax
0000000000007206         movaps     xmmword [rsp+0x48+var_48], xmm0
000000000000720a         test       rsi, rsi
000000000000720d         mov        qword [rsp+0x48+var_18], rcx
0000000000007212         mov        dword [rsp+0x48+var_48], 0xa
0000000000007219         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20c630
0000000000007221         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000007226         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20c640
000000000000722e         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000007233         je         loc_7267

0000000000007235         test       rdx, rdx
0000000000007238         je         loc_7267

000000000000723a         mov        qword [rsp+0x48+var_20], rsi
000000000000723f         mov        qword [rsp+0x48+var_18], rdx
0000000000007244         mov        rcx, rsp
0000000000007247         mov        rdx, r8
000000000000724a         mov        rsi, r9
000000000000724d         call       quotearg_n_options                          ; quotearg_n_options
0000000000007252         mov        rdi, qword [rsp+0x48+var_10]
0000000000007257         xor        rdi, qword [fs:0x28]
0000000000007260         jne        loc_726c

0000000000007262         add        rsp, 0x48
0000000000007266         ret
                        ; endp

                     loc_7267:
0000000000007267         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_726c:
000000000000726c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000007271         align      128                                         ; End of unwind block (FDE at 0xb090)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_custom:
0000000000007280         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0xb0ac)
0000000000007287         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
000000000000728c         align      16                                          ; End of unwind block (FDE at 0xb0ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000007290         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xb0c0)
0000000000007293         mov        r8, 0xffffffffffffffff
000000000000729a         mov        rdx, rsi
000000000000729d         mov        rsi, rdi
00000000000072a0         xor        edi, edi
00000000000072a2         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
00000000000072a7         align      16                                          ; End of unwind block (FDE at 0xb0c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
00000000000072b0         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0xb0d4)
00000000000072b3         mov        rcx, rdx
00000000000072b6         mov        rdx, rsi
00000000000072b9         mov        rsi, rdi
00000000000072bc         xor        edi, edi
00000000000072be         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
00000000000072c3         align      16                                          ; End of unwind block (FDE at 0xb0d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
00000000000072d0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xb0e8), quote_quoting_options
00000000000072d7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000072dc         align      32                                          ; End of unwind block (FDE at 0xb0e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
00000000000072e0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xb0fc), quote_quoting_options
00000000000072e7         mov        rdx, rsi
00000000000072ea         mov        rsi, rdi
00000000000072ed         xor        edi, edi
00000000000072ef         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000072f4         align      256                                         ; End of unwind block (FDE at 0xb0fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000007300         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xb110), quote_quoting_options
0000000000007307         mov        rdx, 0xffffffffffffffff
000000000000730e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000007313         align      32                                          ; End of unwind block (FDE at 0xb110)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000007320         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xb124), quote_quoting_options, CODE XREF=main+6792, main+6849, main+6891, main+7211, main+7307, main+7424, xnumtoumax+109
0000000000007327         mov        rsi, rdi
000000000000732a         mov        rdx, 0xffffffffffffffff
0000000000007331         xor        edi, edi
0000000000007333         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000007338         align      64                                          ; End of unwind block (FDE at 0xb124)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     safe_read:
0000000000007340         push       r13                                         ; Begin of unwind block (FDE at 0xb13c), CODE XREF=main+2655, main+2745, main+2940, main+4503, main+5816, main+6280, bytes_split+238
0000000000007342         push       r12
0000000000007344         mov        r13d, edi
0000000000007347         push       rbp
0000000000007348         push       rbx
0000000000007349         mov        r12, rsi
000000000000734c         mov        rbx, rdx
000000000000734f         sub        rsp, 0x8
0000000000007353         nop        dword [rax+rax]

                     loc_7358:
0000000000007358         mov        rdx, rbx                                    ; argument "__nbytes" for method j_read, CODE XREF=safe_read+56, safe_read+77
000000000000735b         mov        rsi, r12                                    ; argument "__buf" for method j_read
000000000000735e         mov        edi, r13d                                   ; argument "__fd" for method j_read
0000000000007361         call       j_read                                      ; read
0000000000007366         test       rax, rax
0000000000007369         mov        rbp, rax
000000000000736c         jns        loc_7390

000000000000736e         call       j___errno_location                          ; __errno_location
0000000000007373         mov        eax, dword [rax]
0000000000007375         cmp        eax, 0x4
0000000000007378         je         loc_7358

000000000000737a         cmp        rbx, 0x7ff00000
0000000000007381         jbe        loc_7390

0000000000007383         cmp        eax, 0x16
0000000000007386         jne        loc_7390

0000000000007388         mov        ebx, 0x7ff00000
000000000000738d         jmp        loc_7358
000000000000738f         align      16

                     loc_7390:
0000000000007390         add        rsp, 0x8                                    ; CODE XREF=safe_read+44, safe_read+65, safe_read+70
0000000000007394         mov        rax, rbp
0000000000007397         pop        rbx
0000000000007398         pop        rbp
0000000000007399         pop        r12
000000000000739b         pop        r13
000000000000739d         ret
                        ; endp
000000000000739e         align      32                                          ; End of unwind block (FDE at 0xb13c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     safe_write:
00000000000073a0         push       r13                                         ; Begin of unwind block (FDE at 0xb174), CODE XREF=full_write+57
00000000000073a2         push       r12
00000000000073a4         mov        r13d, edi
00000000000073a7         push       rbp
00000000000073a8         push       rbx
00000000000073a9         mov        r12, rsi
00000000000073ac         mov        rbx, rdx
00000000000073af         sub        rsp, 0x8
00000000000073b3         nop        dword [rax+rax]

                     loc_73b8:
00000000000073b8         mov        rdx, rbx                                    ; argument "__n" for method j_write, CODE XREF=safe_write+56, safe_write+77
00000000000073bb         mov        rsi, r12                                    ; argument "__buf" for method j_write
00000000000073be         mov        edi, r13d                                   ; argument "__fd" for method j_write
00000000000073c1         call       j_write                                     ; write
00000000000073c6         test       rax, rax
00000000000073c9         mov        rbp, rax
00000000000073cc         jns        loc_73f0

00000000000073ce         call       j___errno_location                          ; __errno_location
00000000000073d3         mov        eax, dword [rax]
00000000000073d5         cmp        eax, 0x4
00000000000073d8         je         loc_73b8

00000000000073da         cmp        eax, 0x16
00000000000073dd         jne        loc_73f0

00000000000073df         cmp        rbx, 0x7ff00000
00000000000073e6         jbe        loc_73f0

00000000000073e8         mov        ebx, 0x7ff00000
00000000000073ed         jmp        loc_73b8
00000000000073ef         align      16

                     loc_73f0:
00000000000073f0         add        rsp, 0x8                                    ; CODE XREF=safe_write+44, safe_write+61, safe_write+70
00000000000073f4         mov        rax, rbp
00000000000073f7         pop        rbx
00000000000073f8         pop        rbp
00000000000073f9         pop        r12
00000000000073fb         pop        r13
00000000000073fd         ret
                        ; endp
00000000000073fe         align      1024                                        ; End of unwind block (FDE at 0xb174)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fd_safer:
0000000000007400         push       r13                                         ; Begin of unwind block (FDE at 0xb1ac), CODE XREF=open_safer+42
0000000000007402         push       r12
0000000000007404         push       rbp
0000000000007405         push       rbx
0000000000007406         mov        ebx, edi
0000000000007408         sub        rsp, 0x8
000000000000740c         cmp        edi, 0x2
000000000000740f         ja         loc_7432

0000000000007411         call       dup_safer                                   ; dup_safer
0000000000007416         mov        r12d, eax
0000000000007419         call       j___errno_location                          ; __errno_location
000000000000741e         mov        r13d, dword [rax]
0000000000007421         mov        rbp, rax
0000000000007424         mov        edi, ebx                                    ; argument "__fd" for method j_close
0000000000007426         call       j_close                                     ; close
000000000000742b         mov        ebx, r12d
000000000000742e         mov        dword [rbp], r13d

                     loc_7432:
0000000000007432         add        rsp, 0x8                                    ; CODE XREF=fd_safer+15
0000000000007436         mov        eax, ebx
0000000000007438         pop        rbx
0000000000007439         pop        rbp
000000000000743a         pop        r12
000000000000743c         pop        r13
000000000000743e         ret
                        ; endp
000000000000743f         align      64                                          ; End of unwind block (FDE at 0xb1ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
0000000000007440         push       r15                                         ; Begin of unwind block (FDE at 0xb1e4), CODE XREF=j_version_etc_arn, version_etc_va+75, version_etc+161
0000000000007442         push       r14
0000000000007444         push       r13
0000000000007446         push       r12
0000000000007448         mov        r12, r9
000000000000744b         push       rbp
000000000000744c         push       rbx
000000000000744d         mov        rbp, rdi
0000000000007450         mov        rbx, r8
0000000000007453         sub        rsp, 0x28
0000000000007457         test       rsi, rsi
000000000000745a         je         loc_7578

0000000000007460         mov        r8, rdx
0000000000007463         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
000000000000746a         mov        r9, rcx
000000000000746d         xor        eax, eax
000000000000746f         mov        rcx, rsi
0000000000007472         mov        esi, 0x1
0000000000007477         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_747c:
000000000000747c         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0xa0fb, CODE XREF=version_etc_arn+337
0000000000007483         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007485         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000748a         call       j_dcgettext                                 ; dcgettext
000000000000748f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000007496         mov        rcx, rax
0000000000007499         mov        r8d, 0x7e3
000000000000749f         mov        esi, 0x1
00000000000074a4         mov        rdi, rbp
00000000000074a7         xor        eax, eax
00000000000074a9         call       j___fprintf_chk                             ; __fprintf_chk
00000000000074ae         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
00000000000074b5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000074b7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000074bc         call       j_dcgettext                                 ; dcgettext
00000000000074c1         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
00000000000074c4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000074c7         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000074cc         cmp        r12, 0x9
00000000000074d0         ja         loc_7810

00000000000074d6         lea        rdx, qword [switch_table_a3e4]              ; switch_table_a3e4
00000000000074dd         movsxd     rax, dword [rdx+r12*4]
00000000000074e1         add        rax, rdx
00000000000074e4         jmp        rax                                         ; switch statement using table at 0xa3e4, with 10 cases, 0x74f0,0x7566,0x75a0,0x75f8,0x7638,0x7680,0x76d0,0x7728,0x7758,0x77c0
00000000000074e6         align      16

                     loc_74f0:
00000000000074f0         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
00000000000074f4         mov        rax, qword [rbx+0x10]
00000000000074f8         lea        rsi, qword [aWrittenBySSSns_a2f8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
00000000000074ff         mov        r8, qword [rbx+8]
0000000000007503         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007508         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000750a         mov        r13, qword [rbx+0x30]
000000000000750e         mov        r12, qword [rbx+0x28]
0000000000007512         mov        qword [rsp+0x58+var_48], r9
0000000000007517         mov        r15, qword [rbx+0x20]
000000000000751b         mov        r14, qword [rbx+0x18]
000000000000751f         mov        qword [rsp+0x58+var_58], rax
0000000000007523         mov        qword [rsp+0x58+var_50], r8
0000000000007528         mov        rbx, qword [rbx]
000000000000752b         call       j_dcgettext                                 ; dcgettext
0000000000007530         sub        rsp, 0x8

                     loc_7534:
0000000000007534         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000007539         mov        rdx, rax
000000000000753c         mov        rcx, rbx
000000000000753f         mov        esi, 0x1
0000000000007544         mov        rdi, rbp
0000000000007547         xor        eax, eax
0000000000007549         push       r9
000000000000754b         push       r13
000000000000754d         push       r12
000000000000754f         push       r15
0000000000007551         push       r14
0000000000007553         mov        r9, qword [rsp+0x88+var_58]
0000000000007558         mov        r8, qword [rsp+0x88+var_50]
000000000000755d         call       j___fprintf_chk                             ; __fprintf_chk
0000000000007562         add        rsp, 0x30

                     loc_7566:
0000000000007566         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
000000000000756a         pop        rbx
000000000000756b         pop        rbp
000000000000756c         pop        r12
000000000000756e         pop        r13
0000000000007570         pop        r14
0000000000007572         pop        r15
0000000000007574         ret
                        ; endp
0000000000007575         align      8

                     loc_7578:
0000000000007578         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
000000000000757b         mov        rcx, rdx
000000000000757e         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000007585         mov        esi, 0x1
000000000000758a         xor        eax, eax
000000000000758c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000007591         jmp        loc_747c
0000000000007596         align      32

                     loc_75a0:
00000000000075a0         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
00000000000075a4         mov        r9, qword [rbx+0x38]
00000000000075a8         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
00000000000075af         mov        rax, qword [rbx+0x10]
00000000000075b3         mov        r8, qword [rbx+8]
00000000000075b7         mov        edx, 0x5
00000000000075bc         mov        r13, qword [rbx+0x30]
00000000000075c0         mov        r12, qword [rbx+0x28]
00000000000075c4         mov        r15, qword [rbx+0x20]
00000000000075c8         mov        r14, qword [rbx+0x18]
00000000000075cc         mov        rbx, qword [rbx]
00000000000075cf         mov        qword [rsp+0x58+var_40], r10
00000000000075d4         mov        qword [rsp+0x58+var_48], r9
00000000000075d9         mov        qword [rsp+0x58+var_58], rax
00000000000075dd         mov        qword [rsp+0x58+var_50], r8

                     loc_75e2:
00000000000075e2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
00000000000075e4         call       j_dcgettext                                 ; dcgettext
00000000000075e9         mov        r10, qword [rsp+0x58+var_40]
00000000000075ee         push       r10
00000000000075f0         jmp        loc_7534
00000000000075f5         align      8

                     loc_75f8:
00000000000075f8         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
00000000000075fb         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000007602         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007607         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007609         call       j_dcgettext                                 ; dcgettext
000000000000760e         add        rsp, 0x28
0000000000007612         mov        rcx, rbx
0000000000007615         mov        rdi, rbp
0000000000007618         pop        rbx
0000000000007619         pop        rbp
000000000000761a         pop        r12
000000000000761c         pop        r13
000000000000761e         pop        r14
0000000000007620         pop        r15
0000000000007622         mov        rdx, rax
0000000000007625         mov        esi, 0x1
000000000000762a         xor        eax, eax
000000000000762c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000007631         align      8

                     loc_7638:
0000000000007638         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
000000000000763c         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000007643         mov        rbx, qword [rbx]
0000000000007646         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000764b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000764d         call       j_dcgettext                                 ; dcgettext
0000000000007652         add        rsp, 0x28
0000000000007656         mov        r8, r12
0000000000007659         mov        rcx, rbx
000000000000765c         mov        rdi, rbp
000000000000765f         mov        rdx, rax
0000000000007662         mov        esi, 0x1
0000000000007667         pop        rbx
0000000000007668         pop        rbp
0000000000007669         pop        r12
000000000000766b         pop        r13
000000000000766d         pop        r14
000000000000766f         pop        r15
0000000000007671         xor        eax, eax
0000000000007673         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000007678         align      128

                     loc_7680:
0000000000007680         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000007684         mov        r12, qword [rbx+8]
0000000000007688         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
000000000000768f         mov        rbx, qword [rbx]
0000000000007692         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007697         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007699         call       j_dcgettext                                 ; dcgettext
000000000000769e         add        rsp, 0x28
00000000000076a2         mov        r9, r13
00000000000076a5         mov        r8, r12
00000000000076a8         mov        rcx, rbx
00000000000076ab         mov        rdi, rbp
00000000000076ae         mov        rdx, rax
00000000000076b1         pop        rbx
00000000000076b2         pop        rbp
00000000000076b3         pop        r12
00000000000076b5         pop        r13
00000000000076b7         pop        r14
00000000000076b9         pop        r15
00000000000076bb         mov        esi, 0x1
00000000000076c0         xor        eax, eax
00000000000076c2         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000076c7         align      16

                     loc_76d0:
00000000000076d0         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
00000000000076d7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000076dc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000076de         mov        r14, qword [rbx+0x18]
00000000000076e2         mov        r13, qword [rbx+0x10]
00000000000076e6         mov        r12, qword [rbx+8]
00000000000076ea         mov        rbx, qword [rbx]
00000000000076ed         call       j_dcgettext                                 ; dcgettext
00000000000076f2         sub        rsp, 0x8

                     loc_76f6:
00000000000076f6         push       r14                                         ; CODE XREF=version_etc_arn+784
00000000000076f8         mov        rdx, rax
00000000000076fb         mov        r9, r13
00000000000076fe         mov        r8, r12
0000000000007701         mov        rcx, rbx
0000000000007704         mov        rdi, rbp
0000000000007707         mov        esi, 0x1
000000000000770c         xor        eax, eax
000000000000770e         call       j___fprintf_chk                             ; __fprintf_chk
0000000000007713         pop        rax
0000000000007714         pop        rdx
0000000000007715         add        rsp, 0x28
0000000000007719         pop        rbx
000000000000771a         pop        rbp
000000000000771b         pop        r12
000000000000771d         pop        r13
000000000000771f         pop        r14
0000000000007721         pop        r15
0000000000007723         ret
                        ; endp
0000000000007724         align      8

                     loc_7728:
0000000000007728         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
000000000000772c         lea        rsi, qword [aWrittenBySSSns_a278]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000007733         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007738         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000773a         mov        r14, qword [rbx+0x18]
000000000000773e         mov        r13, qword [rbx+0x10]
0000000000007742         mov        r12, qword [rbx+8]
0000000000007746         mov        rbx, qword [rbx]
0000000000007749         call       j_dcgettext                                 ; dcgettext
000000000000774e         push       r15
0000000000007750         jmp        loc_76f6
0000000000007752         align      8

                     loc_7758:
0000000000007758         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
000000000000775c         mov        r12, qword [rbx+0x28]
0000000000007760         lea        rsi, qword [aWrittenBySSSns_a2a0]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000007767         mov        r15, qword [rbx+0x20]
000000000000776b         mov        r14, qword [rbx+0x18]
000000000000776f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007774         mov        r13, qword [rbx+0x10]
0000000000007778         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000777a         mov        rbx, qword [rbx]
000000000000777d         mov        qword [rsp+0x58+var_58], r8
0000000000007781         call       j_dcgettext                                 ; dcgettext
0000000000007786         sub        rsp, 0x8
000000000000778a         mov        r9, r13
000000000000778d         push       r12
000000000000778f         push       r15
0000000000007791         push       r14

                     loc_7793:
0000000000007793         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000007798         mov        rcx, rbx
000000000000779b         mov        rdx, rax
000000000000779e         mov        rdi, rbp
00000000000077a1         mov        esi, 0x1
00000000000077a6         xor        eax, eax
00000000000077a8         call       j___fprintf_chk                             ; __fprintf_chk
00000000000077ad         add        rsp, 0x20
00000000000077b1         add        rsp, 0x28
00000000000077b5         pop        rbx
00000000000077b6         pop        rbp
00000000000077b7         pop        r12
00000000000077b9         pop        r13
00000000000077bb         pop        r14
00000000000077bd         pop        r15
00000000000077bf         ret
                        ; endp

                     loc_77c0:
00000000000077c0         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
00000000000077c4         mov        r13, qword [rbx+0x30]
00000000000077c8         lea        rsi, qword [aWrittenBySSSns_a2c8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
00000000000077cf         mov        r12, qword [rbx+0x28]
00000000000077d3         mov        r15, qword [rbx+0x20]
00000000000077d7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000077dc         mov        r14, qword [rbx+0x18]
00000000000077e0         mov        r8, qword [rbx+8]
00000000000077e4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000077e6         mov        qword [rsp+0x58+var_50], r9
00000000000077eb         mov        rbx, qword [rbx]
00000000000077ee         mov        qword [rsp+0x58+var_58], r8
00000000000077f2         call       j_dcgettext                                 ; dcgettext
00000000000077f7         push       r13
00000000000077f9         push       r12
00000000000077fb         push       r15
00000000000077fd         push       r14
00000000000077ff         mov        r9, qword [rsp+0x78+var_50]
0000000000007804         jmp        loc_7793
0000000000007806         align      16

                     loc_7810:
0000000000007810         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000007814         mov        r9, qword [rbx+0x38]
0000000000007818         mov        edx, 0x5
000000000000781d         mov        rax, qword [rbx+0x10]
0000000000007821         mov        r8, qword [rbx+8]
0000000000007825         lea        rsi, qword [aWrittenBySSSns_a360]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
000000000000782c         mov        r13, qword [rbx+0x30]
0000000000007830         mov        r12, qword [rbx+0x28]
0000000000007834         mov        r15, qword [rbx+0x20]
0000000000007838         mov        r14, qword [rbx+0x18]
000000000000783c         mov        qword [rsp+0x58+var_40], r10
0000000000007841         mov        qword [rsp+0x58+var_48], r9
0000000000007846         mov        qword [rsp+0x58+var_58], rax
000000000000784a         mov        qword [rsp+0x58+var_50], r8
000000000000784f         mov        rbx, qword [rbx]
0000000000007852         jmp        loc_75e2
0000000000007857         align      32                                          ; End of unwind block (FDE at 0xb1e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000007860         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0xb2f8)
0000000000007863         cmp        qword [r8], 0x0
0000000000007867         je         j_version_etc_arn                           ; version_etc_arn

0000000000007869         nop        dword [rax]

                     loc_7870:
0000000000007870         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000007874         cmp        qword [r8+r9*8], 0x0
0000000000007879         jne        loc_7870

                     j_version_etc_arn:        // version_etc_arn
000000000000787b         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000007880         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0xb2f8), Begin of unwind block (FDE at 0xb30c)
0000000000007884         mov        r10, r8
0000000000007887         xor        r9d, r9d
000000000000788a         mov        rax, qword [fs:0x28]
0000000000007893         mov        qword [rsp+0x68+var_10], rax
0000000000007898         xor        eax, eax
000000000000789a         mov        r8, rsp
000000000000789d         nop        dword [rax]

                     loc_78a0:
00000000000078a0         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
00000000000078a3         cmp        eax, 0x2f
00000000000078a6         ja         loc_78ea

00000000000078a8         mov        r11d, eax
00000000000078ab         add        r11, qword [r10+0x10]
00000000000078af         add        eax, 0x8
00000000000078b2         mov        dword [r10], eax

                     loc_78b5:
00000000000078b5         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
00000000000078b8         test       rax, rax
00000000000078bb         mov        qword [r8+r9*8], rax
00000000000078bf         je         loc_78cb

00000000000078c1         add        r9, 0x1
00000000000078c5         cmp        r9, 0xa
00000000000078c9         jne        loc_78a0

                     loc_78cb:
00000000000078cb         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
00000000000078d0         mov        rax, qword [rsp+0x68+var_10]
00000000000078d5         xor        rax, qword [fs:0x28]
00000000000078de         jne        loc_78e5

00000000000078e0         add        rsp, 0x68
00000000000078e4         ret
                        ; endp

                     loc_78e5:
00000000000078e5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_78ea:
00000000000078ea         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
00000000000078ee         lea        rax, qword [r11+8]
00000000000078f2         mov        qword [r10+8], rax
00000000000078f6         jmp        loc_78b5
00000000000078f8         align      256                                         ; End of unwind block (FDE at 0xb30c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000007900         push       rbp                                         ; Begin of unwind block (FDE at 0xb328), CODE XREF=main+586
0000000000007901         push       rbx
0000000000007902         mov        r10d, 0x20
0000000000007908         xor        r11d, r11d
000000000000790b         sub        rsp, 0xb8
0000000000007912         mov        rax, qword [fs:0x28]
000000000000791b         mov        qword [rsp+0xc8+var_50], rax
0000000000007920         xor        eax, eax
0000000000007922         lea        rax, qword [rsp+0xc8+arg_0]
000000000000792a         mov        qword [rsp+0xc8+var_28], r8
0000000000007932         lea        rbx, qword [rsp+0xc8+arg_0]
000000000000793a         lea        r8, qword [rsp+0xc8+var_A8]
000000000000793f         mov        qword [rsp+0xc8+var_20], r9
0000000000007947         mov        dword [rsp+0xc8+var_C0], 0x20
000000000000794f         mov        qword [rsp+0xc8+var_B8], rax
0000000000007954         lea        rax, qword [rsp+0xc8+var_48]
000000000000795c         xor        r9d, r9d
000000000000795f         mov        qword [rsp+0xc8+var_B0], rax
0000000000007964         mov        rbp, rax
0000000000007967         nop        word [rax+rax]

                     loc_7970:
0000000000007970         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000007974         ja         loc_79cc

0000000000007976         mov        eax, r10d
0000000000007979         mov        r11d, 0x1
000000000000797f         add        r10d, 0x8
0000000000007983         add        rax, rbp

                     loc_7986:
0000000000007986         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000007989         test       rax, rax
000000000000798c         mov        qword [r8+r9*8], rax
0000000000007990         je         loc_799c

0000000000007992         add        r9, 0x1
0000000000007996         cmp        r9, 0xa
000000000000799a         jne        loc_7970

                     loc_799c:
000000000000799c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
000000000000799f         jne        loc_79c5

                     loc_79a1:
00000000000079a1         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
00000000000079a6         mov        rax, qword [rsp+0xc8+var_50]
00000000000079ab         xor        rax, qword [fs:0x28]
00000000000079b4         jne        loc_79c0

00000000000079b6         add        rsp, 0xb8
00000000000079bd         pop        rbx
00000000000079be         pop        rbp
00000000000079bf         ret
                        ; endp

                     loc_79c0:
00000000000079c0         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_79c5:
00000000000079c5         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
00000000000079ca         jmp        loc_79a1

                     loc_79cc:
00000000000079cc         mov        rax, rbx                                    ; CODE XREF=version_etc+116
00000000000079cf         add        rbx, 0x8
00000000000079d3         jmp        loc_7986
00000000000079d5         align      32                                          ; End of unwind block (FDE at 0xb328)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
00000000000079e0         push       rbx                                         ; Begin of unwind block (FDE at 0xb354)
00000000000079e1         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
00000000000079e8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000079ed         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000079ef         call       j_dcgettext                                 ; dcgettext
00000000000079f4         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
00000000000079fb         mov        rsi, rax
00000000000079fe         mov        edi, 0x1
0000000000007a03         xor        eax, eax
0000000000007a05         call       j___printf_chk                              ; __printf_chk
0000000000007a0a         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000007a11         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007a16         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007a18         call       j_dcgettext                                 ; dcgettext
0000000000007a1d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000007a24         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x8c81
0000000000007a2b         mov        rsi, rax
0000000000007a2e         mov        edi, 0x1
0000000000007a33         xor        eax, eax
0000000000007a35         call       j___printf_chk                              ; __printf_chk
0000000000007a3a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000007a41         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000007a48         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007a4a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007a4f         call       j_dcgettext                                 ; dcgettext
0000000000007a54         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000007a57         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000007a5a         pop        rbx
0000000000007a5b         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000007a60         push       rbx                                         ; End of unwind block (FDE at 0xb354), Begin of unwind block (FDE at 0xb374), CODE XREF=main+2078, main+4389, quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
0000000000007a61         mov        rbx, rdi
0000000000007a64         call       j_malloc                                    ; malloc
0000000000007a69         test       rax, rax
0000000000007a6c         jne        loc_7a73

0000000000007a6e         test       rbx, rbx
0000000000007a71         jne        loc_7a75

                     loc_7a73:
0000000000007a73         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000007a74         ret
                        ; endp

                     loc_7a75:
0000000000007a75         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_7a7a:
0000000000007a7a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0xb374)
                     xnmalloc:
0000000000007a80         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0xb390)
0000000000007a83         mul        rsi
0000000000007a86         mov        rdi, rax
0000000000007a89         seto       al
0000000000007a8c         test       rdi, rdi
0000000000007a8f         js         loc_7a9b

0000000000007a91         movzx      eax, al
0000000000007a94         test       rax, rax
0000000000007a97         jne        loc_7a9b

0000000000007a99         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_7a9b:
0000000000007a9b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
0000000000007a9f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_7aa4:
0000000000007aa4         nop                                                    ; End of unwind block (FDE at 0xb390)
0000000000007aa6         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000007ab0         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0xb3a4)
                        ; endp
0000000000007ab2         align      64                                          ; End of unwind block (FDE at 0xb3a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000007ac0         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0xb3b8), CODE XREF=main+3279, main+4164, next_file_name+251, next_file_name+574, create+918, quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000007ac3         push       rbx
0000000000007ac4         mov        rbx, rsi
0000000000007ac7         jne        loc_7ace

0000000000007ac9         test       rdi, rdi
0000000000007acc         jne        loc_7ae8

                     loc_7ace:
0000000000007ace         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000007ad1         call       j_realloc                                   ; realloc
0000000000007ad6         test       rax, rax
0000000000007ad9         jne        loc_7ae0

0000000000007adb         test       rbx, rbx
0000000000007ade         jne        loc_7af1

                     loc_7ae0:
0000000000007ae0         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000007ae1         ret
                        ; endp
0000000000007ae2         align      8

                     loc_7ae8:
0000000000007ae8         call       j_free                                      ; free, CODE XREF=xrealloc+12
0000000000007aed         xor        eax, eax
0000000000007aef         pop        rbx
0000000000007af0         ret
                        ; endp

                     loc_7af1:
0000000000007af1         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_7af6:
0000000000007af6         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0xb3b8)
                     xnrealloc:
0000000000007b00         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0xb3dc)
0000000000007b03         mul        rdx
0000000000007b06         mov        rsi, rax
0000000000007b09         seto       al
0000000000007b0c         test       rsi, rsi
0000000000007b0f         js         loc_7b1b

0000000000007b11         movzx      eax, al
0000000000007b14         test       rax, rax
0000000000007b17         jne        loc_7b1b

0000000000007b19         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_7b1b:
0000000000007b1b         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
0000000000007b1f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_7b24:
0000000000007b24         nop                                                    ; End of unwind block (FDE at 0xb3dc)
0000000000007b26         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000007b30         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xb3f0)
0000000000007b33         mov        r9, rdx
0000000000007b36         mov        rcx, qword [rsi]
0000000000007b39         je         loc_7b70

0000000000007b3b         xor        edx, edx
0000000000007b3d         movabs     rax, 0x5555555555555554
0000000000007b47         div        r9
0000000000007b4a         cmp        rax, rcx
0000000000007b4d         jbe        loc_7b8b

0000000000007b4f         mov        rax, rcx
0000000000007b52         shr        rax, 0x1
0000000000007b55         lea        rcx, qword [rax+rcx+1]

                     loc_7b5a:
0000000000007b5a         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
0000000000007b5d         imul       rcx, r9
0000000000007b61         mov        rsi, rcx
0000000000007b64         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000007b69         align      16

                     loc_7b70:
0000000000007b70         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000007b73         je         loc_7b98

                     loc_7b75:
0000000000007b75         mov        rax, rcx                                    ; CODE XREF=sub_7b94+28
0000000000007b78         mul        r9
0000000000007b7b         seto       dl
0000000000007b7e         test       rax, rax
0000000000007b81         movzx      edx, dl
0000000000007b84         js         loc_7b8b

0000000000007b86         test       rdx, rdx
0000000000007b89         je         loc_7b5a

                     loc_7b8b:
0000000000007b8b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
0000000000007b8f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_7b94:
0000000000007b94         nop        dword [rax]
                        ; endp

                     loc_7b98:
0000000000007b98         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
0000000000007b9a         mov        eax, 0x80
0000000000007b9f         xor        r8d, r8d
0000000000007ba2         div        r9
0000000000007ba5         test       rax, rax
0000000000007ba8         sete       r8b
0000000000007bac         lea        rcx, qword [r8+rax]
0000000000007bb0         jmp        loc_7b75
0000000000007bb2         align      64                                          ; End of unwind block (FDE at 0xb3f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000007bc0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xb408)
0000000000007bc3         mov        rax, qword [rsi]
0000000000007bc6         je         loc_7bf0

0000000000007bc8         movabs     rdx, 0x5555555555555553
0000000000007bd2         cmp        rax, rdx
0000000000007bd5         ja         loc_7c01

0000000000007bd7         mov        rdx, rax
0000000000007bda         shr        rdx, 0x1
0000000000007bdd         lea        rax, qword [rdx+rax+1]

                     loc_7be2:
0000000000007be2         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000007be5         mov        rsi, rax
0000000000007be8         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000007bed         align      16

                     loc_7bf0:
0000000000007bf0         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000007bf3         mov        edx, 0x80
0000000000007bf8         cmove      rax, rdx
0000000000007bfc         test       rax, rax
0000000000007bff         jns        loc_7be2

                     loc_7c01:
0000000000007c01         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000007c05         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_7c0a:
0000000000007c0a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0xb408)
                     xzalloc:
0000000000007c10         push       rbx                                         ; Begin of unwind block (FDE at 0xb420)
0000000000007c11         mov        rbx, rdi
0000000000007c14         call       xmalloc                                     ; xmalloc
0000000000007c19         mov        rdx, rbx                                    ; argument "__n" for method j_memset
0000000000007c1c         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000007c1e         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000007c21         pop        rbx
0000000000007c22         jmp        j_memset                                    ; memset
                        ; endp
0000000000007c27         align      16                                          ; End of unwind block (FDE at 0xb420)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000007c30         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0xb43c), CODE XREF=next_file_name+393
0000000000007c33         sub        rsp, 0x8
0000000000007c37         mul        rsi
0000000000007c3a         seto       dl
0000000000007c3d         test       rax, rax
0000000000007c40         js         loc_7c59

0000000000007c42         movzx      edx, dl
0000000000007c45         test       rdx, rdx
0000000000007c48         jne        loc_7c59

0000000000007c4a         call       j_calloc                                    ; calloc
0000000000007c4f         test       rax, rax
0000000000007c52         je         loc_7c59

0000000000007c54         add        rsp, 0x8
0000000000007c58         ret
                        ; endp

                     loc_7c59:
0000000000007c59         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_7c5e:
0000000000007c5e         nop                                                    ; End of unwind block (FDE at 0xb43c)
                        ; endp

                     xmemdup:
0000000000007c60         push       rbp                                         ; Begin of unwind block (FDE at 0xb458), CODE XREF=clone_quoting_options+40, xstrdup+17
0000000000007c61         push       rbx
0000000000007c62         mov        rbp, rdi
0000000000007c65         mov        rdi, rsi
0000000000007c68         mov        rbx, rsi
0000000000007c6b         sub        rsp, 0x8
0000000000007c6f         call       xmalloc                                     ; xmalloc
0000000000007c74         add        rsp, 0x8
0000000000007c78         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
0000000000007c7b         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
0000000000007c7e         pop        rbx
0000000000007c7f         pop        rbp
0000000000007c80         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000007c83         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000007c88         align      16                                          ; End of unwind block (FDE at 0xb458)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000007c90         push       rbx                                         ; Begin of unwind block (FDE at 0xb480), CODE XREF=main+4422
0000000000007c91         mov        rbx, rdi
0000000000007c94         call       j_strlen                                    ; strlen
0000000000007c99         mov        rdi, rbx
0000000000007c9c         lea        rsi, qword [rax+1]
0000000000007ca0         pop        rbx
0000000000007ca1         jmp        xmemdup                                     ; xmemdup
0000000000007ca3         align      16                                          ; End of unwind block (FDE at 0xb480)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000007cb0         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0xb49c), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=main+6486, next_file_name+674, create+986, quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
0000000000007cb7         sub        rsp, 0x8
0000000000007cbb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007cc0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007cc2         call       j_dcgettext                                 ; dcgettext
0000000000007cc7         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
0000000000007ccd         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8dee
0000000000007cd4         mov        rcx, rax
0000000000007cd7         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000007cd9         xor        eax, eax
0000000000007cdb         call       j_error                                     ; error
0000000000007ce0         call       j_abort                                     ; abort
                        ; endp
0000000000007ce5         align      16                                          ; End of unwind block (FDE at 0xb49c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72


                     xnumtoumax:
0000000000007cf0         push       r15                                         ; Begin of unwind block (FDE at 0xb4b4), CODE XREF=xdectoumax+23
0000000000007cf2         push       r14
0000000000007cf4         mov        r15, rcx
0000000000007cf7         push       r13
0000000000007cf9         push       r12
0000000000007cfb         mov        r14, rdx
0000000000007cfe         push       rbp
0000000000007cff         push       rbx
0000000000007d00         mov        edx, esi
0000000000007d02         xor        esi, esi
0000000000007d04         mov        r12, rdi
0000000000007d07         mov        r13, r9
0000000000007d0a         sub        rsp, 0x18
0000000000007d0e         mov        rcx, rsp
0000000000007d11         mov        ebx, dword [rsp+0x48+arg_0]
0000000000007d15         mov        rax, qword [fs:0x28]
0000000000007d1e         mov        qword [rsp+0x48+var_40], rax
0000000000007d23         xor        eax, eax
0000000000007d25         call       xstrtoumax                                  ; xstrtoumax
0000000000007d2a         test       eax, eax
0000000000007d2c         jne        loc_7dc0

0000000000007d32         mov        rbp, qword [rsp+0x48+var_48]
0000000000007d36         cmp        rbp, r14
0000000000007d39         jb         loc_7d40

0000000000007d3b         cmp        rbp, r15
0000000000007d3e         jbe        loc_7d94

                     loc_7d40:
0000000000007d40         call       j___errno_location                          ; __errno_location, CODE XREF=xnumtoumax+73
0000000000007d45         cmp        rbp, 0x40000000
0000000000007d4c         mov        r14, rax
0000000000007d4f         sbb        eax, eax
0000000000007d51         and        eax, 0xffffffd7
0000000000007d54         add        eax, 0x4b
0000000000007d57         mov        dword [r14], eax

                     loc_7d5a:
0000000000007d5a         mov        rdi, r12                                    ; CODE XREF=xnumtoumax+226, xnumtoumax+234, xnumtoumax+246
0000000000007d5d         call       quote                                       ; quote
0000000000007d62         mov        esi, dword [r14]
0000000000007d65         mov        r8, rax
0000000000007d68         mov        eax, 0x0
0000000000007d6d         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000007d74         mov        rcx, r13
0000000000007d77         cmp        esi, 0x16
0000000000007d7a         cmove      esi, eax                                    ; argument "__errnum" for method j_error
0000000000007d7d         test       ebx, ebx
0000000000007d7f         mov        eax, 0x1
0000000000007d84         cmove      ebx, eax
0000000000007d87         xor        eax, eax
0000000000007d89         mov        edi, ebx                                    ; argument "__status" for method j_error
0000000000007d8b         call       j_error                                     ; error
0000000000007d90         mov        rbp, qword [rsp+0x48+var_48]

                     loc_7d94:
0000000000007d94         mov        rdx, qword [rsp+0x48+var_40]                ; CODE XREF=xnumtoumax+78
0000000000007d99         xor        rdx, qword [fs:0x28]
0000000000007da2         mov        rax, rbp
0000000000007da5         jne        loc_7deb

0000000000007da7         add        rsp, 0x18
0000000000007dab         pop        rbx
0000000000007dac         pop        rbp
0000000000007dad         pop        r12
0000000000007daf         pop        r13
0000000000007db1         pop        r14
0000000000007db3         pop        r15
0000000000007db5         ret
                        ; endp
0000000000007db6         align      64

                     loc_7dc0:
0000000000007dc0         mov        ebp, eax                                    ; CODE XREF=xnumtoumax+60
0000000000007dc2         call       j___errno_location                          ; __errno_location
0000000000007dc7         cmp        ebp, 0x1
0000000000007dca         mov        r14, rax
0000000000007dcd         je         loc_7de0

0000000000007dcf         cmp        ebp, 0x3
0000000000007dd2         jne        loc_7d5a

0000000000007dd4         mov        dword [rax], 0x0
0000000000007dda         jmp        loc_7d5a
0000000000007ddf         align      32

                     loc_7de0:
0000000000007de0         mov        dword [rax], 0x4b                           ; CODE XREF=xnumtoumax+221
0000000000007de6         jmp        loc_7d5a

                     loc_7deb:
0000000000007deb         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xnumtoumax+181
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xdectoumax:
0000000000007df0         sub        rsp, 0x10                                   ; End of unwind block (FDE at 0xb4b4), Begin of unwind block (FDE at 0xb500), CODE XREF=main+422, main+851, main+1051, main+1128, main+1230, main+1299, main+1372, main+2284
0000000000007df4         push       r9
0000000000007df6         mov        r9, r8
0000000000007df9         mov        r8, rcx
0000000000007dfc         mov        rcx, rdx
0000000000007dff         mov        rdx, rsi
0000000000007e02         mov        esi, 0xa
0000000000007e07         call       xnumtoumax                                  ; xnumtoumax
0000000000007e0c         add        rsp, 0x18
0000000000007e10         ret
                        ; endp
0000000000007e11         align      32                                          ; End of unwind block (FDE at 0xb500)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     xstrtoumax:
0000000000007e20         push       r15                                         ; Begin of unwind block (FDE at 0xb51c), CODE XREF=main+2521, xnumtoumax+53
0000000000007e22         push       r14
0000000000007e24         push       r13
0000000000007e26         push       r12
0000000000007e28         push       rbp
0000000000007e29         push       rbx
0000000000007e2a         sub        rsp, 0x28
0000000000007e2e         mov        rax, qword [fs:0x28]
0000000000007e37         mov        qword [rsp+0x58+var_40], rax
0000000000007e3c         xor        eax, eax
0000000000007e3e         cmp        edx, 0x24
0000000000007e41         ja         loc_81a5

0000000000007e47         lea        rax, qword [rsp+0x58+var_48]
0000000000007e4c         mov        r15, rsi
0000000000007e4f         test       rsi, rsi
0000000000007e52         mov        rbp, rdi
0000000000007e55         mov        dword [rsp+0x58+var_50], edx
0000000000007e59         mov        r14, rcx
0000000000007e5c         mov        r13, r8
0000000000007e5f         cmove      r15, rax
0000000000007e63         call       j___errno_location                          ; __errno_location
0000000000007e68         mov        dword [rax], 0x0
0000000000007e6e         mov        r12, rax
0000000000007e71         movzx      ebx, byte [rbp]
0000000000007e75         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000007e7a         mov        edx, dword [rsp+0x58+var_50]
0000000000007e7e         mov        rsi, qword [rax]
0000000000007e81         mov        rax, rbp
0000000000007e84         jmp        loc_7e97
0000000000007e86         align      16

                     loc_7e90:
0000000000007e90         add        rax, 0x1                                    ; CODE XREF=xstrtoumax+127
0000000000007e94         movzx      ebx, byte [rax]

                     loc_7e97:
0000000000007e97         movzx      ecx, bl                                     ; CODE XREF=xstrtoumax+100
0000000000007e9a         test       byte [rsi+rcx*2+1], 0x20
0000000000007e9f         jne        loc_7e90

0000000000007ea1         cmp        bl, 0x2d
0000000000007ea4         je         loc_7ef8

0000000000007ea6         xor        ecx, ecx
0000000000007ea8         mov        rsi, r15
0000000000007eab         mov        rdi, rbp
0000000000007eae         call       j___strtoul_internal                        ; __strtoul_internal
0000000000007eb3         mov        rcx, qword [r15]
0000000000007eb6         mov        rbx, rax
0000000000007eb9         cmp        rcx, rbp
0000000000007ebc         je         loc_7ee8

0000000000007ebe         mov        eax, dword [r12]
0000000000007ec2         test       eax, eax
0000000000007ec4         je         loc_7f28

0000000000007ec6         cmp        eax, 0x22
0000000000007ec9         mov        ebp, 0x1
0000000000007ece         jne        loc_7ef8

                     loc_7ed0:
0000000000007ed0         test       r13, r13                                    ; CODE XREF=xstrtoumax+266
0000000000007ed3         je         loc_7ede

0000000000007ed5         movzx      r12d, byte [rcx]
0000000000007ed9         test       r12b, r12b
0000000000007edc         jne        loc_7f57

                     loc_7ede:
0000000000007ede         mov        qword [r14], rbx                            ; CODE XREF=xstrtoumax+179
0000000000007ee1         jmp        loc_7efd
0000000000007ee3         align      8

                     loc_7ee8:
0000000000007ee8         test       r13, r13                                    ; CODE XREF=xstrtoumax+156
0000000000007eeb         mov        qword [rsp+0x58+var_50], rcx
0000000000007ef0         jne        loc_7f30

0000000000007ef2         nop        word [rax+rax]

                     loc_7ef8:
0000000000007ef8         mov        ebp, 0x4                                    ; CODE XREF=xstrtoumax+132, xstrtoumax+174, xstrtoumax+280, xstrtoumax+309

                     loc_7efd:
0000000000007efd         mov        rdi, qword [rsp+0x58+var_40]                ; CODE XREF=xstrtoumax+193, xstrtoumax+535, xstrtoumax+546
0000000000007f02         xor        rdi, qword [fs:0x28]
0000000000007f0b         mov        eax, ebp
0000000000007f0d         jne        loc_81a0

0000000000007f13         add        rsp, 0x28
0000000000007f17         pop        rbx
0000000000007f18         pop        rbp
0000000000007f19         pop        r12
0000000000007f1b         pop        r13
0000000000007f1d         pop        r14
0000000000007f1f         pop        r15
0000000000007f21         ret
                        ; endp
0000000000007f22         align      8

                     loc_7f28:
0000000000007f28         xor        ebp, ebp                                    ; CODE XREF=xstrtoumax+164
0000000000007f2a         jmp        loc_7ed0
0000000000007f2c         align      16

                     loc_7f30:
0000000000007f30         movzx      r12d, byte [rbp]                            ; CODE XREF=xstrtoumax+208
0000000000007f35         test       r12b, r12b
0000000000007f38         je         loc_7ef8

0000000000007f3a         movsx      esi, r12b                                   ; argument "__c" for method j_strchr
0000000000007f3e         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000007f41         xor        ebp, ebp
0000000000007f43         call       j_strchr                                    ; strchr
0000000000007f48         test       rax, rax
0000000000007f4b         mov        ebx, 0x1
0000000000007f50         mov        rcx, qword [rsp+0x58+var_50]
0000000000007f55         je         loc_7ef8

                     loc_7f57:
0000000000007f57         movsx      esi, r12b                                   ; argument "__c" for method j_strchr, CODE XREF=xstrtoumax+188
0000000000007f5b         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000007f5e         mov        qword [rsp+0x58+var_50], rcx
0000000000007f63         call       j_strchr                                    ; strchr
0000000000007f68         test       rax, rax
0000000000007f6b         mov        rcx, qword [rsp+0x58+var_50]
0000000000007f70         je         loc_803c

0000000000007f76         lea        eax, dword [r12-0x45]
0000000000007f7b         cmp        al, 0x2f
0000000000007f7d         ja         loc_7fd0

0000000000007f7f         movabs     rdx, 0x814400308945
0000000000007f89         bt         rdx, rax
0000000000007f8d         jae        loc_7fd0

0000000000007f8f         mov        esi, 0x30                                   ; argument "__c" for method j_strchr
0000000000007f94         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000007f97         mov        qword [rsp+0x58+var_50], rcx
0000000000007f9c         call       j_strchr                                    ; strchr
0000000000007fa1         test       rax, rax
0000000000007fa4         mov        rcx, qword [rsp+0x58+var_50]
0000000000007fa9         je         loc_7fd0

0000000000007fab         movzx      eax, byte [rcx+1]
0000000000007faf         cmp        al, 0x44
0000000000007fb1         je         loc_7fbf

0000000000007fb3         cmp        al, 0x69
0000000000007fb5         je         loc_8188

0000000000007fbb         cmp        al, 0x42
0000000000007fbd         jne        loc_7fd0

                     loc_7fbf:
0000000000007fbf         mov        edi, 0x2                                    ; CODE XREF=xstrtoumax+401
0000000000007fc4         mov        esi, 0x3e8
0000000000007fc9         jmp        loc_7fda
0000000000007fcb         align      16

                     loc_7fd0:
0000000000007fd0         mov        edi, 0x1                                    ; CODE XREF=xstrtoumax+349, xstrtoumax+365, xstrtoumax+393, xstrtoumax+413
0000000000007fd5         mov        esi, 0x400

                     loc_7fda:
0000000000007fda         sub        r12d, 0x42                                  ; CODE XREF=xstrtoumax+425, xstrtoumax+891
0000000000007fde         cmp        r12b, 0x35
0000000000007fe2         ja         loc_803c

0000000000007fe4         lea        rdx, qword [switch_table_a4a8]              ; switch_table_a4a8
0000000000007feb         movzx      r12d, r12b
0000000000007fef         movsxd     rax, dword [rdx+r12*4]
0000000000007ff3         add        rax, rdx
0000000000007ff6         jmp        rax                                         ; switch statement using table at 0xa4a8, with 54 cases, 0x7ff8,0x8020,0x803c,0x8047,0x805d,0x8074,0x809a,0x80bf,0x80df,0x8100,0x8123,0x8146,0x815c

                     loc_7ff8:
0000000000007ff8         mov        rax, rbx                                    ; case 43, CODE XREF=xstrtoumax+470
0000000000007ffb         mul        rsi
0000000000007ffe         jo         loc_81f1

0000000000008004         xor        r8d, r8d

                     loc_8007:
0000000000008007         mul        rsi                                         ; CODE XREF=xstrtoumax+846, xstrtoumax+862, xstrtoumax+987
000000000000800a         jo         loc_81e2

0000000000008010         mov        rbx, rax

                     loc_8013:
0000000000008013         or         ebp, r8d                                    ; CODE XREF=xstrtoumax+972
0000000000008016         nop        word [cs:rax+rax]

                     loc_8020:
0000000000008020         movsxd     rdi, edi                                    ; case 33, CODE XREF=xstrtoumax+470, xstrtoumax+571, xstrtoumax+594, xstrtoumax+632, xstrtoumax+712, xstrtoumax+727, xstrtoumax+823
0000000000008023         mov        eax, ebp
0000000000008025         add        rcx, rdi
0000000000008028         or         eax, 0x2
000000000000802b         mov        qword [r15], rcx
000000000000802e         cmp        byte [rcx], 0x0
0000000000008031         mov        qword [r14], rbx
0000000000008034         cmovne     ebp, eax
0000000000008037         jmp        loc_7efd

                     loc_803c:
000000000000803c         mov        qword [r14], rbx                            ; case 52, CODE XREF=xstrtoumax+336, xstrtoumax+450, xstrtoumax+470
000000000000803f         or         ebp, 0x2
0000000000008042         jmp        loc_7efd

                     loc_8047:
0000000000008047         mov        edx, 0x2                                    ; case 53, CODE XREF=xstrtoumax+470
000000000000804c         mov        rax, rdx
000000000000804f         mul        rbx
0000000000008052         jo         loc_80ee

0000000000008058         add        rbx, rbx
000000000000805b         jmp        loc_8020

                     loc_805d:
000000000000805d         mov        edx, 0x200                                  ; case 32, CODE XREF=xstrtoumax+470
0000000000008062         mov        rax, rdx
0000000000008065         mul        rbx
0000000000008068         jo         loc_80ee

000000000000806e         shl        rbx, 0x9
0000000000008072         jmp        loc_8020

                     loc_8074:
0000000000008074         mov        r8d, 0x7                                    ; case 24, CODE XREF=xstrtoumax+470
000000000000807a         xor        r9d, r9d
000000000000807d         nop        dword [rax]

                     loc_8080:
0000000000008080         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+627
0000000000008083         mul        rsi
0000000000008086         mov        rbx, rax
0000000000008089         jo         loc_821e

                     loc_808f:
000000000000808f         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1032
0000000000008093         jne        loc_8080

                     loc_8095:
0000000000008095         or         ebp, r9d                                    ; CODE XREF=xstrtoumax+669, xstrtoumax+701, xstrtoumax+766, xstrtoumax+801
0000000000008098         jmp        loc_8020

                     loc_809a:
000000000000809a         mov        r8d, 0x8                                    ; case 23, CODE XREF=xstrtoumax+470
00000000000080a0         xor        r9d, r9d
00000000000080a3         nop        dword [rax+rax]

                     loc_80a8:
00000000000080a8         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+667
00000000000080ab         mul        rsi
00000000000080ae         mov        rbx, rax
00000000000080b1         jo         loc_8200

                     loc_80b7:
00000000000080b7         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1002
00000000000080bb         jne        loc_80a8

00000000000080bd         jmp        loc_8095

                     loc_80bf:
00000000000080bf         mov        r8d, 0x4                                    ; case 50, CODE XREF=xstrtoumax+470
00000000000080c5         xor        r9d, r9d

                     loc_80c8:
00000000000080c8         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+699
00000000000080cb         mul        rsi
00000000000080ce         mov        rbx, rax
00000000000080d1         jo         loc_81d3

                     loc_80d7:
00000000000080d7         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+957
00000000000080db         jne        loc_80c8

00000000000080dd         jmp        loc_8095

                     loc_80df:
00000000000080df         mov        rax, rbx                                    ; case 41, CODE XREF=xstrtoumax+470
00000000000080e2         mul        rsi
00000000000080e5         mov        rbx, rax
00000000000080e8         jno        loc_8020

                     loc_80ee:
00000000000080ee         mov        ebp, 0x1                                    ; CODE XREF=xstrtoumax+562, xstrtoumax+584, xstrtoumax+817
00000000000080f3         or         rbx, 0xffffffffffffffff
00000000000080f7         jmp        loc_8020
00000000000080fc         align      256

                     loc_8100:
0000000000008100         mov        r8d, 0x5                                    ; case 14, CODE XREF=xstrtoumax+470
0000000000008106         xor        r9d, r9d

                     loc_8109:
0000000000008109         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+764
000000000000810c         mul        rsi
000000000000810f         mov        rbx, rax
0000000000008112         jo         loc_820f

                     loc_8118:
0000000000008118         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1017
000000000000811c         jne        loc_8109

000000000000811e         jmp        loc_8095

                     loc_8123:
0000000000008123         mov        r8d, 0x6                                    ; case 3, CODE XREF=xstrtoumax+470
0000000000008129         xor        r9d, r9d

                     loc_812c:
000000000000812c         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+799
000000000000812f         mul        rsi
0000000000008132         mov        rbx, rax
0000000000008135         jo         loc_81c4

                     loc_813b:
000000000000813b         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+942
000000000000813f         jne        loc_812c

0000000000008141         jmp        loc_8095

                     loc_8146:
0000000000008146         mov        edx, 0x400                                  ; case 0, CODE XREF=xstrtoumax+470
000000000000814b         mov        rax, rdx
000000000000814e         mul        rbx
0000000000008151         jo         loc_80ee

0000000000008153         shl        rbx, 0xa
0000000000008157         jmp        loc_8020

                     loc_815c:
000000000000815c         mov        rax, rbx                                    ; case 37, CODE XREF=xstrtoumax+470
000000000000815f         mul        rsi
0000000000008162         jo         loc_822d

0000000000008168         xor        r8d, r8d

                     loc_816b:
000000000000816b         mul        rsi                                         ; CODE XREF=xstrtoumax+1047
000000000000816e         jno        loc_8007

0000000000008174         mov        r8d, 0x1
000000000000817a         or         rax, 0xffffffffffffffff
000000000000817e         jmp        loc_8007
0000000000008183         align      8

                     loc_8188:
0000000000008188         xor        edi, edi                                    ; CODE XREF=xstrtoumax+405
000000000000818a         cmp        byte [rcx+2], 0x42
000000000000818e         mov        esi, 0x400
0000000000008193         sete       dil
0000000000008197         lea        edi, dword [rdi+rdi+1]
000000000000819b         jmp        loc_7fda

                     loc_81a0:
00000000000081a0         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xstrtoumax+237
                        ; endp

                     loc_81a5:
00000000000081a5         lea        rcx, qword [__PRETTY_FUNCTION__.4162]       ; argument "__function" for method j___assert_fail, "xstrtoumax", CODE XREF=xstrtoumax+33
00000000000081ac         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/xstrtol.c"
00000000000081b3         lea        rdi, qword [a0StrtolbaseStr]                ; argument "__assertion" for method j___assert_fail, "0 <= strtol_base && strtol_base <= 36"
00000000000081ba         mov        edx, 0x54                                   ; argument "__line" for method j___assert_fail
00000000000081bf         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_81c4:
00000000000081c4         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+789
00000000000081ca         or         rbx, 0xffffffffffffffff
00000000000081ce         jmp        loc_813b

                     loc_81d3:
00000000000081d3         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+689
00000000000081d9         or         rbx, 0xffffffffffffffff
00000000000081dd         jmp        loc_80d7

                     loc_81e2:
00000000000081e2         mov        r8d, 0x1                                    ; CODE XREF=xstrtoumax+490
00000000000081e8         or         rbx, 0xffffffffffffffff
00000000000081ec         jmp        loc_8013

                     loc_81f1:
00000000000081f1         or         rax, 0xffffffffffffffff                     ; CODE XREF=xstrtoumax+478
00000000000081f5         mov        r8d, 0x1
00000000000081fb         jmp        loc_8007

                     loc_8200:
0000000000008200         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+657
0000000000008206         or         rbx, 0xffffffffffffffff
000000000000820a         jmp        loc_80b7

                     loc_820f:
000000000000820f         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+754
0000000000008215         or         rbx, 0xffffffffffffffff
0000000000008219         jmp        loc_8118

                     loc_821e:
000000000000821e         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+617
0000000000008224         or         rbx, 0xffffffffffffffff
0000000000008228         jmp        loc_808f

                     loc_822d:
000000000000822d         mov        r8d, 0x1                                    ; CODE XREF=xstrtoumax+834
0000000000008233         or         rax, 0xffffffffffffffff
0000000000008237         jmp        loc_816b
000000000000823c         align      64                                          ; End of unwind block (FDE at 0xb51c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000008240         push       r12                                         ; Begin of unwind block (FDE at 0xb56c), CODE XREF=main+5076, ofile_open+185, closeout+43, close_stream+21
0000000000008242         push       rbp
0000000000008243         push       rbx
0000000000008244         mov        rbx, rdi
0000000000008247         call       j_fileno                                    ; fileno
000000000000824c         test       eax, eax
000000000000824e         mov        rdi, rbx
0000000000008251         js         loc_82a7

0000000000008253         call       j___freading                                ; __freading
0000000000008258         test       eax, eax
000000000000825a         jne        loc_8288

                     loc_825c:
000000000000825c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
000000000000825f         call       rpl_fflush                                  ; rpl_fflush
0000000000008264         test       eax, eax
0000000000008266         je         loc_82a4

0000000000008268         call       j___errno_location                          ; __errno_location
000000000000826d         mov        r12d, dword [rax]
0000000000008270         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000008273         mov        rbp, rax
0000000000008276         call       j_fclose                                    ; fclose
000000000000827b         test       r12d, r12d
000000000000827e         jne        loc_82b0

                     loc_8280:
0000000000008280         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000008281         pop        rbp
0000000000008282         pop        r12
0000000000008284         ret
                        ; endp
0000000000008285         align      8

                     loc_8288:
0000000000008288         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
000000000000828b         call       j_fileno                                    ; fileno
0000000000008290         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000008292         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000008297         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000008299         call       j_lseek                                     ; lseek
000000000000829e         cmp        rax, 0xffffffffffffffff
00000000000082a2         jne        loc_825c

                     loc_82a4:
00000000000082a4         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_82a7:
00000000000082a7         pop        rbx                                         ; CODE XREF=rpl_fclose+17
00000000000082a8         pop        rbp
00000000000082a9         pop        r12
00000000000082ab         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_82b0:
00000000000082b0         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
00000000000082b4         mov        eax, 0xffffffff
00000000000082b9         jmp        loc_8280
00000000000082bb         align      64                                          ; End of unwind block (FDE at 0xb56c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
00000000000082c0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xb5a4), CODE XREF=rpl_fclose+31
00000000000082c3         push       rbx
00000000000082c4         mov        rbx, rdi
00000000000082c7         je         loc_82da

00000000000082c9         call       j___freading                                ; __freading
00000000000082ce         test       eax, eax
00000000000082d0         je         loc_82da

00000000000082d2         test       dword [rbx], 0x100
00000000000082d8         jne        loc_82e8

                     loc_82da:
00000000000082da         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
00000000000082dd         pop        rbx
00000000000082de         jmp        j_fflush                                    ; fflush
                        ; endp
00000000000082e3         align      8

                     loc_82e8:
00000000000082e8         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
00000000000082eb         mov        edx, 0x1
00000000000082f0         xor        esi, esi
00000000000082f2         call       rpl_fseeko                                  ; rpl_fseeko
00000000000082f7         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
00000000000082fa         pop        rbx
00000000000082fb         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000008300         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0xb5a4), Begin of unwind block (FDE at 0xb5c4), CODE XREF=rpl_fflush+50
0000000000008304         cmp        qword [rdi+0x10], rax
0000000000008308         je         loc_8310

                     j_j_fseeko:        // fseeko
000000000000830a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
000000000000830f         align      16

                     loc_8310:
0000000000008310         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000008314         cmp        qword [rdi+0x28], rax
0000000000008318         jne        j_j_fseeko                                  ; fseeko

000000000000831a         cmp        qword [rdi+0x48], 0x0
000000000000831f         jne        j_j_fseeko                                  ; fseeko

0000000000008321         push       r12
0000000000008323         push       rbp
0000000000008324         mov        r12d, edx
0000000000008327         push       rbx
0000000000008328         mov        rbp, rsi
000000000000832b         mov        rbx, rdi
000000000000832e         call       j_fileno                                    ; fileno
0000000000008333         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000008336         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000008339         mov        edi, eax                                    ; argument "__fd" for method j_lseek
000000000000833b         call       j_lseek                                     ; lseek
0000000000008340         cmp        rax, 0xffffffffffffffff
0000000000008344         je         loc_8352

0000000000008346         and        dword [rbx], 0xffffffef
0000000000008349         mov        qword [rbx+0x90], rax
0000000000008350         xor        eax, eax

                     loc_8352:
0000000000008352         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000008353         pop        rbp
0000000000008354         pop        r12
0000000000008356         ret
                        ; endp
0000000000008357         align      32                                          ; End of unwind block (FDE at 0xb5c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000008360         push       r13                                         ; Begin of unwind block (FDE at 0xb5f4), CODE XREF=sub_5ee0+534
0000000000008362         push       r12
0000000000008364         mov        r13, rsi
0000000000008367         push       rbp
0000000000008368         push       rbx
0000000000008369         mov        rbx, rdi
000000000000836c         mov        r12, rdx
000000000000836f         sub        rsp, 0x18
0000000000008373         mov        rax, qword [fs:0x28]
000000000000837c         mov        qword [rsp+0x38+var_30], rax
0000000000008381         xor        eax, eax
0000000000008383         lea        rax, qword [rsp+0x38+var_34]
0000000000008388         test       rdi, rdi
000000000000838b         cmove      rbx, rax
000000000000838f         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000008392         call       j_mbrtowc                                   ; mbrtowc
0000000000008397         cmp        rax, 0xfffffffffffffffd
000000000000839b         mov        rbp, rax
000000000000839e         jbe        loc_83c0

00000000000083a0         test       r12, r12
00000000000083a3         je         loc_83c0

00000000000083a5         xor        edi, edi
00000000000083a7         call       hard_locale                                 ; hard_locale
00000000000083ac         test       al, al
00000000000083ae         jne        loc_83c0

00000000000083b0         movzx      eax, byte [r13]
00000000000083b5         mov        ebp, 0x1
00000000000083ba         mov        dword [rbx], eax
00000000000083bc         nop        dword [rax]

                     loc_83c0:
00000000000083c0         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
00000000000083c5         xor        rdx, qword [fs:0x28]
00000000000083ce         mov        rax, rbp
00000000000083d1         jne        loc_83de

00000000000083d3         add        rsp, 0x18
00000000000083d7         pop        rbx
00000000000083d8         pop        rbp
00000000000083d9         pop        r12
00000000000083db         pop        r13
00000000000083dd         ret
                        ; endp

                     loc_83de:
00000000000083de         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
00000000000083e3         align      16                                          ; End of unwind block (FDE at 0xb5f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56


                     str2sig:
00000000000083f0         push       r13                                         ; Begin of unwind block (FDE at 0xb634)
00000000000083f2         push       r12
00000000000083f4         mov        r13, rsi
00000000000083f7         push       rbp
00000000000083f8         push       rbx
00000000000083f9         xor        ebx, ebx
00000000000083fb         mov        r12, rdi
00000000000083fe         lea        rbp, qword [numname_table+4]                ; 0x20c0a4
0000000000008405         sub        rsp, 0x18
0000000000008409         mov        rax, qword [fs:0x28]
0000000000008412         mov        qword [rsp+0x38+var_30], rax
0000000000008417         xor        eax, eax
0000000000008419         movsx      eax, byte [rdi]
000000000000841c         sub        eax, 0x30
000000000000841f         cmp        eax, 0x9
0000000000008422         ja         loc_843c

0000000000008424         jmp        loc_8480
0000000000008426         align      16

                     loc_8430:
0000000000008430         add        ebx, 0x1                                    ; CODE XREF=str2sig+89
0000000000008433         add        rbp, 0xc
0000000000008437         cmp        ebx, 0x23
000000000000843a         je         loc_84b0

                     loc_843c:
000000000000843c         mov        rsi, r12                                    ; argument "__s2" for method j_strcmp, CODE XREF=str2sig+50
000000000000843f         mov        rdi, rbp                                    ; argument "__s1" for method j_strcmp
0000000000008442         call       j_strcmp                                    ; strcmp
0000000000008447         test       eax, eax
0000000000008449         jne        loc_8430

000000000000844b         lea        rdx, qword [rbx+rbx*2]
000000000000844f         lea        rax, qword [numname_table]                  ; numname_table
0000000000008456         mov        eax, dword [rax+rdx*4]

                     loc_8459:
0000000000008459         mov        dword [r13], eax                            ; CODE XREF=str2sig+170, str2sig+318, str2sig+379
000000000000845d         sar        eax, 0x1f

                     loc_8460:
0000000000008460         mov        rcx, qword [rsp+0x38+var_30]                ; CODE XREF=str2sig+185
0000000000008465         xor        rcx, qword [fs:0x28]
000000000000846e         jne        loc_8570

0000000000008474         add        rsp, 0x18
0000000000008478         pop        rbx
0000000000008479         pop        rbp
000000000000847a         pop        r12
000000000000847c         pop        r13
000000000000847e         ret
                        ; endp
000000000000847f         align      128

                     loc_8480:
0000000000008480         mov        edx, 0xa                                    ; argument "__base" for method j_strtol, CODE XREF=str2sig+52
0000000000008485         mov        rsi, rsp                                    ; argument "__endptr" for method j_strtol
0000000000008488         call       j_strtol                                    ; strtol
000000000000848d         mov        rdx, qword [rsp+0x38+var_38]
0000000000008491         cmp        byte [rdx], 0x0
0000000000008494         jne        loc_849c

0000000000008496         cmp        rax, 0x40
000000000000849a         jle        loc_8459

                     loc_849c:
000000000000849c         mov        dword [r13], 0xffffffff                     ; CODE XREF=str2sig+164, str2sig+238, str2sig+264, str2sig+291, str2sig+301, str2sig+310, str2sig+348, str2sig+357, str2sig+371
00000000000084a4         mov        eax, 0xffffffff
00000000000084a9         jmp        loc_8460
00000000000084ab         align      16

                     loc_84b0:
00000000000084b0         call       j___libc_current_sigrtmin                   ; __libc_current_sigrtmin, CODE XREF=str2sig+74
00000000000084b5         mov        ebp, eax
00000000000084b7         call       j___libc_current_sigrtmax                   ; __libc_current_sigrtmax
00000000000084bc         test       ebp, ebp
00000000000084be         mov        ebx, eax
00000000000084c0         jle        loc_84dc

00000000000084c2         lea        rdi, qword [aRtmin]                         ; "RTMIN"
00000000000084c9         mov        ecx, 0x5
00000000000084ce         mov        rsi, r12
00000000000084d1         rep  cmpsb byte [rsi], byte [rdi]
00000000000084d3         seta       al
00000000000084d6         sbb        al, 0x0
00000000000084d8         test       al, al
00000000000084da         je         loc_8533

                     loc_84dc:
00000000000084dc         test       ebx, ebx                                    ; CODE XREF=str2sig+208
00000000000084de         jle        loc_849c

00000000000084e0         lea        rdi, qword [aRtmax]                         ; "RTMAX"
00000000000084e7         mov        ecx, 0x5
00000000000084ec         mov        rsi, r12
00000000000084ef         rep  cmpsb byte [rsi], byte [rdi]
00000000000084f1         seta       al
00000000000084f4         sbb        al, 0x0
00000000000084f6         test       al, al
00000000000084f8         jne        loc_849c

00000000000084fa         lea        rdi, qword [r12+5]                          ; argument "__nptr" for method j_strtol
00000000000084ff         mov        edx, 0xa                                    ; argument "__base" for method j_strtol
0000000000008504         mov        rsi, rsp                                    ; argument "__endptr" for method j_strtol
0000000000008507         call       j_strtol                                    ; strtol
000000000000850c         mov        rdx, qword [rsp+0x38+var_38]
0000000000008510         cmp        byte [rdx], 0x0
0000000000008513         jne        loc_849c

0000000000008515         sub        ebp, ebx
0000000000008517         movsxd     rbp, ebp
000000000000851a         cmp        rax, rbp
000000000000851d         jl         loc_849c

0000000000008523         test       rax, rax
0000000000008526         jg         loc_849c

000000000000852c         add        eax, ebx
000000000000852e         jmp        loc_8459

                     loc_8533:
0000000000008533         lea        rdi, qword [r12+5]                          ; argument "__nptr" for method j_strtol, CODE XREF=str2sig+234
0000000000008538         mov        edx, 0xa                                    ; argument "__base" for method j_strtol
000000000000853d         mov        rsi, rsp                                    ; argument "__endptr" for method j_strtol
0000000000008540         call       j_strtol                                    ; strtol
0000000000008545         mov        rdx, qword [rsp+0x38+var_38]
0000000000008549         cmp        byte [rdx], 0x0
000000000000854c         jne        loc_849c

0000000000008552         test       rax, rax
0000000000008555         js         loc_849c

000000000000855b         sub        ebx, ebp
000000000000855d         movsxd     rdx, ebx
0000000000008560         cmp        rax, rdx
0000000000008563         jg         loc_849c

0000000000008569         add        eax, ebp
000000000000856b         jmp        loc_8459

                     loc_8570:
0000000000008570         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=str2sig+126
                        ; endp
0000000000008575         align      128                                         ; End of unwind block (FDE at 0xb634)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32


                     sig2str:
0000000000008580         push       rbp                                         ; Begin of unwind block (FDE at 0xb670), CODE XREF=closeout+586
0000000000008581         lea        rax, qword [numname_table]                  ; numname_table
0000000000008588         push       rbx
0000000000008589         xor        edx, edx
000000000000858b         mov        ebx, edi
000000000000858d         mov        rdi, rsi
0000000000008590         sub        rsp, 0x18
0000000000008594         mov        rcx, rax
0000000000008597         jmp        loc_85ac
0000000000008599         align      32

                     loc_85a0:
00000000000085a0         add        edx, 0x1                                    ; CODE XREF=sig2str+46
00000000000085a3         add        rcx, 0xc
00000000000085a7         cmp        edx, 0x23
00000000000085aa         je         loc_85d0

                     loc_85ac:
00000000000085ac         cmp        dword [rcx], ebx                            ; CODE XREF=sig2str+23
00000000000085ae         jne        loc_85a0

00000000000085b0         lea        rdx, qword [rdx+rdx*2]
00000000000085b4         lea        rsi, qword [rax+rdx*4+4]                    ; argument "__src" for method j_strcpy
00000000000085b9         call       j_strcpy                                    ; strcpy
00000000000085be         xor        eax, eax

                     loc_85c0:
00000000000085c0         add        rsp, 0x18                                   ; CODE XREF=sig2str+143, sig2str+214
00000000000085c4         pop        rbx
00000000000085c5         pop        rbp
00000000000085c6         ret
                        ; endp
00000000000085c7         align      16

                     loc_85d0:
00000000000085d0         mov        qword [rsp+0x28+var_20], rdi                ; CODE XREF=sig2str+42
00000000000085d5         call       j___libc_current_sigrtmin                   ; __libc_current_sigrtmin
00000000000085da         mov        ebp, eax
00000000000085dc         call       j___libc_current_sigrtmax                   ; __libc_current_sigrtmax
00000000000085e1         cmp        ebp, ebx
00000000000085e3         jg         loc_8651

00000000000085e5         cmp        eax, ebx
00000000000085e7         jl         loc_8651

00000000000085e9         mov        edx, eax
00000000000085eb         mov        rdi, qword [rsp+0x28+var_20]
00000000000085f0         sub        edx, ebp
00000000000085f2         sar        edx, 0x1
00000000000085f4         add        edx, ebp
00000000000085f6         cmp        edx, ebx
00000000000085f8         jge        loc_8640

00000000000085fa         mov        edx, 0x58
00000000000085ff         mov        dword [rdi], 0x414d5452
0000000000008605         mov        ebp, eax
0000000000008607         mov        word [rdi+4], dx

                     loc_860b:
000000000000860b         mov        eax, ebx                                    ; CODE XREF=sig2str+207
000000000000860d         sub        eax, ebp
000000000000860f         je         loc_85c0

0000000000008611         lea        rcx, qword [aRtmax+6]                       ; 0xa597
0000000000008618         mov        r8d, eax
000000000000861b         add        rdi, 0x5
000000000000861f         mov        rdx, 0xffffffffffffffff
0000000000008626         mov        esi, 0x1
000000000000862b         xor        eax, eax
000000000000862d         call       j___sprintf_chk                             ; __sprintf_chk
0000000000008632         add        rsp, 0x18
0000000000008636         xor        eax, eax
0000000000008638         pop        rbx
0000000000008639         pop        rbp
000000000000863a         ret
                        ; endp
000000000000863b         align      64

                     loc_8640:
0000000000008640         mov        ecx, 0x4e                                   ; CODE XREF=sig2str+120
0000000000008645         mov        dword [rdi], 0x494d5452
000000000000864b         mov        word [rdi+4], cx
000000000000864f         jmp        loc_860b

                     loc_8651:
0000000000008651         mov        eax, 0xffffffff                             ; CODE XREF=sig2str+99, sig2str+103
0000000000008656         jmp        loc_85c0
000000000000865b         align      32                                          ; End of unwind block (FDE at 0xb670)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000008660         push       r12                                         ; Begin of unwind block (FDE at 0xb6ac), CODE XREF=close_stdout+13, close_stdout+51
0000000000008662         push       rbp
0000000000008663         mov        rbp, rdi
0000000000008666         push       rbx
0000000000008667         call       j___fpending                                ; __fpending
000000000000866c         mov        ebx, dword [rbp]
000000000000866f         mov        rdi, rbp
0000000000008672         mov        r12, rax
0000000000008675         call       rpl_fclose                                  ; rpl_fclose
000000000000867a         and        ebx, 0x20
000000000000867d         test       ebx, ebx
000000000000867f         jne        loc_8698

0000000000008681         test       eax, eax
0000000000008683         je         loc_868f

0000000000008685         test       r12, r12
0000000000008688         mov        eax, 0xffffffff
000000000000868d         je         loc_86c8

                     loc_868f:
000000000000868f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000008690         pop        rbp
0000000000008691         pop        r12
0000000000008693         ret
                        ; endp
0000000000008694         align      8

                     loc_8698:
0000000000008698         test       eax, eax                                    ; CODE XREF=close_stream+31
000000000000869a         jne        loc_86b8

000000000000869c         call       j___errno_location                          ; __errno_location
00000000000086a1         mov        dword [rax], 0x0
00000000000086a7         mov        eax, 0xffffffff
00000000000086ac         pop        rbx
00000000000086ad         pop        rbp
00000000000086ae         pop        r12
00000000000086b0         ret
                        ; endp
00000000000086b1         align      8

                     loc_86b8:
00000000000086b8         pop        rbx                                         ; CODE XREF=close_stream+58
00000000000086b9         mov        eax, 0xffffffff
00000000000086be         pop        rbp
00000000000086bf         pop        r12
00000000000086c1         ret
                        ; endp
00000000000086c2         align      8

                     loc_86c8:
00000000000086c8         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
00000000000086cd         cmp        dword [rax], 0x9
00000000000086d0         pop        rbx
00000000000086d1         pop        rbp
00000000000086d2         pop        r12
00000000000086d4         setne      al
00000000000086d7         movzx      eax, al
00000000000086da         neg        eax
00000000000086dc         ret
                        ; endp
00000000000086dd         align      32                                          ; End of unwind block (FDE at 0xb6ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
00000000000086e0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xb6fc), CODE XREF=rpl_mbrtowc+71
00000000000086e4         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000086e6         call       j_setlocale                                 ; setlocale
00000000000086eb         mov        rdx, rax
00000000000086ee         mov        eax, 0x1
00000000000086f3         test       rdx, rdx
00000000000086f6         je         loc_8715

00000000000086f8         lea        rdi, qword [aRtmax+10]                      ; 0xa59b
00000000000086ff         mov        ecx, 0x2
0000000000008704         mov        rsi, rdx
0000000000008707         rep  cmpsb byte [rsi], byte [rdi]
0000000000008709         seta       cl
000000000000870c         sbb        cl, 0x0
000000000000870f         xor        eax, eax
0000000000008711         test       cl, cl
0000000000008713         jne        loc_8720

                     loc_8715:
0000000000008715         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000008719         ret
                        ; endp
000000000000871a         align      32

                     loc_8720:
0000000000008720         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000008727         mov        ecx, 0x6
000000000000872c         mov        rsi, rdx
000000000000872f         rep  cmpsb byte [rsi], byte [rdi]
0000000000008731         seta       al
0000000000008734         sbb        al, 0x0
0000000000008736         test       al, al
0000000000008738         setne      al
000000000000873b         add        rsp, 0x8
000000000000873f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000008740         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0xb6fc), Begin of unwind block (FDE at 0xb71c), CODE XREF=gettext_quote.part.1+11
0000000000008744         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000008749         call       j_nl_langinfo                               ; nl_langinfo
000000000000874e         test       rax, rax
0000000000008751         je         loc_8770

0000000000008753         cmp        byte [rax], 0x0
0000000000008756         lea        rdx, qword [aAscii]                         ; "ASCII"
000000000000875d         cmove      rax, rdx
0000000000008761         add        rsp, 0x8
0000000000008765         ret
                        ; endp
0000000000008766         align      16

                     loc_8770:
0000000000008770         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000008777         add        rsp, 0x8
000000000000877b         ret
                        ; endp
000000000000877c         align      128                                         ; End of unwind block (FDE at 0xb71c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dup_safer:
0000000000008780         mov        edx, 0x3                                    ; Begin of unwind block (FDE at 0xb73c), CODE XREF=fd_safer+17
0000000000008785         xor        esi, esi
0000000000008787         xor        eax, eax
0000000000008789         jmp        rpl_fcntl                                   ; rpl_fcntl
                        ; endp
000000000000878e         align      16                                          ; End of unwind block (FDE at 0xb73c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int32_t, -104


                     rpl_fcntl:
0000000000008790         push       r12                                         ; Begin of unwind block (FDE at 0xb754), CODE XREF=dup_safer+9
0000000000008792         push       rbp
0000000000008793         mov        ebp, edi
0000000000008795         push       rbx
0000000000008796         sub        rsp, 0x50
000000000000879a         mov        rax, qword [fs:0x28]
00000000000087a3         mov        qword [rsp+0x68+var_50], rax
00000000000087a8         xor        eax, eax
00000000000087aa         lea        rax, qword [rsp+0x68+arg_0]
00000000000087af         test       esi, esi
00000000000087b1         mov        qword [rsp+0x68+var_38], rdx
00000000000087b6         mov        qword [rsp+0x68+var_30], rcx
00000000000087bb         mov        qword [rsp+0x68+var_28], r8
00000000000087c0         mov        qword [rsp+0x68+var_60], rax
00000000000087c5         lea        rax, qword [rsp+0x68+var_48]
00000000000087ca         mov        qword [rsp+0x68+var_20], r9
00000000000087cf         mov        dword [rsp+0x68+var_68], 0x10
00000000000087d6         mov        qword [rsp+0x68+var_58], rax
00000000000087db         je         loc_89e2

00000000000087e1         cmp        esi, 0x406
00000000000087e7         jne        loc_8830

00000000000087e9         mov        rax, qword [rsp+0x68+var_58]
00000000000087ee         cmp        dword [have_dupfd_cloexec.3326], 0x0        ; have_dupfd_cloexec.3326
00000000000087f5         mov        dword [rsp+0x68+var_68], 0x18
00000000000087fc         mov        r12d, dword [rax+0x10]
0000000000008800         mov        edx, r12d
0000000000008803         js         loc_8933

0000000000008809         xor        eax, eax
000000000000880b         mov        esi, 0x406                                  ; argument "__cmd" for method j_fcntl
0000000000008810         call       j_fcntl                                     ; fcntl
0000000000008815         test       eax, eax
0000000000008817         mov        ebx, eax
0000000000008819         js         loc_89a8

                     loc_881f:
000000000000881f         mov        dword [have_dupfd_cloexec.3326], 0x1        ; have_dupfd_cloexec.3326, CODE XREF=rpl_fcntl+544
0000000000008829         jmp        loc_8870
000000000000882b         align      16

                     loc_8830:
0000000000008830         cmp        esi, 0xb                                    ; CODE XREF=rpl_fcntl+87
0000000000008833         je         loc_8860

0000000000008835         jg         loc_8890

0000000000008837         cmp        esi, 0x4
000000000000883a         je         loc_8910

0000000000008840         jg         loc_8900

0000000000008846         cmp        esi, 0x2
0000000000008849         je         loc_8910

000000000000884f         jg         loc_8860

0000000000008851         cmp        esi, 0x1
0000000000008854         jne        loc_88b8

0000000000008856         nop        word [cs:rax+rax]

                     loc_8860:
0000000000008860         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl, CODE XREF=rpl_fcntl+163, rpl_fcntl+191, rpl_fcntl+278, rpl_fcntl+344, rpl_fcntl+358, rpl_fcntl+371
0000000000008862         xor        eax, eax
0000000000008864         call       j_fcntl                                     ; fcntl
0000000000008869         mov        ebx, eax
000000000000886b         nop        dword [rax+rax]

                     loc_8870:
0000000000008870         mov        rcx, qword [rsp+0x68+var_50]                ; CODE XREF=rpl_fcntl+153, rpl_fcntl+327, rpl_fcntl+414, rpl_fcntl+432, rpl_fcntl+445, rpl_fcntl+491, rpl_fcntl+524, rpl_fcntl+568, rpl_fcntl+613
0000000000008875         xor        rcx, qword [fs:0x28]
000000000000887e         mov        eax, ebx
0000000000008880         jne        loc_89dd

0000000000008886         add        rsp, 0x50
000000000000888a         pop        rbx
000000000000888b         pop        rbp
000000000000888c         pop        r12
000000000000888e         ret
                        ; endp
000000000000888f         align      16

                     loc_8890:
0000000000008890         cmp        esi, 0x407                                  ; CODE XREF=rpl_fcntl+165
0000000000008896         jg         loc_88e0

0000000000008898         cmp        esi, 0x406
000000000000889e         jge        loc_8910

00000000000088a0         cmp        esi, 0x401
00000000000088a6         je         loc_8860

00000000000088a8         cmp        esi, 0x402
00000000000088ae         je         loc_8910

00000000000088b0         cmp        esi, 0x400
00000000000088b6         je         loc_8910

                     loc_88b8:
00000000000088b8         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+196, rpl_fcntl+356, rpl_fcntl+382
00000000000088bb         cmp        eax, 0x2f
00000000000088be         ja         loc_89fa

00000000000088c4         add        rax, qword [rsp+0x68+var_58]

                     loc_88c9:
00000000000088c9         mov        rdx, qword [rax]                            ; CODE XREF=rpl_fcntl+623
00000000000088cc         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
00000000000088ce         xor        eax, eax
00000000000088d0         call       j_fcntl                                     ; fcntl
00000000000088d5         mov        ebx, eax
00000000000088d7         jmp        loc_8870
00000000000088d9         align      32

                     loc_88e0:
00000000000088e0         cmp        esi, 0x409                                  ; CODE XREF=rpl_fcntl+262
00000000000088e6         je         loc_8910

00000000000088e8         jl         loc_8860

00000000000088ee         cmp        esi, 0x40a
00000000000088f4         jne        loc_88b8

00000000000088f6         jmp        loc_8860
00000000000088fb         align      256

                     loc_8900:
0000000000008900         cmp        esi, 0x9                                    ; CODE XREF=rpl_fcntl+176
0000000000008903         je         loc_8860

0000000000008909         jg         loc_8910

000000000000890b         cmp        esi, 0x8
000000000000890e         jne        loc_88b8

                     loc_8910:
0000000000008910         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+170, rpl_fcntl+185, rpl_fcntl+270, rpl_fcntl+286, rpl_fcntl+294, rpl_fcntl+342, rpl_fcntl+377
0000000000008913         cmp        eax, 0x2f
0000000000008916         ja         loc_8a04

000000000000891c         add        rax, qword [rsp+0x68+var_58]

                     loc_8921:
0000000000008921         mov        edx, dword [rax]                            ; CODE XREF=rpl_fcntl+633
0000000000008923         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
0000000000008925         xor        eax, eax
0000000000008927         call       j_fcntl                                     ; fcntl
000000000000892c         mov        ebx, eax
000000000000892e         jmp        loc_8870

                     loc_8933:
0000000000008933         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl, CODE XREF=rpl_fcntl+115
0000000000008935         xor        eax, eax
0000000000008937         call       j_fcntl                                     ; fcntl
000000000000893c         test       eax, eax
000000000000893e         mov        ebx, eax
0000000000008940         js         loc_8870

0000000000008946         cmp        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
000000000000894d         jne        loc_8870

                     loc_8953:
0000000000008953         xor        eax, eax                                    ; CODE XREF=rpl_fcntl+584
0000000000008955         mov        esi, 0x1                                    ; argument "__cmd" for method j_fcntl
000000000000895a         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
000000000000895c         call       j_fcntl                                     ; fcntl
0000000000008961         test       eax, eax
0000000000008963         js         loc_8981

0000000000008965         or         eax, 0x1
0000000000008968         mov        esi, 0x2                                    ; argument "__cmd" for method j_fcntl
000000000000896d         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
000000000000896f         mov        edx, eax
0000000000008971         xor        eax, eax
0000000000008973         call       j_fcntl                                     ; fcntl
0000000000008978         cmp        eax, 0xffffffff
000000000000897b         jne        loc_8870

                     loc_8981:
0000000000008981         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+467
0000000000008986         mov        r12d, dword [rax]
0000000000008989         mov        rbp, rax
000000000000898c         mov        edi, ebx                                    ; argument "__fd" for method j_close
000000000000898e         call       j_close                                     ; close
0000000000008993         mov        ebx, 0xffffffff
0000000000008998         mov        dword [rbp], r12d
000000000000899c         jmp        loc_8870
00000000000089a1         align      8

                     loc_89a8:
00000000000089a8         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+137
00000000000089ad         cmp        dword [rax], 0x16
00000000000089b0         jne        loc_881f

00000000000089b6         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
00000000000089b8         xor        eax, eax
00000000000089ba         mov        edx, r12d
00000000000089bd         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
00000000000089bf         call       j_fcntl                                     ; fcntl
00000000000089c4         test       eax, eax
00000000000089c6         mov        ebx, eax
00000000000089c8         js         loc_8870

00000000000089ce         mov        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
00000000000089d8         jmp        loc_8953

                     loc_89dd:
00000000000089dd         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_fcntl+240
                        ; endp

                     loc_89e2:
00000000000089e2         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=rpl_fcntl+75
00000000000089e7         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
00000000000089e9         mov        edx, dword [rax+0x10]
00000000000089ec         xor        eax, eax
00000000000089ee         call       j_fcntl                                     ; fcntl
00000000000089f3         mov        ebx, eax
00000000000089f5         jmp        loc_8870

                     loc_89fa:
00000000000089fa         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+302
00000000000089ff         jmp        loc_88c9

                     loc_8a04:
0000000000008a04         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+390
0000000000008a09         jmp        loc_8921
0000000000008a0e         align      16                                          ; End of unwind block (FDE at 0xb754)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000008a10         push       r15                                         ; Begin of unwind block (FDE at 0xb78c), DATA XREF=_start+22
0000000000008a12         push       r14
0000000000008a14         mov        r15, rdx
0000000000008a17         push       r13
0000000000008a19         push       r12
0000000000008a1b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000008a22         push       rbp
0000000000008a23         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
0000000000008a2a         push       rbx
0000000000008a2b         mov        r13d, edi
0000000000008a2e         mov        r14, rsi
0000000000008a31         sub        rbp, r12
0000000000008a34         sub        rsp, 0x8
0000000000008a38         sar        rbp, 0x3
0000000000008a3c         call       _init                                       ; _init
0000000000008a41         test       rbp, rbp
0000000000008a44         je         loc_8a66

0000000000008a46         xor        ebx, ebx
0000000000008a48         nop        dword [rax+rax]

                     loc_8a50:
0000000000008a50         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000008a53         mov        rsi, r14
0000000000008a56         mov        edi, r13d
0000000000008a59         call       qword [r12+rbx*8]
0000000000008a5d         add        rbx, 0x1
0000000000008a61         cmp        rbp, rbx
0000000000008a64         jne        loc_8a50

                     loc_8a66:
0000000000008a66         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
0000000000008a6a         pop        rbx
0000000000008a6b         pop        rbp
0000000000008a6c         pop        r12
0000000000008a6e         pop        r13
0000000000008a70         pop        r14
0000000000008a72         pop        r15
0000000000008a74         ret
                        ; endp
0000000000008a75         align      128                                         ; End of unwind block (FDE at 0xb78c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000008a80         ret                                                    ; Begin of unwind block (FDE at 0xb7d4), DATA XREF=_start+15
                        ; endp
0000000000008a82         align      16                                          ; End of unwind block (FDE at 0xb7d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000008a90         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0xb7ec), __dso_handle, CODE XREF=main+122
0000000000008a97         xor        esi, esi
0000000000008a99         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
0000000000008a9e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0xb7ec)
0000000000008a9f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x8aa0; 0x8aa9[ (9 bytes)
        ; File offset : [35488; 35497[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000008aa0         sub        rsp, 0x8
0000000000008aa4         add        rsp, 0x8
0000000000008aa8         ret
                        ; endp
0000000000008aa9         db  0x00 ; '.'
0000000000008aaa         db  0x00 ; '.'
0000000000008aab         db  0x00 ; '.'
0000000000008aac         db  0x00 ; '.'
0000000000008aad         db  0x00 ; '.'
0000000000008aae         db  0x00 ; '.'
0000000000008aaf         db  0x00 ; '.'
0000000000008ab0         db  0x00 ; '.'
0000000000008ab1         db  0x00 ; '.'
0000000000008ab2         db  0x00 ; '.'
0000000000008ab3         db  0x00 ; '.'
0000000000008ab4         db  0x00 ; '.'
0000000000008ab5         db  0x00 ; '.'
0000000000008ab6         db  0x00 ; '.'
0000000000008ab7         db  0x00 ; '.'
0000000000008ab8         db  0x00 ; '.'
0000000000008ab9         db  0x00 ; '.'
0000000000008aba         db  0x00 ; '.'
0000000000008abb         db  0x00 ; '.'
0000000000008abc         db  0x00 ; '.'
0000000000008abd         db  0x00 ; '.'
0000000000008abe         db  0x00 ; '.'
0000000000008abf         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x8ac0; 0xa5a9[ (6889 bytes)
        ; File offset : [35520; 42409[ (6889 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000008ac0         db  0x01 ; '.'
0000000000008ac1         db  0x00 ; '.'
0000000000008ac2         db  0x02 ; '.'
0000000000008ac3         db  0x00 ; '.'
                     aCoreutils831sr:
0000000000008ac4         db         "../coreutils-8.31/src/split.c", 0          ; DATA XREF=main+6498, main+7119, next_file_name+686
                     aWiden:
0000000000008ae2         db         "! widen", 0                                ; DATA XREF=next_file_name+693
                     aBinsh:
0000000000008aea         db         "/bin/sh", 0                                ; DATA XREF=create+72
                     aCreatingFileSn:
0000000000008af2         db         "creating file %s\n", 0                     ; DATA XREF=create+813
                     aFailedToStatS:
0000000000008b04         db         "failed to stat %s", 0                      ; DATA XREF=sub_44cf+288
                     aSErrorTruncati:
0000000000008b16         db         "%s: error truncating", 0                   ; DATA XREF=create+637
                     aShell:
0000000000008b2b         db         "SHELL", 0                                  ; DATA XREF=create+47
0000000000008b31         db  0x46 ; 'F'                                         ; DATA XREF=create+59
0000000000008b32         db  0x49 ; 'I'
0000000000008b33         db  0x4c ; 'L'
0000000000008b34         db  0x45 ; 'E'
0000000000008b35         db  0x00 ; '.'
                     aExecutingWithF:
0000000000008b36         db         "executing with FILE=%s\n", 0               ; DATA XREF=create+703
                     aFailedToCreate:
0000000000008b4e         db         "failed to create pipe", 0                  ; DATA XREF=sub_44cf+94
                     aClosingPriorPi:
0000000000008b64         db         "closing prior pipe", 0                     ; DATA XREF=sub_44cf+1
                     aClosingOutputP:
0000000000008b77         db         "closing output pipe", 0                    ; DATA XREF=sub_44cf+203
                     aMovingInputPip:
0000000000008b8b         db         "moving input pipe", 0                      ; DATA XREF=sub_44cf+239
                     aClosingInputPi:
0000000000008b9d         db         "closing input pipe", 0                     ; DATA XREF=create+760
0000000000008bb0         db  0x2d ; '-'                                         ; DATA XREF=create+417
0000000000008bb1         db  0x63 ; 'c'
0000000000008bb2         db  0x00 ; '.'
                     aForkSystemCall:
0000000000008bb3         db         "fork system call failed", 0                ; DATA XREF=sub_44cf+382
                     aFailedToCloseI:
0000000000008bcb         db         "failed to close input pipe", 0             ; DATA XREF=sub_44cf+338
0000000000008be6         db  0x61 ; 'a'                                         ; DATA XREF=ofile_open+248
0000000000008be7         db  0x00 ; '.'
                     aWaitingForChil:
0000000000008be8         db         "waiting for child process", 0              ; DATA XREF=closeout+537
0000000000008c02         db  0x25 ; '%'                                         ; DATA XREF=closeout+672
0000000000008c03         db  0x64 ; 'd'
0000000000008c04         db  0x00 ; '.'
                     aSplit:
0000000000008c05         db         "split", 0                                  ; DATA XREF=main+577, usage+462, usage+780, usage+964, usage+983, usage+1017
0000000000008c0b         db  0x5b ; '['                                         ; DATA XREF=usage+474
0000000000008c0c         db  0x00 ; '.'
                     aTestInvocation:
0000000000008c0d         db         "test invocation", 0                        ; DATA XREF=usage+513
                     aMulticallInvoc:
0000000000008c1d         db         "Multi-call invocation", 0                  ; DATA XREF=usage+561
                     aSha224sum:
0000000000008c33         db         "sha224sum", 0                              ; DATA XREF=usage+578
                     aSha2Utilities:
0000000000008c3d         db         "sha2 utilities", 0                         ; DATA XREF=usage+590
                     aSha256sum:
0000000000008c4c         db         "sha256sum", 0                              ; DATA XREF=usage+481
                     aSha384sum:
0000000000008c56         db         "sha384sum", 0                              ; DATA XREF=usage+525
                     aSha512sum:
0000000000008c60         db         "sha512sum", 0                              ; DATA XREF=usage+549
                     aNsOnlineHelpSn:
0000000000008c6a         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+666
0000000000008c81         db  0x47 ; 'G'                                         ; DATA XREF=main+570, usage+694, usage+887, emit_bug_reporting_address+68
0000000000008c82         db  0x4e ; 'N'
0000000000008c83         db  0x55 ; 'U'
0000000000008c84         db  0x20 ; ' '
                     aCoreutils:
0000000000008c85         db         "coreutils", 0                              ; DATA XREF=main+91, main+103, usage+537
0000000000008c8f         db  0x65 ; 'e'                                         ; DATA XREF=usage+733, usage+926
0000000000008c90         db  0x6e ; 'n'
0000000000008c91         db  0x5f ; '_'
0000000000008c92         db  0x00 ; '.'
                     aFullDocumentat:
0000000000008c93         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+761, usage+950
                     aUsrlocalsharel:
0000000000008cae         db         "/usr/local/share/locale", 0                ; DATA XREF=main+84
                     a0123456789cabd:
0000000000008cc6         db         "0123456789C:a:b:del:n:t:ux", 0             ; DATA XREF=main+203
                     aInvalidSuffixL:
0000000000008ce1         db         "invalid suffix length", 0                  ; DATA XREF=main+1248
                     aInvalidNumberO_8cf7:        // aInvalidNumberO
0000000000008cf7         db         "invalid number of bytes", 0                ; DATA XREF=main+362, main+1170
                     aInvalidNumberO:
0000000000008d0f         db         "invalid number of lines", 0                ; DATA XREF=main+794, main+7312
0000000000008d27         db  0x72 ; 'r'                                         ; DATA XREF=main+930
0000000000008d28         db  0x2f ; '/'
0000000000008d29         db  0x00 ; '.'
0000000000008d2a         db  0x6c ; 'l'                                         ; DATA XREF=main+1443
0000000000008d2b         db  0x2f ; '/'
0000000000008d2c         db  0x00 ; '.'
                     aInvalidNumberO_8d2d:        // aInvalidNumberO
0000000000008d2d         db         "invalid number of chunks", 0               ; DATA XREF=main+1007, main+6896
                     aInvalidChunkNu:
0000000000008d46         db         "invalid chunk number", 0                   ; DATA XREF=main+1076
                     aEmptyRecordSep:
0000000000008d5b         db         "empty record separator", 0                 ; DATA XREF=main+7264
0000000000008d72         db  0x5c ; '\'                                         ; DATA XREF=main+715
0000000000008d73         db  0x30 ; '0'                                         ; DATA XREF=main+7300
0000000000008d74         db  0x00 ; '.'
                     aMulticharacter:
0000000000008d75         db         "multi-character separator %s", 0           ; DATA XREF=main+7429
                     a0123456789:
0000000000008d92         db         "0123456789", 0                             ; DATA XREF=main+1653
                     a0123456789abcd:
0000000000008d9d         db         "0123456789abcdef", 0                       ; DATA XREF=main+1499
                     aInvalidIoBlock:
0000000000008dae         db         "invalid IO block size", 0                  ; DATA XREF=main+1320
                     aRichardMStallm:
0000000000008dc4         db         "Richard M. Stallman", 0                    ; DATA XREF=main+556
                     aTorbjornGranlu:
0000000000008dd8         db         "Torbjorn Granlund", 0                      ; DATA XREF=main+563
                     aSS:
0000000000008dea         db         "%s: %s", 0                                 ; DATA XREF=main+6918, main+7334, close_stdout+108, xnumtoumax+125
                     aExtraOperandS:
0000000000008df1         db         "extra operand %s", 0                       ; DATA XREF=main+6797
                     aCannotOpenSFor:
0000000000008e02         db         "cannot open %s for reading", 0             ; DATA XREF=main+6736
                     aNKNNFilesize:
0000000000008e1d         db         "n && k <= n && n <= file_size", 0          ; DATA XREF=main+7126
                     aWriteError:
0000000000008e3b         db         "write error", 0                            ; DATA XREF=main+4954, main+5241, main+5406, close_stdout+67
                     aLinebytes:
0000000000008e47         db         "line-bytes", 0
                     aElideemptyfile:
0000000000008e52         db         "elide-empty-files", 0
                     aUnbuffered:
0000000000008e64         db         "unbuffered", 0
                     aSuffixlength:
0000000000008e6f         db         "suffix-length", 0
                     aAdditionalsuff:
0000000000008e7d         db         "additional-suffix", 0
                     aNumericsuffixe:
0000000000008e8f         db         "numeric-suffixes", 0
                     aHexsuffixes:
0000000000008ea0         db         "hex-suffixes", 0
                     aFilter:
0000000000008ead         db         "filter", 0
                     aVerbose:
0000000000008eb4         db         "verbose", 0
                     aIoblksize:
0000000000008ebc         db         "-io-blksize", 0
                     aHelp:
0000000000008ec8         db         "help", 0
                     aVersion:
0000000000008ecd         db         "version", 0
                     aAbcdefghijklmn:
0000000000008ed5         db         "abcdefghijklmnopqrstuvwxyz", 0             ; DATA XREF=suffix_alphabet
                     aOutputFileSuff:
0000000000008ef0         db         "output file suffixes exhausted", 0         ; DATA XREF=next_file_name+638
0000000000008f0f         align      16
                     aSWouldOverwrit:
0000000000008f10         db         "%s would overwrite input; aborting", 0     ; DATA XREF=sub_44cf+161
0000000000008f33         align      8
                     aFailedToSetFil:
0000000000008f38         db         "failed to set FILE environment variable", 0 ; DATA XREF=sub_44cf+50
                     aFailedToRunCom:
0000000000008f60         db         "failed to run command: \"%s -c %s\"", 0    ; DATA XREF=create+443
0000000000008f82         align      8
                     aWithFilesSigna:
0000000000008f88         db         "with FILE=%s, signal %s from command: %s", 0 ; DATA XREF=closeout+617
0000000000008fb1         align      8
                     aWithFilesExitD:
0000000000008fb8         db         "with FILE=%s, exit %d from command: %s", 0 ; DATA XREF=closeout+465
0000000000008fdf         align      32
                     aUnknownStatusF:
0000000000008fe0         db         "unknown status from command (0x%X)", 0     ; DATA XREF=closeout+709
0000000000009003         align      8
                     aTrySHelpForMor:
0000000000009008         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
000000000000902f         align      16
                     aUsageSOptionFi:
0000000000009030         db         "Usage: %s [OPTION]... [FILE [PREFIX]]\n", 0 ; DATA XREF=usage+93
0000000000009057         align      8
                     aOutputPiecesOf:
0000000000009058         db         "Output pieces of FILE to PREFIXaa, PREFIXab, ...;\ndefault size is 1000 lines, and default PREFIX is 'x'.\n", 0 ; DATA XREF=usage+132
00000000000090c2         align      8
                     aNwithNoFileOrW:
00000000000090c8         db         "\nWith no FILE, or when FILE is -, read standard input.\n", 0 ; DATA XREF=usage+169
                     aNmandatoryArgu:
0000000000009100         db         "\nMandatory arguments to long options are mandatory for short options too.\n", 0 ; DATA XREF=usage+206
000000000000914b         align      16
                     aASuffixlengthn:
0000000000009150         db         "  -a, --suffix-length=N   generate suffixes of length N (default %d)\n      --additional-suffix=SUFFIX  append an additional SUFFIX to file names\n  -b, --bytes=SIZE        put SIZE bytes per output file\n  -C, --line-bytes=SIZE   put at most SIZE bytes of re" ; DATA XREF=usage+236
0000000000009250         db         "cords per output file\n  -d                      use numeric suffixes starting at 0, not alphabetic\n      --numeric-suffixes[=FROM]  same as -d, but allow setting the start value\n  -x                      use hex suffixes starting at 0, not alphabetic\n     "
0000000000009350         db         " --hex-suffixes[=FROM]  same as -x, but allow setting the start value\n  -e, --elide-empty-files  do not generate empty output files with '-n'\n      --filter=COMMAND    write to shell COMMAND; file name is $FILE\n  -l, --lines=NUMBER      put NUMBER lines/re"
0000000000009450         db         "cords per output file\n  -n, --number=CHUNKS     generate CHUNKS output files; see explanation below\n  -t, --separator=SEP     use SEP instead of newline as the record separator;\n                            '\0' (zero) specifies the NUL character\n  -u, --un"
0000000000009550         db         "buffered        immediately copy input to output with '-n r/...'\n", 0
0000000000009592         align      8
                     aVerbosePrintAD:
0000000000009598         db         "      --verbose           print a diagnostic just before each\n                            output file is opened\n", 0 ; DATA XREF=usage+289
0000000000009609         align      16
                     aHelpDisplayThi:
0000000000009610         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+326
000000000000963d         align      64
                     aVersionOutputV:
0000000000009640         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+363
0000000000009676         align      8
                     aNtheSizeArgume:
0000000000009678         db         "\nThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\nUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\nBinary prefixes can be used, too: KiB=K, MiB=M, and so on.\n", 0 ; DATA XREF=usage+400
000000000000974c         align      16
                     aNchunksMayBenN:
0000000000009750         db         "\nCHUNKS may be:\n  N       split into N files based on size of input\n  K/N     output Kth of N to stdout\n  l/N     split into N files without splitting lines/records\n  l/K/N   output Kth of N to stdout without splitting lines/records\n  r/N     like 'l' but " ; DATA XREF=usage+437
0000000000009850         db         "use round robin distribution\n  r/K/N   likewise but only output Kth of N to stdout\n", 0
00000000000098a4         align      8
                     aHttpswwwgnuorg:
00000000000098a8         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+687, usage+787, usage+880, usage+990, emit_bug_reporting_address+61
                     aReportAnyTrans:
00000000000098d0         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+1031
0000000000009917         align      8
                     aOrAvailableLoc:
0000000000009918         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+830
000000000000994b         align      16
                     aInvalidSuffixS:
0000000000009950         db         "invalid suffix %s, contains directory separator", 0 ; DATA XREF=main+6862
                     aCannotSplitInM:
0000000000009980         db         "cannot split in more than one way", 0      ; DATA XREF=main+7373
00000000000099a2         align      8
                     aMultipleSepara:
00000000000099a8         db         "multiple separator characters specified", 0 ; DATA XREF=main+7385
                     aLineCountOptio:
00000000000099d0         db         "line count option -%s%c... is too large", 0 ; DATA XREF=main+7065
                     aSInvalidStartV_99f8:        // aSInvalidStartV
00000000000099f8         db         "%s: invalid start value for numerical suffix", 0 ; DATA XREF=main+7245
0000000000009a25         align      8
                     aSInvalidStartV:
0000000000009a28         db         "%s: invalid start value for hexadecimal suffix", 0 ; DATA XREF=main+7228
0000000000009a57         align      8
                     aFilterDoesNotP:
0000000000009a58         db         "--filter does not process a chunk extracted to stdout", 0 ; DATA XREF=main+6443
0000000000009a8e         align      16
                     aTheSuffixLengt:
0000000000009a90         db         "the suffix length needs to be at least %lu", 0 ; DATA XREF=main+7004
0000000000009abb         align      64
                     aNumericalSuffi:
0000000000009ac0         db         "numerical suffix start value is too large for the suffix length", 0 ; DATA XREF=main+1907
                     aSCannotDetermi:
0000000000009b00         db         "%s: cannot determine file size", 0         ; DATA XREF=main+4013
0000000000009b1f         align      32
                     aKNKNNFilesize:
0000000000009b20         db         "k && n && k <= n && n <= file_size", 0     ; DATA XREF=main+6505
0000000000009b43         align      16
                     switch_table_9b50:        // switch_table
0000000000009b50         dd         main.loc_2b29-switch_table_9b50, 2 dup (main.loc_2a81-switch_table_9b50), main.loc_2ee7-switch_table_9b50, main.loc_2cf9-switch_table_9b50 ; switch table used at 0x28a8 containing 6 entries, DATA XREF=main+2234
0000000000009b64         dd         main.loc_30ca-switch_table_9b50
0000000000009b68         align      16
                     __PRETTY_FUNCTION__.7242:
0000000000009b70         db         "lines_chunk_split", 0                      ; DATA XREF=main+7112
0000000000009b82         align      16
                     __PRETTY_FUNCTION__.7285:
0000000000009b90         db         "bytes_chunk_extract", 0                    ; DATA XREF=main+6491
0000000000009ba4         align      8
                     __PRETTY_FUNCTION__.7087:
0000000000009ba8         db         "next_file_name", 0                         ; DATA XREF=next_file_name+679
0000000000009bb7         align      8
                     multipliers.7397:
0000000000009bb8         db         "bEGKkMmPTYZ0", 0                           ; DATA XREF=main+394, main+1202, main+1351
                     a831:
0000000000009bc5         db         "8.31", 0                                   ; DATA XREF=Version
0000000000009bca         align      16
                     aANullArgv0WasP:
0000000000009bd0         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
0000000000009c08         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
0000000000009c10         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
0000000000009c11         db  0x74 ; 't'
0000000000009c12         db  0x2d ; '-'                                         ; DATA XREF=main+127, main+1944, main+5747
0000000000009c13         db  0x00 ; '.'
0000000000009c14         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
0000000000009c15         db  0x80 ; '.'
0000000000009c16         db  0x98 ; '.'
0000000000009c17         db  0x00 ; '.'
0000000000009c18         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
0000000000009c19         db  0x80 ; '.'
0000000000009c1a         db  0x99 ; '.'
0000000000009c1b         db  0x00 ; '.'
0000000000009c1c         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
0000000000009c1d         db  0x07 ; '.'
0000000000009c1e         db  0x65 ; 'e'
0000000000009c1f         db  0x00 ; '.'
0000000000009c20         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
0000000000009c21         db  0xaf ; '.'
0000000000009c22         db  0x00 ; '.'
0000000000009c23         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_5ee0+1451, sub_5ee0+1493, sub_5ee0+2429
0000000000009c24         db  0x00 ; '.'
0000000000009c25         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_5ee0+132, sub_5ee0+1338, sub_5ee0+1670, sub_5ee0+1697, sub_5ee0+2352
0000000000009c26         db  0x00 ; '.'
0000000000009c27         db  0x60 ; '`'                                         ; DATA XREF=sub_5ee0+1627, sub_5ee0+1654
0000000000009c28         db  0x00 ; '.'
                     aLiteral:
0000000000009c29         db         "literal", 0
                     aShell_9c31:        // aShell
0000000000009c31         db         "shell", 0
                     aShellalways:
0000000000009c37         db         "shell-always", 0
0000000000009c44         db  0x73 ; 's'
0000000000009c45         db  0x68 ; 'h'
0000000000009c46         db  0x65 ; 'e'
0000000000009c47         db  0x6c ; 'l'
0000000000009c48         db  0x6c ; 'l'
0000000000009c49         db  0x2d ; '-'
                     aEscape:
0000000000009c4a         db         "escape", 0
                     aShellescapealw:
0000000000009c51         db         "shell-escape-always", 0
                     aCmaybe:
0000000000009c65         db         "c-maybe", 0
                     aClocale:
0000000000009c6d         db         "clocale", 0
0000000000009c75         align      128
                     switch_table_9c80:        // switch_table
0000000000009c80         dd         quotearg_buffer_restyled.loc_65da-switch_table_9c80, quotearg_buffer_restyled.loc_5833-switch_table_9c80, quotearg_buffer_restyled.loc_6808-switch_table_9c80, quotearg_buffer_restyled.loc_6614-switch_table_9c80 ; switch table used at 0x5831 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000009c90         dd         quotearg_buffer_restyled.loc_6404-switch_table_9c80, quotearg_buffer_restyled.loc_6460-switch_table_9c80, quotearg_buffer_restyled.loc_64b5-switch_table_9c80, quotearg_buffer_restyled.loc_64fa-switch_table_9c80
0000000000009ca0         dd         3 dup (quotearg_buffer_restyled.loc_6534-switch_table_9c80)
0000000000009cac         db  0x04 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
0000000000009cad         db  0xbf ; '.'
0000000000009cae         db  0xff ; '.'
0000000000009caf         db  0xff ; '.'
0000000000009cb0         db  0xec ; '.'
0000000000009cb1         db  0xbf ; '.'
0000000000009cb2         db  0xff ; '.'
0000000000009cb3         db  0xff ; '.'
0000000000009cb4         db  0xec ; '.'
0000000000009cb5         db  0xbf ; '.'
0000000000009cb6         db  0xff ; '.'
0000000000009cb7         db  0xff ; '.'
0000000000009cb8         db  0xec ; '.'
0000000000009cb9         db  0xbf ; '.'
0000000000009cba         db  0xff ; '.'
0000000000009cbb         db  0xff ; '.'
0000000000009cbc         db  0xec ; '.'
0000000000009cbd         db  0xbf ; '.'
0000000000009cbe         db  0xff ; '.'
0000000000009cbf         db  0xff ; '.'
0000000000009cc0         db  0xec ; '.'
0000000000009cc1         db  0xbf ; '.'
0000000000009cc2         db  0xff ; '.'
0000000000009cc3         db  0xff ; '.'
0000000000009cc4         db  0xec ; '.'
0000000000009cc5         db  0xbf ; '.'
0000000000009cc6         db  0xff ; '.'
0000000000009cc7         db  0xff ; '.'
0000000000009cc8         db  0x44 ; 'D'
0000000000009cc9         db  0xbf ; '.'
0000000000009cca         db  0xff ; '.'
0000000000009ccb         db  0xff ; '.'
0000000000009ccc         db  0x4c ; 'L'
0000000000009ccd         db  0xbe ; '.'
0000000000009cce         db  0xff ; '.'
0000000000009ccf         db  0xff ; '.'
0000000000009cd0         db  0x0c ; '.'
0000000000009cd1         db  0xbe ; '.'
0000000000009cd2         db  0xff ; '.'
0000000000009cd3         db  0xff ; '.'
0000000000009cd4         db  0xd4 ; '.'
0000000000009cd5         db  0xbf ; '.'
0000000000009cd6         db  0xff ; '.'
0000000000009cd7         db  0xff ; '.'
0000000000009cd8         db  0xc4 ; '.'
0000000000009cd9         db  0xbf ; '.'
0000000000009cda         db  0xff ; '.'
0000000000009cdb         db  0xff ; '.'
0000000000009cdc         db  0xb4 ; '.'
0000000000009cdd         db  0xbf ; '.'
0000000000009cde         db  0xff ; '.'
0000000000009cdf         db  0xff ; '.'
0000000000009ce0         db  0xa4 ; '.'
0000000000009ce1         db  0xbf ; '.'
0000000000009ce2         db  0xff ; '.'
0000000000009ce3         db  0xff ; '.'
0000000000009ce4         db  0xec ; '.'
0000000000009ce5         db  0xbf ; '.'
0000000000009ce6         db  0xff ; '.'
0000000000009ce7         db  0xff ; '.'
0000000000009ce8         db  0xec ; '.'
0000000000009ce9         db  0xbf ; '.'
0000000000009cea         db  0xff ; '.'
0000000000009ceb         db  0xff ; '.'
0000000000009cec         db  0xec ; '.'
0000000000009ced         db  0xbf ; '.'
0000000000009cee         db  0xff ; '.'
0000000000009cef         db  0xff ; '.'
0000000000009cf0         db  0xec ; '.'
0000000000009cf1         db  0xbf ; '.'
0000000000009cf2         db  0xff ; '.'
0000000000009cf3         db  0xff ; '.'
0000000000009cf4         db  0xec ; '.'
0000000000009cf5         db  0xbf ; '.'
0000000000009cf6         db  0xff ; '.'
0000000000009cf7         db  0xff ; '.'
0000000000009cf8         db  0xec ; '.'
0000000000009cf9         db  0xbf ; '.'
0000000000009cfa         db  0xff ; '.'
0000000000009cfb         db  0xff ; '.'
0000000000009cfc         db  0xec ; '.'
0000000000009cfd         db  0xbf ; '.'
0000000000009cfe         db  0xff ; '.'
0000000000009cff         db  0xff ; '.'
0000000000009d00         db  0xec ; '.'
0000000000009d01         db  0xbf ; '.'
0000000000009d02         db  0xff ; '.'
0000000000009d03         db  0xff ; '.'
0000000000009d04         db  0xec ; '.'
0000000000009d05         db  0xbf ; '.'
0000000000009d06         db  0xff ; '.'
0000000000009d07         db  0xff ; '.'
0000000000009d08         db  0xec ; '.'
0000000000009d09         db  0xbf ; '.'
0000000000009d0a         db  0xff ; '.'
0000000000009d0b         db  0xff ; '.'
0000000000009d0c         db  0xec ; '.'
0000000000009d0d         db  0xbf ; '.'
0000000000009d0e         db  0xff ; '.'
0000000000009d0f         db  0xff ; '.'
0000000000009d10         db  0xec ; '.'
0000000000009d11         db  0xbf ; '.'
0000000000009d12         db  0xff ; '.'
0000000000009d13         db  0xff ; '.'
0000000000009d14         db  0xec ; '.'
0000000000009d15         db  0xbf ; '.'
0000000000009d16         db  0xff ; '.'
0000000000009d17         db  0xff ; '.'
0000000000009d18         db  0xec ; '.'
0000000000009d19         db  0xbf ; '.'
0000000000009d1a         db  0xff ; '.'
0000000000009d1b         db  0xff ; '.'
0000000000009d1c         db  0xec ; '.'
0000000000009d1d         db  0xbf ; '.'
0000000000009d1e         db  0xff ; '.'
0000000000009d1f         db  0xff ; '.'
0000000000009d20         db  0xec ; '.'
0000000000009d21         db  0xbf ; '.'
0000000000009d22         db  0xff ; '.'
0000000000009d23         db  0xff ; '.'
0000000000009d24         db  0xec ; '.'
0000000000009d25         db  0xbf ; '.'
0000000000009d26         db  0xff ; '.'
0000000000009d27         db  0xff ; '.'
0000000000009d28         db  0xec ; '.'
0000000000009d29         db  0xbf ; '.'
0000000000009d2a         db  0xff ; '.'
0000000000009d2b         db  0xff ; '.'
0000000000009d2c         db  0x94 ; '.'
0000000000009d2d         db  0xbf ; '.'
0000000000009d2e         db  0xff ; '.'
0000000000009d2f         db  0xff ; '.'
0000000000009d30         db  0x84 ; '.'
0000000000009d31         db  0xbf ; '.'
0000000000009d32         db  0xff ; '.'
0000000000009d33         db  0xff ; '.'
0000000000009d34         db  0x84 ; '.'
0000000000009d35         db  0xbf ; '.'
0000000000009d36         db  0xff ; '.'
0000000000009d37         db  0xff ; '.'
0000000000009d38         db  0x54 ; 'T'
0000000000009d39         db  0xbf ; '.'
0000000000009d3a         db  0xff ; '.'
0000000000009d3b         db  0xff ; '.'
0000000000009d3c         db  0x84 ; '.'
0000000000009d3d         db  0xbf ; '.'
0000000000009d3e         db  0xff ; '.'
0000000000009d3f         db  0xff ; '.'
0000000000009d40         db  0x2c ; ','
0000000000009d41         db  0xbf ; '.'
0000000000009d42         db  0xff ; '.'
0000000000009d43         db  0xff ; '.'
0000000000009d44         db  0x84 ; '.'
0000000000009d45         db  0xbf ; '.'
0000000000009d46         db  0xff ; '.'
0000000000009d47         db  0xff ; '.'
0000000000009d48         db  0xe7 ; '.'
0000000000009d49         db  0xbd ; '.'
0000000000009d4a         db  0xff ; '.'
0000000000009d4b         db  0xff ; '.'
0000000000009d4c         db  0x84 ; '.'
0000000000009d4d         db  0xbf ; '.'
0000000000009d4e         db  0xff ; '.'
0000000000009d4f         db  0xff ; '.'
0000000000009d50         db  0x84 ; '.'
0000000000009d51         db  0xbf ; '.'
0000000000009d52         db  0xff ; '.'
0000000000009d53         db  0xff ; '.'
0000000000009d54         db  0x84 ; '.'
0000000000009d55         db  0xbf ; '.'
0000000000009d56         db  0xff ; '.'
0000000000009d57         db  0xff ; '.'
0000000000009d58         db  0x2c ; ','
0000000000009d59         db  0xbf ; '.'
0000000000009d5a         db  0xff ; '.'
0000000000009d5b         db  0xff ; '.'
0000000000009d5c         db  0x2c ; ','
0000000000009d5d         db  0xbf ; '.'
0000000000009d5e         db  0xff ; '.'
0000000000009d5f         db  0xff ; '.'
0000000000009d60         db  0x2c ; ','
0000000000009d61         db  0xbf ; '.'
0000000000009d62         db  0xff ; '.'
0000000000009d63         db  0xff ; '.'
0000000000009d64         db  0x2c ; ','
0000000000009d65         db  0xbf ; '.'
0000000000009d66         db  0xff ; '.'
0000000000009d67         db  0xff ; '.'
0000000000009d68         db  0x2c ; ','
0000000000009d69         db  0xbf ; '.'
0000000000009d6a         db  0xff ; '.'
0000000000009d6b         db  0xff ; '.'
0000000000009d6c         db  0x2c ; ','
0000000000009d6d         db  0xbf ; '.'
0000000000009d6e         db  0xff ; '.'
0000000000009d6f         db  0xff ; '.'
0000000000009d70         db  0x2c ; ','
0000000000009d71         db  0xbf ; '.'
0000000000009d72         db  0xff ; '.'
0000000000009d73         db  0xff ; '.'
0000000000009d74         db  0x2c ; ','
0000000000009d75         db  0xbf ; '.'
0000000000009d76         db  0xff ; '.'
0000000000009d77         db  0xff ; '.'
0000000000009d78         db  0x2c ; ','
0000000000009d79         db  0xbf ; '.'
0000000000009d7a         db  0xff ; '.'
0000000000009d7b         db  0xff ; '.'
0000000000009d7c         db  0x2c ; ','
0000000000009d7d         db  0xbf ; '.'
0000000000009d7e         db  0xff ; '.'
0000000000009d7f         db  0xff ; '.'
0000000000009d80         db  0x2c ; ','
0000000000009d81         db  0xbf ; '.'
0000000000009d82         db  0xff ; '.'
0000000000009d83         db  0xff ; '.'
0000000000009d84         db  0x2c ; ','
0000000000009d85         db  0xbf ; '.'
0000000000009d86         db  0xff ; '.'
0000000000009d87         db  0xff ; '.'
0000000000009d88         db  0x2c ; ','
0000000000009d89         db  0xbf ; '.'
0000000000009d8a         db  0xff ; '.'
0000000000009d8b         db  0xff ; '.'
0000000000009d8c         db  0x2c ; ','
0000000000009d8d         db  0xbf ; '.'
0000000000009d8e         db  0xff ; '.'
0000000000009d8f         db  0xff ; '.'
0000000000009d90         db  0x2c ; ','
0000000000009d91         db  0xbf ; '.'
0000000000009d92         db  0xff ; '.'
0000000000009d93         db  0xff ; '.'
0000000000009d94         db  0x2c ; ','
0000000000009d95         db  0xbf ; '.'
0000000000009d96         db  0xff ; '.'
0000000000009d97         db  0xff ; '.'
0000000000009d98         db  0x84 ; '.'
0000000000009d99         db  0xbf ; '.'
0000000000009d9a         db  0xff ; '.'
0000000000009d9b         db  0xff ; '.'
0000000000009d9c         db  0x84 ; '.'
0000000000009d9d         db  0xbf ; '.'
0000000000009d9e         db  0xff ; '.'
0000000000009d9f         db  0xff ; '.'
0000000000009da0         db  0x84 ; '.'
0000000000009da1         db  0xbf ; '.'
0000000000009da2         db  0xff ; '.'
0000000000009da3         db  0xff ; '.'
0000000000009da4         db  0x84 ; '.'
0000000000009da5         db  0xbf ; '.'
0000000000009da6         db  0xff ; '.'
0000000000009da7         db  0xff ; '.'
0000000000009da8         db  0xb7 ; '.'
0000000000009da9         db  0xbd ; '.'
0000000000009daa         db  0xff ; '.'
0000000000009dab         db  0xff ; '.'
0000000000009dac         db  0xec ; '.'
0000000000009dad         db  0xbf ; '.'
0000000000009dae         db  0xff ; '.'
0000000000009daf         db  0xff ; '.'
0000000000009db0         db  0x2c ; ','
0000000000009db1         db  0xbf ; '.'
0000000000009db2         db  0xff ; '.'
0000000000009db3         db  0xff ; '.'
0000000000009db4         db  0x2c ; ','
0000000000009db5         db  0xbf ; '.'
0000000000009db6         db  0xff ; '.'
0000000000009db7         db  0xff ; '.'
0000000000009db8         db  0x2c ; ','
0000000000009db9         db  0xbf ; '.'
0000000000009dba         db  0xff ; '.'
0000000000009dbb         db  0xff ; '.'
0000000000009dbc         db  0x2c ; ','
0000000000009dbd         db  0xbf ; '.'
0000000000009dbe         db  0xff ; '.'
0000000000009dbf         db  0xff ; '.'
0000000000009dc0         db  0x2c ; ','
0000000000009dc1         db  0xbf ; '.'
0000000000009dc2         db  0xff ; '.'
0000000000009dc3         db  0xff ; '.'
0000000000009dc4         db  0x2c ; ','
0000000000009dc5         db  0xbf ; '.'
0000000000009dc6         db  0xff ; '.'
0000000000009dc7         db  0xff ; '.'
0000000000009dc8         db  0x2c ; ','
0000000000009dc9         db  0xbf ; '.'
0000000000009dca         db  0xff ; '.'
0000000000009dcb         db  0xff ; '.'
0000000000009dcc         db  0x2c ; ','
0000000000009dcd         db  0xbf ; '.'
0000000000009dce         db  0xff ; '.'
0000000000009dcf         db  0xff ; '.'
0000000000009dd0         db  0x2c ; ','
0000000000009dd1         db  0xbf ; '.'
0000000000009dd2         db  0xff ; '.'
0000000000009dd3         db  0xff ; '.'
0000000000009dd4         db  0x2c ; ','
0000000000009dd5         db  0xbf ; '.'
0000000000009dd6         db  0xff ; '.'
0000000000009dd7         db  0xff ; '.'
0000000000009dd8         db  0x2c ; ','
0000000000009dd9         db  0xbf ; '.'
0000000000009dda         db  0xff ; '.'
0000000000009ddb         db  0xff ; '.'
0000000000009ddc         db  0x2c ; ','
0000000000009ddd         db  0xbf ; '.'
0000000000009dde         db  0xff ; '.'
0000000000009ddf         db  0xff ; '.'
0000000000009de0         db  0x2c ; ','
0000000000009de1         db  0xbf ; '.'
0000000000009de2         db  0xff ; '.'
0000000000009de3         db  0xff ; '.'
0000000000009de4         db  0x2c ; ','
0000000000009de5         db  0xbf ; '.'
0000000000009de6         db  0xff ; '.'
0000000000009de7         db  0xff ; '.'
0000000000009de8         db  0x2c ; ','
0000000000009de9         db  0xbf ; '.'
0000000000009dea         db  0xff ; '.'
0000000000009deb         db  0xff ; '.'
0000000000009dec         db  0x2c ; ','
0000000000009ded         db  0xbf ; '.'
0000000000009dee         db  0xff ; '.'
0000000000009def         db  0xff ; '.'
0000000000009df0         db  0x2c ; ','
0000000000009df1         db  0xbf ; '.'
0000000000009df2         db  0xff ; '.'
0000000000009df3         db  0xff ; '.'
0000000000009df4         db  0x2c ; ','
0000000000009df5         db  0xbf ; '.'
0000000000009df6         db  0xff ; '.'
0000000000009df7         db  0xff ; '.'
0000000000009df8         db  0x2c ; ','
0000000000009df9         db  0xbf ; '.'
0000000000009dfa         db  0xff ; '.'
0000000000009dfb         db  0xff ; '.'
0000000000009dfc         db  0x2c ; ','
0000000000009dfd         db  0xbf ; '.'
0000000000009dfe         db  0xff ; '.'
0000000000009dff         db  0xff ; '.'
0000000000009e00         db  0x2c ; ','
0000000000009e01         db  0xbf ; '.'
0000000000009e02         db  0xff ; '.'
0000000000009e03         db  0xff ; '.'
0000000000009e04         db  0x2c ; ','
0000000000009e05         db  0xbf ; '.'
0000000000009e06         db  0xff ; '.'
0000000000009e07         db  0xff ; '.'
0000000000009e08         db  0x2c ; ','
0000000000009e09         db  0xbf ; '.'
0000000000009e0a         db  0xff ; '.'
0000000000009e0b         db  0xff ; '.'
0000000000009e0c         db  0x2c ; ','
0000000000009e0d         db  0xbf ; '.'
0000000000009e0e         db  0xff ; '.'
0000000000009e0f         db  0xff ; '.'
0000000000009e10         db  0x2c ; ','
0000000000009e11         db  0xbf ; '.'
0000000000009e12         db  0xff ; '.'
0000000000009e13         db  0xff ; '.'
0000000000009e14         db  0x2c ; ','
0000000000009e15         db  0xbf ; '.'
0000000000009e16         db  0xff ; '.'
0000000000009e17         db  0xff ; '.'
0000000000009e18         db  0x84 ; '.'
0000000000009e19         db  0xbf ; '.'
0000000000009e1a         db  0xff ; '.'
0000000000009e1b         db  0xff ; '.'
0000000000009e1c         db  0x5c ; '\'
0000000000009e1d         db  0xbe ; '.'
0000000000009e1e         db  0xff ; '.'
0000000000009e1f         db  0xff ; '.'
0000000000009e20         db  0x2c ; ','
0000000000009e21         db  0xbf ; '.'
0000000000009e22         db  0xff ; '.'
0000000000009e23         db  0xff ; '.'
0000000000009e24         db  0x84 ; '.'
0000000000009e25         db  0xbf ; '.'
0000000000009e26         db  0xff ; '.'
0000000000009e27         db  0xff ; '.'
0000000000009e28         db  0x2c ; ','
0000000000009e29         db  0xbf ; '.'
0000000000009e2a         db  0xff ; '.'
0000000000009e2b         db  0xff ; '.'
0000000000009e2c         db  0x84 ; '.'
0000000000009e2d         db  0xbf ; '.'
0000000000009e2e         db  0xff ; '.'
0000000000009e2f         db  0xff ; '.'
0000000000009e30         db  0x2c ; ','
0000000000009e31         db  0xbf ; '.'
0000000000009e32         db  0xff ; '.'
0000000000009e33         db  0xff ; '.'
0000000000009e34         db  0x2c ; ','
0000000000009e35         db  0xbf ; '.'
0000000000009e36         db  0xff ; '.'
0000000000009e37         db  0xff ; '.'
0000000000009e38         db  0x2c ; ','
0000000000009e39         db  0xbf ; '.'
0000000000009e3a         db  0xff ; '.'
0000000000009e3b         db  0xff ; '.'
0000000000009e3c         db  0x2c ; ','
0000000000009e3d         db  0xbf ; '.'
0000000000009e3e         db  0xff ; '.'
0000000000009e3f         db  0xff ; '.'
0000000000009e40         db  0x2c ; ','
0000000000009e41         db  0xbf ; '.'
0000000000009e42         db  0xff ; '.'
0000000000009e43         db  0xff ; '.'
0000000000009e44         db  0x2c ; ','
0000000000009e45         db  0xbf ; '.'
0000000000009e46         db  0xff ; '.'
0000000000009e47         db  0xff ; '.'
0000000000009e48         db  0x2c ; ','
0000000000009e49         db  0xbf ; '.'
0000000000009e4a         db  0xff ; '.'
0000000000009e4b         db  0xff ; '.'
0000000000009e4c         db  0x2c ; ','
0000000000009e4d         db  0xbf ; '.'
0000000000009e4e         db  0xff ; '.'
0000000000009e4f         db  0xff ; '.'
0000000000009e50         db  0x2c ; ','
0000000000009e51         db  0xbf ; '.'
0000000000009e52         db  0xff ; '.'
0000000000009e53         db  0xff ; '.'
0000000000009e54         db  0x2c ; ','
0000000000009e55         db  0xbf ; '.'
0000000000009e56         db  0xff ; '.'
0000000000009e57         db  0xff ; '.'
0000000000009e58         db  0x2c ; ','
0000000000009e59         db  0xbf ; '.'
0000000000009e5a         db  0xff ; '.'
0000000000009e5b         db  0xff ; '.'
0000000000009e5c         db  0x2c ; ','
0000000000009e5d         db  0xbf ; '.'
0000000000009e5e         db  0xff ; '.'
0000000000009e5f         db  0xff ; '.'
0000000000009e60         db  0x2c ; ','
0000000000009e61         db  0xbf ; '.'
0000000000009e62         db  0xff ; '.'
0000000000009e63         db  0xff ; '.'
0000000000009e64         db  0x2c ; ','
0000000000009e65         db  0xbf ; '.'
0000000000009e66         db  0xff ; '.'
0000000000009e67         db  0xff ; '.'
0000000000009e68         db  0x2c ; ','
0000000000009e69         db  0xbf ; '.'
0000000000009e6a         db  0xff ; '.'
0000000000009e6b         db  0xff ; '.'
0000000000009e6c         db  0x2c ; ','
0000000000009e6d         db  0xbf ; '.'
0000000000009e6e         db  0xff ; '.'
0000000000009e6f         db  0xff ; '.'
0000000000009e70         db  0x2c ; ','
0000000000009e71         db  0xbf ; '.'
0000000000009e72         db  0xff ; '.'
0000000000009e73         db  0xff ; '.'
0000000000009e74         db  0x2c ; ','
0000000000009e75         db  0xbf ; '.'
0000000000009e76         db  0xff ; '.'
0000000000009e77         db  0xff ; '.'
0000000000009e78         db  0x2c ; ','
0000000000009e79         db  0xbf ; '.'
0000000000009e7a         db  0xff ; '.'
0000000000009e7b         db  0xff ; '.'
0000000000009e7c         db  0x2c ; ','
0000000000009e7d         db  0xbf ; '.'
0000000000009e7e         db  0xff ; '.'
0000000000009e7f         db  0xff ; '.'
0000000000009e80         db  0x2c ; ','
0000000000009e81         db  0xbf ; '.'
0000000000009e82         db  0xff ; '.'
0000000000009e83         db  0xff ; '.'
0000000000009e84         db  0x2c ; ','
0000000000009e85         db  0xbf ; '.'
0000000000009e86         db  0xff ; '.'
0000000000009e87         db  0xff ; '.'
0000000000009e88         db  0x2c ; ','
0000000000009e89         db  0xbf ; '.'
0000000000009e8a         db  0xff ; '.'
0000000000009e8b         db  0xff ; '.'
0000000000009e8c         db  0x2c ; ','
0000000000009e8d         db  0xbf ; '.'
0000000000009e8e         db  0xff ; '.'
0000000000009e8f         db  0xff ; '.'
0000000000009e90         db  0x2c ; ','
0000000000009e91         db  0xbf ; '.'
0000000000009e92         db  0xff ; '.'
0000000000009e93         db  0xff ; '.'
0000000000009e94         db  0x2c ; ','
0000000000009e95         db  0xbf ; '.'
0000000000009e96         db  0xff ; '.'
0000000000009e97         db  0xff ; '.'
0000000000009e98         db  0xe7 ; '.'
0000000000009e99         db  0xbc ; '.'
0000000000009e9a         db  0xff ; '.'
0000000000009e9b         db  0xff ; '.'
0000000000009e9c         db  0x84 ; '.'
0000000000009e9d         db  0xbf ; '.'
0000000000009e9e         db  0xff ; '.'
0000000000009e9f         db  0xff ; '.'
0000000000009ea0         db  0xe7 ; '.'
0000000000009ea1         db  0xbc ; '.'
0000000000009ea2         db  0xff ; '.'
0000000000009ea3         db  0xff ; '.'
0000000000009ea4         db  0x54 ; 'T'
0000000000009ea5         db  0xbf ; '.'
0000000000009ea6         db  0xff ; '.'
0000000000009ea7         db  0xff ; '.'
0000000000009ea8         db  0xd8 ; '.'                                         ; DATA XREF=sub_5c80+137
0000000000009ea9         db  0xbe ; '.'
0000000000009eaa         db  0xff ; '.'
0000000000009eab         db  0xff ; '.'
0000000000009eac         db  0xe8 ; '.'
0000000000009ead         db  0xbd ; '.'
0000000000009eae         db  0xff ; '.'
0000000000009eaf         db  0xff ; '.'
0000000000009eb0         db  0xe8 ; '.'
0000000000009eb1         db  0xbd ; '.'
0000000000009eb2         db  0xff ; '.'
0000000000009eb3         db  0xff ; '.'
0000000000009eb4         db  0xe8 ; '.'
0000000000009eb5         db  0xbd ; '.'
0000000000009eb6         db  0xff ; '.'
0000000000009eb7         db  0xff ; '.'
0000000000009eb8         db  0xe8 ; '.'
0000000000009eb9         db  0xbd ; '.'
0000000000009eba         db  0xff ; '.'
0000000000009ebb         db  0xff ; '.'
0000000000009ebc         db  0xe8 ; '.'
0000000000009ebd         db  0xbd ; '.'
0000000000009ebe         db  0xff ; '.'
0000000000009ebf         db  0xff ; '.'
0000000000009ec0         db  0xe8 ; '.'
0000000000009ec1         db  0xbd ; '.'
0000000000009ec2         db  0xff ; '.'
0000000000009ec3         db  0xff ; '.'
0000000000009ec4         db  0xc8 ; '.'
0000000000009ec5         db  0xbe ; '.'
0000000000009ec6         db  0xff ; '.'
0000000000009ec7         db  0xff ; '.'
0000000000009ec8         db  0x18 ; '.'
0000000000009ec9         db  0xc0 ; '.'
0000000000009eca         db  0xff ; '.'
0000000000009ecb         db  0xff ; '.'
0000000000009ecc         db  0x00 ; '.'
0000000000009ecd         db  0xc0 ; '.'
0000000000009ece         db  0xff ; '.'
0000000000009ecf         db  0xff ; '.'
0000000000009ed0         db  0xb0 ; '.'
0000000000009ed1         db  0xbe ; '.'
0000000000009ed2         db  0xff ; '.'
0000000000009ed3         db  0xff ; '.'
0000000000009ed4         db  0xf0 ; '.'
0000000000009ed5         db  0xbf ; '.'
0000000000009ed6         db  0xff ; '.'
0000000000009ed7         db  0xff ; '.'
0000000000009ed8         db  0x98 ; '.'
0000000000009ed9         db  0xbe ; '.'
0000000000009eda         db  0xff ; '.'
0000000000009edb         db  0xff ; '.'
0000000000009edc         db  0xd8 ; '.'
0000000000009edd         db  0xbf ; '.'
0000000000009ede         db  0xff ; '.'
0000000000009edf         db  0xff ; '.'
0000000000009ee0         db  0xe8 ; '.'
0000000000009ee1         db  0xbd ; '.'
0000000000009ee2         db  0xff ; '.'
0000000000009ee3         db  0xff ; '.'
0000000000009ee4         db  0xe8 ; '.'
0000000000009ee5         db  0xbd ; '.'
0000000000009ee6         db  0xff ; '.'
0000000000009ee7         db  0xff ; '.'
0000000000009ee8         db  0xe8 ; '.'
0000000000009ee9         db  0xbd ; '.'
0000000000009eea         db  0xff ; '.'
0000000000009eeb         db  0xff ; '.'
0000000000009eec         db  0xe8 ; '.'
0000000000009eed         db  0xbd ; '.'
0000000000009eee         db  0xff ; '.'
0000000000009eef         db  0xff ; '.'
0000000000009ef0         db  0xe8 ; '.'
0000000000009ef1         db  0xbd ; '.'
0000000000009ef2         db  0xff ; '.'
0000000000009ef3         db  0xff ; '.'
0000000000009ef4         db  0xe8 ; '.'
0000000000009ef5         db  0xbd ; '.'
0000000000009ef6         db  0xff ; '.'
0000000000009ef7         db  0xff ; '.'
0000000000009ef8         db  0xe8 ; '.'
0000000000009ef9         db  0xbd ; '.'
0000000000009efa         db  0xff ; '.'
0000000000009efb         db  0xff ; '.'
0000000000009efc         db  0xe8 ; '.'
0000000000009efd         db  0xbd ; '.'
0000000000009efe         db  0xff ; '.'
0000000000009eff         db  0xff ; '.'
0000000000009f00         db  0xe8 ; '.'
0000000000009f01         db  0xbd ; '.'
0000000000009f02         db  0xff ; '.'
0000000000009f03         db  0xff ; '.'
0000000000009f04         db  0xe8 ; '.'
0000000000009f05         db  0xbd ; '.'
0000000000009f06         db  0xff ; '.'
0000000000009f07         db  0xff ; '.'
0000000000009f08         db  0xe8 ; '.'
0000000000009f09         db  0xbd ; '.'
0000000000009f0a         db  0xff ; '.'
0000000000009f0b         db  0xff ; '.'
0000000000009f0c         db  0xe8 ; '.'
0000000000009f0d         db  0xbd ; '.'
0000000000009f0e         db  0xff ; '.'
0000000000009f0f         db  0xff ; '.'
0000000000009f10         db  0xe8 ; '.'
0000000000009f11         db  0xbd ; '.'
0000000000009f12         db  0xff ; '.'
0000000000009f13         db  0xff ; '.'
0000000000009f14         db  0xe8 ; '.'
0000000000009f15         db  0xbd ; '.'
0000000000009f16         db  0xff ; '.'
0000000000009f17         db  0xff ; '.'
0000000000009f18         db  0xe8 ; '.'
0000000000009f19         db  0xbd ; '.'
0000000000009f1a         db  0xff ; '.'
0000000000009f1b         db  0xff ; '.'
0000000000009f1c         db  0xe8 ; '.'
0000000000009f1d         db  0xbd ; '.'
0000000000009f1e         db  0xff ; '.'
0000000000009f1f         db  0xff ; '.'
0000000000009f20         db  0xe8 ; '.'
0000000000009f21         db  0xbd ; '.'
0000000000009f22         db  0xff ; '.'
0000000000009f23         db  0xff ; '.'
0000000000009f24         db  0xe8 ; '.'
0000000000009f25         db  0xbd ; '.'
0000000000009f26         db  0xff ; '.'
0000000000009f27         db  0xff ; '.'
0000000000009f28         db  0xc0 ; '.'
0000000000009f29         db  0xbf ; '.'
0000000000009f2a         db  0xff ; '.'
0000000000009f2b         db  0xff ; '.'
0000000000009f2c         db  0xa8 ; '.'
0000000000009f2d         db  0xbf ; '.'
0000000000009f2e         db  0xff ; '.'
0000000000009f2f         db  0xff ; '.'
0000000000009f30         db  0xa8 ; '.'
0000000000009f31         db  0xbf ; '.'
0000000000009f32         db  0xff ; '.'
0000000000009f33         db  0xff ; '.'
0000000000009f34         db  0x90 ; '.'
0000000000009f35         db  0xbf ; '.'
0000000000009f36         db  0xff ; '.'
0000000000009f37         db  0xff ; '.'
0000000000009f38         db  0xa8 ; '.'
0000000000009f39         db  0xbf ; '.'
0000000000009f3a         db  0xff ; '.'
0000000000009f3b         db  0xff ; '.'
0000000000009f3c         db  0x78 ; 'x'
0000000000009f3d         db  0xbf ; '.'
0000000000009f3e         db  0xff ; '.'
0000000000009f3f         db  0xff ; '.'
0000000000009f40         db  0xa8 ; '.'
0000000000009f41         db  0xbf ; '.'
0000000000009f42         db  0xff ; '.'
0000000000009f43         db  0xff ; '.'
0000000000009f44         db  0xe8 ; '.'
0000000000009f45         db  0xbb ; '.'
0000000000009f46         db  0xff ; '.'
0000000000009f47         db  0xff ; '.'
0000000000009f48         db  0xa8 ; '.'
0000000000009f49         db  0xbf ; '.'
0000000000009f4a         db  0xff ; '.'
0000000000009f4b         db  0xff ; '.'
0000000000009f4c         db  0xa8 ; '.'
0000000000009f4d         db  0xbf ; '.'
0000000000009f4e         db  0xff ; '.'
0000000000009f4f         db  0xff ; '.'
0000000000009f50         db  0xa8 ; '.'
0000000000009f51         db  0xbf ; '.'
0000000000009f52         db  0xff ; '.'
0000000000009f53         db  0xff ; '.'
0000000000009f54         db  0x78 ; 'x'
0000000000009f55         db  0xbf ; '.'
0000000000009f56         db  0xff ; '.'
0000000000009f57         db  0xff ; '.'
0000000000009f58         db  0x78 ; 'x'
0000000000009f59         db  0xbf ; '.'
0000000000009f5a         db  0xff ; '.'
0000000000009f5b         db  0xff ; '.'
0000000000009f5c         db  0x78 ; 'x'
0000000000009f5d         db  0xbf ; '.'
0000000000009f5e         db  0xff ; '.'
0000000000009f5f         db  0xff ; '.'
0000000000009f60         db  0x78 ; 'x'
0000000000009f61         db  0xbf ; '.'
0000000000009f62         db  0xff ; '.'
0000000000009f63         db  0xff ; '.'
0000000000009f64         db  0x78 ; 'x'
0000000000009f65         db  0xbf ; '.'
0000000000009f66         db  0xff ; '.'
0000000000009f67         db  0xff ; '.'
0000000000009f68         db  0x78 ; 'x'
0000000000009f69         db  0xbf ; '.'
0000000000009f6a         db  0xff ; '.'
0000000000009f6b         db  0xff ; '.'
0000000000009f6c         db  0x78 ; 'x'
0000000000009f6d         db  0xbf ; '.'
0000000000009f6e         db  0xff ; '.'
0000000000009f6f         db  0xff ; '.'
0000000000009f70         db  0x78 ; 'x'
0000000000009f71         db  0xbf ; '.'
0000000000009f72         db  0xff ; '.'
0000000000009f73         db  0xff ; '.'
0000000000009f74         db  0x78 ; 'x'
0000000000009f75         db  0xbf ; '.'
0000000000009f76         db  0xff ; '.'
0000000000009f77         db  0xff ; '.'
0000000000009f78         db  0x78 ; 'x'
0000000000009f79         db  0xbf ; '.'
0000000000009f7a         db  0xff ; '.'
0000000000009f7b         db  0xff ; '.'
0000000000009f7c         db  0x78 ; 'x'
0000000000009f7d         db  0xbf ; '.'
0000000000009f7e         db  0xff ; '.'
0000000000009f7f         db  0xff ; '.'
0000000000009f80         db  0x78 ; 'x'
0000000000009f81         db  0xbf ; '.'
0000000000009f82         db  0xff ; '.'
0000000000009f83         db  0xff ; '.'
0000000000009f84         db  0x78 ; 'x'
0000000000009f85         db  0xbf ; '.'
0000000000009f86         db  0xff ; '.'
0000000000009f87         db  0xff ; '.'
0000000000009f88         db  0x78 ; 'x'
0000000000009f89         db  0xbf ; '.'
0000000000009f8a         db  0xff ; '.'
0000000000009f8b         db  0xff ; '.'
0000000000009f8c         db  0x78 ; 'x'
0000000000009f8d         db  0xbf ; '.'
0000000000009f8e         db  0xff ; '.'
0000000000009f8f         db  0xff ; '.'
0000000000009f90         db  0x78 ; 'x'
0000000000009f91         db  0xbf ; '.'
0000000000009f92         db  0xff ; '.'
0000000000009f93         db  0xff ; '.'
0000000000009f94         db  0xa8 ; '.'
0000000000009f95         db  0xbf ; '.'
0000000000009f96         db  0xff ; '.'
0000000000009f97         db  0xff ; '.'
0000000000009f98         db  0xa8 ; '.'
0000000000009f99         db  0xbf ; '.'
0000000000009f9a         db  0xff ; '.'
0000000000009f9b         db  0xff ; '.'
0000000000009f9c         db  0xa8 ; '.'
0000000000009f9d         db  0xbf ; '.'
0000000000009f9e         db  0xff ; '.'
0000000000009f9f         db  0xff ; '.'
0000000000009fa0         db  0xa8 ; '.'
0000000000009fa1         db  0xbf ; '.'
0000000000009fa2         db  0xff ; '.'
0000000000009fa3         db  0xff ; '.'
0000000000009fa4         db  0xb8 ; '.'
0000000000009fa5         db  0xbb ; '.'
0000000000009fa6         db  0xff ; '.'
0000000000009fa7         db  0xff ; '.'
0000000000009fa8         db  0xe8 ; '.'
0000000000009fa9         db  0xbd ; '.'
0000000000009faa         db  0xff ; '.'
0000000000009fab         db  0xff ; '.'
0000000000009fac         db  0x78 ; 'x'
0000000000009fad         db  0xbf ; '.'
0000000000009fae         db  0xff ; '.'
0000000000009faf         db  0xff ; '.'
0000000000009fb0         db  0x78 ; 'x'
0000000000009fb1         db  0xbf ; '.'
0000000000009fb2         db  0xff ; '.'
0000000000009fb3         db  0xff ; '.'
0000000000009fb4         db  0x78 ; 'x'
0000000000009fb5         db  0xbf ; '.'
0000000000009fb6         db  0xff ; '.'
0000000000009fb7         db  0xff ; '.'
0000000000009fb8         db  0x78 ; 'x'
0000000000009fb9         db  0xbf ; '.'
0000000000009fba         db  0xff ; '.'
0000000000009fbb         db  0xff ; '.'
0000000000009fbc         db  0x78 ; 'x'
0000000000009fbd         db  0xbf ; '.'
0000000000009fbe         db  0xff ; '.'
0000000000009fbf         db  0xff ; '.'
0000000000009fc0         db  0x78 ; 'x'
0000000000009fc1         db  0xbf ; '.'
0000000000009fc2         db  0xff ; '.'
0000000000009fc3         db  0xff ; '.'
0000000000009fc4         db  0x78 ; 'x'
0000000000009fc5         db  0xbf ; '.'
0000000000009fc6         db  0xff ; '.'
0000000000009fc7         db  0xff ; '.'
0000000000009fc8         db  0x78 ; 'x'
0000000000009fc9         db  0xbf ; '.'
0000000000009fca         db  0xff ; '.'
0000000000009fcb         db  0xff ; '.'
0000000000009fcc         db  0x78 ; 'x'
0000000000009fcd         db  0xbf ; '.'
0000000000009fce         db  0xff ; '.'
0000000000009fcf         db  0xff ; '.'
0000000000009fd0         db  0x78 ; 'x'
0000000000009fd1         db  0xbf ; '.'
0000000000009fd2         db  0xff ; '.'
0000000000009fd3         db  0xff ; '.'
0000000000009fd4         db  0x78 ; 'x'
0000000000009fd5         db  0xbf ; '.'
0000000000009fd6         db  0xff ; '.'
0000000000009fd7         db  0xff ; '.'
0000000000009fd8         db  0x78 ; 'x'
0000000000009fd9         db  0xbf ; '.'
0000000000009fda         db  0xff ; '.'
0000000000009fdb         db  0xff ; '.'
0000000000009fdc         db  0x78 ; 'x'
0000000000009fdd         db  0xbf ; '.'
0000000000009fde         db  0xff ; '.'
0000000000009fdf         db  0xff ; '.'
0000000000009fe0         db  0x78 ; 'x'
0000000000009fe1         db  0xbf ; '.'
0000000000009fe2         db  0xff ; '.'
0000000000009fe3         db  0xff ; '.'
0000000000009fe4         db  0x78 ; 'x'
0000000000009fe5         db  0xbf ; '.'
0000000000009fe6         db  0xff ; '.'
0000000000009fe7         db  0xff ; '.'
0000000000009fe8         db  0x78 ; 'x'
0000000000009fe9         db  0xbf ; '.'
0000000000009fea         db  0xff ; '.'
0000000000009feb         db  0xff ; '.'
0000000000009fec         db  0x78 ; 'x'
0000000000009fed         db  0xbf ; '.'
0000000000009fee         db  0xff ; '.'
0000000000009fef         db  0xff ; '.'
0000000000009ff0         db  0x78 ; 'x'
0000000000009ff1         db  0xbf ; '.'
0000000000009ff2         db  0xff ; '.'
0000000000009ff3         db  0xff ; '.'
0000000000009ff4         db  0x78 ; 'x'
0000000000009ff5         db  0xbf ; '.'
0000000000009ff6         db  0xff ; '.'
0000000000009ff7         db  0xff ; '.'
0000000000009ff8         db  0x78 ; 'x'
0000000000009ff9         db  0xbf ; '.'
0000000000009ffa         db  0xff ; '.'
0000000000009ffb         db  0xff ; '.'
0000000000009ffc         db  0x78 ; 'x'
0000000000009ffd         db  0xbf ; '.'
0000000000009ffe         db  0xff ; '.'
0000000000009fff         db  0xff ; '.'
000000000000a000         db  0x78 ; 'x'
000000000000a001         db  0xbf ; '.'
000000000000a002         db  0xff ; '.'
000000000000a003         db  0xff ; '.'
000000000000a004         db  0x78 ; 'x'
000000000000a005         db  0xbf ; '.'
000000000000a006         db  0xff ; '.'
000000000000a007         db  0xff ; '.'
000000000000a008         db  0x78 ; 'x'
000000000000a009         db  0xbf ; '.'
000000000000a00a         db  0xff ; '.'
000000000000a00b         db  0xff ; '.'
000000000000a00c         db  0x78 ; 'x'
000000000000a00d         db  0xbf ; '.'
000000000000a00e         db  0xff ; '.'
000000000000a00f         db  0xff ; '.'
000000000000a010         db  0x78 ; 'x'
000000000000a011         db  0xbf ; '.'
000000000000a012         db  0xff ; '.'
000000000000a013         db  0xff ; '.'
000000000000a014         db  0xa8 ; '.'
000000000000a015         db  0xbf ; '.'
000000000000a016         db  0xff ; '.'
000000000000a017         db  0xff ; '.'
000000000000a018         db  0x78 ; 'x'
000000000000a019         db  0xbe ; '.'
000000000000a01a         db  0xff ; '.'
000000000000a01b         db  0xff ; '.'
000000000000a01c         db  0x78 ; 'x'
000000000000a01d         db  0xbf ; '.'
000000000000a01e         db  0xff ; '.'
000000000000a01f         db  0xff ; '.'
000000000000a020         db  0xa8 ; '.'
000000000000a021         db  0xbf ; '.'
000000000000a022         db  0xff ; '.'
000000000000a023         db  0xff ; '.'
000000000000a024         db  0x78 ; 'x'
000000000000a025         db  0xbf ; '.'
000000000000a026         db  0xff ; '.'
000000000000a027         db  0xff ; '.'
000000000000a028         db  0xa8 ; '.'
000000000000a029         db  0xbf ; '.'
000000000000a02a         db  0xff ; '.'
000000000000a02b         db  0xff ; '.'
000000000000a02c         db  0x78 ; 'x'
000000000000a02d         db  0xbf ; '.'
000000000000a02e         db  0xff ; '.'
000000000000a02f         db  0xff ; '.'
000000000000a030         db  0x78 ; 'x'
000000000000a031         db  0xbf ; '.'
000000000000a032         db  0xff ; '.'
000000000000a033         db  0xff ; '.'
000000000000a034         db  0x78 ; 'x'
000000000000a035         db  0xbf ; '.'
000000000000a036         db  0xff ; '.'
000000000000a037         db  0xff ; '.'
000000000000a038         db  0x78 ; 'x'
000000000000a039         db  0xbf ; '.'
000000000000a03a         db  0xff ; '.'
000000000000a03b         db  0xff ; '.'
000000000000a03c         db  0x78 ; 'x'
000000000000a03d         db  0xbf ; '.'
000000000000a03e         db  0xff ; '.'
000000000000a03f         db  0xff ; '.'
000000000000a040         db  0x78 ; 'x'
000000000000a041         db  0xbf ; '.'
000000000000a042         db  0xff ; '.'
000000000000a043         db  0xff ; '.'
000000000000a044         db  0x78 ; 'x'
000000000000a045         db  0xbf ; '.'
000000000000a046         db  0xff ; '.'
000000000000a047         db  0xff ; '.'
000000000000a048         db  0x78 ; 'x'
000000000000a049         db  0xbf ; '.'
000000000000a04a         db  0xff ; '.'
000000000000a04b         db  0xff ; '.'
000000000000a04c         db  0x78 ; 'x'
000000000000a04d         db  0xbf ; '.'
000000000000a04e         db  0xff ; '.'
000000000000a04f         db  0xff ; '.'
000000000000a050         db  0x78 ; 'x'
000000000000a051         db  0xbf ; '.'
000000000000a052         db  0xff ; '.'
000000000000a053         db  0xff ; '.'
000000000000a054         db  0x78 ; 'x'
000000000000a055         db  0xbf ; '.'
000000000000a056         db  0xff ; '.'
000000000000a057         db  0xff ; '.'
000000000000a058         db  0x78 ; 'x'
000000000000a059         db  0xbf ; '.'
000000000000a05a         db  0xff ; '.'
000000000000a05b         db  0xff ; '.'
000000000000a05c         db  0x78 ; 'x'
000000000000a05d         db  0xbf ; '.'
000000000000a05e         db  0xff ; '.'
000000000000a05f         db  0xff ; '.'
000000000000a060         db  0x78 ; 'x'
000000000000a061         db  0xbf ; '.'
000000000000a062         db  0xff ; '.'
000000000000a063         db  0xff ; '.'
000000000000a064         db  0x78 ; 'x'
000000000000a065         db  0xbf ; '.'
000000000000a066         db  0xff ; '.'
000000000000a067         db  0xff ; '.'
000000000000a068         db  0x78 ; 'x'
000000000000a069         db  0xbf ; '.'
000000000000a06a         db  0xff ; '.'
000000000000a06b         db  0xff ; '.'
000000000000a06c         db  0x78 ; 'x'
000000000000a06d         db  0xbf ; '.'
000000000000a06e         db  0xff ; '.'
000000000000a06f         db  0xff ; '.'
000000000000a070         db  0x78 ; 'x'
000000000000a071         db  0xbf ; '.'
000000000000a072         db  0xff ; '.'
000000000000a073         db  0xff ; '.'
000000000000a074         db  0x78 ; 'x'
000000000000a075         db  0xbf ; '.'
000000000000a076         db  0xff ; '.'
000000000000a077         db  0xff ; '.'
000000000000a078         db  0x78 ; 'x'
000000000000a079         db  0xbf ; '.'
000000000000a07a         db  0xff ; '.'
000000000000a07b         db  0xff ; '.'
000000000000a07c         db  0x78 ; 'x'
000000000000a07d         db  0xbf ; '.'
000000000000a07e         db  0xff ; '.'
000000000000a07f         db  0xff ; '.'
000000000000a080         db  0x78 ; 'x'
000000000000a081         db  0xbf ; '.'
000000000000a082         db  0xff ; '.'
000000000000a083         db  0xff ; '.'
000000000000a084         db  0x78 ; 'x'
000000000000a085         db  0xbf ; '.'
000000000000a086         db  0xff ; '.'
000000000000a087         db  0xff ; '.'
000000000000a088         db  0x78 ; 'x'
000000000000a089         db  0xbf ; '.'
000000000000a08a         db  0xff ; '.'
000000000000a08b         db  0xff ; '.'
000000000000a08c         db  0x78 ; 'x'
000000000000a08d         db  0xbf ; '.'
000000000000a08e         db  0xff ; '.'
000000000000a08f         db  0xff ; '.'
000000000000a090         db  0x78 ; 'x'
000000000000a091         db  0xbf ; '.'
000000000000a092         db  0xff ; '.'
000000000000a093         db  0xff ; '.'
000000000000a094         db  0xe8 ; '.'
000000000000a095         db  0xba ; '.'
000000000000a096         db  0xff ; '.'
000000000000a097         db  0xff ; '.'
000000000000a098         db  0xa8 ; '.'
000000000000a099         db  0xbf ; '.'
000000000000a09a         db  0xff ; '.'
000000000000a09b         db  0xff ; '.'
000000000000a09c         db  0xe8 ; '.'
000000000000a09d         db  0xba ; '.'
000000000000a09e         db  0xff ; '.'
000000000000a09f         db  0xff ; '.'
000000000000a0a0         db  0x90 ; '.'
000000000000a0a1         db  0xbf ; '.'
000000000000a0a2         db  0xff ; '.'
000000000000a0a3         db  0xff ; '.'
000000000000a0a4         db  0x00 ; '.'
000000000000a0a5         db  0x00 ; '.'
000000000000a0a6         db  0x00 ; '.'
000000000000a0a7         db  0x00 ; '.'
000000000000a0a8         db  0x00 ; '.'
000000000000a0a9         db  0x00 ; '.'
000000000000a0aa         db  0x00 ; '.'
000000000000a0ab         db  0x00 ; '.'
000000000000a0ac         db  0x00 ; '.'
000000000000a0ad         db  0x00 ; '.'
000000000000a0ae         db  0x00 ; '.'
000000000000a0af         db  0x00 ; '.'
000000000000a0b0         db  0x00 ; '.'
000000000000a0b1         db  0x00 ; '.'
000000000000a0b2         db  0x00 ; '.'
000000000000a0b3         db  0x00 ; '.'
000000000000a0b4         db  0x00 ; '.'
000000000000a0b5         db  0x00 ; '.'
000000000000a0b6         db  0x00 ; '.'
000000000000a0b7         db  0x00 ; '.'
000000000000a0b8         db  0x00 ; '.'
000000000000a0b9         db  0x00 ; '.'
000000000000a0ba         db  0x00 ; '.'
000000000000a0bb         db  0x00 ; '.'
000000000000a0bc         db  0x00 ; '.'
000000000000a0bd         db  0x00 ; '.'
000000000000a0be         db  0x00 ; '.'
000000000000a0bf         db  0x00 ; '.'
                     quoting_style_vals:
000000000000a0c0         db  0x00 ; '.'
000000000000a0c1         db  0x00 ; '.'
000000000000a0c2         db  0x00 ; '.'
000000000000a0c3         db  0x00 ; '.'
000000000000a0c4         db  0x01 ; '.'
000000000000a0c5         db  0x00 ; '.'
000000000000a0c6         db  0x00 ; '.'
000000000000a0c7         db  0x00 ; '.'
000000000000a0c8         db  0x02 ; '.'
000000000000a0c9         db  0x00 ; '.'
000000000000a0ca         db  0x00 ; '.'
000000000000a0cb         db  0x00 ; '.'
000000000000a0cc         db  0x03 ; '.'
000000000000a0cd         db  0x00 ; '.'
000000000000a0ce         db  0x00 ; '.'
000000000000a0cf         db  0x00 ; '.'
000000000000a0d0         db  0x04 ; '.'
000000000000a0d1         db  0x00 ; '.'
000000000000a0d2         db  0x00 ; '.'
000000000000a0d3         db  0x00 ; '.'
000000000000a0d4         db  0x05 ; '.'
000000000000a0d5         db  0x00 ; '.'
000000000000a0d6         db  0x00 ; '.'
000000000000a0d7         db  0x00 ; '.'
000000000000a0d8         db  0x06 ; '.'
000000000000a0d9         db  0x00 ; '.'
000000000000a0da         db  0x00 ; '.'
000000000000a0db         db  0x00 ; '.'
000000000000a0dc         db  0x07 ; '.'
000000000000a0dd         db  0x00 ; '.'
000000000000a0de         db  0x00 ; '.'
000000000000a0df         db  0x00 ; '.'
000000000000a0e0         db  0x08 ; '.'
000000000000a0e1         db  0x00 ; '.'
000000000000a0e2         db  0x00 ; '.'
000000000000a0e3         db  0x00 ; '.'
000000000000a0e4         db  0x09 ; '.'
000000000000a0e5         db  0x00 ; '.'
000000000000a0e6         db  0x00 ; '.'
000000000000a0e7         db  0x00 ; '.'
                     aSSSn:
000000000000a0e8         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
000000000000a0f4         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
000000000000a0fb         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
000000000000a0fc         db  0x43 ; 'C'
000000000000a0fd         db  0x29 ; ')'
000000000000a0fe         db  0x00 ; '.'
                     aWrittenBySn:
000000000000a0ff         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
000000000000a10f         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
000000000000a126         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
000000000000a142         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
000000000000a157         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
000000000000a16d         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
000000000000a181         align      8
                     aNlicenseGplv3G:
000000000000a188         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
000000000000a254         align      8
                     aWrittenBySSSna:
000000000000a258         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_a278:        // aWrittenBySSSns
000000000000a278         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
000000000000a29c         align      32
                     aWrittenBySSSns_a2a0:        // aWrittenBySSSns
000000000000a2a0         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_a2c8:        // aWrittenBySSSns
000000000000a2c8         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
000000000000a2f4         align      8
                     aWrittenBySSSns_a2f8:        // aWrittenBySSSns
000000000000a2f8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
000000000000a328         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
000000000000a35c         align      32
                     aWrittenBySSSns_a360:        // aWrittenBySSSns
000000000000a360         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
000000000000a39c         align      32
                     aGeneralHelpUsi:
000000000000a3a0         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
000000000000a3e1         align      4
                     switch_table_a3e4:        // switch_table
000000000000a3e4         dd         version_etc_arn.loc_7566-switch_table_a3e4, version_etc_arn.loc_75f8-switch_table_a3e4, version_etc_arn.loc_7638-switch_table_a3e4, version_etc_arn.loc_7680-switch_table_a3e4 ; switch table used at 0x74e4 containing 10 entries, DATA XREF=version_etc_arn+150
000000000000a3f4         dd         version_etc_arn.loc_76d0-switch_table_a3e4, version_etc_arn.loc_7728-switch_table_a3e4, version_etc_arn.loc_7758-switch_table_a3e4, version_etc_arn.loc_77c0-switch_table_a3e4
000000000000a404         dd         version_etc_arn.loc_74f0-switch_table_a3e4, version_etc_arn.loc_75a0-switch_table_a3e4
000000000000a40c         align      32
                     version_etc_copyright:
000000000000a420         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
000000000000a44f         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
                     aCoreutils831li:
000000000000a460         db         "../coreutils-8.31/lib/xstrtol.c", 0        ; DATA XREF=xstrtoumax+908
                     a0StrtolbaseStr:
000000000000a480         db         "0 <= strtol_base && strtol_base <= 36", 0  ; DATA XREF=xstrtoumax+915
000000000000a4a6         align      8
                     switch_table_a4a8:        // switch_table
000000000000a4a8         dd         xstrtoumax.loc_8146-switch_table_a4a8, 2 dup (xstrtoumax.loc_803c-switch_table_a4a8), xstrtoumax.loc_8123-switch_table_a4a8, xstrtoumax.loc_803c-switch_table_a4a8 ; switch table used at 0x7ff6 containing 54 entries, DATA XREF=xstrtoumax+452
000000000000a4bc         dd         xstrtoumax.loc_815c-switch_table_a4a8, 3 dup (xstrtoumax.loc_803c-switch_table_a4a8), xstrtoumax.loc_80df-switch_table_a4a8, xstrtoumax.loc_803c-switch_table_a4a8
000000000000a4d4         dd         xstrtoumax.loc_7ff8-switch_table_a4a8, 2 dup (xstrtoumax.loc_803c-switch_table_a4a8), xstrtoumax.loc_8100-switch_table_a4a8, 3 dup (xstrtoumax.loc_803c-switch_table_a4a8)
000000000000a4f0         dd         xstrtoumax.loc_80bf-switch_table_a4a8, 4 dup (xstrtoumax.loc_803c-switch_table_a4a8), xstrtoumax.loc_809a-switch_table_a4a8, xstrtoumax.loc_8074-switch_table_a4a8
000000000000a50c         dd         7 dup (xstrtoumax.loc_803c-switch_table_a4a8), xstrtoumax.loc_805d-switch_table_a4a8, xstrtoumax.loc_8020-switch_table_a4a8, 3 dup (xstrtoumax.loc_803c-switch_table_a4a8)
000000000000a53c         dd         xstrtoumax.loc_815c-switch_table_a4a8, 3 dup (xstrtoumax.loc_803c-switch_table_a4a8), xstrtoumax.loc_80df-switch_table_a4a8, xstrtoumax.loc_803c-switch_table_a4a8
000000000000a554         dd         xstrtoumax.loc_7ff8-switch_table_a4a8, 6 dup (xstrtoumax.loc_803c-switch_table_a4a8), xstrtoumax.loc_80bf-switch_table_a4a8, 2 dup (xstrtoumax.loc_803c-switch_table_a4a8)
000000000000a57c         dd         xstrtoumax.loc_8047-switch_table_a4a8
                     __PRETTY_FUNCTION__.4162:
000000000000a580         db         "xstrtoumax", 0                             ; DATA XREF=xstrtoumax+901
                     aRtmin:
000000000000a58b         db         "RTMIN", 0                                  ; DATA XREF=str2sig+210
                     aRtmax:
000000000000a591         db         "RTMAX", 0                                  ; DATA XREF=str2sig+240
000000000000a597         db  0x25 ; '%'                                         ; DATA XREF=sig2str+145
000000000000a598         db  0x2b ; '+'
000000000000a599         db  0x64 ; 'd'
000000000000a59a         db  0x00 ; '.'
000000000000a59b         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
000000000000a59c         db  0x00 ; '.'
                     aPosix:
000000000000a59d         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
000000000000a5a3         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
000000000000a5a9         db  0x00 ; '.'
000000000000a5aa         db  0x00 ; '.'
000000000000a5ab         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0xa5ac; 0xa898[ (748 bytes)
        ; File offset : [42412; 43160[ (748 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

000000000000a5ac         db  0x01 ; '.'
000000000000a5ad         db  0x1b ; '.'
000000000000a5ae         db  0x03 ; '.'
000000000000a5af         db  0x3b ; ';'
000000000000a5b0         db  0xe8 ; '.'
000000000000a5b1         db  0x02 ; '.'
000000000000a5b2         db  0x00 ; '.'
000000000000a5b3         db  0x00 ; '.'
000000000000a5b4         db  0x5c ; '\'
000000000000a5b5         db  0x00 ; '.'
000000000000a5b6         db  0x00 ; '.'
000000000000a5b7         db  0x00 ; '.'
000000000000a5b8         db  0x74 ; 't'
000000000000a5b9         db  0x75 ; 'u'
000000000000a5ba         db  0xff ; '.'
000000000000a5bb         db  0xff ; '.'
000000000000a5bc         db  0x34 ; '4'
000000000000a5bd         db  0x03 ; '.'
000000000000a5be         db  0x00 ; '.'
000000000000a5bf         db  0x00 ; '.'
000000000000a5c0         db  0x24 ; '$'
000000000000a5c1         db  0x7a ; 'z'
000000000000a5c2         db  0xff ; '.'
000000000000a5c3         db  0xff ; '.'
000000000000a5c4         db  0x5c ; '\'
000000000000a5c5         db  0x03 ; '.'
000000000000a5c6         db  0x00 ; '.'
000000000000a5c7         db  0x00 ; '.'
000000000000a5c8         db  0x34 ; '4'
000000000000a5c9         db  0x7a ; 'z'
000000000000a5ca         db  0xff ; '.'
000000000000a5cb         db  0xff ; '.'
000000000000a5cc         db  0x2c ; ','
000000000000a5cd         db  0x05 ; '.'
000000000000a5ce         db  0x00 ; '.'
000000000000a5cf         db  0x00 ; '.'
000000000000a5d0         db  0x64 ; 'd'
000000000000a5d1         db  0x97 ; '.'
000000000000a5d2         db  0xff ; '.'
000000000000a5d3         db  0xff ; '.'
000000000000a5d4         db  0x04 ; '.'
000000000000a5d5         db  0x03 ; '.'
000000000000a5d6         db  0x00 ; '.'
000000000000a5d7         db  0x00 ; '.'
000000000000a5d8         db  0x74 ; 't'
000000000000a5d9         db  0x98 ; '.'
000000000000a5da         db  0xff ; '.'
000000000000a5db         db  0xff ; '.'
000000000000a5dc         db  0x74 ; 't'
000000000000a5dd         db  0x03 ; '.'
000000000000a5de         db  0x00 ; '.'
000000000000a5df         db  0x00 ; '.'
000000000000a5e0         db  0x44 ; 'D'
000000000000a5e1         db  0x9b ; '.'
000000000000a5e2         db  0xff ; '.'
000000000000a5e3         db  0xff ; '.'
000000000000a5e4         db  0xb0 ; '.'
000000000000a5e5         db  0x03 ; '.'
000000000000a5e6         db  0x00 ; '.'
000000000000a5e7         db  0x00 ; '.'
000000000000a5e8         db  0xd4 ; '.'
000000000000a5e9         db  0xa0 ; '.'
000000000000a5ea         db  0xff ; '.'
000000000000a5eb         db  0xff ; '.'
000000000000a5ec         db  0xe4 ; '.'
000000000000a5ed         db  0x03 ; '.'
000000000000a5ee         db  0x00 ; '.'
000000000000a5ef         db  0x00 ; '.'
000000000000a5f0         db  0xd4 ; '.'
000000000000a5f1         db  0xa2 ; '.'
000000000000a5f2         db  0xff ; '.'
000000000000a5f3         db  0xff ; '.'
000000000000a5f4         db  0x30 ; '0'
000000000000a5f5         db  0x04 ; '.'
000000000000a5f6         db  0x00 ; '.'
000000000000a5f7         db  0x00 ; '.'
000000000000a5f8         db  0xd4 ; '.'
000000000000a5f9         db  0xa5 ; '.'
000000000000a5fa         db  0xff ; '.'
000000000000a5fb         db  0xff ; '.'
000000000000a5fc         db  0x6c ; 'l'
000000000000a5fd         db  0x04 ; '.'
000000000000a5fe         db  0x00 ; '.'
000000000000a5ff         db  0x00 ; '.'
000000000000a600         db  0xe4 ; '.'
000000000000a601         db  0xa6 ; '.'
000000000000a602         db  0xff ; '.'
000000000000a603         db  0xff ; '.'
000000000000a604         db  0x98 ; '.'
000000000000a605         db  0x04 ; '.'
000000000000a606         db  0x00 ; '.'
000000000000a607         db  0x00 ; '.'
000000000000a608         db  0x14 ; '.'
000000000000a609         db  0xa9 ; '.'
000000000000a60a         db  0xff ; '.'
000000000000a60b         db  0xff ; '.'
000000000000a60c         db  0x00 ; '.'
000000000000a60d         db  0x05 ; '.'
000000000000a60e         db  0x00 ; '.'
000000000000a60f         db  0x00 ; '.'
000000000000a610         db  0x44 ; 'D'
000000000000a611         db  0xad ; '.'
000000000000a612         db  0xff ; '.'
000000000000a613         db  0xff ; '.'
000000000000a614         db  0x8c ; '.'
000000000000a615         db  0x05 ; '.'
000000000000a616         db  0x00 ; '.'
000000000000a617         db  0x00 ; '.'
000000000000a618         db  0x54 ; 'T'
000000000000a619         db  0xad ; '.'
000000000000a61a         db  0xff ; '.'
000000000000a61b         db  0xff ; '.'
000000000000a61c         db  0xa0 ; '.'
000000000000a61d         db  0x05 ; '.'
000000000000a61e         db  0x00 ; '.'
000000000000a61f         db  0x00 ; '.'
000000000000a620         db  0x64 ; 'd'
000000000000a621         db  0xad ; '.'
000000000000a622         db  0xff ; '.'
000000000000a623         db  0xff ; '.'
000000000000a624         db  0xb4 ; '.'
000000000000a625         db  0x05 ; '.'
000000000000a626         db  0x00 ; '.'
000000000000a627         db  0x00 ; '.'
000000000000a628         db  0x14 ; '.'
000000000000a629         db  0xae ; '.'
000000000000a62a         db  0xff ; '.'
000000000000a62b         db  0xff ; '.'
000000000000a62c         db  0xe4 ; '.'
000000000000a62d         db  0x05 ; '.'
000000000000a62e         db  0x00 ; '.'
000000000000a62f         db  0x00 ; '.'
000000000000a630         db  0x74 ; 't'
000000000000a631         db  0xae ; '.'
000000000000a632         db  0xff ; '.'
000000000000a633         db  0xff ; '.'
000000000000a634         db  0xf8 ; '.'
000000000000a635         db  0x05 ; '.'
000000000000a636         db  0x00 ; '.'
000000000000a637         db  0x00 ; '.'
000000000000a638         db  0xc4 ; '.'
000000000000a639         db  0xae ; '.'
000000000000a63a         db  0xff ; '.'
000000000000a63b         db  0xff ; '.'
000000000000a63c         db  0x24 ; '$'
000000000000a63d         db  0x06 ; '.'
000000000000a63e         db  0x00 ; '.'
000000000000a63f         db  0x00 ; '.'
000000000000a640         db  0x34 ; '4'
000000000000a641         db  0xaf ; '.'
000000000000a642         db  0xff ; '.'
000000000000a643         db  0xff ; '.'
000000000000a644         db  0x44 ; 'D'
000000000000a645         db  0x06 ; '.'
000000000000a646         db  0x00 ; '.'
000000000000a647         db  0x00 ; '.'
000000000000a648         db  0x94 ; '.'
000000000000a649         db  0xaf ; '.'
000000000000a64a         db  0xff ; '.'
000000000000a64b         db  0xff ; '.'
000000000000a64c         db  0x7c ; '|'
000000000000a64d         db  0x06 ; '.'
000000000000a64e         db  0x00 ; '.'
000000000000a64f         db  0x00 ; '.'
000000000000a650         db  0x14 ; '.'
000000000000a651         db  0xb0 ; '.'
000000000000a652         db  0xff ; '.'
000000000000a653         db  0xff ; '.'
000000000000a654         db  0xcc ; '.'
000000000000a655         db  0x06 ; '.'
000000000000a656         db  0x00 ; '.'
000000000000a657         db  0x00 ; '.'
000000000000a658         db  0x64 ; 'd'
000000000000a659         db  0xb0 ; '.'
000000000000a65a         db  0xff ; '.'
000000000000a65b         db  0xff ; '.'
000000000000a65c         db  0xe4 ; '.'
000000000000a65d         db  0x06 ; '.'
000000000000a65e         db  0x00 ; '.'
000000000000a65f         db  0x00 ; '.'
000000000000a660         db  0x04 ; '.'
000000000000a661         db  0xb1 ; '.'
000000000000a662         db  0xff ; '.'
000000000000a663         db  0xff ; '.'
000000000000a664         db  0x04 ; '.'
000000000000a665         db  0x07 ; '.'
000000000000a666         db  0x00 ; '.'
000000000000a667         db  0x00 ; '.'
000000000000a668         db  0xf4 ; '.'
000000000000a669         db  0xb1 ; '.'
000000000000a66a         db  0xff ; '.'
000000000000a66b         db  0xff ; '.'
000000000000a66c         db  0x48 ; 'H'
000000000000a66d         db  0x07 ; '.'
000000000000a66e         db  0x00 ; '.'
000000000000a66f         db  0x00 ; '.'
000000000000a670         db  0x34 ; '4'
000000000000a671         db  0xc4 ; '.'
000000000000a672         db  0xff ; '.'
000000000000a673         db  0xff ; '.'
000000000000a674         db  0xc0 ; '.'
000000000000a675         db  0x07 ; '.'
000000000000a676         db  0x00 ; '.'
000000000000a677         db  0x00 ; '.'
000000000000a678         db  0xe4 ; '.'
000000000000a679         db  0xc5 ; '.'
000000000000a67a         db  0xff ; '.'
000000000000a67b         db  0xff ; '.'
000000000000a67c         db  0x2c ; ','
000000000000a67d         db  0x08 ; '.'
000000000000a67e         db  0x00 ; '.'
000000000000a67f         db  0x00 ; '.'
000000000000a680         db  0x24 ; '$'
000000000000a681         db  0xc6 ; '.'
000000000000a682         db  0xff ; '.'
000000000000a683         db  0xff ; '.'
000000000000a684         db  0x58 ; 'X'
000000000000a685         db  0x08 ; '.'
000000000000a686         db  0x00 ; '.'
000000000000a687         db  0x00 ; '.'
000000000000a688         db  0x44 ; 'D'
000000000000a689         db  0xc6 ; '.'
000000000000a68a         db  0xff ; '.'
000000000000a68b         db  0xff ; '.'
000000000000a68c         db  0x6c ; 'l'
000000000000a68d         db  0x08 ; '.'
000000000000a68e         db  0x00 ; '.'
000000000000a68f         db  0x00 ; '.'
000000000000a690         db  0x64 ; 'd'
000000000000a691         db  0xc6 ; '.'
000000000000a692         db  0xff ; '.'
000000000000a693         db  0xff ; '.'
000000000000a694         db  0x80 ; '.'
000000000000a695         db  0x08 ; '.'
000000000000a696         db  0x00 ; '.'
000000000000a697         db  0x00 ; '.'
000000000000a698         db  0xa4 ; '.'
000000000000a699         db  0xc6 ; '.'
000000000000a69a         db  0xff ; '.'
000000000000a69b         db  0xff ; '.'
000000000000a69c         db  0x94 ; '.'
000000000000a69d         db  0x08 ; '.'
000000000000a69e         db  0x00 ; '.'
000000000000a69f         db  0x00 ; '.'
000000000000a6a0         db  0xc4 ; '.'
000000000000a6a1         db  0xc6 ; '.'
000000000000a6a2         db  0xff ; '.'
000000000000a6a3         db  0xff ; '.'
000000000000a6a4         db  0xa8 ; '.'
000000000000a6a5         db  0x08 ; '.'
000000000000a6a6         db  0x00 ; '.'
000000000000a6a7         db  0x00 ; '.'
000000000000a6a8         db  0xf4 ; '.'
000000000000a6a9         db  0xc6 ; '.'
000000000000a6aa         db  0xff ; '.'
000000000000a6ab         db  0xff ; '.'
000000000000a6ac         db  0xbc ; '.'
000000000000a6ad         db  0x08 ; '.'
000000000000a6ae         db  0x00 ; '.'
000000000000a6af         db  0x00 ; '.'
000000000000a6b0         db  0x74 ; 't'
000000000000a6b1         db  0xc7 ; '.'
000000000000a6b2         db  0xff ; '.'
000000000000a6b3         db  0xff ; '.'
000000000000a6b4         db  0x10 ; '.'
000000000000a6b5         db  0x09 ; '.'
000000000000a6b6         db  0x00 ; '.'
000000000000a6b7         db  0x00 ; '.'
000000000000a6b8         db  0x64 ; 'd'
000000000000a6b9         db  0xc8 ; '.'
000000000000a6ba         db  0xff ; '.'
000000000000a6bb         db  0xff ; '.'
000000000000a6bc         db  0x7c ; '|'
000000000000a6bd         db  0x09 ; '.'
000000000000a6be         db  0x00 ; '.'
000000000000a6bf         db  0x00 ; '.'
000000000000a6c0         db  0x74 ; 't'
000000000000a6c1         db  0xc8 ; '.'
000000000000a6c2         db  0xff ; '.'
000000000000a6c3         db  0xff ; '.'
000000000000a6c4         db  0x90 ; '.'
000000000000a6c5         db  0x09 ; '.'
000000000000a6c6         db  0x00 ; '.'
000000000000a6c7         db  0x00 ; '.'
000000000000a6c8         db  0x14 ; '.'
000000000000a6c9         db  0xc9 ; '.'
000000000000a6ca         db  0xff ; '.'
000000000000a6cb         db  0xff ; '.'
000000000000a6cc         db  0xbc ; '.'
000000000000a6cd         db  0x09 ; '.'
000000000000a6ce         db  0x00 ; '.'
000000000000a6cf         db  0x00 ; '.'
000000000000a6d0         db  0x34 ; '4'
000000000000a6d1         db  0xc9 ; '.'
000000000000a6d2         db  0xff ; '.'
000000000000a6d3         db  0xff ; '.'
000000000000a6d4         db  0xd0 ; '.'
000000000000a6d5         db  0x09 ; '.'
000000000000a6d6         db  0x00 ; '.'
000000000000a6d7         db  0x00 ; '.'
000000000000a6d8         db  0x44 ; 'D'
000000000000a6d9         db  0xc9 ; '.'
000000000000a6da         db  0xff ; '.'
000000000000a6db         db  0xff ; '.'
000000000000a6dc         db  0xe4 ; '.'
000000000000a6dd         db  0x09 ; '.'
000000000000a6de         db  0x00 ; '.'
000000000000a6df         db  0x00 ; '.'
000000000000a6e0         db  0x64 ; 'd'
000000000000a6e1         db  0xc9 ; '.'
000000000000a6e2         db  0xff ; '.'
000000000000a6e3         db  0xff ; '.'
000000000000a6e4         db  0xf8 ; '.'
000000000000a6e5         db  0x09 ; '.'
000000000000a6e6         db  0x00 ; '.'
000000000000a6e7         db  0x00 ; '.'
000000000000a6e8         db  0x84 ; '.'
000000000000a6e9         db  0xc9 ; '.'
000000000000a6ea         db  0xff ; '.'
000000000000a6eb         db  0xff ; '.'
000000000000a6ec         db  0x0c ; '.'
000000000000a6ed         db  0x0a ; '.'
000000000000a6ee         db  0x00 ; '.'
000000000000a6ef         db  0x00 ; '.'
000000000000a6f0         db  0x14 ; '.'
000000000000a6f1         db  0xca ; '.'
000000000000a6f2         db  0xff ; '.'
000000000000a6f3         db  0xff ; '.'
000000000000a6f4         db  0x28 ; '('
000000000000a6f5         db  0x0a ; '.'
000000000000a6f6         db  0x00 ; '.'
000000000000a6f7         db  0x00 ; '.'
000000000000a6f8         db  0xa4 ; '.'
000000000000a6f9         db  0xca ; '.'
000000000000a6fa         db  0xff ; '.'
000000000000a6fb         db  0xff ; '.'
000000000000a6fc         db  0x44 ; 'D'
000000000000a6fd         db  0x0a ; '.'
000000000000a6fe         db  0x00 ; '.'
000000000000a6ff         db  0x00 ; '.'
000000000000a700         db  0xb4 ; '.'
000000000000a701         db  0xca ; '.'
000000000000a702         db  0xff ; '.'
000000000000a703         db  0xff ; '.'
000000000000a704         db  0x58 ; 'X'
000000000000a705         db  0x0a ; '.'
000000000000a706         db  0x00 ; '.'
000000000000a707         db  0x00 ; '.'
000000000000a708         db  0xc4 ; '.'
000000000000a709         db  0xca ; '.'
000000000000a70a         db  0xff ; '.'
000000000000a70b         db  0xff ; '.'
000000000000a70c         db  0x6c ; 'l'
000000000000a70d         db  0x0a ; '.'
000000000000a70e         db  0x00 ; '.'
000000000000a70f         db  0x00 ; '.'
000000000000a710         db  0x64 ; 'd'
000000000000a711         db  0xcb ; '.'
000000000000a712         db  0xff ; '.'
000000000000a713         db  0xff ; '.'
000000000000a714         db  0x88 ; '.'
000000000000a715         db  0x0a ; '.'
000000000000a716         db  0x00 ; '.'
000000000000a717         db  0x00 ; '.'
000000000000a718         db  0x74 ; 't'
000000000000a719         db  0xcb ; '.'
000000000000a71a         db  0xff ; '.'
000000000000a71b         db  0xff ; '.'
000000000000a71c         db  0x9c ; '.'
000000000000a71d         db  0x0a ; '.'
000000000000a71e         db  0x00 ; '.'
000000000000a71f         db  0x00 ; '.'
000000000000a720         db  0x94 ; '.'
000000000000a721         db  0xcb ; '.'
000000000000a722         db  0xff ; '.'
000000000000a723         db  0xff ; '.'
000000000000a724         db  0xb0 ; '.'
000000000000a725         db  0x0a ; '.'
000000000000a726         db  0x00 ; '.'
000000000000a727         db  0x00 ; '.'
000000000000a728         db  0xa4 ; '.'
000000000000a729         db  0xcb ; '.'
000000000000a72a         db  0xff ; '.'
000000000000a72b         db  0xff ; '.'
000000000000a72c         db  0xc4 ; '.'
000000000000a72d         db  0x0a ; '.'
000000000000a72e         db  0x00 ; '.'
000000000000a72f         db  0x00 ; '.'
000000000000a730         db  0x34 ; '4'
000000000000a731         db  0xcc ; '.'
000000000000a732         db  0xff ; '.'
000000000000a733         db  0xff ; '.'
000000000000a734         db  0xe0 ; '.'
000000000000a735         db  0x0a ; '.'
000000000000a736         db  0x00 ; '.'
000000000000a737         db  0x00 ; '.'
000000000000a738         db  0xd4 ; '.'
000000000000a739         db  0xcc ; '.'
000000000000a73a         db  0xff ; '.'
000000000000a73b         db  0xff ; '.'
000000000000a73c         db  0xfc ; '.'
000000000000a73d         db  0x0a ; '.'
000000000000a73e         db  0x00 ; '.'
000000000000a73f         db  0x00 ; '.'
000000000000a740         db  0xe4 ; '.'
000000000000a741         db  0xcc ; '.'
000000000000a742         db  0xff ; '.'
000000000000a743         db  0xff ; '.'
000000000000a744         db  0x10 ; '.'
000000000000a745         db  0x0b ; '.'
000000000000a746         db  0x00 ; '.'
000000000000a747         db  0x00 ; '.'
000000000000a748         db  0x04 ; '.'
000000000000a749         db  0xcd ; '.'
000000000000a74a         db  0xff ; '.'
000000000000a74b         db  0xff ; '.'
000000000000a74c         db  0x24 ; '$'
000000000000a74d         db  0x0b ; '.'
000000000000a74e         db  0x00 ; '.'
000000000000a74f         db  0x00 ; '.'
000000000000a750         db  0x24 ; '$'
000000000000a751         db  0xcd ; '.'
000000000000a752         db  0xff ; '.'
000000000000a753         db  0xff ; '.'
000000000000a754         db  0x38 ; '8'
000000000000a755         db  0x0b ; '.'
000000000000a756         db  0x00 ; '.'
000000000000a757         db  0x00 ; '.'
000000000000a758         db  0x34 ; '4'
000000000000a759         db  0xcd ; '.'
000000000000a75a         db  0xff ; '.'
000000000000a75b         db  0xff ; '.'
000000000000a75c         db  0x4c ; 'L'
000000000000a75d         db  0x0b ; '.'
000000000000a75e         db  0x00 ; '.'
000000000000a75f         db  0x00 ; '.'
000000000000a760         db  0x54 ; 'T'
000000000000a761         db  0xcd ; '.'
000000000000a762         db  0xff ; '.'
000000000000a763         db  0xff ; '.'
000000000000a764         db  0x60 ; '`'
000000000000a765         db  0x0b ; '.'
000000000000a766         db  0x00 ; '.'
000000000000a767         db  0x00 ; '.'
000000000000a768         db  0x74 ; 't'
000000000000a769         db  0xcd ; '.'
000000000000a76a         db  0xff ; '.'
000000000000a76b         db  0xff ; '.'
000000000000a76c         db  0x74 ; 't'
000000000000a76d         db  0x0b ; '.'
000000000000a76e         db  0x00 ; '.'
000000000000a76f         db  0x00 ; '.'
000000000000a770         db  0x94 ; '.'
000000000000a771         db  0xcd ; '.'
000000000000a772         db  0xff ; '.'
000000000000a773         db  0xff ; '.'
000000000000a774         db  0x8c ; '.'
000000000000a775         db  0x0b ; '.'
000000000000a776         db  0x00 ; '.'
000000000000a777         db  0x00 ; '.'
000000000000a778         db  0xf4 ; '.'
000000000000a779         db  0xcd ; '.'
000000000000a77a         db  0xff ; '.'
000000000000a77b         db  0xff ; '.'
000000000000a77c         db  0xc4 ; '.'
000000000000a77d         db  0x0b ; '.'
000000000000a77e         db  0x00 ; '.'
000000000000a77f         db  0x00 ; '.'
000000000000a780         db  0x54 ; 'T'
000000000000a781         db  0xce ; '.'
000000000000a782         db  0xff ; '.'
000000000000a783         db  0xff ; '.'
000000000000a784         db  0xfc ; '.'
000000000000a785         db  0x0b ; '.'
000000000000a786         db  0x00 ; '.'
000000000000a787         db  0x00 ; '.'
000000000000a788         db  0x94 ; '.'
000000000000a789         db  0xce ; '.'
000000000000a78a         db  0xff ; '.'
000000000000a78b         db  0xff ; '.'
000000000000a78c         db  0x34 ; '4'
000000000000a78d         db  0x0c ; '.'
000000000000a78e         db  0x00 ; '.'
000000000000a78f         db  0x00 ; '.'
000000000000a790         db  0xb4 ; '.'
000000000000a791         db  0xd2 ; '.'
000000000000a792         db  0xff ; '.'
000000000000a793         db  0xff ; '.'
000000000000a794         db  0x48 ; 'H'
000000000000a795         db  0x0d ; '.'
000000000000a796         db  0x00 ; '.'
000000000000a797         db  0x00 ; '.'
000000000000a798         db  0xd4 ; '.'
000000000000a799         db  0xd2 ; '.'
000000000000a79a         db  0xff ; '.'
000000000000a79b         db  0xff ; '.'
000000000000a79c         db  0x5c ; '\'
000000000000a79d         db  0x0d ; '.'
000000000000a79e         db  0x00 ; '.'
000000000000a79f         db  0x00 ; '.'
000000000000a7a0         db  0x54 ; 'T'
000000000000a7a1         db  0xd3 ; '.'
000000000000a7a2         db  0xff ; '.'
000000000000a7a3         db  0xff ; '.'
000000000000a7a4         db  0x78 ; 'x'
000000000000a7a5         db  0x0d ; '.'
000000000000a7a6         db  0x00 ; '.'
000000000000a7a7         db  0x00 ; '.'
000000000000a7a8         db  0x34 ; '4'
000000000000a7a9         db  0xd4 ; '.'
000000000000a7aa         db  0xff ; '.'
000000000000a7ab         db  0xff ; '.'
000000000000a7ac         db  0xa4 ; '.'
000000000000a7ad         db  0x0d ; '.'
000000000000a7ae         db  0x00 ; '.'
000000000000a7af         db  0x00 ; '.'
000000000000a7b0         db  0xb4 ; '.'
000000000000a7b1         db  0xd4 ; '.'
000000000000a7b2         db  0xff ; '.'
000000000000a7b3         db  0xff ; '.'
000000000000a7b4         db  0xc4 ; '.'
000000000000a7b5         db  0x0d ; '.'
000000000000a7b6         db  0x00 ; '.'
000000000000a7b7         db  0x00 ; '.'
000000000000a7b8         db  0xd4 ; '.'
000000000000a7b9         db  0xd4 ; '.'
000000000000a7ba         db  0xff ; '.'
000000000000a7bb         db  0xff ; '.'
000000000000a7bc         db  0xe0 ; '.'
000000000000a7bd         db  0x0d ; '.'
000000000000a7be         db  0x00 ; '.'
000000000000a7bf         db  0x00 ; '.'
000000000000a7c0         db  0x04 ; '.'
000000000000a7c1         db  0xd5 ; '.'
000000000000a7c2         db  0xff ; '.'
000000000000a7c3         db  0xff ; '.'
000000000000a7c4         db  0xf4 ; '.'
000000000000a7c5         db  0x0d ; '.'
000000000000a7c6         db  0x00 ; '.'
000000000000a7c7         db  0x00 ; '.'
000000000000a7c8         db  0x14 ; '.'
000000000000a7c9         db  0xd5 ; '.'
000000000000a7ca         db  0xff ; '.'
000000000000a7cb         db  0xff ; '.'
000000000000a7cc         db  0x08 ; '.'
000000000000a7cd         db  0x0e ; '.'
000000000000a7ce         db  0x00 ; '.'
000000000000a7cf         db  0x00 ; '.'
000000000000a7d0         db  0x54 ; 'T'
000000000000a7d1         db  0xd5 ; '.'
000000000000a7d2         db  0xff ; '.'
000000000000a7d3         db  0xff ; '.'
000000000000a7d4         db  0x2c ; ','
000000000000a7d5         db  0x0e ; '.'
000000000000a7d6         db  0x00 ; '.'
000000000000a7d7         db  0x00 ; '.'
000000000000a7d8         db  0x84 ; '.'
000000000000a7d9         db  0xd5 ; '.'
000000000000a7da         db  0xff ; '.'
000000000000a7db         db  0xff ; '.'
000000000000a7dc         db  0x40 ; '@'
000000000000a7dd         db  0x0e ; '.'
000000000000a7de         db  0x00 ; '.'
000000000000a7df         db  0x00 ; '.'
000000000000a7e0         db  0x14 ; '.'
000000000000a7e1         db  0xd6 ; '.'
000000000000a7e2         db  0xff ; '.'
000000000000a7e3         db  0xff ; '.'
000000000000a7e4         db  0x58 ; 'X'
000000000000a7e5         db  0x0e ; '.'
000000000000a7e6         db  0x00 ; '.'
000000000000a7e7         db  0x00 ; '.'
000000000000a7e8         db  0x64 ; 'd'
000000000000a7e9         db  0xd6 ; '.'
000000000000a7ea         db  0xff ; '.'
000000000000a7eb         db  0xff ; '.'
000000000000a7ec         db  0x70 ; 'p'
000000000000a7ed         db  0x0e ; '.'
000000000000a7ee         db  0x00 ; '.'
000000000000a7ef         db  0x00 ; '.'
000000000000a7f0         db  0x84 ; '.'
000000000000a7f1         db  0xd6 ; '.'
000000000000a7f2         db  0xff ; '.'
000000000000a7f3         db  0xff ; '.'
000000000000a7f4         db  0x8c ; '.'
000000000000a7f5         db  0x0e ; '.'
000000000000a7f6         db  0x00 ; '.'
000000000000a7f7         db  0x00 ; '.'
000000000000a7f8         db  0xb4 ; '.'
000000000000a7f9         db  0xd6 ; '.'
000000000000a7fa         db  0xff ; '.'
000000000000a7fb         db  0xff ; '.'
000000000000a7fc         db  0xa8 ; '.'
000000000000a7fd         db  0x0e ; '.'
000000000000a7fe         db  0x00 ; '.'
000000000000a7ff         db  0x00 ; '.'
000000000000a800         db  0xe4 ; '.'
000000000000a801         db  0xd6 ; '.'
000000000000a802         db  0xff ; '.'
000000000000a803         db  0xff ; '.'
000000000000a804         db  0xd0 ; '.'
000000000000a805         db  0x0e ; '.'
000000000000a806         db  0x00 ; '.'
000000000000a807         db  0x00 ; '.'
000000000000a808         db  0x04 ; '.'
000000000000a809         db  0xd7 ; '.'
000000000000a80a         db  0xff ; '.'
000000000000a80b         db  0xff ; '.'
000000000000a80c         db  0xec ; '.'
000000000000a80d         db  0x0e ; '.'
000000000000a80e         db  0x00 ; '.'
000000000000a80f         db  0x00 ; '.'
000000000000a810         db  0x44 ; 'D'
000000000000a811         db  0xd7 ; '.'
000000000000a812         db  0xff ; '.'
000000000000a813         db  0xff ; '.'
000000000000a814         db  0x04 ; '.'
000000000000a815         db  0x0f ; '.'
000000000000a816         db  0x00 ; '.'
000000000000a817         db  0x00 ; '.'
000000000000a818         db  0x44 ; 'D'
000000000000a819         db  0xd8 ; '.'
000000000000a81a         db  0xff ; '.'
000000000000a81b         db  0xff ; '.'
000000000000a81c         db  0x50 ; 'P'
000000000000a81d         db  0x0f ; '.'
000000000000a81e         db  0x00 ; '.'
000000000000a81f         db  0x00 ; '.'
000000000000a820         db  0x74 ; 't'
000000000000a821         db  0xd8 ; '.'
000000000000a822         db  0xff ; '.'
000000000000a823         db  0xff ; '.'
000000000000a824         db  0x6c ; 'l'
000000000000a825         db  0x0f ; '.'
000000000000a826         db  0x00 ; '.'
000000000000a827         db  0x00 ; '.'
000000000000a828         db  0x94 ; '.'
000000000000a829         db  0xdc ; '.'
000000000000a82a         db  0xff ; '.'
000000000000a82b         db  0xff ; '.'
000000000000a82c         db  0xbc ; '.'
000000000000a82d         db  0x0f ; '.'
000000000000a82e         db  0x00 ; '.'
000000000000a82f         db  0x00 ; '.'
000000000000a830         db  0x14 ; '.'
000000000000a831         db  0xdd ; '.'
000000000000a832         db  0xff ; '.'
000000000000a833         db  0xff ; '.'
000000000000a834         db  0xf4 ; '.'
000000000000a835         db  0x0f ; '.'
000000000000a836         db  0x00 ; '.'
000000000000a837         db  0x00 ; '.'
000000000000a838         db  0x54 ; 'T'
000000000000a839         db  0xdd ; '.'
000000000000a83a         db  0xff ; '.'
000000000000a83b         db  0xff ; '.'
000000000000a83c         db  0x14 ; '.'
000000000000a83d         db  0x10 ; '.'
000000000000a83e         db  0x00 ; '.'
000000000000a83f         db  0x00 ; '.'
000000000000a840         db  0xb4 ; '.'
000000000000a841         db  0xdd ; '.'
000000000000a842         db  0xff ; '.'
000000000000a843         db  0xff ; '.'
000000000000a844         db  0x44 ; 'D'
000000000000a845         db  0x10 ; '.'
000000000000a846         db  0x00 ; '.'
000000000000a847         db  0x00 ; '.'
000000000000a848         db  0x44 ; 'D'
000000000000a849         db  0xde ; '.'
000000000000a84a         db  0xff ; '.'
000000000000a84b         db  0xff ; '.'
000000000000a84c         db  0x84 ; '.'
000000000000a84d         db  0x10 ; '.'
000000000000a84e         db  0x00 ; '.'
000000000000a84f         db  0x00 ; '.'
000000000000a850         db  0xd4 ; '.'
000000000000a851         db  0xdf ; '.'
000000000000a852         db  0xff ; '.'
000000000000a853         db  0xff ; '.'
000000000000a854         db  0xc0 ; '.'
000000000000a855         db  0x10 ; '.'
000000000000a856         db  0x00 ; '.'
000000000000a857         db  0x00 ; '.'
000000000000a858         db  0xb4 ; '.'
000000000000a859         db  0xe0 ; '.'
000000000000a85a         db  0xff ; '.'
000000000000a85b         db  0xff ; '.'
000000000000a85c         db  0xfc ; '.'
000000000000a85d         db  0x10 ; '.'
000000000000a85e         db  0x00 ; '.'
000000000000a85f         db  0x00 ; '.'
000000000000a860         db  0x34 ; '4'
000000000000a861         db  0xe1 ; '.'
000000000000a862         db  0xff ; '.'
000000000000a863         db  0xff ; '.'
000000000000a864         db  0x4c ; 'L'
000000000000a865         db  0x11 ; '.'
000000000000a866         db  0x00 ; '.'
000000000000a867         db  0x00 ; '.'
000000000000a868         db  0x94 ; '.'
000000000000a869         db  0xe1 ; '.'
000000000000a86a         db  0xff ; '.'
000000000000a86b         db  0xff ; '.'
000000000000a86c         db  0x6c ; 'l'
000000000000a86d         db  0x11 ; '.'
000000000000a86e         db  0x00 ; '.'
000000000000a86f         db  0x00 ; '.'
000000000000a870         db  0xd4 ; '.'
000000000000a871         db  0xe1 ; '.'
000000000000a872         db  0xff ; '.'
000000000000a873         db  0xff ; '.'
000000000000a874         db  0x8c ; '.'
000000000000a875         db  0x11 ; '.'
000000000000a876         db  0x00 ; '.'
000000000000a877         db  0x00 ; '.'
000000000000a878         db  0xe4 ; '.'
000000000000a879         db  0xe1 ; '.'
000000000000a87a         db  0xff ; '.'
000000000000a87b         db  0xff ; '.'
000000000000a87c         db  0xa4 ; '.'
000000000000a87d         db  0x11 ; '.'
000000000000a87e         db  0x00 ; '.'
000000000000a87f         db  0x00 ; '.'
000000000000a880         db  0x64 ; 'd'
000000000000a881         db  0xe4 ; '.'
000000000000a882         db  0xff ; '.'
000000000000a883         db  0xff ; '.'
000000000000a884         db  0xdc ; '.'
000000000000a885         db  0x11 ; '.'
000000000000a886         db  0x00 ; '.'
000000000000a887         db  0x00 ; '.'
000000000000a888         db  0xd4 ; '.'
000000000000a889         db  0xe4 ; '.'
000000000000a88a         db  0xff ; '.'
000000000000a88b         db  0xff ; '.'
000000000000a88c         db  0x24 ; '$'
000000000000a88d         db  0x12 ; '.'
000000000000a88e         db  0x00 ; '.'
000000000000a88f         db  0x00 ; '.'
000000000000a890         db  0xe4 ; '.'
000000000000a891         db  0xe4 ; '.'
000000000000a892         db  0xff ; '.'
000000000000a893         db  0xff ; '.'
000000000000a894         db  0x3c ; '<'
000000000000a895         db  0x12 ; '.'
000000000000a896         db  0x00 ; '.'
000000000000a897         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0xa898; 0xb800[ (3944 bytes)
        ; File offset : [43160; 47104[ (3944 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

000000000000a898         dd         0x00000014                                  ; Length of the record
000000000000a89c         dd         0x00000000                                  ; CIE ID
000000000000a8a0         db         0x01                                        ; Version
000000000000a8a1         db         "zR", 0                                     ; Augmentation String
000000000000a8a4         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
000000000000a8a5         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
000000000000a8a6         db         0x10                                        ; Return address register
000000000000a8a7         db         0x01                                        ; Augmentation data length
000000000000a8a8         db         0x1b                                        ; FDE encoding
000000000000a8a9         db  0x0c ; '.'
000000000000a8aa         db  0x07 ; '.'
000000000000a8ab         db  0x08 ; '.'
000000000000a8ac         db  0x90 ; '.'
000000000000a8ad         db  0x01 ; '.'
000000000000a8ae         db  0x07 ; '.'
000000000000a8af         db  0x10 ; '.'
000000000000a8b0         dd         0x00000014                                  ; Length of the record
000000000000a8b4         dd         0x0000001c                                  ; FDE: parent CIE at 0xa898 (FDE encoding = 0x1B)
000000000000a8b8         db         0x58, 0x94, 2 dup (0xff)                    ; begin 0x3d10
000000000000a8bc         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x3d3b)
000000000000a8c0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a8c1         align      8
000000000000a8c8         dd         0x00000014                                  ; Length of the record
000000000000a8cc         dd         0x00000000                                  ; CIE ID
000000000000a8d0         db         0x01                                        ; Version
000000000000a8d1         db         "zR", 0                                     ; Augmentation String
000000000000a8d4         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
000000000000a8d5         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
000000000000a8d6         db         0x10                                        ; Return address register
000000000000a8d7         db         0x01                                        ; Augmentation data length
000000000000a8d8         db         0x1b                                        ; FDE encoding
000000000000a8d9         db  0x0c ; '.'
000000000000a8da         db  0x07 ; '.'
000000000000a8db         db  0x08 ; '.'
000000000000a8dc         db  0x90 ; '.'
000000000000a8dd         db  0x01 ; '.'
000000000000a8de         db  0x00 ; '.'
000000000000a8df         db  0x00 ; '.'
000000000000a8e0         dd         0x00000024                                  ; Length of the record
000000000000a8e4         dd         0x0000001c                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000a8e8         db         0x38, 0x72, 2 dup (0xff)                    ; begin 0x1b20
000000000000a8ec         db         0xb0, 0x04, 2 dup (0x00)                    ; length 0x4b0 (end at 0x1fd0)
000000000000a8f0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a8f1         db  0x0e ; '.'
000000000000a8f2         db  0x10 ; '.'
000000000000a8f3         db  0x46 ; 'F'
000000000000a8f4         db  0x0e ; '.'
000000000000a8f5         db  0x18 ; '.'
000000000000a8f6         db  0x4a ; 'J'
000000000000a8f7         db  0x0f ; '.'
000000000000a8f8         db  0x0b ; '.'
000000000000a8f9         db  0x77 ; 'w'
000000000000a8fa         db  0x08 ; '.'
000000000000a8fb         db  0x80 ; '.'
000000000000a8fc         db  0x00 ; '.'
000000000000a8fd         db  0x3f ; '?'
000000000000a8fe         db  0x1a ; '.'
000000000000a8ff         db  0x3b ; ';'
000000000000a900         db  0x2a ; '*'
000000000000a901         db  0x33 ; '3'
000000000000a902         db  0x24 ; '$'
000000000000a903         db  0x22 ; '"'
000000000000a904         db  0x00 ; '.'
000000000000a905         db  0x00 ; '.'
000000000000a906         db  0x00 ; '.'
000000000000a907         db  0x00 ; '.'
000000000000a908         dd         0x00000014                                  ; Length of the record
000000000000a90c         dd         0x00000044                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000a910         db         0xc0, 0x76, 2 dup (0xff)                    ; begin 0x1fd0
000000000000a914         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x1fd8)
000000000000a918         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a919         align      32
000000000000a920         dd         0x00000038                                  ; Length of the record
000000000000a924         dd         0x0000005c                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000a928         db         0xf8, 0x94, 2 dup (0xff)                    ; begin 0x3e20
000000000000a92c         db         0xc6, 0x02, 2 dup (0x00)                    ; length 0x2c6 (end at 0x40e6)
000000000000a930         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a931         db  0x42 ; 'B'
000000000000a932         db  0x0e ; '.'
000000000000a933         db  0x10 ; '.'
000000000000a934         db  0x8d ; '.'
000000000000a935         db  0x02 ; '.'
000000000000a936         db  0x42 ; 'B'
000000000000a937         db  0x0e ; '.'
000000000000a938         db  0x18 ; '.'
000000000000a939         db  0x8c ; '.'
000000000000a93a         db  0x03 ; '.'
000000000000a93b         db  0x41 ; 'A'
000000000000a93c         db  0x0e ; '.'
000000000000a93d         db  0x20 ; ' '
000000000000a93e         db  0x86 ; '.'
000000000000a93f         db  0x04 ; '.'
000000000000a940         db  0x41 ; 'A'
000000000000a941         db  0x0e ; '.'
000000000000a942         db  0x28 ; '('
000000000000a943         db  0x83 ; '.'
000000000000a944         db  0x05 ; '.'
000000000000a945         db  0x44 ; 'D'
000000000000a946         db  0x0e ; '.'
000000000000a947         db  0x30 ; '0'
000000000000a948         db  0x03 ; '.'
000000000000a949         db  0x03 ; '.'
000000000000a94a         db  0x02 ; '.'
000000000000a94b         db  0x0a ; '.'
000000000000a94c         db  0x0e ; '.'
000000000000a94d         db  0x28 ; '('
000000000000a94e         db  0x41 ; 'A'
000000000000a94f         db  0x0e ; '.'
000000000000a950         db  0x20 ; ' '
000000000000a951         db  0x41 ; 'A'
000000000000a952         db  0x0e ; '.'
000000000000a953         db  0x18 ; '.'
000000000000a954         db  0x42 ; 'B'
000000000000a955         db  0x0e ; '.'
000000000000a956         db  0x10 ; '.'
000000000000a957         db  0x42 ; 'B'
000000000000a958         db  0x0e ; '.'
000000000000a959         db  0x08 ; '.'
000000000000a95a         db  0x45 ; 'E'
000000000000a95b         db  0x0b ; '.'
000000000000a95c         dd         0x00000030                                  ; Length of the record
000000000000a960         dd         0x00000098                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000a964         db         0x8c, 0x97, 2 dup (0xff)                    ; begin 0x40f0
000000000000a968         db         0x89, 0x05, 2 dup (0x00)                    ; length 0x589 (end at 0x4679)
000000000000a96c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a96d         db  0x42 ; 'B'
000000000000a96e         db  0x0e ; '.'
000000000000a96f         db  0x10 ; '.'
000000000000a970         db  0x8c ; '.'
000000000000a971         db  0x02 ; '.'
000000000000a972         db  0x41 ; 'A'
000000000000a973         db  0x0e ; '.'
000000000000a974         db  0x18 ; '.'
000000000000a975         db  0x86 ; '.'
000000000000a976         db  0x03 ; '.'
000000000000a977         db  0x44 ; 'D'
000000000000a978         db  0x0e ; '.'
000000000000a979         db  0x20 ; ' '
000000000000a97a         db  0x83 ; '.'
000000000000a97b         db  0x04 ; '.'
000000000000a97c         db  0x47 ; 'G'
000000000000a97d         db  0x0e ; '.'
000000000000a97e         db  0xc0 ; '.'
000000000000a97f         db  0x01 ; '.'
000000000000a980         db  0x02 ; '.'
000000000000a981         db  0xf2 ; '.'
000000000000a982         db  0x0a ; '.'
000000000000a983         db  0x0e ; '.'
000000000000a984         db  0x20 ; ' '
000000000000a985         db  0x41 ; 'A'
000000000000a986         db  0x0e ; '.'
000000000000a987         db  0x18 ; '.'
000000000000a988         db  0x41 ; 'A'
000000000000a989         db  0x0e ; '.'
000000000000a98a         db  0x10 ; '.'
000000000000a98b         db  0x42 ; 'B'
000000000000a98c         db  0x0e ; '.'
000000000000a98d         db  0x08 ; '.'
000000000000a98e         db  0x44 ; 'D'
000000000000a98f         db  0x0b ; '.'
000000000000a990         dd         0x00000048                                  ; Length of the record
000000000000a994         dd         0x000000cc                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000a998         db         0xe8, 0x9c, 2 dup (0xff)                    ; begin 0x4680
000000000000a99c         db         0xf4, 0x01, 2 dup (0x00)                    ; length 0x1f4 (end at 0x4874)
000000000000a9a0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a9a1         db  0x42 ; 'B'
000000000000a9a2         db  0x0e ; '.'
000000000000a9a3         db  0x10 ; '.'
000000000000a9a4         db  0x8f ; '.'
000000000000a9a5         db  0x02 ; '.'
000000000000a9a6         db  0x42 ; 'B'
000000000000a9a7         db  0x0e ; '.'
000000000000a9a8         db  0x18 ; '.'
000000000000a9a9         db  0x8e ; '.'
000000000000a9aa         db  0x03 ; '.'
000000000000a9ab         db  0x42 ; 'B'
000000000000a9ac         db  0x0e ; '.'
000000000000a9ad         db  0x20 ; ' '
000000000000a9ae         db  0x8d ; '.'
000000000000a9af         db  0x04 ; '.'
000000000000a9b0         db  0x45 ; 'E'
000000000000a9b1         db  0x0e ; '.'
000000000000a9b2         db  0x28 ; '('
000000000000a9b3         db  0x8c ; '.'
000000000000a9b4         db  0x05 ; '.'
000000000000a9b5         db  0x45 ; 'E'
000000000000a9b6         db  0x0e ; '.'
000000000000a9b7         db  0x30 ; '0'
000000000000a9b8         db  0x86 ; '.'
000000000000a9b9         db  0x06 ; '.'
000000000000a9ba         db  0x41 ; 'A'
000000000000a9bb         db  0x0e ; '.'
000000000000a9bc         db  0x38 ; '8'
000000000000a9bd         db  0x83 ; '.'
000000000000a9be         db  0x07 ; '.'
000000000000a9bf         db  0x49 ; 'I'
000000000000a9c0         db  0x0e ; '.'
000000000000a9c1         db  0x50 ; 'P'
000000000000a9c2         db  0x4c ; 'L'
000000000000a9c3         db  0x0a ; '.'
000000000000a9c4         db  0x0e ; '.'
000000000000a9c5         db  0x38 ; '8'
000000000000a9c6         db  0x43 ; 'C'
000000000000a9c7         db  0x0e ; '.'
000000000000a9c8         db  0x30 ; '0'
000000000000a9c9         db  0x41 ; 'A'
000000000000a9ca         db  0x0e ; '.'
000000000000a9cb         db  0x28 ; '('
000000000000a9cc         db  0x42 ; 'B'
000000000000a9cd         db  0x0e ; '.'
000000000000a9ce         db  0x20 ; ' '
000000000000a9cf         db  0x42 ; 'B'
000000000000a9d0         db  0x0e ; '.'
000000000000a9d1         db  0x18 ; '.'
000000000000a9d2         db  0x42 ; 'B'
000000000000a9d3         db  0x0e ; '.'
000000000000a9d4         db  0x10 ; '.'
000000000000a9d5         db  0x42 ; 'B'
000000000000a9d6         db  0x0e ; '.'
000000000000a9d7         db  0x08 ; '.'
000000000000a9d8         db  0x41 ; 'A'
000000000000a9d9         db  0x0b ; '.'
000000000000a9da         db  0x00 ; '.'
000000000000a9db         db  0x00 ; '.'
000000000000a9dc         dd         0x00000038                                  ; Length of the record
000000000000a9e0         dd         0x00000118                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000a9e4         db         0x9c, 0x9e, 2 dup (0xff)                    ; begin 0x4880
000000000000a9e8         db         0xf1, 0x02, 2 dup (0x00)                    ; length 0x2f1 (end at 0x4b71)
000000000000a9ec         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a9ed         db  0x42 ; 'B'
000000000000a9ee         db  0x0e ; '.'
000000000000a9ef         db  0x10 ; '.'
000000000000a9f0         db  0x8d ; '.'
000000000000a9f1         db  0x02 ; '.'
000000000000a9f2         db  0x42 ; 'B'
000000000000a9f3         db  0x0e ; '.'
000000000000a9f4         db  0x18 ; '.'
000000000000a9f5         db  0x8c ; '.'
000000000000a9f6         db  0x03 ; '.'
000000000000a9f7         db  0x44 ; 'D'
000000000000a9f8         db  0x0e ; '.'
000000000000a9f9         db  0x20 ; ' '
000000000000a9fa         db  0x86 ; '.'
000000000000a9fb         db  0x04 ; '.'
000000000000a9fc         db  0x41 ; 'A'
000000000000a9fd         db  0x0e ; '.'
000000000000a9fe         db  0x28 ; '('
000000000000a9ff         db  0x83 ; '.'
000000000000aa00         db  0x05 ; '.'
000000000000aa01         db  0x49 ; 'I'
000000000000aa02         db  0x0e ; '.'
000000000000aa03         db  0x70 ; 'p'
000000000000aa04         db  0x02 ; '.'
000000000000aa05         db  0xce ; '.'
000000000000aa06         db  0x0a ; '.'
000000000000aa07         db  0x0e ; '.'
000000000000aa08         db  0x28 ; '('
000000000000aa09         db  0x41 ; 'A'
000000000000aa0a         db  0x0e ; '.'
000000000000aa0b         db  0x20 ; ' '
000000000000aa0c         db  0x41 ; 'A'
000000000000aa0d         db  0x0e ; '.'
000000000000aa0e         db  0x18 ; '.'
000000000000aa0f         db  0x42 ; 'B'
000000000000aa10         db  0x0e ; '.'
000000000000aa11         db  0x10 ; '.'
000000000000aa12         db  0x42 ; 'B'
000000000000aa13         db  0x0e ; '.'
000000000000aa14         db  0x08 ; '.'
000000000000aa15         db  0x4a ; 'J'
000000000000aa16         db  0x0b ; '.'
000000000000aa17         db  0x00 ; '.'
000000000000aa18         dd         0x00000028                                  ; Length of the record
000000000000aa1c         dd         0x00000154                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000aa20         db         0x60, 0xa1, 2 dup (0xff)                    ; begin 0x4b80
000000000000aa24         db         0x0b, 0x01, 2 dup (0x00)                    ; length 0x10b (end at 0x4c8b)
000000000000aa28         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000aa29         db  0x41 ; 'A'
000000000000aa2a         db  0x0e ; '.'
000000000000aa2b         db  0x10 ; '.'
000000000000aa2c         db  0x86 ; '.'
000000000000aa2d         db  0x02 ; '.'
000000000000aa2e         db  0x41 ; 'A'
000000000000aa2f         db  0x0e ; '.'
000000000000aa30         db  0x18 ; '.'
000000000000aa31         db  0x83 ; '.'
000000000000aa32         db  0x03 ; '.'
000000000000aa33         db  0x4a ; 'J'
000000000000aa34         db  0x0e ; '.'
000000000000aa35         db  0x20 ; ' '
000000000000aa36         db  0x02 ; '.'
000000000000aa37         db  0xbd ; '.'
000000000000aa38         db  0x0a ; '.'
000000000000aa39         db  0x0e ; '.'
000000000000aa3a         db  0x18 ; '.'
000000000000aa3b         db  0x41 ; 'A'
000000000000aa3c         db  0x0e ; '.'
000000000000aa3d         db  0x10 ; '.'
000000000000aa3e         db  0x41 ; 'A'
000000000000aa3f         db  0x0e ; '.'
000000000000aa40         db  0x08 ; '.'
000000000000aa41         db  0x45 ; 'E'
000000000000aa42         db  0x0b ; '.'
000000000000aa43         db  0x00 ; '.'
000000000000aa44         dd         0x00000064                                  ; Length of the record
000000000000aa48         dd         0x00000180                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000aa4c         db         0x44, 0xa2, 2 dup (0xff)                    ; begin 0x4c90
000000000000aa50         db         0x29, 0x02, 2 dup (0x00)                    ; length 0x229 (end at 0x4eb9)
000000000000aa54         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000aa55         db  0x42 ; 'B'
000000000000aa56         db  0x0e ; '.'
000000000000aa57         db  0x10 ; '.'
000000000000aa58         db  0x8f ; '.'
000000000000aa59         db  0x02 ; '.'
000000000000aa5a         db  0x42 ; 'B'
000000000000aa5b         db  0x0e ; '.'
000000000000aa5c         db  0x18 ; '.'
000000000000aa5d         db  0x8e ; '.'
000000000000aa5e         db  0x03 ; '.'
000000000000aa5f         db  0x45 ; 'E'
000000000000aa60         db  0x0e ; '.'
000000000000aa61         db  0x20 ; ' '
000000000000aa62         db  0x8d ; '.'
000000000000aa63         db  0x04 ; '.'
000000000000aa64         db  0x42 ; 'B'
000000000000aa65         db  0x0e ; '.'
000000000000aa66         db  0x28 ; '('
000000000000aa67         db  0x8c ; '.'
000000000000aa68         db  0x05 ; '.'
000000000000aa69         db  0x44 ; 'D'
000000000000aa6a         db  0x0e ; '.'
000000000000aa6b         db  0x30 ; '0'
000000000000aa6c         db  0x86 ; '.'
000000000000aa6d         db  0x06 ; '.'
000000000000aa6e         db  0x41 ; 'A'
000000000000aa6f         db  0x0e ; '.'
000000000000aa70         db  0x38 ; '8'
000000000000aa71         db  0x83 ; '.'
000000000000aa72         db  0x07 ; '.'
000000000000aa73         db  0x51 ; 'Q'
000000000000aa74         db  0x0e ; '.'
000000000000aa75         db  0x70 ; 'p'
000000000000aa76         db  0x03 ; '.'
000000000000aa77         db  0x1b ; '.'
000000000000aa78         db  0x01 ; '.'
000000000000aa79         db  0x0a ; '.'
000000000000aa7a         db  0x0e ; '.'
000000000000aa7b         db  0x38 ; '8'
000000000000aa7c         db  0x41 ; 'A'
000000000000aa7d         db  0x0e ; '.'
000000000000aa7e         db  0x30 ; '0'
000000000000aa7f         db  0x41 ; 'A'
000000000000aa80         db  0x0e ; '.'
000000000000aa81         db  0x28 ; '('
000000000000aa82         db  0x42 ; 'B'
000000000000aa83         db  0x0e ; '.'
000000000000aa84         db  0x20 ; ' '
000000000000aa85         db  0x42 ; 'B'
000000000000aa86         db  0x0e ; '.'
000000000000aa87         db  0x18 ; '.'
000000000000aa88         db  0x42 ; 'B'
000000000000aa89         db  0x0e ; '.'
000000000000aa8a         db  0x10 ; '.'
000000000000aa8b         db  0x42 ; 'B'
000000000000aa8c         db  0x0e ; '.'
000000000000aa8d         db  0x08 ; '.'
000000000000aa8e         db  0x41 ; 'A'
000000000000aa8f         db  0x0b ; '.'
000000000000aa90         db  0x02 ; '.'
000000000000aa91         db  0xa4 ; '.'
000000000000aa92         db  0x0a ; '.'
000000000000aa93         db  0x0e ; '.'
000000000000aa94         db  0x38 ; '8'
000000000000aa95         db  0x41 ; 'A'
000000000000aa96         db  0x0e ; '.'
000000000000aa97         db  0x30 ; '0'
000000000000aa98         db  0x41 ; 'A'
000000000000aa99         db  0x0e ; '.'
000000000000aa9a         db  0x28 ; '('
000000000000aa9b         db  0x42 ; 'B'
000000000000aa9c         db  0x0e ; '.'
000000000000aa9d         db  0x20 ; ' '
000000000000aa9e         db  0x42 ; 'B'
000000000000aa9f         db  0x0e ; '.'
000000000000aaa0         db  0x18 ; '.'
000000000000aaa1         db  0x42 ; 'B'
000000000000aaa2         db  0x0e ; '.'
000000000000aaa3         db  0x10 ; '.'
000000000000aaa4         db  0x42 ; 'B'
000000000000aaa5         db  0x0e ; '.'
000000000000aaa6         db  0x08 ; '.'
000000000000aaa7         db  0x41 ; 'A'
000000000000aaa8         db  0x0b ; '.'
000000000000aaa9         db  0x00 ; '.'
000000000000aaaa         db  0x00 ; '.'
000000000000aaab         db  0x00 ; '.'
000000000000aaac         dd         0x00000028                                  ; Length of the record
000000000000aab0         dd         0x000001e8                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000aab4         db         0x0c, 0xa4, 2 dup (0xff)                    ; begin 0x4ec0
000000000000aab8         db         0x2a, 0x04, 2 dup (0x00)                    ; length 0x42a (end at 0x52ea)
000000000000aabc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000aabd         db  0x42 ; 'B'
000000000000aabe         db  0x0e ; '.'
000000000000aabf         db  0x10 ; '.'
000000000000aac0         db  0x8d ; '.'
000000000000aac1         db  0x02 ; '.'
000000000000aac2         db  0x42 ; 'B'
000000000000aac3         db  0x0e ; '.'
000000000000aac4         db  0x18 ; '.'
000000000000aac5         db  0x8c ; '.'
000000000000aac6         db  0x03 ; '.'
000000000000aac7         db  0x46 ; 'F'
000000000000aac8         db  0x0e ; '.'
000000000000aac9         db  0x20 ; ' '
000000000000aaca         db  0x86 ; '.'
000000000000aacb         db  0x04 ; '.'
000000000000aacc         db  0x41 ; 'A'
000000000000aacd         db  0x0e ; '.'
000000000000aace         db  0x28 ; '('
000000000000aacf         db  0x83 ; '.'
000000000000aad0         db  0x05 ; '.'
000000000000aad1         db  0x49 ; 'I'
000000000000aad2         db  0x0e ; '.'
000000000000aad3         db  0xb0 ; '.'
000000000000aad4         db  0x01 ; '.'
000000000000aad5         db  0x00 ; '.'
000000000000aad6         db  0x00 ; '.'
000000000000aad7         db  0x00 ; '.'
000000000000aad8         dd         0x0000005c                                  ; Length of the record
000000000000aadc         dd         0x00000214                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000aae0         db         0x00, 0x75, 2 dup (0xff)                    ; begin 0x1fe0
000000000000aae4         db         0x2f, 0x1d, 2 dup (0x00)                    ; length 0x1d2f (end at 0x3d0f)
000000000000aae8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000aae9         db  0x42 ; 'B'
000000000000aaea         db  0x0e ; '.'
000000000000aaeb         db  0x10 ; '.'
000000000000aaec         db  0x8f ; '.'
000000000000aaed         db  0x02 ; '.'
000000000000aaee         db  0x42 ; 'B'
000000000000aaef         db  0x0e ; '.'
000000000000aaf0         db  0x18 ; '.'
000000000000aaf1         db  0x8e ; '.'
000000000000aaf2         db  0x03 ; '.'
000000000000aaf3         db  0x45 ; 'E'
000000000000aaf4         db  0x0e ; '.'
000000000000aaf5         db  0x20 ; ' '
000000000000aaf6         db  0x8d ; '.'
000000000000aaf7         db  0x04 ; '.'
000000000000aaf8         db  0x42 ; 'B'
000000000000aaf9         db  0x0e ; '.'
000000000000aafa         db  0x28 ; '('
000000000000aafb         db  0x8c ; '.'
000000000000aafc         db  0x05 ; '.'
000000000000aafd         db  0x44 ; 'D'
000000000000aafe         db  0x0e ; '.'
000000000000aaff         db  0x30 ; '0'
000000000000ab00         db  0x86 ; '.'
000000000000ab01         db  0x06 ; '.'
000000000000ab02         db  0x41 ; 'A'
000000000000ab03         db  0x0e ; '.'
000000000000ab04         db  0x38 ; '8'
000000000000ab05         db  0x83 ; '.'
000000000000ab06         db  0x07 ; '.'
000000000000ab07         db  0x4c ; 'L'
000000000000ab08         db  0x0e ; '.'
000000000000ab09         db  0x80 ; '.'
000000000000ab0a         db  0x03 ; '.'
000000000000ab0b         db  0x03 ; '.'
000000000000ab0c         db  0x00 ; '.'
000000000000ab0d         db  0x02 ; '.'
000000000000ab0e         db  0x0a ; '.'
000000000000ab0f         db  0x0e ; '.'
000000000000ab10         db  0x88 ; '.'
000000000000ab11         db  0x03 ; '.'
000000000000ab12         db  0x50 ; 'P'
000000000000ab13         db  0x0e ; '.'
000000000000ab14         db  0x90 ; '.'
000000000000ab15         db  0x03 ; '.'
000000000000ab16         db  0x74 ; 't'
000000000000ab17         db  0x0b ; '.'
000000000000ab18         db  0x03 ; '.'
000000000000ab19         db  0x1f ; '.'
000000000000ab1a         db  0x0d ; '.'
000000000000ab1b         db  0x0a ; '.'
000000000000ab1c         db  0x0e ; '.'
000000000000ab1d         db  0x38 ; '8'
000000000000ab1e         db  0x41 ; 'A'
000000000000ab1f         db  0x0e ; '.'
000000000000ab20         db  0x30 ; '0'
000000000000ab21         db  0x41 ; 'A'
000000000000ab22         db  0x0e ; '.'
000000000000ab23         db  0x28 ; '('
000000000000ab24         db  0x42 ; 'B'
000000000000ab25         db  0x0e ; '.'
000000000000ab26         db  0x20 ; ' '
000000000000ab27         db  0x42 ; 'B'
000000000000ab28         db  0x0e ; '.'
000000000000ab29         db  0x18 ; '.'
000000000000ab2a         db  0x42 ; 'B'
000000000000ab2b         db  0x0e ; '.'
000000000000ab2c         db  0x10 ; '.'
000000000000ab2d         db  0x42 ; 'B'
000000000000ab2e         db  0x0e ; '.'
000000000000ab2f         db  0x08 ; '.'
000000000000ab30         db  0x41 ; 'A'
000000000000ab31         db  0x0b ; '.'
000000000000ab32         db  0x00 ; '.'
000000000000ab33         db  0x00 ; '.'
000000000000ab34         db  0x00 ; '.'
000000000000ab35         db  0x00 ; '.'
000000000000ab36         db  0x00 ; '.'
000000000000ab37         db  0x00 ; '.'
000000000000ab38         dd         0x00000010                                  ; Length of the record
000000000000ab3c         dd         0x00000274                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000ab40         db         0xb0, 0xa7, 2 dup (0xff)                    ; begin 0x52f0
000000000000ab44         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x52f8)
000000000000ab48         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ab49         align      4
000000000000ab4c         dd         0x00000010                                  ; Length of the record
000000000000ab50         dd         0x00000288                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000ab54         db         0xac, 0xa7, 2 dup (0xff)                    ; begin 0x5300
000000000000ab58         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x5308)
000000000000ab5c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ab5d         align      32
000000000000ab60         dd         0x0000002c                                  ; Length of the record
000000000000ab64         dd         0x0000029c                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000ab68         db         0xa8, 0xa7, 2 dup (0xff)                    ; begin 0x5310
000000000000ab6c         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x53b4)
000000000000ab70         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ab71         db  0x41 ; 'A'
000000000000ab72         db  0x0e ; '.'
000000000000ab73         db  0x10 ; '.'
000000000000ab74         db  0x86 ; '.'
000000000000ab75         db  0x02 ; '.'
000000000000ab76         db  0x41 ; 'A'
000000000000ab77         db  0x0e ; '.'
000000000000ab78         db  0x18 ; '.'
000000000000ab79         db  0x83 ; '.'
000000000000ab7a         db  0x03 ; '.'
000000000000ab7b         db  0x44 ; 'D'
000000000000ab7c         db  0x0e ; '.'
000000000000ab7d         db  0x20 ; ' '
000000000000ab7e         db  0x7a ; 'z'
000000000000ab7f         db  0x0a ; '.'
000000000000ab80         db  0x0e ; '.'
000000000000ab81         db  0x18 ; '.'
000000000000ab82         db  0x41 ; 'A'
000000000000ab83         db  0x0e ; '.'
000000000000ab84         db  0x10 ; '.'
000000000000ab85         db  0x41 ; 'A'
000000000000ab86         db  0x0e ; '.'
000000000000ab87         db  0x08 ; '.'
000000000000ab88         db  0x41 ; 'A'
000000000000ab89         db  0x0b ; '.'
000000000000ab8a         db  0x00 ; '.'
000000000000ab8b         db  0x00 ; '.'
000000000000ab8c         db  0x00 ; '.'
000000000000ab8d         db  0x00 ; '.'
000000000000ab8e         db  0x00 ; '.'
000000000000ab8f         db  0x00 ; '.'
000000000000ab90         dd         0x00000010                                  ; Length of the record
000000000000ab94         dd         0x000002cc                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000ab98         db         0x28, 0xa8, 2 dup (0xff)                    ; begin 0x53c0
000000000000ab9c         db         0x5c, 3 dup (0x00)                          ; length 0x5c (end at 0x541c)
000000000000aba0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000aba1         align      4
000000000000aba4         dd         0x00000028                                  ; Length of the record
000000000000aba8         dd         0x000002e0                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000abac         db         0x74, 0xa8, 2 dup (0xff)                    ; begin 0x5420
000000000000abb0         db         0x47, 3 dup (0x00)                          ; length 0x47 (end at 0x5467)
000000000000abb4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000abb5         db  0x41 ; 'A'
000000000000abb6         db  0x0e ; '.'
000000000000abb7         db  0x10 ; '.'
000000000000abb8         db  0x83 ; '.'
000000000000abb9         db  0x02 ; '.'
000000000000abba         db  0x5a ; 'Z'
000000000000abbb         db  0x0a ; '.'
000000000000abbc         db  0x0e ; '.'
000000000000abbd         db  0x08 ; '.'
000000000000abbe         db  0x45 ; 'E'
000000000000abbf         db  0x0b ; '.'
000000000000abc0         db  0x5d ; ']'
000000000000abc1         db  0x0a ; '.'
000000000000abc2         db  0x0e ; '.'
000000000000abc3         db  0x08 ; '.'
000000000000abc4         db  0x43 ; 'C'
000000000000abc5         db  0x0b ; '.'
000000000000abc6         db  0x46 ; 'F'
000000000000abc7         db  0x0e ; '.'
000000000000abc8         db  0x08 ; '.'
000000000000abc9         db  0x00 ; '.'
000000000000abca         db  0x00 ; '.'
000000000000abcb         db  0x00 ; '.'
000000000000abcc         db  0x00 ; '.'
000000000000abcd         db  0x00 ; '.'
000000000000abce         db  0x00 ; '.'
000000000000abcf         db  0x00 ; '.'
000000000000abd0         dd         0x0000001c                                  ; Length of the record
000000000000abd4         dd         0x0000030c                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000abd8         db         0x98, 0xa8, 2 dup (0xff)                    ; begin 0x5470
000000000000abdc         db         0x6e, 3 dup (0x00)                          ; length 0x6e (end at 0x54de)
000000000000abe0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000abe1         db  0x44 ; 'D'
000000000000abe2         db  0x0e ; '.'
000000000000abe3         db  0x60 ; '`'
000000000000abe4         db  0x7f ; '.'
000000000000abe5         db  0x0a ; '.'
000000000000abe6         db  0x0e ; '.'
000000000000abe7         db  0x08 ; '.'
000000000000abe8         db  0x45 ; 'E'
000000000000abe9         db  0x0b ; '.'
000000000000abea         db  0x00 ; '.'
000000000000abeb         db  0x00 ; '.'
000000000000abec         db  0x00 ; '.'
000000000000abed         db  0x00 ; '.'
000000000000abee         db  0x00 ; '.'
000000000000abef         db  0x00 ; '.'
000000000000abf0         dd         0x00000034                                  ; Length of the record
000000000000abf4         dd         0x0000032c                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000abf8         db         0xe8, 0xa8, 2 dup (0xff)                    ; begin 0x54e0
000000000000abfc         db         0x56, 3 dup (0x00)                          ; length 0x56 (end at 0x5536)
000000000000ac00         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ac01         db  0x42 ; 'B'
000000000000ac02         db  0x0e ; '.'
000000000000ac03         db  0x10 ; '.'
000000000000ac04         db  0x8d ; '.'
000000000000ac05         db  0x02 ; '.'
000000000000ac06         db  0x42 ; 'B'
000000000000ac07         db  0x0e ; '.'
000000000000ac08         db  0x18 ; '.'
000000000000ac09         db  0x8c ; '.'
000000000000ac0a         db  0x03 ; '.'
000000000000ac0b         db  0x43 ; 'C'
000000000000ac0c         db  0x0e ; '.'
000000000000ac0d         db  0x20 ; ' '
000000000000ac0e         db  0x86 ; '.'
000000000000ac0f         db  0x04 ; '.'
000000000000ac10         db  0x41 ; 'A'
000000000000ac11         db  0x0e ; '.'
000000000000ac12         db  0x28 ; '('
000000000000ac13         db  0x83 ; '.'
000000000000ac14         db  0x05 ; '.'
000000000000ac15         db  0x4d ; 'M'
000000000000ac16         db  0x0e ; '.'
000000000000ac17         db  0x30 ; '0'
000000000000ac18         db  0x78 ; 'x'
000000000000ac19         db  0x0e ; '.'
000000000000ac1a         db  0x28 ; '('
000000000000ac1b         db  0x43 ; 'C'
000000000000ac1c         db  0x0e ; '.'
000000000000ac1d         db  0x20 ; ' '
000000000000ac1e         db  0x41 ; 'A'
000000000000ac1f         db  0x0e ; '.'
000000000000ac20         db  0x18 ; '.'
000000000000ac21         db  0x42 ; 'B'
000000000000ac22         db  0x0e ; '.'
000000000000ac23         db  0x10 ; '.'
000000000000ac24         db  0x42 ; 'B'
000000000000ac25         db  0x0e ; '.'
000000000000ac26         db  0x08 ; '.'
000000000000ac27         db  0x00 ; '.'
000000000000ac28         dd         0x0000004c                                  ; Length of the record
000000000000ac2c         dd         0x00000364                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000ac30         db         0x10, 0xa9, 2 dup (0xff)                    ; begin 0x5540
000000000000ac34         db         0x76, 3 dup (0x00)                          ; length 0x76 (end at 0x55b6)
000000000000ac38         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ac39         db  0x42 ; 'B'
000000000000ac3a         db  0x0e ; '.'
000000000000ac3b         db  0x10 ; '.'
000000000000ac3c         db  0x8d ; '.'
000000000000ac3d         db  0x02 ; '.'
000000000000ac3e         db  0x42 ; 'B'
000000000000ac3f         db  0x0e ; '.'
000000000000ac40         db  0x18 ; '.'
000000000000ac41         db  0x8c ; '.'
000000000000ac42         db  0x03 ; '.'
000000000000ac43         db  0x41 ; 'A'
000000000000ac44         db  0x0e ; '.'
000000000000ac45         db  0x20 ; ' '
000000000000ac46         db  0x86 ; '.'
000000000000ac47         db  0x04 ; '.'
000000000000ac48         db  0x41 ; 'A'
000000000000ac49         db  0x0e ; '.'
000000000000ac4a         db  0x28 ; '('
000000000000ac4b         db  0x83 ; '.'
000000000000ac4c         db  0x05 ; '.'
000000000000ac4d         db  0x44 ; 'D'
000000000000ac4e         db  0x0e ; '.'
000000000000ac4f         db  0x30 ; '0'
000000000000ac50         db  0x7e ; '~'
000000000000ac51         db  0x0a ; '.'
000000000000ac52         db  0x0e ; '.'
000000000000ac53         db  0x28 ; '('
000000000000ac54         db  0x44 ; 'D'
000000000000ac55         db  0x0e ; '.'
000000000000ac56         db  0x20 ; ' '
000000000000ac57         db  0x41 ; 'A'
000000000000ac58         db  0x0e ; '.'
000000000000ac59         db  0x18 ; '.'
000000000000ac5a         db  0x42 ; 'B'
000000000000ac5b         db  0x0e ; '.'
000000000000ac5c         db  0x10 ; '.'
000000000000ac5d         db  0x42 ; 'B'
000000000000ac5e         db  0x0e ; '.'
000000000000ac5f         db  0x08 ; '.'
000000000000ac60         db  0x47 ; 'G'
000000000000ac61         db  0x0b ; '.'
000000000000ac62         db  0x4f ; 'O'
000000000000ac63         db  0x0a ; '.'
000000000000ac64         db  0x0e ; '.'
000000000000ac65         db  0x28 ; '('
000000000000ac66         db  0x44 ; 'D'
000000000000ac67         db  0x0e ; '.'
000000000000ac68         db  0x20 ; ' '
000000000000ac69         db  0x41 ; 'A'
000000000000ac6a         db  0x0e ; '.'
000000000000ac6b         db  0x18 ; '.'
000000000000ac6c         db  0x42 ; 'B'
000000000000ac6d         db  0x0e ; '.'
000000000000ac6e         db  0x10 ; '.'
000000000000ac6f         db  0x42 ; 'B'
000000000000ac70         db  0x0e ; '.'
000000000000ac71         db  0x08 ; '.'
000000000000ac72         db  0x41 ; 'A'
000000000000ac73         db  0x0b ; '.'
000000000000ac74         db  0x00 ; '.'
000000000000ac75         db  0x00 ; '.'
000000000000ac76         db  0x00 ; '.'
000000000000ac77         db  0x00 ; '.'
000000000000ac78         dd         0x00000014                                  ; Length of the record
000000000000ac7c         dd         0x000003b4                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000ac80         db         0x40, 0xa9, 2 dup (0xff)                    ; begin 0x55c0
000000000000ac84         db         0x42, 3 dup (0x00)                          ; length 0x42 (end at 0x5602)
000000000000ac88         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ac89         align      16
000000000000ac90         dd         0x0000001c                                  ; Length of the record
000000000000ac94         dd         0x000003cc                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000ac98         db         0x78, 0xa9, 2 dup (0xff)                    ; begin 0x5610
000000000000ac9c         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x56af)
000000000000aca0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000aca1         db  0x44 ; 'D'
000000000000aca2         db  0x0e ; '.'
000000000000aca3         db  0x10 ; '.'
000000000000aca4         db  0x83 ; '.'
000000000000aca5         db  0x02 ; '.'
000000000000aca6         db  0x02 ; '.'
000000000000aca7         db  0x78 ; 'x'
000000000000aca8         db  0x0a ; '.'
000000000000aca9         db  0x0e ; '.'
000000000000acaa         db  0x08 ; '.'
000000000000acab         db  0x41 ; 'A'
000000000000acac         db  0x0b ; '.'
000000000000acad         db  0x00 ; '.'
000000000000acae         db  0x00 ; '.'
000000000000acaf         db  0x00 ; '.'
000000000000acb0         dd         0x00000040                                  ; Length of the record
000000000000acb4         dd         0x000003ec                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000acb8         db         0xf8, 0xa9, 2 dup (0xff)                    ; begin 0x56b0
000000000000acbc         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x5797)
000000000000acc0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000acc1         db  0x41 ; 'A'
000000000000acc2         db  0x0e ; '.'
000000000000acc3         db  0x10 ; '.'
000000000000acc4         db  0x86 ; '.'
000000000000acc5         db  0x02 ; '.'
000000000000acc6         db  0x41 ; 'A'
000000000000acc7         db  0x0e ; '.'
000000000000acc8         db  0x18 ; '.'
000000000000acc9         db  0x83 ; '.'
000000000000acca         db  0x03 ; '.'
000000000000accb         db  0x49 ; 'I'
000000000000accc         db  0x0e ; '.'
000000000000accd         db  0x20 ; ' '
000000000000acce         db  0x6e ; 'n'
000000000000accf         db  0x0a ; '.'
000000000000acd0         db  0x0e ; '.'
000000000000acd1         db  0x18 ; '.'
000000000000acd2         db  0x41 ; 'A'
000000000000acd3         db  0x0e ; '.'
000000000000acd4         db  0x10 ; '.'
000000000000acd5         db  0x41 ; 'A'
000000000000acd6         db  0x0e ; '.'
000000000000acd7         db  0x08 ; '.'
000000000000acd8         db  0x45 ; 'E'
000000000000acd9         db  0x0b ; '.'
000000000000acda         db  0x02 ; '.'
000000000000acdb         db  0x4a ; 'J'
000000000000acdc         db  0x0a ; '.'
000000000000acdd         db  0x0e ; '.'
000000000000acde         db  0x18 ; '.'
000000000000acdf         db  0x41 ; 'A'
000000000000ace0         db  0x0e ; '.'
000000000000ace1         db  0x10 ; '.'
000000000000ace2         db  0x41 ; 'A'
000000000000ace3         db  0x0e ; '.'
000000000000ace4         db  0x08 ; '.'
000000000000ace5         db  0x44 ; 'D'
000000000000ace6         db  0x0b ; '.'
000000000000ace7         db  0x02 ; '.'
000000000000ace8         db  0x54 ; 'T'
000000000000ace9         db  0x0e ; '.'
000000000000acea         db  0x18 ; '.'
000000000000aceb         db  0x41 ; 'A'
000000000000acec         db  0x0e ; '.'
000000000000aced         db  0x10 ; '.'
000000000000acee         db  0x41 ; 'A'
000000000000acef         db  0x0e ; '.'
000000000000acf0         db  0x08 ; '.'
000000000000acf1         db  0x00 ; '.'
000000000000acf2         db  0x00 ; '.'
000000000000acf3         db  0x00 ; '.'
000000000000acf4         dd         0x00000074                                  ; Length of the record
000000000000acf8         dd         0x00000430                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000acfc         db         0xa4, 0xaa, 2 dup (0xff)                    ; begin 0x57a0
000000000000ad00         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x69d4)
000000000000ad04         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ad05         db  0x42 ; 'B'
000000000000ad06         db  0x0e ; '.'
000000000000ad07         db  0x10 ; '.'
000000000000ad08         db  0x8f ; '.'
000000000000ad09         db  0x02 ; '.'
000000000000ad0a         db  0x42 ; 'B'
000000000000ad0b         db  0x0e ; '.'
000000000000ad0c         db  0x18 ; '.'
000000000000ad0d         db  0x8e ; '.'
000000000000ad0e         db  0x03 ; '.'
000000000000ad0f         db  0x45 ; 'E'
000000000000ad10         db  0x0e ; '.'
000000000000ad11         db  0x20 ; ' '
000000000000ad12         db  0x8d ; '.'
000000000000ad13         db  0x04 ; '.'
000000000000ad14         db  0x42 ; 'B'
000000000000ad15         db  0x0e ; '.'
000000000000ad16         db  0x28 ; '('
000000000000ad17         db  0x8c ; '.'
000000000000ad18         db  0x05 ; '.'
000000000000ad19         db  0x44 ; 'D'
000000000000ad1a         db  0x0e ; '.'
000000000000ad1b         db  0x30 ; '0'
000000000000ad1c         db  0x86 ; '.'
000000000000ad1d         db  0x06 ; '.'
000000000000ad1e         db  0x41 ; 'A'
000000000000ad1f         db  0x0e ; '.'
000000000000ad20         db  0x38 ; '8'
000000000000ad21         db  0x83 ; '.'
000000000000ad22         db  0x07 ; '.'
000000000000ad23         db  0x53 ; 'S'
000000000000ad24         db  0x0e ; '.'
000000000000ad25         db  0xf0 ; '.'
000000000000ad26         db  0x01 ; '.'
000000000000ad27         db  0x03 ; '.'
000000000000ad28         db  0x81 ; '.'
000000000000ad29         db  0x0b ; '.'
000000000000ad2a         db  0x0e ; '.'
000000000000ad2b         db  0xf8 ; '.'
000000000000ad2c         db  0x01 ; '.'
000000000000ad2d         db  0x4a ; 'J'
000000000000ad2e         db  0x0e ; '.'
000000000000ad2f         db  0x80 ; '.'
000000000000ad30         db  0x02 ; '.'
000000000000ad31         db  0x44 ; 'D'
000000000000ad32         db  0x0e ; '.'
000000000000ad33         db  0x88 ; '.'
000000000000ad34         db  0x02 ; '.'
000000000000ad35         db  0x45 ; 'E'
000000000000ad36         db  0x0e ; '.'
000000000000ad37         db  0x90 ; '.'
000000000000ad38         db  0x02 ; '.'
000000000000ad39         db  0x5f ; '_'
000000000000ad3a         db  0x0e ; '.'
000000000000ad3b         db  0xf0 ; '.'
000000000000ad3c         db  0x01 ; '.'
000000000000ad3d         db  0x64 ; 'd'
000000000000ad3e         db  0x0a ; '.'
000000000000ad3f         db  0x0e ; '.'
000000000000ad40         db  0x38 ; '8'
000000000000ad41         db  0x41 ; 'A'
000000000000ad42         db  0x0e ; '.'
000000000000ad43         db  0x30 ; '0'
000000000000ad44         db  0x41 ; 'A'
000000000000ad45         db  0x0e ; '.'
000000000000ad46         db  0x28 ; '('
000000000000ad47         db  0x42 ; 'B'
000000000000ad48         db  0x0e ; '.'
000000000000ad49         db  0x20 ; ' '
000000000000ad4a         db  0x42 ; 'B'
000000000000ad4b         db  0x0e ; '.'
000000000000ad4c         db  0x18 ; '.'
000000000000ad4d         db  0x42 ; 'B'
000000000000ad4e         db  0x0e ; '.'
000000000000ad4f         db  0x10 ; '.'
000000000000ad50         db  0x42 ; 'B'
000000000000ad51         db  0x0e ; '.'
000000000000ad52         db  0x08 ; '.'
000000000000ad53         db  0x44 ; 'D'
000000000000ad54         db  0x0b ; '.'
000000000000ad55         db  0x03 ; '.'
000000000000ad56         db  0x99 ; '.'
000000000000ad57         db  0x05 ; '.'
000000000000ad58         db  0x0e ; '.'
000000000000ad59         db  0xf8 ; '.'
000000000000ad5a         db  0x01 ; '.'
000000000000ad5b         db  0x4d ; 'M'
000000000000ad5c         db  0x0e ; '.'
000000000000ad5d         db  0x80 ; '.'
000000000000ad5e         db  0x02 ; '.'
000000000000ad5f         db  0x44 ; 'D'
000000000000ad60         db  0x0e ; '.'
000000000000ad61         db  0x88 ; '.'
000000000000ad62         db  0x02 ; '.'
000000000000ad63         db  0x47 ; 'G'
000000000000ad64         db  0x0e ; '.'
000000000000ad65         db  0x90 ; '.'
000000000000ad66         db  0x02 ; '.'
000000000000ad67         db  0x5b ; '['
000000000000ad68         db  0x0e ; '.'
000000000000ad69         db  0xf0 ; '.'
000000000000ad6a         db  0x01 ; '.'
000000000000ad6b         db  0x00 ; '.'
000000000000ad6c         dd         0x00000068                                  ; Length of the record
000000000000ad70         dd         0x000004a8                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000ad74         db         0x6c, 0xbc, 2 dup (0xff)                    ; begin 0x69e0
000000000000ad78         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x6b8b)
000000000000ad7c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ad7d         db  0x42 ; 'B'
000000000000ad7e         db  0x0e ; '.'
000000000000ad7f         db  0x10 ; '.'
000000000000ad80         db  0x8f ; '.'
000000000000ad81         db  0x02 ; '.'
000000000000ad82         db  0x42 ; 'B'
000000000000ad83         db  0x0e ; '.'
000000000000ad84         db  0x18 ; '.'
000000000000ad85         db  0x8e ; '.'
000000000000ad86         db  0x03 ; '.'
000000000000ad87         db  0x45 ; 'E'
000000000000ad88         db  0x0e ; '.'
000000000000ad89         db  0x20 ; ' '
000000000000ad8a         db  0x8d ; '.'
000000000000ad8b         db  0x04 ; '.'
000000000000ad8c         db  0x42 ; 'B'
000000000000ad8d         db  0x0e ; '.'
000000000000ad8e         db  0x28 ; '('
000000000000ad8f         db  0x8c ; '.'
000000000000ad90         db  0x05 ; '.'
000000000000ad91         db  0x44 ; 'D'
000000000000ad92         db  0x0e ; '.'
000000000000ad93         db  0x30 ; '0'
000000000000ad94         db  0x86 ; '.'
000000000000ad95         db  0x06 ; '.'
000000000000ad96         db  0x41 ; 'A'
000000000000ad97         db  0x0e ; '.'
000000000000ad98         db  0x38 ; '8'
000000000000ad99         db  0x83 ; '.'
000000000000ad9a         db  0x07 ; '.'
000000000000ad9b         db  0x47 ; 'G'
000000000000ad9c         db  0x0e ; '.'
000000000000ad9d         db  0x60 ; '`'
000000000000ad9e         db  0x02 ; '.'
000000000000ad9f         db  0x99 ; '.'
000000000000ada0         db  0x0e ; '.'
000000000000ada1         db  0x68 ; 'h'
000000000000ada2         db  0x5f ; '_'
000000000000ada3         db  0x0e ; '.'
000000000000ada4         db  0x70 ; 'p'
000000000000ada5         db  0x46 ; 'F'
000000000000ada6         db  0x0e ; '.'
000000000000ada7         db  0x78 ; 'x'
000000000000ada8         db  0x42 ; 'B'
000000000000ada9         db  0x0e ; '.'
000000000000adaa         db  0x80 ; '.'
000000000000adab         db  0x01 ; '.'
000000000000adac         db  0x59 ; 'Y'
000000000000adad         db  0x0e ; '.'
000000000000adae         db  0x60 ; '`'
000000000000adaf         db  0x02 ; '.'
000000000000adb0         db  0x40 ; '@'
000000000000adb1         db  0x0e ; '.'
000000000000adb2         db  0x68 ; 'h'
000000000000adb3         db  0x4b ; 'K'
000000000000adb4         db  0x0e ; '.'
000000000000adb5         db  0x70 ; 'p'
000000000000adb6         db  0x43 ; 'C'
000000000000adb7         db  0x0e ; '.'
000000000000adb8         db  0x78 ; 'x'
000000000000adb9         db  0x45 ; 'E'
000000000000adba         db  0x0e ; '.'
000000000000adbb         db  0x80 ; '.'
000000000000adbc         db  0x01 ; '.'
000000000000adbd         db  0x5e ; '^'
000000000000adbe         db  0x0e ; '.'
000000000000adbf         db  0x60 ; '`'
000000000000adc0         db  0x4c ; 'L'
000000000000adc1         db  0x0a ; '.'
000000000000adc2         db  0x0e ; '.'
000000000000adc3         db  0x38 ; '8'
000000000000adc4         db  0x44 ; 'D'
000000000000adc5         db  0x0e ; '.'
000000000000adc6         db  0x30 ; '0'
000000000000adc7         db  0x41 ; 'A'
000000000000adc8         db  0x0e ; '.'
000000000000adc9         db  0x28 ; '('
000000000000adca         db  0x42 ; 'B'
000000000000adcb         db  0x0e ; '.'
000000000000adcc         db  0x20 ; ' '
000000000000adcd         db  0x42 ; 'B'
000000000000adce         db  0x0e ; '.'
000000000000adcf         db  0x18 ; '.'
000000000000add0         db  0x42 ; 'B'
000000000000add1         db  0x0e ; '.'
000000000000add2         db  0x10 ; '.'
000000000000add3         db  0x42 ; 'B'
000000000000add4         db  0x0e ; '.'
000000000000add5         db  0x08 ; '.'
000000000000add6         db  0x46 ; 'F'
000000000000add7         db  0x0b ; '.'
000000000000add8         dd         0x00000028                                  ; Length of the record
000000000000addc         dd         0x00000514                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000ade0         db         0xb0, 0xbd, 2 dup (0xff)                    ; begin 0x6b90
000000000000ade4         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x6bc6)
000000000000ade8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ade9         db  0x42 ; 'B'
000000000000adea         db  0x0e ; '.'
000000000000adeb         db  0x10 ; '.'
000000000000adec         db  0x8c ; '.'
000000000000aded         db  0x02 ; '.'
000000000000adee         db  0x41 ; 'A'
000000000000adef         db  0x0e ; '.'
000000000000adf0         db  0x18 ; '.'
000000000000adf1         db  0x86 ; '.'
000000000000adf2         db  0x03 ; '.'
000000000000adf3         db  0x41 ; 'A'
000000000000adf4         db  0x0e ; '.'
000000000000adf5         db  0x20 ; ' '
000000000000adf6         db  0x83 ; '.'
000000000000adf7         db  0x04 ; '.'
000000000000adf8         db  0x6e ; 'n'
000000000000adf9         db  0x0e ; '.'
000000000000adfa         db  0x18 ; '.'
000000000000adfb         db  0x41 ; 'A'
000000000000adfc         db  0x0e ; '.'
000000000000adfd         db  0x10 ; '.'
000000000000adfe         db  0x42 ; 'B'
000000000000adff         db  0x0e ; '.'
000000000000ae00         db  0x08 ; '.'
000000000000ae01         db  0x00 ; '.'
000000000000ae02         db  0x00 ; '.'
000000000000ae03         db  0x00 ; '.'
000000000000ae04         dd         0x00000010                                  ; Length of the record
000000000000ae08         dd         0x00000540                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000ae0c         db         0xc4, 0xbd, 2 dup (0xff)                    ; begin 0x6bd0
000000000000ae10         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x6be1)
000000000000ae14         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ae15         align      8
000000000000ae18         dd         0x00000010                                  ; Length of the record
000000000000ae1c         dd         0x00000554                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000ae20         db         0xd0, 0xbd, 2 dup (0xff)                    ; begin 0x6bf0
000000000000ae24         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x6c01)
000000000000ae28         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ae29         align      4
000000000000ae2c         dd         0x00000010                                  ; Length of the record
000000000000ae30         dd         0x00000568                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000ae34         db         0xdc, 0xbd, 2 dup (0xff)                    ; begin 0x6c10
000000000000ae38         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x6c45)
000000000000ae3c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ae3d         align      64
000000000000ae40         dd         0x00000010                                  ; Length of the record
000000000000ae44         dd         0x0000057c                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000ae48         db         0x08, 0xbe, 2 dup (0xff)                    ; begin 0x6c50
000000000000ae4c         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x6c65)
000000000000ae50         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ae51         align      4
000000000000ae54         dd         0x00000010                                  ; Length of the record
000000000000ae58         dd         0x00000590                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000ae5c         db         0x14, 0xbe, 2 dup (0xff)                    ; begin 0x6c70
000000000000ae60         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x6ca0)
000000000000ae64         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ae65         db  0x6b ; 'k'
000000000000ae66         db  0x0e ; '.'
000000000000ae67         db  0x10 ; '.'
000000000000ae68         dd         0x00000050                                  ; Length of the record
000000000000ae6c         dd         0x000005a4                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000ae70         db         0x30, 0xbe, 2 dup (0xff)                    ; begin 0x6ca0
000000000000ae74         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x6d14)
000000000000ae78         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ae79         db  0x42 ; 'B'
000000000000ae7a         db  0x0e ; '.'
000000000000ae7b         db  0x10 ; '.'
000000000000ae7c         db  0x8f ; '.'
000000000000ae7d         db  0x02 ; '.'
000000000000ae7e         db  0x42 ; 'B'
000000000000ae7f         db  0x0e ; '.'
000000000000ae80         db  0x18 ; '.'
000000000000ae81         db  0x8e ; '.'
000000000000ae82         db  0x03 ; '.'
000000000000ae83         db  0x49 ; 'I'
000000000000ae84         db  0x0e ; '.'
000000000000ae85         db  0x20 ; ' '
000000000000ae86         db  0x8d ; '.'
000000000000ae87         db  0x04 ; '.'
000000000000ae88         db  0x42 ; 'B'
000000000000ae89         db  0x0e ; '.'
000000000000ae8a         db  0x28 ; '('
000000000000ae8b         db  0x8c ; '.'
000000000000ae8c         db  0x05 ; '.'
000000000000ae8d         db  0x44 ; 'D'
000000000000ae8e         db  0x0e ; '.'
000000000000ae8f         db  0x30 ; '0'
000000000000ae90         db  0x86 ; '.'
000000000000ae91         db  0x06 ; '.'
000000000000ae92         db  0x41 ; 'A'
000000000000ae93         db  0x0e ; '.'
000000000000ae94         db  0x38 ; '8'
000000000000ae95         db  0x83 ; '.'
000000000000ae96         db  0x07 ; '.'
000000000000ae97         db  0x4d ; 'M'
000000000000ae98         db  0x0e ; '.'
000000000000ae99         db  0x50 ; 'P'
000000000000ae9a         db  0x5f ; '_'
000000000000ae9b         db  0x0e ; '.'
000000000000ae9c         db  0x58 ; 'X'
000000000000ae9d         db  0x47 ; 'G'
000000000000ae9e         db  0x0e ; '.'
000000000000ae9f         db  0x60 ; '`'
000000000000aea0         db  0x46 ; 'F'
000000000000aea1         db  0x0e ; '.'
000000000000aea2         db  0x68 ; 'h'
000000000000aea3         db  0x44 ; 'D'
000000000000aea4         db  0x0e ; '.'
000000000000aea5         db  0x70 ; 'p'
000000000000aea6         db  0x58 ; 'X'
000000000000aea7         db  0x0e ; '.'
000000000000aea8         db  0x38 ; '8'
000000000000aea9         db  0x41 ; 'A'
000000000000aeaa         db  0x0e ; '.'
000000000000aeab         db  0x30 ; '0'
000000000000aeac         db  0x41 ; 'A'
000000000000aead         db  0x0e ; '.'
000000000000aeae         db  0x28 ; '('
000000000000aeaf         db  0x42 ; 'B'
000000000000aeb0         db  0x0e ; '.'
000000000000aeb1         db  0x20 ; ' '
000000000000aeb2         db  0x42 ; 'B'
000000000000aeb3         db  0x0e ; '.'
000000000000aeb4         db  0x18 ; '.'
000000000000aeb5         db  0x42 ; 'B'
000000000000aeb6         db  0x0e ; '.'
000000000000aeb7         db  0x10 ; '.'
000000000000aeb8         db  0x42 ; 'B'
000000000000aeb9         db  0x0e ; '.'
000000000000aeba         db  0x08 ; '.'
000000000000aebb         db  0x00 ; '.'
000000000000aebc         dd         0x00000068                                  ; Length of the record
000000000000aec0         dd         0x000005f8                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000aec4         db         0x5c, 0xbe, 2 dup (0xff)                    ; begin 0x6d20
000000000000aec8         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x6e03)
000000000000aecc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000aecd         db  0x42 ; 'B'
000000000000aece         db  0x0e ; '.'
000000000000aecf         db  0x10 ; '.'
000000000000aed0         db  0x8f ; '.'
000000000000aed1         db  0x02 ; '.'
000000000000aed2         db  0x42 ; 'B'
000000000000aed3         db  0x0e ; '.'
000000000000aed4         db  0x18 ; '.'
000000000000aed5         db  0x8e ; '.'
000000000000aed6         db  0x03 ; '.'
000000000000aed7         db  0x49 ; 'I'
000000000000aed8         db  0x0e ; '.'
000000000000aed9         db  0x20 ; ' '
000000000000aeda         db  0x8d ; '.'
000000000000aedb         db  0x04 ; '.'
000000000000aedc         db  0x42 ; 'B'
000000000000aedd         db  0x0e ; '.'
000000000000aede         db  0x28 ; '('
000000000000aedf         db  0x8c ; '.'
000000000000aee0         db  0x05 ; '.'
000000000000aee1         db  0x44 ; 'D'
000000000000aee2         db  0x0e ; '.'
000000000000aee3         db  0x30 ; '0'
000000000000aee4         db  0x86 ; '.'
000000000000aee5         db  0x06 ; '.'
000000000000aee6         db  0x41 ; 'A'
000000000000aee7         db  0x0e ; '.'
000000000000aee8         db  0x38 ; '8'
000000000000aee9         db  0x83 ; '.'
000000000000aeea         db  0x07 ; '.'
000000000000aeeb         db  0x4d ; 'M'
000000000000aeec         db  0x0e ; '.'
000000000000aeed         db  0x70 ; 'p'
000000000000aeee         db  0x65 ; 'e'
000000000000aeef         db  0x0e ; '.'
000000000000aef0         db  0x78 ; 'x'
000000000000aef1         db  0x4d ; 'M'
000000000000aef2         db  0x0e ; '.'
000000000000aef3         db  0x80 ; '.'
000000000000aef4         db  0x01 ; '.'
000000000000aef5         db  0x46 ; 'F'
000000000000aef6         db  0x0e ; '.'
000000000000aef7         db  0x88 ; '.'
000000000000aef8         db  0x01 ; '.'
000000000000aef9         db  0x42 ; 'B'
000000000000aefa         db  0x0e ; '.'
000000000000aefb         db  0x90 ; '.'
000000000000aefc         db  0x01 ; '.'
000000000000aefd         db  0x5e ; '^'
000000000000aefe         db  0x0e ; '.'
000000000000aeff         db  0x70 ; 'p'
000000000000af00         db  0x56 ; 'V'
000000000000af01         db  0x0e ; '.'
000000000000af02         db  0x78 ; 'x'
000000000000af03         db  0x43 ; 'C'
000000000000af04         db  0x0e ; '.'
000000000000af05         db  0x80 ; '.'
000000000000af06         db  0x01 ; '.'
000000000000af07         db  0x43 ; 'C'
000000000000af08         db  0x0e ; '.'
000000000000af09         db  0x88 ; '.'
000000000000af0a         db  0x01 ; '.'
000000000000af0b         db  0x56 ; 'V'
000000000000af0c         db  0x0e ; '.'
000000000000af0d         db  0x90 ; '.'
000000000000af0e         db  0x01 ; '.'
000000000000af0f         db  0x52 ; 'R'
000000000000af10         db  0x0e ; '.'
000000000000af11         db  0x70 ; 'p'
000000000000af12         db  0x5b ; '['
000000000000af13         db  0x0e ; '.'
000000000000af14         db  0x38 ; '8'
000000000000af15         db  0x41 ; 'A'
000000000000af16         db  0x0e ; '.'
000000000000af17         db  0x30 ; '0'
000000000000af18         db  0x41 ; 'A'
000000000000af19         db  0x0e ; '.'
000000000000af1a         db  0x28 ; '('
000000000000af1b         db  0x42 ; 'B'
000000000000af1c         db  0x0e ; '.'
000000000000af1d         db  0x20 ; ' '
000000000000af1e         db  0x42 ; 'B'
000000000000af1f         db  0x0e ; '.'
000000000000af20         db  0x18 ; '.'
000000000000af21         db  0x42 ; 'B'
000000000000af22         db  0x0e ; '.'
000000000000af23         db  0x10 ; '.'
000000000000af24         db  0x42 ; 'B'
000000000000af25         db  0x0e ; '.'
000000000000af26         db  0x08 ; '.'
000000000000af27         db  0x00 ; '.'
000000000000af28         dd         0x00000010                                  ; Length of the record
000000000000af2c         dd         0x00000664                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000af30         db         0xe0, 0xbe, 2 dup (0xff)                    ; begin 0x6e10
000000000000af34         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x6e1a)
000000000000af38         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000af39         align      4
000000000000af3c         dd         0x00000028                                  ; Length of the record
000000000000af40         dd         0x00000678                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000af44         db         0xdc, 0xbe, 2 dup (0xff)                    ; begin 0x6e20
000000000000af48         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x6eb3)
000000000000af4c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000af4d         db  0x48 ; 'H'
000000000000af4e         db  0x0e ; '.'
000000000000af4f         db  0x10 ; '.'
000000000000af50         db  0x8c ; '.'
000000000000af51         db  0x02 ; '.'
000000000000af52         db  0x48 ; 'H'
000000000000af53         db  0x0e ; '.'
000000000000af54         db  0x18 ; '.'
000000000000af55         db  0x86 ; '.'
000000000000af56         db  0x03 ; '.'
000000000000af57         db  0x41 ; 'A'
000000000000af58         db  0x0e ; '.'
000000000000af59         db  0x20 ; ' '
000000000000af5a         db  0x83 ; '.'
000000000000af5b         db  0x04 ; '.'
000000000000af5c         db  0x02 ; '.'
000000000000af5d         db  0x74 ; 't'
000000000000af5e         db  0x0e ; '.'
000000000000af5f         db  0x18 ; '.'
000000000000af60         db  0x4b ; 'K'
000000000000af61         db  0x0e ; '.'
000000000000af62         db  0x10 ; '.'
000000000000af63         db  0x42 ; 'B'
000000000000af64         db  0x0e ; '.'
000000000000af65         db  0x08 ; '.'
000000000000af66         db  0x00 ; '.'
000000000000af67         db  0x00 ; '.'
000000000000af68         dd         0x00000010                                  ; Length of the record
000000000000af6c         dd         0x000006a4                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000af70         db         0x50, 0xbf, 2 dup (0xff)                    ; begin 0x6ec0
000000000000af74         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x6ed3)
000000000000af78         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000af79         align      4
000000000000af7c         dd         0x00000010                                  ; Length of the record
000000000000af80         dd         0x000006b8                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000af84         db         0x5c, 0xbf, 2 dup (0xff)                    ; begin 0x6ee0
000000000000af88         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x6eec)
000000000000af8c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000af8d         align      16
000000000000af90         dd         0x00000010                                  ; Length of the record
000000000000af94         dd         0x000006cc                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000af98         db         0x58, 0xbf, 2 dup (0xff)                    ; begin 0x6ef0
000000000000af9c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x6f08)
000000000000afa0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000afa1         align      4
000000000000afa4         dd         0x00000010                                  ; Length of the record
000000000000afa8         dd         0x000006e0                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000afac         db         0x64, 0xbf, 2 dup (0xff)                    ; begin 0x6f10
000000000000afb0         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x6f24)
000000000000afb4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000afb5         align      8
000000000000afb8         dd         0x00000018                                  ; Length of the record
000000000000afbc         dd         0x000006f4                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000afc0         db         0x70, 0xbf, 2 dup (0xff)                    ; begin 0x6f30
000000000000afc4         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x6fbe)
000000000000afc8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000afc9         db  0x44 ; 'D'
000000000000afca         db  0x0e ; '.'
000000000000afcb         db  0x50 ; 'P'
000000000000afcc         db  0x02 ; '.'
000000000000afcd         db  0x7f ; '.'
000000000000afce         db  0x0a ; '.'
000000000000afcf         db  0x0e ; '.'
000000000000afd0         db  0x08 ; '.'
000000000000afd1         db  0x41 ; 'A'
000000000000afd2         db  0x0b ; '.'
000000000000afd3         db  0x00 ; '.'
000000000000afd4         dd         0x00000018                                  ; Length of the record
000000000000afd8         dd         0x00000710                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000afdc         db         0xe4, 0xbf, 2 dup (0xff)                    ; begin 0x6fc0
000000000000afe0         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x704a)
000000000000afe4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000afe5         db  0x44 ; 'D'
000000000000afe6         db  0x0e ; '.'
000000000000afe7         db  0x50 ; 'P'
000000000000afe8         db  0x02 ; '.'
000000000000afe9         db  0x7b ; '{'
000000000000afea         db  0x0a ; '.'
000000000000afeb         db  0x0e ; '.'
000000000000afec         db  0x08 ; '.'
000000000000afed         db  0x41 ; 'A'
000000000000afee         db  0x0b ; '.'
000000000000afef         db  0x00 ; '.'
000000000000aff0         dd         0x00000010                                  ; Length of the record
000000000000aff4         dd         0x0000072c                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000aff8         db         0x58, 0xc0, 2 dup (0xff)                    ; begin 0x7050
000000000000affc         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x705c)
000000000000b000         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b001         align      4
000000000000b004         dd         0x00000010                                  ; Length of the record
000000000000b008         dd         0x00000740                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b00c         db         0x54, 0xc0, 2 dup (0xff)                    ; begin 0x7060
000000000000b010         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x706f)
000000000000b014         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b015         align      8
000000000000b018         dd         0x00000018                                  ; Length of the record
000000000000b01c         dd         0x00000754                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b020         db         0x50, 0xc0, 2 dup (0xff)                    ; begin 0x7070
000000000000b024         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x7108)
000000000000b028         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b029         db  0x44 ; 'D'
000000000000b02a         db  0x0e ; '.'
000000000000b02b         db  0x50 ; 'P'
000000000000b02c         db  0x02 ; '.'
000000000000b02d         db  0x8e ; '.'
000000000000b02e         db  0x0a ; '.'
000000000000b02f         db  0x0e ; '.'
000000000000b030         db  0x08 ; '.'
000000000000b031         db  0x41 ; 'A'
000000000000b032         db  0x0b ; '.'
000000000000b033         db  0x00 ; '.'
000000000000b034         dd         0x00000010                                  ; Length of the record
000000000000b038         dd         0x00000770                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b03c         db         0xd4, 0xc0, 2 dup (0xff)                    ; begin 0x7110
000000000000b040         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x7120)
000000000000b044         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b045         align      8
000000000000b048         dd         0x00000010                                  ; Length of the record
000000000000b04c         dd         0x00000784                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b050         db         0xd0, 0xc0, 2 dup (0xff)                    ; begin 0x7120
000000000000b054         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x7131)
000000000000b058         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b059         align      4
000000000000b05c         dd         0x00000010                                  ; Length of the record
000000000000b060         dd         0x00000798                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b064         db         0xdc, 0xc0, 2 dup (0xff)                    ; begin 0x7140
000000000000b068         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x714a)
000000000000b06c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b06d         align      16
000000000000b070         dd         0x00000018                                  ; Length of the record
000000000000b074         dd         0x000007ac                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b078         db         0xd8, 0xc0, 2 dup (0xff)                    ; begin 0x7150
000000000000b07c         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x71de)
000000000000b080         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b081         db  0x44 ; 'D'
000000000000b082         db  0x0e ; '.'
000000000000b083         db  0x50 ; 'P'
000000000000b084         db  0x02 ; '.'
000000000000b085         db  0x7f ; '.'
000000000000b086         db  0x0a ; '.'
000000000000b087         db  0x0e ; '.'
000000000000b088         db  0x08 ; '.'
000000000000b089         db  0x41 ; 'A'
000000000000b08a         db  0x0b ; '.'
000000000000b08b         db  0x00 ; '.'
000000000000b08c         dd         0x00000018                                  ; Length of the record
000000000000b090         dd         0x000007c8                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b094         db         0x4c, 0xc1, 2 dup (0xff)                    ; begin 0x71e0
000000000000b098         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x7271)
000000000000b09c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b09d         db  0x44 ; 'D'
000000000000b09e         db  0x0e ; '.'
000000000000b09f         db  0x50 ; 'P'
000000000000b0a0         db  0x02 ; '.'
000000000000b0a1         db  0x82 ; '.'
000000000000b0a2         db  0x0a ; '.'
000000000000b0a3         db  0x0e ; '.'
000000000000b0a4         db  0x08 ; '.'
000000000000b0a5         db  0x41 ; 'A'
000000000000b0a6         db  0x0b ; '.'
000000000000b0a7         db  0x00 ; '.'
000000000000b0a8         dd         0x00000010                                  ; Length of the record
000000000000b0ac         dd         0x000007e4                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b0b0         db         0xd0, 0xc1, 2 dup (0xff)                    ; begin 0x7280
000000000000b0b4         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x728c)
000000000000b0b8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b0b9         align      4
000000000000b0bc         dd         0x00000010                                  ; Length of the record
000000000000b0c0         dd         0x000007f8                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b0c4         db         0xcc, 0xc1, 2 dup (0xff)                    ; begin 0x7290
000000000000b0c8         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x72a7)
000000000000b0cc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b0cd         align      16
000000000000b0d0         dd         0x00000010                                  ; Length of the record
000000000000b0d4         dd         0x0000080c                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b0d8         db         0xd8, 0xc1, 2 dup (0xff)                    ; begin 0x72b0
000000000000b0dc         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x72c3)
000000000000b0e0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b0e1         align      4
000000000000b0e4         dd         0x00000010                                  ; Length of the record
000000000000b0e8         dd         0x00000820                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b0ec         db         0xe4, 0xc1, 2 dup (0xff)                    ; begin 0x72d0
000000000000b0f0         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x72dc)
000000000000b0f4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b0f5         align      8
000000000000b0f8         dd         0x00000010                                  ; Length of the record
000000000000b0fc         dd         0x00000834                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b100         db         0xe0, 0xc1, 2 dup (0xff)                    ; begin 0x72e0
000000000000b104         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x72f4)
000000000000b108         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b109         align      4
000000000000b10c         dd         0x00000010                                  ; Length of the record
000000000000b110         dd         0x00000848                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b114         db         0xec, 0xc1, 2 dup (0xff)                    ; begin 0x7300
000000000000b118         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x7313)
000000000000b11c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b11d         align      32
000000000000b120         dd         0x00000014                                  ; Length of the record
000000000000b124         dd         0x0000085c                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b128         db         0xf8, 0xc1, 2 dup (0xff)                    ; begin 0x7320
000000000000b12c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x7338)
000000000000b130         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b131         align      8
000000000000b138         dd         0x00000034                                  ; Length of the record
000000000000b13c         dd         0x00000874                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b140         db         0x00, 0xc2, 2 dup (0xff)                    ; begin 0x7340
000000000000b144         db         0x5e, 3 dup (0x00)                          ; length 0x5e (end at 0x739e)
000000000000b148         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b149         db  0x42 ; 'B'
000000000000b14a         db  0x0e ; '.'
000000000000b14b         db  0x10 ; '.'
000000000000b14c         db  0x8d ; '.'
000000000000b14d         db  0x02 ; '.'
000000000000b14e         db  0x42 ; 'B'
000000000000b14f         db  0x0e ; '.'
000000000000b150         db  0x18 ; '.'
000000000000b151         db  0x8c ; '.'
000000000000b152         db  0x03 ; '.'
000000000000b153         db  0x44 ; 'D'
000000000000b154         db  0x0e ; '.'
000000000000b155         db  0x20 ; ' '
000000000000b156         db  0x86 ; '.'
000000000000b157         db  0x04 ; '.'
000000000000b158         db  0x41 ; 'A'
000000000000b159         db  0x0e ; '.'
000000000000b15a         db  0x28 ; '('
000000000000b15b         db  0x83 ; '.'
000000000000b15c         db  0x05 ; '.'
000000000000b15d         db  0x4a ; 'J'
000000000000b15e         db  0x0e ; '.'
000000000000b15f         db  0x30 ; '0'
000000000000b160         db  0x02 ; '.'
000000000000b161         db  0x41 ; 'A'
000000000000b162         db  0x0e ; '.'
000000000000b163         db  0x28 ; '('
000000000000b164         db  0x44 ; 'D'
000000000000b165         db  0x0e ; '.'
000000000000b166         db  0x20 ; ' '
000000000000b167         db  0x41 ; 'A'
000000000000b168         db  0x0e ; '.'
000000000000b169         db  0x18 ; '.'
000000000000b16a         db  0x42 ; 'B'
000000000000b16b         db  0x0e ; '.'
000000000000b16c         db  0x10 ; '.'
000000000000b16d         db  0x42 ; 'B'
000000000000b16e         db  0x0e ; '.'
000000000000b16f         db  0x08 ; '.'
000000000000b170         dd         0x00000034                                  ; Length of the record
000000000000b174         dd         0x000008ac                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b178         db         0x28, 0xc2, 2 dup (0xff)                    ; begin 0x73a0
000000000000b17c         db         0x5e, 3 dup (0x00)                          ; length 0x5e (end at 0x73fe)
000000000000b180         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b181         db  0x42 ; 'B'
000000000000b182         db  0x0e ; '.'
000000000000b183         db  0x10 ; '.'
000000000000b184         db  0x8d ; '.'
000000000000b185         db  0x02 ; '.'
000000000000b186         db  0x42 ; 'B'
000000000000b187         db  0x0e ; '.'
000000000000b188         db  0x18 ; '.'
000000000000b189         db  0x8c ; '.'
000000000000b18a         db  0x03 ; '.'
000000000000b18b         db  0x44 ; 'D'
000000000000b18c         db  0x0e ; '.'
000000000000b18d         db  0x20 ; ' '
000000000000b18e         db  0x86 ; '.'
000000000000b18f         db  0x04 ; '.'
000000000000b190         db  0x41 ; 'A'
000000000000b191         db  0x0e ; '.'
000000000000b192         db  0x28 ; '('
000000000000b193         db  0x83 ; '.'
000000000000b194         db  0x05 ; '.'
000000000000b195         db  0x4a ; 'J'
000000000000b196         db  0x0e ; '.'
000000000000b197         db  0x30 ; '0'
000000000000b198         db  0x02 ; '.'
000000000000b199         db  0x41 ; 'A'
000000000000b19a         db  0x0e ; '.'
000000000000b19b         db  0x28 ; '('
000000000000b19c         db  0x44 ; 'D'
000000000000b19d         db  0x0e ; '.'
000000000000b19e         db  0x20 ; ' '
000000000000b19f         db  0x41 ; 'A'
000000000000b1a0         db  0x0e ; '.'
000000000000b1a1         db  0x18 ; '.'
000000000000b1a2         db  0x42 ; 'B'
000000000000b1a3         db  0x0e ; '.'
000000000000b1a4         db  0x10 ; '.'
000000000000b1a5         db  0x42 ; 'B'
000000000000b1a6         db  0x0e ; '.'
000000000000b1a7         db  0x08 ; '.'
000000000000b1a8         dd         0x00000034                                  ; Length of the record
000000000000b1ac         dd         0x000008e4                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b1b0         db         0x50, 0xc2, 2 dup (0xff)                    ; begin 0x7400
000000000000b1b4         db         0x3f, 3 dup (0x00)                          ; length 0x3f (end at 0x743f)
000000000000b1b8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b1b9         db  0x42 ; 'B'
000000000000b1ba         db  0x0e ; '.'
000000000000b1bb         db  0x10 ; '.'
000000000000b1bc         db  0x8d ; '.'
000000000000b1bd         db  0x02 ; '.'
000000000000b1be         db  0x42 ; 'B'
000000000000b1bf         db  0x0e ; '.'
000000000000b1c0         db  0x18 ; '.'
000000000000b1c1         db  0x8c ; '.'
000000000000b1c2         db  0x03 ; '.'
000000000000b1c3         db  0x41 ; 'A'
000000000000b1c4         db  0x0e ; '.'
000000000000b1c5         db  0x20 ; ' '
000000000000b1c6         db  0x86 ; '.'
000000000000b1c7         db  0x04 ; '.'
000000000000b1c8         db  0x41 ; 'A'
000000000000b1c9         db  0x0e ; '.'
000000000000b1ca         db  0x28 ; '('
000000000000b1cb         db  0x83 ; '.'
000000000000b1cc         db  0x05 ; '.'
000000000000b1cd         db  0x46 ; 'F'
000000000000b1ce         db  0x0e ; '.'
000000000000b1cf         db  0x30 ; '0'
000000000000b1d0         db  0x6a ; 'j'
000000000000b1d1         db  0x0e ; '.'
000000000000b1d2         db  0x28 ; '('
000000000000b1d3         db  0x43 ; 'C'
000000000000b1d4         db  0x0e ; '.'
000000000000b1d5         db  0x20 ; ' '
000000000000b1d6         db  0x41 ; 'A'
000000000000b1d7         db  0x0e ; '.'
000000000000b1d8         db  0x18 ; '.'
000000000000b1d9         db  0x42 ; 'B'
000000000000b1da         db  0x0e ; '.'
000000000000b1db         db  0x10 ; '.'
000000000000b1dc         db  0x42 ; 'B'
000000000000b1dd         db  0x0e ; '.'
000000000000b1de         db  0x08 ; '.'
000000000000b1df         db  0x00 ; '.'
000000000000b1e0         dd         0x00000110                                  ; Length of the record
000000000000b1e4         dd         0x0000091c                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b1e8         db         0x58, 0xc2, 2 dup (0xff)                    ; begin 0x7440
000000000000b1ec         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x7857)
000000000000b1f0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b1f1         db  0x42 ; 'B'
000000000000b1f2         db  0x0e ; '.'
000000000000b1f3         db  0x10 ; '.'
000000000000b1f4         db  0x8f ; '.'
000000000000b1f5         db  0x02 ; '.'
000000000000b1f6         db  0x42 ; 'B'
000000000000b1f7         db  0x0e ; '.'
000000000000b1f8         db  0x18 ; '.'
000000000000b1f9         db  0x8e ; '.'
000000000000b1fa         db  0x03 ; '.'
000000000000b1fb         db  0x42 ; 'B'
000000000000b1fc         db  0x0e ; '.'
000000000000b1fd         db  0x20 ; ' '
000000000000b1fe         db  0x8d ; '.'
000000000000b1ff         db  0x04 ; '.'
000000000000b200         db  0x42 ; 'B'
000000000000b201         db  0x0e ; '.'
000000000000b202         db  0x28 ; '('
000000000000b203         db  0x8c ; '.'
000000000000b204         db  0x05 ; '.'
000000000000b205         db  0x44 ; 'D'
000000000000b206         db  0x0e ; '.'
000000000000b207         db  0x30 ; '0'
000000000000b208         db  0x86 ; '.'
000000000000b209         db  0x06 ; '.'
000000000000b20a         db  0x41 ; 'A'
000000000000b20b         db  0x0e ; '.'
000000000000b20c         db  0x38 ; '8'
000000000000b20d         db  0x83 ; '.'
000000000000b20e         db  0x07 ; '.'
000000000000b20f         db  0x4a ; 'J'
000000000000b210         db  0x0e ; '.'
000000000000b211         db  0x60 ; '`'
000000000000b212         db  0x02 ; '.'
000000000000b213         db  0xdd ; '.'
000000000000b214         db  0x0e ; '.'
000000000000b215         db  0x68 ; 'h'
000000000000b216         db  0x57 ; 'W'
000000000000b217         db  0x0e ; '.'
000000000000b218         db  0x70 ; 'p'
000000000000b219         db  0x42 ; 'B'
000000000000b21a         db  0x0e ; '.'
000000000000b21b         db  0x78 ; 'x'
000000000000b21c         db  0x42 ; 'B'
000000000000b21d         db  0x0e ; '.'
000000000000b21e         db  0x80 ; '.'
000000000000b21f         db  0x01 ; '.'
000000000000b220         db  0x42 ; 'B'
000000000000b221         db  0x0e ; '.'
000000000000b222         db  0x88 ; '.'
000000000000b223         db  0x01 ; '.'
000000000000b224         db  0x42 ; 'B'
000000000000b225         db  0x0e ; '.'
000000000000b226         db  0x90 ; '.'
000000000000b227         db  0x01 ; '.'
000000000000b228         db  0x53 ; 'S'
000000000000b229         db  0x0e ; '.'
000000000000b22a         db  0x60 ; '`'
000000000000b22b         db  0x44 ; 'D'
000000000000b22c         db  0x0a ; '.'
000000000000b22d         db  0x0e ; '.'
000000000000b22e         db  0x38 ; '8'
000000000000b22f         db  0x41 ; 'A'
000000000000b230         db  0x0e ; '.'
000000000000b231         db  0x30 ; '0'
000000000000b232         db  0x41 ; 'A'
000000000000b233         db  0x0e ; '.'
000000000000b234         db  0x28 ; '('
000000000000b235         db  0x42 ; 'B'
000000000000b236         db  0x0e ; '.'
000000000000b237         db  0x20 ; ' '
000000000000b238         db  0x42 ; 'B'
000000000000b239         db  0x0e ; '.'
000000000000b23a         db  0x18 ; '.'
000000000000b23b         db  0x42 ; 'B'
000000000000b23c         db  0x0e ; '.'
000000000000b23d         db  0x10 ; '.'
000000000000b23e         db  0x42 ; 'B'
000000000000b23f         db  0x0e ; '.'
000000000000b240         db  0x08 ; '.'
000000000000b241         db  0x44 ; 'D'
000000000000b242         db  0x0b ; '.'
000000000000b243         db  0x02 ; '.'
000000000000b244         db  0x78 ; 'x'
000000000000b245         db  0x0a ; '.'
000000000000b246         db  0x0e ; '.'
000000000000b247         db  0x68 ; 'h'
000000000000b248         db  0x48 ; 'H'
000000000000b249         db  0x0b ; '.'
000000000000b24a         db  0x5a ; 'Z'
000000000000b24b         db  0x0a ; '.'
000000000000b24c         db  0x0e ; '.'
000000000000b24d         db  0x38 ; '8'
000000000000b24e         db  0x47 ; 'G'
000000000000b24f         db  0x0e ; '.'
000000000000b250         db  0x30 ; '0'
000000000000b251         db  0x41 ; 'A'
000000000000b252         db  0x0e ; '.'
000000000000b253         db  0x28 ; '('
000000000000b254         db  0x42 ; 'B'
000000000000b255         db  0x0e ; '.'
000000000000b256         db  0x20 ; ' '
000000000000b257         db  0x42 ; 'B'
000000000000b258         db  0x0e ; '.'
000000000000b259         db  0x18 ; '.'
000000000000b25a         db  0x42 ; 'B'
000000000000b25b         db  0x0e ; '.'
000000000000b25c         db  0x10 ; '.'
000000000000b25d         db  0x42 ; 'B'
000000000000b25e         db  0x0e ; '.'
000000000000b25f         db  0x08 ; '.'
000000000000b260         db  0x56 ; 'V'
000000000000b261         db  0x0b ; '.'
000000000000b262         db  0x5e ; '^'
000000000000b263         db  0x0a ; '.'
000000000000b264         db  0x0e ; '.'
000000000000b265         db  0x38 ; '8'
000000000000b266         db  0x52 ; 'R'
000000000000b267         db  0x0e ; '.'
000000000000b268         db  0x30 ; '0'
000000000000b269         db  0x41 ; 'A'
000000000000b26a         db  0x0e ; '.'
000000000000b26b         db  0x28 ; '('
000000000000b26c         db  0x42 ; 'B'
000000000000b26d         db  0x0e ; '.'
000000000000b26e         db  0x20 ; ' '
000000000000b26f         db  0x42 ; 'B'
000000000000b270         db  0x0e ; '.'
000000000000b271         db  0x18 ; '.'
000000000000b272         db  0x42 ; 'B'
000000000000b273         db  0x0e ; '.'
000000000000b274         db  0x10 ; '.'
000000000000b275         db  0x42 ; 'B'
000000000000b276         db  0x0e ; '.'
000000000000b277         db  0x08 ; '.'
000000000000b278         db  0x4f ; 'O'
000000000000b279         db  0x0b ; '.'
000000000000b27a         db  0x62 ; 'b'
000000000000b27b         db  0x0a ; '.'
000000000000b27c         db  0x0e ; '.'
000000000000b27d         db  0x38 ; '8'
000000000000b27e         db  0x50 ; 'P'
000000000000b27f         db  0x0e ; '.'
000000000000b280         db  0x30 ; '0'
000000000000b281         db  0x41 ; 'A'
000000000000b282         db  0x0e ; '.'
000000000000b283         db  0x28 ; '('
000000000000b284         db  0x42 ; 'B'
000000000000b285         db  0x0e ; '.'
000000000000b286         db  0x20 ; ' '
000000000000b287         db  0x42 ; 'B'
000000000000b288         db  0x0e ; '.'
000000000000b289         db  0x18 ; '.'
000000000000b28a         db  0x42 ; 'B'
000000000000b28b         db  0x0e ; '.'
000000000000b28c         db  0x10 ; '.'
000000000000b28d         db  0x42 ; 'B'
000000000000b28e         db  0x0e ; '.'
000000000000b28f         db  0x08 ; '.'
000000000000b290         db  0x55 ; 'U'
000000000000b291         db  0x0b ; '.'
000000000000b292         db  0x66 ; 'f'
000000000000b293         db  0x0e ; '.'
000000000000b294         db  0x68 ; 'h'
000000000000b295         db  0x42 ; 'B'
000000000000b296         db  0x0e ; '.'
000000000000b297         db  0x70 ; 'p'
000000000000b298         db  0x5c ; '\'
000000000000b299         db  0x0e ; '.'
000000000000b29a         db  0x68 ; 'h'
000000000000b29b         db  0x41 ; 'A'
000000000000b29c         db  0x0e ; '.'
000000000000b29d         db  0x60 ; '`'
000000000000b29e         db  0x44 ; 'D'
000000000000b29f         db  0x0a ; '.'
000000000000b2a0         db  0x0e ; '.'
000000000000b2a1         db  0x38 ; '8'
000000000000b2a2         db  0x41 ; 'A'
000000000000b2a3         db  0x0e ; '.'
000000000000b2a4         db  0x30 ; '0'
000000000000b2a5         db  0x41 ; 'A'
000000000000b2a6         db  0x0e ; '.'
000000000000b2a7         db  0x28 ; '('
000000000000b2a8         db  0x42 ; 'B'
000000000000b2a9         db  0x0e ; '.'
000000000000b2aa         db  0x20 ; ' '
000000000000b2ab         db  0x42 ; 'B'
000000000000b2ac         db  0x0e ; '.'
000000000000b2ad         db  0x18 ; '.'
000000000000b2ae         db  0x42 ; 'B'
000000000000b2af         db  0x0e ; '.'
000000000000b2b0         db  0x10 ; '.'
000000000000b2b1         db  0x42 ; 'B'
000000000000b2b2         db  0x0e ; '.'
000000000000b2b3         db  0x08 ; '.'
000000000000b2b4         db  0x45 ; 'E'
000000000000b2b5         db  0x0b ; '.'
000000000000b2b6         db  0x68 ; 'h'
000000000000b2b7         db  0x0a ; '.'
000000000000b2b8         db  0x0e ; '.'
000000000000b2b9         db  0x68 ; 'h'
000000000000b2ba         db  0x48 ; 'H'
000000000000b2bb         db  0x0b ; '.'
000000000000b2bc         db  0x72 ; 'r'
000000000000b2bd         db  0x0e ; '.'
000000000000b2be         db  0x68 ; 'h'
000000000000b2bf         db  0x45 ; 'E'
000000000000b2c0         db  0x0e ; '.'
000000000000b2c1         db  0x70 ; 'p'
000000000000b2c2         db  0x42 ; 'B'
000000000000b2c3         db  0x0e ; '.'
000000000000b2c4         db  0x78 ; 'x'
000000000000b2c5         db  0x42 ; 'B'
000000000000b2c6         db  0x0e ; '.'
000000000000b2c7         db  0x80 ; '.'
000000000000b2c8         db  0x01 ; '.'
000000000000b2c9         db  0x5e ; '^'
000000000000b2ca         db  0x0e ; '.'
000000000000b2cb         db  0x60 ; '`'
000000000000b2cc         db  0x44 ; 'D'
000000000000b2cd         db  0x0a ; '.'
000000000000b2ce         db  0x0e ; '.'
000000000000b2cf         db  0x38 ; '8'
000000000000b2d0         db  0x41 ; 'A'
000000000000b2d1         db  0x0e ; '.'
000000000000b2d2         db  0x30 ; '0'
000000000000b2d3         db  0x41 ; 'A'
000000000000b2d4         db  0x0e ; '.'
000000000000b2d5         db  0x28 ; '('
000000000000b2d6         db  0x42 ; 'B'
000000000000b2d7         db  0x0e ; '.'
000000000000b2d8         db  0x20 ; ' '
000000000000b2d9         db  0x42 ; 'B'
000000000000b2da         db  0x0e ; '.'
000000000000b2db         db  0x18 ; '.'
000000000000b2dc         db  0x42 ; 'B'
000000000000b2dd         db  0x0e ; '.'
000000000000b2de         db  0x10 ; '.'
000000000000b2df         db  0x42 ; 'B'
000000000000b2e0         db  0x0e ; '.'
000000000000b2e1         db  0x08 ; '.'
000000000000b2e2         db  0x41 ; 'A'
000000000000b2e3         db  0x0b ; '.'
000000000000b2e4         db  0x79 ; 'y'
000000000000b2e5         db  0x0a ; '.'
000000000000b2e6         db  0x0e ; '.'
000000000000b2e7         db  0x68 ; 'h'
000000000000b2e8         db  0x42 ; 'B'
000000000000b2e9         db  0x0e ; '.'
000000000000b2ea         db  0x70 ; 'p'
000000000000b2eb         db  0x42 ; 'B'
000000000000b2ec         db  0x0e ; '.'
000000000000b2ed         db  0x78 ; 'x'
000000000000b2ee         db  0x42 ; 'B'
000000000000b2ef         db  0x0e ; '.'
000000000000b2f0         db  0x80 ; '.'
000000000000b2f1         db  0x01 ; '.'
000000000000b2f2         db  0x51 ; 'Q'
000000000000b2f3         db  0x0b ; '.'
000000000000b2f4         dd         0x00000010                                  ; Length of the record
000000000000b2f8         dd         0x00000a30                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b2fc         db         0x64, 0xc5, 2 dup (0xff)                    ; begin 0x7860
000000000000b300         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x7880)
000000000000b304         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b305         align      8
000000000000b308         dd         0x00000018                                  ; Length of the record
000000000000b30c         dd         0x00000a44                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b310         db         0x70, 0xc5, 2 dup (0xff)                    ; begin 0x7880
000000000000b314         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x78f8)
000000000000b318         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b319         db  0x44 ; 'D'
000000000000b31a         db  0x0e ; '.'
000000000000b31b         db  0x70 ; 'p'
000000000000b31c         db  0x02 ; '.'
000000000000b31d         db  0x60 ; '`'
000000000000b31e         db  0x0a ; '.'
000000000000b31f         db  0x0e ; '.'
000000000000b320         db  0x08 ; '.'
000000000000b321         db  0x41 ; 'A'
000000000000b322         db  0x0b ; '.'
000000000000b323         db  0x00 ; '.'
000000000000b324         dd         0x00000028                                  ; Length of the record
000000000000b328         dd         0x00000a60                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b32c         db         0xd4, 0xc5, 2 dup (0xff)                    ; begin 0x7900
000000000000b330         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x79d5)
000000000000b334         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b335         db  0x41 ; 'A'
000000000000b336         db  0x0e ; '.'
000000000000b337         db  0x10 ; '.'
000000000000b338         db  0x86 ; '.'
000000000000b339         db  0x02 ; '.'
000000000000b33a         db  0x41 ; 'A'
000000000000b33b         db  0x0e ; '.'
000000000000b33c         db  0x18 ; '.'
000000000000b33d         db  0x83 ; '.'
000000000000b33e         db  0x03 ; '.'
000000000000b33f         db  0x50 ; 'P'
000000000000b340         db  0x0e ; '.'
000000000000b341         db  0xd0 ; '.'
000000000000b342         db  0x01 ; '.'
000000000000b343         db  0x02 ; '.'
000000000000b344         db  0xab ; '.'
000000000000b345         db  0x0a ; '.'
000000000000b346         db  0x0e ; '.'
000000000000b347         db  0x18 ; '.'
000000000000b348         db  0x41 ; 'A'
000000000000b349         db  0x0e ; '.'
000000000000b34a         db  0x10 ; '.'
000000000000b34b         db  0x41 ; 'A'
000000000000b34c         db  0x0e ; '.'
000000000000b34d         db  0x08 ; '.'
000000000000b34e         db  0x41 ; 'A'
000000000000b34f         db  0x0b ; '.'
000000000000b350         dd         0x0000001c                                  ; Length of the record
000000000000b354         dd         0x00000a8c                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b358         db         0x88, 0xc6, 2 dup (0xff)                    ; begin 0x79e0
000000000000b35c         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x7a60)
000000000000b360         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b361         db  0x41 ; 'A'
000000000000b362         db  0x0e ; '.'
000000000000b363         db  0x10 ; '.'
000000000000b364         db  0x83 ; '.'
000000000000b365         db  0x02 ; '.'
000000000000b366         db  0x02 ; '.'
000000000000b367         db  0x7a ; 'z'
000000000000b368         db  0x0e ; '.'
000000000000b369         db  0x08 ; '.'
000000000000b36a         db  0x00 ; '.'
000000000000b36b         db  0x00 ; '.'
000000000000b36c         db  0x00 ; '.'
000000000000b36d         db  0x00 ; '.'
000000000000b36e         db  0x00 ; '.'
000000000000b36f         db  0x00 ; '.'
000000000000b370         dd         0x00000018                                  ; Length of the record
000000000000b374         dd         0x00000aac                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b378         db         0xe8, 0xc6, 2 dup (0xff)                    ; begin 0x7a60
000000000000b37c         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x7a7a)
000000000000b380         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b381         db  0x41 ; 'A'
000000000000b382         db  0x0e ; '.'
000000000000b383         db  0x10 ; '.'
000000000000b384         db  0x83 ; '.'
000000000000b385         db  0x02 ; '.'
000000000000b386         db  0x53 ; 'S'
000000000000b387         db  0x0a ; '.'
000000000000b388         db  0x0e ; '.'
000000000000b389         db  0x08 ; '.'
000000000000b38a         db  0x41 ; 'A'
000000000000b38b         db  0x0b ; '.'
000000000000b38c         dd         0x00000010                                  ; Length of the record
000000000000b390         dd         0x00000ac8                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b394         db         0xec, 0xc6, 2 dup (0xff)                    ; begin 0x7a80
000000000000b398         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x7aa4)
000000000000b39c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b39d         db  0x5f ; '_'
000000000000b39e         db  0x0e ; '.'
000000000000b39f         db  0x10 ; '.'
000000000000b3a0         dd         0x00000010                                  ; Length of the record
000000000000b3a4         dd         0x00000adc                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b3a8         db         0x08, 0xc7, 2 dup (0xff)                    ; begin 0x7ab0
000000000000b3ac         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x7ab2)
000000000000b3b0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b3b1         align      4
000000000000b3b4         dd         0x00000020                                  ; Length of the record
000000000000b3b8         dd         0x00000af0                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b3bc         db         0x04, 0xc7, 2 dup (0xff)                    ; begin 0x7ac0
000000000000b3c0         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x7af6)
000000000000b3c4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b3c5         db  0x44 ; 'D'
000000000000b3c6         db  0x0e ; '.'
000000000000b3c7         db  0x10 ; '.'
000000000000b3c8         db  0x83 ; '.'
000000000000b3c9         db  0x02 ; '.'
000000000000b3ca         db  0x5d ; ']'
000000000000b3cb         db  0x0a ; '.'
000000000000b3cc         db  0x0e ; '.'
000000000000b3cd         db  0x08 ; '.'
000000000000b3ce         db  0x47 ; 'G'
000000000000b3cf         db  0x0b ; '.'
000000000000b3d0         db  0x48 ; 'H'
000000000000b3d1         db  0x0a ; '.'
000000000000b3d2         db  0x0e ; '.'
000000000000b3d3         db  0x08 ; '.'
000000000000b3d4         db  0x41 ; 'A'
000000000000b3d5         db  0x0b ; '.'
000000000000b3d6         db  0x00 ; '.'
000000000000b3d7         db  0x00 ; '.'
000000000000b3d8         dd         0x00000010                                  ; Length of the record
000000000000b3dc         dd         0x00000b14                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b3e0         db         0x20, 0xc7, 2 dup (0xff)                    ; begin 0x7b00
000000000000b3e4         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x7b24)
000000000000b3e8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b3e9         db  0x5f ; '_'
000000000000b3ea         db  0x0e ; '.'
000000000000b3eb         db  0x10 ; '.'
000000000000b3ec         dd         0x00000014                                  ; Length of the record
000000000000b3f0         dd         0x00000b28                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b3f4         db         0x3c, 0xc7, 2 dup (0xff)                    ; begin 0x7b30
000000000000b3f8         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x7bb2)
000000000000b3fc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b3fd         db  0x02 ; '.'
000000000000b3fe         db  0x5f ; '_'
000000000000b3ff         db  0x0e ; '.'
000000000000b400         db  0x10 ; '.'
000000000000b401         db  0x49 ; 'I'
000000000000b402         db  0x0e ; '.'
000000000000b403         db  0x08 ; '.'
000000000000b404         dd         0x00000014                                  ; Length of the record
000000000000b408         dd         0x00000b40                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b40c         db         0xb4, 0xc7, 2 dup (0xff)                    ; begin 0x7bc0
000000000000b410         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x7c0a)
000000000000b414         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b415         db  0x02 ; '.'
000000000000b416         db  0x45 ; 'E'
000000000000b417         db  0x0e ; '.'
000000000000b418         db  0x10 ; '.'
000000000000b419         db  0x00 ; '.'
000000000000b41a         db  0x00 ; '.'
000000000000b41b         db  0x00 ; '.'
000000000000b41c         dd         0x00000018                                  ; Length of the record
000000000000b420         dd         0x00000b58                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b424         db         0xec, 0xc7, 2 dup (0xff)                    ; begin 0x7c10
000000000000b428         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x7c27)
000000000000b42c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b42d         db  0x41 ; 'A'
000000000000b42e         db  0x0e ; '.'
000000000000b42f         db  0x10 ; '.'
000000000000b430         db  0x83 ; '.'
000000000000b431         db  0x02 ; '.'
000000000000b432         db  0x51 ; 'Q'
000000000000b433         db  0x0e ; '.'
000000000000b434         db  0x08 ; '.'
000000000000b435         db  0x00 ; '.'
000000000000b436         db  0x00 ; '.'
000000000000b437         db  0x00 ; '.'
000000000000b438         dd         0x00000018                                  ; Length of the record
000000000000b43c         dd         0x00000b74                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b440         db         0xf0, 0xc7, 2 dup (0xff)                    ; begin 0x7c30
000000000000b444         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x7c5e)
000000000000b448         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b449         db  0x47 ; 'G'
000000000000b44a         db  0x0e ; '.'
000000000000b44b         db  0x10 ; '.'
000000000000b44c         db  0x61 ; 'a'
000000000000b44d         db  0x0a ; '.'
000000000000b44e         db  0x0e ; '.'
000000000000b44f         db  0x08 ; '.'
000000000000b450         db  0x41 ; 'A'
000000000000b451         db  0x0b ; '.'
000000000000b452         db  0x00 ; '.'
000000000000b453         db  0x00 ; '.'
000000000000b454         dd         0x00000024                                  ; Length of the record
000000000000b458         dd         0x00000b90                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b45c         db         0x04, 0xc8, 2 dup (0xff)                    ; begin 0x7c60
000000000000b460         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x7c88)
000000000000b464         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b465         db  0x41 ; 'A'
000000000000b466         db  0x0e ; '.'
000000000000b467         db  0x10 ; '.'
000000000000b468         db  0x86 ; '.'
000000000000b469         db  0x02 ; '.'
000000000000b46a         db  0x41 ; 'A'
000000000000b46b         db  0x0e ; '.'
000000000000b46c         db  0x18 ; '.'
000000000000b46d         db  0x83 ; '.'
000000000000b46e         db  0x03 ; '.'
000000000000b46f         db  0x4d ; 'M'
000000000000b470         db  0x0e ; '.'
000000000000b471         db  0x20 ; ' '
000000000000b472         db  0x49 ; 'I'
000000000000b473         db  0x0e ; '.'
000000000000b474         db  0x18 ; '.'
000000000000b475         db  0x47 ; 'G'
000000000000b476         db  0x0e ; '.'
000000000000b477         db  0x10 ; '.'
000000000000b478         db  0x41 ; 'A'
000000000000b479         db  0x0e ; '.'
000000000000b47a         db  0x08 ; '.'
000000000000b47b         db  0x00 ; '.'
000000000000b47c         dd         0x00000018                                  ; Length of the record
000000000000b480         dd         0x00000bb8                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b484         db         0x0c, 0xc8, 2 dup (0xff)                    ; begin 0x7c90
000000000000b488         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x7ca3)
000000000000b48c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b48d         db  0x41 ; 'A'
000000000000b48e         db  0x0e ; '.'
000000000000b48f         db  0x10 ; '.'
000000000000b490         db  0x83 ; '.'
000000000000b491         db  0x02 ; '.'
000000000000b492         db  0x50 ; 'P'
000000000000b493         db  0x0e ; '.'
000000000000b494         db  0x08 ; '.'
000000000000b495         db  0x00 ; '.'
000000000000b496         db  0x00 ; '.'
000000000000b497         db  0x00 ; '.'
000000000000b498         dd         0x00000014                                  ; Length of the record
000000000000b49c         dd         0x00000bd4                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b4a0         db         0x10, 0xc8, 2 dup (0xff)                    ; begin 0x7cb0
000000000000b4a4         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x7ce5)
000000000000b4a8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b4a9         db  0x4b ; 'K'
000000000000b4aa         db  0x0e ; '.'
000000000000b4ab         db  0x10 ; '.'
000000000000b4ac         db  0x00 ; '.'
000000000000b4ad         db  0x00 ; '.'
000000000000b4ae         db  0x00 ; '.'
000000000000b4af         db  0x00 ; '.'
000000000000b4b0         dd         0x00000048                                  ; Length of the record
000000000000b4b4         dd         0x00000bec                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b4b8         db         0x38, 0xc8, 2 dup (0xff)                    ; begin 0x7cf0
000000000000b4bc         db         0x00, 0x01, 2 dup (0x00)                    ; length 0x100 (end at 0x7df0)
000000000000b4c0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b4c1         db  0x42 ; 'B'
000000000000b4c2         db  0x0e ; '.'
000000000000b4c3         db  0x10 ; '.'
000000000000b4c4         db  0x8f ; '.'
000000000000b4c5         db  0x02 ; '.'
000000000000b4c6         db  0x42 ; 'B'
000000000000b4c7         db  0x0e ; '.'
000000000000b4c8         db  0x18 ; '.'
000000000000b4c9         db  0x8e ; '.'
000000000000b4ca         db  0x03 ; '.'
000000000000b4cb         db  0x45 ; 'E'
000000000000b4cc         db  0x0e ; '.'
000000000000b4cd         db  0x20 ; ' '
000000000000b4ce         db  0x8d ; '.'
000000000000b4cf         db  0x04 ; '.'
000000000000b4d0         db  0x42 ; 'B'
000000000000b4d1         db  0x0e ; '.'
000000000000b4d2         db  0x28 ; '('
000000000000b4d3         db  0x8c ; '.'
000000000000b4d4         db  0x05 ; '.'
000000000000b4d5         db  0x44 ; 'D'
000000000000b4d6         db  0x0e ; '.'
000000000000b4d7         db  0x30 ; '0'
000000000000b4d8         db  0x86 ; '.'
000000000000b4d9         db  0x06 ; '.'
000000000000b4da         db  0x41 ; 'A'
000000000000b4db         db  0x0e ; '.'
000000000000b4dc         db  0x38 ; '8'
000000000000b4dd         db  0x83 ; '.'
000000000000b4de         db  0x07 ; '.'
000000000000b4df         db  0x4e ; 'N'
000000000000b4e0         db  0x0e ; '.'
000000000000b4e1         db  0x50 ; 'P'
000000000000b4e2         db  0x02 ; '.'
000000000000b4e3         db  0x9d ; '.'
000000000000b4e4         db  0x0a ; '.'
000000000000b4e5         db  0x0e ; '.'
000000000000b4e6         db  0x38 ; '8'
000000000000b4e7         db  0x41 ; 'A'
000000000000b4e8         db  0x0e ; '.'
000000000000b4e9         db  0x30 ; '0'
000000000000b4ea         db  0x41 ; 'A'
000000000000b4eb         db  0x0e ; '.'
000000000000b4ec         db  0x28 ; '('
000000000000b4ed         db  0x42 ; 'B'
000000000000b4ee         db  0x0e ; '.'
000000000000b4ef         db  0x20 ; ' '
000000000000b4f0         db  0x42 ; 'B'
000000000000b4f1         db  0x0e ; '.'
000000000000b4f2         db  0x18 ; '.'
000000000000b4f3         db  0x42 ; 'B'
000000000000b4f4         db  0x0e ; '.'
000000000000b4f5         db  0x10 ; '.'
000000000000b4f6         db  0x42 ; 'B'
000000000000b4f7         db  0x0e ; '.'
000000000000b4f8         db  0x08 ; '.'
000000000000b4f9         db  0x4b ; 'K'
000000000000b4fa         db  0x0b ; '.'
000000000000b4fb         db  0x00 ; '.'
000000000000b4fc         dd         0x00000018                                  ; Length of the record
000000000000b500         dd         0x00000c38                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b504         db         0xec, 0xc8, 2 dup (0xff)                    ; begin 0x7df0
000000000000b508         db         0x21, 3 dup (0x00)                          ; length 0x21 (end at 0x7e11)
000000000000b50c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b50d         db  0x44 ; 'D'
000000000000b50e         db  0x0e ; '.'
000000000000b50f         db  0x18 ; '.'
000000000000b510         db  0x42 ; 'B'
000000000000b511         db  0x0e ; '.'
000000000000b512         db  0x20 ; ' '
000000000000b513         db  0x5a ; 'Z'
000000000000b514         db  0x0e ; '.'
000000000000b515         db  0x08 ; '.'
000000000000b516         db  0x00 ; '.'
000000000000b517         db  0x00 ; '.'
000000000000b518         dd         0x0000004c                                  ; Length of the record
000000000000b51c         dd         0x00000c54                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b520         db         0x00, 0xc9, 2 dup (0xff)                    ; begin 0x7e20
000000000000b524         db         0x1c, 0x04, 2 dup (0x00)                    ; length 0x41c (end at 0x823c)
000000000000b528         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b529         db  0x42 ; 'B'
000000000000b52a         db  0x0e ; '.'
000000000000b52b         db  0x10 ; '.'
000000000000b52c         db  0x8f ; '.'
000000000000b52d         db  0x02 ; '.'
000000000000b52e         db  0x42 ; 'B'
000000000000b52f         db  0x0e ; '.'
000000000000b530         db  0x18 ; '.'
000000000000b531         db  0x8e ; '.'
000000000000b532         db  0x03 ; '.'
000000000000b533         db  0x42 ; 'B'
000000000000b534         db  0x0e ; '.'
000000000000b535         db  0x20 ; ' '
000000000000b536         db  0x8d ; '.'
000000000000b537         db  0x04 ; '.'
000000000000b538         db  0x42 ; 'B'
000000000000b539         db  0x0e ; '.'
000000000000b53a         db  0x28 ; '('
000000000000b53b         db  0x8c ; '.'
000000000000b53c         db  0x05 ; '.'
000000000000b53d         db  0x41 ; 'A'
000000000000b53e         db  0x0e ; '.'
000000000000b53f         db  0x30 ; '0'
000000000000b540         db  0x86 ; '.'
000000000000b541         db  0x06 ; '.'
000000000000b542         db  0x41 ; 'A'
000000000000b543         db  0x0e ; '.'
000000000000b544         db  0x38 ; '8'
000000000000b545         db  0x83 ; '.'
000000000000b546         db  0x07 ; '.'
000000000000b547         db  0x44 ; 'D'
000000000000b548         db  0x0e ; '.'
000000000000b549         db  0x60 ; '`'
000000000000b54a         db  0x02 ; '.'
000000000000b54b         db  0xe9 ; '.'
000000000000b54c         db  0x0a ; '.'
000000000000b54d         db  0x0e ; '.'
000000000000b54e         db  0x38 ; '8'
000000000000b54f         db  0x41 ; 'A'
000000000000b550         db  0x0e ; '.'
000000000000b551         db  0x30 ; '0'
000000000000b552         db  0x41 ; 'A'
000000000000b553         db  0x0e ; '.'
000000000000b554         db  0x28 ; '('
000000000000b555         db  0x42 ; 'B'
000000000000b556         db  0x0e ; '.'
000000000000b557         db  0x20 ; ' '
000000000000b558         db  0x42 ; 'B'
000000000000b559         db  0x0e ; '.'
000000000000b55a         db  0x18 ; '.'
000000000000b55b         db  0x42 ; 'B'
000000000000b55c         db  0x0e ; '.'
000000000000b55d         db  0x10 ; '.'
000000000000b55e         db  0x42 ; 'B'
000000000000b55f         db  0x0e ; '.'
000000000000b560         db  0x08 ; '.'
000000000000b561         db  0x47 ; 'G'
000000000000b562         db  0x0b ; '.'
000000000000b563         db  0x00 ; '.'
000000000000b564         db  0x00 ; '.'
000000000000b565         db  0x00 ; '.'
000000000000b566         db  0x00 ; '.'
000000000000b567         db  0x00 ; '.'
000000000000b568         dd         0x00000034                                  ; Length of the record
000000000000b56c         dd         0x00000ca4                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b570         db         0xd0, 0xcc, 2 dup (0xff)                    ; begin 0x8240
000000000000b574         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x82bb)
000000000000b578         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b579         db  0x42 ; 'B'
000000000000b57a         db  0x0e ; '.'
000000000000b57b         db  0x10 ; '.'
000000000000b57c         db  0x8c ; '.'
000000000000b57d         db  0x02 ; '.'
000000000000b57e         db  0x41 ; 'A'
000000000000b57f         db  0x0e ; '.'
000000000000b580         db  0x18 ; '.'
000000000000b581         db  0x86 ; '.'
000000000000b582         db  0x03 ; '.'
000000000000b583         db  0x41 ; 'A'
000000000000b584         db  0x0e ; '.'
000000000000b585         db  0x20 ; ' '
000000000000b586         db  0x83 ; '.'
000000000000b587         db  0x04 ; '.'
000000000000b588         db  0x7d ; '}'
000000000000b589         db  0x0a ; '.'
000000000000b58a         db  0x0e ; '.'
000000000000b58b         db  0x18 ; '.'
000000000000b58c         db  0x41 ; 'A'
000000000000b58d         db  0x0e ; '.'
000000000000b58e         db  0x10 ; '.'
000000000000b58f         db  0x42 ; 'B'
000000000000b590         db  0x0e ; '.'
000000000000b591         db  0x08 ; '.'
000000000000b592         db  0x44 ; 'D'
000000000000b593         db  0x0b ; '.'
000000000000b594         db  0x60 ; '`'
000000000000b595         db  0x0a ; '.'
000000000000b596         db  0x0e ; '.'
000000000000b597         db  0x18 ; '.'
000000000000b598         db  0x41 ; 'A'
000000000000b599         db  0x0e ; '.'
000000000000b59a         db  0x10 ; '.'
000000000000b59b         db  0x42 ; 'B'
000000000000b59c         db  0x0e ; '.'
000000000000b59d         db  0x08 ; '.'
000000000000b59e         db  0x45 ; 'E'
000000000000b59f         db  0x0b ; '.'
000000000000b5a0         dd         0x0000001c                                  ; Length of the record
000000000000b5a4         dd         0x00000cdc                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b5a8         db         0x18, 0xcd, 2 dup (0xff)                    ; begin 0x82c0
000000000000b5ac         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x8300)
000000000000b5b0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b5b1         db  0x44 ; 'D'
000000000000b5b2         db  0x0e ; '.'
000000000000b5b3         db  0x10 ; '.'
000000000000b5b4         db  0x83 ; '.'
000000000000b5b5         db  0x02 ; '.'
000000000000b5b6         db  0x5a ; 'Z'
000000000000b5b7         db  0x0a ; '.'
000000000000b5b8         db  0x0e ; '.'
000000000000b5b9         db  0x08 ; '.'
000000000000b5ba         db  0x4a ; 'J'
000000000000b5bb         db  0x0b ; '.'
000000000000b5bc         db  0x53 ; 'S'
000000000000b5bd         db  0x0e ; '.'
000000000000b5be         db  0x08 ; '.'
000000000000b5bf         db  0x00 ; '.'
000000000000b5c0         dd         0x0000002c                                  ; Length of the record
000000000000b5c4         dd         0x00000cfc                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b5c8         db         0x38, 0xcd, 2 dup (0xff)                    ; begin 0x8300
000000000000b5cc         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x8357)
000000000000b5d0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b5d1         db  0x63 ; 'c'
000000000000b5d2         db  0x0e ; '.'
000000000000b5d3         db  0x10 ; '.'
000000000000b5d4         db  0x8c ; '.'
000000000000b5d5         db  0x02 ; '.'
000000000000b5d6         db  0x41 ; 'A'
000000000000b5d7         db  0x0e ; '.'
000000000000b5d8         db  0x18 ; '.'
000000000000b5d9         db  0x86 ; '.'
000000000000b5da         db  0x03 ; '.'
000000000000b5db         db  0x44 ; 'D'
000000000000b5dc         db  0x0e ; '.'
000000000000b5dd         db  0x20 ; ' '
000000000000b5de         db  0x83 ; '.'
000000000000b5df         db  0x04 ; '.'
000000000000b5e0         db  0x6b ; 'k'
000000000000b5e1         db  0x0e ; '.'
000000000000b5e2         db  0x18 ; '.'
000000000000b5e3         db  0x41 ; 'A'
000000000000b5e4         db  0x0e ; '.'
000000000000b5e5         db  0x10 ; '.'
000000000000b5e6         db  0x42 ; 'B'
000000000000b5e7         db  0x0e ; '.'
000000000000b5e8         db  0x08 ; '.'
000000000000b5e9         db  0x00 ; '.'
000000000000b5ea         db  0x00 ; '.'
000000000000b5eb         db  0x00 ; '.'
000000000000b5ec         db  0x00 ; '.'
000000000000b5ed         db  0x00 ; '.'
000000000000b5ee         db  0x00 ; '.'
000000000000b5ef         db  0x00 ; '.'
000000000000b5f0         dd         0x0000003c                                  ; Length of the record
000000000000b5f4         dd         0x00000d2c                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b5f8         db         0x68, 0xcd, 2 dup (0xff)                    ; begin 0x8360
000000000000b5fc         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x83e3)
000000000000b600         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b601         db  0x42 ; 'B'
000000000000b602         db  0x0e ; '.'
000000000000b603         db  0x10 ; '.'
000000000000b604         db  0x8d ; '.'
000000000000b605         db  0x02 ; '.'
000000000000b606         db  0x42 ; 'B'
000000000000b607         db  0x0e ; '.'
000000000000b608         db  0x18 ; '.'
000000000000b609         db  0x8c ; '.'
000000000000b60a         db  0x03 ; '.'
000000000000b60b         db  0x44 ; 'D'
000000000000b60c         db  0x0e ; '.'
000000000000b60d         db  0x20 ; ' '
000000000000b60e         db  0x86 ; '.'
000000000000b60f         db  0x04 ; '.'
000000000000b610         db  0x41 ; 'A'
000000000000b611         db  0x0e ; '.'
000000000000b612         db  0x28 ; '('
000000000000b613         db  0x83 ; '.'
000000000000b614         db  0x05 ; '.'
000000000000b615         db  0x4a ; 'J'
000000000000b616         db  0x0e ; '.'
000000000000b617         db  0x40 ; '@'
000000000000b618         db  0x02 ; '.'
000000000000b619         db  0x64 ; 'd'
000000000000b61a         db  0x0a ; '.'
000000000000b61b         db  0x0e ; '.'
000000000000b61c         db  0x28 ; '('
000000000000b61d         db  0x41 ; 'A'
000000000000b61e         db  0x0e ; '.'
000000000000b61f         db  0x20 ; ' '
000000000000b620         db  0x41 ; 'A'
000000000000b621         db  0x0e ; '.'
000000000000b622         db  0x18 ; '.'
000000000000b623         db  0x42 ; 'B'
000000000000b624         db  0x0e ; '.'
000000000000b625         db  0x10 ; '.'
000000000000b626         db  0x42 ; 'B'
000000000000b627         db  0x0e ; '.'
000000000000b628         db  0x08 ; '.'
000000000000b629         db  0x41 ; 'A'
000000000000b62a         db  0x0b ; '.'
000000000000b62b         db  0x00 ; '.'
000000000000b62c         db  0x00 ; '.'
000000000000b62d         db  0x00 ; '.'
000000000000b62e         db  0x00 ; '.'
000000000000b62f         db  0x00 ; '.'
000000000000b630         dd         0x00000038                                  ; Length of the record
000000000000b634         dd         0x00000d6c                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b638         db         0xb8, 0xcd, 2 dup (0xff)                    ; begin 0x83f0
000000000000b63c         db         0x85, 0x01, 2 dup (0x00)                    ; length 0x185 (end at 0x8575)
000000000000b640         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b641         db  0x42 ; 'B'
000000000000b642         db  0x0e ; '.'
000000000000b643         db  0x10 ; '.'
000000000000b644         db  0x8d ; '.'
000000000000b645         db  0x02 ; '.'
000000000000b646         db  0x42 ; 'B'
000000000000b647         db  0x0e ; '.'
000000000000b648         db  0x18 ; '.'
000000000000b649         db  0x8c ; '.'
000000000000b64a         db  0x03 ; '.'
000000000000b64b         db  0x44 ; 'D'
000000000000b64c         db  0x0e ; '.'
000000000000b64d         db  0x20 ; ' '
000000000000b64e         db  0x86 ; '.'
000000000000b64f         db  0x04 ; '.'
000000000000b650         db  0x41 ; 'A'
000000000000b651         db  0x0e ; '.'
000000000000b652         db  0x28 ; '('
000000000000b653         db  0x83 ; '.'
000000000000b654         db  0x05 ; '.'
000000000000b655         db  0x50 ; 'P'
000000000000b656         db  0x0e ; '.'
000000000000b657         db  0x40 ; '@'
000000000000b658         db  0x02 ; '.'
000000000000b659         db  0x6f ; 'o'
000000000000b65a         db  0x0a ; '.'
000000000000b65b         db  0x0e ; '.'
000000000000b65c         db  0x28 ; '('
000000000000b65d         db  0x41 ; 'A'
000000000000b65e         db  0x0e ; '.'
000000000000b65f         db  0x20 ; ' '
000000000000b660         db  0x41 ; 'A'
000000000000b661         db  0x0e ; '.'
000000000000b662         db  0x18 ; '.'
000000000000b663         db  0x42 ; 'B'
000000000000b664         db  0x0e ; '.'
000000000000b665         db  0x10 ; '.'
000000000000b666         db  0x42 ; 'B'
000000000000b667         db  0x0e ; '.'
000000000000b668         db  0x08 ; '.'
000000000000b669         db  0x42 ; 'B'
000000000000b66a         db  0x0b ; '.'
000000000000b66b         db  0x00 ; '.'
000000000000b66c         dd         0x00000038                                  ; Length of the record
000000000000b670         dd         0x00000da8                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b674         db         0x0c, 0xcf, 2 dup (0xff)                    ; begin 0x8580
000000000000b678         db         0xdb, 3 dup (0x00)                          ; length 0xdb (end at 0x865b)
000000000000b67c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b67d         db  0x41 ; 'A'
000000000000b67e         db  0x0e ; '.'
000000000000b67f         db  0x10 ; '.'
000000000000b680         db  0x86 ; '.'
000000000000b681         db  0x02 ; '.'
000000000000b682         db  0x48 ; 'H'
000000000000b683         db  0x0e ; '.'
000000000000b684         db  0x18 ; '.'
000000000000b685         db  0x83 ; '.'
000000000000b686         db  0x03 ; '.'
000000000000b687         db  0x4b ; 'K'
000000000000b688         db  0x0e ; '.'
000000000000b689         db  0x30 ; '0'
000000000000b68a         db  0x70 ; 'p'
000000000000b68b         db  0x0a ; '.'
000000000000b68c         db  0x0e ; '.'
000000000000b68d         db  0x18 ; '.'
000000000000b68e         db  0x41 ; 'A'
000000000000b68f         db  0x0e ; '.'
000000000000b690         db  0x10 ; '.'
000000000000b691         db  0x41 ; 'A'
000000000000b692         db  0x0e ; '.'
000000000000b693         db  0x08 ; '.'
000000000000b694         db  0x4a ; 'J'
000000000000b695         db  0x0b ; '.'
000000000000b696         db  0x02 ; '.'
000000000000b697         db  0x66 ; 'f'
000000000000b698         db  0x0a ; '.'
000000000000b699         db  0x0e ; '.'
000000000000b69a         db  0x18 ; '.'
000000000000b69b         db  0x43 ; 'C'
000000000000b69c         db  0x0e ; '.'
000000000000b69d         db  0x10 ; '.'
000000000000b69e         db  0x41 ; 'A'
000000000000b69f         db  0x0e ; '.'
000000000000b6a0         db  0x08 ; '.'
000000000000b6a1         db  0x46 ; 'F'
000000000000b6a2         db  0x0b ; '.'
000000000000b6a3         db  0x00 ; '.'
000000000000b6a4         db  0x00 ; '.'
000000000000b6a5         db  0x00 ; '.'
000000000000b6a6         db  0x00 ; '.'
000000000000b6a7         db  0x00 ; '.'
000000000000b6a8         dd         0x0000004c                                  ; Length of the record
000000000000b6ac         dd         0x00000de4                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b6b0         db         0xb0, 0xcf, 2 dup (0xff)                    ; begin 0x8660
000000000000b6b4         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x86dd)
000000000000b6b8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b6b9         db  0x42 ; 'B'
000000000000b6ba         db  0x0e ; '.'
000000000000b6bb         db  0x10 ; '.'
000000000000b6bc         db  0x8c ; '.'
000000000000b6bd         db  0x02 ; '.'
000000000000b6be         db  0x41 ; 'A'
000000000000b6bf         db  0x0e ; '.'
000000000000b6c0         db  0x18 ; '.'
000000000000b6c1         db  0x86 ; '.'
000000000000b6c2         db  0x03 ; '.'
000000000000b6c3         db  0x44 ; 'D'
000000000000b6c4         db  0x0e ; '.'
000000000000b6c5         db  0x20 ; ' '
000000000000b6c6         db  0x83 ; '.'
000000000000b6c7         db  0x04 ; '.'
000000000000b6c8         db  0x69 ; 'i'
000000000000b6c9         db  0x0a ; '.'
000000000000b6ca         db  0x0e ; '.'
000000000000b6cb         db  0x18 ; '.'
000000000000b6cc         db  0x41 ; 'A'
000000000000b6cd         db  0x0e ; '.'
000000000000b6ce         db  0x10 ; '.'
000000000000b6cf         db  0x42 ; 'B'
000000000000b6d0         db  0x0e ; '.'
000000000000b6d1         db  0x08 ; '.'
000000000000b6d2         db  0x45 ; 'E'
000000000000b6d3         db  0x0b ; '.'
000000000000b6d4         db  0x55 ; 'U'
000000000000b6d5         db  0x0a ; '.'
000000000000b6d6         db  0x0e ; '.'
000000000000b6d7         db  0x18 ; '.'
000000000000b6d8         db  0x41 ; 'A'
000000000000b6d9         db  0x0e ; '.'
000000000000b6da         db  0x10 ; '.'
000000000000b6db         db  0x42 ; 'B'
000000000000b6dc         db  0x0e ; '.'
000000000000b6dd         db  0x08 ; '.'
000000000000b6de         db  0x48 ; 'H'
000000000000b6df         db  0x0b ; '.'
000000000000b6e0         db  0x41 ; 'A'
000000000000b6e1         db  0x0a ; '.'
000000000000b6e2         db  0x0e ; '.'
000000000000b6e3         db  0x18 ; '.'
000000000000b6e4         db  0x46 ; 'F'
000000000000b6e5         db  0x0e ; '.'
000000000000b6e6         db  0x10 ; '.'
000000000000b6e7         db  0x42 ; 'B'
000000000000b6e8         db  0x0e ; '.'
000000000000b6e9         db  0x08 ; '.'
000000000000b6ea         db  0x47 ; 'G'
000000000000b6eb         db  0x0b ; '.'
000000000000b6ec         db  0x49 ; 'I'
000000000000b6ed         db  0x0e ; '.'
000000000000b6ee         db  0x18 ; '.'
000000000000b6ef         db  0x41 ; 'A'
000000000000b6f0         db  0x0e ; '.'
000000000000b6f1         db  0x10 ; '.'
000000000000b6f2         db  0x42 ; 'B'
000000000000b6f3         db  0x0e ; '.'
000000000000b6f4         db  0x08 ; '.'
000000000000b6f5         db  0x00 ; '.'
000000000000b6f6         db  0x00 ; '.'
000000000000b6f7         db  0x00 ; '.'
000000000000b6f8         dd         0x0000001c                                  ; Length of the record
000000000000b6fc         dd         0x00000e34                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b700         db         0xe0, 0xcf, 2 dup (0xff)                    ; begin 0x86e0
000000000000b704         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x8740)
000000000000b708         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b709         db  0x44 ; 'D'
000000000000b70a         db  0x0e ; '.'
000000000000b70b         db  0x10 ; '.'
000000000000b70c         db  0x75 ; 'u'
000000000000b70d         db  0x0a ; '.'
000000000000b70e         db  0x0e ; '.'
000000000000b70f         db  0x08 ; '.'
000000000000b710         db  0x47 ; 'G'
000000000000b711         db  0x0b ; '.'
000000000000b712         db  0x5f ; '_'
000000000000b713         db  0x0e ; '.'
000000000000b714         db  0x08 ; '.'
000000000000b715         db  0x00 ; '.'
000000000000b716         db  0x00 ; '.'
000000000000b717         db  0x00 ; '.'
000000000000b718         dd         0x0000001c                                  ; Length of the record
000000000000b71c         dd         0x00000e54                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b720         db         0x20, 0xd0, 2 dup (0xff)                    ; begin 0x8740
000000000000b724         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x877c)
000000000000b728         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b729         db  0x44 ; 'D'
000000000000b72a         db  0x0e ; '.'
000000000000b72b         db  0x10 ; '.'
000000000000b72c         db  0x61 ; 'a'
000000000000b72d         db  0x0a ; '.'
000000000000b72e         db  0x0e ; '.'
000000000000b72f         db  0x08 ; '.'
000000000000b730         db  0x4b ; 'K'
000000000000b731         db  0x0b ; '.'
000000000000b732         db  0x4b ; 'K'
000000000000b733         db  0x0e ; '.'
000000000000b734         db  0x08 ; '.'
000000000000b735         db  0x00 ; '.'
000000000000b736         db  0x00 ; '.'
000000000000b737         db  0x00 ; '.'
000000000000b738         dd         0x00000014                                  ; Length of the record
000000000000b73c         dd         0x00000e74                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b740         db         0x40, 0xd0, 2 dup (0xff)                    ; begin 0x8780
000000000000b744         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x878e)
000000000000b748         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b749         align      16
000000000000b750         dd         0x00000034                                  ; Length of the record
000000000000b754         dd         0x00000e8c                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b758         db         0x38, 0xd0, 2 dup (0xff)                    ; begin 0x8790
000000000000b75c         db         0x7e, 0x02, 2 dup (0x00)                    ; length 0x27e (end at 0x8a0e)
000000000000b760         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b761         db  0x42 ; 'B'
000000000000b762         db  0x0e ; '.'
000000000000b763         db  0x10 ; '.'
000000000000b764         db  0x8c ; '.'
000000000000b765         db  0x02 ; '.'
000000000000b766         db  0x41 ; 'A'
000000000000b767         db  0x0e ; '.'
000000000000b768         db  0x18 ; '.'
000000000000b769         db  0x86 ; '.'
000000000000b76a         db  0x03 ; '.'
000000000000b76b         db  0x43 ; 'C'
000000000000b76c         db  0x0e ; '.'
000000000000b76d         db  0x20 ; ' '
000000000000b76e         db  0x83 ; '.'
000000000000b76f         db  0x04 ; '.'
000000000000b770         db  0x44 ; 'D'
000000000000b771         db  0x0e ; '.'
000000000000b772         db  0x70 ; 'p'
000000000000b773         db  0x02 ; '.'
000000000000b774         db  0xf0 ; '.'
000000000000b775         db  0x0a ; '.'
000000000000b776         db  0x0e ; '.'
000000000000b777         db  0x20 ; ' '
000000000000b778         db  0x41 ; 'A'
000000000000b779         db  0x0e ; '.'
000000000000b77a         db  0x18 ; '.'
000000000000b77b         db  0x41 ; 'A'
000000000000b77c         db  0x0e ; '.'
000000000000b77d         db  0x10 ; '.'
000000000000b77e         db  0x42 ; 'B'
000000000000b77f         db  0x0e ; '.'
000000000000b780         db  0x08 ; '.'
000000000000b781         db  0x42 ; 'B'
000000000000b782         db  0x0b ; '.'
000000000000b783         db  0x00 ; '.'
000000000000b784         db  0x00 ; '.'
000000000000b785         db  0x00 ; '.'
000000000000b786         db  0x00 ; '.'
000000000000b787         db  0x00 ; '.'
000000000000b788         dd         0x00000044                                  ; Length of the record
000000000000b78c         dd         0x00000ec4                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b790         db         0x80, 0xd2, 2 dup (0xff)                    ; begin 0x8a10
000000000000b794         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x8a75)
000000000000b798         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b799         db  0x42 ; 'B'
000000000000b79a         db  0x0e ; '.'
000000000000b79b         db  0x10 ; '.'
000000000000b79c         db  0x8f ; '.'
000000000000b79d         db  0x02 ; '.'
000000000000b79e         db  0x42 ; 'B'
000000000000b79f         db  0x0e ; '.'
000000000000b7a0         db  0x18 ; '.'
000000000000b7a1         db  0x8e ; '.'
000000000000b7a2         db  0x03 ; '.'
000000000000b7a3         db  0x45 ; 'E'
000000000000b7a4         db  0x0e ; '.'
000000000000b7a5         db  0x20 ; ' '
000000000000b7a6         db  0x8d ; '.'
000000000000b7a7         db  0x04 ; '.'
000000000000b7a8         db  0x42 ; 'B'
000000000000b7a9         db  0x0e ; '.'
000000000000b7aa         db  0x28 ; '('
000000000000b7ab         db  0x8c ; '.'
000000000000b7ac         db  0x05 ; '.'
000000000000b7ad         db  0x48 ; 'H'
000000000000b7ae         db  0x0e ; '.'
000000000000b7af         db  0x30 ; '0'
000000000000b7b0         db  0x86 ; '.'
000000000000b7b1         db  0x06 ; '.'
000000000000b7b2         db  0x48 ; 'H'
000000000000b7b3         db  0x0e ; '.'
000000000000b7b4         db  0x38 ; '8'
000000000000b7b5         db  0x83 ; '.'
000000000000b7b6         db  0x07 ; '.'
000000000000b7b7         db  0x4d ; 'M'
000000000000b7b8         db  0x0e ; '.'
000000000000b7b9         db  0x40 ; '@'
000000000000b7ba         db  0x72 ; 'r'
000000000000b7bb         db  0x0e ; '.'
000000000000b7bc         db  0x38 ; '8'
000000000000b7bd         db  0x41 ; 'A'
000000000000b7be         db  0x0e ; '.'
000000000000b7bf         db  0x30 ; '0'
000000000000b7c0         db  0x41 ; 'A'
000000000000b7c1         db  0x0e ; '.'
000000000000b7c2         db  0x28 ; '('
000000000000b7c3         db  0x42 ; 'B'
000000000000b7c4         db  0x0e ; '.'
000000000000b7c5         db  0x20 ; ' '
000000000000b7c6         db  0x42 ; 'B'
000000000000b7c7         db  0x0e ; '.'
000000000000b7c8         db  0x18 ; '.'
000000000000b7c9         db  0x42 ; 'B'
000000000000b7ca         db  0x0e ; '.'
000000000000b7cb         db  0x10 ; '.'
000000000000b7cc         db  0x42 ; 'B'
000000000000b7cd         db  0x0e ; '.'
000000000000b7ce         db  0x08 ; '.'
000000000000b7cf         db  0x00 ; '.'
000000000000b7d0         dd         0x00000014                                  ; Length of the record
000000000000b7d4         dd         0x00000f0c                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b7d8         db         0xa8, 0xd2, 2 dup (0xff)                    ; begin 0x8a80
000000000000b7dc         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x8a82)
000000000000b7e0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b7e1         align      8
000000000000b7e8         dd         0x00000010                                  ; Length of the record
000000000000b7ec         dd         0x00000f24                                  ; FDE: parent CIE at 0xa8c8 (FDE encoding = 0x1B)
000000000000b7f0         db         0xa0, 0xd2, 2 dup (0xff)                    ; begin 0x8a90
000000000000b7f4         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x8a9e)
000000000000b7f8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000b7f9         align      2048


        ; Segment Segment 3
        ; Range: [0x20b8f0; 0x20c660[ (3440 bytes)
        ; File offset : [47344; 49732[ (2388 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x20b8f0; 0x20b8f8[ (8 bytes)
        ; File offset : [47344; 47352[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
000000000020b8f0         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x20b8f8; 0x20b900[ (8 bytes)
        ; File offset : [47352; 47360[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
000000000020b8f8         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x20b900; 0x20bb78[ (632 bytes)
        ; File offset : [47360; 47992[ (632 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     longopts:
000000000020b900         db  0x09 ; '.'                                         ; DATA XREF=main+196
000000000020b901         db  0x8d ; '.'
000000000020b902         db  0x00 ; '.'
000000000020b903         db  0x00 ; '.'
000000000020b904         db  0x00 ; '.'
000000000020b905         db  0x00 ; '.'
000000000020b906         db  0x00 ; '.'
000000000020b907         db  0x00 ; '.'
000000000020b908         db  0x01 ; '.'
000000000020b909         db  0x00 ; '.'
000000000020b90a         db  0x00 ; '.'
000000000020b90b         db  0x00 ; '.'
000000000020b90c         db  0x00 ; '.'
000000000020b90d         db  0x00 ; '.'
000000000020b90e         db  0x00 ; '.'
000000000020b90f         db  0x00 ; '.'
000000000020b910         db  0x00 ; '.'
000000000020b911         db  0x00 ; '.'
000000000020b912         db  0x00 ; '.'
000000000020b913         db  0x00 ; '.'
000000000020b914         db  0x00 ; '.'
000000000020b915         db  0x00 ; '.'
000000000020b916         db  0x00 ; '.'
000000000020b917         db  0x00 ; '.'
000000000020b918         db  0x62 ; 'b'
000000000020b919         db  0x00 ; '.'
000000000020b91a         db  0x00 ; '.'
000000000020b91b         db  0x00 ; '.'
000000000020b91c         db  0x00 ; '.'
000000000020b91d         db  0x00 ; '.'
000000000020b91e         db  0x00 ; '.'
000000000020b91f         db  0x00 ; '.'
000000000020b920         db  0x21 ; '!'
000000000020b921         db  0x8d ; '.'
000000000020b922         db  0x00 ; '.'
000000000020b923         db  0x00 ; '.'
000000000020b924         db  0x00 ; '.'
000000000020b925         db  0x00 ; '.'
000000000020b926         db  0x00 ; '.'
000000000020b927         db  0x00 ; '.'
000000000020b928         db  0x01 ; '.'
000000000020b929         db  0x00 ; '.'
000000000020b92a         db  0x00 ; '.'
000000000020b92b         db  0x00 ; '.'
000000000020b92c         db  0x00 ; '.'
000000000020b92d         db  0x00 ; '.'
000000000020b92e         db  0x00 ; '.'
000000000020b92f         db  0x00 ; '.'
000000000020b930         db  0x00 ; '.'
000000000020b931         db  0x00 ; '.'
000000000020b932         db  0x00 ; '.'
000000000020b933         db  0x00 ; '.'
000000000020b934         db  0x00 ; '.'
000000000020b935         db  0x00 ; '.'
000000000020b936         db  0x00 ; '.'
000000000020b937         db  0x00 ; '.'
000000000020b938         db  0x6c ; 'l'
000000000020b939         db  0x00 ; '.'
000000000020b93a         db  0x00 ; '.'
000000000020b93b         db  0x00 ; '.'
000000000020b93c         db  0x00 ; '.'
000000000020b93d         db  0x00 ; '.'
000000000020b93e         db  0x00 ; '.'
000000000020b93f         db  0x00 ; '.'
000000000020b940         db  0x47 ; 'G'
000000000020b941         db  0x8e ; '.'
000000000020b942         db  0x00 ; '.'
000000000020b943         db  0x00 ; '.'
000000000020b944         db  0x00 ; '.'
000000000020b945         db  0x00 ; '.'
000000000020b946         db  0x00 ; '.'
000000000020b947         db  0x00 ; '.'
000000000020b948         db  0x01 ; '.'
000000000020b949         db  0x00 ; '.'
000000000020b94a         db  0x00 ; '.'
000000000020b94b         db  0x00 ; '.'
000000000020b94c         db  0x00 ; '.'
000000000020b94d         db  0x00 ; '.'
000000000020b94e         db  0x00 ; '.'
000000000020b94f         db  0x00 ; '.'
000000000020b950         db  0x00 ; '.'
000000000020b951         db  0x00 ; '.'
000000000020b952         db  0x00 ; '.'
000000000020b953         db  0x00 ; '.'
000000000020b954         db  0x00 ; '.'
000000000020b955         db  0x00 ; '.'
000000000020b956         db  0x00 ; '.'
000000000020b957         db  0x00 ; '.'
000000000020b958         db  0x43 ; 'C'
000000000020b959         db  0x00 ; '.'
000000000020b95a         db  0x00 ; '.'
000000000020b95b         db  0x00 ; '.'
000000000020b95c         db  0x00 ; '.'
000000000020b95d         db  0x00 ; '.'
000000000020b95e         db  0x00 ; '.'
000000000020b95f         db  0x00 ; '.'
000000000020b960         db  0x54 ; 'T'
000000000020b961         db  0x8d ; '.'
000000000020b962         db  0x00 ; '.'
000000000020b963         db  0x00 ; '.'
000000000020b964         db  0x00 ; '.'
000000000020b965         db  0x00 ; '.'
000000000020b966         db  0x00 ; '.'
000000000020b967         db  0x00 ; '.'
000000000020b968         db  0x01 ; '.'
000000000020b969         db  0x00 ; '.'
000000000020b96a         db  0x00 ; '.'
000000000020b96b         db  0x00 ; '.'
000000000020b96c         db  0x00 ; '.'
000000000020b96d         db  0x00 ; '.'
000000000020b96e         db  0x00 ; '.'
000000000020b96f         db  0x00 ; '.'
000000000020b970         db  0x00 ; '.'
000000000020b971         db  0x00 ; '.'
000000000020b972         db  0x00 ; '.'
000000000020b973         db  0x00 ; '.'
000000000020b974         db  0x00 ; '.'
000000000020b975         db  0x00 ; '.'
000000000020b976         db  0x00 ; '.'
000000000020b977         db  0x00 ; '.'
000000000020b978         db  0x6e ; 'n'
000000000020b979         db  0x00 ; '.'
000000000020b97a         db  0x00 ; '.'
000000000020b97b         db  0x00 ; '.'
000000000020b97c         db  0x00 ; '.'
000000000020b97d         db  0x00 ; '.'
000000000020b97e         db  0x00 ; '.'
000000000020b97f         db  0x00 ; '.'
000000000020b980         db  0x52 ; 'R'
000000000020b981         db  0x8e ; '.'
000000000020b982         db  0x00 ; '.'
000000000020b983         db  0x00 ; '.'
000000000020b984         db  0x00 ; '.'
000000000020b985         db  0x00 ; '.'
000000000020b986         db  0x00 ; '.'
000000000020b987         db  0x00 ; '.'
000000000020b988         db  0x00 ; '.'
000000000020b989         db  0x00 ; '.'
000000000020b98a         db  0x00 ; '.'
000000000020b98b         db  0x00 ; '.'
000000000020b98c         db  0x00 ; '.'
000000000020b98d         db  0x00 ; '.'
000000000020b98e         db  0x00 ; '.'
000000000020b98f         db  0x00 ; '.'
000000000020b990         db  0x00 ; '.'
000000000020b991         db  0x00 ; '.'
000000000020b992         db  0x00 ; '.'
000000000020b993         db  0x00 ; '.'
000000000020b994         db  0x00 ; '.'
000000000020b995         db  0x00 ; '.'
000000000020b996         db  0x00 ; '.'
000000000020b997         db  0x00 ; '.'
000000000020b998         db  0x65 ; 'e'
000000000020b999         db  0x00 ; '.'
000000000020b99a         db  0x00 ; '.'
000000000020b99b         db  0x00 ; '.'
000000000020b99c         db  0x00 ; '.'
000000000020b99d         db  0x00 ; '.'
000000000020b99e         db  0x00 ; '.'
000000000020b99f         db  0x00 ; '.'
000000000020b9a0         db  0x64 ; 'd'
000000000020b9a1         db  0x8e ; '.'
000000000020b9a2         db  0x00 ; '.'
000000000020b9a3         db  0x00 ; '.'
000000000020b9a4         db  0x00 ; '.'
000000000020b9a5         db  0x00 ; '.'
000000000020b9a6         db  0x00 ; '.'
000000000020b9a7         db  0x00 ; '.'
000000000020b9a8         db  0x00 ; '.'
000000000020b9a9         db  0x00 ; '.'
000000000020b9aa         db  0x00 ; '.'
000000000020b9ab         db  0x00 ; '.'
000000000020b9ac         db  0x00 ; '.'
000000000020b9ad         db  0x00 ; '.'
000000000020b9ae         db  0x00 ; '.'
000000000020b9af         db  0x00 ; '.'
000000000020b9b0         db  0x00 ; '.'
000000000020b9b1         db  0x00 ; '.'
000000000020b9b2         db  0x00 ; '.'
000000000020b9b3         db  0x00 ; '.'
000000000020b9b4         db  0x00 ; '.'
000000000020b9b5         db  0x00 ; '.'
000000000020b9b6         db  0x00 ; '.'
000000000020b9b7         db  0x00 ; '.'
000000000020b9b8         db  0x75 ; 'u'
000000000020b9b9         db  0x00 ; '.'
000000000020b9ba         db  0x00 ; '.'
000000000020b9bb         db  0x00 ; '.'
000000000020b9bc         db  0x00 ; '.'
000000000020b9bd         db  0x00 ; '.'
000000000020b9be         db  0x00 ; '.'
000000000020b9bf         db  0x00 ; '.'
000000000020b9c0         db  0x6f ; 'o'
000000000020b9c1         db  0x8e ; '.'
000000000020b9c2         db  0x00 ; '.'
000000000020b9c3         db  0x00 ; '.'
000000000020b9c4         db  0x00 ; '.'
000000000020b9c5         db  0x00 ; '.'
000000000020b9c6         db  0x00 ; '.'
000000000020b9c7         db  0x00 ; '.'
000000000020b9c8         db  0x01 ; '.'
000000000020b9c9         db  0x00 ; '.'
000000000020b9ca         db  0x00 ; '.'
000000000020b9cb         db  0x00 ; '.'
000000000020b9cc         db  0x00 ; '.'
000000000020b9cd         db  0x00 ; '.'
000000000020b9ce         db  0x00 ; '.'
000000000020b9cf         db  0x00 ; '.'
000000000020b9d0         db  0x00 ; '.'
000000000020b9d1         db  0x00 ; '.'
000000000020b9d2         db  0x00 ; '.'
000000000020b9d3         db  0x00 ; '.'
000000000020b9d4         db  0x00 ; '.'
000000000020b9d5         db  0x00 ; '.'
000000000020b9d6         db  0x00 ; '.'
000000000020b9d7         db  0x00 ; '.'
000000000020b9d8         db  0x61 ; 'a'
000000000020b9d9         db  0x00 ; '.'
000000000020b9da         db  0x00 ; '.'
000000000020b9db         db  0x00 ; '.'
000000000020b9dc         db  0x00 ; '.'
000000000020b9dd         db  0x00 ; '.'
000000000020b9de         db  0x00 ; '.'
000000000020b9df         db  0x00 ; '.'
000000000020b9e0         db  0x7d ; '}'
000000000020b9e1         db  0x8e ; '.'
000000000020b9e2         db  0x00 ; '.'
000000000020b9e3         db  0x00 ; '.'
000000000020b9e4         db  0x00 ; '.'
000000000020b9e5         db  0x00 ; '.'
000000000020b9e6         db  0x00 ; '.'
000000000020b9e7         db  0x00 ; '.'
000000000020b9e8         db  0x01 ; '.'
000000000020b9e9         db  0x00 ; '.'
000000000020b9ea         db  0x00 ; '.'
000000000020b9eb         db  0x00 ; '.'
000000000020b9ec         db  0x00 ; '.'
000000000020b9ed         db  0x00 ; '.'
000000000020b9ee         db  0x00 ; '.'
000000000020b9ef         db  0x00 ; '.'
000000000020b9f0         db  0x00 ; '.'
000000000020b9f1         db  0x00 ; '.'
000000000020b9f2         db  0x00 ; '.'
000000000020b9f3         db  0x00 ; '.'
000000000020b9f4         db  0x00 ; '.'
000000000020b9f5         db  0x00 ; '.'
000000000020b9f6         db  0x00 ; '.'
000000000020b9f7         db  0x00 ; '.'
000000000020b9f8         db  0x83 ; '.'
000000000020b9f9         db  0x00 ; '.'
000000000020b9fa         db  0x00 ; '.'
000000000020b9fb         db  0x00 ; '.'
000000000020b9fc         db  0x00 ; '.'
000000000020b9fd         db  0x00 ; '.'
000000000020b9fe         db  0x00 ; '.'
000000000020b9ff         db  0x00 ; '.'
000000000020ba00         db  0x8f ; '.'
000000000020ba01         db  0x8e ; '.'
000000000020ba02         db  0x00 ; '.'
000000000020ba03         db  0x00 ; '.'
000000000020ba04         db  0x00 ; '.'
000000000020ba05         db  0x00 ; '.'
000000000020ba06         db  0x00 ; '.'
000000000020ba07         db  0x00 ; '.'
000000000020ba08         db  0x02 ; '.'
000000000020ba09         db  0x00 ; '.'
000000000020ba0a         db  0x00 ; '.'
000000000020ba0b         db  0x00 ; '.'
000000000020ba0c         db  0x00 ; '.'
000000000020ba0d         db  0x00 ; '.'
000000000020ba0e         db  0x00 ; '.'
000000000020ba0f         db  0x00 ; '.'
000000000020ba10         db  0x00 ; '.'
000000000020ba11         db  0x00 ; '.'
000000000020ba12         db  0x00 ; '.'
000000000020ba13         db  0x00 ; '.'
000000000020ba14         db  0x00 ; '.'
000000000020ba15         db  0x00 ; '.'
000000000020ba16         db  0x00 ; '.'
000000000020ba17         db  0x00 ; '.'
000000000020ba18         db  0x64 ; 'd'
000000000020ba19         db  0x00 ; '.'
000000000020ba1a         db  0x00 ; '.'
000000000020ba1b         db  0x00 ; '.'
000000000020ba1c         db  0x00 ; '.'
000000000020ba1d         db  0x00 ; '.'
000000000020ba1e         db  0x00 ; '.'
000000000020ba1f         db  0x00 ; '.'
000000000020ba20         db  0xa0 ; '.'
000000000020ba21         db  0x8e ; '.'
000000000020ba22         db  0x00 ; '.'
000000000020ba23         db  0x00 ; '.'
000000000020ba24         db  0x00 ; '.'
000000000020ba25         db  0x00 ; '.'
000000000020ba26         db  0x00 ; '.'
000000000020ba27         db  0x00 ; '.'
000000000020ba28         db  0x02 ; '.'
000000000020ba29         db  0x00 ; '.'
000000000020ba2a         db  0x00 ; '.'
000000000020ba2b         db  0x00 ; '.'
000000000020ba2c         db  0x00 ; '.'
000000000020ba2d         db  0x00 ; '.'
000000000020ba2e         db  0x00 ; '.'
000000000020ba2f         db  0x00 ; '.'
000000000020ba30         db  0x00 ; '.'
000000000020ba31         db  0x00 ; '.'
000000000020ba32         db  0x00 ; '.'
000000000020ba33         db  0x00 ; '.'
000000000020ba34         db  0x00 ; '.'
000000000020ba35         db  0x00 ; '.'
000000000020ba36         db  0x00 ; '.'
000000000020ba37         db  0x00 ; '.'
000000000020ba38         db  0x78 ; 'x'
000000000020ba39         db  0x00 ; '.'
000000000020ba3a         db  0x00 ; '.'
000000000020ba3b         db  0x00 ; '.'
000000000020ba3c         db  0x00 ; '.'
000000000020ba3d         db  0x00 ; '.'
000000000020ba3e         db  0x00 ; '.'
000000000020ba3f         db  0x00 ; '.'
000000000020ba40         db  0xad ; '.'
000000000020ba41         db  0x8e ; '.'
000000000020ba42         db  0x00 ; '.'
000000000020ba43         db  0x00 ; '.'
000000000020ba44         db  0x00 ; '.'
000000000020ba45         db  0x00 ; '.'
000000000020ba46         db  0x00 ; '.'
000000000020ba47         db  0x00 ; '.'
000000000020ba48         db  0x01 ; '.'
000000000020ba49         db  0x00 ; '.'
000000000020ba4a         db  0x00 ; '.'
000000000020ba4b         db  0x00 ; '.'
000000000020ba4c         db  0x00 ; '.'
000000000020ba4d         db  0x00 ; '.'
000000000020ba4e         db  0x00 ; '.'
000000000020ba4f         db  0x00 ; '.'
000000000020ba50         db  0x00 ; '.'
000000000020ba51         db  0x00 ; '.'
000000000020ba52         db  0x00 ; '.'
000000000020ba53         db  0x00 ; '.'
000000000020ba54         db  0x00 ; '.'
000000000020ba55         db  0x00 ; '.'
000000000020ba56         db  0x00 ; '.'
000000000020ba57         db  0x00 ; '.'
000000000020ba58         db  0x81 ; '.'
000000000020ba59         db  0x00 ; '.'
000000000020ba5a         db  0x00 ; '.'
000000000020ba5b         db  0x00 ; '.'
000000000020ba5c         db  0x00 ; '.'
000000000020ba5d         db  0x00 ; '.'
000000000020ba5e         db  0x00 ; '.'
000000000020ba5f         db  0x00 ; '.'
000000000020ba60         db  0xb4 ; '.'
000000000020ba61         db  0x8e ; '.'
000000000020ba62         db  0x00 ; '.'
000000000020ba63         db  0x00 ; '.'
000000000020ba64         db  0x00 ; '.'
000000000020ba65         db  0x00 ; '.'
000000000020ba66         db  0x00 ; '.'
000000000020ba67         db  0x00 ; '.'
000000000020ba68         db  0x00 ; '.'
000000000020ba69         db  0x00 ; '.'
000000000020ba6a         db  0x00 ; '.'
000000000020ba6b         db  0x00 ; '.'
000000000020ba6c         db  0x00 ; '.'
000000000020ba6d         db  0x00 ; '.'
000000000020ba6e         db  0x00 ; '.'
000000000020ba6f         db  0x00 ; '.'
000000000020ba70         db  0x00 ; '.'
000000000020ba71         db  0x00 ; '.'
000000000020ba72         db  0x00 ; '.'
000000000020ba73         db  0x00 ; '.'
000000000020ba74         db  0x00 ; '.'
000000000020ba75         db  0x00 ; '.'
000000000020ba76         db  0x00 ; '.'
000000000020ba77         db  0x00 ; '.'
000000000020ba78         db  0x80 ; '.'
000000000020ba79         db  0x00 ; '.'
000000000020ba7a         db  0x00 ; '.'
000000000020ba7b         db  0x00 ; '.'
000000000020ba7c         db  0x00 ; '.'
000000000020ba7d         db  0x00 ; '.'
000000000020ba7e         db  0x00 ; '.'
000000000020ba7f         db  0x00 ; '.'
000000000020ba80         db  0x68 ; 'h'
000000000020ba81         db  0x8d ; '.'
000000000020ba82         db  0x00 ; '.'
000000000020ba83         db  0x00 ; '.'
000000000020ba84         db  0x00 ; '.'
000000000020ba85         db  0x00 ; '.'
000000000020ba86         db  0x00 ; '.'
000000000020ba87         db  0x00 ; '.'
000000000020ba88         db  0x01 ; '.'
000000000020ba89         db  0x00 ; '.'
000000000020ba8a         db  0x00 ; '.'
000000000020ba8b         db  0x00 ; '.'
000000000020ba8c         db  0x00 ; '.'
000000000020ba8d         db  0x00 ; '.'
000000000020ba8e         db  0x00 ; '.'
000000000020ba8f         db  0x00 ; '.'
000000000020ba90         db  0x00 ; '.'
000000000020ba91         db  0x00 ; '.'
000000000020ba92         db  0x00 ; '.'
000000000020ba93         db  0x00 ; '.'
000000000020ba94         db  0x00 ; '.'
000000000020ba95         db  0x00 ; '.'
000000000020ba96         db  0x00 ; '.'
000000000020ba97         db  0x00 ; '.'
000000000020ba98         db  0x74 ; 't'
000000000020ba99         db  0x00 ; '.'
000000000020ba9a         db  0x00 ; '.'
000000000020ba9b         db  0x00 ; '.'
000000000020ba9c         db  0x00 ; '.'
000000000020ba9d         db  0x00 ; '.'
000000000020ba9e         db  0x00 ; '.'
000000000020ba9f         db  0x00 ; '.'
000000000020baa0         db  0xbc ; '.'
000000000020baa1         db  0x8e ; '.'
000000000020baa2         db  0x00 ; '.'
000000000020baa3         db  0x00 ; '.'
000000000020baa4         db  0x00 ; '.'
000000000020baa5         db  0x00 ; '.'
000000000020baa6         db  0x00 ; '.'
000000000020baa7         db  0x00 ; '.'
000000000020baa8         db  0x01 ; '.'
000000000020baa9         db  0x00 ; '.'
000000000020baaa         db  0x00 ; '.'
000000000020baab         db  0x00 ; '.'
000000000020baac         db  0x00 ; '.'
000000000020baad         db  0x00 ; '.'
000000000020baae         db  0x00 ; '.'
000000000020baaf         db  0x00 ; '.'
000000000020bab0         db  0x00 ; '.'
000000000020bab1         db  0x00 ; '.'
000000000020bab2         db  0x00 ; '.'
000000000020bab3         db  0x00 ; '.'
000000000020bab4         db  0x00 ; '.'
000000000020bab5         db  0x00 ; '.'
000000000020bab6         db  0x00 ; '.'
000000000020bab7         db  0x00 ; '.'
000000000020bab8         db  0x82 ; '.'
000000000020bab9         db  0x00 ; '.'
000000000020baba         db  0x00 ; '.'
000000000020babb         db  0x00 ; '.'
000000000020babc         db  0x00 ; '.'
000000000020babd         db  0x00 ; '.'
000000000020babe         db  0x00 ; '.'
000000000020babf         db  0x00 ; '.'
000000000020bac0         db  0xc8 ; '.'
000000000020bac1         db  0x8e ; '.'
000000000020bac2         db  0x00 ; '.'
000000000020bac3         db  0x00 ; '.'
000000000020bac4         db  0x00 ; '.'
000000000020bac5         db  0x00 ; '.'
000000000020bac6         db  0x00 ; '.'
000000000020bac7         db  0x00 ; '.'
000000000020bac8         db  0x00 ; '.'
000000000020bac9         db  0x00 ; '.'
000000000020baca         db  0x00 ; '.'
000000000020bacb         db  0x00 ; '.'
000000000020bacc         db  0x00 ; '.'
000000000020bacd         db  0x00 ; '.'
000000000020bace         db  0x00 ; '.'
000000000020bacf         db  0x00 ; '.'
000000000020bad0         db  0x00 ; '.'
000000000020bad1         db  0x00 ; '.'
000000000020bad2         db  0x00 ; '.'
000000000020bad3         db  0x00 ; '.'
000000000020bad4         db  0x00 ; '.'
000000000020bad5         db  0x00 ; '.'
000000000020bad6         db  0x00 ; '.'
000000000020bad7         db  0x00 ; '.'
000000000020bad8         db  0x7e ; '~'
000000000020bad9         db  0xff ; '.'
000000000020bada         db  0xff ; '.'
000000000020badb         db  0xff ; '.'
000000000020badc         db  0x00 ; '.'
000000000020badd         db  0x00 ; '.'
000000000020bade         db  0x00 ; '.'
000000000020badf         db  0x00 ; '.'
000000000020bae0         db  0xcd ; '.'
000000000020bae1         db  0x8e ; '.'
000000000020bae2         db  0x00 ; '.'
000000000020bae3         db  0x00 ; '.'
000000000020bae4         db  0x00 ; '.'
000000000020bae5         db  0x00 ; '.'
000000000020bae6         db  0x00 ; '.'
000000000020bae7         db  0x00 ; '.'
000000000020bae8         db  0x00 ; '.'
000000000020bae9         db  0x00 ; '.'
000000000020baea         db  0x00 ; '.'
000000000020baeb         db  0x00 ; '.'
000000000020baec         db  0x00 ; '.'
000000000020baed         db  0x00 ; '.'
000000000020baee         db  0x00 ; '.'
000000000020baef         db  0x00 ; '.'
000000000020baf0         db  0x00 ; '.'
000000000020baf1         db  0x00 ; '.'
000000000020baf2         db  0x00 ; '.'
000000000020baf3         db  0x00 ; '.'
000000000020baf4         db  0x00 ; '.'
000000000020baf5         db  0x00 ; '.'
000000000020baf6         db  0x00 ; '.'
000000000020baf7         db  0x00 ; '.'
000000000020baf8         db  0x7d ; '}'
000000000020baf9         db  0xff ; '.'
000000000020bafa         db  0xff ; '.'
000000000020bafb         db  0xff ; '.'
000000000020bafc         db  0x00 ; '.'
000000000020bafd         db  0x00 ; '.'
000000000020bafe         db  0x00 ; '.'
000000000020baff         db  0x00 ; '.'
000000000020bb00         db  0x00 ; '.'
000000000020bb01         db  0x00 ; '.'
000000000020bb02         db  0x00 ; '.'
000000000020bb03         db  0x00 ; '.'
000000000020bb04         db  0x00 ; '.'
000000000020bb05         db  0x00 ; '.'
000000000020bb06         db  0x00 ; '.'
000000000020bb07         db  0x00 ; '.'
000000000020bb08         db  0x00 ; '.'
000000000020bb09         db  0x00 ; '.'
000000000020bb0a         db  0x00 ; '.'
000000000020bb0b         db  0x00 ; '.'
000000000020bb0c         db  0x00 ; '.'
000000000020bb0d         db  0x00 ; '.'
000000000020bb0e         db  0x00 ; '.'
000000000020bb0f         db  0x00 ; '.'
000000000020bb10         db  0x00 ; '.'
000000000020bb11         db  0x00 ; '.'
000000000020bb12         db  0x00 ; '.'
000000000020bb13         db  0x00 ; '.'
000000000020bb14         db  0x00 ; '.'
000000000020bb15         db  0x00 ; '.'
000000000020bb16         db  0x00 ; '.'
000000000020bb17         db  0x00 ; '.'
000000000020bb18         db  0x00 ; '.'
000000000020bb19         db  0x00 ; '.'
000000000020bb1a         db  0x00 ; '.'
000000000020bb1b         db  0x00 ; '.'
000000000020bb1c         db  0x00 ; '.'
000000000020bb1d         db  0x00 ; '.'
000000000020bb1e         db  0x00 ; '.'
000000000020bb1f         db  0x00 ; '.'
                     quoting_style_args:
000000000020bb20         db  0x29 ; ')'
000000000020bb21         db  0x9c ; '.'
000000000020bb22         db  0x00 ; '.'
000000000020bb23         db  0x00 ; '.'
000000000020bb24         db  0x00 ; '.'
000000000020bb25         db  0x00 ; '.'
000000000020bb26         db  0x00 ; '.'
000000000020bb27         db  0x00 ; '.'
000000000020bb28         db  0x31 ; '1'
000000000020bb29         db  0x9c ; '.'
000000000020bb2a         db  0x00 ; '.'
000000000020bb2b         db  0x00 ; '.'
000000000020bb2c         db  0x00 ; '.'
000000000020bb2d         db  0x00 ; '.'
000000000020bb2e         db  0x00 ; '.'
000000000020bb2f         db  0x00 ; '.'
000000000020bb30         db  0x37 ; '7'
000000000020bb31         db  0x9c ; '.'
000000000020bb32         db  0x00 ; '.'
000000000020bb33         db  0x00 ; '.'
000000000020bb34         db  0x00 ; '.'
000000000020bb35         db  0x00 ; '.'
000000000020bb36         db  0x00 ; '.'
000000000020bb37         db  0x00 ; '.'
000000000020bb38         db  0x44 ; 'D'
000000000020bb39         db  0x9c ; '.'
000000000020bb3a         db  0x00 ; '.'
000000000020bb3b         db  0x00 ; '.'
000000000020bb3c         db  0x00 ; '.'
000000000020bb3d         db  0x00 ; '.'
000000000020bb3e         db  0x00 ; '.'
000000000020bb3f         db  0x00 ; '.'
000000000020bb40         db  0x51 ; 'Q'
000000000020bb41         db  0x9c ; '.'
000000000020bb42         db  0x00 ; '.'
000000000020bb43         db  0x00 ; '.'
000000000020bb44         db  0x00 ; '.'
000000000020bb45         db  0x00 ; '.'
000000000020bb46         db  0x00 ; '.'
000000000020bb47         db  0x00 ; '.'
000000000020bb48         db  0xb1 ; '.'
000000000020bb49         db  0x8b ; '.'
000000000020bb4a         db  0x00 ; '.'
000000000020bb4b         db  0x00 ; '.'
000000000020bb4c         db  0x00 ; '.'
000000000020bb4d         db  0x00 ; '.'
000000000020bb4e         db  0x00 ; '.'
000000000020bb4f         db  0x00 ; '.'
000000000020bb50         db  0x65 ; 'e'
000000000020bb51         db  0x9c ; '.'
000000000020bb52         db  0x00 ; '.'
000000000020bb53         db  0x00 ; '.'
000000000020bb54         db  0x00 ; '.'
000000000020bb55         db  0x00 ; '.'
000000000020bb56         db  0x00 ; '.'
000000000020bb57         db  0x00 ; '.'
000000000020bb58         db  0x4a ; 'J'
000000000020bb59         db  0x9c ; '.'
000000000020bb5a         db  0x00 ; '.'
000000000020bb5b         db  0x00 ; '.'
000000000020bb5c         db  0x00 ; '.'
000000000020bb5d         db  0x00 ; '.'
000000000020bb5e         db  0x00 ; '.'
000000000020bb5f         db  0x00 ; '.'
000000000020bb60         db  0xbf ; '.'
000000000020bb61         db  0x8c ; '.'
000000000020bb62         db  0x00 ; '.'
000000000020bb63         db  0x00 ; '.'
000000000020bb64         db  0x00 ; '.'
000000000020bb65         db  0x00 ; '.'
000000000020bb66         db  0x00 ; '.'
000000000020bb67         db  0x00 ; '.'
000000000020bb68         db  0x6d ; 'm'
000000000020bb69         db  0x9c ; '.'
000000000020bb6a         db  0x00 ; '.'
000000000020bb6b         db  0x00 ; '.'
000000000020bb6c         db  0x00 ; '.'
000000000020bb6d         db  0x00 ; '.'
000000000020bb6e         db  0x00 ; '.'
000000000020bb6f         db  0x00 ; '.'
000000000020bb70         db  0x00 ; '.'
000000000020bb71         db  0x00 ; '.'
000000000020bb72         db  0x00 ; '.'
000000000020bb73         db  0x00 ; '.'
000000000020bb74         db  0x00 ; '.'
000000000020bb75         db  0x00 ; '.'
000000000020bb76         db  0x00 ; '.'
000000000020bb77         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x20bb78; 0x20bd68[ (496 bytes)
        ; File offset : [47992; 48488[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
000000000020bb78         db  0x01 ; '.'
000000000020bb79         db  0x00 ; '.'
000000000020bb7a         db  0x00 ; '.'
000000000020bb7b         db  0x00 ; '.'
000000000020bb7c         db  0x00 ; '.'
000000000020bb7d         db  0x00 ; '.'
000000000020bb7e         db  0x00 ; '.'
000000000020bb7f         db  0x00 ; '.'
000000000020bb80         db  0x01 ; '.'
000000000020bb81         db  0x00 ; '.'
000000000020bb82         db  0x00 ; '.'
000000000020bb83         db  0x00 ; '.'
000000000020bb84         db  0x00 ; '.'
000000000020bb85         db  0x00 ; '.'
000000000020bb86         db  0x00 ; '.'
000000000020bb87         db  0x00 ; '.'
000000000020bb88         db  0x0c ; '.'
000000000020bb89         db  0x00 ; '.'
000000000020bb8a         db  0x00 ; '.'
000000000020bb8b         db  0x00 ; '.'
000000000020bb8c         db  0x00 ; '.'
000000000020bb8d         db  0x00 ; '.'
000000000020bb8e         db  0x00 ; '.'
000000000020bb8f         db  0x00 ; '.'
000000000020bb90         db  0x08 ; '.'
000000000020bb91         db  0x1b ; '.'
000000000020bb92         db  0x00 ; '.'
000000000020bb93         db  0x00 ; '.'
000000000020bb94         db  0x00 ; '.'
000000000020bb95         db  0x00 ; '.'
000000000020bb96         db  0x00 ; '.'
000000000020bb97         db  0x00 ; '.'
000000000020bb98         db  0x0d ; '.'
000000000020bb99         db  0x00 ; '.'
000000000020bb9a         db  0x00 ; '.'
000000000020bb9b         db  0x00 ; '.'
000000000020bb9c         db  0x00 ; '.'
000000000020bb9d         db  0x00 ; '.'
000000000020bb9e         db  0x00 ; '.'
000000000020bb9f         db  0x00 ; '.'
000000000020bba0         db  0xa0 ; '.'
000000000020bba1         db  0x8a ; '.'
000000000020bba2         db  0x00 ; '.'
000000000020bba3         db  0x00 ; '.'
000000000020bba4         db  0x00 ; '.'
000000000020bba5         db  0x00 ; '.'
000000000020bba6         db  0x00 ; '.'
000000000020bba7         db  0x00 ; '.'
000000000020bba8         db  0x19 ; '.'
000000000020bba9         db  0x00 ; '.'
000000000020bbaa         db  0x00 ; '.'
000000000020bbab         db  0x00 ; '.'
000000000020bbac         db  0x00 ; '.'
000000000020bbad         db  0x00 ; '.'
000000000020bbae         db  0x00 ; '.'
000000000020bbaf         db  0x00 ; '.'
000000000020bbb0         db  0xf0 ; '.'
000000000020bbb1         db  0xb8 ; '.'
000000000020bbb2         db  0x20 ; ' '
000000000020bbb3         db  0x00 ; '.'
000000000020bbb4         db  0x00 ; '.'
000000000020bbb5         db  0x00 ; '.'
000000000020bbb6         db  0x00 ; '.'
000000000020bbb7         db  0x00 ; '.'
000000000020bbb8         db  0x1b ; '.'
000000000020bbb9         db  0x00 ; '.'
000000000020bbba         db  0x00 ; '.'
000000000020bbbb         db  0x00 ; '.'
000000000020bbbc         db  0x00 ; '.'
000000000020bbbd         db  0x00 ; '.'
000000000020bbbe         db  0x00 ; '.'
000000000020bbbf         db  0x00 ; '.'
000000000020bbc0         db  0x08 ; '.'
000000000020bbc1         db  0x00 ; '.'
000000000020bbc2         db  0x00 ; '.'
000000000020bbc3         db  0x00 ; '.'
000000000020bbc4         db  0x00 ; '.'
000000000020bbc5         db  0x00 ; '.'
000000000020bbc6         db  0x00 ; '.'
000000000020bbc7         db  0x00 ; '.'
000000000020bbc8         db  0x1a ; '.'
000000000020bbc9         db  0x00 ; '.'
000000000020bbca         db  0x00 ; '.'
000000000020bbcb         db  0x00 ; '.'
000000000020bbcc         db  0x00 ; '.'
000000000020bbcd         db  0x00 ; '.'
000000000020bbce         db  0x00 ; '.'
000000000020bbcf         db  0x00 ; '.'
000000000020bbd0         db  0xf8 ; '.'
000000000020bbd1         db  0xb8 ; '.'
000000000020bbd2         db  0x20 ; ' '
000000000020bbd3         db  0x00 ; '.'
000000000020bbd4         db  0x00 ; '.'
000000000020bbd5         db  0x00 ; '.'
000000000020bbd6         db  0x00 ; '.'
000000000020bbd7         db  0x00 ; '.'
000000000020bbd8         db  0x1c ; '.'
000000000020bbd9         db  0x00 ; '.'
000000000020bbda         db  0x00 ; '.'
000000000020bbdb         db  0x00 ; '.'
000000000020bbdc         db  0x00 ; '.'
000000000020bbdd         db  0x00 ; '.'
000000000020bbde         db  0x00 ; '.'
000000000020bbdf         db  0x00 ; '.'
000000000020bbe0         db  0x08 ; '.'
000000000020bbe1         db  0x00 ; '.'
000000000020bbe2         db  0x00 ; '.'
000000000020bbe3         db  0x00 ; '.'
000000000020bbe4         db  0x00 ; '.'
000000000020bbe5         db  0x00 ; '.'
000000000020bbe6         db  0x00 ; '.'
000000000020bbe7         db  0x00 ; '.'
000000000020bbe8         db  0xf5 ; '.'
000000000020bbe9         db  0xfe ; '.'
000000000020bbea         db  0xff ; '.'
000000000020bbeb         db  0x6f ; 'o'
000000000020bbec         db  0x00 ; '.'
000000000020bbed         db  0x00 ; '.'
000000000020bbee         db  0x00 ; '.'
000000000020bbef         db  0x00 ; '.'
000000000020bbf0         db  0x98 ; '.'
000000000020bbf1         db  0x02 ; '.'
000000000020bbf2         db  0x00 ; '.'
000000000020bbf3         db  0x00 ; '.'
000000000020bbf4         db  0x00 ; '.'
000000000020bbf5         db  0x00 ; '.'
000000000020bbf6         db  0x00 ; '.'
000000000020bbf7         db  0x00 ; '.'
000000000020bbf8         db  0x05 ; '.'
000000000020bbf9         db  0x00 ; '.'
000000000020bbfa         db  0x00 ; '.'
000000000020bbfb         db  0x00 ; '.'
000000000020bbfc         db  0x00 ; '.'
000000000020bbfd         db  0x00 ; '.'
000000000020bbfe         db  0x00 ; '.'
000000000020bbff         db  0x00 ; '.'
000000000020bc00         db  0x20 ; ' '
000000000020bc01         db  0x0b ; '.'
000000000020bc02         db  0x00 ; '.'
000000000020bc03         db  0x00 ; '.'
000000000020bc04         db  0x00 ; '.'
000000000020bc05         db  0x00 ; '.'
000000000020bc06         db  0x00 ; '.'
000000000020bc07         db  0x00 ; '.'
000000000020bc08         db  0x06 ; '.'
000000000020bc09         db  0x00 ; '.'
000000000020bc0a         db  0x00 ; '.'
000000000020bc0b         db  0x00 ; '.'
000000000020bc0c         db  0x00 ; '.'
000000000020bc0d         db  0x00 ; '.'
000000000020bc0e         db  0x00 ; '.'
000000000020bc0f         db  0x00 ; '.'
000000000020bc10         db  0xe0 ; '.'
000000000020bc11         db  0x02 ; '.'
000000000020bc12         db  0x00 ; '.'
000000000020bc13         db  0x00 ; '.'
000000000020bc14         db  0x00 ; '.'
000000000020bc15         db  0x00 ; '.'
000000000020bc16         db  0x00 ; '.'
000000000020bc17         db  0x00 ; '.'
000000000020bc18         db  0x0a ; '.'
000000000020bc19         db  0x00 ; '.'
000000000020bc1a         db  0x00 ; '.'
000000000020bc1b         db  0x00 ; '.'
000000000020bc1c         db  0x00 ; '.'
000000000020bc1d         db  0x00 ; '.'
000000000020bc1e         db  0x00 ; '.'
000000000020bc1f         db  0x00 ; '.'
000000000020bc20         db  0xc2 ; '.'
000000000020bc21         db  0x03 ; '.'
000000000020bc22         db  0x00 ; '.'
000000000020bc23         db  0x00 ; '.'
000000000020bc24         db  0x00 ; '.'
000000000020bc25         db  0x00 ; '.'
000000000020bc26         db  0x00 ; '.'
000000000020bc27         db  0x00 ; '.'
000000000020bc28         db  0x0b ; '.'
000000000020bc29         db  0x00 ; '.'
000000000020bc2a         db  0x00 ; '.'
000000000020bc2b         db  0x00 ; '.'
000000000020bc2c         db  0x00 ; '.'
000000000020bc2d         db  0x00 ; '.'
000000000020bc2e         db  0x00 ; '.'
000000000020bc2f         db  0x00 ; '.'
000000000020bc30         db  0x18 ; '.'
000000000020bc31         db  0x00 ; '.'
000000000020bc32         db  0x00 ; '.'
000000000020bc33         db  0x00 ; '.'
000000000020bc34         db  0x00 ; '.'
000000000020bc35         db  0x00 ; '.'
000000000020bc36         db  0x00 ; '.'
000000000020bc37         db  0x00 ; '.'
000000000020bc38         db  0x15 ; '.'
000000000020bc39         db  0x00 ; '.'
000000000020bc3a         db  0x00 ; '.'
000000000020bc3b         db  0x00 ; '.'
000000000020bc3c         db  0x00 ; '.'
000000000020bc3d         db  0x00 ; '.'
000000000020bc3e         db  0x00 ; '.'
000000000020bc3f         db  0x00 ; '.'
000000000020bc40         db  0x00 ; '.'
000000000020bc41         db  0x00 ; '.'
000000000020bc42         db  0x00 ; '.'
000000000020bc43         db  0x00 ; '.'
000000000020bc44         db  0x00 ; '.'
000000000020bc45         db  0x00 ; '.'
000000000020bc46         db  0x00 ; '.'
000000000020bc47         db  0x00 ; '.'
000000000020bc48         db  0x03 ; '.'
000000000020bc49         db  0x00 ; '.'
000000000020bc4a         db  0x00 ; '.'
000000000020bc4b         db  0x00 ; '.'
000000000020bc4c         db  0x00 ; '.'
000000000020bc4d         db  0x00 ; '.'
000000000020bc4e         db  0x00 ; '.'
000000000020bc4f         db  0x00 ; '.'
000000000020bc50         db  0x68 ; 'h'
000000000020bc51         db  0xbd ; '.'
000000000020bc52         db  0x20 ; ' '
000000000020bc53         db  0x00 ; '.'
000000000020bc54         db  0x00 ; '.'
000000000020bc55         db  0x00 ; '.'
000000000020bc56         db  0x00 ; '.'
000000000020bc57         db  0x00 ; '.'
000000000020bc58         db  0x02 ; '.'
000000000020bc59         db  0x00 ; '.'
000000000020bc5a         db  0x00 ; '.'
000000000020bc5b         db  0x00 ; '.'
000000000020bc5c         db  0x00 ; '.'
000000000020bc5d         db  0x00 ; '.'
000000000020bc5e         db  0x00 ; '.'
000000000020bc5f         db  0x00 ; '.'
000000000020bc60         db  0xf0 ; '.'
000000000020bc61         db  0x06 ; '.'
000000000020bc62         db  0x00 ; '.'
000000000020bc63         db  0x00 ; '.'
000000000020bc64         db  0x00 ; '.'
000000000020bc65         db  0x00 ; '.'
000000000020bc66         db  0x00 ; '.'
000000000020bc67         db  0x00 ; '.'
000000000020bc68         db  0x14 ; '.'
000000000020bc69         db  0x00 ; '.'
000000000020bc6a         db  0x00 ; '.'
000000000020bc6b         db  0x00 ; '.'
000000000020bc6c         db  0x00 ; '.'
000000000020bc6d         db  0x00 ; '.'
000000000020bc6e         db  0x00 ; '.'
000000000020bc6f         db  0x00 ; '.'
000000000020bc70         db  0x07 ; '.'
000000000020bc71         db  0x00 ; '.'
000000000020bc72         db  0x00 ; '.'
000000000020bc73         db  0x00 ; '.'
000000000020bc74         db  0x00 ; '.'
000000000020bc75         db  0x00 ; '.'
000000000020bc76         db  0x00 ; '.'
000000000020bc77         db  0x00 ; '.'
000000000020bc78         db  0x17 ; '.'
000000000020bc79         db  0x00 ; '.'
000000000020bc7a         db  0x00 ; '.'
000000000020bc7b         db  0x00 ; '.'
000000000020bc7c         db  0x00 ; '.'
000000000020bc7d         db  0x00 ; '.'
000000000020bc7e         db  0x00 ; '.'
000000000020bc7f         db  0x00 ; '.'
000000000020bc80         db  0x18 ; '.'
000000000020bc81         db  0x14 ; '.'
000000000020bc82         db  0x00 ; '.'
000000000020bc83         db  0x00 ; '.'
000000000020bc84         db  0x00 ; '.'
000000000020bc85         db  0x00 ; '.'
000000000020bc86         db  0x00 ; '.'
000000000020bc87         db  0x00 ; '.'
000000000020bc88         db  0x07 ; '.'
000000000020bc89         db  0x00 ; '.'
000000000020bc8a         db  0x00 ; '.'
000000000020bc8b         db  0x00 ; '.'
000000000020bc8c         db  0x00 ; '.'
000000000020bc8d         db  0x00 ; '.'
000000000020bc8e         db  0x00 ; '.'
000000000020bc8f         db  0x00 ; '.'
000000000020bc90         db  0xf8 ; '.'
000000000020bc91         db  0x0f ; '.'
000000000020bc92         db  0x00 ; '.'
000000000020bc93         db  0x00 ; '.'
000000000020bc94         db  0x00 ; '.'
000000000020bc95         db  0x00 ; '.'
000000000020bc96         db  0x00 ; '.'
000000000020bc97         db  0x00 ; '.'
000000000020bc98         db  0x08 ; '.'
000000000020bc99         db  0x00 ; '.'
000000000020bc9a         db  0x00 ; '.'
000000000020bc9b         db  0x00 ; '.'
000000000020bc9c         db  0x00 ; '.'
000000000020bc9d         db  0x00 ; '.'
000000000020bc9e         db  0x00 ; '.'
000000000020bc9f         db  0x00 ; '.'
000000000020bca0         db  0x20 ; ' '
000000000020bca1         db  0x04 ; '.'
000000000020bca2         db  0x00 ; '.'
000000000020bca3         db  0x00 ; '.'
000000000020bca4         db  0x00 ; '.'
000000000020bca5         db  0x00 ; '.'
000000000020bca6         db  0x00 ; '.'
000000000020bca7         db  0x00 ; '.'
000000000020bca8         db  0x09 ; '.'
000000000020bca9         db  0x00 ; '.'
000000000020bcaa         db  0x00 ; '.'
000000000020bcab         db  0x00 ; '.'
000000000020bcac         db  0x00 ; '.'
000000000020bcad         db  0x00 ; '.'
000000000020bcae         db  0x00 ; '.'
000000000020bcaf         db  0x00 ; '.'
000000000020bcb0         db  0x18 ; '.'
000000000020bcb1         db  0x00 ; '.'
000000000020bcb2         db  0x00 ; '.'
000000000020bcb3         db  0x00 ; '.'
000000000020bcb4         db  0x00 ; '.'
000000000020bcb5         db  0x00 ; '.'
000000000020bcb6         db  0x00 ; '.'
000000000020bcb7         db  0x00 ; '.'
000000000020bcb8         db  0x1e ; '.'
000000000020bcb9         db  0x00 ; '.'
000000000020bcba         db  0x00 ; '.'
000000000020bcbb         db  0x00 ; '.'
000000000020bcbc         db  0x00 ; '.'
000000000020bcbd         db  0x00 ; '.'
000000000020bcbe         db  0x00 ; '.'
000000000020bcbf         db  0x00 ; '.'
000000000020bcc0         db  0x08 ; '.'
000000000020bcc1         db  0x00 ; '.'
000000000020bcc2         db  0x00 ; '.'
000000000020bcc3         db  0x00 ; '.'
000000000020bcc4         db  0x00 ; '.'
000000000020bcc5         db  0x00 ; '.'
000000000020bcc6         db  0x00 ; '.'
000000000020bcc7         db  0x00 ; '.'
000000000020bcc8         db  0xfb ; '.'
000000000020bcc9         db  0xff ; '.'
000000000020bcca         db  0xff ; '.'
000000000020bccb         db  0x6f ; 'o'
000000000020bccc         db  0x00 ; '.'
000000000020bccd         db  0x00 ; '.'
000000000020bcce         db  0x00 ; '.'
000000000020bccf         db  0x00 ; '.'
000000000020bcd0         db  0x01 ; '.'
000000000020bcd1         db  0x00 ; '.'
000000000020bcd2         db  0x00 ; '.'
000000000020bcd3         db  0x08 ; '.'
000000000020bcd4         db  0x00 ; '.'
000000000020bcd5         db  0x00 ; '.'
000000000020bcd6         db  0x00 ; '.'
000000000020bcd7         db  0x00 ; '.'
000000000020bcd8         db  0xfe ; '.'
000000000020bcd9         db  0xff ; '.'
000000000020bcda         db  0xff ; '.'
000000000020bcdb         db  0x6f ; 'o'
000000000020bcdc         db  0x00 ; '.'
000000000020bcdd         db  0x00 ; '.'
000000000020bcde         db  0x00 ; '.'
000000000020bcdf         db  0x00 ; '.'
000000000020bce0         db  0x98 ; '.'
000000000020bce1         db  0x0f ; '.'
000000000020bce2         db  0x00 ; '.'
000000000020bce3         db  0x00 ; '.'
000000000020bce4         db  0x00 ; '.'
000000000020bce5         db  0x00 ; '.'
000000000020bce6         db  0x00 ; '.'
000000000020bce7         db  0x00 ; '.'
000000000020bce8         db  0xff ; '.'
000000000020bce9         db  0xff ; '.'
000000000020bcea         db  0xff ; '.'
000000000020bceb         db  0x6f ; 'o'
000000000020bcec         db  0x00 ; '.'
000000000020bced         db  0x00 ; '.'
000000000020bcee         db  0x00 ; '.'
000000000020bcef         db  0x00 ; '.'
000000000020bcf0         db  0x01 ; '.'
000000000020bcf1         db  0x00 ; '.'
000000000020bcf2         db  0x00 ; '.'
000000000020bcf3         db  0x00 ; '.'
000000000020bcf4         db  0x00 ; '.'
000000000020bcf5         db  0x00 ; '.'
000000000020bcf6         db  0x00 ; '.'
000000000020bcf7         db  0x00 ; '.'
000000000020bcf8         db  0xf0 ; '.'
000000000020bcf9         db  0xff ; '.'
000000000020bcfa         db  0xff ; '.'
000000000020bcfb         db  0x6f ; 'o'
000000000020bcfc         db  0x00 ; '.'
000000000020bcfd         db  0x00 ; '.'
000000000020bcfe         db  0x00 ; '.'
000000000020bcff         db  0x00 ; '.'
000000000020bd00         db  0xe2 ; '.'
000000000020bd01         db  0x0e ; '.'
000000000020bd02         db  0x00 ; '.'
000000000020bd03         db  0x00 ; '.'
000000000020bd04         db  0x00 ; '.'
000000000020bd05         db  0x00 ; '.'
000000000020bd06         db  0x00 ; '.'
000000000020bd07         db  0x00 ; '.'
000000000020bd08         db  0xf9 ; '.'
000000000020bd09         db  0xff ; '.'
000000000020bd0a         db  0xff ; '.'
000000000020bd0b         db  0x6f ; 'o'
000000000020bd0c         db  0x00 ; '.'
000000000020bd0d         db  0x00 ; '.'
000000000020bd0e         db  0x00 ; '.'
000000000020bd0f         db  0x00 ; '.'
000000000020bd10         db  0x21 ; '!'
000000000020bd11         db  0x00 ; '.'
000000000020bd12         db  0x00 ; '.'
000000000020bd13         db  0x00 ; '.'
000000000020bd14         db  0x00 ; '.'
000000000020bd15         db  0x00 ; '.'
000000000020bd16         db  0x00 ; '.'
000000000020bd17         db  0x00 ; '.'
000000000020bd18         db  0x00 ; '.'
000000000020bd19         db  0x00 ; '.'
000000000020bd1a         db  0x00 ; '.'
000000000020bd1b         db  0x00 ; '.'
000000000020bd1c         db  0x00 ; '.'
000000000020bd1d         db  0x00 ; '.'
000000000020bd1e         db  0x00 ; '.'
000000000020bd1f         db  0x00 ; '.'
000000000020bd20         db  0x00 ; '.'
000000000020bd21         db  0x00 ; '.'
000000000020bd22         db  0x00 ; '.'
000000000020bd23         db  0x00 ; '.'
000000000020bd24         db  0x00 ; '.'
000000000020bd25         db  0x00 ; '.'
000000000020bd26         db  0x00 ; '.'
000000000020bd27         db  0x00 ; '.'
000000000020bd28         db  0x00 ; '.'
000000000020bd29         db  0x00 ; '.'
000000000020bd2a         db  0x00 ; '.'
000000000020bd2b         db  0x00 ; '.'
000000000020bd2c         db  0x00 ; '.'
000000000020bd2d         db  0x00 ; '.'
000000000020bd2e         db  0x00 ; '.'
000000000020bd2f         db  0x00 ; '.'
000000000020bd30         db  0x00 ; '.'
000000000020bd31         db  0x00 ; '.'
000000000020bd32         db  0x00 ; '.'
000000000020bd33         db  0x00 ; '.'
000000000020bd34         db  0x00 ; '.'
000000000020bd35         db  0x00 ; '.'
000000000020bd36         db  0x00 ; '.'
000000000020bd37         db  0x00 ; '.'
000000000020bd38         db  0x00 ; '.'
000000000020bd39         db  0x00 ; '.'
000000000020bd3a         db  0x00 ; '.'
000000000020bd3b         db  0x00 ; '.'
000000000020bd3c         db  0x00 ; '.'
000000000020bd3d         db  0x00 ; '.'
000000000020bd3e         db  0x00 ; '.'
000000000020bd3f         db  0x00 ; '.'
000000000020bd40         db  0x00 ; '.'
000000000020bd41         db  0x00 ; '.'
000000000020bd42         db  0x00 ; '.'
000000000020bd43         db  0x00 ; '.'
000000000020bd44         db  0x00 ; '.'
000000000020bd45         db  0x00 ; '.'
000000000020bd46         db  0x00 ; '.'
000000000020bd47         db  0x00 ; '.'
000000000020bd48         db  0x00 ; '.'
000000000020bd49         db  0x00 ; '.'
000000000020bd4a         db  0x00 ; '.'
000000000020bd4b         db  0x00 ; '.'
000000000020bd4c         db  0x00 ; '.'
000000000020bd4d         db  0x00 ; '.'
000000000020bd4e         db  0x00 ; '.'
000000000020bd4f         db  0x00 ; '.'
000000000020bd50         db  0x00 ; '.'
000000000020bd51         db  0x00 ; '.'
000000000020bd52         db  0x00 ; '.'
000000000020bd53         db  0x00 ; '.'
000000000020bd54         db  0x00 ; '.'
000000000020bd55         db  0x00 ; '.'
000000000020bd56         db  0x00 ; '.'
000000000020bd57         db  0x00 ; '.'
000000000020bd58         db  0x00 ; '.'
000000000020bd59         db  0x00 ; '.'
000000000020bd5a         db  0x00 ; '.'
000000000020bd5b         db  0x00 ; '.'
000000000020bd5c         db  0x00 ; '.'
000000000020bd5d         db  0x00 ; '.'
000000000020bd5e         db  0x00 ; '.'
000000000020bd5f         db  0x00 ; '.'
000000000020bd60         db  0x00 ; '.'
000000000020bd61         db  0x00 ; '.'
000000000020bd62         db  0x00 ; '.'
000000000020bd63         db  0x00 ; '.'
000000000020bd64         db  0x00 ; '.'
000000000020bd65         db  0x00 ; '.'
000000000020bd66         db  0x00 ; '.'
000000000020bd67         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x20bd68; 0x20bff8[ (656 bytes)
        ; File offset : [48488; 49144[ (656 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
000000000020bd68         db  0x78 ; 'x'
000000000020bd69         db  0xbb ; '.'
000000000020bd6a         db  0x20 ; ' '
000000000020bd6b         db  0x00 ; '.'
000000000020bd6c         db  0x00 ; '.'
000000000020bd6d         db  0x00 ; '.'
000000000020bd6e         db  0x00 ; '.'
000000000020bd6f         db  0x00 ; '.'
                     qword_20bd70:
000000000020bd70         dq         0x0000000000000000                          ; DATA XREF=0x1b20
000000000020bd78         db  0x00 ; '.'                                         ; DATA XREF=0x1b26
000000000020bd79         db  0x00 ; '.'
000000000020bd7a         db  0x00 ; '.'
000000000020bd7b         db  0x00 ; '.'
000000000020bd7c         db  0x00 ; '.'
000000000020bd7d         db  0x00 ; '.'
000000000020bd7e         db  0x00 ; '.'
000000000020bd7f         db  0x00 ; '.'
                     getenv@GOT:        // getenv
000000000020bd80         dq         0x000000000020c670                          ; DATA XREF=j_getenv
                     sigprocmask@GOT:        // sigprocmask
000000000020bd88         dq         0x000000000020c678                          ; DATA XREF=j_sigprocmask
                     free@GOT:        // free
000000000020bd90         dq         0x000000000020c680                          ; DATA XREF=j_free
                     abort@GOT:        // abort
000000000020bd98         dq         0x000000000020c688                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
000000000020bda0         dq         0x000000000020c690                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
000000000020bda8         dq         0x000000000020c698                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
000000000020bdb0         dq         0x000000000020c6a8                          ; DATA XREF=j__exit
                     strcpy@GOT:        // strcpy
000000000020bdb8         dq         0x000000000020c6b0                          ; DATA XREF=j_strcpy
                     __fpending@GOT:        // __fpending
000000000020bdc0         dq         0x000000000020c6b8                          ; DATA XREF=j___fpending
                     sigaction@GOT:        // sigaction
000000000020bdc8         dq         0x000000000020c6c0                          ; DATA XREF=j_sigaction
                     fcntl@GOT:        // fcntl
000000000020bdd0         dq         0x000000000020c6c8                          ; DATA XREF=j_fcntl
                     setenv@GOT:        // setenv
000000000020bdd8         dq         0x000000000020c6d0                          ; DATA XREF=j_setenv
                     clearerr_unlocked@GOT:        // clearerr_unlocked
000000000020bde0         dq         0x000000000020c6d8                          ; DATA XREF=j_clearerr_unlocked
                     write@GOT:        // write
000000000020bde8         dq         0x000000000020c6e0                          ; DATA XREF=j_write
                     textdomain@GOT:        // textdomain
000000000020bdf0         dq         0x000000000020c6e8                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
000000000020bdf8         dq         0x000000000020c6f0                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
000000000020be00         dq         0x000000000020c6f8                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
000000000020be08         dq         0x000000000020c700                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
000000000020be10         dq         0x000000000020c708                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
000000000020be18         dq         0x000000000020c710                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
000000000020be20         dq         0x000000000020c718                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
000000000020be28         dq         0x000000000020c720                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
000000000020be30         dq         0x000000000020c728                          ; DATA XREF=j_mbrtowc
                     dup2@GOT:        // dup2
000000000020be38         dq         0x000000000020c730                          ; DATA XREF=j_dup2
                     strchr@GOT:        // strchr
000000000020be40         dq         0x000000000020c738                          ; DATA XREF=j_strchr
                     strrchr@GOT:        // strrchr
000000000020be48         dq         0x000000000020c740                          ; DATA XREF=j_strrchr
                     ftruncate@GOT:        // ftruncate
000000000020be50         dq         0x000000000020c748                          ; DATA XREF=j_ftruncate
                     lseek@GOT:        // lseek
000000000020be58         dq         0x000000000020c750                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
000000000020be60         dq         0x000000000020c758                          ; DATA XREF=j___assert_fail
                     __strtoul_internal@GOT:        // __strtoul_internal
000000000020be68         dq         0x000000000020c760                          ; DATA XREF=j___strtoul_internal
                     memset@GOT:        // memset
000000000020be70         dq         0x000000000020c768                          ; DATA XREF=j_memset
                     close@GOT:        // close
000000000020be78         dq         0x000000000020c770                          ; DATA XREF=j_close
                     pipe@GOT:        // pipe
000000000020be80         dq         0x000000000020c778                          ; DATA XREF=j_pipe
                     strspn@GOT:        // strspn
000000000020be88         dq         0x000000000020c780                          ; DATA XREF=j_strspn
                     memchr@GOT:        // memchr
000000000020be90         dq         0x000000000020c788                          ; DATA XREF=j_memchr
                     read@GOT:        // read
000000000020be98         dq         0x000000000020c790                          ; DATA XREF=j_read
                     memcmp@GOT:        // memcmp
000000000020bea0         dq         0x000000000020c7a0                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
000000000020bea8         dq         0x000000000020c7a8                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
000000000020beb0         dq         0x000000000020c7b0                          ; DATA XREF=j_calloc
                     strcmp@GOT:        // strcmp
000000000020beb8         dq         0x000000000020c7b8                          ; DATA XREF=j_strcmp
                     sigemptyset@GOT:        // sigemptyset
000000000020bec0         dq         0x000000000020c7c0                          ; DATA XREF=j_sigemptyset
                     strtol@GOT:        // strtol
000000000020bec8         dq         0x000000000020c7d0                          ; DATA XREF=j_strtol
                     memcpy@GOT:        // memcpy
000000000020bed0         dq         0x000000000020c7d8                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
000000000020bed8         dq         0x000000000020c7e0                          ; DATA XREF=j_fileno
                     malloc@GOT:        // malloc
000000000020bee0         dq         0x000000000020c7e8                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
000000000020bee8         dq         0x000000000020c7f0                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
000000000020bef0         dq         0x000000000020c7f8                          ; DATA XREF=j_nl_langinfo
                     __fxstat@GOT:        // __fxstat
000000000020bef8         dq         0x000000000020c800                          ; DATA XREF=j___fxstat
                     __freading@GOT:        // __freading
000000000020bf00         dq         0x000000000020c808                          ; DATA XREF=j___freading
                     fwrite_unlocked@GOT:        // fwrite_unlocked
000000000020bf08         dq         0x000000000020c810                          ; DATA XREF=j_fwrite_unlocked
                     realloc@GOT:        // realloc
000000000020bf10         dq         0x000000000020c818                          ; DATA XREF=j_realloc
                     fdopen@GOT:        // fdopen
000000000020bf18         dq         0x000000000020c820                          ; DATA XREF=j_fdopen
                     setlocale@GOT:        // setlocale
000000000020bf20         dq         0x000000000020c828                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
000000000020bf28         dq         0x000000000020c830                          ; DATA XREF=j___printf_chk
                     memmove@GOT:        // memmove
000000000020bf30         dq         0x000000000020c838                          ; DATA XREF=j_memmove
                     error@GOT:        // error
000000000020bf38         dq         0x000000000020c840                          ; DATA XREF=j_error
                     memrchr@GOT:        // memrchr
000000000020bf40         dq         0x000000000020c848                          ; DATA XREF=j_memrchr
                     waitpid@GOT:        // waitpid
000000000020bf48         dq         0x000000000020c850                          ; DATA XREF=j_waitpid
                     open@GOT:        // open
000000000020bf50         dq         0x000000000020c858                          ; DATA XREF=j_open
                     fseeko@GOT:        // fseeko
000000000020bf58         dq         0x000000000020c860                          ; DATA XREF=j_fseeko
                     __cxa_atexit@GOT:        // __cxa_atexit
000000000020bf60         dq         0x000000000020c868                          ; DATA XREF=j___cxa_atexit
                     getpagesize@GOT:        // getpagesize
000000000020bf68         dq         0x000000000020c870                          ; DATA XREF=j_getpagesize
                     __libc_current_sigrtmin@GOT:        // __libc_current_sigrtmin
000000000020bf70         dq         0x000000000020c878                          ; DATA XREF=j___libc_current_sigrtmin
                     exit@GOT:        // exit
000000000020bf78         dq         0x000000000020c880                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
000000000020bf80         dq         0x000000000020c888                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
000000000020bf88         dq         0x000000000020c890                          ; DATA XREF=j___fprintf_chk
                     __libc_current_sigrtmax@GOT:        // __libc_current_sigrtmax
000000000020bf90         dq         0x000000000020c898                          ; DATA XREF=j___libc_current_sigrtmax
                     mbsinit@GOT:        // mbsinit
000000000020bf98         dq         0x000000000020c8a8                          ; DATA XREF=j_mbsinit
                     execl@GOT:        // execl
000000000020bfa0         dq         0x000000000020c8b0                          ; DATA XREF=j_execl
                     iswprint@GOT:        // iswprint
000000000020bfa8         dq         0x000000000020c8b8                          ; DATA XREF=j_iswprint
                     sigaddset@GOT:        // sigaddset
000000000020bfb0         dq         0x000000000020c8c8                          ; DATA XREF=j_sigaddset
                     fork@GOT:        // fork
000000000020bfb8         dq         0x000000000020c8d0                          ; DATA XREF=j_fork
                     __ctype_b_loc@GOT:        // __ctype_b_loc
000000000020bfc0         dq         0x000000000020c8d8                          ; DATA XREF=j___ctype_b_loc
                     __sprintf_chk@GOT:        // __sprintf_chk
000000000020bfc8         dq         0x000000000020c8e0                          ; DATA XREF=j___sprintf_chk
                     qword_20bfd0:
000000000020bfd0         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
000000000020bfd8         db  0x00 ; '.'                                         ; DATA XREF=_start+36
000000000020bfd9         db  0x00 ; '.'
000000000020bfda         db  0x00 ; '.'
000000000020bfdb         db  0x00 ; '.'
000000000020bfdc         db  0x00 ; '.'
000000000020bfdd         db  0x00 ; '.'
000000000020bfde         db  0x00 ; '.'
000000000020bfdf         db  0x00 ; '.'
                     qword_20bfe0:
000000000020bfe0         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_20bfe8:
000000000020bfe8         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_20bff0:
000000000020bff0         dq         0x0000000000000000                          ; DATA XREF=j_qword_20bff0, __do_global_dtors_aux+9
000000000020bff8         db  0x00 ; '.'
000000000020bff9         db  0x00 ; '.'
000000000020bffa         db  0x00 ; '.'
000000000020bffb         db  0x00 ; '.'
000000000020bffc         db  0x00 ; '.'
000000000020bffd         db  0x00 ; '.'
000000000020bffe         db  0x00 ; '.'
000000000020bfff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x20c000; 0x20c244[ (580 bytes)
        ; File offset : [49152; 49732[ (580 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

000000000020c000         db  0x00 ; '.'
000000000020c001         db  0x00 ; '.'
000000000020c002         db  0x00 ; '.'
000000000020c003         db  0x00 ; '.'
000000000020c004         db  0x00 ; '.'
000000000020c005         db  0x00 ; '.'
000000000020c006         db  0x00 ; '.'
000000000020c007         db  0x00 ; '.'
                     __dso_handle:
000000000020c008         dq         0x000000000020c008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     eolchar:
000000000020c010         dd         0xffffffff                                  ; DATA XREF=main+740, main+758, main+1714, main+1723, main+2775, main+2871, main+3091, main+3633, main+4607
                     output_desc:
000000000020c014         dd         0xffffffff                                  ; DATA XREF=main+3924, cwrite+59, cwrite+91, cwrite+208
                     suffix_auto:
000000000020c018         db         0x01                                        ; DATA XREF=main+1758, main+2454, main+2490, next_file_name+49
000000000020c019         align      32
                     suffix_alphabet:
000000000020c020         dq         0x0000000000008ed5                          ; "abcdefghijklmnopqrstuvwxyz", DATA XREF=main+1506, main+1553, main+1660, main+2389, next_file_name+57, next_file_name+291, next_file_name+596
                     Version:
000000000020c028         dq         0x0000000000009bc5                          ; "8.31", DATA XREF=main+547
                     exit_failure:
000000000020c030         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23
000000000020c034         db  0x00 ; '.'
000000000020c035         db  0x00 ; '.'
000000000020c036         db  0x00 ; '.'
000000000020c037         db  0x00 ; '.'
000000000020c038         db  0x00 ; '.'
000000000020c039         db  0x00 ; '.'
000000000020c03a         db  0x00 ; '.'
000000000020c03b         db  0x00 ; '.'
000000000020c03c         db  0x00 ; '.'
000000000020c03d         db  0x00 ; '.'
000000000020c03e         db  0x00 ; '.'
000000000020c03f         db  0x00 ; '.'
                     quote_quoting_options:
000000000020c040         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
000000000020c041         db  0x00 ; '.'
000000000020c042         db  0x00 ; '.'
000000000020c043         db  0x00 ; '.'
000000000020c044         db  0x00 ; '.'
000000000020c045         db  0x00 ; '.'
000000000020c046         db  0x00 ; '.'
000000000020c047         db  0x00 ; '.'
000000000020c048         db  0x00 ; '.'
000000000020c049         db  0x00 ; '.'
000000000020c04a         db  0x00 ; '.'
000000000020c04b         db  0x00 ; '.'
000000000020c04c         db  0x00 ; '.'
000000000020c04d         db  0x00 ; '.'
000000000020c04e         db  0x00 ; '.'
000000000020c04f         db  0x00 ; '.'
000000000020c050         db  0x00 ; '.'
000000000020c051         db  0x00 ; '.'
000000000020c052         db  0x00 ; '.'
000000000020c053         db  0x00 ; '.'
000000000020c054         db  0x00 ; '.'
000000000020c055         db  0x00 ; '.'
000000000020c056         db  0x00 ; '.'
000000000020c057         db  0x00 ; '.'
000000000020c058         db  0x00 ; '.'
000000000020c059         db  0x00 ; '.'
000000000020c05a         db  0x00 ; '.'
000000000020c05b         db  0x00 ; '.'
000000000020c05c         db  0x00 ; '.'
000000000020c05d         db  0x00 ; '.'
000000000020c05e         db  0x00 ; '.'
000000000020c05f         db  0x00 ; '.'
000000000020c060         db  0x00 ; '.'
000000000020c061         db  0x00 ; '.'
000000000020c062         db  0x00 ; '.'
000000000020c063         db  0x00 ; '.'
000000000020c064         db  0x00 ; '.'
000000000020c065         db  0x00 ; '.'
000000000020c066         db  0x00 ; '.'
000000000020c067         db  0x00 ; '.'
000000000020c068         db  0x00 ; '.'
000000000020c069         db  0x00 ; '.'
000000000020c06a         db  0x00 ; '.'
000000000020c06b         db  0x00 ; '.'
000000000020c06c         db  0x00 ; '.'
000000000020c06d         db  0x00 ; '.'
000000000020c06e         db  0x00 ; '.'
000000000020c06f         db  0x00 ; '.'
000000000020c070         db  0x00 ; '.'
000000000020c071         db  0x00 ; '.'
000000000020c072         db  0x00 ; '.'
000000000020c073         db  0x00 ; '.'
000000000020c074         db  0x00 ; '.'
000000000020c075         db  0x00 ; '.'
000000000020c076         db  0x00 ; '.'
000000000020c077         db  0x00 ; '.'
                     nslots:
000000000020c078         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020c07c         db  0x00 ; '.'
000000000020c07d         db  0x00 ; '.'
000000000020c07e         db  0x00 ; '.'
000000000020c07f         db  0x00 ; '.'
                     slotvec:
000000000020c080         dq         0x000000000020c090                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
000000000020c088         db  0x00 ; '.'
000000000020c089         db  0x00 ; '.'
000000000020c08a         db  0x00 ; '.'
000000000020c08b         db  0x00 ; '.'
000000000020c08c         db  0x00 ; '.'
000000000020c08d         db  0x00 ; '.'
000000000020c08e         db  0x00 ; '.'
000000000020c08f         db  0x00 ; '.'
                     slotvec0:
000000000020c090         dq         1.26481e-321, 1.06106e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec
                     numname_table:
000000000020c0a0         db  0x01 ; '.'                                         ; DATA XREF=str2sig+95, sig2str+1
000000000020c0a1         db  0x00 ; '.'
000000000020c0a2         db  0x00 ; '.'
000000000020c0a3         db  0x00 ; '.'
000000000020c0a4         db  0x48 ; 'H'                                         ; DATA XREF=str2sig+14
000000000020c0a5         db  0x55 ; 'U'
000000000020c0a6         db  0x50 ; 'P'
000000000020c0a7         db  0x00 ; '.'
000000000020c0a8         db  0x00 ; '.'
000000000020c0a9         db  0x00 ; '.'
000000000020c0aa         db  0x00 ; '.'
000000000020c0ab         db  0x00 ; '.'
000000000020c0ac         db  0x02 ; '.'
000000000020c0ad         db  0x00 ; '.'
000000000020c0ae         db  0x00 ; '.'
000000000020c0af         db  0x00 ; '.'
000000000020c0b0         db  0x49 ; 'I'
000000000020c0b1         db  0x4e ; 'N'
000000000020c0b2         db  0x54 ; 'T'
000000000020c0b3         db  0x00 ; '.'
000000000020c0b4         db  0x00 ; '.'
000000000020c0b5         db  0x00 ; '.'
000000000020c0b6         db  0x00 ; '.'
000000000020c0b7         db  0x00 ; '.'
000000000020c0b8         db  0x03 ; '.'
000000000020c0b9         db  0x00 ; '.'
000000000020c0ba         db  0x00 ; '.'
000000000020c0bb         db  0x00 ; '.'
000000000020c0bc         db  0x51 ; 'Q'
000000000020c0bd         db  0x55 ; 'U'
000000000020c0be         db  0x49 ; 'I'
000000000020c0bf         db  0x54 ; 'T'
000000000020c0c0         db  0x00 ; '.'
000000000020c0c1         db  0x00 ; '.'
000000000020c0c2         db  0x00 ; '.'
000000000020c0c3         db  0x00 ; '.'
000000000020c0c4         db  0x04 ; '.'
000000000020c0c5         db  0x00 ; '.'
000000000020c0c6         db  0x00 ; '.'
000000000020c0c7         db  0x00 ; '.'
000000000020c0c8         db  0x49 ; 'I'
000000000020c0c9         db  0x4c ; 'L'
000000000020c0ca         db  0x4c ; 'L'
000000000020c0cb         db  0x00 ; '.'
000000000020c0cc         db  0x00 ; '.'
000000000020c0cd         db  0x00 ; '.'
000000000020c0ce         db  0x00 ; '.'
000000000020c0cf         db  0x00 ; '.'
000000000020c0d0         db  0x05 ; '.'
000000000020c0d1         db  0x00 ; '.'
000000000020c0d2         db  0x00 ; '.'
000000000020c0d3         db  0x00 ; '.'
000000000020c0d4         db  0x54 ; 'T'
000000000020c0d5         db  0x52 ; 'R'
000000000020c0d6         db  0x41 ; 'A'
000000000020c0d7         db  0x50 ; 'P'
000000000020c0d8         db  0x00 ; '.'
000000000020c0d9         db  0x00 ; '.'
000000000020c0da         db  0x00 ; '.'
000000000020c0db         db  0x00 ; '.'
000000000020c0dc         db  0x06 ; '.'
000000000020c0dd         db  0x00 ; '.'
000000000020c0de         db  0x00 ; '.'
000000000020c0df         db  0x00 ; '.'
000000000020c0e0         db  0x41 ; 'A'
000000000020c0e1         db  0x42 ; 'B'
000000000020c0e2         db  0x52 ; 'R'
000000000020c0e3         db  0x54 ; 'T'
000000000020c0e4         db  0x00 ; '.'
000000000020c0e5         db  0x00 ; '.'
000000000020c0e6         db  0x00 ; '.'
000000000020c0e7         db  0x00 ; '.'
000000000020c0e8         db  0x08 ; '.'
000000000020c0e9         db  0x00 ; '.'
000000000020c0ea         db  0x00 ; '.'
000000000020c0eb         db  0x00 ; '.'
000000000020c0ec         db  0x46 ; 'F'
000000000020c0ed         db  0x50 ; 'P'
000000000020c0ee         db  0x45 ; 'E'
000000000020c0ef         db  0x00 ; '.'
000000000020c0f0         db  0x00 ; '.'
000000000020c0f1         db  0x00 ; '.'
000000000020c0f2         db  0x00 ; '.'
000000000020c0f3         db  0x00 ; '.'
000000000020c0f4         db  0x09 ; '.'
000000000020c0f5         db  0x00 ; '.'
000000000020c0f6         db  0x00 ; '.'
000000000020c0f7         db  0x00 ; '.'
000000000020c0f8         db  0x4b ; 'K'
000000000020c0f9         db  0x49 ; 'I'
000000000020c0fa         db  0x4c ; 'L'
000000000020c0fb         db  0x4c ; 'L'
000000000020c0fc         db  0x00 ; '.'
000000000020c0fd         db  0x00 ; '.'
000000000020c0fe         db  0x00 ; '.'
000000000020c0ff         db  0x00 ; '.'
000000000020c100         db  0x0b ; '.'
000000000020c101         db  0x00 ; '.'
000000000020c102         db  0x00 ; '.'
000000000020c103         db  0x00 ; '.'
000000000020c104         db  0x53 ; 'S'
000000000020c105         db  0x45 ; 'E'
000000000020c106         db  0x47 ; 'G'
000000000020c107         db  0x56 ; 'V'
000000000020c108         db  0x00 ; '.'
000000000020c109         db  0x00 ; '.'
000000000020c10a         db  0x00 ; '.'
000000000020c10b         db  0x00 ; '.'
000000000020c10c         db  0x07 ; '.'
000000000020c10d         db  0x00 ; '.'
000000000020c10e         db  0x00 ; '.'
000000000020c10f         db  0x00 ; '.'
000000000020c110         db  0x42 ; 'B'
000000000020c111         db  0x55 ; 'U'
000000000020c112         db  0x53 ; 'S'
000000000020c113         db  0x00 ; '.'
000000000020c114         db  0x00 ; '.'
000000000020c115         db  0x00 ; '.'
000000000020c116         db  0x00 ; '.'
000000000020c117         db  0x00 ; '.'
000000000020c118         db  0x0d ; '.'
000000000020c119         db  0x00 ; '.'
000000000020c11a         db  0x00 ; '.'
000000000020c11b         db  0x00 ; '.'
000000000020c11c         db  0x50 ; 'P'
000000000020c11d         db  0x49 ; 'I'
000000000020c11e         db  0x50 ; 'P'
000000000020c11f         db  0x45 ; 'E'
000000000020c120         db  0x00 ; '.'
000000000020c121         db  0x00 ; '.'
000000000020c122         db  0x00 ; '.'
000000000020c123         db  0x00 ; '.'
000000000020c124         db  0x0e ; '.'
000000000020c125         db  0x00 ; '.'
000000000020c126         db  0x00 ; '.'
000000000020c127         db  0x00 ; '.'
000000000020c128         db  0x41 ; 'A'
000000000020c129         db  0x4c ; 'L'
000000000020c12a         db  0x52 ; 'R'
000000000020c12b         db  0x4d ; 'M'
000000000020c12c         db  0x00 ; '.'
000000000020c12d         db  0x00 ; '.'
000000000020c12e         db  0x00 ; '.'
000000000020c12f         db  0x00 ; '.'
000000000020c130         db  0x0f ; '.'
000000000020c131         db  0x00 ; '.'
000000000020c132         db  0x00 ; '.'
000000000020c133         db  0x00 ; '.'
000000000020c134         db  0x54 ; 'T'
000000000020c135         db  0x45 ; 'E'
000000000020c136         db  0x52 ; 'R'
000000000020c137         db  0x4d ; 'M'
000000000020c138         db  0x00 ; '.'
000000000020c139         db  0x00 ; '.'
000000000020c13a         db  0x00 ; '.'
000000000020c13b         db  0x00 ; '.'
000000000020c13c         db  0x0a ; '.'
000000000020c13d         db  0x00 ; '.'
000000000020c13e         db  0x00 ; '.'
000000000020c13f         db  0x00 ; '.'
000000000020c140         db  0x55 ; 'U'
000000000020c141         db  0x53 ; 'S'
000000000020c142         db  0x52 ; 'R'
000000000020c143         db  0x31 ; '1'
000000000020c144         db  0x00 ; '.'
000000000020c145         db  0x00 ; '.'
000000000020c146         db  0x00 ; '.'
000000000020c147         db  0x00 ; '.'
000000000020c148         db  0x0c ; '.'
000000000020c149         db  0x00 ; '.'
000000000020c14a         db  0x00 ; '.'
000000000020c14b         db  0x00 ; '.'
000000000020c14c         db  0x55 ; 'U'
000000000020c14d         db  0x53 ; 'S'
000000000020c14e         db  0x52 ; 'R'
000000000020c14f         db  0x32 ; '2'
000000000020c150         db  0x00 ; '.'
000000000020c151         db  0x00 ; '.'
000000000020c152         db  0x00 ; '.'
000000000020c153         db  0x00 ; '.'
000000000020c154         db  0x11 ; '.'
000000000020c155         db  0x00 ; '.'
000000000020c156         db  0x00 ; '.'
000000000020c157         db  0x00 ; '.'
000000000020c158         db  0x43 ; 'C'
000000000020c159         db  0x48 ; 'H'
000000000020c15a         db  0x4c ; 'L'
000000000020c15b         db  0x44 ; 'D'
000000000020c15c         db  0x00 ; '.'
000000000020c15d         db  0x00 ; '.'
000000000020c15e         db  0x00 ; '.'
000000000020c15f         db  0x00 ; '.'
000000000020c160         db  0x17 ; '.'
000000000020c161         db  0x00 ; '.'
000000000020c162         db  0x00 ; '.'
000000000020c163         db  0x00 ; '.'
000000000020c164         db  0x55 ; 'U'
000000000020c165         db  0x52 ; 'R'
000000000020c166         db  0x47 ; 'G'
000000000020c167         db  0x00 ; '.'
000000000020c168         db  0x00 ; '.'
000000000020c169         db  0x00 ; '.'
000000000020c16a         db  0x00 ; '.'
000000000020c16b         db  0x00 ; '.'
000000000020c16c         db  0x13 ; '.'
000000000020c16d         db  0x00 ; '.'
000000000020c16e         db  0x00 ; '.'
000000000020c16f         db  0x00 ; '.'
000000000020c170         db  0x53 ; 'S'
000000000020c171         db  0x54 ; 'T'
000000000020c172         db  0x4f ; 'O'
000000000020c173         db  0x50 ; 'P'
000000000020c174         db  0x00 ; '.'
000000000020c175         db  0x00 ; '.'
000000000020c176         db  0x00 ; '.'
000000000020c177         db  0x00 ; '.'
000000000020c178         db  0x14 ; '.'
000000000020c179         db  0x00 ; '.'
000000000020c17a         db  0x00 ; '.'
000000000020c17b         db  0x00 ; '.'
000000000020c17c         db  0x54 ; 'T'
000000000020c17d         db  0x53 ; 'S'
000000000020c17e         db  0x54 ; 'T'
000000000020c17f         db  0x50 ; 'P'
000000000020c180         db  0x00 ; '.'
000000000020c181         db  0x00 ; '.'
000000000020c182         db  0x00 ; '.'
000000000020c183         db  0x00 ; '.'
000000000020c184         db  0x12 ; '.'
000000000020c185         db  0x00 ; '.'
000000000020c186         db  0x00 ; '.'
000000000020c187         db  0x00 ; '.'
000000000020c188         db  0x43 ; 'C'
000000000020c189         db  0x4f ; 'O'
000000000020c18a         db  0x4e ; 'N'
000000000020c18b         db  0x54 ; 'T'
000000000020c18c         db  0x00 ; '.'
000000000020c18d         db  0x00 ; '.'
000000000020c18e         db  0x00 ; '.'
000000000020c18f         db  0x00 ; '.'
000000000020c190         db  0x15 ; '.'
000000000020c191         db  0x00 ; '.'
000000000020c192         db  0x00 ; '.'
000000000020c193         db  0x00 ; '.'
000000000020c194         db  0x54 ; 'T'
000000000020c195         db  0x54 ; 'T'
000000000020c196         db  0x49 ; 'I'
000000000020c197         db  0x4e ; 'N'
000000000020c198         db  0x00 ; '.'
000000000020c199         db  0x00 ; '.'
000000000020c19a         db  0x00 ; '.'
000000000020c19b         db  0x00 ; '.'
000000000020c19c         db  0x16 ; '.'
000000000020c19d         db  0x00 ; '.'
000000000020c19e         db  0x00 ; '.'
000000000020c19f         db  0x00 ; '.'
000000000020c1a0         db  0x54 ; 'T'
000000000020c1a1         db  0x54 ; 'T'
000000000020c1a2         db  0x4f ; 'O'
000000000020c1a3         db  0x55 ; 'U'
000000000020c1a4         db  0x00 ; '.'
000000000020c1a5         db  0x00 ; '.'
000000000020c1a6         db  0x00 ; '.'
000000000020c1a7         db  0x00 ; '.'
000000000020c1a8         db  0x1f ; '.'
000000000020c1a9         db  0x00 ; '.'
000000000020c1aa         db  0x00 ; '.'
000000000020c1ab         db  0x00 ; '.'
000000000020c1ac         db  0x53 ; 'S'
000000000020c1ad         db  0x59 ; 'Y'
000000000020c1ae         db  0x53 ; 'S'
000000000020c1af         db  0x00 ; '.'
000000000020c1b0         db  0x00 ; '.'
000000000020c1b1         db  0x00 ; '.'
000000000020c1b2         db  0x00 ; '.'
000000000020c1b3         db  0x00 ; '.'
000000000020c1b4         db  0x1d ; '.'
000000000020c1b5         db  0x00 ; '.'
000000000020c1b6         db  0x00 ; '.'
000000000020c1b7         db  0x00 ; '.'
000000000020c1b8         db  0x50 ; 'P'
000000000020c1b9         db  0x4f ; 'O'
000000000020c1ba         db  0x4c ; 'L'
000000000020c1bb         db  0x4c ; 'L'
000000000020c1bc         db  0x00 ; '.'
000000000020c1bd         db  0x00 ; '.'
000000000020c1be         db  0x00 ; '.'
000000000020c1bf         db  0x00 ; '.'
000000000020c1c0         db  0x1a ; '.'
000000000020c1c1         db  0x00 ; '.'
000000000020c1c2         db  0x00 ; '.'
000000000020c1c3         db  0x00 ; '.'
000000000020c1c4         db  0x56 ; 'V'
000000000020c1c5         db  0x54 ; 'T'
000000000020c1c6         db  0x41 ; 'A'
000000000020c1c7         db  0x4c ; 'L'
000000000020c1c8         db  0x52 ; 'R'
000000000020c1c9         db  0x4d ; 'M'
000000000020c1ca         db  0x00 ; '.'
000000000020c1cb         db  0x00 ; '.'
000000000020c1cc         db  0x1b ; '.'
000000000020c1cd         db  0x00 ; '.'
000000000020c1ce         db  0x00 ; '.'
000000000020c1cf         db  0x00 ; '.'
000000000020c1d0         db  0x50 ; 'P'
000000000020c1d1         db  0x52 ; 'R'
000000000020c1d2         db  0x4f ; 'O'
000000000020c1d3         db  0x46 ; 'F'
000000000020c1d4         db  0x00 ; '.'
000000000020c1d5         db  0x00 ; '.'
000000000020c1d6         db  0x00 ; '.'
000000000020c1d7         db  0x00 ; '.'
000000000020c1d8         db  0x18 ; '.'
000000000020c1d9         db  0x00 ; '.'
000000000020c1da         db  0x00 ; '.'
000000000020c1db         db  0x00 ; '.'
000000000020c1dc         db  0x58 ; 'X'
000000000020c1dd         db  0x43 ; 'C'
000000000020c1de         db  0x50 ; 'P'
000000000020c1df         db  0x55 ; 'U'
000000000020c1e0         db  0x00 ; '.'
000000000020c1e1         db  0x00 ; '.'
000000000020c1e2         db  0x00 ; '.'
000000000020c1e3         db  0x00 ; '.'
000000000020c1e4         db  0x19 ; '.'
000000000020c1e5         db  0x00 ; '.'
000000000020c1e6         db  0x00 ; '.'
000000000020c1e7         db  0x00 ; '.'
000000000020c1e8         db  0x58 ; 'X'
000000000020c1e9         db  0x46 ; 'F'
000000000020c1ea         db  0x53 ; 'S'
000000000020c1eb         db  0x5a ; 'Z'
000000000020c1ec         db  0x00 ; '.'
000000000020c1ed         db  0x00 ; '.'
000000000020c1ee         db  0x00 ; '.'
000000000020c1ef         db  0x00 ; '.'
000000000020c1f0         db  0x06 ; '.'
000000000020c1f1         db  0x00 ; '.'
000000000020c1f2         db  0x00 ; '.'
000000000020c1f3         db  0x00 ; '.'
000000000020c1f4         db  0x49 ; 'I'
000000000020c1f5         db  0x4f ; 'O'
000000000020c1f6         db  0x54 ; 'T'
000000000020c1f7         db  0x00 ; '.'
000000000020c1f8         db  0x00 ; '.'
000000000020c1f9         db  0x00 ; '.'
000000000020c1fa         db  0x00 ; '.'
000000000020c1fb         db  0x00 ; '.'
000000000020c1fc         db  0x11 ; '.'
000000000020c1fd         db  0x00 ; '.'
000000000020c1fe         db  0x00 ; '.'
000000000020c1ff         db  0x00 ; '.'
000000000020c200         db  0x43 ; 'C'
000000000020c201         db  0x4c ; 'L'
000000000020c202         db  0x44 ; 'D'
000000000020c203         db  0x00 ; '.'
000000000020c204         db  0x00 ; '.'
000000000020c205         db  0x00 ; '.'
000000000020c206         db  0x00 ; '.'
000000000020c207         db  0x00 ; '.'
000000000020c208         db  0x1e ; '.'
000000000020c209         db  0x00 ; '.'
000000000020c20a         db  0x00 ; '.'
000000000020c20b         db  0x00 ; '.'
000000000020c20c         db  0x50 ; 'P'
000000000020c20d         db  0x57 ; 'W'
000000000020c20e         db  0x52 ; 'R'
000000000020c20f         db  0x00 ; '.'
000000000020c210         db  0x00 ; '.'
000000000020c211         db  0x00 ; '.'
000000000020c212         db  0x00 ; '.'
000000000020c213         db  0x00 ; '.'
000000000020c214         db  0x1c ; '.'
000000000020c215         db  0x00 ; '.'
000000000020c216         db  0x00 ; '.'
000000000020c217         db  0x00 ; '.'
000000000020c218         db  0x57 ; 'W'
000000000020c219         db  0x49 ; 'I'
000000000020c21a         db  0x4e ; 'N'
000000000020c21b         db  0x43 ; 'C'
000000000020c21c         db  0x48 ; 'H'
000000000020c21d         db  0x00 ; '.'
000000000020c21e         db  0x00 ; '.'
000000000020c21f         db  0x00 ; '.'
000000000020c220         db  0x1d ; '.'
000000000020c221         db  0x00 ; '.'
000000000020c222         db  0x00 ; '.'
000000000020c223         db  0x00 ; '.'
000000000020c224         db  0x49 ; 'I'
000000000020c225         db  0x4f ; 'O'
000000000020c226         db  0x00 ; '.'
000000000020c227         db  0x00 ; '.'
000000000020c228         db  0x00 ; '.'
000000000020c229         db  0x00 ; '.'
000000000020c22a         db  0x00 ; '.'
000000000020c22b         db  0x00 ; '.'
000000000020c22c         db  0x10 ; '.'
000000000020c22d         db  0x00 ; '.'
000000000020c22e         db  0x00 ; '.'
000000000020c22f         db  0x00 ; '.'
000000000020c230         db  0x53 ; 'S'
000000000020c231         db  0x54 ; 'T'
000000000020c232         db  0x4b ; 'K'
000000000020c233         db  0x46 ; 'F'
000000000020c234         db  0x4c ; 'L'
000000000020c235         db  0x54 ; 'T'
000000000020c236         db  0x00 ; '.'
000000000020c237         db  0x00 ; '.'
000000000020c238         db  0x00 ; '.'
000000000020c239         db  0x00 ; '.'
000000000020c23a         db  0x00 ; '.'
000000000020c23b         db  0x00 ; '.'
000000000020c23c         db  0x45 ; 'E'
000000000020c23d         db  0x58 ; 'X'
000000000020c23e         db  0x49 ; 'I'
000000000020c23f         db  0x54 ; 'T'
000000000020c240         db  0x00 ; '.'
000000000020c241         db  0x00 ; '.'
000000000020c242         db  0x00 ; '.'
000000000020c243         db  0x00 ; '.'
000000000020c244         db  0x00 ; '.'
000000000020c245         db  0x00 ; '.'
000000000020c246         db  0x00 ; '.'
000000000020c247         db  0x00 ; '.'
                     __TMC_END__:
000000000020c248         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7
000000000020c249         db  0x00 ; '.'
000000000020c24a         db  0x00 ; '.'
000000000020c24b         db  0x00 ; '.'
000000000020c24c         db  0x00 ; '.'
000000000020c24d         db  0x00 ; '.'
000000000020c24e         db  0x00 ; '.'
000000000020c24f         db  0x00 ; '.'
000000000020c250         db  0x00 ; '.'
000000000020c251         db  0x00 ; '.'
000000000020c252         db  0x00 ; '.'
000000000020c253         db  0x00 ; '.'
000000000020c254         db  0x00 ; '.'
000000000020c255         db  0x00 ; '.'
000000000020c256         db  0x00 ; '.'
000000000020c257         db  0x00 ; '.'
000000000020c258         db  0x00 ; '.'
000000000020c259         db  0x00 ; '.'
000000000020c25a         db  0x00 ; '.'
000000000020c25b         db  0x00 ; '.'
000000000020c25c         db  0x00 ; '.'
000000000020c25d         db  0x00 ; '.'
000000000020c25e         db  0x00 ; '.'
000000000020c25f         db  0x00 ; '.'


        ; Section .bss
        ; Range: [0x20c260; 0x20c660[ (1024 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
000000000020c260         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+102
000000000020c261         db  0x00 ; '.'
000000000020c262         db  0x00 ; '.'
000000000020c263         db  0x00 ; '.'
000000000020c264         db  0x00 ; '.'
000000000020c265         db  0x00 ; '.'
000000000020c266         db  0x00 ; '.'
000000000020c267         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
000000000020c268         db  0x00 ; '.'                                         ; DATA XREF=main+540, main+4909, main+4942, create+725, create+835, usage+125, usage+162, usage+199, usage+255, usage+282, usage+319
000000000020c269         db  0x00 ; '.'
000000000020c26a         db  0x00 ; '.'
000000000020c26b         db  0x00 ; '.'
000000000020c26c         db  0x00 ; '.'
000000000020c26d         db  0x00 ; '.'
000000000020c26e         db  0x00 ; '.'
000000000020c26f         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
000000000020c270         db  0x00 ; '.'                                         ; DATA XREF=main+184, main+1808, main+1838, main+1863
000000000020c271         db  0x00 ; '.'
000000000020c272         db  0x00 ; '.'
000000000020c273         db  0x00 ; '.'
000000000020c274         db  0x00 ; '.'
000000000020c275         db  0x00 ; '.'
000000000020c276         db  0x00 ; '.'
000000000020c277         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
000000000020c278         db  0x00 ; '.'                                         ; DATA XREF=main+387, main+479, main+688, main+819, main+889, main+904, main+970, main+977, main+1056, main+1100, main+1195
000000000020c279         db  0x00 ; '.'
000000000020c27a         db  0x00 ; '.'
000000000020c27b         db  0x00 ; '.'
000000000020c27c         db  0x00 ; '.'
000000000020c27d         db  0x00 ; '.'
000000000020c27e         db  0x00 ; '.'
000000000020c27f         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
000000000020c280         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
000000000020c281         db  0x00 ; '.'
000000000020c282         db  0x00 ; '.'
000000000020c283         db  0x00 ; '.'
000000000020c284         db  0x00 ; '.'
000000000020c285         db  0x00 ; '.'
000000000020c286         db  0x00 ; '.'
000000000020c287         db  0x00 ; '.'
000000000020c288         db  0x00 ; '.'
000000000020c289         db  0x00 ; '.'
000000000020c28a         db  0x00 ; '.'
000000000020c28b         db  0x00 ; '.'
000000000020c28c         db  0x00 ; '.'
000000000020c28d         db  0x00 ; '.'
000000000020c28e         db  0x00 ; '.'
000000000020c28f         db  0x00 ; '.'
000000000020c290         db  0x00 ; '.'
000000000020c291         db  0x00 ; '.'
000000000020c292         db  0x00 ; '.'
000000000020c293         db  0x00 ; '.'
000000000020c294         db  0x00 ; '.'
000000000020c295         db  0x00 ; '.'
000000000020c296         db  0x00 ; '.'
000000000020c297         db  0x00 ; '.'
000000000020c298         db  0x00 ; '.'
000000000020c299         db  0x00 ; '.'
000000000020c29a         db  0x00 ; '.'
000000000020c29b         db  0x00 ; '.'
000000000020c29c         db  0x00 ; '.'
000000000020c29d         db  0x00 ; '.'
000000000020c29e         db  0x00 ; '.'
000000000020c29f         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
000000000020c2a0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
000000000020c2a1         db  0x00 ; '.'
000000000020c2a2         db  0x00 ; '.'
000000000020c2a3         db  0x00 ; '.'
000000000020c2a4         db  0x00 ; '.'
000000000020c2a5         db  0x00 ; '.'
000000000020c2a6         db  0x00 ; '.'
000000000020c2a7         db  0x00 ; '.'
                     completed.7697:
000000000020c2a8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
000000000020c2a9         db  0x00 ; '.'
000000000020c2aa         db  0x00 ; '.'
000000000020c2ab         db  0x00 ; '.'
000000000020c2ac         db  0x00 ; '.'
000000000020c2ad         db  0x00 ; '.'
000000000020c2ae         db  0x00 ; '.'
000000000020c2af         db  0x00 ; '.'
000000000020c2b0         db  0x00 ; '.'
000000000020c2b1         db  0x00 ; '.'
000000000020c2b2         db  0x00 ; '.'
000000000020c2b3         db  0x00 ; '.'
000000000020c2b4         db  0x00 ; '.'
000000000020c2b5         db  0x00 ; '.'
000000000020c2b6         db  0x00 ; '.'
000000000020c2b7         db  0x00 ; '.'
000000000020c2b8         db  0x00 ; '.'
000000000020c2b9         db  0x00 ; '.'
000000000020c2ba         db  0x00 ; '.'
000000000020c2bb         db  0x00 ; '.'
000000000020c2bc         db  0x00 ; '.'
000000000020c2bd         db  0x00 ; '.'
000000000020c2be         db  0x00 ; '.'
000000000020c2bf         db  0x00 ; '.'
                     sufindex.7081:
000000000020c2c0         db  0x00 ; '.'                                         ; DATA XREF=next_file_name+42, next_file_name+298, next_file_name+408, next_file_name+579
000000000020c2c1         db  0x00 ; '.'
000000000020c2c2         db  0x00 ; '.'
000000000020c2c3         db  0x00 ; '.'
000000000020c2c4         db  0x00 ; '.'
000000000020c2c5         db  0x00 ; '.'
000000000020c2c6         db  0x00 ; '.'
000000000020c2c7         db  0x00 ; '.'
                     addsuf_length.7084:
000000000020c2c8         db  0x00 ; '.'                                         ; DATA XREF=next_file_name+218, next_file_name+349
000000000020c2c9         db  0x00 ; '.'
000000000020c2ca         db  0x00 ; '.'
000000000020c2cb         db  0x00 ; '.'
000000000020c2cc         db  0x00 ; '.'
000000000020c2cd         db  0x00 ; '.'
000000000020c2ce         db  0x00 ; '.'
000000000020c2cf         db  0x00 ; '.'
                     outbase_length.7082:
000000000020c2d0         db  0x00 ; '.'                                         ; DATA XREF=next_file_name+194, next_file_name+256, next_file_name+544, next_file_name+603, next_file_name+622
000000000020c2d1         db  0x00 ; '.'
000000000020c2d2         db  0x00 ; '.'
000000000020c2d3         db  0x00 ; '.'
000000000020c2d4         db  0x00 ; '.'
000000000020c2d5         db  0x00 ; '.'
000000000020c2d6         db  0x00 ; '.'
000000000020c2d7         db  0x00 ; '.'
                     outfile_length.7083:
000000000020c2d8         db  0x00 ; '.'                                         ; DATA XREF=next_file_name+156, next_file_name+228, next_file_name+365, next_file_name+562
000000000020c2d9         db  0x00 ; '.'
000000000020c2da         db  0x00 ; '.'
000000000020c2db         db  0x00 ; '.'
000000000020c2dc         db  0x00 ; '.'
000000000020c2dd         db  0x00 ; '.'
000000000020c2de         db  0x00 ; '.'
000000000020c2df         db  0x00 ; '.'
                     unbuffered:
000000000020c2e0         db  0x00 ; '.'                                         ; DATA XREF=main+301, main+4702, main+4896
                     elide_empty_files:
000000000020c2e1         db  0x00 ; '.'                                         ; DATA XREF=main+608, main+5478, cwrite+31
                     verbose:
000000000020c2e2         db  0x00 ; '.'                                         ; DATA XREF=main+1402, create+104, create+488
000000000020c2e3         db  0x00 ; '.'
000000000020c2e4         db  0x00 ; '.'
000000000020c2e5         db  0x00 ; '.'
000000000020c2e6         db  0x00 ; '.'
000000000020c2e7         db  0x00 ; '.'
000000000020c2e8         db  0x00 ; '.'
000000000020c2e9         db  0x00 ; '.'
000000000020c2ea         db  0x00 ; '.'
000000000020c2eb         db  0x00 ; '.'
000000000020c2ec         db  0x00 ; '.'
000000000020c2ed         db  0x00 ; '.'
000000000020c2ee         db  0x00 ; '.'
000000000020c2ef         db  0x00 ; '.'
000000000020c2f0         db  0x00 ; '.'
000000000020c2f1         db  0x00 ; '.'
000000000020c2f2         db  0x00 ; '.'
000000000020c2f3         db  0x00 ; '.'
000000000020c2f4         db  0x00 ; '.'
000000000020c2f5         db  0x00 ; '.'
000000000020c2f6         db  0x00 ; '.'
000000000020c2f7         db  0x00 ; '.'
000000000020c2f8         db  0x00 ; '.'
000000000020c2f9         db  0x00 ; '.'
000000000020c2fa         db  0x00 ; '.'
000000000020c2fb         db  0x00 ; '.'
000000000020c2fc         db  0x00 ; '.'
000000000020c2fd         db  0x00 ; '.'
000000000020c2fe         db  0x00 ; '.'
000000000020c2ff         db  0x00 ; '.'
                     in_stat_buf:
000000000020c300         db  0x00 ; '.'                                         ; DATA XREF=main+1985, create+572
000000000020c301         db  0x00 ; '.'
000000000020c302         db  0x00 ; '.'
000000000020c303         db  0x00 ; '.'
000000000020c304         db  0x00 ; '.'
000000000020c305         db  0x00 ; '.'
000000000020c306         db  0x00 ; '.'
000000000020c307         db  0x00 ; '.'
                     qword_20c308:
000000000020c308         db  0x00 ; '.'                                         ; DATA XREF=create+559
000000000020c309         db  0x00 ; '.'
000000000020c30a         db  0x00 ; '.'
000000000020c30b         db  0x00 ; '.'
000000000020c30c         db  0x00 ; '.'
000000000020c30d         db  0x00 ; '.'
000000000020c30e         db  0x00 ; '.'
000000000020c30f         db  0x00 ; '.'
000000000020c310         db  0x00 ; '.'
000000000020c311         db  0x00 ; '.'
000000000020c312         db  0x00 ; '.'
000000000020c313         db  0x00 ; '.'
000000000020c314         db  0x00 ; '.'
000000000020c315         db  0x00 ; '.'
000000000020c316         db  0x00 ; '.'
000000000020c317         db  0x00 ; '.'
                     dword_20c318:
000000000020c318         db  0x00 ; '.'                                         ; DATA XREF=main+6113
000000000020c319         db  0x00 ; '.'
000000000020c31a         db  0x00 ; '.'
000000000020c31b         db  0x00 ; '.'
000000000020c31c         db  0x00 ; '.'
000000000020c31d         db  0x00 ; '.'
000000000020c31e         db  0x00 ; '.'
000000000020c31f         db  0x00 ; '.'
000000000020c320         db  0x00 ; '.'
000000000020c321         db  0x00 ; '.'
000000000020c322         db  0x00 ; '.'
000000000020c323         db  0x00 ; '.'
000000000020c324         db  0x00 ; '.'
000000000020c325         db  0x00 ; '.'
000000000020c326         db  0x00 ; '.'
000000000020c327         db  0x00 ; '.'
000000000020c328         db  0x00 ; '.'
000000000020c329         db  0x00 ; '.'
000000000020c32a         db  0x00 ; '.'
000000000020c32b         db  0x00 ; '.'
000000000020c32c         db  0x00 ; '.'
000000000020c32d         db  0x00 ; '.'
000000000020c32e         db  0x00 ; '.'
000000000020c32f         db  0x00 ; '.'
                     qword_20c330:
000000000020c330         db  0x00 ; '.'                                         ; DATA XREF=main+6101
000000000020c331         db  0x00 ; '.'
000000000020c332         db  0x00 ; '.'
000000000020c333         db  0x00 ; '.'
000000000020c334         db  0x00 ; '.'
000000000020c335         db  0x00 ; '.'
000000000020c336         db  0x00 ; '.'
000000000020c337         db  0x00 ; '.'
                     qword_20c338:
000000000020c338         db  0x00 ; '.'                                         ; DATA XREF=main+2020
000000000020c339         db  0x00 ; '.'
000000000020c33a         db  0x00 ; '.'
000000000020c33b         db  0x00 ; '.'
000000000020c33c         db  0x00 ; '.'
000000000020c33d         db  0x00 ; '.'
000000000020c33e         db  0x00 ; '.'
000000000020c33f         db  0x00 ; '.'
000000000020c340         db  0x00 ; '.'
000000000020c341         db  0x00 ; '.'
000000000020c342         db  0x00 ; '.'
000000000020c343         db  0x00 ; '.'
000000000020c344         db  0x00 ; '.'
000000000020c345         db  0x00 ; '.'
000000000020c346         db  0x00 ; '.'
000000000020c347         db  0x00 ; '.'
000000000020c348         db  0x00 ; '.'
000000000020c349         db  0x00 ; '.'
000000000020c34a         db  0x00 ; '.'
000000000020c34b         db  0x00 ; '.'
000000000020c34c         db  0x00 ; '.'
000000000020c34d         db  0x00 ; '.'
000000000020c34e         db  0x00 ; '.'
000000000020c34f         db  0x00 ; '.'
000000000020c350         db  0x00 ; '.'
000000000020c351         db  0x00 ; '.'
000000000020c352         db  0x00 ; '.'
000000000020c353         db  0x00 ; '.'
000000000020c354         db  0x00 ; '.'
000000000020c355         db  0x00 ; '.'
000000000020c356         db  0x00 ; '.'
000000000020c357         db  0x00 ; '.'
000000000020c358         db  0x00 ; '.'
000000000020c359         db  0x00 ; '.'
000000000020c35a         db  0x00 ; '.'
000000000020c35b         db  0x00 ; '.'
000000000020c35c         db  0x00 ; '.'
000000000020c35d         db  0x00 ; '.'
000000000020c35e         db  0x00 ; '.'
000000000020c35f         db  0x00 ; '.'
000000000020c360         db  0x00 ; '.'
000000000020c361         db  0x00 ; '.'
000000000020c362         db  0x00 ; '.'
000000000020c363         db  0x00 ; '.'
000000000020c364         db  0x00 ; '.'
000000000020c365         db  0x00 ; '.'
000000000020c366         db  0x00 ; '.'
000000000020c367         db  0x00 ; '.'
000000000020c368         db  0x00 ; '.'
000000000020c369         db  0x00 ; '.'
000000000020c36a         db  0x00 ; '.'
000000000020c36b         db  0x00 ; '.'
000000000020c36c         db  0x00 ; '.'
000000000020c36d         db  0x00 ; '.'
000000000020c36e         db  0x00 ; '.'
000000000020c36f         db  0x00 ; '.'
000000000020c370         db  0x00 ; '.'
000000000020c371         db  0x00 ; '.'
000000000020c372         db  0x00 ; '.'
000000000020c373         db  0x00 ; '.'
000000000020c374         db  0x00 ; '.'
000000000020c375         db  0x00 ; '.'
000000000020c376         db  0x00 ; '.'
000000000020c377         db  0x00 ; '.'
000000000020c378         db  0x00 ; '.'
000000000020c379         db  0x00 ; '.'
000000000020c37a         db  0x00 ; '.'
000000000020c37b         db  0x00 ; '.'
000000000020c37c         db  0x00 ; '.'
000000000020c37d         db  0x00 ; '.'
000000000020c37e         db  0x00 ; '.'
000000000020c37f         db  0x00 ; '.'
000000000020c380         db  0x00 ; '.'
000000000020c381         db  0x00 ; '.'
000000000020c382         db  0x00 ; '.'
000000000020c383         db  0x00 ; '.'
000000000020c384         db  0x00 ; '.'
000000000020c385         db  0x00 ; '.'
000000000020c386         db  0x00 ; '.'
000000000020c387         db  0x00 ; '.'
000000000020c388         db  0x00 ; '.'
000000000020c389         db  0x00 ; '.'
000000000020c38a         db  0x00 ; '.'
000000000020c38b         db  0x00 ; '.'
000000000020c38c         db  0x00 ; '.'
000000000020c38d         db  0x00 ; '.'
000000000020c38e         db  0x00 ; '.'
000000000020c38f         db  0x00 ; '.'
                     infile:
000000000020c390         db  0x00 ; '.'                                         ; DATA XREF=main+160, main+1844, main+1937, main+3994, main+5831, main+5945, main+6050, main+6298, main+6522, main+6617, main+6668
000000000020c391         db  0x00 ; '.'
000000000020c392         db  0x00 ; '.'
000000000020c393         db  0x00 ; '.'
000000000020c394         db  0x00 ; '.'
000000000020c395         db  0x00 ; '.'
000000000020c396         db  0x00 ; '.'
000000000020c397         db  0x00 ; '.'
                     additional_suffix:
000000000020c398         db  0x00 ; '.'                                         ; DATA XREF=main+503, next_file_name+184, next_file_name+337
000000000020c399         db  0x00 ; '.'
000000000020c39a         db  0x00 ; '.'
000000000020c39b         db  0x00 ; '.'
000000000020c39c         db  0x00 ; '.'
000000000020c39d         db  0x00 ; '.'
000000000020c39e         db  0x00 ; '.'
000000000020c39f         db  0x00 ; '.'
                     numeric_suffix_start:
000000000020c3a0         db  0x00 ; '.'                                         ; DATA XREF=main+1632, main+1733, main+1882, next_file_name+398
000000000020c3a1         db  0x00 ; '.'
000000000020c3a2         db  0x00 ; '.'
000000000020c3a3         db  0x00 ; '.'
000000000020c3a4         db  0x00 ; '.'
000000000020c3a5         db  0x00 ; '.'
000000000020c3a6         db  0x00 ; '.'
000000000020c3a7         db  0x00 ; '.'
                     suffix_length:
000000000020c3a8         db  0x00 ; '.'                                         ; DATA XREF=main+1304, main+1774, main+1801, main+1924, main+2465, next_file_name+17, next_file_name+312, next_file_name+437, next_file_name+555
000000000020c3a9         db  0x00 ; '.'
000000000020c3aa         db  0x00 ; '.'
000000000020c3ab         db  0x00 ; '.'
000000000020c3ac         db  0x00 ; '.'
000000000020c3ad         db  0x00 ; '.'
000000000020c3ae         db  0x00 ; '.'
000000000020c3af         db  0x00 ; '.'
                     outfile_mid:
000000000020c3b0         db  0x00 ; '.'                                         ; DATA XREF=next_file_name+64, next_file_name+322, next_file_name+463
000000000020c3b1         db  0x00 ; '.'
000000000020c3b2         db  0x00 ; '.'
000000000020c3b3         db  0x00 ; '.'
000000000020c3b4         db  0x00 ; '.'
000000000020c3b5         db  0x00 ; '.'
000000000020c3b6         db  0x00 ; '.'
000000000020c3b7         db  0x00 ; '.'
                     outfile:
000000000020c3b8         db  0x00 ; '.'                                         ; DATA XREF=main+3909, main+4407, next_file_name+10, next_file_name+276, next_file_name+589, cwrite+44, cwrite+75, cwrite+140, cwrite+216
000000000020c3b9         db  0x00 ; '.'
000000000020c3ba         db  0x00 ; '.'
000000000020c3bb         db  0x00 ; '.'
000000000020c3bc         db  0x00 ; '.'
000000000020c3bd         db  0x00 ; '.'
000000000020c3be         db  0x00 ; '.'
000000000020c3bf         db  0x00 ; '.'
                     outbase:
000000000020c3c0         db  0x00 ; '.'                                         ; DATA XREF=main+174, main+1869, next_file_name+172, next_file_name+263
000000000020c3c1         db  0x00 ; '.'
000000000020c3c2         db  0x00 ; '.'
000000000020c3c3         db  0x00 ; '.'
000000000020c3c4         db  0x00 ; '.'
000000000020c3c5         db  0x00 ; '.'
000000000020c3c6         db  0x00 ; '.'
000000000020c3c7         db  0x00 ; '.'
000000000020c3c8         db  0x00 ; '.'
000000000020c3c9         db  0x00 ; '.'
000000000020c3ca         db  0x00 ; '.'
000000000020c3cb         db  0x00 ; '.'
000000000020c3cc         db  0x00 ; '.'
000000000020c3cd         db  0x00 ; '.'
000000000020c3ce         db  0x00 ; '.'
000000000020c3cf         db  0x00 ; '.'
000000000020c3d0         db  0x00 ; '.'
000000000020c3d1         db  0x00 ; '.'
000000000020c3d2         db  0x00 ; '.'
000000000020c3d3         db  0x00 ; '.'
000000000020c3d4         db  0x00 ; '.'
000000000020c3d5         db  0x00 ; '.'
000000000020c3d6         db  0x00 ; '.'
000000000020c3d7         db  0x00 ; '.'
000000000020c3d8         db  0x00 ; '.'
000000000020c3d9         db  0x00 ; '.'
000000000020c3da         db  0x00 ; '.'
000000000020c3db         db  0x00 ; '.'
000000000020c3dc         db  0x00 ; '.'
000000000020c3dd         db  0x00 ; '.'
000000000020c3de         db  0x00 ; '.'
000000000020c3df         db  0x00 ; '.'
                     newblocked:
000000000020c3e0         db  0x00 ; '.'                                         ; DATA XREF=main+2139, main+2182, main+2206
000000000020c3e1         db  0x00 ; '.'
000000000020c3e2         db  0x00 ; '.'
000000000020c3e3         db  0x00 ; '.'
000000000020c3e4         db  0x00 ; '.'
000000000020c3e5         db  0x00 ; '.'
000000000020c3e6         db  0x00 ; '.'
000000000020c3e7         db  0x00 ; '.'
000000000020c3e8         db  0x00 ; '.'
000000000020c3e9         db  0x00 ; '.'
000000000020c3ea         db  0x00 ; '.'
000000000020c3eb         db  0x00 ; '.'
000000000020c3ec         db  0x00 ; '.'
000000000020c3ed         db  0x00 ; '.'
000000000020c3ee         db  0x00 ; '.'
000000000020c3ef         db  0x00 ; '.'
000000000020c3f0         db  0x00 ; '.'
000000000020c3f1         db  0x00 ; '.'
000000000020c3f2         db  0x00 ; '.'
000000000020c3f3         db  0x00 ; '.'
000000000020c3f4         db  0x00 ; '.'
000000000020c3f5         db  0x00 ; '.'
000000000020c3f6         db  0x00 ; '.'
000000000020c3f7         db  0x00 ; '.'
000000000020c3f8         db  0x00 ; '.'
000000000020c3f9         db  0x00 ; '.'
000000000020c3fa         db  0x00 ; '.'
000000000020c3fb         db  0x00 ; '.'
000000000020c3fc         db  0x00 ; '.'
000000000020c3fd         db  0x00 ; '.'
000000000020c3fe         db  0x00 ; '.'
000000000020c3ff         db  0x00 ; '.'
000000000020c400         db  0x00 ; '.'
000000000020c401         db  0x00 ; '.'
000000000020c402         db  0x00 ; '.'
000000000020c403         db  0x00 ; '.'
000000000020c404         db  0x00 ; '.'
000000000020c405         db  0x00 ; '.'
000000000020c406         db  0x00 ; '.'
000000000020c407         db  0x00 ; '.'
000000000020c408         db  0x00 ; '.'
000000000020c409         db  0x00 ; '.'
000000000020c40a         db  0x00 ; '.'
000000000020c40b         db  0x00 ; '.'
000000000020c40c         db  0x00 ; '.'
000000000020c40d         db  0x00 ; '.'
000000000020c40e         db  0x00 ; '.'
000000000020c40f         db  0x00 ; '.'
000000000020c410         db  0x00 ; '.'
000000000020c411         db  0x00 ; '.'
000000000020c412         db  0x00 ; '.'
000000000020c413         db  0x00 ; '.'
000000000020c414         db  0x00 ; '.'
000000000020c415         db  0x00 ; '.'
000000000020c416         db  0x00 ; '.'
000000000020c417         db  0x00 ; '.'
000000000020c418         db  0x00 ; '.'
000000000020c419         db  0x00 ; '.'
000000000020c41a         db  0x00 ; '.'
000000000020c41b         db  0x00 ; '.'
000000000020c41c         db  0x00 ; '.'
000000000020c41d         db  0x00 ; '.'
000000000020c41e         db  0x00 ; '.'
000000000020c41f         db  0x00 ; '.'
000000000020c420         db  0x00 ; '.'
000000000020c421         db  0x00 ; '.'
000000000020c422         db  0x00 ; '.'
000000000020c423         db  0x00 ; '.'
000000000020c424         db  0x00 ; '.'
000000000020c425         db  0x00 ; '.'
000000000020c426         db  0x00 ; '.'
000000000020c427         db  0x00 ; '.'
000000000020c428         db  0x00 ; '.'
000000000020c429         db  0x00 ; '.'
000000000020c42a         db  0x00 ; '.'
000000000020c42b         db  0x00 ; '.'
000000000020c42c         db  0x00 ; '.'
000000000020c42d         db  0x00 ; '.'
000000000020c42e         db  0x00 ; '.'
000000000020c42f         db  0x00 ; '.'
000000000020c430         db  0x00 ; '.'
000000000020c431         db  0x00 ; '.'
000000000020c432         db  0x00 ; '.'
000000000020c433         db  0x00 ; '.'
000000000020c434         db  0x00 ; '.'
000000000020c435         db  0x00 ; '.'
000000000020c436         db  0x00 ; '.'
000000000020c437         db  0x00 ; '.'
000000000020c438         db  0x00 ; '.'
000000000020c439         db  0x00 ; '.'
000000000020c43a         db  0x00 ; '.'
000000000020c43b         db  0x00 ; '.'
000000000020c43c         db  0x00 ; '.'
000000000020c43d         db  0x00 ; '.'
000000000020c43e         db  0x00 ; '.'
000000000020c43f         db  0x00 ; '.'
000000000020c440         db  0x00 ; '.'
000000000020c441         db  0x00 ; '.'
000000000020c442         db  0x00 ; '.'
000000000020c443         db  0x00 ; '.'
000000000020c444         db  0x00 ; '.'
000000000020c445         db  0x00 ; '.'
000000000020c446         db  0x00 ; '.'
000000000020c447         db  0x00 ; '.'
000000000020c448         db  0x00 ; '.'
000000000020c449         db  0x00 ; '.'
000000000020c44a         db  0x00 ; '.'
000000000020c44b         db  0x00 ; '.'
000000000020c44c         db  0x00 ; '.'
000000000020c44d         db  0x00 ; '.'
000000000020c44e         db  0x00 ; '.'
000000000020c44f         db  0x00 ; '.'
000000000020c450         db  0x00 ; '.'
000000000020c451         db  0x00 ; '.'
000000000020c452         db  0x00 ; '.'
000000000020c453         db  0x00 ; '.'
000000000020c454         db  0x00 ; '.'
000000000020c455         db  0x00 ; '.'
000000000020c456         db  0x00 ; '.'
000000000020c457         db  0x00 ; '.'
000000000020c458         db  0x00 ; '.'
000000000020c459         db  0x00 ; '.'
000000000020c45a         db  0x00 ; '.'
000000000020c45b         db  0x00 ; '.'
000000000020c45c         db  0x00 ; '.'
000000000020c45d         db  0x00 ; '.'
000000000020c45e         db  0x00 ; '.'
000000000020c45f         db  0x00 ; '.'
                     oldblocked:
000000000020c460         db  0x00 ; '.'                                         ; DATA XREF=main+2199, create+383
000000000020c461         db  0x00 ; '.'
000000000020c462         db  0x00 ; '.'
000000000020c463         db  0x00 ; '.'
000000000020c464         db  0x00 ; '.'
000000000020c465         db  0x00 ; '.'
000000000020c466         db  0x00 ; '.'
000000000020c467         db  0x00 ; '.'
000000000020c468         db  0x00 ; '.'
000000000020c469         db  0x00 ; '.'
000000000020c46a         db  0x00 ; '.'
000000000020c46b         db  0x00 ; '.'
000000000020c46c         db  0x00 ; '.'
000000000020c46d         db  0x00 ; '.'
000000000020c46e         db  0x00 ; '.'
000000000020c46f         db  0x00 ; '.'
000000000020c470         db  0x00 ; '.'
000000000020c471         db  0x00 ; '.'
000000000020c472         db  0x00 ; '.'
000000000020c473         db  0x00 ; '.'
000000000020c474         db  0x00 ; '.'
000000000020c475         db  0x00 ; '.'
000000000020c476         db  0x00 ; '.'
000000000020c477         db  0x00 ; '.'
000000000020c478         db  0x00 ; '.'
000000000020c479         db  0x00 ; '.'
000000000020c47a         db  0x00 ; '.'
000000000020c47b         db  0x00 ; '.'
000000000020c47c         db  0x00 ; '.'
000000000020c47d         db  0x00 ; '.'
000000000020c47e         db  0x00 ; '.'
000000000020c47f         db  0x00 ; '.'
000000000020c480         db  0x00 ; '.'
000000000020c481         db  0x00 ; '.'
000000000020c482         db  0x00 ; '.'
000000000020c483         db  0x00 ; '.'
000000000020c484         db  0x00 ; '.'
000000000020c485         db  0x00 ; '.'
000000000020c486         db  0x00 ; '.'
000000000020c487         db  0x00 ; '.'
000000000020c488         db  0x00 ; '.'
000000000020c489         db  0x00 ; '.'
000000000020c48a         db  0x00 ; '.'
000000000020c48b         db  0x00 ; '.'
000000000020c48c         db  0x00 ; '.'
000000000020c48d         db  0x00 ; '.'
000000000020c48e         db  0x00 ; '.'
000000000020c48f         db  0x00 ; '.'
000000000020c490         db  0x00 ; '.'
000000000020c491         db  0x00 ; '.'
000000000020c492         db  0x00 ; '.'
000000000020c493         db  0x00 ; '.'
000000000020c494         db  0x00 ; '.'
000000000020c495         db  0x00 ; '.'
000000000020c496         db  0x00 ; '.'
000000000020c497         db  0x00 ; '.'
000000000020c498         db  0x00 ; '.'
000000000020c499         db  0x00 ; '.'
000000000020c49a         db  0x00 ; '.'
000000000020c49b         db  0x00 ; '.'
000000000020c49c         db  0x00 ; '.'
000000000020c49d         db  0x00 ; '.'
000000000020c49e         db  0x00 ; '.'
000000000020c49f         db  0x00 ; '.'
000000000020c4a0         db  0x00 ; '.'
000000000020c4a1         db  0x00 ; '.'
000000000020c4a2         db  0x00 ; '.'
000000000020c4a3         db  0x00 ; '.'
000000000020c4a4         db  0x00 ; '.'
000000000020c4a5         db  0x00 ; '.'
000000000020c4a6         db  0x00 ; '.'
000000000020c4a7         db  0x00 ; '.'
000000000020c4a8         db  0x00 ; '.'
000000000020c4a9         db  0x00 ; '.'
000000000020c4aa         db  0x00 ; '.'
000000000020c4ab         db  0x00 ; '.'
000000000020c4ac         db  0x00 ; '.'
000000000020c4ad         db  0x00 ; '.'
000000000020c4ae         db  0x00 ; '.'
000000000020c4af         db  0x00 ; '.'
000000000020c4b0         db  0x00 ; '.'
000000000020c4b1         db  0x00 ; '.'
000000000020c4b2         db  0x00 ; '.'
000000000020c4b3         db  0x00 ; '.'
000000000020c4b4         db  0x00 ; '.'
000000000020c4b5         db  0x00 ; '.'
000000000020c4b6         db  0x00 ; '.'
000000000020c4b7         db  0x00 ; '.'
000000000020c4b8         db  0x00 ; '.'
000000000020c4b9         db  0x00 ; '.'
000000000020c4ba         db  0x00 ; '.'
000000000020c4bb         db  0x00 ; '.'
000000000020c4bc         db  0x00 ; '.'
000000000020c4bd         db  0x00 ; '.'
000000000020c4be         db  0x00 ; '.'
000000000020c4bf         db  0x00 ; '.'
000000000020c4c0         db  0x00 ; '.'
000000000020c4c1         db  0x00 ; '.'
000000000020c4c2         db  0x00 ; '.'
000000000020c4c3         db  0x00 ; '.'
000000000020c4c4         db  0x00 ; '.'
000000000020c4c5         db  0x00 ; '.'
000000000020c4c6         db  0x00 ; '.'
000000000020c4c7         db  0x00 ; '.'
000000000020c4c8         db  0x00 ; '.'
000000000020c4c9         db  0x00 ; '.'
000000000020c4ca         db  0x00 ; '.'
000000000020c4cb         db  0x00 ; '.'
000000000020c4cc         db  0x00 ; '.'
000000000020c4cd         db  0x00 ; '.'
000000000020c4ce         db  0x00 ; '.'
000000000020c4cf         db  0x00 ; '.'
000000000020c4d0         db  0x00 ; '.'
000000000020c4d1         db  0x00 ; '.'
000000000020c4d2         db  0x00 ; '.'
000000000020c4d3         db  0x00 ; '.'
000000000020c4d4         db  0x00 ; '.'
000000000020c4d5         db  0x00 ; '.'
000000000020c4d6         db  0x00 ; '.'
000000000020c4d7         db  0x00 ; '.'
000000000020c4d8         db  0x00 ; '.'
000000000020c4d9         db  0x00 ; '.'
000000000020c4da         db  0x00 ; '.'
000000000020c4db         db  0x00 ; '.'
000000000020c4dc         db  0x00 ; '.'
000000000020c4dd         db  0x00 ; '.'
000000000020c4de         db  0x00 ; '.'
000000000020c4df         db  0x00 ; '.'
                     n_open_pipes:
000000000020c4e0         db  0x00 ; '.'                                         ; DATA XREF=create+169, create+206, create+264, create+307, create+923, closeout+60, closeout+403
000000000020c4e1         db  0x00 ; '.'
000000000020c4e2         db  0x00 ; '.'
000000000020c4e3         db  0x00 ; '.'
000000000020c4e4         db  0x00 ; '.'
000000000020c4e5         db  0x00 ; '.'
000000000020c4e6         db  0x00 ; '.'
000000000020c4e7         db  0x00 ; '.'
                     open_pipes_alloc:
000000000020c4e8         db  0x00 ; '.'                                         ; DATA XREF=create+176, create+911
000000000020c4e9         db  0x00 ; '.'
000000000020c4ea         db  0x00 ; '.'
000000000020c4eb         db  0x00 ; '.'
000000000020c4ec         db  0x00 ; '.'
000000000020c4ed         db  0x00 ; '.'
000000000020c4ee         db  0x00 ; '.'
000000000020c4ef         db  0x00 ; '.'
                     open_pipes:
000000000020c4f0         db  0x00 ; '.'                                         ; DATA XREF=create+189, create+280, create+933, closeout+72
000000000020c4f1         db  0x00 ; '.'
000000000020c4f2         db  0x00 ; '.'
000000000020c4f3         db  0x00 ; '.'
000000000020c4f4         db  0x00 ; '.'
000000000020c4f5         db  0x00 ; '.'
000000000020c4f6         db  0x00 ; '.'
000000000020c4f7         db  0x00 ; '.'
                     filter_pid:
000000000020c4f8         db  0x00 ; '.'                                         ; DATA XREF=main+3916, create+183, ofile_open+279, ofile_open+285, cwrite+51
000000000020c4f9         db  0x00 ; '.'
000000000020c4fa         db  0x00 ; '.'
000000000020c4fb         db  0x00 ; '.'
000000000020c4fc         db  0x00 ; '.'
000000000020c4fd         db  0x00 ; '.'
000000000020c4fe         db  0x00 ; '.'
000000000020c4ff         db  0x00 ; '.'
                     filter_command:
000000000020c500         db  0x00 ; '.'                                         ; DATA XREF=main+1431, main+1680, main+2129, main+4761, main+5013, main+5154, main+5732, create+33, create+402, closeout+245, closeout+443
000000000020c501         db  0x00 ; '.'
000000000020c502         db  0x00 ; '.'
000000000020c503         db  0x00 ; '.'
000000000020c504         db  0x00 ; '.'
000000000020c505         db  0x00 ; '.'
000000000020c506         db  0x00 ; '.'
000000000020c507         db  0x00 ; '.'
                     ignore_EPIPE:
000000000020c508         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
000000000020c509         db  0x00 ; '.'
000000000020c50a         db  0x00 ; '.'
000000000020c50b         db  0x00 ; '.'
000000000020c50c         db  0x00 ; '.'
000000000020c50d         db  0x00 ; '.'
000000000020c50e         db  0x00 ; '.'
000000000020c50f         db  0x00 ; '.'
                     file_name:
000000000020c510         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
000000000020c511         db  0x00 ; '.'
000000000020c512         db  0x00 ; '.'
000000000020c513         db  0x00 ; '.'
000000000020c514         db  0x00 ; '.'
000000000020c515         db  0x00 ; '.'
000000000020c516         db  0x00 ; '.'
000000000020c517         db  0x00 ; '.'
                     program_name:
000000000020c518         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
000000000020c519         db  0x00 ; '.'
000000000020c51a         db  0x00 ; '.'
000000000020c51b         db  0x00 ; '.'
000000000020c51c         db  0x00 ; '.'
000000000020c51d         db  0x00 ; '.'
000000000020c51e         db  0x00 ; '.'
000000000020c51f         db  0x00 ; '.'
                     slot0:
000000000020c520         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
000000000020c521         db  0x00 ; '.'
000000000020c522         db  0x00 ; '.'
000000000020c523         db  0x00 ; '.'
000000000020c524         db  0x00 ; '.'
000000000020c525         db  0x00 ; '.'
000000000020c526         db  0x00 ; '.'
000000000020c527         db  0x00 ; '.'
000000000020c528         db  0x00 ; '.'
000000000020c529         db  0x00 ; '.'
000000000020c52a         db  0x00 ; '.'
000000000020c52b         db  0x00 ; '.'
000000000020c52c         db  0x00 ; '.'
000000000020c52d         db  0x00 ; '.'
000000000020c52e         db  0x00 ; '.'
000000000020c52f         db  0x00 ; '.'
000000000020c530         db  0x00 ; '.'
000000000020c531         db  0x00 ; '.'
000000000020c532         db  0x00 ; '.'
000000000020c533         db  0x00 ; '.'
000000000020c534         db  0x00 ; '.'
000000000020c535         db  0x00 ; '.'
000000000020c536         db  0x00 ; '.'
000000000020c537         db  0x00 ; '.'
000000000020c538         db  0x00 ; '.'
000000000020c539         db  0x00 ; '.'
000000000020c53a         db  0x00 ; '.'
000000000020c53b         db  0x00 ; '.'
000000000020c53c         db  0x00 ; '.'
000000000020c53d         db  0x00 ; '.'
000000000020c53e         db  0x00 ; '.'
000000000020c53f         db  0x00 ; '.'
000000000020c540         db  0x00 ; '.'
000000000020c541         db  0x00 ; '.'
000000000020c542         db  0x00 ; '.'
000000000020c543         db  0x00 ; '.'
000000000020c544         db  0x00 ; '.'
000000000020c545         db  0x00 ; '.'
000000000020c546         db  0x00 ; '.'
000000000020c547         db  0x00 ; '.'
000000000020c548         db  0x00 ; '.'
000000000020c549         db  0x00 ; '.'
000000000020c54a         db  0x00 ; '.'
000000000020c54b         db  0x00 ; '.'
000000000020c54c         db  0x00 ; '.'
000000000020c54d         db  0x00 ; '.'
000000000020c54e         db  0x00 ; '.'
000000000020c54f         db  0x00 ; '.'
000000000020c550         db  0x00 ; '.'
000000000020c551         db  0x00 ; '.'
000000000020c552         db  0x00 ; '.'
000000000020c553         db  0x00 ; '.'
000000000020c554         db  0x00 ; '.'
000000000020c555         db  0x00 ; '.'
000000000020c556         db  0x00 ; '.'
000000000020c557         db  0x00 ; '.'
000000000020c558         db  0x00 ; '.'
000000000020c559         db  0x00 ; '.'
000000000020c55a         db  0x00 ; '.'
000000000020c55b         db  0x00 ; '.'
000000000020c55c         db  0x00 ; '.'
000000000020c55d         db  0x00 ; '.'
000000000020c55e         db  0x00 ; '.'
000000000020c55f         db  0x00 ; '.'
000000000020c560         db  0x00 ; '.'
000000000020c561         db  0x00 ; '.'
000000000020c562         db  0x00 ; '.'
000000000020c563         db  0x00 ; '.'
000000000020c564         db  0x00 ; '.'
000000000020c565         db  0x00 ; '.'
000000000020c566         db  0x00 ; '.'
000000000020c567         db  0x00 ; '.'
000000000020c568         db  0x00 ; '.'
000000000020c569         db  0x00 ; '.'
000000000020c56a         db  0x00 ; '.'
000000000020c56b         db  0x00 ; '.'
000000000020c56c         db  0x00 ; '.'
000000000020c56d         db  0x00 ; '.'
000000000020c56e         db  0x00 ; '.'
000000000020c56f         db  0x00 ; '.'
000000000020c570         db  0x00 ; '.'
000000000020c571         db  0x00 ; '.'
000000000020c572         db  0x00 ; '.'
000000000020c573         db  0x00 ; '.'
000000000020c574         db  0x00 ; '.'
000000000020c575         db  0x00 ; '.'
000000000020c576         db  0x00 ; '.'
000000000020c577         db  0x00 ; '.'
000000000020c578         db  0x00 ; '.'
000000000020c579         db  0x00 ; '.'
000000000020c57a         db  0x00 ; '.'
000000000020c57b         db  0x00 ; '.'
000000000020c57c         db  0x00 ; '.'
000000000020c57d         db  0x00 ; '.'
000000000020c57e         db  0x00 ; '.'
000000000020c57f         db  0x00 ; '.'
000000000020c580         db  0x00 ; '.'
000000000020c581         db  0x00 ; '.'
000000000020c582         db  0x00 ; '.'
000000000020c583         db  0x00 ; '.'
000000000020c584         db  0x00 ; '.'
000000000020c585         db  0x00 ; '.'
000000000020c586         db  0x00 ; '.'
000000000020c587         db  0x00 ; '.'
000000000020c588         db  0x00 ; '.'
000000000020c589         db  0x00 ; '.'
000000000020c58a         db  0x00 ; '.'
000000000020c58b         db  0x00 ; '.'
000000000020c58c         db  0x00 ; '.'
000000000020c58d         db  0x00 ; '.'
000000000020c58e         db  0x00 ; '.'
000000000020c58f         db  0x00 ; '.'
000000000020c590         db  0x00 ; '.'
000000000020c591         db  0x00 ; '.'
000000000020c592         db  0x00 ; '.'
000000000020c593         db  0x00 ; '.'
000000000020c594         db  0x00 ; '.'
000000000020c595         db  0x00 ; '.'
000000000020c596         db  0x00 ; '.'
000000000020c597         db  0x00 ; '.'
000000000020c598         db  0x00 ; '.'
000000000020c599         db  0x00 ; '.'
000000000020c59a         db  0x00 ; '.'
000000000020c59b         db  0x00 ; '.'
000000000020c59c         db  0x00 ; '.'
000000000020c59d         db  0x00 ; '.'
000000000020c59e         db  0x00 ; '.'
000000000020c59f         db  0x00 ; '.'
000000000020c5a0         db  0x00 ; '.'
000000000020c5a1         db  0x00 ; '.'
000000000020c5a2         db  0x00 ; '.'
000000000020c5a3         db  0x00 ; '.'
000000000020c5a4         db  0x00 ; '.'
000000000020c5a5         db  0x00 ; '.'
000000000020c5a6         db  0x00 ; '.'
000000000020c5a7         db  0x00 ; '.'
000000000020c5a8         db  0x00 ; '.'
000000000020c5a9         db  0x00 ; '.'
000000000020c5aa         db  0x00 ; '.'
000000000020c5ab         db  0x00 ; '.'
000000000020c5ac         db  0x00 ; '.'
000000000020c5ad         db  0x00 ; '.'
000000000020c5ae         db  0x00 ; '.'
000000000020c5af         db  0x00 ; '.'
000000000020c5b0         db  0x00 ; '.'
000000000020c5b1         db  0x00 ; '.'
000000000020c5b2         db  0x00 ; '.'
000000000020c5b3         db  0x00 ; '.'
000000000020c5b4         db  0x00 ; '.'
000000000020c5b5         db  0x00 ; '.'
000000000020c5b6         db  0x00 ; '.'
000000000020c5b7         db  0x00 ; '.'
000000000020c5b8         db  0x00 ; '.'
000000000020c5b9         db  0x00 ; '.'
000000000020c5ba         db  0x00 ; '.'
000000000020c5bb         db  0x00 ; '.'
000000000020c5bc         db  0x00 ; '.'
000000000020c5bd         db  0x00 ; '.'
000000000020c5be         db  0x00 ; '.'
000000000020c5bf         db  0x00 ; '.'
000000000020c5c0         db  0x00 ; '.'
000000000020c5c1         db  0x00 ; '.'
000000000020c5c2         db  0x00 ; '.'
000000000020c5c3         db  0x00 ; '.'
000000000020c5c4         db  0x00 ; '.'
000000000020c5c5         db  0x00 ; '.'
000000000020c5c6         db  0x00 ; '.'
000000000020c5c7         db  0x00 ; '.'
000000000020c5c8         db  0x00 ; '.'
000000000020c5c9         db  0x00 ; '.'
000000000020c5ca         db  0x00 ; '.'
000000000020c5cb         db  0x00 ; '.'
000000000020c5cc         db  0x00 ; '.'
000000000020c5cd         db  0x00 ; '.'
000000000020c5ce         db  0x00 ; '.'
000000000020c5cf         db  0x00 ; '.'
000000000020c5d0         db  0x00 ; '.'
000000000020c5d1         db  0x00 ; '.'
000000000020c5d2         db  0x00 ; '.'
000000000020c5d3         db  0x00 ; '.'
000000000020c5d4         db  0x00 ; '.'
000000000020c5d5         db  0x00 ; '.'
000000000020c5d6         db  0x00 ; '.'
000000000020c5d7         db  0x00 ; '.'
000000000020c5d8         db  0x00 ; '.'
000000000020c5d9         db  0x00 ; '.'
000000000020c5da         db  0x00 ; '.'
000000000020c5db         db  0x00 ; '.'
000000000020c5dc         db  0x00 ; '.'
000000000020c5dd         db  0x00 ; '.'
000000000020c5de         db  0x00 ; '.'
000000000020c5df         db  0x00 ; '.'
000000000020c5e0         db  0x00 ; '.'
000000000020c5e1         db  0x00 ; '.'
000000000020c5e2         db  0x00 ; '.'
000000000020c5e3         db  0x00 ; '.'
000000000020c5e4         db  0x00 ; '.'
000000000020c5e5         db  0x00 ; '.'
000000000020c5e6         db  0x00 ; '.'
000000000020c5e7         db  0x00 ; '.'
000000000020c5e8         db  0x00 ; '.'
000000000020c5e9         db  0x00 ; '.'
000000000020c5ea         db  0x00 ; '.'
000000000020c5eb         db  0x00 ; '.'
000000000020c5ec         db  0x00 ; '.'
000000000020c5ed         db  0x00 ; '.'
000000000020c5ee         db  0x00 ; '.'
000000000020c5ef         db  0x00 ; '.'
000000000020c5f0         db  0x00 ; '.'
000000000020c5f1         db  0x00 ; '.'
000000000020c5f2         db  0x00 ; '.'
000000000020c5f3         db  0x00 ; '.'
000000000020c5f4         db  0x00 ; '.'
000000000020c5f5         db  0x00 ; '.'
000000000020c5f6         db  0x00 ; '.'
000000000020c5f7         db  0x00 ; '.'
000000000020c5f8         db  0x00 ; '.'
000000000020c5f9         db  0x00 ; '.'
000000000020c5fa         db  0x00 ; '.'
000000000020c5fb         db  0x00 ; '.'
000000000020c5fc         db  0x00 ; '.'
000000000020c5fd         db  0x00 ; '.'
000000000020c5fe         db  0x00 ; '.'
000000000020c5ff         db  0x00 ; '.'
000000000020c600         db  0x00 ; '.'
000000000020c601         db  0x00 ; '.'
000000000020c602         db  0x00 ; '.'
000000000020c603         db  0x00 ; '.'
000000000020c604         db  0x00 ; '.'
000000000020c605         db  0x00 ; '.'
000000000020c606         db  0x00 ; '.'
000000000020c607         db  0x00 ; '.'
000000000020c608         db  0x00 ; '.'
000000000020c609         db  0x00 ; '.'
000000000020c60a         db  0x00 ; '.'
000000000020c60b         db  0x00 ; '.'
000000000020c60c         db  0x00 ; '.'
000000000020c60d         db  0x00 ; '.'
000000000020c60e         db  0x00 ; '.'
000000000020c60f         db  0x00 ; '.'
000000000020c610         db  0x00 ; '.'
000000000020c611         db  0x00 ; '.'
000000000020c612         db  0x00 ; '.'
000000000020c613         db  0x00 ; '.'
000000000020c614         db  0x00 ; '.'
000000000020c615         db  0x00 ; '.'
000000000020c616         db  0x00 ; '.'
000000000020c617         db  0x00 ; '.'
000000000020c618         db  0x00 ; '.'
000000000020c619         db  0x00 ; '.'
000000000020c61a         db  0x00 ; '.'
000000000020c61b         db  0x00 ; '.'
000000000020c61c         db  0x00 ; '.'
000000000020c61d         db  0x00 ; '.'
000000000020c61e         db  0x00 ; '.'
000000000020c61f         db  0x00 ; '.'
                     default_quoting_options:
000000000020c620         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
000000000020c621         db  0x00 ; '.'
000000000020c622         db  0x00 ; '.'
000000000020c623         db  0x00 ; '.'
000000000020c624         db  0x00 ; '.'
000000000020c625         db  0x00 ; '.'
000000000020c626         db  0x00 ; '.'
000000000020c627         db  0x00 ; '.'
000000000020c628         db  0x00 ; '.'
000000000020c629         db  0x00 ; '.'
000000000020c62a         db  0x00 ; '.'
000000000020c62b         db  0x00 ; '.'
000000000020c62c         db  0x00 ; '.'
000000000020c62d         db  0x00 ; '.'
000000000020c62e         db  0x00 ; '.'
000000000020c62f         db  0x00 ; '.'
000000000020c630         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
000000000020c631         db  0x00 ; '.'
000000000020c632         db  0x00 ; '.'
000000000020c633         db  0x00 ; '.'
000000000020c634         db  0x00 ; '.'
000000000020c635         db  0x00 ; '.'
000000000020c636         db  0x00 ; '.'
000000000020c637         db  0x00 ; '.'
000000000020c638         db  0x00 ; '.'
000000000020c639         db  0x00 ; '.'
000000000020c63a         db  0x00 ; '.'
000000000020c63b         db  0x00 ; '.'
000000000020c63c         db  0x00 ; '.'
000000000020c63d         db  0x00 ; '.'
000000000020c63e         db  0x00 ; '.'
000000000020c63f         db  0x00 ; '.'
000000000020c640         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
000000000020c641         db  0x00 ; '.'
000000000020c642         db  0x00 ; '.'
000000000020c643         db  0x00 ; '.'
000000000020c644         db  0x00 ; '.'
000000000020c645         db  0x00 ; '.'
000000000020c646         db  0x00 ; '.'
000000000020c647         db  0x00 ; '.'
000000000020c648         db  0x00 ; '.'
000000000020c649         db  0x00 ; '.'
000000000020c64a         db  0x00 ; '.'
000000000020c64b         db  0x00 ; '.'
000000000020c64c         db  0x00 ; '.'
000000000020c64d         db  0x00 ; '.'
000000000020c64e         db  0x00 ; '.'
000000000020c64f         db  0x00 ; '.'
                     qword_20c650:
000000000020c650         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
000000000020c651         db  0x00 ; '.'
000000000020c652         db  0x00 ; '.'
000000000020c653         db  0x00 ; '.'
000000000020c654         db  0x00 ; '.'
000000000020c655         db  0x00 ; '.'
000000000020c656         db  0x00 ; '.'
000000000020c657         db  0x00 ; '.'
                     have_dupfd_cloexec.3326:
000000000020c658         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+94, rpl_fcntl+143, rpl_fcntl+438, rpl_fcntl+574
000000000020c659         db  0x00 ; '.'
000000000020c65a         db  0x00 ; '.'
000000000020c65b         db  0x00 ; '.'
000000000020c65c         db  0x00 ; '.'
000000000020c65d         db  0x00 ; '.'
000000000020c65e         db  0x00 ; '.'
000000000020c65f         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x20c670; 0x20cb60[ (1264 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x20c670; 0x4191d0[ (2149216 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     getenv:
000000000020c670         extern function code                                   ; DATA XREF=getenv@GOT
                     sigprocmask:
000000000020c678         extern function code                                   ; DATA XREF=sigprocmask@GOT
                     free:
000000000020c680         extern function code                                   ; DATA XREF=free@GOT
                     abort:
000000000020c688         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
000000000020c690         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
000000000020c698         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
000000000020c6a0         extern function code
                     _exit:
000000000020c6a8         extern function code                                   ; DATA XREF=_exit@GOT
                     strcpy:
000000000020c6b0         extern function code                                   ; DATA XREF=strcpy@GOT
                     __fpending:
000000000020c6b8         extern function code                                   ; DATA XREF=__fpending@GOT
                     sigaction:
000000000020c6c0         extern function code                                   ; DATA XREF=sigaction@GOT
                     fcntl:
000000000020c6c8         extern function code                                   ; DATA XREF=fcntl@GOT
                     setenv:
000000000020c6d0         extern function code                                   ; DATA XREF=setenv@GOT
                     clearerr_unlocked:
000000000020c6d8         extern function code                                   ; DATA XREF=clearerr_unlocked@GOT
                     write:
000000000020c6e0         extern function code                                   ; DATA XREF=write@GOT
                     textdomain:
000000000020c6e8         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
000000000020c6f0         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
000000000020c6f8         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
000000000020c700         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
000000000020c708         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
000000000020c710         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
000000000020c718         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
000000000020c720         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
000000000020c728         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     dup2:
000000000020c730         extern function code                                   ; DATA XREF=dup2@GOT
                     strchr:
000000000020c738         extern function code                                   ; DATA XREF=strchr@GOT
                     strrchr:
000000000020c740         extern function code                                   ; DATA XREF=strrchr@GOT
                     ftruncate:
000000000020c748         extern function code                                   ; DATA XREF=ftruncate@GOT
                     lseek:
000000000020c750         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
000000000020c758         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     __strtoul_internal:
000000000020c760         extern function code                                   ; DATA XREF=__strtoul_internal@GOT
                     memset:
000000000020c768         extern function code                                   ; DATA XREF=memset@GOT
                     close:
000000000020c770         extern function code                                   ; DATA XREF=close@GOT
                     pipe:
000000000020c778         extern function code                                   ; DATA XREF=pipe@GOT
                     strspn:
000000000020c780         extern function code                                   ; DATA XREF=strspn@GOT
                     memchr:
000000000020c788         extern function code                                   ; DATA XREF=memchr@GOT
                     read:
000000000020c790         extern function code                                   ; DATA XREF=read@GOT
                     __libc_start_main:
000000000020c798         extern function code
                     memcmp:
000000000020c7a0         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
000000000020c7a8         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
000000000020c7b0         extern function code                                   ; DATA XREF=calloc@GOT
                     strcmp:
000000000020c7b8         extern function code                                   ; DATA XREF=strcmp@GOT
                     sigemptyset:
000000000020c7c0         extern function code                                   ; DATA XREF=sigemptyset@GOT
                     __gmon_start__:
000000000020c7c8         extern function code
                     strtol:
000000000020c7d0         extern function code                                   ; DATA XREF=strtol@GOT
                     memcpy:
000000000020c7d8         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
000000000020c7e0         extern function code                                   ; DATA XREF=fileno@GOT
                     malloc:
000000000020c7e8         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
000000000020c7f0         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
000000000020c7f8         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __fxstat:
000000000020c800         extern function code                                   ; DATA XREF=__fxstat@GOT
                     __freading:
000000000020c808         extern function code                                   ; DATA XREF=__freading@GOT
                     fwrite_unlocked:
000000000020c810         extern function code                                   ; DATA XREF=fwrite_unlocked@GOT
                     realloc:
000000000020c818         extern function code                                   ; DATA XREF=realloc@GOT
                     fdopen:
000000000020c820         extern function code                                   ; DATA XREF=fdopen@GOT
                     setlocale:
000000000020c828         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
000000000020c830         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     memmove:
000000000020c838         extern function code                                   ; DATA XREF=memmove@GOT
                     error:
000000000020c840         extern function code                                   ; DATA XREF=error@GOT
                     memrchr:
000000000020c848         extern function code                                   ; DATA XREF=memrchr@GOT
                     waitpid:
000000000020c850         extern function code                                   ; DATA XREF=waitpid@GOT
                     open:
000000000020c858         extern function code                                   ; DATA XREF=open@GOT
                     fseeko:
000000000020c860         extern function code                                   ; DATA XREF=fseeko@GOT
                     __cxa_atexit:
000000000020c868         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     getpagesize:
000000000020c870         extern function code                                   ; DATA XREF=getpagesize@GOT
                     __libc_current_sigrtmin:
000000000020c878         extern function code                                   ; DATA XREF=__libc_current_sigrtmin@GOT
                     exit:
000000000020c880         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
000000000020c888         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
000000000020c890         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     __libc_current_sigrtmax:
000000000020c898         extern function code                                   ; DATA XREF=__libc_current_sigrtmax@GOT
                     _ITM_registerTMCloneTable:
000000000020c8a0         extern function code
                     mbsinit:
000000000020c8a8         extern function code                                   ; DATA XREF=mbsinit@GOT
                     execl:
000000000020c8b0         extern function code                                   ; DATA XREF=execl@GOT
                     iswprint:
000000000020c8b8         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
000000000020c8c0         extern function code
                     sigaddset:
000000000020c8c8         extern function code                                   ; DATA XREF=sigaddset@GOT
                     fork:
000000000020c8d0         extern function code                                   ; DATA XREF=fork@GOT
                     __ctype_b_loc:
000000000020c8d8         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     __sprintf_chk:
000000000020c8e0         extern function code                                   ; DATA XREF=__sprintf_chk@GOT
                     getenv@@GLIBC_2.2.5:
000000000020c8e8         extern function code
                     sigprocmask@@GLIBC_2.2.5:
000000000020c8f0         extern function code
                     free@@GLIBC_2.2.5:
000000000020c8f8         extern function code
                     abort@@GLIBC_2.2.5:
000000000020c900         extern function code
                     __errno_location@@GLIBC_2.2.5:
000000000020c908         extern function code
                     strncmp@@GLIBC_2.2.5:
000000000020c910         extern function code
                     _ITM_deregisterTMCloneTable_20c918:        // _ITM_deregisterTMCloneTable
000000000020c918         extern function code
                     _exit@@GLIBC_2.2.5:
000000000020c920         extern function code
                     strcpy@@GLIBC_2.2.5:
000000000020c928         extern function code
                     __fpending@@GLIBC_2.2.5:
000000000020c930         extern function code
                     sigaction@@GLIBC_2.2.5:
000000000020c938         extern function code
                     fcntl@@GLIBC_2.2.5:
000000000020c940         extern function code
                     setenv@@GLIBC_2.2.5:
000000000020c948         extern function code
                     clearerr_unlocked@@GLIBC_2.2.5:
000000000020c950         extern function code
                     write@@GLIBC_2.2.5:
000000000020c958         extern function code
                     textdomain@@GLIBC_2.2.5:
000000000020c960         extern function code
                     fclose@@GLIBC_2.2.5:
000000000020c968         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
000000000020c970         extern function code
                     dcgettext@@GLIBC_2.2.5:
000000000020c978         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
000000000020c980         extern function code
                     strlen@@GLIBC_2.2.5:
000000000020c988         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
000000000020c990         extern function code
                     getopt_long@@GLIBC_2.2.5:
000000000020c998         extern function code
                     mbrtowc@@GLIBC_2.2.5:
000000000020c9a0         extern function code
                     dup2@@GLIBC_2.2.5:
000000000020c9a8         extern function code
                     strchr@@GLIBC_2.2.5:
000000000020c9b0         extern function code
                     strrchr@@GLIBC_2.2.5:
000000000020c9b8         extern function code
                     ftruncate@@GLIBC_2.2.5:
000000000020c9c0         extern function code
                     lseek@@GLIBC_2.2.5:
000000000020c9c8         extern function code
                     __assert_fail@@GLIBC_2.2.5:
000000000020c9d0         extern function code
                     __strtoul_internal@@GLIBC_2.2.5:
000000000020c9d8         extern function code
                     memset@@GLIBC_2.2.5:
000000000020c9e0         extern function code
                     close@@GLIBC_2.2.5:
000000000020c9e8         extern function code
                     pipe@@GLIBC_2.2.5:
000000000020c9f0         extern function code
                     strspn@@GLIBC_2.2.5:
000000000020c9f8         extern function code
                     memchr@@GLIBC_2.2.5:
000000000020ca00         extern function code
                     read@@GLIBC_2.2.5:
000000000020ca08         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
000000000020ca10         extern function code
                     memcmp@@GLIBC_2.2.5:
000000000020ca18         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
000000000020ca20         extern function code
                     calloc@@GLIBC_2.2.5:
000000000020ca28         extern function code
                     strcmp@@GLIBC_2.2.5:
000000000020ca30         extern function code
                     sigemptyset@@GLIBC_2.2.5:
000000000020ca38         extern function code
                     __gmon_start___20ca40:        // __gmon_start__
000000000020ca40         extern function code
                     strtol@@GLIBC_2.2.5:
000000000020ca48         extern function code
                     memcpy@@GLIBC_2.14:
000000000020ca50         extern function code
                     fileno@@GLIBC_2.2.5:
000000000020ca58         extern function code
                     malloc@@GLIBC_2.2.5:
000000000020ca60         extern function code
                     fflush@@GLIBC_2.2.5:
000000000020ca68         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
000000000020ca70         extern function code
                     __fxstat@@GLIBC_2.2.5:
000000000020ca78         extern function code
                     __freading@@GLIBC_2.2.5:
000000000020ca80         extern function code
                     fwrite_unlocked@@GLIBC_2.2.5:
000000000020ca88         extern function code
                     realloc@@GLIBC_2.2.5:
000000000020ca90         extern function code
                     fdopen@@GLIBC_2.2.5:
000000000020ca98         extern function code
                     setlocale@@GLIBC_2.2.5:
000000000020caa0         extern function code
                     __printf_chk@@GLIBC_2.3.4:
000000000020caa8         extern function code
                     memmove@@GLIBC_2.2.5:
000000000020cab0         extern function code
                     error@@GLIBC_2.2.5:
000000000020cab8         extern function code
                     memrchr@@GLIBC_2.2.5:
000000000020cac0         extern function code
                     waitpid@@GLIBC_2.2.5:
000000000020cac8         extern function code
                     open@@GLIBC_2.2.5:
000000000020cad0         extern function code
                     fseeko@@GLIBC_2.2.5:
000000000020cad8         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
000000000020cae0         extern function code
                     getpagesize@@GLIBC_2.2.5:
000000000020cae8         extern function code
                     __libc_current_sigrtmin@@GLIBC_2.2.5:
000000000020caf0         extern function code
                     exit@@GLIBC_2.2.5:
000000000020caf8         extern function code
                     fwrite@@GLIBC_2.2.5:
000000000020cb00         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
000000000020cb08         extern function code
                     __libc_current_sigrtmax@@GLIBC_2.2.5:
000000000020cb10         extern function code
                     _ITM_registerTMCloneTable_20cb18:        // _ITM_registerTMCloneTable
000000000020cb18         extern function code
                     mbsinit@@GLIBC_2.2.5:
000000000020cb20         extern function code
                     execl@@GLIBC_2.2.5:
000000000020cb28         extern function code
                     iswprint@@GLIBC_2.2.5:
000000000020cb30         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
000000000020cb38         extern function code
                     sigaddset@@GLIBC_2.2.5:
000000000020cb40         extern function code
                     fork@@GLIBC_2.2.5:
000000000020cb48         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
000000000020cb50         extern function code
                     __sprintf_chk@@GLIBC_2.3.4:
000000000020cb58         extern function code
