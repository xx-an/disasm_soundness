
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/uptime
        UUID: 304C0D61-AF04-3550-82EB-1C899AE527DF
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x9a58[ (39512 bytes)
        ; File offset : [0; 39512[ (39512 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x80 ; '.'
0000000000000019         db  0x1d ; '.'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x50 ; 'P'
0000000000000029         db  0x42 ; 'B'
000000000000002a         db  0x03 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x58 ; 'X'
00000000000000d1         db  0x9a ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x58 ; 'X'
00000000000000d9         db  0x9a ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0xf0 ; '.'
00000000000000f1         db  0x9a ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0xf0 ; '.'
00000000000000f9         db  0x9a ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0xf0 ; '.'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0x9a ; '.'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x90 ; '.'
0000000000000109         db  0x05 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x48 ; 'H'
0000000000000111         db  0x07 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0xb8 ; '.'
0000000000000129         db  0x9b ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0xb8 ; '.'
0000000000000131         db  0x9b ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0xb8 ; '.'
0000000000000139         db  0x9b ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'                                         ; DATA XREF=sub_3050+1006, sub_3050+1077, sub_4260+4
000000000000016e         db  0x00 ; '.'                                         ; DATA XREF=sub_3050+1029, sub_4260+39, sub_4260+67
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'                                         ; DATA XREF=sub_3050+943, sub_3050+1096, sub_4260+87
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'                                         ; DATA XREF=print_uptime+153, read_utmp+151, read_utmp+352
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'                                         ; DATA XREF=sub_3050+949, sub_3050+1062, sub_4260+52
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0x30 ; '0'
0000000000000199         db  0x88 ; '.'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0x30 ; '0'
00000000000001a1         db  0x88 ; '.'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0x30 ; '0'
00000000000001a9         db  0x88 ; '.'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0xdc ; '.'
00000000000001b1         db  0x02 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0xdc ; '.'
00000000000001b9         db  0x02 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0xf0 ; '.'
0000000000000209         db  0x9a ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0xf0 ; '.'
0000000000000211         db  0x9a ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0xf0 ; '.'
0000000000000219         db  0x9a ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0x10 ; '.'
0000000000000221         db  0x05 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0x10 ; '.'
0000000000000229         db  0x05 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000000238         db  0x2f ; '/'
0000000000000239         db  0x6c ; 'l'
000000000000023a         db  0x69 ; 'i'
000000000000023b         db  0x62 ; 'b'
000000000000023c         db  0x36 ; '6'
000000000000023d         db  0x34 ; '4'
000000000000023e         db  0x2f ; '/'
000000000000023f         db  0x6c ; 'l'
0000000000000240         db  0x64 ; 'd'
0000000000000241         db  0x2d ; '-'
0000000000000242         db  0x6c ; 'l'
0000000000000243         db  0x69 ; 'i'
0000000000000244         db  0x6e ; 'n'
0000000000000245         db  0x75 ; 'u'
0000000000000246         db  0x78 ; 'x'
0000000000000247         db  0x2d ; '-'
0000000000000248         db  0x78 ; 'x'
0000000000000249         db  0x38 ; '8'
000000000000024a         db  0x36 ; '6'
000000000000024b         db  0x2d ; '-'
000000000000024c         db  0x36 ; '6'
000000000000024d         db  0x34 ; '4'
000000000000024e         db  0x2e ; '.'
000000000000024f         db  0x73 ; 's'
0000000000000250         db  0x6f ; 'o'
0000000000000251         db  0x2e ; '.'
0000000000000252         db  0x32 ; '2'
0000000000000253         db  0x00 ; '.'


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0x30 ; '0'
0000000000000285         db  0x4c ; 'L'
0000000000000286         db  0x0d ; '.'
0000000000000287         db  0x61 ; 'a'
0000000000000288         db  0xaf ; '.'
0000000000000289         db  0x04 ; '.'
000000000000028a         db  0x35 ; '5'
000000000000028b         db  0x50 ; 'P'
000000000000028c         db  0x82 ; '.'
000000000000028d         db  0xeb ; '.'
000000000000028e         db  0x1c ; '.'
000000000000028f         db  0x89 ; '.'
0000000000000290         db  0x9a ; '.'
0000000000000291         db  0xe5 ; '.'
0000000000000292         db  0x27 ; '''
0000000000000293         db  0xdf ; '.'
0000000000000294         db  0xdb ; '.'
0000000000000295         db  0x5e ; '^'
0000000000000296         db  0x4c ; 'L'
0000000000000297         db  0x6e ; 'n'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2dc[ (68 bytes)
        ; File offset : [664; 732[ (68 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x49 ; 'I'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x06 ; '.'
00000000000002a9         db  0xc9 ; '.'
00000000000002aa         db  0x41 ; 'A'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0x20 ; ' '
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x18 ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x49 ; 'I'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x4a ; 'J'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x50 ; 'P'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x96 ; '.'
00000000000002c5         db  0xa0 ; '.'
00000000000002c6         db  0x89 ; '.'
00000000000002c7         db  0x97 ; '.'
00000000000002c8         db  0xce ; '.'
00000000000002c9         db  0x2c ; ','
00000000000002ca         db  0x63 ; 'c'
00000000000002cb         db  0x72 ; 'r'
00000000000002cc         db  0xe4 ; '.'
00000000000002cd         db  0x62 ; 'b'
00000000000002ce         db  0x41 ; 'A'
00000000000002cf         db  0xf5 ; '.'
00000000000002d0         db  0xc0 ; '.'
00000000000002d1         db  0xb3 ; '.'
00000000000002d2         db  0xf7 ; '.'
00000000000002d3         db  0x12 ; '.'
00000000000002d4         db  0x39 ; '9'
00000000000002d5         db  0xf2 ; '.'
00000000000002d6         db  0x8b ; '.'
00000000000002d7         db  0x1c ; '.'
00000000000002d8         db  0x33 ; '3'
00000000000002d9         db  0xc4 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0x00 ; '.'
00000000000002dd         db  0x00 ; '.'
00000000000002de         db  0x00 ; '.'
00000000000002df         db  0x00 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0xa78[ (1944 bytes)
        ; File offset : [736; 2680[ (1944 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x3b ; ';'
00000000000002f9         db  0x02 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0xdf ; '.'
0000000000000311         db  0x01 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0xba ; '.'
0000000000000329         db  0x01 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0xd5 ; '.'
0000000000000341         db  0x02 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x02 ; '.'
0000000000000359         db  0x02 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x12 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0xab ; '.'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x12 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x34 ; '4'
0000000000000389         db  0x01 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0x72 ; 'r'
00000000000003a1         db  0x00 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0x40 ; '@'
00000000000003b9         db  0x00 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x39 ; '9'
00000000000003d1         db  0x03 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x20 ; ' '
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0xdd ; '.'
00000000000003e9         db  0x00 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0xb1 ; '.'                                         ; DATA XREF=sub_2ca0+69
0000000000000401         db  0x00 ; '.'
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0xf7 ; '.'
0000000000000419         db  0x01 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0x4e ; 'N'
0000000000000431         db  0x01 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x80 ; '.'
0000000000000449         db  0x02 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x0c ; '.'
0000000000000461         db  0x02 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0xab ; '.'
0000000000000479         db  0x02 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x7d ; '}'
0000000000000491         db  0x01 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x0a ; '.'
00000000000004a9         db  0x01 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'                                         ; DATA XREF=__strftime_internal+19, __strftime_internal+220
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x7c ; '|'
00000000000004c1         db  0x02 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x62 ; 'b'
00000000000004d9         db  0x00 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0xf3 ; '.'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x1c ; '.'
0000000000000509         db  0x01 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x7a ; 'z'
0000000000000521         db  0x00 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0xd3 ; '.'
0000000000000539         db  0x01 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x32 ; '2'
0000000000000551         db  0x00 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x23 ; '#'
0000000000000569         db  0x01 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0xbb ; '.'
0000000000000581         db  0x02 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x5a ; 'Z'
0000000000000599         db  0x00 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x12 ; '.'
00000000000005b1         db  0x00 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x70 ; 'p'
00000000000005c9         db  0x01 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x2d ; '-'
00000000000005e1         db  0x01 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x6a ; 'j'
00000000000005f9         db  0x01 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x99 ; '.'
0000000000000611         db  0x02 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x45 ; 'E'
0000000000000629         db  0x01 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0xc6 ; '.'
0000000000000641         db  0x02 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x15 ; '.'
0000000000000659         db  0x01 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x92 ; '.'
0000000000000671         db  0x02 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0xe9 ; '.'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x55 ; 'U'
00000000000006a1         db  0x03 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x20 ; ' '
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x76 ; 'v'
00000000000006b9         db  0x01 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x9a ; '.'
00000000000006d1         db  0x01 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0xb7 ; '.'
00000000000006e9         db  0x00 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0xd8 ; '.'
0000000000000701         db  0x00 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0xe9 ; '.'
0000000000000719         db  0x01 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x8b ; '.'
0000000000000731         db  0x00 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x84 ; '.'
0000000000000749         db  0x01 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x0b ; '.'
0000000000000761         db  0x00 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0xa0 ; '.'
0000000000000779         db  0x01 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x16 ; '.'
0000000000000791         db  0x02 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0xc1 ; '.'
00000000000007a9         db  0x01 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x12 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0xa3 ; '.'
00000000000007c1         db  0x00 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x12 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x28 ; '('
00000000000007d9         db  0x00 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x1b ; '.'
00000000000007f1         db  0x00 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x12 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x00 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x8b ; '.'
0000000000000809         db  0x01 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x12 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x00 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0xd4 ; '.'
0000000000000821         db  0x00 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x12 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x00 ; '.'
0000000000000829         db  0x00 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x00 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x63 ; 'c'
0000000000000839         db  0x02 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x12 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x00 ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x00 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x6c ; 'l'
0000000000000851         db  0x00 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x12 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x00 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x00 ; '.'
0000000000000859         db  0x00 ; '.'
000000000000085a         db  0x00 ; '.'
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x00 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0xb4 ; '.'
0000000000000869         db  0x02 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x12 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x00 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x00 ; '.'
0000000000000871         db  0x00 ; '.'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x00 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x3a ; ':'
0000000000000881         db  0x00 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x12 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x00 ; '.'
0000000000000889         db  0x00 ; '.'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x00 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x48 ; 'H'
0000000000000899         db  0x00 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x12 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x00 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0x00 ; '.'
00000000000008a1         db  0x00 ; '.'
00000000000008a2         db  0x00 ; '.'
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x00 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x4c ; 'L'
00000000000008b1         db  0x01 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x12 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x00 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0x00 ; '.'
00000000000008b9         db  0x00 ; '.'
00000000000008ba         db  0x00 ; '.'
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x00 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0xf5 ; '.'
00000000000008c9         db  0x02 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x12 ; '.'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x00 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0x00 ; '.'
00000000000008d1         db  0x00 ; '.'
00000000000008d2         db  0x00 ; '.'
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x00 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x00 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0xb2 ; '.'
00000000000008e1         db  0x00 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x12 ; '.'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x00 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0x00 ; '.'
00000000000008e9         db  0x00 ; '.'
00000000000008ea         db  0x00 ; '.'
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x00 ; '.'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x00 ; '.'
00000000000008f1         db  0x00 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x00 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'
00000000000008f8         db  0xf0 ; '.'
00000000000008f9         db  0x01 ; '.'
00000000000008fa         db  0x00 ; '.'
00000000000008fb         db  0x00 ; '.'
00000000000008fc         db  0x12 ; '.'
00000000000008fd         db  0x00 ; '.'
00000000000008fe         db  0x00 ; '.'
00000000000008ff         db  0x00 ; '.'
0000000000000900         db  0x00 ; '.'
0000000000000901         db  0x00 ; '.'
0000000000000902         db  0x00 ; '.'
0000000000000903         db  0x00 ; '.'
0000000000000904         db  0x00 ; '.'
0000000000000905         db  0x00 ; '.'
0000000000000906         db  0x00 ; '.'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x00 ; '.'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x00 ; '.'
000000000000090c         db  0x00 ; '.'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x00 ; '.'
000000000000090f         db  0x00 ; '.'
0000000000000910         db  0x55 ; 'U'
0000000000000911         db  0x01 ; '.'
0000000000000912         db  0x00 ; '.'
0000000000000913         db  0x00 ; '.'
0000000000000914         db  0x12 ; '.'
0000000000000915         db  0x00 ; '.'
0000000000000916         db  0x00 ; '.'
0000000000000917         db  0x00 ; '.'
0000000000000918         db  0x00 ; '.'
0000000000000919         db  0x00 ; '.'
000000000000091a         db  0x00 ; '.'
000000000000091b         db  0x00 ; '.'
000000000000091c         db  0x00 ; '.'
000000000000091d         db  0x00 ; '.'
000000000000091e         db  0x00 ; '.'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x00 ; '.'
0000000000000921         db  0x00 ; '.'
0000000000000922         db  0x00 ; '.'
0000000000000923         db  0x00 ; '.'
0000000000000924         db  0x00 ; '.'
0000000000000925         db  0x00 ; '.'
0000000000000926         db  0x00 ; '.'
0000000000000927         db  0x00 ; '.'
0000000000000928         db  0x64 ; 'd'
0000000000000929         db  0x03 ; '.'
000000000000092a         db  0x00 ; '.'
000000000000092b         db  0x00 ; '.'
000000000000092c         db  0x20 ; ' '
000000000000092d         db  0x00 ; '.'
000000000000092e         db  0x00 ; '.'
000000000000092f         db  0x00 ; '.'
0000000000000930         db  0x00 ; '.'
0000000000000931         db  0x00 ; '.'
0000000000000932         db  0x00 ; '.'
0000000000000933         db  0x00 ; '.'
0000000000000934         db  0x00 ; '.'
0000000000000935         db  0x00 ; '.'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x00 ; '.'
0000000000000938         db  0x00 ; '.'
0000000000000939         db  0x00 ; '.'
000000000000093a         db  0x00 ; '.'
000000000000093b         db  0x00 ; '.'
000000000000093c         db  0x00 ; '.'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x00 ; '.'
000000000000093f         db  0x00 ; '.'
0000000000000940         db  0x92 ; '.'
0000000000000941         db  0x01 ; '.'
0000000000000942         db  0x00 ; '.'
0000000000000943         db  0x00 ; '.'
0000000000000944         db  0x12 ; '.'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x00 ; '.'
0000000000000947         db  0x00 ; '.'
0000000000000948         db  0x00 ; '.'
0000000000000949         db  0x00 ; '.'
000000000000094a         db  0x00 ; '.'
000000000000094b         db  0x00 ; '.'
000000000000094c         db  0x00 ; '.'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x00 ; '.'
000000000000094f         db  0x00 ; '.'
0000000000000950         db  0x00 ; '.'
0000000000000951         db  0x00 ; '.'
0000000000000952         db  0x00 ; '.'
0000000000000953         db  0x00 ; '.'
0000000000000954         db  0x00 ; '.'
0000000000000955         db  0x00 ; '.'
0000000000000956         db  0x00 ; '.'
0000000000000957         db  0x00 ; '.'
0000000000000958         db  0x9a ; '.'
0000000000000959         db  0x00 ; '.'
000000000000095a         db  0x00 ; '.'
000000000000095b         db  0x00 ; '.'
000000000000095c         db  0x12 ; '.'
000000000000095d         db  0x00 ; '.'
000000000000095e         db  0x00 ; '.'
000000000000095f         db  0x00 ; '.'
0000000000000960         db  0x00 ; '.'
0000000000000961         db  0x00 ; '.'
0000000000000962         db  0x00 ; '.'
0000000000000963         db  0x00 ; '.'
0000000000000964         db  0x00 ; '.'
0000000000000965         db  0x00 ; '.'
0000000000000966         db  0x00 ; '.'
0000000000000967         db  0x00 ; '.'
0000000000000968         db  0x00 ; '.'
0000000000000969         db  0x00 ; '.'
000000000000096a         db  0x00 ; '.'
000000000000096b         db  0x00 ; '.'
000000000000096c         db  0x00 ; '.'
000000000000096d         db  0x00 ; '.'
000000000000096e         db  0x00 ; '.'
000000000000096f         db  0x00 ; '.'
0000000000000970         db  0x6d ; 'm'
0000000000000971         db  0x02 ; '.'
0000000000000972         db  0x00 ; '.'
0000000000000973         db  0x00 ; '.'
0000000000000974         db  0x22 ; '"'
0000000000000975         db  0x00 ; '.'
0000000000000976         db  0x00 ; '.'
0000000000000977         db  0x00 ; '.'
0000000000000978         db  0x00 ; '.'
0000000000000979         db  0x00 ; '.'
000000000000097a         db  0x00 ; '.'
000000000000097b         db  0x00 ; '.'
000000000000097c         db  0x00 ; '.'
000000000000097d         db  0x00 ; '.'
000000000000097e         db  0x00 ; '.'
000000000000097f         db  0x00 ; '.'
0000000000000980         db  0x00 ; '.'
0000000000000981         db  0x00 ; '.'
0000000000000982         db  0x00 ; '.'
0000000000000983         db  0x00 ; '.'
0000000000000984         db  0x00 ; '.'
0000000000000985         db  0x00 ; '.'
0000000000000986         db  0x00 ; '.'
0000000000000987         db  0x00 ; '.'
0000000000000988         db  0x4f ; 'O'
0000000000000989         db  0x02 ; '.'
000000000000098a         db  0x00 ; '.'
000000000000098b         db  0x00 ; '.'
000000000000098c         db  0x12 ; '.'
000000000000098d         db  0x00 ; '.'
000000000000098e         db  0x00 ; '.'
000000000000098f         db  0x00 ; '.'
0000000000000990         db  0x00 ; '.'
0000000000000991         db  0x00 ; '.'
0000000000000992         db  0x00 ; '.'
0000000000000993         db  0x00 ; '.'
0000000000000994         db  0x00 ; '.'
0000000000000995         db  0x00 ; '.'
0000000000000996         db  0x00 ; '.'
0000000000000997         db  0x00 ; '.'
0000000000000998         db  0x00 ; '.'
0000000000000999         db  0x00 ; '.'
000000000000099a         db  0x00 ; '.'
000000000000099b         db  0x00 ; '.'
000000000000099c         db  0x00 ; '.'
000000000000099d         db  0x00 ; '.'
000000000000099e         db  0x00 ; '.'
000000000000099f         db  0x00 ; '.'
00000000000009a0         db  0xac ; '.'
00000000000009a1         db  0x01 ; '.'
00000000000009a2         db  0x00 ; '.'
00000000000009a3         db  0x00 ; '.'
00000000000009a4         db  0x12 ; '.'
00000000000009a5         db  0x00 ; '.'
00000000000009a6         db  0x00 ; '.'
00000000000009a7         db  0x00 ; '.'
00000000000009a8         db  0x00 ; '.'
00000000000009a9         db  0x00 ; '.'
00000000000009aa         db  0x00 ; '.'
00000000000009ab         db  0x00 ; '.'
00000000000009ac         db  0x00 ; '.'
00000000000009ad         db  0x00 ; '.'
00000000000009ae         db  0x00 ; '.'
00000000000009af         db  0x00 ; '.'
00000000000009b0         db  0x00 ; '.'
00000000000009b1         db  0x00 ; '.'
00000000000009b2         db  0x00 ; '.'
00000000000009b3         db  0x00 ; '.'
00000000000009b4         db  0x00 ; '.'
00000000000009b5         db  0x00 ; '.'
00000000000009b6         db  0x00 ; '.'
00000000000009b7         db  0x00 ; '.'
00000000000009b8         db  0x63 ; 'c'
00000000000009b9         db  0x01 ; '.'
00000000000009ba         db  0x00 ; '.'
00000000000009bb         db  0x00 ; '.'
00000000000009bc         db  0x11 ; '.'
00000000000009bd         db  0x00 ; '.'
00000000000009be         db  0x19 ; '.'
00000000000009bf         db  0x00 ; '.'
00000000000009c0         db  0x88 ; '.'
00000000000009c1         db  0xa0 ; '.'
00000000000009c2         db  0x20 ; ' '
00000000000009c3         db  0x00 ; '.'
00000000000009c4         db  0x00 ; '.'
00000000000009c5         db  0x00 ; '.'
00000000000009c6         db  0x00 ; '.'
00000000000009c7         db  0x00 ; '.'
00000000000009c8         db  0x08 ; '.'
00000000000009c9         db  0x00 ; '.'
00000000000009ca         db  0x00 ; '.'
00000000000009cb         db  0x00 ; '.'
00000000000009cc         db  0x00 ; '.'
00000000000009cd         db  0x00 ; '.'
00000000000009ce         db  0x00 ; '.'
00000000000009cf         db  0x00 ; '.'
00000000000009d0         db  0xda ; '.'
00000000000009d1         db  0x02 ; '.'
00000000000009d2         db  0x00 ; '.'
00000000000009d3         db  0x00 ; '.'
00000000000009d4         db  0x11 ; '.'
00000000000009d5         db  0x00 ; '.'
00000000000009d6         db  0x19 ; '.'
00000000000009d7         db  0x00 ; '.'
00000000000009d8         db  0x80 ; '.'
00000000000009d9         db  0xa0 ; '.'
00000000000009da         db  0x20 ; ' '
00000000000009db         db  0x00 ; '.'
00000000000009dc         db  0x00 ; '.'
00000000000009dd         db  0x00 ; '.'
00000000000009de         db  0x00 ; '.'
00000000000009df         db  0x00 ; '.'
00000000000009e0         db  0x08 ; '.'
00000000000009e1         db  0x00 ; '.'
00000000000009e2         db  0x00 ; '.'
00000000000009e3         db  0x00 ; '.'
00000000000009e4         db  0x00 ; '.'
00000000000009e5         db  0x00 ; '.'
00000000000009e6         db  0x00 ; '.'
00000000000009e7         db  0x00 ; '.'
00000000000009e8         db  0xbc ; '.'
00000000000009e9         db  0x00 ; '.'
00000000000009ea         db  0x00 ; '.'
00000000000009eb         db  0x00 ; '.'
00000000000009ec         db  0x21 ; '!'
00000000000009ed         db  0x00 ; '.'
00000000000009ee         db  0x19 ; '.'
00000000000009ef         db  0x00 ; '.'
00000000000009f0         db  0x98 ; '.'
00000000000009f1         db  0xa0 ; '.'
00000000000009f2         db  0x20 ; ' '
00000000000009f3         db  0x00 ; '.'
00000000000009f4         db  0x00 ; '.'
00000000000009f5         db  0x00 ; '.'
00000000000009f6         db  0x00 ; '.'
00000000000009f7         db  0x00 ; '.'
00000000000009f8         db  0x08 ; '.'
00000000000009f9         db  0x00 ; '.'
00000000000009fa         db  0x00 ; '.'
00000000000009fb         db  0x00 ; '.'
00000000000009fc         db  0x00 ; '.'
00000000000009fd         db  0x00 ; '.'
00000000000009fe         db  0x00 ; '.'
00000000000009ff         db  0x00 ; '.'
0000000000000a00         db  0xe5 ; '.'
0000000000000a01         db  0x02 ; '.'
0000000000000a02         db  0x00 ; '.'
0000000000000a03         db  0x00 ; '.'
0000000000000a04         db  0x11 ; '.'
0000000000000a05         db  0x00 ; '.'
0000000000000a06         db  0x19 ; '.'
0000000000000a07         db  0x00 ; '.'
0000000000000a08         db  0x98 ; '.'
0000000000000a09         db  0xa0 ; '.'
0000000000000a0a         db  0x20 ; ' '
0000000000000a0b         db  0x00 ; '.'
0000000000000a0c         db  0x00 ; '.'
0000000000000a0d         db  0x00 ; '.'
0000000000000a0e         db  0x00 ; '.'
0000000000000a0f         db  0x00 ; '.'
0000000000000a10         db  0x08 ; '.'
0000000000000a11         db  0x00 ; '.'
0000000000000a12         db  0x00 ; '.'
0000000000000a13         db  0x00 ; '.'
0000000000000a14         db  0x00 ; '.'
0000000000000a15         db  0x00 ; '.'
0000000000000a16         db  0x00 ; '.'
0000000000000a17         db  0x00 ; '.'
0000000000000a18         db  0x1d ; '.'
0000000000000a19         db  0x02 ; '.'
0000000000000a1a         db  0x00 ; '.'
0000000000000a1b         db  0x00 ; '.'
0000000000000a1c         db  0x21 ; '!'
0000000000000a1d         db  0x00 ; '.'
0000000000000a1e         db  0x19 ; '.'
0000000000000a1f         db  0x00 ; '.'
0000000000000a20         db  0x80 ; '.'
0000000000000a21         db  0xa0 ; '.'
0000000000000a22         db  0x20 ; ' '
0000000000000a23         db  0x00 ; '.'
0000000000000a24         db  0x00 ; '.'
0000000000000a25         db  0x00 ; '.'
0000000000000a26         db  0x00 ; '.'
0000000000000a27         db  0x00 ; '.'
0000000000000a28         db  0x08 ; '.'
0000000000000a29         db  0x00 ; '.'
0000000000000a2a         db  0x00 ; '.'
0000000000000a2b         db  0x00 ; '.'
0000000000000a2c         db  0x00 ; '.'
0000000000000a2d         db  0x00 ; '.'
0000000000000a2e         db  0x00 ; '.'
0000000000000a2f         db  0x00 ; '.'
0000000000000a30         db  0x8b ; '.'
0000000000000a31         db  0x02 ; '.'
0000000000000a32         db  0x00 ; '.'
0000000000000a33         db  0x00 ; '.'
0000000000000a34         db  0x11 ; '.'
0000000000000a35         db  0x00 ; '.'
0000000000000a36         db  0x19 ; '.'
0000000000000a37         db  0x00 ; '.'
0000000000000a38         db  0xa0 ; '.'
0000000000000a39         db  0xa0 ; '.'
0000000000000a3a         db  0x20 ; ' '
0000000000000a3b         db  0x00 ; '.'
0000000000000a3c         db  0x00 ; '.'
0000000000000a3d         db  0x00 ; '.'
0000000000000a3e         db  0x00 ; '.'
0000000000000a3f         db  0x00 ; '.'
0000000000000a40         db  0x04 ; '.'
0000000000000a41         db  0x00 ; '.'
0000000000000a42         db  0x00 ; '.'
0000000000000a43         db  0x00 ; '.'
0000000000000a44         db  0x00 ; '.'
0000000000000a45         db  0x00 ; '.'
0000000000000a46         db  0x00 ; '.'
0000000000000a47         db  0x00 ; '.'
0000000000000a48         db  0xcc ; '.'
0000000000000a49         db  0x01 ; '.'
0000000000000a4a         db  0x00 ; '.'
0000000000000a4b         db  0x00 ; '.'
0000000000000a4c         db  0x11 ; '.'
0000000000000a4d         db  0x00 ; '.'
0000000000000a4e         db  0x19 ; '.'
0000000000000a4f         db  0x00 ; '.'
0000000000000a50         db  0xc0 ; '.'
0000000000000a51         db  0xa0 ; '.'
0000000000000a52         db  0x20 ; ' '
0000000000000a53         db  0x00 ; '.'
0000000000000a54         db  0x00 ; '.'
0000000000000a55         db  0x00 ; '.'
0000000000000a56         db  0x00 ; '.'
0000000000000a57         db  0x00 ; '.'
0000000000000a58         db  0x08 ; '.'
0000000000000a59         db  0x00 ; '.'
0000000000000a5a         db  0x00 ; '.'
0000000000000a5b         db  0x00 ; '.'
0000000000000a5c         db  0x00 ; '.'
0000000000000a5d         db  0x00 ; '.'
0000000000000a5e         db  0x00 ; '.'
0000000000000a5f         db  0x00 ; '.'
0000000000000a60         db  0x53 ; 'S'
0000000000000a61         db  0x00 ; '.'
0000000000000a62         db  0x00 ; '.'
0000000000000a63         db  0x00 ; '.'
0000000000000a64         db  0x11 ; '.'
0000000000000a65         db  0x00 ; '.'
0000000000000a66         db  0x19 ; '.'
0000000000000a67         db  0x00 ; '.'
0000000000000a68         db  0x90 ; '.'
0000000000000a69         db  0xa0 ; '.'
0000000000000a6a         db  0x20 ; ' '
0000000000000a6b         db  0x00 ; '.'
0000000000000a6c         db  0x00 ; '.'
0000000000000a6d         db  0x00 ; '.'
0000000000000a6e         db  0x00 ; '.'
0000000000000a6f         db  0x00 ; '.'
0000000000000a70         db  0x04 ; '.'
0000000000000a71         db  0x00 ; '.'
0000000000000a72         db  0x00 ; '.'
0000000000000a73         db  0x00 ; '.'
0000000000000a74         db  0x00 ; '.'
0000000000000a75         db  0x00 ; '.'
0000000000000a76         db  0x00 ; '.'
0000000000000a77         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0xa78; 0xdf6[ (894 bytes)
        ; File offset : [2680; 3574[ (894 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000000a78         db  0x00 ; '.'
0000000000000a79         db  0x6c ; 'l'
0000000000000a7a         db  0x69 ; 'i'
0000000000000a7b         db  0x62 ; 'b'
0000000000000a7c         db  0x63 ; 'c'
0000000000000a7d         db  0x2e ; '.'
0000000000000a7e         db  0x73 ; 's'
0000000000000a7f         db  0x6f ; 'o'
0000000000000a80         db  0x2e ; '.'
0000000000000a81         db  0x36 ; '6'
0000000000000a82         db  0x00 ; '.'
0000000000000a83         db  0x66 ; 'f'
0000000000000a84         db  0x66 ; 'f'
0000000000000a85         db  0x6c ; 'l'
0000000000000a86         db  0x75 ; 'u'
0000000000000a87         db  0x73 ; 's'
0000000000000a88         db  0x68 ; 'h'
0000000000000a89         db  0x00 ; '.'
0000000000000a8a         db  0x67 ; 'g'
0000000000000a8b         db  0x6d ; 'm'
0000000000000a8c         db  0x74 ; 't'
0000000000000a8d         db  0x69 ; 'i'
0000000000000a8e         db  0x6d ; 'm'
0000000000000a8f         db  0x65 ; 'e'
0000000000000a90         db  0x5f ; '_'
0000000000000a91         db  0x72 ; 'r'
0000000000000a92         db  0x00 ; '.'
0000000000000a93         db  0x5f ; '_'
0000000000000a94         db  0x5f ; '_'
0000000000000a95         db  0x70 ; 'p'
0000000000000a96         db  0x72 ; 'r'
0000000000000a97         db  0x69 ; 'i'
0000000000000a98         db  0x6e ; 'n'
0000000000000a99         db  0x74 ; 't'
0000000000000a9a         db  0x66 ; 'f'
0000000000000a9b         db  0x5f ; '_'
0000000000000a9c         db  0x63 ; 'c'
0000000000000a9d         db  0x68 ; 'h'
0000000000000a9e         db  0x6b ; 'k'
0000000000000a9f         db  0x00 ; '.'
0000000000000aa0         db  0x73 ; 's'
0000000000000aa1         db  0x65 ; 'e'
0000000000000aa2         db  0x74 ; 't'
0000000000000aa3         db  0x6c ; 'l'
0000000000000aa4         db  0x6f ; 'o'
0000000000000aa5         db  0x63 ; 'c'
0000000000000aa6         db  0x61 ; 'a'
0000000000000aa7         db  0x6c ; 'l'
0000000000000aa8         db  0x65 ; 'e'
0000000000000aa9         db  0x00 ; '.'
0000000000000aaa         db  0x6d ; 'm'
0000000000000aab         db  0x62 ; 'b'
0000000000000aac         db  0x72 ; 'r'
0000000000000aad         db  0x74 ; 't'
0000000000000aae         db  0x6f ; 'o'
0000000000000aaf         db  0x77 ; 'w'
0000000000000ab0         db  0x63 ; 'c'
0000000000000ab1         db  0x00 ; '.'
0000000000000ab2         db  0x66 ; 'f'
0000000000000ab3         db  0x6f ; 'o'
0000000000000ab4         db  0x70 ; 'p'
0000000000000ab5         db  0x65 ; 'e'
0000000000000ab6         db  0x6e ; 'n'
0000000000000ab7         db  0x00 ; '.'
0000000000000ab8         db  0x73 ; 's'
0000000000000ab9         db  0x74 ; 't'
0000000000000aba         db  0x72 ; 'r'
0000000000000abb         db  0x6e ; 'n'
0000000000000abc         db  0x63 ; 'c'
0000000000000abd         db  0x6d ; 'm'
0000000000000abe         db  0x70 ; 'p'
0000000000000abf         db  0x00 ; '.'
0000000000000ac0         db  0x64 ; 'd'
0000000000000ac1         db  0x63 ; 'c'
0000000000000ac2         db  0x6e ; 'n'
0000000000000ac3         db  0x67 ; 'g'
0000000000000ac4         db  0x65 ; 'e'
0000000000000ac5         db  0x74 ; 't'
0000000000000ac6         db  0x74 ; 't'
0000000000000ac7         db  0x65 ; 'e'
0000000000000ac8         db  0x78 ; 'x'
0000000000000ac9         db  0x74 ; 't'
0000000000000aca         db  0x00 ; '.'
0000000000000acb         db  0x6f ; 'o'
0000000000000acc         db  0x70 ; 'p'
0000000000000acd         db  0x74 ; 't'
0000000000000ace         db  0x69 ; 'i'
0000000000000acf         db  0x6e ; 'n'
0000000000000ad0         db  0x64 ; 'd'
0000000000000ad1         db  0x00 ; '.'
0000000000000ad2         db  0x73 ; 's'
0000000000000ad3         db  0x74 ; 't'
0000000000000ad4         db  0x72 ; 'r'
0000000000000ad5         db  0x72 ; 'r'
0000000000000ad6         db  0x63 ; 'c'
0000000000000ad7         db  0x68 ; 'h'
0000000000000ad8         db  0x72 ; 'r'
0000000000000ad9         db  0x00 ; '.'
0000000000000ada         db  0x64 ; 'd'
0000000000000adb         db  0x63 ; 'c'
0000000000000adc         db  0x67 ; 'g'
0000000000000add         db  0x65 ; 'e'
0000000000000ade         db  0x74 ; 't'
0000000000000adf         db  0x74 ; 't'
0000000000000ae0         db  0x65 ; 'e'
0000000000000ae1         db  0x78 ; 'x'
0000000000000ae2         db  0x74 ; 't'
0000000000000ae3         db  0x00 ; '.'
0000000000000ae4         db  0x65 ; 'e'
0000000000000ae5         db  0x72 ; 'r'
0000000000000ae6         db  0x72 ; 'r'
0000000000000ae7         db  0x6f ; 'o'
0000000000000ae8         db  0x72 ; 'r'
0000000000000ae9         db  0x00 ; '.'
0000000000000aea         db  0x73 ; 's'
0000000000000aeb         db  0x74 ; 't'
0000000000000aec         db  0x72 ; 'r'
0000000000000aed         db  0x6e ; 'n'
0000000000000aee         db  0x63 ; 'c'
0000000000000aef         db  0x70 ; 'p'
0000000000000af0         db  0x79 ; 'y'
0000000000000af1         db  0x00 ; '.'
0000000000000af2         db  0x5f ; '_'
0000000000000af3         db  0x5f ; '_'
0000000000000af4         db  0x73 ; 's'
0000000000000af5         db  0x74 ; 't'
0000000000000af6         db  0x61 ; 'a'
0000000000000af7         db  0x63 ; 'c'
0000000000000af8         db  0x6b ; 'k'
0000000000000af9         db  0x5f ; '_'
0000000000000afa         db  0x63 ; 'c'
0000000000000afb         db  0x68 ; 'h'
0000000000000afc         db  0x6b ; 'k'
0000000000000afd         db  0x5f ; '_'
0000000000000afe         db  0x66 ; 'f'
0000000000000aff         db  0x61 ; 'a'
0000000000000b00         db  0x69 ; 'i'
0000000000000b01         db  0x6c ; 'l'
0000000000000b02         db  0x00 ; '.'
0000000000000b03         db  0x66 ; 'f'
0000000000000b04         db  0x67 ; 'g'
0000000000000b05         db  0x65 ; 'e'
0000000000000b06         db  0x74 ; 't'
0000000000000b07         db  0x73 ; 's'
0000000000000b08         db  0x5f ; '_'
0000000000000b09         db  0x75 ; 'u'
0000000000000b0a         db  0x6e ; 'n'
0000000000000b0b         db  0x6c ; 'l'
0000000000000b0c         db  0x6f ; 'o'
0000000000000b0d         db  0x63 ; 'c'
0000000000000b0e         db  0x6b ; 'k'
0000000000000b0f         db  0x65 ; 'e'
0000000000000b10         db  0x64 ; 'd'
0000000000000b11         db  0x00 ; '.'
0000000000000b12         db  0x69 ; 'i'
0000000000000b13         db  0x73 ; 's'
0000000000000b14         db  0x77 ; 'w'
0000000000000b15         db  0x70 ; 'p'
0000000000000b16         db  0x72 ; 'r'
0000000000000b17         db  0x69 ; 'i'
0000000000000b18         db  0x6e ; 'n'
0000000000000b19         db  0x74 ; 't'
0000000000000b1a         db  0x00 ; '.'
0000000000000b1b         db  0x72 ; 'r'
0000000000000b1c         db  0x65 ; 'e'
0000000000000b1d         db  0x61 ; 'a'
0000000000000b1e         db  0x6c ; 'l'
0000000000000b1f         db  0x6c ; 'l'
0000000000000b20         db  0x6f ; 'o'
0000000000000b21         db  0x63 ; 'c'
0000000000000b22         db  0x00 ; '.'
0000000000000b23         db  0x61 ; 'a'
0000000000000b24         db  0x62 ; 'b'
0000000000000b25         db  0x6f ; 'o'
0000000000000b26         db  0x72 ; 'r'
0000000000000b27         db  0x74 ; 't'
0000000000000b28         db  0x00 ; '.'
0000000000000b29         db  0x5f ; '_'
0000000000000b2a         db  0x65 ; 'e'
0000000000000b2b         db  0x78 ; 'x'
0000000000000b2c         db  0x69 ; 'i'
0000000000000b2d         db  0x74 ; 't'
0000000000000b2e         db  0x00 ; '.'
0000000000000b2f         db  0x6b ; 'k'
0000000000000b30         db  0x69 ; 'i'
0000000000000b31         db  0x6c ; 'l'
0000000000000b32         db  0x6c ; 'l'
0000000000000b33         db  0x00 ; '.'
0000000000000b34         db  0x70 ; 'p'
0000000000000b35         db  0x72 ; 'r'
0000000000000b36         db  0x6f ; 'o'
0000000000000b37         db  0x67 ; 'g'
0000000000000b38         db  0x72 ; 'r'
0000000000000b39         db  0x61 ; 'a'
0000000000000b3a         db  0x6d ; 'm'
0000000000000b3b         db  0x5f ; '_'
0000000000000b3c         db  0x69 ; 'i'
0000000000000b3d         db  0x6e ; 'n'
0000000000000b3e         db  0x76 ; 'v'
0000000000000b3f         db  0x6f ; 'o'
0000000000000b40         db  0x63 ; 'c'
0000000000000b41         db  0x61 ; 'a'
0000000000000b42         db  0x74 ; 't'
                     aIonname:
0000000000000b43         db         "ion_name", 0
0000000000000b4c         db  0x73 ; 's'
0000000000000b4d         db  0x74 ; 't'
0000000000000b4e         db  0x72 ; 'r'
0000000000000b4f         db  0x66 ; 'f'
0000000000000b50         db  0x74 ; 't'
0000000000000b51         db  0x69 ; 'i'
0000000000000b52         db  0x6d ; 'm'
0000000000000b53         db  0x65 ; 'e'
0000000000000b54         db  0x00 ; '.'
0000000000000b55         db  0x6c ; 'l'
0000000000000b56         db  0x6f ; 'o'
0000000000000b57         db  0x63 ; 'c'
0000000000000b58         db  0x61 ; 'a'
0000000000000b59         db  0x6c ; 'l'
0000000000000b5a         db  0x74 ; 't'
0000000000000b5b         db  0x69 ; 'i'
0000000000000b5c         db  0x6d ; 'm'
0000000000000b5d         db  0x65 ; 'e'
0000000000000b5e         db  0x5f ; '_'
0000000000000b5f         db  0x72 ; 'r'
0000000000000b60         db  0x00 ; '.'
0000000000000b61         db  0x73 ; 's'
0000000000000b62         db  0x65 ; 'e'
0000000000000b63         db  0x74 ; 't'
0000000000000b64         db  0x75 ; 'u'
0000000000000b65         db  0x74 ; 't'
0000000000000b66         db  0x78 ; 'x'
0000000000000b67         db  0x65 ; 'e'
0000000000000b68         db  0x6e ; 'n'
0000000000000b69         db  0x74 ; 't'
0000000000000b6a         db  0x00 ; '.'
0000000000000b6b         db  0x5f ; '_'
0000000000000b6c         db  0x5f ; '_'
0000000000000b6d         db  0x63 ; 'c'
0000000000000b6e         db  0x74 ; 't'
0000000000000b6f         db  0x79 ; 'y'
0000000000000b70         db  0x70 ; 'p'
0000000000000b71         db  0x65 ; 'e'
0000000000000b72         db  0x5f ; '_'
0000000000000b73         db  0x67 ; 'g'
0000000000000b74         db  0x65 ; 'e'
0000000000000b75         db  0x74 ; 't'
0000000000000b76         db  0x5f ; '_'
0000000000000b77         db  0x6d ; 'm'
0000000000000b78         db  0x62 ; 'b'
0000000000000b79         db  0x5f ; '_'
0000000000000b7a         db  0x63 ; 'c'
0000000000000b7b         db  0x75 ; 'u'
0000000000000b7c         db  0x72 ; 'r'
0000000000000b7d         db  0x5f ; '_'
0000000000000b7e         db  0x6d ; 'm'
0000000000000b7f         db  0x61 ; 'a'
0000000000000b80         db  0x78 ; 'x'
0000000000000b81         db  0x00 ; '.'
0000000000000b82         db  0x67 ; 'g'
0000000000000b83         db  0x65 ; 'e'
0000000000000b84         db  0x74 ; 't'
0000000000000b85         db  0x6c ; 'l'
0000000000000b86         db  0x6f ; 'o'
0000000000000b87         db  0x61 ; 'a'
0000000000000b88         db  0x64 ; 'd'
0000000000000b89         db  0x61 ; 'a'
0000000000000b8a         db  0x76 ; 'v'
0000000000000b8b         db  0x67 ; 'g'
0000000000000b8c         db  0x00 ; '.'
0000000000000b8d         db  0x63 ; 'c'
0000000000000b8e         db  0x61 ; 'a'
0000000000000b8f         db  0x6c ; 'l'
0000000000000b90         db  0x6c ; 'l'
0000000000000b91         db  0x6f ; 'o'
0000000000000b92         db  0x63 ; 'c'
0000000000000b93         db  0x00 ; '.'
0000000000000b94         db  0x73 ; 's'
0000000000000b95         db  0x74 ; 't'
0000000000000b96         db  0x72 ; 'r'
0000000000000b97         db  0x6c ; 'l'
0000000000000b98         db  0x65 ; 'e'
0000000000000b99         db  0x6e ; 'n'
0000000000000b9a         db  0x00 ; '.'
0000000000000b9b         db  0x6e ; 'n'
0000000000000b9c         db  0x65 ; 'e'
0000000000000b9d         db  0x77 ; 'w'
0000000000000b9e         db  0x6c ; 'l'
0000000000000b9f         db  0x6f ; 'o'
0000000000000ba0         db  0x63 ; 'c'
0000000000000ba1         db  0x61 ; 'a'
0000000000000ba2         db  0x6c ; 'l'
0000000000000ba3         db  0x65 ; 'e'
0000000000000ba4         db  0x00 ; '.'
0000000000000ba5         db  0x6d ; 'm'
0000000000000ba6         db  0x65 ; 'e'
0000000000000ba7         db  0x6d ; 'm'
0000000000000ba8         db  0x73 ; 's'
0000000000000ba9         db  0x65 ; 'e'
0000000000000baa         db  0x74 ; 't'
0000000000000bab         db  0x00 ; '.'
0000000000000bac         db  0x5f ; '_'
0000000000000bad         db  0x5f ; '_'
0000000000000bae         db  0x65 ; 'e'
0000000000000baf         db  0x72 ; 'r'
0000000000000bb0         db  0x72 ; 'r'
0000000000000bb1         db  0x6e ; 'n'
0000000000000bb2         db  0x6f ; 'o'
0000000000000bb3         db  0x5f ; '_'
0000000000000bb4         db  0x6c ; 'l'
0000000000000bb5         db  0x6f ; 'o'
0000000000000bb6         db  0x63 ; 'c'
0000000000000bb7         db  0x61 ; 'a'
0000000000000bb8         db  0x74 ; 't'
0000000000000bb9         db  0x69 ; 'i'
0000000000000bba         db  0x6f ; 'o'
0000000000000bbb         db  0x6e ; 'n'
0000000000000bbc         db  0x00 ; '.'
0000000000000bbd         db  0x6d ; 'm'
0000000000000bbe         db  0x65 ; 'e'
0000000000000bbf         db  0x6d ; 'm'
0000000000000bc0         db  0x63 ; 'c'
0000000000000bc1         db  0x6d ; 'm'
0000000000000bc2         db  0x70 ; 'p'
0000000000000bc3         db  0x00 ; '.'
0000000000000bc4         db  0x75 ; 'u'
0000000000000bc5         db  0x6e ; 'n'
0000000000000bc6         db  0x73 ; 's'
0000000000000bc7         db  0x65 ; 'e'
0000000000000bc8         db  0x74 ; 't'
0000000000000bc9         db  0x65 ; 'e'
0000000000000bca         db  0x6e ; 'n'
0000000000000bcb         db  0x76 ; 'v'
0000000000000bcc         db  0x00 ; '.'
0000000000000bcd         db  0x5f ; '_'
0000000000000bce         db  0x5f ; '_'
0000000000000bcf         db  0x66 ; 'f'
0000000000000bd0         db  0x70 ; 'p'
0000000000000bd1         db  0x72 ; 'r'
0000000000000bd2         db  0x69 ; 'i'
0000000000000bd3         db  0x6e ; 'n'
0000000000000bd4         db  0x74 ; 't'
0000000000000bd5         db  0x66 ; 'f'
0000000000000bd6         db  0x5f ; '_'
0000000000000bd7         db  0x63 ; 'c'
0000000000000bd8         db  0x68 ; 'h'
0000000000000bd9         db  0x6b ; 'k'
0000000000000bda         db  0x00 ; '.'
0000000000000bdb         db  0x73 ; 's'
0000000000000bdc         db  0x74 ; 't'
0000000000000bdd         db  0x64 ; 'd'
0000000000000bde         db  0x6f ; 'o'
0000000000000bdf         db  0x75 ; 'u'
0000000000000be0         db  0x74 ; 't'
0000000000000be1         db  0x00 ; '.'
0000000000000be2         db  0x66 ; 'f'
0000000000000be3         db  0x70 ; 'p'
0000000000000be4         db  0x75 ; 'u'
0000000000000be5         db  0x74 ; 't'
0000000000000be6         db  0x63 ; 'c'
0000000000000be7         db  0x00 ; '.'
0000000000000be8         db  0x6c ; 'l'
0000000000000be9         db  0x73 ; 's'
0000000000000bea         db  0x65 ; 'e'
0000000000000beb         db  0x65 ; 'e'
0000000000000bec         db  0x6b ; 'k'
0000000000000bed         db  0x00 ; '.'
0000000000000bee         db  0x6d ; 'm'
0000000000000bef         db  0x65 ; 'e'
0000000000000bf0         db  0x6d ; 'm'
0000000000000bf1         db  0x63 ; 'c'
0000000000000bf2         db  0x70 ; 'p'
0000000000000bf3         db  0x79 ; 'y'
0000000000000bf4         db  0x00 ; '.'
0000000000000bf5         db  0x66 ; 'f'
0000000000000bf6         db  0x63 ; 'c'
0000000000000bf7         db  0x6c ; 'l'
0000000000000bf8         db  0x6f ; 'o'
0000000000000bf9         db  0x73 ; 's'
0000000000000bfa         db  0x65 ; 'e'
0000000000000bfb         db  0x00 ; '.'
0000000000000bfc         db  0x6d ; 'm'
0000000000000bfd         db  0x61 ; 'a'
0000000000000bfe         db  0x6c ; 'l'
0000000000000bff         db  0x6c ; 'l'
0000000000000c00         db  0x6f ; 'o'
0000000000000c01         db  0x63 ; 'c'
0000000000000c02         db  0x00 ; '.'
0000000000000c03         db  0x74 ; 't'
0000000000000c04         db  0x69 ; 'i'
0000000000000c05         db  0x6d ; 'm'
0000000000000c06         db  0x65 ; 'e'
0000000000000c07         db  0x67 ; 'g'
0000000000000c08         db  0x6d ; 'm'
0000000000000c09         db  0x00 ; '.'
0000000000000c0a         db  0x6d ; 'm'
0000000000000c0b         db  0x62 ; 'b'
0000000000000c0c         db  0x73 ; 's'
0000000000000c0d         db  0x69 ; 'i'
0000000000000c0e         db  0x6e ; 'n'
0000000000000c0f         db  0x69 ; 'i'
0000000000000c10         db  0x74 ; 't'
0000000000000c11         db  0x00 ; '.'
0000000000000c12         db  0x74 ; 't'
0000000000000c13         db  0x7a ; 'z'
0000000000000c14         db  0x73 ; 's'
0000000000000c15         db  0x65 ; 'e'
0000000000000c16         db  0x74 ; 't'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x6e ; 'n'
0000000000000c19         db  0x6c ; 'l'
0000000000000c1a         db  0x5f ; '_'
0000000000000c1b         db  0x6c ; 'l'
0000000000000c1c         db  0x61 ; 'a'
0000000000000c1d         db  0x6e ; 'n'
0000000000000c1e         db  0x67 ; 'g'
0000000000000c1f         db  0x69 ; 'i'
0000000000000c20         db  0x6e ; 'n'
0000000000000c21         db  0x66 ; 'f'
0000000000000c22         db  0x6f ; 'o'
0000000000000c23         db  0x00 ; '.'
0000000000000c24         db  0x5f ; '_'
0000000000000c25         db  0x5f ; '_'
0000000000000c26         db  0x63 ; 'c'
0000000000000c27         db  0x74 ; 't'
0000000000000c28         db  0x79 ; 'y'
0000000000000c29         db  0x70 ; 'p'
0000000000000c2a         db  0x65 ; 'e'
0000000000000c2b         db  0x5f ; '_'
0000000000000c2c         db  0x62 ; 'b'
0000000000000c2d         db  0x5f ; '_'
0000000000000c2e         db  0x6c ; 'l'
0000000000000c2f         db  0x6f ; 'o'
0000000000000c30         db  0x63 ; 'c'
0000000000000c31         db  0x00 ; '.'
0000000000000c32         db  0x67 ; 'g'
0000000000000c33         db  0x65 ; 'e'
0000000000000c34         db  0x74 ; 't'
0000000000000c35         db  0x65 ; 'e'
0000000000000c36         db  0x6e ; 'n'
0000000000000c37         db  0x76 ; 'v'
0000000000000c38         db  0x00 ; '.'
0000000000000c39         db  0x5f ; '_'
0000000000000c3a         db  0x5f ; '_'
0000000000000c3b         db  0x66 ; 'f'
0000000000000c3c         db  0x72 ; 'r'
0000000000000c3d         db  0x65 ; 'e'
0000000000000c3e         db  0x61 ; 'a'
0000000000000c3f         db  0x64 ; 'd'
0000000000000c40         db  0x69 ; 'i'
0000000000000c41         db  0x6e ; 'n'
0000000000000c42         db  0x67 ; 'g'
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x73 ; 's'
0000000000000c45         db  0x74 ; 't'
0000000000000c46         db  0x64 ; 'd'
0000000000000c47         db  0x65 ; 'e'
0000000000000c48         db  0x72 ; 'r'
0000000000000c49         db  0x72 ; 'r'
0000000000000c4a         db  0x00 ; '.'
0000000000000c4b         db  0x67 ; 'g'
0000000000000c4c         db  0x65 ; 'e'
0000000000000c4d         db  0x74 ; 't'
0000000000000c4e         db  0x6f ; 'o'
0000000000000c4f         db  0x70 ; 'p'
0000000000000c50         db  0x74 ; 't'
0000000000000c51         db  0x5f ; '_'
0000000000000c52         db  0x6c ; 'l'
0000000000000c53         db  0x6f ; 'o'
0000000000000c54         db  0x6e ; 'n'
0000000000000c55         db  0x67 ; 'g'
0000000000000c56         db  0x00 ; '.'
0000000000000c57         db  0x75 ; 'u'
0000000000000c58         db  0x74 ; 't'
0000000000000c59         db  0x6d ; 'm'
0000000000000c5a         db  0x70 ; 'p'
0000000000000c5b         db  0x78 ; 'x'
0000000000000c5c         db  0x6e ; 'n'
0000000000000c5d         db  0x61 ; 'a'
0000000000000c5e         db  0x6d ; 'm'
0000000000000c5f         db  0x65 ; 'e'
0000000000000c60         db  0x00 ; '.'
0000000000000c61         db  0x66 ; 'f'
0000000000000c62         db  0x69 ; 'i'
0000000000000c63         db  0x6c ; 'l'
0000000000000c64         db  0x65 ; 'e'
0000000000000c65         db  0x6e ; 'n'
0000000000000c66         db  0x6f ; 'o'
0000000000000c67         db  0x00 ; '.'
0000000000000c68         db  0x66 ; 'f'
0000000000000c69         db  0x77 ; 'w'
0000000000000c6a         db  0x72 ; 'r'
0000000000000c6b         db  0x69 ; 'i'
0000000000000c6c         db  0x74 ; 't'
0000000000000c6d         db  0x65 ; 'e'
0000000000000c6e         db  0x00 ; '.'
0000000000000c6f         db  0x5f ; '_'
0000000000000c70         db  0x5f ; '_'
0000000000000c71         db  0x66 ; 'f'
0000000000000c72         db  0x70 ; 'p'
0000000000000c73         db  0x65 ; 'e'
0000000000000c74         db  0x6e ; 'n'
0000000000000c75         db  0x64 ; 'd'
0000000000000c76         db  0x69 ; 'i'
0000000000000c77         db  0x6e ; 'n'
0000000000000c78         db  0x67 ; 'g'
0000000000000c79         db  0x00 ; '.'
0000000000000c7a         db  0x6c ; 'l'
0000000000000c7b         db  0x6f ; 'o'
0000000000000c7c         db  0x63 ; 'c'
0000000000000c7d         db  0x61 ; 'a'
0000000000000c7e         db  0x6c ; 'l'
0000000000000c7f         db  0x74 ; 't'
0000000000000c80         db  0x69 ; 'i'
0000000000000c81         db  0x6d ; 'm'
0000000000000c82         db  0x65 ; 'e'
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x65 ; 'e'
0000000000000c85         db  0x6e ; 'n'
0000000000000c86         db  0x64 ; 'd'
0000000000000c87         db  0x75 ; 'u'
0000000000000c88         db  0x74 ; 't'
0000000000000c89         db  0x78 ; 'x'
0000000000000c8a         db  0x65 ; 'e'
0000000000000c8b         db  0x6e ; 'n'
0000000000000c8c         db  0x74 ; 't'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x6d ; 'm'
0000000000000c8f         db  0x6b ; 'k'
0000000000000c90         db  0x74 ; 't'
0000000000000c91         db  0x69 ; 'i'
0000000000000c92         db  0x6d ; 'm'
0000000000000c93         db  0x65 ; 'e'
0000000000000c94         db  0x00 ; '.'
0000000000000c95         db  0x70 ; 'p'
0000000000000c96         db  0x72 ; 'r'
0000000000000c97         db  0x6f ; 'o'
0000000000000c98         db  0x67 ; 'g'
0000000000000c99         db  0x72 ; 'r'
0000000000000c9a         db  0x61 ; 'a'
0000000000000c9b         db  0x6d ; 'm'
0000000000000c9c         db  0x5f ; '_'
0000000000000c9d         db  0x69 ; 'i'
0000000000000c9e         db  0x6e ; 'n'
0000000000000c9f         db  0x76 ; 'v'
0000000000000ca0         db  0x6f ; 'o'
0000000000000ca1         db  0x63 ; 'c'
0000000000000ca2         db  0x61 ; 'a'
0000000000000ca3         db  0x74 ; 't'
0000000000000ca4         db  0x69 ; 'i'
0000000000000ca5         db  0x6f ; 'o'
0000000000000ca6         db  0x6e ; 'n'
0000000000000ca7         db  0x5f ; '_'
0000000000000ca8         db  0x73 ; 's'
0000000000000ca9         db  0x68 ; 'h'
0000000000000caa         db  0x6f ; 'o'
0000000000000cab         db  0x72 ; 'r'
0000000000000cac         db  0x74 ; 't'
0000000000000cad         db  0x5f ; '_'
0000000000000cae         db  0x6e ; 'n'
0000000000000caf         db  0x61 ; 'a'
0000000000000cb0         db  0x6d ; 'm'
0000000000000cb1         db  0x65 ; 'e'
0000000000000cb2         db  0x00 ; '.'
0000000000000cb3         db  0x5f ; '_'
0000000000000cb4         db  0x5f ; '_'
0000000000000cb5         db  0x63 ; 'c'
0000000000000cb6         db  0x74 ; 't'
0000000000000cb7         db  0x79 ; 'y'
0000000000000cb8         db  0x70 ; 'p'
0000000000000cb9         db  0x65 ; 'e'
0000000000000cba         db  0x5f ; '_'
0000000000000cbb         db  0x74 ; 't'
0000000000000cbc         db  0x6f ; 'o'
0000000000000cbd         db  0x75 ; 'u'
0000000000000cbe         db  0x70 ; 'p'
0000000000000cbf         db  0x70 ; 'p'
0000000000000cc0         db  0x65 ; 'e'
0000000000000cc1         db  0x72 ; 'r'
0000000000000cc2         db  0x5f ; '_'
0000000000000cc3         db  0x6c ; 'l'
0000000000000cc4         db  0x6f ; 'o'
0000000000000cc5         db  0x63 ; 'c'
0000000000000cc6         db  0x00 ; '.'
0000000000000cc7         db  0x5f ; '_'
0000000000000cc8         db  0x5f ; '_'
0000000000000cc9         db  0x63 ; 'c'
0000000000000cca         db  0x74 ; 't'
0000000000000ccb         db  0x79 ; 'y'
0000000000000ccc         db  0x70 ; 'p'
0000000000000ccd         db  0x65 ; 'e'
0000000000000cce         db  0x5f ; '_'
0000000000000ccf         db  0x74 ; 't'
0000000000000cd0         db  0x6f ; 'o'
0000000000000cd1         db  0x6c ; 'l'
0000000000000cd2         db  0x6f ; 'o'
0000000000000cd3         db  0x77 ; 'w'
0000000000000cd4         db  0x65 ; 'e'
0000000000000cd5         db  0x72 ; 'r'
0000000000000cd6         db  0x5f ; '_'
0000000000000cd7         db  0x6c ; 'l'
0000000000000cd8         db  0x6f ; 'o'
0000000000000cd9         db  0x63 ; 'c'
0000000000000cda         db  0x00 ; '.'
0000000000000cdb         db  0x67 ; 'g'
0000000000000cdc         db  0x65 ; 'e'
0000000000000cdd         db  0x74 ; 't'
0000000000000cde         db  0x75 ; 'u'
0000000000000cdf         db  0x74 ; 't'
0000000000000ce0         db  0x78 ; 'x'
0000000000000ce1         db  0x65 ; 'e'
0000000000000ce2         db  0x6e ; 'n'
0000000000000ce3         db  0x74 ; 't'
0000000000000ce4         db  0x00 ; '.'
0000000000000ce5         db  0x5f ; '_'
0000000000000ce6         db  0x5f ; '_'
0000000000000ce7         db  0x63 ; 'c'
0000000000000ce8         db  0x78 ; 'x'
0000000000000ce9         db  0x61 ; 'a'
0000000000000cea         db  0x5f ; '_'
0000000000000ceb         db  0x66 ; 'f'
0000000000000cec         db  0x69 ; 'i'
0000000000000ced         db  0x6e ; 'n'
0000000000000cee         db  0x61 ; 'a'
0000000000000cef         db  0x6c ; 'l'
0000000000000cf0         db  0x69 ; 'i'
0000000000000cf1         db  0x7a ; 'z'
0000000000000cf2         db  0x65 ; 'e'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x62 ; 'b'
0000000000000cf5         db  0x69 ; 'i'
0000000000000cf6         db  0x6e ; 'n'
0000000000000cf7         db  0x64 ; 'd'
0000000000000cf8         db  0x74 ; 't'
0000000000000cf9         db  0x65 ; 'e'
0000000000000cfa         db  0x78 ; 'x'
0000000000000cfb         db  0x74 ; 't'
0000000000000cfc         db  0x64 ; 'd'
0000000000000cfd         db  0x6f ; 'o'
0000000000000cfe         db  0x6d ; 'm'
0000000000000cff         db  0x61 ; 'a'
0000000000000d00         db  0x69 ; 'i'
0000000000000d01         db  0x6e ; 'n'
0000000000000d02         db  0x00 ; '.'
0000000000000d03         db  0x6f ; 'o'
0000000000000d04         db  0x70 ; 'p'
0000000000000d05         db  0x74 ; 't'
0000000000000d06         db  0x65 ; 'e'
0000000000000d07         db  0x72 ; 'r'
0000000000000d08         db  0x72 ; 'r'
0000000000000d09         db  0x00 ; '.'
0000000000000d0a         db  0x73 ; 's'
0000000000000d0b         db  0x74 ; 't'
0000000000000d0c         db  0x72 ; 'r'
0000000000000d0d         db  0x63 ; 'c'
0000000000000d0e         db  0x6d ; 'm'
0000000000000d0f         db  0x70 ; 'p'
0000000000000d10         db  0x00 ; '.'
0000000000000d11         db  0x5f ; '_'
0000000000000d12         db  0x5f ; '_'
0000000000000d13         db  0x6c ; 'l'
0000000000000d14         db  0x69 ; 'i'
0000000000000d15         db  0x62 ; 'b'
0000000000000d16         db  0x63 ; 'c'
0000000000000d17         db  0x5f ; '_'
0000000000000d18         db  0x73 ; 's'
0000000000000d19         db  0x74 ; 't'
0000000000000d1a         db  0x61 ; 'a'
0000000000000d1b         db  0x72 ; 'r'
0000000000000d1c         db  0x74 ; 't'
0000000000000d1d         db  0x5f ; '_'
0000000000000d1e         db  0x6d ; 'm'
0000000000000d1f         db  0x61 ; 'a'
0000000000000d20         db  0x69 ; 'i'
0000000000000d21         db  0x6e ; 'n'
0000000000000d22         db  0x00 ; '.'
0000000000000d23         db  0x73 ; 's'
0000000000000d24         db  0x74 ; 't'
0000000000000d25         db  0x72 ; 'r'
0000000000000d26         db  0x74 ; 't'
0000000000000d27         db  0x6f ; 'o'
0000000000000d28         db  0x64 ; 'd'
0000000000000d29         db  0x5f ; '_'
0000000000000d2a         db  0x6c ; 'l'
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x66 ; 'f'
0000000000000d2d         db  0x73 ; 's'
0000000000000d2e         db  0x65 ; 'e'
0000000000000d2f         db  0x65 ; 'e'
0000000000000d30         db  0x6b ; 'k'
0000000000000d31         db  0x6f ; 'o'
0000000000000d32         db  0x00 ; '.'
0000000000000d33         db  0x5f ; '_'
0000000000000d34         db  0x5f ; '_'
0000000000000d35         db  0x6f ; 'o'
0000000000000d36         db  0x76 ; 'v'
0000000000000d37         db  0x65 ; 'e'
0000000000000d38         db  0x72 ; 'r'
0000000000000d39         db  0x66 ; 'f'
0000000000000d3a         db  0x6c ; 'l'
0000000000000d3b         db  0x6f ; 'o'
0000000000000d3c         db  0x77 ; 'w'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x66 ; 'f'
0000000000000d3f         db  0x70 ; 'p'
0000000000000d40         db  0x75 ; 'u'
0000000000000d41         db  0x74 ; 't'
0000000000000d42         db  0x73 ; 's'
0000000000000d43         db  0x5f ; '_'
0000000000000d44         db  0x75 ; 'u'
0000000000000d45         db  0x6e ; 'n'
0000000000000d46         db  0x6c ; 'l'
0000000000000d47         db  0x6f ; 'o'
0000000000000d48         db  0x63 ; 'c'
0000000000000d49         db  0x6b ; 'k'
0000000000000d4a         db  0x65 ; 'e'
0000000000000d4b         db  0x64 ; 'd'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x66 ; 'f'
0000000000000d4e         db  0x72 ; 'r'
0000000000000d4f         db  0x65 ; 'e'
0000000000000d50         db  0x65 ; 'e'
0000000000000d51         db  0x00 ; '.'
0000000000000d52         db  0x5f ; '_'
0000000000000d53         db  0x5f ; '_'
0000000000000d54         db  0x70 ; 'p'
0000000000000d55         db  0x72 ; 'r'
0000000000000d56         db  0x6f ; 'o'
0000000000000d57         db  0x67 ; 'g'
0000000000000d58         db  0x6e ; 'n'
0000000000000d59         db  0x61 ; 'a'
0000000000000d5a         db  0x6d ; 'm'
0000000000000d5b         db  0x65 ; 'e'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x5f ; '_'
0000000000000d5e         db  0x5f ; '_'
0000000000000d5f         db  0x70 ; 'p'
0000000000000d60         db  0x72 ; 'r'
0000000000000d61         db  0x6f ; 'o'
0000000000000d62         db  0x67 ; 'g'
0000000000000d63         db  0x6e ; 'n'
0000000000000d64         db  0x61 ; 'a'
0000000000000d65         db  0x6d ; 'm'
0000000000000d66         db  0x65 ; 'e'
0000000000000d67         db  0x5f ; '_'
0000000000000d68         db  0x66 ; 'f'
0000000000000d69         db  0x75 ; 'u'
0000000000000d6a         db  0x6c ; 'l'
0000000000000d6b         db  0x6c ; 'l'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x5f ; '_'
0000000000000d6e         db  0x5f ; '_'
0000000000000d6f         db  0x63 ; 'c'
0000000000000d70         db  0x78 ; 'x'
0000000000000d71         db  0x61 ; 'a'
0000000000000d72         db  0x5f ; '_'
0000000000000d73         db  0x61 ; 'a'
0000000000000d74         db  0x74 ; 't'
0000000000000d75         db  0x65 ; 'e'
0000000000000d76         db  0x78 ; 'x'
0000000000000d77         db  0x69 ; 'i'
0000000000000d78         db  0x74 ; 't'
0000000000000d79         db  0x00 ; '.'
0000000000000d7a         db  0x47 ; 'G'
0000000000000d7b         db  0x4c ; 'L'
0000000000000d7c         db  0x49 ; 'I'
0000000000000d7d         db  0x42 ; 'B'
0000000000000d7e         db  0x43 ; 'C'
0000000000000d7f         db  0x5f ; '_'
0000000000000d80         db  0x32 ; '2'
0000000000000d81         db  0x2e ; '.'
0000000000000d82         db  0x33 ; '3'
0000000000000d83         db  0x2e ; '.'
0000000000000d84         db  0x34 ; '4'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x47 ; 'G'
0000000000000d87         db  0x4c ; 'L'
0000000000000d88         db  0x49 ; 'I'
0000000000000d89         db  0x42 ; 'B'
0000000000000d8a         db  0x43 ; 'C'
0000000000000d8b         db  0x5f ; '_'
0000000000000d8c         db  0x32 ; '2'
0000000000000d8d         db  0x2e ; '.'
0000000000000d8e         db  0x31 ; '1'
0000000000000d8f         db  0x34 ; '4'
0000000000000d90         db  0x00 ; '.'
0000000000000d91         db  0x47 ; 'G'
0000000000000d92         db  0x4c ; 'L'
0000000000000d93         db  0x49 ; 'I'
0000000000000d94         db  0x42 ; 'B'
0000000000000d95         db  0x43 ; 'C'
0000000000000d96         db  0x5f ; '_'
0000000000000d97         db  0x32 ; '2'
0000000000000d98         db  0x2e ; '.'
0000000000000d99         db  0x34 ; '4'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x47 ; 'G'
0000000000000d9c         db  0x4c ; 'L'
0000000000000d9d         db  0x49 ; 'I'
0000000000000d9e         db  0x42 ; 'B'
0000000000000d9f         db  0x43 ; 'C'
0000000000000da0         db  0x5f ; '_'
0000000000000da1         db  0x32 ; '2'
0000000000000da2         db  0x2e ; '.'
0000000000000da3         db  0x32 ; '2'
0000000000000da4         db  0x2e ; '.'
0000000000000da5         db  0x35 ; '5'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x47 ; 'G'
0000000000000da8         db  0x4c ; 'L'
0000000000000da9         db  0x49 ; 'I'
0000000000000daa         db  0x42 ; 'B'
0000000000000dab         db  0x43 ; 'C'
0000000000000dac         db  0x5f ; '_'
0000000000000dad         db  0x32 ; '2'
0000000000000dae         db  0x2e ; '.'
0000000000000daf         db  0x33 ; '3'
0000000000000db0         db  0x00 ; '.'
0000000000000db1         db  0x5f ; '_'
0000000000000db2         db  0x49 ; 'I'
0000000000000db3         db  0x54 ; 'T'
0000000000000db4         db  0x4d ; 'M'
0000000000000db5         db  0x5f ; '_'
0000000000000db6         db  0x64 ; 'd'
0000000000000db7         db  0x65 ; 'e'
0000000000000db8         db  0x72 ; 'r'
0000000000000db9         db  0x65 ; 'e'
0000000000000dba         db  0x67 ; 'g'
0000000000000dbb         db  0x69 ; 'i'
0000000000000dbc         db  0x73 ; 's'
0000000000000dbd         db  0x74 ; 't'
0000000000000dbe         db  0x65 ; 'e'
0000000000000dbf         db  0x72 ; 'r'
0000000000000dc0         db  0x54 ; 'T'
0000000000000dc1         db  0x4d ; 'M'
0000000000000dc2         db  0x43 ; 'C'
0000000000000dc3         db  0x6c ; 'l'
0000000000000dc4         db  0x6f ; 'o'
0000000000000dc5         db  0x6e ; 'n'
0000000000000dc6         db  0x65 ; 'e'
0000000000000dc7         db  0x54 ; 'T'
0000000000000dc8         db  0x61 ; 'a'
0000000000000dc9         db  0x62 ; 'b'
0000000000000dca         db  0x6c ; 'l'
0000000000000dcb         db  0x65 ; 'e'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x5f ; '_'
0000000000000dce         db  0x5f ; '_'
0000000000000dcf         db  0x67 ; 'g'
0000000000000dd0         db  0x6d ; 'm'
0000000000000dd1         db  0x6f ; 'o'
0000000000000dd2         db  0x6e ; 'n'
0000000000000dd3         db  0x5f ; '_'
0000000000000dd4         db  0x73 ; 's'
0000000000000dd5         db  0x74 ; 't'
0000000000000dd6         db  0x61 ; 'a'
0000000000000dd7         db  0x72 ; 'r'
0000000000000dd8         db  0x74 ; 't'
0000000000000dd9         db  0x5f ; '_'
0000000000000dda         db  0x5f ; '_'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x5f ; '_'
0000000000000ddd         db  0x49 ; 'I'
0000000000000dde         db  0x54 ; 'T'
0000000000000ddf         db  0x4d ; 'M'
0000000000000de0         db  0x5f ; '_'
0000000000000de1         db  0x72 ; 'r'
0000000000000de2         db  0x65 ; 'e'
0000000000000de3         db  0x67 ; 'g'
0000000000000de4         db  0x69 ; 'i'
0000000000000de5         db  0x73 ; 's'
0000000000000de6         db  0x74 ; 't'
0000000000000de7         db  0x65 ; 'e'
0000000000000de8         db  0x72 ; 'r'
0000000000000de9         db  0x54 ; 'T'
0000000000000dea         db  0x4d ; 'M'
0000000000000deb         db  0x43 ; 'C'
0000000000000dec         db  0x6c ; 'l'
0000000000000ded         db  0x6f ; 'o'
0000000000000dee         db  0x6e ; 'n'
0000000000000def         db  0x65 ; 'e'
0000000000000df0         db  0x54 ; 'T'
0000000000000df1         db  0x61 ; 'a'
0000000000000df2         db  0x62 ; 'b'
0000000000000df3         db  0x6c ; 'l'
0000000000000df4         db  0x65 ; 'e'
0000000000000df5         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xdf6; 0xe98[ (162 bytes)
        ; File offset : [3574; 3736[ (162 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x02 ; '.'
0000000000000df9         db  0x00 ; '.'
0000000000000dfa         db  0x03 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x03 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x03 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x03 ; '.'
0000000000000e01         db  0x00 ; '.'
0000000000000e02         db  0x03 ; '.'
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x03 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x03 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x03 ; '.'
0000000000000e09         db  0x00 ; '.'
0000000000000e0a         db  0x00 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x03 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x03 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x03 ; '.'                                         ; DATA XREF=print_uptime+305
0000000000000e11         db  0x00 ; '.'
0000000000000e12         db  0x03 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x03 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x03 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x02 ; '.'
0000000000000e19         db  0x00 ; '.'
0000000000000e1a         db  0x03 ; '.'
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x03 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x03 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x03 ; '.'
0000000000000e21         db  0x00 ; '.'
0000000000000e22         db  0x03 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x03 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x04 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x03 ; '.'
0000000000000e29         db  0x00 ; '.'
0000000000000e2a         db  0x03 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x02 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x03 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x03 ; '.'
0000000000000e31         db  0x00 ; '.'
0000000000000e32         db  0x03 ; '.'
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x03 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x03 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x03 ; '.'
0000000000000e39         db  0x00 ; '.'
0000000000000e3a         db  0x03 ; '.'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x03 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x03 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x03 ; '.'
0000000000000e41         db  0x00 ; '.'
0000000000000e42         db  0x03 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x03 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x05 ; '.'
0000000000000e49         db  0x00 ; '.'
0000000000000e4a         db  0x03 ; '.'
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x03 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x03 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x03 ; '.'
0000000000000e51         db  0x00 ; '.'
0000000000000e52         db  0x03 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x03 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x03 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x03 ; '.'
0000000000000e59         db  0x00 ; '.'
0000000000000e5a         db  0x03 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x03 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x03 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0x03 ; '.'
0000000000000e61         db  0x00 ; '.'
0000000000000e62         db  0x06 ; '.'
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x03 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x03 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x03 ; '.'
0000000000000e69         db  0x00 ; '.'
0000000000000e6a         db  0x03 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x03 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x03 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x03 ; '.'
0000000000000e71         db  0x00 ; '.'
0000000000000e72         db  0x03 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x03 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x03 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x03 ; '.'
0000000000000e79         db  0x00 ; '.'
0000000000000e7a         db  0x06 ; '.'
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x03 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0x03 ; '.'
0000000000000e81         db  0x00 ; '.'
0000000000000e82         db  0x03 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x02 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x02 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x03 ; '.'
0000000000000e89         db  0x00 ; '.'
0000000000000e8a         db  0x03 ; '.'
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x03 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x03 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x03 ; '.'
0000000000000e91         db  0x00 ; '.'
0000000000000e92         db  0x03 ; '.'
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x03 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x03 ; '.'
0000000000000e97         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xe98; 0xef8[ (96 bytes)
        ; File offset : [3736; 3832[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000e98         db  0x01 ; '.'
0000000000000e99         db  0x00 ; '.'
0000000000000e9a         db  0x05 ; '.'
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x01 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x10 ; '.'
0000000000000ea1         db  0x00 ; '.'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0x74 ; 't'
0000000000000ea9         db  0x19 ; '.'
0000000000000eaa         db  0x69 ; 'i'
0000000000000eab         db  0x09 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x06 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x02 ; '.'
0000000000000eb1         db  0x03 ; '.'
0000000000000eb2         db  0x00 ; '.'
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x10 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x94 ; '.'
0000000000000eb9         db  0x91 ; '.'
0000000000000eba         db  0x96 ; '.'
0000000000000ebb         db  0x06 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x05 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x0e ; '.'
0000000000000ec1         db  0x03 ; '.'
0000000000000ec2         db  0x00 ; '.'
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x10 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x14 ; '.'
0000000000000ec9         db  0x69 ; 'i'
0000000000000eca         db  0x69 ; 'i'
0000000000000ecb         db  0x0d ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x04 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x19 ; '.'
0000000000000ed1         db  0x03 ; '.'
0000000000000ed2         db  0x00 ; '.'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x10 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x75 ; 'u'
0000000000000ed9         db  0x1a ; '.'
0000000000000eda         db  0x69 ; 'i'
0000000000000edb         db  0x09 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x03 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x23 ; '#'
0000000000000ee1         db  0x03 ; '.'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x10 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x13 ; '.'
0000000000000ee9         db  0x69 ; 'i'
0000000000000eea         db  0x69 ; 'i'
0000000000000eeb         db  0x0d ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x02 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x2f ; '/'
0000000000000ef1         db  0x03 ; '.'
0000000000000ef2         db  0x00 ; '.'
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xef8; 0x11b0[ (696 bytes)
        ; File offset : [3832; 4528[ (696 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000ef8         db  0xf0 ; '.'
0000000000000ef9         db  0x9a ; '.'
0000000000000efa         db  0x20 ; ' '
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x08 ; '.'
0000000000000f01         db  0x00 ; '.'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x80 ; '.'
0000000000000f09         db  0x1e ; '.'
0000000000000f0a         db  0x00 ; '.'
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0xf8 ; '.'
0000000000000f11         db  0x9a ; '.'
0000000000000f12         db  0x20 ; ' '
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x08 ; '.'
0000000000000f19         db  0x00 ; '.'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x40 ; '@'
0000000000000f21         db  0x1e ; '.'
0000000000000f22         db  0x00 ; '.'
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x00 ; '.'
0000000000000f29         db  0x9b ; '.'
0000000000000f2a         db  0x20 ; ' '
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x08 ; '.'
0000000000000f31         db  0x00 ; '.'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x82 ; '.'
0000000000000f39         db  0x7f ; '.'
0000000000000f3a         db  0x00 ; '.'
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x20 ; ' '
0000000000000f41         db  0x9b ; '.'
0000000000000f42         db  0x20 ; ' '
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x00 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x08 ; '.'
0000000000000f49         db  0x00 ; '.'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x87 ; '.'
0000000000000f51         db  0x7f ; '.'
0000000000000f52         db  0x00 ; '.'
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x60 ; '`'
0000000000000f59         db  0x9b ; '.'
0000000000000f5a         db  0x20 ; ' '
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x00 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x08 ; '.'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0xe9 ; '.'
0000000000000f69         db  0x7f ; '.'
0000000000000f6a         db  0x00 ; '.'
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x68 ; 'h'
0000000000000f71         db  0x9b ; '.'
0000000000000f72         db  0x20 ; ' '
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x00 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x08 ; '.'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x00 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0xf1 ; '.'
0000000000000f81         db  0x7f ; '.'
0000000000000f82         db  0x00 ; '.'
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x70 ; 'p'
0000000000000f89         db  0x9b ; '.'
0000000000000f8a         db  0x20 ; ' '
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x08 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0xf7 ; '.'
0000000000000f99         db  0x7f ; '.'
0000000000000f9a         db  0x00 ; '.'
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x78 ; 'x'
0000000000000fa1         db  0x9b ; '.'
0000000000000fa2         db  0x20 ; ' '
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x00 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x08 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x04 ; '.'
0000000000000fb1         db  0x80 ; '.'
0000000000000fb2         db  0x00 ; '.'
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x80 ; '.'
0000000000000fb9         db  0x9b ; '.'
0000000000000fba         db  0x20 ; ' '
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x00 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x08 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x11 ; '.'
0000000000000fc9         db  0x80 ; '.'
0000000000000fca         db  0x00 ; '.'
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x88 ; '.'
0000000000000fd1         db  0x9b ; '.'
0000000000000fd2         db  0x20 ; ' '
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x00 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x08 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x25 ; '%'
0000000000000fe1         db  0x80 ; '.'
0000000000000fe2         db  0x00 ; '.'
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x90 ; '.'
0000000000000fe9         db  0x9b ; '.'
0000000000000fea         db  0x20 ; ' '
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x00 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x08 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x27 ; '''
0000000000000ff9         db  0x80 ; '.'
0000000000000ffa         db  0x00 ; '.'
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0x98 ; '.'
0000000000001001         db  0x9b ; '.'
0000000000001002         db  0x20 ; ' '
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x00 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x08 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x0a ; '.'
0000000000001011         db  0x80 ; '.'
0000000000001012         db  0x00 ; '.'
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0xa0 ; '.'
0000000000001019         db  0x9b ; '.'
000000000000101a         db  0x20 ; ' '
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x00 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x08 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x72 ; 'r'
0000000000001029         db  0x7a ; 'z'
000000000000102a         db  0x00 ; '.'
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0xa8 ; '.'
0000000000001031         db  0x9b ; '.'
0000000000001032         db  0x20 ; ' '
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x00 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x08 ; '.'
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x2f ; '/'
0000000000001041         db  0x80 ; '.'
0000000000001042         db  0x00 ; '.'
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x08 ; '.'
0000000000001049         db  0xa0 ; '.'
000000000000104a         db  0x20 ; ' '
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x00 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x08 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x08 ; '.'
0000000000001059         db  0xa0 ; '.'
000000000000105a         db  0x20 ; ' '
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x10 ; '.'
0000000000001061         db  0xa0 ; '.'
0000000000001062         db  0x20 ; ' '
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x00 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x08 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x58 ; 'X'
0000000000001071         db  0x7d ; '}'
0000000000001072         db  0x00 ; '.'
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x60 ; '`'
0000000000001079         db  0xa0 ; '.'
000000000000107a         db  0x20 ; ' '
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x08 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x70 ; 'p'
0000000000001089         db  0xa0 ; '.'
000000000000108a         db  0x20 ; ' '
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x78 ; 'x'
0000000000001091         db  0xa0 ; '.'
0000000000001092         db  0x20 ; ' '
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x00 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x08 ; '.'
0000000000001099         db  0x00 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x00 ; '.'
00000000000010a1         db  0xa1 ; '.'
00000000000010a2         db  0x20 ; ' '
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0xd8 ; '.'
00000000000010a9         db  0x9f ; '.'
00000000000010aa         db  0x20 ; ' '
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x06 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x0a ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x00 ; '.'
00000000000010b9         db  0x00 ; '.'
00000000000010ba         db  0x00 ; '.'
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0xe0 ; '.'
00000000000010c1         db  0x9f ; '.'
00000000000010c2         db  0x20 ; ' '
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x00 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x06 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x22 ; '"'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x00 ; '.'
00000000000010d1         db  0x00 ; '.'
00000000000010d2         db  0x00 ; '.'
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0xe8 ; '.'
00000000000010d9         db  0x9f ; '.'
00000000000010da         db  0x20 ; ' '
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x06 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x28 ; '('
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x00 ; '.'
00000000000010e9         db  0x00 ; '.'
00000000000010ea         db  0x00 ; '.'
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0xf0 ; '.'
00000000000010f1         db  0x9f ; '.'
00000000000010f2         db  0x20 ; ' '
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x00 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x06 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x43 ; 'C'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x00 ; '.'
0000000000001101         db  0x00 ; '.'
0000000000001102         db  0x00 ; '.'
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0xf8 ; '.'
0000000000001109         db  0x9f ; '.'
000000000000110a         db  0x20 ; ' '
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x00 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x06 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x46 ; 'F'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x00 ; '.'
0000000000001119         db  0x00 ; '.'
000000000000111a         db  0x00 ; '.'
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x80 ; '.'
0000000000001121         db  0xa0 ; '.'
0000000000001122         db  0x20 ; ' '
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x00 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x05 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x4a ; 'J'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x00 ; '.'
0000000000001131         db  0x00 ; '.'
0000000000001132         db  0x00 ; '.'
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x88 ; '.'
0000000000001139         db  0xa0 ; '.'
000000000000113a         db  0x20 ; ' '
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x00 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x05 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x49 ; 'I'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x00 ; '.'
0000000000001149         db  0x00 ; '.'
000000000000114a         db  0x00 ; '.'
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x90 ; '.'
0000000000001151         db  0xa0 ; '.'
0000000000001152         db  0x20 ; ' '
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x00 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x05 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x50 ; 'P'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x00 ; '.'
0000000000001161         db  0x00 ; '.'
0000000000001162         db  0x00 ; '.'
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x98 ; '.'
0000000000001169         db  0xa0 ; '.'
000000000000116a         db  0x20 ; ' '
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x00 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x05 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x4c ; 'L'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x00 ; '.'
0000000000001179         db  0x00 ; '.'
000000000000117a         db  0x00 ; '.'
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0xa0 ; '.'
0000000000001181         db  0xa0 ; '.'
0000000000001182         db  0x20 ; ' '
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x00 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x05 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x4e ; 'N'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x00 ; '.'
0000000000001191         db  0x00 ; '.'
0000000000001192         db  0x00 ; '.'
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0xc0 ; '.'
0000000000001199         db  0xa0 ; '.'
000000000000119a         db  0x20 ; ' '
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x00 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x05 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x4f ; 'O'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x00 ; '.'
00000000000011a9         db  0x00 ; '.'
00000000000011aa         db  0x00 ; '.'
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x11b0; 0x17f8[ (1608 bytes)
        ; File offset : [4528; 6136[ (1608 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

00000000000011b0         db  0xc0 ; '.'
00000000000011b1         db  0x9d ; '.'
00000000000011b2         db  0x20 ; ' '
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x00 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x07 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x01 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x00 ; '.'
00000000000011c1         db  0x00 ; '.'
00000000000011c2         db  0x00 ; '.'
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0xc8 ; '.'
00000000000011c9         db  0x9d ; '.'
00000000000011ca         db  0x20 ; ' '
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x00 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x07 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x02 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x00 ; '.'
00000000000011d9         db  0x00 ; '.'
00000000000011da         db  0x00 ; '.'
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0xd0 ; '.'
00000000000011e1         db  0x9d ; '.'
00000000000011e2         db  0x20 ; ' '
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x00 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x07 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x03 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x00 ; '.'
00000000000011f1         db  0x00 ; '.'
00000000000011f2         db  0x00 ; '.'
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0xd8 ; '.'
00000000000011f9         db  0x9d ; '.'
00000000000011fa         db  0x20 ; ' '
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x00 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x07 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x04 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x00 ; '.'
0000000000001209         db  0x00 ; '.'
000000000000120a         db  0x00 ; '.'
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0xe0 ; '.'
0000000000001211         db  0x9d ; '.'
0000000000001212         db  0x20 ; ' '
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x00 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x07 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x05 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x00 ; '.'
0000000000001221         db  0x00 ; '.'
0000000000001222         db  0x00 ; '.'
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0xe8 ; '.'
0000000000001229         db  0x9d ; '.'
000000000000122a         db  0x20 ; ' '
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x00 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x07 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x06 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x00 ; '.'
0000000000001239         db  0x00 ; '.'
000000000000123a         db  0x00 ; '.'
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0xf0 ; '.'
0000000000001241         db  0x9d ; '.'
0000000000001242         db  0x20 ; ' '
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x00 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x07 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x07 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x00 ; '.'
0000000000001251         db  0x00 ; '.'
0000000000001252         db  0x00 ; '.'
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0xf8 ; '.'
0000000000001259         db  0x9d ; '.'
000000000000125a         db  0x20 ; ' '
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x00 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x07 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x08 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x00 ; '.'
0000000000001269         db  0x00 ; '.'
000000000000126a         db  0x00 ; '.'
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x00 ; '.'
0000000000001271         db  0x9e ; '.'
0000000000001272         db  0x20 ; ' '
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x00 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x07 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x09 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x00 ; '.'
0000000000001281         db  0x00 ; '.'
0000000000001282         db  0x00 ; '.'
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x08 ; '.'
0000000000001289         db  0x9e ; '.'
000000000000128a         db  0x20 ; ' '
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x00 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x07 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x0b ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x00 ; '.'
0000000000001299         db  0x00 ; '.'
000000000000129a         db  0x00 ; '.'
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x10 ; '.'
00000000000012a1         db  0x9e ; '.'
00000000000012a2         db  0x20 ; ' '
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x00 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x07 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x0c ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x00 ; '.'
00000000000012b1         db  0x00 ; '.'
00000000000012b2         db  0x00 ; '.'
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x18 ; '.'
00000000000012b9         db  0x9e ; '.'
00000000000012ba         db  0x20 ; ' '
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x00 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x07 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x0d ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x00 ; '.'
00000000000012c9         db  0x00 ; '.'
00000000000012ca         db  0x00 ; '.'
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x20 ; ' '
00000000000012d1         db  0x9e ; '.'
00000000000012d2         db  0x20 ; ' '
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x00 ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x07 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x0e ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x00 ; '.'
00000000000012e1         db  0x00 ; '.'
00000000000012e2         db  0x00 ; '.'
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x28 ; '('
00000000000012e9         db  0x9e ; '.'
00000000000012ea         db  0x20 ; ' '
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x00 ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x07 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x0f ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x00 ; '.'
00000000000012f9         db  0x00 ; '.'
00000000000012fa         db  0x00 ; '.'
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x30 ; '0'
0000000000001301         db  0x9e ; '.'
0000000000001302         db  0x20 ; ' '
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x00 ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x07 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x10 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x00 ; '.'
0000000000001311         db  0x00 ; '.'
0000000000001312         db  0x00 ; '.'
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x38 ; '8'
0000000000001319         db  0x9e ; '.'
000000000000131a         db  0x20 ; ' '
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x00 ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x07 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x11 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x00 ; '.'
0000000000001329         db  0x00 ; '.'
000000000000132a         db  0x00 ; '.'
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x40 ; '@'
0000000000001331         db  0x9e ; '.'
0000000000001332         db  0x20 ; ' '
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x00 ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x07 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x12 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x00 ; '.'
0000000000001341         db  0x00 ; '.'
0000000000001342         db  0x00 ; '.'
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x48 ; 'H'
0000000000001349         db  0x9e ; '.'
000000000000134a         db  0x20 ; ' '
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x00 ; '.'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x07 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x13 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x00 ; '.'
0000000000001359         db  0x00 ; '.'
000000000000135a         db  0x00 ; '.'
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x50 ; 'P'
0000000000001361         db  0x9e ; '.'
0000000000001362         db  0x20 ; ' '
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x00 ; '.'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x07 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x14 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x00 ; '.'
0000000000001371         db  0x00 ; '.'
0000000000001372         db  0x00 ; '.'
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x58 ; 'X'
0000000000001379         db  0x9e ; '.'
000000000000137a         db  0x20 ; ' '
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x00 ; '.'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x07 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x15 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x00 ; '.'
0000000000001389         db  0x00 ; '.'
000000000000138a         db  0x00 ; '.'
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x60 ; '`'
0000000000001391         db  0x9e ; '.'
0000000000001392         db  0x20 ; ' '
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x00 ; '.'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x07 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x16 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x00 ; '.'
00000000000013a1         db  0x00 ; '.'
00000000000013a2         db  0x00 ; '.'
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x68 ; 'h'
00000000000013a9         db  0x9e ; '.'
00000000000013aa         db  0x20 ; ' '
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x00 ; '.'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x07 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x17 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x00 ; '.'
00000000000013b9         db  0x00 ; '.'
00000000000013ba         db  0x00 ; '.'
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x00 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x70 ; 'p'
00000000000013c1         db  0x9e ; '.'
00000000000013c2         db  0x20 ; ' '
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x00 ; '.'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x07 ; '.'
00000000000013c9         db  0x00 ; '.'
00000000000013ca         db  0x00 ; '.'
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x18 ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x00 ; '.'
00000000000013d1         db  0x00 ; '.'
00000000000013d2         db  0x00 ; '.'
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x00 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x78 ; 'x'
00000000000013d9         db  0x9e ; '.'
00000000000013da         db  0x20 ; ' '
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x00 ; '.'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x07 ; '.'
00000000000013e1         db  0x00 ; '.'
00000000000013e2         db  0x00 ; '.'
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x19 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x00 ; '.'
00000000000013e9         db  0x00 ; '.'
00000000000013ea         db  0x00 ; '.'
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x00 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x80 ; '.'
00000000000013f1         db  0x9e ; '.'
00000000000013f2         db  0x20 ; ' '
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x00 ; '.'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x07 ; '.'
00000000000013f9         db  0x00 ; '.'
00000000000013fa         db  0x00 ; '.'
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x1a ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x00 ; '.'
0000000000001401         db  0x00 ; '.'
0000000000001402         db  0x00 ; '.'
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x00 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x88 ; '.'
0000000000001409         db  0x9e ; '.'
000000000000140a         db  0x20 ; ' '
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x00 ; '.'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x07 ; '.'
0000000000001411         db  0x00 ; '.'
0000000000001412         db  0x00 ; '.'
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x1b ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0x00 ; '.'
0000000000001419         db  0x00 ; '.'
000000000000141a         db  0x00 ; '.'
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x00 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x90 ; '.'
0000000000001421         db  0x9e ; '.'
0000000000001422         db  0x20 ; ' '
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x00 ; '.'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x07 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x00 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x1c ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x00 ; '.'
0000000000001431         db  0x00 ; '.'
0000000000001432         db  0x00 ; '.'
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x00 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x98 ; '.'
0000000000001439         db  0x9e ; '.'
000000000000143a         db  0x20 ; ' '
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x00 ; '.'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x07 ; '.'
0000000000001441         db  0x00 ; '.'
0000000000001442         db  0x00 ; '.'
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x1d ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0x00 ; '.'
0000000000001449         db  0x00 ; '.'
000000000000144a         db  0x00 ; '.'
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x00 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0xa0 ; '.'
0000000000001451         db  0x9e ; '.'
0000000000001452         db  0x20 ; ' '
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x00 ; '.'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x07 ; '.'
0000000000001459         db  0x00 ; '.'
000000000000145a         db  0x00 ; '.'
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x1e ; '.'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0x00 ; '.'
0000000000001461         db  0x00 ; '.'
0000000000001462         db  0x00 ; '.'
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x00 ; '.'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0xa8 ; '.'
0000000000001469         db  0x9e ; '.'
000000000000146a         db  0x20 ; ' '
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x00 ; '.'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x07 ; '.'
0000000000001471         db  0x00 ; '.'
0000000000001472         db  0x00 ; '.'
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x1f ; '.'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0x00 ; '.'
0000000000001479         db  0x00 ; '.'
000000000000147a         db  0x00 ; '.'
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x00 ; '.'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0xb0 ; '.'
0000000000001481         db  0x9e ; '.'
0000000000001482         db  0x20 ; ' '
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x00 ; '.'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0x07 ; '.'
0000000000001489         db  0x00 ; '.'
000000000000148a         db  0x00 ; '.'
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x20 ; ' '
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0x00 ; '.'
0000000000001491         db  0x00 ; '.'
0000000000001492         db  0x00 ; '.'
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x00 ; '.'
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0xb8 ; '.'
0000000000001499         db  0x9e ; '.'
000000000000149a         db  0x20 ; ' '
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x00 ; '.'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0x07 ; '.'
00000000000014a1         db  0x00 ; '.'
00000000000014a2         db  0x00 ; '.'
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x21 ; '!'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0x00 ; '.'
00000000000014a9         db  0x00 ; '.'
00000000000014aa         db  0x00 ; '.'
00000000000014ab         db  0x00 ; '.'
00000000000014ac         db  0x00 ; '.'
00000000000014ad         db  0x00 ; '.'
00000000000014ae         db  0x00 ; '.'
00000000000014af         db  0x00 ; '.'
00000000000014b0         db  0xc0 ; '.'
00000000000014b1         db  0x9e ; '.'
00000000000014b2         db  0x20 ; ' '
00000000000014b3         db  0x00 ; '.'
00000000000014b4         db  0x00 ; '.'
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x00 ; '.'
00000000000014b7         db  0x00 ; '.'
00000000000014b8         db  0x07 ; '.'
00000000000014b9         db  0x00 ; '.'
00000000000014ba         db  0x00 ; '.'
00000000000014bb         db  0x00 ; '.'
00000000000014bc         db  0x23 ; '#'
00000000000014bd         db  0x00 ; '.'
00000000000014be         db  0x00 ; '.'
00000000000014bf         db  0x00 ; '.'
00000000000014c0         db  0x00 ; '.'
00000000000014c1         db  0x00 ; '.'
00000000000014c2         db  0x00 ; '.'
00000000000014c3         db  0x00 ; '.'
00000000000014c4         db  0x00 ; '.'
00000000000014c5         db  0x00 ; '.'
00000000000014c6         db  0x00 ; '.'
00000000000014c7         db  0x00 ; '.'
00000000000014c8         db  0xc8 ; '.'
00000000000014c9         db  0x9e ; '.'
00000000000014ca         db  0x20 ; ' '
00000000000014cb         db  0x00 ; '.'
00000000000014cc         db  0x00 ; '.'
00000000000014cd         db  0x00 ; '.'
00000000000014ce         db  0x00 ; '.'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0x07 ; '.'
00000000000014d1         db  0x00 ; '.'
00000000000014d2         db  0x00 ; '.'
00000000000014d3         db  0x00 ; '.'
00000000000014d4         db  0x24 ; '$'
00000000000014d5         db  0x00 ; '.'
00000000000014d6         db  0x00 ; '.'
00000000000014d7         db  0x00 ; '.'
00000000000014d8         db  0x00 ; '.'
00000000000014d9         db  0x00 ; '.'
00000000000014da         db  0x00 ; '.'
00000000000014db         db  0x00 ; '.'
00000000000014dc         db  0x00 ; '.'
00000000000014dd         db  0x00 ; '.'
00000000000014de         db  0x00 ; '.'
00000000000014df         db  0x00 ; '.'
00000000000014e0         db  0xd0 ; '.'
00000000000014e1         db  0x9e ; '.'
00000000000014e2         db  0x20 ; ' '
00000000000014e3         db  0x00 ; '.'
00000000000014e4         db  0x00 ; '.'
00000000000014e5         db  0x00 ; '.'
00000000000014e6         db  0x00 ; '.'
00000000000014e7         db  0x00 ; '.'
00000000000014e8         db  0x07 ; '.'
00000000000014e9         db  0x00 ; '.'
00000000000014ea         db  0x00 ; '.'
00000000000014eb         db  0x00 ; '.'
00000000000014ec         db  0x25 ; '%'
00000000000014ed         db  0x00 ; '.'
00000000000014ee         db  0x00 ; '.'
00000000000014ef         db  0x00 ; '.'
00000000000014f0         db  0x00 ; '.'
00000000000014f1         db  0x00 ; '.'
00000000000014f2         db  0x00 ; '.'
00000000000014f3         db  0x00 ; '.'
00000000000014f4         db  0x00 ; '.'
00000000000014f5         db  0x00 ; '.'
00000000000014f6         db  0x00 ; '.'
00000000000014f7         db  0x00 ; '.'
00000000000014f8         db  0xd8 ; '.'
00000000000014f9         db  0x9e ; '.'
00000000000014fa         db  0x20 ; ' '
00000000000014fb         db  0x00 ; '.'
00000000000014fc         db  0x00 ; '.'
00000000000014fd         db  0x00 ; '.'
00000000000014fe         db  0x00 ; '.'
00000000000014ff         db  0x00 ; '.'
0000000000001500         db  0x07 ; '.'
0000000000001501         db  0x00 ; '.'
0000000000001502         db  0x00 ; '.'
0000000000001503         db  0x00 ; '.'
0000000000001504         db  0x26 ; '&'
0000000000001505         db  0x00 ; '.'
0000000000001506         db  0x00 ; '.'
0000000000001507         db  0x00 ; '.'
0000000000001508         db  0x00 ; '.'
0000000000001509         db  0x00 ; '.'
000000000000150a         db  0x00 ; '.'
000000000000150b         db  0x00 ; '.'
000000000000150c         db  0x00 ; '.'
000000000000150d         db  0x00 ; '.'
000000000000150e         db  0x00 ; '.'
000000000000150f         db  0x00 ; '.'
0000000000001510         db  0xe0 ; '.'
0000000000001511         db  0x9e ; '.'
0000000000001512         db  0x20 ; ' '
0000000000001513         db  0x00 ; '.'
0000000000001514         db  0x00 ; '.'
0000000000001515         db  0x00 ; '.'
0000000000001516         db  0x00 ; '.'
0000000000001517         db  0x00 ; '.'
0000000000001518         db  0x07 ; '.'
0000000000001519         db  0x00 ; '.'
000000000000151a         db  0x00 ; '.'
000000000000151b         db  0x00 ; '.'
000000000000151c         db  0x27 ; '''
000000000000151d         db  0x00 ; '.'
000000000000151e         db  0x00 ; '.'
000000000000151f         db  0x00 ; '.'
0000000000001520         db  0x00 ; '.'
0000000000001521         db  0x00 ; '.'
0000000000001522         db  0x00 ; '.'
0000000000001523         db  0x00 ; '.'
0000000000001524         db  0x00 ; '.'
0000000000001525         db  0x00 ; '.'
0000000000001526         db  0x00 ; '.'
0000000000001527         db  0x00 ; '.'
0000000000001528         db  0xe8 ; '.'
0000000000001529         db  0x9e ; '.'
000000000000152a         db  0x20 ; ' '
000000000000152b         db  0x00 ; '.'
000000000000152c         db  0x00 ; '.'
000000000000152d         db  0x00 ; '.'
000000000000152e         db  0x00 ; '.'
000000000000152f         db  0x00 ; '.'
0000000000001530         db  0x07 ; '.'
0000000000001531         db  0x00 ; '.'
0000000000001532         db  0x00 ; '.'
0000000000001533         db  0x00 ; '.'
0000000000001534         db  0x29 ; ')'
0000000000001535         db  0x00 ; '.'
0000000000001536         db  0x00 ; '.'
0000000000001537         db  0x00 ; '.'
0000000000001538         db  0x00 ; '.'
0000000000001539         db  0x00 ; '.'
000000000000153a         db  0x00 ; '.'
000000000000153b         db  0x00 ; '.'
000000000000153c         db  0x00 ; '.'
000000000000153d         db  0x00 ; '.'
000000000000153e         db  0x00 ; '.'
000000000000153f         db  0x00 ; '.'
0000000000001540         db  0xf0 ; '.'
0000000000001541         db  0x9e ; '.'
0000000000001542         db  0x20 ; ' '
0000000000001543         db  0x00 ; '.'
0000000000001544         db  0x00 ; '.'
0000000000001545         db  0x00 ; '.'
0000000000001546         db  0x00 ; '.'
0000000000001547         db  0x00 ; '.'
0000000000001548         db  0x07 ; '.'
0000000000001549         db  0x00 ; '.'
000000000000154a         db  0x00 ; '.'
000000000000154b         db  0x00 ; '.'
000000000000154c         db  0x2a ; '*'
000000000000154d         db  0x00 ; '.'
000000000000154e         db  0x00 ; '.'
000000000000154f         db  0x00 ; '.'
0000000000001550         db  0x00 ; '.'
0000000000001551         db  0x00 ; '.'
0000000000001552         db  0x00 ; '.'
0000000000001553         db  0x00 ; '.'
0000000000001554         db  0x00 ; '.'
0000000000001555         db  0x00 ; '.'
0000000000001556         db  0x00 ; '.'
0000000000001557         db  0x00 ; '.'
0000000000001558         db  0xf8 ; '.'
0000000000001559         db  0x9e ; '.'
000000000000155a         db  0x20 ; ' '
000000000000155b         db  0x00 ; '.'
000000000000155c         db  0x00 ; '.'
000000000000155d         db  0x00 ; '.'
000000000000155e         db  0x00 ; '.'
000000000000155f         db  0x00 ; '.'
0000000000001560         db  0x07 ; '.'
0000000000001561         db  0x00 ; '.'
0000000000001562         db  0x00 ; '.'
0000000000001563         db  0x00 ; '.'
0000000000001564         db  0x2b ; '+'
0000000000001565         db  0x00 ; '.'
0000000000001566         db  0x00 ; '.'
0000000000001567         db  0x00 ; '.'
0000000000001568         db  0x00 ; '.'
0000000000001569         db  0x00 ; '.'
000000000000156a         db  0x00 ; '.'
000000000000156b         db  0x00 ; '.'
000000000000156c         db  0x00 ; '.'
000000000000156d         db  0x00 ; '.'
000000000000156e         db  0x00 ; '.'
000000000000156f         db  0x00 ; '.'
0000000000001570         db  0x00 ; '.'
0000000000001571         db  0x9f ; '.'
0000000000001572         db  0x20 ; ' '
0000000000001573         db  0x00 ; '.'
0000000000001574         db  0x00 ; '.'
0000000000001575         db  0x00 ; '.'
0000000000001576         db  0x00 ; '.'
0000000000001577         db  0x00 ; '.'
0000000000001578         db  0x07 ; '.'
0000000000001579         db  0x00 ; '.'
000000000000157a         db  0x00 ; '.'
000000000000157b         db  0x00 ; '.'
000000000000157c         db  0x2c ; ','
000000000000157d         db  0x00 ; '.'
000000000000157e         db  0x00 ; '.'
000000000000157f         db  0x00 ; '.'
0000000000001580         db  0x00 ; '.'
0000000000001581         db  0x00 ; '.'
0000000000001582         db  0x00 ; '.'
0000000000001583         db  0x00 ; '.'
0000000000001584         db  0x00 ; '.'
0000000000001585         db  0x00 ; '.'
0000000000001586         db  0x00 ; '.'
0000000000001587         db  0x00 ; '.'
0000000000001588         db  0x08 ; '.'
0000000000001589         db  0x9f ; '.'
000000000000158a         db  0x20 ; ' '
000000000000158b         db  0x00 ; '.'
000000000000158c         db  0x00 ; '.'
000000000000158d         db  0x00 ; '.'
000000000000158e         db  0x00 ; '.'
000000000000158f         db  0x00 ; '.'
0000000000001590         db  0x07 ; '.'
0000000000001591         db  0x00 ; '.'
0000000000001592         db  0x00 ; '.'
0000000000001593         db  0x00 ; '.'
0000000000001594         db  0x2d ; '-'
0000000000001595         db  0x00 ; '.'
0000000000001596         db  0x00 ; '.'
0000000000001597         db  0x00 ; '.'
0000000000001598         db  0x00 ; '.'
0000000000001599         db  0x00 ; '.'
000000000000159a         db  0x00 ; '.'
000000000000159b         db  0x00 ; '.'
000000000000159c         db  0x00 ; '.'
000000000000159d         db  0x00 ; '.'
000000000000159e         db  0x00 ; '.'
000000000000159f         db  0x00 ; '.'
00000000000015a0         db  0x10 ; '.'
00000000000015a1         db  0x9f ; '.'
00000000000015a2         db  0x20 ; ' '
00000000000015a3         db  0x00 ; '.'
00000000000015a4         db  0x00 ; '.'
00000000000015a5         db  0x00 ; '.'
00000000000015a6         db  0x00 ; '.'
00000000000015a7         db  0x00 ; '.'
00000000000015a8         db  0x07 ; '.'
00000000000015a9         db  0x00 ; '.'
00000000000015aa         db  0x00 ; '.'
00000000000015ab         db  0x00 ; '.'
00000000000015ac         db  0x2e ; '.'
00000000000015ad         db  0x00 ; '.'
00000000000015ae         db  0x00 ; '.'
00000000000015af         db  0x00 ; '.'
00000000000015b0         db  0x00 ; '.'
00000000000015b1         db  0x00 ; '.'
00000000000015b2         db  0x00 ; '.'
00000000000015b3         db  0x00 ; '.'
00000000000015b4         db  0x00 ; '.'
00000000000015b5         db  0x00 ; '.'
00000000000015b6         db  0x00 ; '.'
00000000000015b7         db  0x00 ; '.'
00000000000015b8         db  0x18 ; '.'
00000000000015b9         db  0x9f ; '.'
00000000000015ba         db  0x20 ; ' '
00000000000015bb         db  0x00 ; '.'
00000000000015bc         db  0x00 ; '.'
00000000000015bd         db  0x00 ; '.'
00000000000015be         db  0x00 ; '.'
00000000000015bf         db  0x00 ; '.'
00000000000015c0         db  0x07 ; '.'
00000000000015c1         db  0x00 ; '.'
00000000000015c2         db  0x00 ; '.'
00000000000015c3         db  0x00 ; '.'
00000000000015c4         db  0x2f ; '/'
00000000000015c5         db  0x00 ; '.'
00000000000015c6         db  0x00 ; '.'
00000000000015c7         db  0x00 ; '.'
00000000000015c8         db  0x00 ; '.'
00000000000015c9         db  0x00 ; '.'
00000000000015ca         db  0x00 ; '.'
00000000000015cb         db  0x00 ; '.'
00000000000015cc         db  0x00 ; '.'
00000000000015cd         db  0x00 ; '.'
00000000000015ce         db  0x00 ; '.'
00000000000015cf         db  0x00 ; '.'
00000000000015d0         db  0x20 ; ' '
00000000000015d1         db  0x9f ; '.'
00000000000015d2         db  0x20 ; ' '
00000000000015d3         db  0x00 ; '.'
00000000000015d4         db  0x00 ; '.'
00000000000015d5         db  0x00 ; '.'
00000000000015d6         db  0x00 ; '.'
00000000000015d7         db  0x00 ; '.'
00000000000015d8         db  0x07 ; '.'
00000000000015d9         db  0x00 ; '.'
00000000000015da         db  0x00 ; '.'
00000000000015db         db  0x00 ; '.'
00000000000015dc         db  0x30 ; '0'
00000000000015dd         db  0x00 ; '.'
00000000000015de         db  0x00 ; '.'
00000000000015df         db  0x00 ; '.'
00000000000015e0         db  0x00 ; '.'
00000000000015e1         db  0x00 ; '.'
00000000000015e2         db  0x00 ; '.'
00000000000015e3         db  0x00 ; '.'
00000000000015e4         db  0x00 ; '.'
00000000000015e5         db  0x00 ; '.'
00000000000015e6         db  0x00 ; '.'
00000000000015e7         db  0x00 ; '.'
00000000000015e8         db  0x28 ; '('
00000000000015e9         db  0x9f ; '.'
00000000000015ea         db  0x20 ; ' '
00000000000015eb         db  0x00 ; '.'
00000000000015ec         db  0x00 ; '.'
00000000000015ed         db  0x00 ; '.'
00000000000015ee         db  0x00 ; '.'
00000000000015ef         db  0x00 ; '.'
00000000000015f0         db  0x07 ; '.'
00000000000015f1         db  0x00 ; '.'
00000000000015f2         db  0x00 ; '.'
00000000000015f3         db  0x00 ; '.'
00000000000015f4         db  0x31 ; '1'
00000000000015f5         db  0x00 ; '.'
00000000000015f6         db  0x00 ; '.'
00000000000015f7         db  0x00 ; '.'
00000000000015f8         db  0x00 ; '.'
00000000000015f9         db  0x00 ; '.'
00000000000015fa         db  0x00 ; '.'
00000000000015fb         db  0x00 ; '.'
00000000000015fc         db  0x00 ; '.'
00000000000015fd         db  0x00 ; '.'
00000000000015fe         db  0x00 ; '.'
00000000000015ff         db  0x00 ; '.'
0000000000001600         db  0x30 ; '0'
0000000000001601         db  0x9f ; '.'
0000000000001602         db  0x20 ; ' '
0000000000001603         db  0x00 ; '.'
0000000000001604         db  0x00 ; '.'
0000000000001605         db  0x00 ; '.'
0000000000001606         db  0x00 ; '.'
0000000000001607         db  0x00 ; '.'
0000000000001608         db  0x07 ; '.'
0000000000001609         db  0x00 ; '.'
000000000000160a         db  0x00 ; '.'
000000000000160b         db  0x00 ; '.'
000000000000160c         db  0x32 ; '2'
000000000000160d         db  0x00 ; '.'
000000000000160e         db  0x00 ; '.'
000000000000160f         db  0x00 ; '.'
0000000000001610         db  0x00 ; '.'
0000000000001611         db  0x00 ; '.'
0000000000001612         db  0x00 ; '.'
0000000000001613         db  0x00 ; '.'
0000000000001614         db  0x00 ; '.'
0000000000001615         db  0x00 ; '.'
0000000000001616         db  0x00 ; '.'
0000000000001617         db  0x00 ; '.'
0000000000001618         db  0x38 ; '8'
0000000000001619         db  0x9f ; '.'
000000000000161a         db  0x20 ; ' '
000000000000161b         db  0x00 ; '.'
000000000000161c         db  0x00 ; '.'
000000000000161d         db  0x00 ; '.'
000000000000161e         db  0x00 ; '.'
000000000000161f         db  0x00 ; '.'
0000000000001620         db  0x07 ; '.'
0000000000001621         db  0x00 ; '.'
0000000000001622         db  0x00 ; '.'
0000000000001623         db  0x00 ; '.'
0000000000001624         db  0x33 ; '3'
0000000000001625         db  0x00 ; '.'
0000000000001626         db  0x00 ; '.'
0000000000001627         db  0x00 ; '.'
0000000000001628         db  0x00 ; '.'
0000000000001629         db  0x00 ; '.'
000000000000162a         db  0x00 ; '.'
000000000000162b         db  0x00 ; '.'
000000000000162c         db  0x00 ; '.'
000000000000162d         db  0x00 ; '.'
000000000000162e         db  0x00 ; '.'
000000000000162f         db  0x00 ; '.'
0000000000001630         db  0x40 ; '@'
0000000000001631         db  0x9f ; '.'
0000000000001632         db  0x20 ; ' '
0000000000001633         db  0x00 ; '.'
0000000000001634         db  0x00 ; '.'
0000000000001635         db  0x00 ; '.'
0000000000001636         db  0x00 ; '.'
0000000000001637         db  0x00 ; '.'
0000000000001638         db  0x07 ; '.'
0000000000001639         db  0x00 ; '.'
000000000000163a         db  0x00 ; '.'
000000000000163b         db  0x00 ; '.'
000000000000163c         db  0x34 ; '4'
000000000000163d         db  0x00 ; '.'
000000000000163e         db  0x00 ; '.'
000000000000163f         db  0x00 ; '.'
0000000000001640         db  0x00 ; '.'
0000000000001641         db  0x00 ; '.'
0000000000001642         db  0x00 ; '.'
0000000000001643         db  0x00 ; '.'
0000000000001644         db  0x00 ; '.'
0000000000001645         db  0x00 ; '.'
0000000000001646         db  0x00 ; '.'
0000000000001647         db  0x00 ; '.'
0000000000001648         db  0x48 ; 'H'
0000000000001649         db  0x9f ; '.'
000000000000164a         db  0x20 ; ' '
000000000000164b         db  0x00 ; '.'
000000000000164c         db  0x00 ; '.'
000000000000164d         db  0x00 ; '.'
000000000000164e         db  0x00 ; '.'
000000000000164f         db  0x00 ; '.'
0000000000001650         db  0x07 ; '.'
0000000000001651         db  0x00 ; '.'
0000000000001652         db  0x00 ; '.'
0000000000001653         db  0x00 ; '.'
0000000000001654         db  0x35 ; '5'
0000000000001655         db  0x00 ; '.'
0000000000001656         db  0x00 ; '.'
0000000000001657         db  0x00 ; '.'
0000000000001658         db  0x00 ; '.'
0000000000001659         db  0x00 ; '.'
000000000000165a         db  0x00 ; '.'
000000000000165b         db  0x00 ; '.'
000000000000165c         db  0x00 ; '.'
000000000000165d         db  0x00 ; '.'
000000000000165e         db  0x00 ; '.'
000000000000165f         db  0x00 ; '.'
0000000000001660         db  0x50 ; 'P'
0000000000001661         db  0x9f ; '.'
0000000000001662         db  0x20 ; ' '
0000000000001663         db  0x00 ; '.'
0000000000001664         db  0x00 ; '.'
0000000000001665         db  0x00 ; '.'
0000000000001666         db  0x00 ; '.'
0000000000001667         db  0x00 ; '.'
0000000000001668         db  0x07 ; '.'
0000000000001669         db  0x00 ; '.'
000000000000166a         db  0x00 ; '.'
000000000000166b         db  0x00 ; '.'
000000000000166c         db  0x36 ; '6'
000000000000166d         db  0x00 ; '.'
000000000000166e         db  0x00 ; '.'
000000000000166f         db  0x00 ; '.'
0000000000001670         db  0x00 ; '.'
0000000000001671         db  0x00 ; '.'
0000000000001672         db  0x00 ; '.'
0000000000001673         db  0x00 ; '.'
0000000000001674         db  0x00 ; '.'
0000000000001675         db  0x00 ; '.'
0000000000001676         db  0x00 ; '.'
0000000000001677         db  0x00 ; '.'
0000000000001678         db  0x58 ; 'X'
0000000000001679         db  0x9f ; '.'
000000000000167a         db  0x20 ; ' '
000000000000167b         db  0x00 ; '.'
000000000000167c         db  0x00 ; '.'
000000000000167d         db  0x00 ; '.'
000000000000167e         db  0x00 ; '.'
000000000000167f         db  0x00 ; '.'
0000000000001680         db  0x07 ; '.'
0000000000001681         db  0x00 ; '.'
0000000000001682         db  0x00 ; '.'
0000000000001683         db  0x00 ; '.'
0000000000001684         db  0x37 ; '7'
0000000000001685         db  0x00 ; '.'
0000000000001686         db  0x00 ; '.'
0000000000001687         db  0x00 ; '.'
0000000000001688         db  0x00 ; '.'
0000000000001689         db  0x00 ; '.'
000000000000168a         db  0x00 ; '.'
000000000000168b         db  0x00 ; '.'
000000000000168c         db  0x00 ; '.'
000000000000168d         db  0x00 ; '.'
000000000000168e         db  0x00 ; '.'
000000000000168f         db  0x00 ; '.'
0000000000001690         db  0x60 ; '`'
0000000000001691         db  0x9f ; '.'
0000000000001692         db  0x20 ; ' '
0000000000001693         db  0x00 ; '.'
0000000000001694         db  0x00 ; '.'
0000000000001695         db  0x00 ; '.'
0000000000001696         db  0x00 ; '.'
0000000000001697         db  0x00 ; '.'
0000000000001698         db  0x07 ; '.'
0000000000001699         db  0x00 ; '.'
000000000000169a         db  0x00 ; '.'
000000000000169b         db  0x00 ; '.'
000000000000169c         db  0x38 ; '8'
000000000000169d         db  0x00 ; '.'
000000000000169e         db  0x00 ; '.'
000000000000169f         db  0x00 ; '.'
00000000000016a0         db  0x00 ; '.'
00000000000016a1         db  0x00 ; '.'
00000000000016a2         db  0x00 ; '.'
00000000000016a3         db  0x00 ; '.'
00000000000016a4         db  0x00 ; '.'
00000000000016a5         db  0x00 ; '.'
00000000000016a6         db  0x00 ; '.'
00000000000016a7         db  0x00 ; '.'
00000000000016a8         db  0x68 ; 'h'
00000000000016a9         db  0x9f ; '.'
00000000000016aa         db  0x20 ; ' '
00000000000016ab         db  0x00 ; '.'
00000000000016ac         db  0x00 ; '.'
00000000000016ad         db  0x00 ; '.'
00000000000016ae         db  0x00 ; '.'
00000000000016af         db  0x00 ; '.'
00000000000016b0         db  0x07 ; '.'
00000000000016b1         db  0x00 ; '.'
00000000000016b2         db  0x00 ; '.'
00000000000016b3         db  0x00 ; '.'
00000000000016b4         db  0x39 ; '9'
00000000000016b5         db  0x00 ; '.'
00000000000016b6         db  0x00 ; '.'
00000000000016b7         db  0x00 ; '.'
00000000000016b8         db  0x00 ; '.'
00000000000016b9         db  0x00 ; '.'
00000000000016ba         db  0x00 ; '.'
00000000000016bb         db  0x00 ; '.'
00000000000016bc         db  0x00 ; '.'
00000000000016bd         db  0x00 ; '.'
00000000000016be         db  0x00 ; '.'
00000000000016bf         db  0x00 ; '.'
00000000000016c0         db  0x70 ; 'p'
00000000000016c1         db  0x9f ; '.'
00000000000016c2         db  0x20 ; ' '
00000000000016c3         db  0x00 ; '.'
00000000000016c4         db  0x00 ; '.'
00000000000016c5         db  0x00 ; '.'
00000000000016c6         db  0x00 ; '.'
00000000000016c7         db  0x00 ; '.'
00000000000016c8         db  0x07 ; '.'
00000000000016c9         db  0x00 ; '.'
00000000000016ca         db  0x00 ; '.'
00000000000016cb         db  0x00 ; '.'
00000000000016cc         db  0x3a ; ':'
00000000000016cd         db  0x00 ; '.'
00000000000016ce         db  0x00 ; '.'
00000000000016cf         db  0x00 ; '.'
00000000000016d0         db  0x00 ; '.'
00000000000016d1         db  0x00 ; '.'
00000000000016d2         db  0x00 ; '.'
00000000000016d3         db  0x00 ; '.'
00000000000016d4         db  0x00 ; '.'
00000000000016d5         db  0x00 ; '.'
00000000000016d6         db  0x00 ; '.'
00000000000016d7         db  0x00 ; '.'
00000000000016d8         db  0x78 ; 'x'
00000000000016d9         db  0x9f ; '.'
00000000000016da         db  0x20 ; ' '
00000000000016db         db  0x00 ; '.'
00000000000016dc         db  0x00 ; '.'
00000000000016dd         db  0x00 ; '.'
00000000000016de         db  0x00 ; '.'
00000000000016df         db  0x00 ; '.'
00000000000016e0         db  0x07 ; '.'
00000000000016e1         db  0x00 ; '.'
00000000000016e2         db  0x00 ; '.'
00000000000016e3         db  0x00 ; '.'
00000000000016e4         db  0x3b ; ';'
00000000000016e5         db  0x00 ; '.'
00000000000016e6         db  0x00 ; '.'
00000000000016e7         db  0x00 ; '.'
00000000000016e8         db  0x00 ; '.'
00000000000016e9         db  0x00 ; '.'
00000000000016ea         db  0x00 ; '.'
00000000000016eb         db  0x00 ; '.'
00000000000016ec         db  0x00 ; '.'
00000000000016ed         db  0x00 ; '.'
00000000000016ee         db  0x00 ; '.'
00000000000016ef         db  0x00 ; '.'
00000000000016f0         db  0x80 ; '.'
00000000000016f1         db  0x9f ; '.'
00000000000016f2         db  0x20 ; ' '
00000000000016f3         db  0x00 ; '.'
00000000000016f4         db  0x00 ; '.'
00000000000016f5         db  0x00 ; '.'
00000000000016f6         db  0x00 ; '.'
00000000000016f7         db  0x00 ; '.'
00000000000016f8         db  0x07 ; '.'
00000000000016f9         db  0x00 ; '.'
00000000000016fa         db  0x00 ; '.'
00000000000016fb         db  0x00 ; '.'
00000000000016fc         db  0x3c ; '<'
00000000000016fd         db  0x00 ; '.'
00000000000016fe         db  0x00 ; '.'
00000000000016ff         db  0x00 ; '.'
0000000000001700         db  0x00 ; '.'
0000000000001701         db  0x00 ; '.'
0000000000001702         db  0x00 ; '.'
0000000000001703         db  0x00 ; '.'
0000000000001704         db  0x00 ; '.'
0000000000001705         db  0x00 ; '.'
0000000000001706         db  0x00 ; '.'
0000000000001707         db  0x00 ; '.'
0000000000001708         db  0x88 ; '.'
0000000000001709         db  0x9f ; '.'
000000000000170a         db  0x20 ; ' '
000000000000170b         db  0x00 ; '.'
000000000000170c         db  0x00 ; '.'
000000000000170d         db  0x00 ; '.'
000000000000170e         db  0x00 ; '.'
000000000000170f         db  0x00 ; '.'
0000000000001710         db  0x07 ; '.'
0000000000001711         db  0x00 ; '.'
0000000000001712         db  0x00 ; '.'
0000000000001713         db  0x00 ; '.'
0000000000001714         db  0x3d ; '='
0000000000001715         db  0x00 ; '.'
0000000000001716         db  0x00 ; '.'
0000000000001717         db  0x00 ; '.'
0000000000001718         db  0x00 ; '.'
0000000000001719         db  0x00 ; '.'
000000000000171a         db  0x00 ; '.'
000000000000171b         db  0x00 ; '.'
000000000000171c         db  0x00 ; '.'
000000000000171d         db  0x00 ; '.'
000000000000171e         db  0x00 ; '.'
000000000000171f         db  0x00 ; '.'
0000000000001720         db  0x90 ; '.'
0000000000001721         db  0x9f ; '.'
0000000000001722         db  0x20 ; ' '
0000000000001723         db  0x00 ; '.'
0000000000001724         db  0x00 ; '.'
0000000000001725         db  0x00 ; '.'
0000000000001726         db  0x00 ; '.'
0000000000001727         db  0x00 ; '.'
0000000000001728         db  0x07 ; '.'
0000000000001729         db  0x00 ; '.'
000000000000172a         db  0x00 ; '.'
000000000000172b         db  0x00 ; '.'
000000000000172c         db  0x3e ; '>'
000000000000172d         db  0x00 ; '.'
000000000000172e         db  0x00 ; '.'
000000000000172f         db  0x00 ; '.'
0000000000001730         db  0x00 ; '.'
0000000000001731         db  0x00 ; '.'
0000000000001732         db  0x00 ; '.'
0000000000001733         db  0x00 ; '.'
0000000000001734         db  0x00 ; '.'
0000000000001735         db  0x00 ; '.'
0000000000001736         db  0x00 ; '.'
0000000000001737         db  0x00 ; '.'
0000000000001738         db  0x98 ; '.'
0000000000001739         db  0x9f ; '.'
000000000000173a         db  0x20 ; ' '
000000000000173b         db  0x00 ; '.'
000000000000173c         db  0x00 ; '.'
000000000000173d         db  0x00 ; '.'
000000000000173e         db  0x00 ; '.'
000000000000173f         db  0x00 ; '.'
0000000000001740         db  0x07 ; '.'
0000000000001741         db  0x00 ; '.'
0000000000001742         db  0x00 ; '.'
0000000000001743         db  0x00 ; '.'
0000000000001744         db  0x3f ; '?'
0000000000001745         db  0x00 ; '.'
0000000000001746         db  0x00 ; '.'
0000000000001747         db  0x00 ; '.'
0000000000001748         db  0x00 ; '.'
0000000000001749         db  0x00 ; '.'
000000000000174a         db  0x00 ; '.'
000000000000174b         db  0x00 ; '.'
000000000000174c         db  0x00 ; '.'
000000000000174d         db  0x00 ; '.'
000000000000174e         db  0x00 ; '.'
000000000000174f         db  0x00 ; '.'
0000000000001750         db  0xa0 ; '.'
0000000000001751         db  0x9f ; '.'
0000000000001752         db  0x20 ; ' '
0000000000001753         db  0x00 ; '.'
0000000000001754         db  0x00 ; '.'
0000000000001755         db  0x00 ; '.'
0000000000001756         db  0x00 ; '.'
0000000000001757         db  0x00 ; '.'
0000000000001758         db  0x07 ; '.'
0000000000001759         db  0x00 ; '.'
000000000000175a         db  0x00 ; '.'
000000000000175b         db  0x00 ; '.'
000000000000175c         db  0x40 ; '@'
000000000000175d         db  0x00 ; '.'
000000000000175e         db  0x00 ; '.'
000000000000175f         db  0x00 ; '.'
0000000000001760         db  0x00 ; '.'
0000000000001761         db  0x00 ; '.'
0000000000001762         db  0x00 ; '.'
0000000000001763         db  0x00 ; '.'
0000000000001764         db  0x00 ; '.'
0000000000001765         db  0x00 ; '.'
0000000000001766         db  0x00 ; '.'
0000000000001767         db  0x00 ; '.'
0000000000001768         db  0xa8 ; '.'
0000000000001769         db  0x9f ; '.'
000000000000176a         db  0x20 ; ' '
000000000000176b         db  0x00 ; '.'
000000000000176c         db  0x00 ; '.'
000000000000176d         db  0x00 ; '.'
000000000000176e         db  0x00 ; '.'
000000000000176f         db  0x00 ; '.'
0000000000001770         db  0x07 ; '.'
0000000000001771         db  0x00 ; '.'
0000000000001772         db  0x00 ; '.'
0000000000001773         db  0x00 ; '.'
0000000000001774         db  0x41 ; 'A'
0000000000001775         db  0x00 ; '.'
0000000000001776         db  0x00 ; '.'
0000000000001777         db  0x00 ; '.'
0000000000001778         db  0x00 ; '.'
0000000000001779         db  0x00 ; '.'
000000000000177a         db  0x00 ; '.'
000000000000177b         db  0x00 ; '.'
000000000000177c         db  0x00 ; '.'
000000000000177d         db  0x00 ; '.'
000000000000177e         db  0x00 ; '.'
000000000000177f         db  0x00 ; '.'
0000000000001780         db  0xb0 ; '.'
0000000000001781         db  0x9f ; '.'
0000000000001782         db  0x20 ; ' '
0000000000001783         db  0x00 ; '.'
0000000000001784         db  0x00 ; '.'
0000000000001785         db  0x00 ; '.'
0000000000001786         db  0x00 ; '.'
0000000000001787         db  0x00 ; '.'
0000000000001788         db  0x07 ; '.'
0000000000001789         db  0x00 ; '.'
000000000000178a         db  0x00 ; '.'
000000000000178b         db  0x00 ; '.'
000000000000178c         db  0x42 ; 'B'
000000000000178d         db  0x00 ; '.'
000000000000178e         db  0x00 ; '.'
000000000000178f         db  0x00 ; '.'
0000000000001790         db  0x00 ; '.'
0000000000001791         db  0x00 ; '.'
0000000000001792         db  0x00 ; '.'
0000000000001793         db  0x00 ; '.'
0000000000001794         db  0x00 ; '.'
0000000000001795         db  0x00 ; '.'
0000000000001796         db  0x00 ; '.'
0000000000001797         db  0x00 ; '.'
0000000000001798         db  0xb8 ; '.'
0000000000001799         db  0x9f ; '.'
000000000000179a         db  0x20 ; ' '
000000000000179b         db  0x00 ; '.'
000000000000179c         db  0x00 ; '.'
000000000000179d         db  0x00 ; '.'
000000000000179e         db  0x00 ; '.'
000000000000179f         db  0x00 ; '.'
00000000000017a0         db  0x07 ; '.'
00000000000017a1         db  0x00 ; '.'
00000000000017a2         db  0x00 ; '.'
00000000000017a3         db  0x00 ; '.'
00000000000017a4         db  0x44 ; 'D'
00000000000017a5         db  0x00 ; '.'
00000000000017a6         db  0x00 ; '.'
00000000000017a7         db  0x00 ; '.'
00000000000017a8         db  0x00 ; '.'
00000000000017a9         db  0x00 ; '.'
00000000000017aa         db  0x00 ; '.'
00000000000017ab         db  0x00 ; '.'
00000000000017ac         db  0x00 ; '.'
00000000000017ad         db  0x00 ; '.'
00000000000017ae         db  0x00 ; '.'
00000000000017af         db  0x00 ; '.'
00000000000017b0         db  0xc0 ; '.'
00000000000017b1         db  0x9f ; '.'
00000000000017b2         db  0x20 ; ' '
00000000000017b3         db  0x00 ; '.'
00000000000017b4         db  0x00 ; '.'
00000000000017b5         db  0x00 ; '.'
00000000000017b6         db  0x00 ; '.'
00000000000017b7         db  0x00 ; '.'
00000000000017b8         db  0x07 ; '.'
00000000000017b9         db  0x00 ; '.'
00000000000017ba         db  0x00 ; '.'
00000000000017bb         db  0x00 ; '.'
00000000000017bc         db  0x45 ; 'E'
00000000000017bd         db  0x00 ; '.'
00000000000017be         db  0x00 ; '.'
00000000000017bf         db  0x00 ; '.'
00000000000017c0         db  0x00 ; '.'
00000000000017c1         db  0x00 ; '.'
00000000000017c2         db  0x00 ; '.'
00000000000017c3         db  0x00 ; '.'
00000000000017c4         db  0x00 ; '.'
00000000000017c5         db  0x00 ; '.'
00000000000017c6         db  0x00 ; '.'
00000000000017c7         db  0x00 ; '.'
00000000000017c8         db  0xc8 ; '.'
00000000000017c9         db  0x9f ; '.'
00000000000017ca         db  0x20 ; ' '
00000000000017cb         db  0x00 ; '.'
00000000000017cc         db  0x00 ; '.'
00000000000017cd         db  0x00 ; '.'
00000000000017ce         db  0x00 ; '.'
00000000000017cf         db  0x00 ; '.'
00000000000017d0         db  0x07 ; '.'
00000000000017d1         db  0x00 ; '.'
00000000000017d2         db  0x00 ; '.'
00000000000017d3         db  0x00 ; '.'
00000000000017d4         db  0x47 ; 'G'
00000000000017d5         db  0x00 ; '.'
00000000000017d6         db  0x00 ; '.'
00000000000017d7         db  0x00 ; '.'
00000000000017d8         db  0x00 ; '.'
00000000000017d9         db  0x00 ; '.'
00000000000017da         db  0x00 ; '.'
00000000000017db         db  0x00 ; '.'
00000000000017dc         db  0x00 ; '.'
00000000000017dd         db  0x00 ; '.'
00000000000017de         db  0x00 ; '.'
00000000000017df         db  0x00 ; '.'
00000000000017e0         db  0xd0 ; '.'
00000000000017e1         db  0x9f ; '.'
00000000000017e2         db  0x20 ; ' '
00000000000017e3         db  0x00 ; '.'
00000000000017e4         db  0x00 ; '.'
00000000000017e5         db  0x00 ; '.'
00000000000017e6         db  0x00 ; '.'
00000000000017e7         db  0x00 ; '.'
00000000000017e8         db  0x07 ; '.'
00000000000017e9         db  0x00 ; '.'
00000000000017ea         db  0x00 ; '.'
00000000000017eb         db  0x00 ; '.'
00000000000017ec         db  0x48 ; 'H'
00000000000017ed         db  0x00 ; '.'
00000000000017ee         db  0x00 ; '.'
00000000000017ef         db  0x00 ; '.'
00000000000017f0         db  0x00 ; '.'
00000000000017f1         db  0x00 ; '.'
00000000000017f2         db  0x00 ; '.'
00000000000017f3         db  0x00 ; '.'
00000000000017f4         db  0x00 ; '.'
00000000000017f5         db  0x00 ; '.'
00000000000017f6         db  0x00 ; '.'
00000000000017f7         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x17f8; 0x180f[ (23 bytes)
        ; File offset : [6136; 6159[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
00000000000017f8         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
00000000000017fc         mov        rax, qword [qword_209fe8]                   ; qword_209fe8
0000000000001803         test       rax, rax
0000000000001806         je         loc_180a

0000000000001808         call       rax

                     loc_180a:
000000000000180a         add        rsp, 0x8                                    ; CODE XREF=_init+14
000000000000180e         ret
                        ; endp
000000000000180f         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x1810; 0x1c50[ (1088 bytes)
        ; File offset : [6160; 7248[ (1088 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_1810:
0000000000001810         push       qword [qword_209db0]                        ; Begin of unwind block (FDE at 0x8b5c), qword_209db0, CODE XREF=sub_1826+5
0000000000001816         jmp        qword [qword_209db0+8]                      ; 0x209db8
                        ; endp
000000000000181c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_toupper_loc:        // __ctype_toupper_loc
0000000000001820         jmp        qword [__ctype_toupper_loc@GOT]             ; __ctype_toupper_loc, __ctype_toupper_loc@GOT, CODE XREF=fwrite_uppcase+27
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1826:
0000000000001826         push       0x0
000000000000182b         jmp        loc_1810


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_utmpxname:        // utmpxname
0000000000001830         jmp        qword [utmpxname@GOT]                       ; utmpxname, utmpxname@GOT, CODE XREF=read_utmp+44
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1836:
0000000000001836         push       0x1
000000000000183b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getenv:        // getenv
0000000000001840         jmp        qword [getenv@GOT]                          ; getenv, getenv@GOT, CODE XREF=set_tz+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1846:
0000000000001846         push       0x2
000000000000184b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
0000000000001850         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40, tzfree.part.0+19
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1856:
0000000000001856         push       0x3
000000000000185b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_localtime:        // localtime
0000000000001860         jmp        qword [localtime@GOT]                       ; localtime, localtime@GOT, CODE XREF=print_uptime+352
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1866:
0000000000001866         push       0x4
000000000000186b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000001870         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_50c0+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1876:
0000000000001876         push       0x5
000000000000187b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
0000000000001880         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=print_uptime+1021, uptime+109, close_stdout+22, quotearg_n_options+28, clone_quoting_options+7, quotearg_buffer+45, quotearg_alloc_mem+42, rpl_fclose+40, read_utmp+260, revert_tz.part.1+13, save_abbr+272
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1886:
0000000000001886         push       0x6
000000000000188b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncpy:        // strncpy
0000000000001890         jmp        qword [strncpy@GOT]                         ; strncpy, strncpy@GOT, CODE XREF=extract_trimmed_name+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1896:
0000000000001896         push       0x7
000000000000189b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
00000000000018a0         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+596, usage+789
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18a6:
00000000000018a6         push       0x8
00000000000018ab         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_localtime_r:        // localtime_r
00000000000018b0         jmp        qword [localtime_r@GOT]                     ; localtime_r, localtime_r@GOT, CODE XREF=localtime_rz+43, mktime_z+170
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18b6:
00000000000018b6         push       0x9
00000000000018bb         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
00000000000018c0         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18c6:
00000000000018c6         push       0xa
00000000000018cb         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
00000000000018d0         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18d6:
00000000000018d6         push       0xb
00000000000018db         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setenv:        // setenv
00000000000018e0         jmp        qword [setenv@GOT]                          ; setenv, setenv@GOT, CODE XREF=setenv_TZ+20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18e6:
00000000000018e6         push       0xc
00000000000018eb         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
00000000000018f0         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+62
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18f6:
00000000000018f6         push       0xd
00000000000018fb         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_endutxent:        // endutxent
0000000000001900         jmp        qword [endutxent@GOT]                       ; endutxent, endutxent@GOT, CODE XREF=read_utmp+177
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1906:
0000000000001906         push       0xe
000000000000190b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strtod_l:        // strtod_l
0000000000001910         jmp        qword [strtod_l@GOT]                        ; strtod_l, strtod_l@GOT, CODE XREF=c_strtod+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1916:
0000000000001916         push       0xf
000000000000191b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001920         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1926:
0000000000001926         push       0x10
000000000000192b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getloadavg:        // getloadavg
0000000000001930         jmp        qword [getloadavg@GOT]                      ; getloadavg, getloadavg@GOT, CODE XREF=print_uptime+541
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1936:
0000000000001936         push       0x11
000000000000193b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001940         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1946:
0000000000001946         push       0x12
000000000000194b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001950         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+243, print_uptime+383, print_uptime+628, print_uptime+769, print_uptime+808, print_uptime+852, print_uptime+1013, usage+56, usage+102, usage+139, usage+173
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1956:
0000000000001956         push       0x13
000000000000195b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001960         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1966:
0000000000001966         push       0x14
000000000000196b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001970         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=sub_3050+2338, quotearg_buffer_restyled+343, sub_50c0+411, sub_50c0+1742, xstrdup+4, extract_trimmed_name+46, tzalloc+12, save_abbr+105, save_abbr+195
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1976:
0000000000001976         push       0x15
000000000000197b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000001980         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=print_uptime+1069, uptime+138, sub_4260+664, fprintftime+75, parse_long_options+314, parse_gnu_standard_options_only+310, sub_50c0+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1986:
0000000000001986         push       0x16
000000000000198b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000001990         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=parse_long_options+198, parse_gnu_standard_options_only+154
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1996:
0000000000001996         push       0x17
000000000000199b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
00000000000019a0         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19a6:
00000000000019a6         push       0x18
00000000000019ab         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_newlocale:        // newlocale
00000000000019b0         jmp        qword [newlocale@GOT]                       ; newlocale, newlocale@GOT, CODE XREF=c_strtod+94
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19b6:
00000000000019b6         push       0x19
00000000000019bb         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
00000000000019c0         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=print_uptime+1048
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19c6:
00000000000019c6         push       0x1a
00000000000019cb         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
00000000000019d0         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19d6:
00000000000019d6         push       0x1b
00000000000019db         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_gmtime_r:        // gmtime_r
00000000000019e0         jmp        qword [gmtime_r@GOT]                        ; gmtime_r, gmtime_r@GOT, CODE XREF=localtime_rz+144
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19e6:
00000000000019e6         push       0x1c
00000000000019eb         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
00000000000019f0         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19f6:
00000000000019f6         push       0x1d
00000000000019fb         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000001a00         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a06:
0000000000001a06         push       0x1e
0000000000001a0b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputc:        // fputc
0000000000001a10         jmp        qword [fputc@GOT]                           ; fputc, fputc@GOT, CODE XREF=fwrite_lowcase+57, fwrite_uppcase+57, __strftime_internal+261, __strftime_internal+676, __strftime_internal+764, sub_2ca0+236, sub_2e10+101, sub_2e10+119, sub_3050+308, sub_3050+735, sub_3050+759
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a16:
0000000000001a16         push       0x1f
0000000000001a1b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001a20         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a26:
0000000000001a26         push       0x20
0000000000001a2b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001a30         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+273, usage+317, usage+904, version_etc_arn+135, emit_bug_reporting_address+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a36:
0000000000001a36         push       0x21
0000000000001a3b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001a40         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a46:
0000000000001a46         push       0x22
0000000000001a4b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcmp:        // strcmp
0000000000001a50         jmp        qword [strcmp@GOT]                          ; strcmp, strcmp@GOT, CODE XREF=save_abbr+70, save_abbr+142, set_tz+157
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a56:
0000000000001a56         push       0x23
0000000000001a5b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setutxent:        // setutxent
0000000000001a60         jmp        qword [setutxent@GOT]                       ; setutxent, setutxent@GOT, CODE XREF=read_utmp+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a66:
0000000000001a66         push       0x24
0000000000001a6b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001a70         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=xmemdup+35, tzalloc+81, save_abbr+294
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a76:
0000000000001a76         push       0x25
0000000000001a7b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_tzset:        // tzset
0000000000001a80         jmp        qword [tzset@GOT]                           ; tzset, tzset@GOT, CODE XREF=revert_tz.part.1+80, set_tz+216
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a86:
0000000000001a86         push       0x26
0000000000001a8b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_kill:        // kill
0000000000001a90         jmp        qword [kill@GOT]                            ; kill, kill@GOT, CODE XREF=read_utmp+247
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a96:
0000000000001a96         push       0x27
0000000000001a9b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_time:        // time
0000000000001aa0         jmp        qword [time@GOT]                            ; time, time@GOT, CODE XREF=print_uptime+194, print_uptime+966, print_uptime+989
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1aa6:
0000000000001aa6         push       0x28
0000000000001aab         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001ab0         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ab6:
0000000000001ab6         push       0x29
0000000000001abb         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fgets_unlocked:        // fgets_unlocked
0000000000001ac0         jmp        qword [fgets_unlocked@GOT]                  ; fgets_unlocked, fgets_unlocked@GOT, CODE XREF=print_uptime+90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ac6:
0000000000001ac6         push       0x2a
0000000000001acb         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000001ad0         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4, tzalloc+42, tzalloc+109
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ad6:
0000000000001ad6         push       0x2b
0000000000001adb         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000001ae0         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ae6:
0000000000001ae6         push       0x2c
0000000000001aeb         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000001af0         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1af6:
0000000000001af6         push       0x2d
0000000000001afb         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mktime:        // mktime
0000000000001b00         jmp        qword [mktime@GOT]                          ; mktime, mktime@GOT, CODE XREF=mktime_z+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b06:
0000000000001b06         push       0x2e
0000000000001b0b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000001b10         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b16:
0000000000001b16         push       0x2f
0000000000001b1b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
0000000000001b20         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b26:
0000000000001b26         push       0x30
0000000000001b2b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000001b30         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+31, usage+571, usage+764, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b36:
0000000000001b36         push       0x31
0000000000001b3b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000001b40         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=print_uptime+478, print_uptime+526, print_uptime+652, print_uptime+685, print_uptime+718, print_uptime+784, print_uptime+828, print_uptime+867, usage+120, usage+154, usage+188
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b46:
0000000000001b46         push       0x32
0000000000001b4b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_timegm:        // timegm
0000000000001b50         jmp        qword [timegm@GOT]                          ; timegm, timegm@GOT, CODE XREF=mktime_z+291
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b56:
0000000000001b56         push       0x33
0000000000001b5b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strftime:        // strftime
0000000000001b60         jmp        qword [strftime@GOT]                        ; strftime, strftime@GOT, CODE XREF=sub_2ca0+92
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b66:
0000000000001b66         push       0x34
0000000000001b6b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getutxent:        // getutxent
0000000000001b70         jmp        qword [getutxent@GOT]                       ; getutxent, getutxent@GOT, CODE XREF=read_utmp+54, read_utmp+164
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b76:
0000000000001b76         push       0x35
0000000000001b7b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000001b80         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+260, print_uptime+1038, uptime+133, close_stdout+125, close_stdout+157, xalloc_die+43
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b86:
0000000000001b86         push       0x36
0000000000001b8b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001b90         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b96:
0000000000001b96         push       0x37
0000000000001b9b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fopen:        // fopen
0000000000001ba0         jmp        qword [fopen@GOT]                           ; fopen, fopen@GOT, CODE XREF=print_uptime+61
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ba6:
0000000000001ba6         push       0x38
0000000000001bab         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcngettext:        // dcngettext
0000000000001bb0         jmp        qword [dcngettext@GOT]                      ; dcngettext, dcngettext@GOT, CODE XREF=print_uptime+455, print_uptime+508
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bb6:
0000000000001bb6         push       0x39
0000000000001bbb         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_unsetenv:        // unsetenv
0000000000001bc0         jmp        qword [unsetenv@GOT]                        ; unsetenv, unsetenv@GOT, CODE XREF=setenv_TZ+39
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bc6:
0000000000001bc6         push       0x3a
0000000000001bcb         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001bd0         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bd6:
0000000000001bd6         push       0x3b
0000000000001bdb         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001be0         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=usage+88, parse_long_options+290, parse_gnu_standard_options_only+242
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1be6:
0000000000001be6         push       0x3c
0000000000001beb         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001bf0         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=sub_3bf0+264, sub_3bf0+300, sub_3d50+16, sub_4260+281, set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bf6:
0000000000001bf6         push       0x3d
0000000000001bfb         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001c00         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c06:
0000000000001c06         push       0x3e
0000000000001c0b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000001c10         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_50c0+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c16:
0000000000001c16         push       0x3f
0000000000001c1b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001c20         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_50c0+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c26:
0000000000001c26         push       0x40
0000000000001c2b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_tolower_loc:        // __ctype_tolower_loc
0000000000001c30         jmp        qword [__ctype_tolower_loc@GOT]             ; __ctype_tolower_loc, __ctype_tolower_loc@GOT, CODE XREF=fwrite_lowcase+27
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c36:
0000000000001c36         push       0x41
0000000000001c3b         jmp        0x1810
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000001c40         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_4e60+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c46:
0000000000001c46         push       0x42
0000000000001c4b         jmp        0x1810
                        ; endp


        ; Section .plt.got
        ; Range: [0x1c50; 0x1c58[ (8 bytes)
        ; File offset : [7248; 7256[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_209ff8:        // qword_209ff8
0000000000001c50         jmp        qword [qword_209ff8]                        ; qword, End of unwind block (FDE at 0x8b5c), Begin of unwind block (FDE at 0x8b84), qword_209ff8, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000001c56         align      8
0000000000001c58         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x8b84)
0000000000001c59         db  0x00 ; '.'
0000000000001c5a         db  0x00 ; '.'
0000000000001c5b         db  0x00 ; '.'
0000000000001c5c         db  0x00 ; '.'
0000000000001c5d         db  0x00 ; '.'
0000000000001c5e         db  0x00 ; '.'
0000000000001c5f         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x1c60; 0x789e[ (23614 bytes)
        ; File offset : [7264; 30878[ (23614 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     main:
0000000000001c60         push       rbp                                         ; Begin of unwind block (FDE at 0x8c3c), DATA XREF=_start+29
0000000000001c61         push       rbx
0000000000001c62         mov        ebx, edi
0000000000001c64         mov        rbp, rsi
0000000000001c67         sub        rsp, 0x8
0000000000001c6b         mov        rdi, qword [rsi]
0000000000001c6e         call       set_program_name                            ; set_program_name
0000000000001c73         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0x8501
0000000000001c7a         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
0000000000001c7f         call       j_setlocale                                 ; setlocale
0000000000001c84         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
0000000000001c8b         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001c92         call       j_bindtextdomain                            ; bindtextdomain
0000000000001c97         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
0000000000001c9e         call       j_textdomain                                ; textdomain
0000000000001ca3         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
0000000000001caa         call       atexit                                      ; atexit
0000000000001caf         lea        rax, qword [aKavehGhazi]                    ; "Kaveh Ghazi"
0000000000001cb6         sub        rsp, 0x8
0000000000001cba         mov        r8, qword [Version]                         ; Version
0000000000001cc1         push       0x0
0000000000001cc3         lea        rcx, qword [aNsOnlineHelpSn+23]             ; 0x7a34
0000000000001cca         lea        rdx, qword [aProcuptime+6]                  ; 0x78ca
0000000000001cd1         push       rax
0000000000001cd2         lea        rax, qword [aDavidMackenzie]                ; "David MacKenzie"
0000000000001cd9         mov        edi, ebx
0000000000001cdb         mov        r9d, 0x1
0000000000001ce1         mov        rsi, rbp
0000000000001ce4         push       rax
0000000000001ce5         lea        rax, qword [aJosephArceneau]                ; "Joseph Arceneaux"
0000000000001cec         push       rax
0000000000001ced         lea        rax, qword [usage]                          ; usage
0000000000001cf4         push       rax
0000000000001cf5         xor        eax, eax
0000000000001cf7         call       parse_gnu_standard_options_only             ; parse_gnu_standard_options_only
0000000000001cfc         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
0000000000001d03         add        rsp, 0x30
0000000000001d07         sub        ebx, eax
0000000000001d09         je         loc_1d25

0000000000001d0b         sub        ebx, 0x1
0000000000001d0e         jne        loc_1d38

0000000000001d10         mov        rdi, qword [rbp+rax*8]
0000000000001d15         xor        esi, esi
0000000000001d17         call       uptime                                      ; uptime

                     loc_1d1c:
0000000000001d1c         add        rsp, 0x8                                    ; CODE XREF=main+214
0000000000001d20         xor        eax, eax
0000000000001d22         pop        rbx
0000000000001d23         pop        rbp
0000000000001d24         ret
                        ; endp

                     loc_1d25:
0000000000001d25         lea        rdi, qword [aVarrunutmp]                    ; "/var/run/utmp", CODE XREF=main+169
0000000000001d2c         mov        esi, 0x1
0000000000001d31         call       uptime                                      ; uptime
0000000000001d36         jmp        loc_1d1c

                     loc_1d38:
0000000000001d38         mov        rdi, qword [rbp+rax*8+8]                    ; CODE XREF=main+174
0000000000001d3d         call       quote                                       ; quote
0000000000001d42         lea        rsi, qword [aExtraOperandS]                 ; argument "msgid" for method j_dcgettext, "extra operand %s"
0000000000001d49         mov        rbx, rax
0000000000001d4c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001d51         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001d53         call       j_dcgettext                                 ; dcgettext
0000000000001d58         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001d5a         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001d5d         mov        rcx, rbx
0000000000001d60         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001d62         xor        eax, eax
0000000000001d64         call       j_error                                     ; error
0000000000001d69         mov        edi, 0x1                                    ; argument #1 for method usage
0000000000001d6e         call       usage                                       ; usage
0000000000001d73         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x8c3c)
0000000000001d7d         nop        dword [rax]
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000001d80         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x8b2c)
0000000000001d82         mov        r9, rdx
0000000000001d85         pop        rsi
0000000000001d86         mov        rdx, rsp
0000000000001d89         and        rsp, 0xfffffffffffffff0
0000000000001d8d         push       rax
0000000000001d8e         push       rsp
0000000000001d8f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000001d96         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
0000000000001d9d         lea        rdi, qword [main]                           ; main
0000000000001da4         call       qword [qword_209fd8+8]                      ; 0x209fe0
0000000000001daa         hlt
                        ; endp
0000000000001dab         align      16                                          ; End of unwind block (FDE at 0x8b2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000001db0         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000001db7         push       rbp
0000000000001db8         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001dbf         cmp        rax, rdi
0000000000001dc2         mov        rbp, rsp
0000000000001dc5         je         loc_1de0

0000000000001dc7         mov        rax, qword [qword_209fd8]                   ; qword_209fd8
0000000000001dce         test       rax, rax
0000000000001dd1         je         loc_1de0

0000000000001dd3         pop        rbp
0000000000001dd4         jmp        rax
                        ; endp
0000000000001dd6         align      32

                     loc_1de0:
0000000000001de0         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000001de1         ret
                        ; endp
0000000000001de2         align      16

                     register_tm_clones:
0000000000001df0         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000001df7         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001dfe         push       rbp
0000000000001dff         sub        rsi, rdi
0000000000001e02         mov        rbp, rsp
0000000000001e05         sar        rsi, 0x3
0000000000001e09         mov        rax, rsi
0000000000001e0c         shr        rax, 0x3f
0000000000001e10         add        rsi, rax
0000000000001e13         sar        rsi, 0x1
0000000000001e16         je         loc_1e30

0000000000001e18         mov        rax, qword [qword_209ff0]                   ; qword_209ff0
0000000000001e1f         test       rax, rax
0000000000001e22         je         loc_1e30

0000000000001e24         pop        rbp
0000000000001e25         jmp        rax
                        ; endp
0000000000001e27         align      16

                     loc_1e30:
0000000000001e30         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000001e31         ret
                        ; endp
0000000000001e32         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000001e40         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000001e47         jne        loc_1e78

0000000000001e49         cmp        qword [qword_209ff8], 0x0                   ; qword_209ff8
0000000000001e51         push       rbp
0000000000001e52         mov        rbp, rsp
0000000000001e55         je         loc_1e63

0000000000001e57         mov        rdi, qword [__dso_handle]                   ; __dso_handle
0000000000001e5e         call       j_qword_209ff8                              ; qword_209ff8

                     loc_1e63:
0000000000001e63         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000001e68         mov        byte [completed.7697], 0x1                  ; completed.7697
0000000000001e6f         pop        rbp
0000000000001e70         ret
                        ; endp
0000000000001e71         align      8

                     loc_1e78:
0000000000001e78         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
0000000000001e7a         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000001e80         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000001e81         mov        rbp, rsp
0000000000001e84         pop        rbp
0000000000001e85         jmp        register_tm_clones                          ; register_tm_clones
0000000000001e8a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_2048: int8_t, -8264
        ;    var_2058: int64_t, -8280
        ;    var_2060: int64_t, -8288
        ;    var_2068: int64_t, -8296
        ;    var_2070: int64_t, -8304
        ;    var_2080: int64_t, -8320


                     print_uptime:
0000000000001e90         push       r15                                         ; Begin of unwind block (FDE at 0x8b9c), CODE XREF=uptime+64
0000000000001e92         push       r14
0000000000001e94         push       r13
0000000000001e96         push       r12
0000000000001e98         mov        r12, rdi
0000000000001e9b         push       rbp
0000000000001e9c         push       rbx
0000000000001e9d         lea        rdi, qword [aProcuptime]                    ; argument "__filename" for method j_fopen, "/proc/uptime"
0000000000001ea4         mov        rbx, rsi
0000000000001ea7         lea        rsi, qword [aLuUser+7]                      ; argument "__modes" for method j_fopen, 0x7965
0000000000001eae         lea        rbp, qword [r12-1]
0000000000001eb3         sub        rsp, 0x2058
0000000000001eba         mov        rax, qword [fs:0x28]
0000000000001ec3         mov        qword [rsp+0x2088+var_40], rax
0000000000001ecb         xor        eax, eax
0000000000001ecd         call       j_fopen                                     ; fopen
0000000000001ed2         test       rax, rax
0000000000001ed5         je         loc_1f00

0000000000001ed7         lea        r13, qword [rsp+0x2088+var_2048]
0000000000001edc         mov        rdx, rax                                    ; argument "__stream" for method j_fgets_unlocked
0000000000001edf         mov        esi, 0x2000                                 ; argument "__n" for method j_fgets_unlocked
0000000000001ee4         mov        r15, rax
0000000000001ee7         mov        rdi, r13                                    ; argument "__s" for method j_fgets_unlocked
0000000000001eea         call       j_fgets_unlocked                            ; fgets_unlocked
0000000000001eef         cmp        rax, r13
0000000000001ef2         je         loc_21fd

0000000000001ef8         mov        rdi, r15
0000000000001efb         call       rpl_fclose                                  ; rpl_fclose

                     loc_1f00:
0000000000001f00         xor        r13d, r13d                                  ; CODE XREF=print_uptime+69
0000000000001f03         test       r12, r12
0000000000001f06         je         loc_226b

                     loc_1f0c:
0000000000001f0c         xor        r14d, r14d                                  ; CODE XREF=print_uptime+958
0000000000001f0f         xor        r12d, r12d
0000000000001f12         jmp        loc_1f36
0000000000001f14         align      8

                     loc_1f18:
0000000000001f18         cmp        ax, 0x2                                     ; CODE XREF=print_uptime+173, print_uptime+179
0000000000001f1c         jne        loc_1f25

0000000000001f1e         movsxd     r14, dword [rbx+0x154]

                     loc_1f25:
0000000000001f25         sub        rbp, 0x1                                    ; CODE XREF=print_uptime+140, print_uptime+185
0000000000001f29         add        rbx, 0x180
0000000000001f30         cmp        rbp, 0xffffffffffffffff
0000000000001f34         je         loc_1f50

                     loc_1f36:
0000000000001f36         cmp        byte [rbx+0x2c], 0x0                        ; CODE XREF=print_uptime+130
0000000000001f3a         movzx      eax, word [rbx]
0000000000001f3d         je         loc_1f18

0000000000001f3f         cmp        ax, 0x7
0000000000001f43         jne        loc_1f18

0000000000001f45         add        r12, 0x1
0000000000001f49         jmp        loc_1f25
0000000000001f4b         align      16

                     loc_1f50:
0000000000001f50         xor        edi, edi                                    ; argument "__timer" for method j_time, CODE XREF=print_uptime+164
0000000000001f52         call       j_time                                      ; time
0000000000001f57         test       r13, r13
0000000000001f5a         mov        qword [rsp+0x2088+var_2070], rax
0000000000001f5f         jne        loc_1f70

0000000000001f61         sub        rax, r14
0000000000001f64         test       r14, r14
0000000000001f67         mov        r13, rax
0000000000001f6a         je         loc_2277

                     loc_1f70:
0000000000001f70         lea        r14, qword [rsp+0x2088+var_2070]            ; CODE XREF=print_uptime+207

                     loc_1f75:
0000000000001f75         mov        rax, r13                                    ; CODE XREF=print_uptime+979
0000000000001f78         movabs     rdx, 0x1845c8a0ce512957
0000000000001f82         mov        rdi, r14                                    ; argument "__timer" for method j_localtime
0000000000001f85         imul       rdx
0000000000001f88         mov        rax, r13
0000000000001f8b         sar        rax, 0x3f
0000000000001f8f         sar        rdx, 0xd
0000000000001f93         mov        rbx, rdx
0000000000001f96         movabs     rdx, 0x48d159e26af37c05
0000000000001fa0         sub        rbx, rax
0000000000001fa3         imul       rsi, rbx, 0xfffffffffffeae80
0000000000001faa         add        rsi, r13
0000000000001fad         mov        rax, rsi
0000000000001fb0         imul       rdx
0000000000001fb3         mov        rax, rsi
0000000000001fb6         sar        rax, 0x3f
0000000000001fba         sar        rdx, 0xa
0000000000001fbe         sub        rdx, rax
0000000000001fc1         imul       eax, edx, 0xe10
0000000000001fc7         mov        rbp, rdx
0000000000001fca         movabs     rdx, 0x8888888888888889
0000000000001fd4         cdqe
0000000000001fd6         sub        rsi, rax
0000000000001fd9         mov        rax, rsi
0000000000001fdc         imul       rdx
0000000000001fdf         add        rdx, rsi
0000000000001fe2         sar        rsi, 0x3f
0000000000001fe6         sar        rdx, 0x5
0000000000001fea         sub        rdx, rsi
0000000000001fed         mov        r15, rdx
0000000000001ff0         call       j_localtime                                 ; localtime
0000000000001ff5         test       rax, rax
0000000000001ff8         mov        r14, rax
0000000000001ffb         mov        edx, 0x5
0000000000002000         je         loc_2188                                    ; DATA XREF=print_uptime+79

0000000000002006         lea        rsi, qword [aHms]                           ; argument "msgid" for method j_dcgettext, " %H:%M:%S  "
000000000000200d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000200f         call       j_dcgettext                                 ; dcgettext
0000000000002014         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000201b         xor        r8d, r8d
000000000000201e         xor        ecx, ecx
0000000000002020         mov        rdx, r14
0000000000002023         mov        rsi, rax
0000000000002026         call       fprintftime                                 ; fprintftime

                     loc_202b:
000000000000202b         cmp        r13, 0xffffffffffffffff                     ; CODE XREF=print_uptime+789
000000000000202f         je         loc_21d6

0000000000002035         test       rbx, rbx
0000000000002038         jle        loc_21aa

000000000000203e         lea        rdx, qword [aUpLdDays2d02d]                 ; argument "__msgid2" for method j_dcngettext, "up %ld days %2d:%02d,  "
0000000000002045         lea        rsi, qword [aUpLdDay2d02d]                  ; argument "__msgid1" for method j_dcngettext, "up %ld day %2d:%02d,  "
000000000000204c         mov        r8d, 0x5                                    ; argument "__category" for method j_dcngettext
0000000000002052         mov        rcx, rbx                                    ; argument "__n" for method j_dcngettext
0000000000002055         xor        edi, edi                                    ; argument "__domainname" for method j_dcngettext
0000000000002057         call       j_dcngettext                                ; dcngettext
000000000000205c         mov        r8d, r15d
000000000000205f         mov        rsi, rax
0000000000002062         mov        ecx, ebp
0000000000002064         mov        rdx, rbx
0000000000002067         mov        edi, 0x1
000000000000206c         xor        eax, eax
000000000000206e         call       j___printf_chk                              ; __printf_chk

                     loc_2073:
0000000000002073         lea        rdx, qword [aLuUsers]                       ; argument "__msgid2" for method j_dcngettext, "%lu users", CODE XREF=print_uptime+833, print_uptime+872
000000000000207a         lea        rsi, qword [aLuUser]                        ; argument "__msgid1" for method j_dcngettext, "%lu user"
0000000000002081         mov        r8d, 0x5                                    ; argument "__category" for method j_dcngettext
0000000000002087         mov        rcx, r12                                    ; argument "__n" for method j_dcngettext
000000000000208a         xor        edi, edi                                    ; argument "__domainname" for method j_dcngettext
000000000000208c         call       j_dcngettext                                ; dcngettext
0000000000002091         mov        rdx, r12
0000000000002094         mov        rsi, rax
0000000000002097         mov        edi, 0x1
000000000000209c         xor        eax, eax
000000000000209e         call       j___printf_chk                              ; __printf_chk
00000000000020a3         lea        rdi, qword [rsp+0x2088+var_2068]            ; argument "__loadavg" for method j_getloadavg
00000000000020a8         mov        esi, 0x3                                    ; argument "__nelem" for method j_getloadavg
00000000000020ad         call       j_getloadavg                                ; getloadavg
00000000000020b2         cmp        eax, 0xffffffff
00000000000020b5         mov        ebx, eax
00000000000020b7         je         loc_2163

00000000000020bd         test       eax, eax
00000000000020bf         jg         loc_20ea

                     loc_20c1:
00000000000020c1         mov        rax, qword [rsp+0x2088+var_40]              ; CODE XREF=print_uptime+755, print_uptime+1053
00000000000020c9         xor        rax, qword [fs:0x28]
00000000000020d2         jne        loc_22bd

00000000000020d8         add        rsp, 0x2058
00000000000020df         pop        rbx
00000000000020e0         pop        rbp
00000000000020e1         pop        r12
00000000000020e3         pop        r13
00000000000020e5         pop        r14
00000000000020e7         pop        r15
00000000000020e9         ret
                        ; endp

                     loc_20ea:
00000000000020ea         movsd      xmm0, qword [rsp+0x2088+var_2068]           ; CODE XREF=print_uptime+559
00000000000020f0         lea        rsi, qword [aLoadAverage2f]                 ; argument "msgid" for method j_dcgettext, ",  load average: %.2f"
00000000000020f7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000020f9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000020fe         movsd      qword [rsp+0x2088+var_2080], xmm0
0000000000002104         call       j_dcgettext                                 ; dcgettext
0000000000002109         movsd      xmm0, qword [rsp+0x2088+var_2080]
000000000000210f         mov        rsi, rax
0000000000002112         mov        edi, 0x1
0000000000002117         mov        eax, 0x1
000000000000211c         call       j___printf_chk                              ; __printf_chk
0000000000002121         cmp        ebx, 0x1
0000000000002124         je         loc_2163

0000000000002126         movsd      xmm0, qword [rsp+0x2088+var_2060]
000000000000212c         lea        rsi, qword [a2f]                            ; ", %.2f"
0000000000002133         mov        edi, 0x1
0000000000002138         mov        eax, 0x1
000000000000213d         call       j___printf_chk                              ; __printf_chk
0000000000002142         cmp        ebx, 0x2
0000000000002145         je         loc_2163

0000000000002147         movsd      xmm0, qword [rsp+0x2088+var_2058]
000000000000214d         lea        rsi, qword [a2f]                            ; ", %.2f"
0000000000002154         mov        edi, 0x1
0000000000002159         mov        eax, 0x1
000000000000215e         call       j___printf_chk                              ; __printf_chk

                     loc_2163:
0000000000002163         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=print_uptime+551, print_uptime+660, print_uptime+693
000000000000216a         mov        rax, qword [rdi+0x28]
000000000000216e         cmp        rax, qword [rdi+0x30]
0000000000002172         jae        loc_22a3

0000000000002178         lea        rdx, qword [rax+1]
000000000000217c         mov        qword [rdi+0x28], rdx
0000000000002180         mov        byte [rax], 0xa
0000000000002183         jmp        loc_20c1

                     loc_2188:
0000000000002188         lea        rsi, qword [aHms+12]                        ; argument "msgid" for method j_dcgettext, 0x78f4, CODE XREF=print_uptime+368
000000000000218f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002191         call       j_dcgettext                                 ; dcgettext
0000000000002196         mov        edi, 0x1
000000000000219b         mov        rsi, rax
000000000000219e         xor        eax, eax
00000000000021a0         call       j___printf_chk                              ; __printf_chk
00000000000021a5         jmp        loc_202b

                     loc_21aa:
00000000000021aa         lea        rsi, qword [aUp2d02d]                       ; argument "msgid" for method j_dcgettext, "up  %2d:%02d,  ", CODE XREF=print_uptime+424
00000000000021b1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000021b3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000021b8         call       j_dcgettext                                 ; dcgettext
00000000000021bd         mov        ecx, r15d
00000000000021c0         mov        rsi, rax
00000000000021c3         mov        edx, ebp
00000000000021c5         mov        edi, 0x1
00000000000021ca         xor        eax, eax
00000000000021cc         call       j___printf_chk                              ; __printf_chk
00000000000021d1         jmp        loc_2073

                     loc_21d6:
00000000000021d6         lea        rsi, qword [aHms+23]                        ; argument "msgid" for method j_dcgettext, 0x78ff, CODE XREF=print_uptime+415
00000000000021dd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000021df         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000021e4         call       j_dcgettext                                 ; dcgettext
00000000000021e9         mov        edi, 0x1
00000000000021ee         mov        rsi, rax
00000000000021f1         xor        eax, eax
00000000000021f3         call       j___printf_chk                              ; __printf_chk
00000000000021f8         jmp        loc_2073

                     loc_21fd:
00000000000021fd         lea        r14, qword [rsp+0x2088+var_2070]            ; CODE XREF=print_uptime+98
0000000000002202         mov        rdi, rax
0000000000002205         mov        qword [rsp+0x2088+var_2080], rax
000000000000220a         mov        rsi, r14
000000000000220d         call       c_strtod                                    ; c_strtod
0000000000002212         mov        rax, qword [rsp+0x2088+var_2080]
0000000000002217         cmp        qword [rsp+0x2088+var_2070], rax
000000000000221c         je         loc_22b8

0000000000002222         ucomisd    xmm0, qword [aOrAvailableLoc+56]            ; 0x7d48
000000000000222a         jb         loc_22b2

0000000000002230         movsd      xmm1, qword [aOrAvailableLoc+64]            ; 0x7d50
0000000000002238         ucomisd    xmm1, xmm0
000000000000223c         jbe        loc_22b2

000000000000223e         cvttsd2si  r13, xmm0

                     loc_2243:
0000000000002243         mov        rdi, r15                                    ; CODE XREF=print_uptime+1062, print_uptime+1067
0000000000002246         call       rpl_fclose                                  ; rpl_fclose
000000000000224b         test       r12, r12
000000000000224e         jne        loc_1f0c

0000000000002254         xor        edi, edi                                    ; argument "__timer" for method j_time
0000000000002256         call       j_time                                      ; time
000000000000225b         test       r13, r13
000000000000225e         mov        qword [rsp+0x2088+var_2070], rax
0000000000002263         jne        loc_1f75

0000000000002269         jmp        loc_2277

                     loc_226b:
000000000000226b         xor        edi, edi                                    ; argument "__timer" for method j_time, CODE XREF=print_uptime+118
000000000000226d         call       j_time                                      ; time
0000000000002272         mov        qword [rsp+0x2088+var_2070], rax

                     loc_2277:
0000000000002277         lea        rsi, qword [aCouldntGetBoot]                ; argument "msgid" for method j_dcgettext, "couldn't get boot time", CODE XREF=print_uptime+218, print_uptime+985
000000000000227e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002283         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002285         call       j_dcgettext                                 ; dcgettext
000000000000228a         mov        rbx, rax
000000000000228d         call       j___errno_location                          ; __errno_location
0000000000002292         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002294         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000002297         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000229c         xor        eax, eax
000000000000229e         call       j_error                                     ; error

                     loc_22a3:
00000000000022a3         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=print_uptime+738
00000000000022a8         call       j___overflow                                ; __overflow
00000000000022ad         jmp        loc_20c1

                     loc_22b2:
00000000000022b2         or         r13, 0xffffffffffffffff                     ; CODE XREF=print_uptime+922, print_uptime+940
00000000000022b6         jmp        loc_2243

                     loc_22b8:
00000000000022b8         xor        r13d, r13d                                  ; CODE XREF=print_uptime+908
00000000000022bb         jmp        loc_2243

                     loc_22bd:
00000000000022bd         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=print_uptime+578
                        ; endp
00000000000022c2         align      16                                          ; End of unwind block (FDE at 0x8b9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32


                     uptime:
00000000000022d0         push       rbx                                         ; Begin of unwind block (FDE at 0x8bec), CODE XREF=main+183, main+209
00000000000022d1         mov        ecx, esi
00000000000022d3         mov        rbx, rdi
00000000000022d6         sub        rsp, 0x20
00000000000022da         lea        rdx, qword [rsp+0x28+var_18]
00000000000022df         lea        rsi, qword [rsp+0x28+var_20]
00000000000022e4         mov        qword [rsp+0x28+var_18], 0x0
00000000000022ed         mov        rax, qword [fs:0x28]
00000000000022f6         mov        qword [rsp+0x28+var_10], rax
00000000000022fb         xor        eax, eax
00000000000022fd         call       read_utmp                                   ; read_utmp
0000000000002302         test       eax, eax
0000000000002304         jne        loc_232b

0000000000002306         mov        rsi, qword [rsp+0x28+var_18]
000000000000230b         mov        rdi, qword [rsp+0x28+var_20]
0000000000002310         call       print_uptime                                ; print_uptime
0000000000002315         mov        rax, qword [rsp+0x28+var_10]
000000000000231a         xor        rax, qword [fs:0x28]
0000000000002323         jne        loc_235a

0000000000002325         add        rsp, 0x20
0000000000002329         pop        rbx
000000000000232a         ret
                        ; endp

                     loc_232b:
000000000000232b         mov        rdx, rbx                                    ; CODE XREF=uptime+52
000000000000232e         mov        esi, 0x3
0000000000002333         xor        edi, edi
0000000000002335         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000233a         mov        rbx, rax
000000000000233d         call       j___errno_location                          ; __errno_location
0000000000002342         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002344         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x7d6f
000000000000234b         mov        rcx, rbx
000000000000234e         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002353         xor        eax, eax
0000000000002355         call       j_error                                     ; error

                     loc_235a:
000000000000235a         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=uptime+83
                        ; endp
000000000000235f         align      32                                          ; End of unwind block (FDE at 0x8bec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
0000000000002360         push       r13                                         ; Begin of unwind block (FDE at 0x8c10), CODE XREF=main+270, DATA XREF=main+141
0000000000002362         push       r12
0000000000002364         mov        edx, 0x5
0000000000002369         push       rbp
000000000000236a         push       rbx
000000000000236b         mov        ebp, edi
000000000000236d         sub        rsp, 0x88
0000000000002374         mov        rbx, qword [program_name]                   ; program_name
000000000000237b         mov        rax, qword [fs:0x28]
0000000000002384         mov        qword [rsp+0xa8+var_30], rax
0000000000002389         xor        eax, eax
000000000000238b         test       edi, edi
000000000000238d         je         loc_23bd

000000000000238f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000002396         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002398         call       j_dcgettext                                 ; dcgettext
000000000000239d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
00000000000023a4         mov        rdx, rax
00000000000023a7         mov        rcx, rbx
00000000000023aa         mov        esi, 0x1
00000000000023af         xor        eax, eax
00000000000023b1         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_23b6:
00000000000023b6         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+718
00000000000023b8         call       j_exit                                      ; exit
                        ; endp

                     loc_23bd:
00000000000023bd         lea        rsi, qword [aUsageSOptionFi]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... [FILE]\\n", CODE XREF=usage+45
00000000000023c4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023c6         call       j_dcgettext                                 ; dcgettext
00000000000023cb         mov        rdx, rbx
00000000000023ce         mov        rsi, rax
00000000000023d1         mov        edi, 0x1
00000000000023d6         xor        eax, eax
00000000000023d8         call       j___printf_chk                              ; __printf_chk
00000000000023dd         lea        rsi, qword [aPrintTheCurren]                ; argument "msgid" for method j_dcgettext, "Print the current time, the length of time the system has been up,\\nthe number of users on the system, and the average number of jobs\\nin the run queue over the last 1, 5 and 15 minutes."
00000000000023e4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000023e9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023eb         call       j_dcgettext                                 ; dcgettext
00000000000023f0         mov        edi, 0x1
00000000000023f5         mov        rsi, rax
00000000000023f8         xor        eax, eax
00000000000023fa         call       j___printf_chk                              ; __printf_chk
00000000000023ff         lea        rsi, qword [aProcessesInnan]                ; argument "msgid" for method j_dcgettext, "  Processes in\\nan uninterruptible sleep state also contribute to the load average.\\n"
0000000000002406         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000240b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000240d         call       j_dcgettext                                 ; dcgettext
0000000000002412         mov        edi, 0x1
0000000000002417         mov        rsi, rax
000000000000241a         xor        eax, eax
000000000000241c         call       j___printf_chk                              ; __printf_chk
0000000000002421         lea        rsi, qword [aIfFileIsNotSpe]                ; argument "msgid" for method j_dcgettext, "If FILE is not specified, use %s.  %s as FILE is common.\\n\\n"
0000000000002428         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000242d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000242f         call       j_dcgettext                                 ; dcgettext
0000000000002434         lea        rcx, qword [aVarlogwtmp]                    ; "/var/log/wtmp"
000000000000243b         lea        rdx, qword [aVarrunutmp]                    ; "/var/run/utmp"
0000000000002442         mov        rsi, rax
0000000000002445         mov        edi, 0x1
000000000000244a         xor        eax, eax
000000000000244c         call       j___printf_chk                              ; __printf_chk
0000000000002451         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002458         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
000000000000245f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002464         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002466         call       j_dcgettext                                 ; dcgettext
000000000000246b         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000246e         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002471         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002476         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000247d         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
0000000000002484         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002489         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000248b         call       j_dcgettext                                 ; dcgettext
0000000000002490         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002493         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002496         lea        rbx, qword [aSha384sum]                     ; "sha384sum"
000000000000249d         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000024a2         lea        rax, qword [aVarrunutmp+14]                 ; 0x79be
00000000000024a9         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
00000000000024b0         mov        qword [rsp+0xa8+var_68], rbx
00000000000024b5         lea        rbx, qword [aProcuptime+6]                  ; 0x78ca
00000000000024bc         mov        qword [rsp+0xa8+var_48], 0x0
00000000000024c5         mov        qword [rsp+0xa8+var_40], 0x0
00000000000024ce         mov        qword [rsp+0xa8+var_A8], rax
00000000000024d2         lea        rax, qword [aTestInvocation]                ; "test invocation"
00000000000024d9         mov        qword [rsp+0xa8+var_78], rcx
00000000000024de         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
00000000000024e5         mov        rdx, rsp
00000000000024e8         mov        qword [rsp+0xa8+var_A0], rax
00000000000024ed         lea        rax, qword [aCoreutils]                     ; "coreutils"
00000000000024f4         mov        qword [rsp+0xa8+var_58], rcx
00000000000024f9         mov        qword [rsp+0xa8+var_98], rax
00000000000024fe         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
0000000000002505         mov        qword [rsp+0xa8+var_90], rax
000000000000250a         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000002511         mov        qword [rsp+0xa8+var_88], rax
0000000000002516         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
000000000000251d         mov        qword [rsp+0xa8+var_80], rax
0000000000002522         mov        qword [rsp+0xa8+var_70], rax
0000000000002527         mov        qword [rsp+0xa8+var_60], rax
000000000000252c         mov        qword [rsp+0xa8+var_50], rax
0000000000002531         nop        dword [rax]

                     loc_2538:
0000000000002538         add        rdx, 0x10                                   ; CODE XREF=usage+501
000000000000253c         mov        rdi, qword [rdx]
000000000000253f         test       rdi, rdi
0000000000002542         je         loc_2557

0000000000002544         mov        ecx, 0x7
0000000000002549         mov        rsi, rbx
000000000000254c         rep  cmpsb byte [rsi], byte [rdi]
000000000000254e         seta       al
0000000000002551         sbb        al, 0x0
0000000000002553         test       al, al
0000000000002555         jne        loc_2538

                     loc_2557:
0000000000002557         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+482
000000000000255b         xor        edi, edi
000000000000255d         mov        edx, 0x5
0000000000002562         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000002569         test       r12, r12
000000000000256c         je         loc_2633

0000000000002572         call       j_dcgettext                                 ; dcgettext
0000000000002577         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000257e         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x7a34
0000000000002585         mov        rsi, rax
0000000000002588         mov        edi, 0x1
000000000000258d         xor        eax, eax
000000000000258f         call       j___printf_chk                              ; __printf_chk
0000000000002594         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000002596         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
000000000000259b         call       j_setlocale                                 ; setlocale
00000000000025a0         test       rax, rax
00000000000025a3         je         loc_25c1

00000000000025a5         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x7a42
00000000000025ac         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
00000000000025b1         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
00000000000025b4         call       j_strncmp                                   ; strncmp
00000000000025b9         test       eax, eax
00000000000025bb         jne        loc_26c8

                     loc_25c1:
00000000000025c1         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+579, usage+909
00000000000025c8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000025ca         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000025cf         call       j_dcgettext                                 ; dcgettext
00000000000025d4         lea        rcx, qword [aProcuptime+6]                  ; 0x78ca
00000000000025db         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000025e2         mov        rsi, rax
00000000000025e5         mov        edi, 0x1
00000000000025ea         xor        eax, eax
00000000000025ec         call       j___printf_chk                              ; __printf_chk
00000000000025f1         cmp        r12, rbx
00000000000025f4         lea        rcx, qword [aMulticallInvoc+10]             ; 0x79da
00000000000025fb         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x8501
0000000000002602         cmove      rbx, rcx

                     loc_2606:
0000000000002606         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+860
000000000000260d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000260f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002614         call       j_dcgettext                                 ; dcgettext
0000000000002619         mov        rcx, rbx
000000000000261c         mov        rsi, rax
000000000000261f         mov        rdx, r12
0000000000002622         mov        edi, 0x1
0000000000002627         xor        eax, eax
0000000000002629         call       j___printf_chk                              ; __printf_chk
000000000000262e         jmp        loc_23b6

                     loc_2633:
0000000000002633         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+524
0000000000002638         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000263f         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x7a34
0000000000002646         mov        rsi, rax
0000000000002649         mov        edi, 0x1
000000000000264e         xor        eax, eax
0000000000002650         call       j___printf_chk                              ; __printf_chk
0000000000002655         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000002657         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
000000000000265c         call       j_setlocale                                 ; setlocale
0000000000002661         test       rax, rax
0000000000002664         je         loc_267e

0000000000002666         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x7a42
000000000000266d         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000002672         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000002675         call       j_strncmp                                   ; strncmp
000000000000267a         test       eax, eax
000000000000267c         jne        loc_26c1

                     loc_267e:
000000000000267e         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+772
0000000000002685         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000268a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000268c         lea        r12, qword [aProcuptime+6]                  ; 0x78ca
0000000000002693         lea        rbx, qword [aMulticallInvoc+10]             ; 0x79da
000000000000269a         call       j_dcgettext                                 ; dcgettext
000000000000269f         lea        rcx, qword [aProcuptime+6]                  ; 0x78ca
00000000000026a6         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000026ad         mov        rsi, rax
00000000000026b0         mov        edi, 0x1
00000000000026b5         xor        eax, eax
00000000000026b7         call       j___printf_chk                              ; __printf_chk
00000000000026bc         jmp        loc_2606

                     loc_26c1:
00000000000026c1         lea        r12, qword [aProcuptime+6]                  ; 0x78ca, CODE XREF=usage+796

                     loc_26c8:
00000000000026c8         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+603
00000000000026cf         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
00000000000026d6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000026d8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000026dd         call       j_dcgettext                                 ; dcgettext
00000000000026e2         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
00000000000026e5         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000026e8         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000026ed         jmp        loc_25c1
00000000000026f2         align      256                                         ; End of unwind block (FDE at 0x8c10)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     c_strtod:
0000000000002700         push       rbp                                         ; Begin of unwind block (FDE at 0x8c7c), CODE XREF=print_uptime+893
0000000000002701         push       rbx
0000000000002702         mov        rbp, rdi
0000000000002705         mov        rbx, rsi
0000000000002708         sub        rsp, 0x8
000000000000270c         mov        rax, qword [c_locale_cache]                 ; c_locale_cache
0000000000002713         test       rax, rax
0000000000002716         je         loc_2750

                     loc_2718:
0000000000002718         mov        rdx, qword [c_locale_cache]                 ; c_locale_cache, CODE XREF=c_strtod+106
000000000000271f         test       rdx, rdx
0000000000002722         je         loc_2738

0000000000002724         add        rsp, 0x8
0000000000002728         mov        rsi, rbx                                    ; argument "__endptr" for method j_strtod_l
000000000000272b         mov        rdi, rbp                                    ; argument "__nptr" for method j_strtod_l
000000000000272e         pop        rbx
000000000000272f         pop        rbp
0000000000002730         jmp        j_strtod_l                                  ; strtod_l
                        ; endp
0000000000002735         align      8

                     loc_2738:
0000000000002738         test       rbx, rbx                                    ; CODE XREF=c_strtod+34
000000000000273b         pxor       xmm0, xmm0
000000000000273f         je         loc_2748

0000000000002741         pxor       xmm0, xmm0
0000000000002745         mov        qword [rbx], rbp

                     loc_2748:
0000000000002748         add        rsp, 0x8                                    ; CODE XREF=c_strtod+63
000000000000274c         pop        rbx
000000000000274d         pop        rbp
000000000000274e         ret
                        ; endp
000000000000274f         align      16

                     loc_2750:
0000000000002750         lea        rsi, qword [a831+5]                         ; argument "__locale" for method j_newlocale, 0x7d5d, CODE XREF=c_strtod+22
0000000000002757         xor        edx, edx                                    ; argument "__base" for method j_newlocale
0000000000002759         mov        edi, 0x1fbf                                 ; argument "__category_mask" for method j_newlocale
000000000000275e         call       j_newlocale                                 ; newlocale
0000000000002763         mov        qword [c_locale_cache], rax                 ; c_locale_cache
000000000000276a         jmp        loc_2718
000000000000276c         align      16                                          ; End of unwind block (FDE at 0x8c7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000002770         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x8cb4), file_name
0000000000002777         ret
                        ; endp
0000000000002778         align      128                                         ; End of unwind block (FDE at 0x8cb4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000002780         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x8cc8), ignore_EPIPE
0000000000002787         ret
                        ; endp
0000000000002788         align      16                                          ; End of unwind block (FDE at 0x8cc8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000002790         push       rbp                                         ; Begin of unwind block (FDE at 0x8cdc), DATA XREF=main+67
0000000000002791         push       rbx
0000000000002792         sub        rsp, 0x8
0000000000002796         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000279d         call       close_stream                                ; close_stream
00000000000027a2         test       eax, eax
00000000000027a4         je         loc_27bc

00000000000027a6         call       j___errno_location                          ; __errno_location
00000000000027ab         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
00000000000027b2         mov        rbx, rax
00000000000027b5         je         loc_27d3

00000000000027b7         cmp        dword [rax], 0x20
00000000000027ba         jne        loc_27d3

                     loc_27bc:
00000000000027bc         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
00000000000027c3         call       close_stream                                ; close_stream
00000000000027c8         test       eax, eax
00000000000027ca         jne        loc_2812

00000000000027cc         add        rsp, 0x8
00000000000027d0         pop        rbx
00000000000027d1         pop        rbp
00000000000027d2         ret
                        ; endp

                     loc_27d3:
00000000000027d3         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
00000000000027da         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000027dc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000027e1         call       j_dcgettext                                 ; dcgettext
00000000000027e6         mov        rdi, qword [file_name]                      ; file_name
00000000000027ed         mov        rbp, rax
00000000000027f0         test       rdi, rdi
00000000000027f3         je         loc_281d

00000000000027f5         call       quotearg_colon                              ; quotearg_colon
00000000000027fa         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
00000000000027fc         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000002803         mov        rcx, rax
0000000000002806         mov        r8, rbp
0000000000002809         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000280b         xor        eax, eax
000000000000280d         call       j_error                                     ; error

                     loc_2812:
0000000000002812         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000002818         call       j__exit                                     ; _exit
                        ; endp

                     loc_281d:
000000000000281d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
000000000000281f         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x7d6f
0000000000002826         mov        rcx, rax
0000000000002829         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000282b         xor        eax, eax
000000000000282d         call       j_error                                     ; error
0000000000002832         jmp        loc_2812
0000000000002834         align      64                                          ; End of unwind block (FDE at 0x8cdc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fwrite_lowcase:
0000000000002840         test       rdx, rdx                                    ; Begin of unwind block (FDE at 0x8d0c), CODE XREF=sub_3bf0+335, sub_4260+302
0000000000002843         je         loc_2890

0000000000002845         push       r13
0000000000002847         push       r12
0000000000002849         mov        r12, rdi
000000000000284c         push       rbp
000000000000284d         push       rbx
000000000000284e         mov        rbp, rdx
0000000000002851         mov        rbx, rsi
0000000000002854         sub        rsp, 0x8
0000000000002858         add        rbp, rbx
000000000000285b         call       j___ctype_tolower_loc                       ; __ctype_tolower_loc
0000000000002860         mov        r13, rax
0000000000002863         nop        dword [rax+rax]

                     loc_2868:
0000000000002868         movzx      ecx, byte [rbx]                             ; CODE XREF=fwrite_lowcase+65
000000000000286b         mov        rax, qword [r13]
000000000000286f         mov        rsi, r12                                    ; argument "__stream" for method j_fputc
0000000000002872         add        rbx, 0x1
0000000000002876         mov        edi, dword [rax+rcx*4]                      ; argument "__c" for method j_fputc
0000000000002879         call       j_fputc                                     ; fputc
000000000000287e         cmp        rbx, rbp
0000000000002881         jne        loc_2868

0000000000002883         add        rsp, 0x8
0000000000002887         pop        rbx
0000000000002888         pop        rbp
0000000000002889         pop        r12
000000000000288b         pop        r13
000000000000288d         ret
                        ; endp
000000000000288e         align      16

                     loc_2890:
0000000000002890         ret                                                    ; CODE XREF=fwrite_lowcase+3
                        ; endp
0000000000002892         align      32                                          ; End of unwind block (FDE at 0x8d0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fwrite_uppcase:
00000000000028a0         test       rdx, rdx                                    ; Begin of unwind block (FDE at 0x8d48), CODE XREF=__strftime_internal+713, sub_2ca0+286, sub_3050+345, sub_3050+2506
00000000000028a3         je         loc_28f0

00000000000028a5         push       r13
00000000000028a7         push       r12
00000000000028a9         mov        r12, rdi
00000000000028ac         push       rbp
00000000000028ad         push       rbx
00000000000028ae         mov        rbp, rdx
00000000000028b1         mov        rbx, rsi
00000000000028b4         sub        rsp, 0x8
00000000000028b8         add        rbp, rbx
00000000000028bb         call       j___ctype_toupper_loc                       ; __ctype_toupper_loc
00000000000028c0         mov        r13, rax
00000000000028c3         nop        dword [rax+rax]

                     loc_28c8:
00000000000028c8         movzx      ecx, byte [rbx]                             ; CODE XREF=fwrite_uppcase+65
00000000000028cb         mov        rax, qword [r13]
00000000000028cf         mov        rsi, r12                                    ; argument "__stream" for method j_fputc
00000000000028d2         add        rbx, 0x1
00000000000028d6         mov        edi, dword [rax+rcx*4]                      ; argument "__c" for method j_fputc
00000000000028d9         call       j_fputc                                     ; fputc
00000000000028de         cmp        rbx, rbp
00000000000028e1         jne        loc_28c8

00000000000028e3         add        rsp, 0x8
00000000000028e7         pop        rbx
00000000000028e8         pop        rbp
00000000000028e9         pop        r12
00000000000028eb         pop        r13
00000000000028ed         ret
                        ; endp
00000000000028ee         align      16

                     loc_28f0:
00000000000028f0         ret                                                    ; CODE XREF=fwrite_uppcase+3
                        ; endp
00000000000028f2         align      256                                         ; End of unwind block (FDE at 0x8d48)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_4B0: int64_t, -1200
        ;    var_4B4: int8_t, -1204
        ;    var_4B8: int32_t, -1208
        ;    var_4C0: int64_t, -1216
        ;    var_4C4: int32_t, -1220
        ;    var_4C5: int8_t, -1221
        ;    var_4D0: int64_t, -1232
        ;    var_4D8: int64_t, -1240
        ;    var_4E0: int64_t, -1248
        ;    var_4E8: int64_t, -1256


                     __strftime_internal:
0000000000002900         push       r15                                         ; Begin of unwind block (FDE at 0x8d84), CODE XREF=sub_2e10+403, sub_3d50+274, fprintftime+45
0000000000002902         push       r14
0000000000002904         mov        r10, rsi
0000000000002907         push       r13
0000000000002909         push       r12
000000000000290b         mov        r12, rdi
000000000000290e         push       rbp
000000000000290f         push       rbx
0000000000002910         mov        ebp, r9d
0000000000002913         sub        rsp, 0x4b8
000000000000291a         mov        r13, qword [rdx+0x30]
000000000000291e         mov        r14d, dword [rdx+8]
0000000000002922         mov        rax, qword [rsp+0x4e8+arg_0]
000000000000292a         mov        qword [rsp+0x4e8+var_4E8], rdx
000000000000292e         mov        dword [rsp+0x4e8+var_4C4], r8d
0000000000002933         mov        byte [rsp+0x4e8+var_4C5], cl
0000000000002937         mov        qword [rsp+0x4e8+var_4D0], rax
000000000000293c         mov        rax, qword [rsp+0x4e8+arg_8]
0000000000002944         mov        qword [rsp+0x4e8+var_4D8], rax
0000000000002949         mov        rax, qword [fs:0x28]
0000000000002952         mov        qword [rsp+0x4e8+var_40], rax
000000000000295a         xor        eax, eax
000000000000295c         lea        rax, qword [aWrittenBySSAnd+27]             ; 0x8501
0000000000002963         test       r13, r13
0000000000002966         cmove      r13, rax
000000000000296a         cmp        r14d, 0xc
000000000000296e         jle        loc_2ac8

0000000000002974         sub        r14d, 0xc

                     loc_2978:
0000000000002978         movzx      eax, byte [r10]                             ; CODE XREF=__strftime_internal+468
000000000000297c         xor        r15d, r15d
000000000000297f         test       al, al
0000000000002981         je         loc_29c2

0000000000002983         cmp        al, 0x25
0000000000002985         mov        rbx, r10
0000000000002988         mov        dword [rsp+0x4e8+var_4B8], r14d
000000000000298d         mov        qword [rsp+0x4e8+var_4C0], r13
0000000000002992         movsxd     r10, ebp
0000000000002995         je         loc_2a2b

                     loc_299b:
000000000000299b         test       r10d, r10d                                  ; CODE XREF=__strftime_internal+293
000000000000299e         mov        r14d, 0x0
00000000000029a4         mov        eax, 0x1
00000000000029a9         cmovns     r14, r10
00000000000029ad         test       r14, r14
00000000000029b0         cmove      r14, rax
00000000000029b4         mov        rax, r15
00000000000029b7         not        rax
00000000000029ba         cmp        rax, r14
00000000000029bd         ja         loc_29f0

                     loc_29bf:
00000000000029bf         xor        r15d, r15d                                  ; CODE XREF=__strftime_internal+599, sub_2e10+448, sub_3050+1806, sub_3050+2382, sub_3050+2840

                     loc_29c2:
00000000000029c2         mov        rdi, qword [rsp+0x4e8+var_40]               ; CODE XREF=__strftime_internal+129, __strftime_internal+289
00000000000029ca         xor        rdi, qword [fs:0x28]
00000000000029d3         mov        rax, r15
00000000000029d6         jne        loc_44f8

00000000000029dc         add        rsp, 0x4b8
00000000000029e3         pop        rbx
00000000000029e4         pop        rbp
00000000000029e5         pop        r12
00000000000029e7         pop        r13
00000000000029e9         pop        r14
00000000000029eb         pop        r15
00000000000029ed         ret
                        ; endp
00000000000029ee         align      16

                     loc_29f0:
00000000000029f0         test       r12, r12                                    ; CODE XREF=__strftime_internal+189
00000000000029f3         je         loc_2a0a

00000000000029f5         cmp        r10d, 0x1
00000000000029f9         jg         loc_2be0

                     loc_29ff:
00000000000029ff         movsx      edi, byte [rbx]                             ; argument "__c" for method j_fputc, CODE XREF=__strftime_internal+774, sub_3050+1884, sub_4260+614
0000000000002a02         mov        rsi, r12                                    ; argument "__stream" for method j_fputc, CODE XREF=sub_3050+1825
0000000000002a05         call       j_fputc                                     ; fputc

                     loc_2a0a:
0000000000002a0a         add        r15, r14                                    ; CODE XREF=__strftime_internal+243, sub_3050+1815
0000000000002a0d         mov        rbp, rbx

                     loc_2a10:
0000000000002a10         movzx      eax, byte [rbp+1]                           ; CODE XREF=__strftime_internal+721, sub_3050+2517
0000000000002a14         lea        rbx, qword [rbp+1]
0000000000002a18         mov        r10, 0xffffffffffffffff
0000000000002a1f         test       al, al
0000000000002a21         je         loc_29c2

0000000000002a23         cmp        al, 0x25
0000000000002a25         jne        loc_299b

                     loc_2a2b:
0000000000002a2b         movzx      eax, byte [rsp+0x4e8+var_4C5]               ; CODE XREF=__strftime_internal+149
0000000000002a30         xor        r14d, r14d
0000000000002a33         mov        dword [rsp+0x4e8+var_4E0], 0x0
0000000000002a3b         mov        byte [rsp+0x4e8+var_4B4], al
0000000000002a3f         mov        eax, 0x1

                     loc_2a44:
0000000000002a44         add        rbx, 0x1                                    ; CODE XREF=__strftime_internal+501, __strftime_internal+518, __strftime_internal+789
0000000000002a48         movsx      r11d, byte [rbx]
0000000000002a4c         lea        ecx, dword [r11-0x23]
0000000000002a50         mov        r13d, r11d
0000000000002a53         mov        edi, r11d
0000000000002a56         cmp        cl, 0x3c
0000000000002a59         ja         loc_2a8f

0000000000002a5b         mov        rdx, rax
0000000000002a5e         movabs     rsi, 0x1000000000002500
0000000000002a68         shl        rdx, cl
0000000000002a6b         test       rdx, rsi
0000000000002a6e         jne        loc_2af0

0000000000002a74         test       cl, cl
0000000000002a76         je         loc_2b00

0000000000002a7c         movabs     rsi, 0x800000000000000
0000000000002a86         test       rdx, rsi
0000000000002a89         jne        loc_2c10

                     loc_2a8f:
0000000000002a8f         lea        eax, dword [r11-0x30]                       ; CODE XREF=__strftime_internal+345
0000000000002a93         cmp        eax, 0x9
0000000000002a96         jbe        loc_2c20

                     loc_2a9c:
0000000000002a9c         cmp        r13b, 0x45                                  ; CODE XREF=__strftime_internal+853, __strftime_internal+916
0000000000002aa0         je         loc_2ae0

0000000000002aa2         cmp        r13b, 0x4f
0000000000002aa6         je         loc_2ae0

0000000000002aa8         xor        r11d, r11d

                     loc_2aab:
0000000000002aab         cmp        r13b, 0x7a                                  ; CODE XREF=__strftime_internal+491
0000000000002aaf         ja         loc_2b10

0000000000002ab1         lea        rsi, qword [aMdy+10]                        ; 0x7d94
0000000000002ab8         movzx      eax, r13b
0000000000002abc         movsxd     rax, dword [rsi+rax*4]
0000000000002ac0         add        rax, rsi
0000000000002ac3         jmp        rax
                        ; endp
0000000000002ac5         align      8

                     loc_2ac8:
0000000000002ac8         test       r14d, r14d                                  ; CODE XREF=__strftime_internal+110
0000000000002acb         mov        eax, 0xc
0000000000002ad0         cmove      r14d, eax
0000000000002ad4         jmp        loc_2978
0000000000002ad9         align      32

                     loc_2ae0:
0000000000002ae0         movsx      edi, byte [rbx+1]                           ; CODE XREF=__strftime_internal+416, __strftime_internal+422
0000000000002ae4         add        rbx, 0x1
0000000000002ae8         mov        r13d, edi
0000000000002aeb         jmp        loc_2aab
0000000000002aed         align      16

                     loc_2af0:
0000000000002af0         mov        dword [rsp+0x4e8+var_4E0], r11d             ; CODE XREF=__strftime_internal+366
0000000000002af5         jmp        loc_2a44
0000000000002afa         align      256

                     loc_2b00:
0000000000002b00         mov        r14d, 0x1                                   ; CODE XREF=__strftime_internal+374
0000000000002b06         jmp        loc_2a44

                     loc_2b0b:
0000000000002b0b         mov        rbx, qword [rsp+56]                         ; CODE XREF=sub_3050+1697
                        ; endp

                     loc_2b10:
0000000000002b10         lea        rax, qword [rbx-1]                          ; CODE XREF=__strftime_internal+431, sub_2e10+285, sub_2e10+478, sub_3050+853, sub_3050+906, sub_3050+1288, sub_3050+1315, sub_3050+1342, sub_3050+1427, sub_3050+1569, sub_3050+1601
0000000000002b14         mov        r13d, 0x1

                     loc_2b1a:
0000000000002b1a         mov        rdx, rax                                    ; CODE XREF=__strftime_internal+553
0000000000002b1d         lea        rax, qword [rax-1]
0000000000002b21         add        r13d, 0x1
0000000000002b25         cmp        byte [rax+1], 0x25
0000000000002b29         jne        loc_2b1a

0000000000002b2b         test       r10d, r10d
0000000000002b2e         mov        eax, 0x0
0000000000002b33         movsxd     r13, r13d
0000000000002b36         cmovns     eax, r10d
0000000000002b3a         mov        qword [rsp+0x4e8+var_4B0], rdx
0000000000002b3f         mov        r14, r13
0000000000002b42         cdqe
0000000000002b44         mov        rdx, r15
0000000000002b47         mov        rbp, rbx
0000000000002b4a         cmp        rax, r13
0000000000002b4d         not        rdx
0000000000002b50         cmovae     r14, rax
0000000000002b54         cmp        rdx, r14                                    ; CODE XREF=sub_41b0+37
0000000000002b57         jbe        loc_29bf

0000000000002b5d         test       r12, r12
0000000000002b60         je         loc_2bce

0000000000002b62         cmp        r13, rax
0000000000002b65         jae        loc_2bb3

0000000000002b67         mov        eax, dword [rsp+0x4e8+var_4E0]
0000000000002b6b         movsxd     rbx, r10d
0000000000002b6e         sub        rbx, r13
0000000000002b71         cmp        eax, 0x30
0000000000002b74         je         loc_3da3

0000000000002b7a         cmp        eax, 0x2b
0000000000002b7d         je         loc_3da3

0000000000002b83         xor        edx, edx
0000000000002b85         test       rbx, rbx
0000000000002b88         je         loc_2bb3

0000000000002b8a         mov        qword [rsp+0x4e8+var_4E0], rbp
0000000000002b8f         mov        rbp, rdx
0000000000002b92         nop        word [rax+rax]

                     loc_2b98:
0000000000002b98         mov        rsi, r12                                    ; argument "__stream" for method j_fputc, CODE XREF=__strftime_internal+684
0000000000002b9b         mov        edi, 0x20                                   ; argument "__c" for method j_fputc
0000000000002ba0         add        rbp, 0x1
0000000000002ba4         call       j_fputc                                     ; fputc
0000000000002ba9         cmp        rbx, rbp
0000000000002bac         jne        loc_2b98

                     loc_2bae:
0000000000002bae         mov        rbp, qword [rsp+0x4e8+var_4E0]              ; CODE XREF=sub_3d50+134

                     loc_2bb3:
0000000000002bb3         cmp        byte [rsp+0x4e8+var_4B4], 0x0               ; CODE XREF=__strftime_internal+613, __strftime_internal+648, sub_3d50+86
0000000000002bb8         je         loc_3ce8

0000000000002bbe         mov        rsi, qword [rsp+0x4e8+var_4B0]
0000000000002bc3         mov        rdx, r13
0000000000002bc6         mov        rdi, r12
0000000000002bc9         call       fwrite_uppcase                              ; fwrite_uppcase

                     loc_2bce:
0000000000002bce         add        r15, r14                                    ; CODE XREF=__strftime_internal+608, sub_3bf0+269
0000000000002bd1         jmp        loc_2a10
0000000000002bd6         align      32

                     loc_2be0:
0000000000002be0         lea        r13, qword [r10-1]                          ; CODE XREF=__strftime_internal+249
0000000000002be4         xor        ebp, ebp
0000000000002be6         nop        word [cs:rax+rax]

                     loc_2bf0:
0000000000002bf0         mov        rsi, r12                                    ; argument "__stream" for method j_fputc, CODE XREF=__strftime_internal+772
0000000000002bf3         mov        edi, 0x20                                   ; argument "__c" for method j_fputc
0000000000002bf8         add        rbp, 0x1
0000000000002bfc         call       j_fputc                                     ; fputc
0000000000002c01         cmp        r13, rbp
0000000000002c04         jne        loc_2bf0

0000000000002c06         jmp        loc_29ff
0000000000002c0b         align      16

                     loc_2c10:
0000000000002c10         mov        byte [rsp+0x4e8+var_4B4], 0x1               ; CODE XREF=__strftime_internal+393
0000000000002c15         jmp        loc_2a44
0000000000002c1a         align      32

                     loc_2c20:
0000000000002c20         xor        r10d, r10d                                  ; CODE XREF=__strftime_internal+406

                     loc_2c23:
0000000000002c23         movsx      r11d, byte [rbx+1]                          ; CODE XREF=__strftime_internal+848
0000000000002c28         cmp        r10d, 0xccccccc
0000000000002c2f         lea        rcx, qword [rbx+1]
0000000000002c33         mov        r13d, r11d
0000000000002c36         lea        eax, dword [r11-0x30]
0000000000002c3a         jg         loc_2c65

0000000000002c3c         movsx      edx, byte [rbx]
0000000000002c3f         je         loc_2c60

                     loc_2c41:
0000000000002c41         lea        esi, dword [r10+r10*4]                      ; CODE XREF=__strftime_internal+867
0000000000002c45         mov        rbx, rcx
0000000000002c48         lea        r10d, dword [rdx+rsi*2-0x30]

                     loc_2c4d:
0000000000002c4d         cmp        eax, 0x9                                    ; CODE XREF=__strftime_internal+896
0000000000002c50         jbe        loc_2c23

0000000000002c52         mov        edi, r11d
0000000000002c55         jmp        loc_2a9c
0000000000002c5a         align      32

                     loc_2c60:
0000000000002c60         cmp        dl, 0x37                                    ; CODE XREF=__strftime_internal+831
0000000000002c63         jle        loc_2c41

                     loc_2c65:
0000000000002c65         cmp        eax, 0x9                                    ; CODE XREF=__strftime_internal+826
0000000000002c68         ja         loc_2c88

0000000000002c6a         movsx      r11d, byte [rbx+2]
0000000000002c6f         mov        r10d, 0x7fffffff
0000000000002c75         add        rbx, 0x2
0000000000002c79         mov        r13d, r11d
0000000000002c7c         lea        eax, dword [r11-0x30]
0000000000002c80         jmp        loc_2c4d
0000000000002c82         align      8

                     loc_2c88:
0000000000002c88         mov        edi, r11d                                   ; CODE XREF=__strftime_internal+872
0000000000002c8b         mov        rbx, rcx
0000000000002c8e         mov        r10d, 0x7fffffff
0000000000002c94         jmp        loc_2a9c
0000000000002c99         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_98: int8_t, 160
        ;    arg_95: int8_t, 157
        ;    arg_93: int16_t, 155
        ;    arg_50: int, 88
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_2C: int8_t, 52
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    ret_addr: int64_t, 0


                     sub_2ca0:
0000000000002ca0         cmp        r11d, 0x4f
0000000000002ca4         je         __strftime_internal+528

0000000000002caa         xor        r14d, r14d                                  ; CODE XREF=sub_3050+1756
0000000000002cad         mov        ebp, 0x2520                                 ; CODE XREF=sub_2e10+328, sub_3050+1745, sub_3050+2971, sub_3d50+357
0000000000002cb2         test       r11d, r11d
0000000000002cb5         mov        word [rsp+arg_93], bp
0000000000002cbd         jne        loc_4510

0000000000002cc3         lea        rdx, qword [rsp+arg_93]
0000000000002ccb         mov        rbp, rbx
0000000000002cce         lea        rax, qword [rdx+2]

                     loc_2cd2:
0000000000002cd2         mov        byte [rax], r13b                            ; CODE XREF=sub_2e10+276
0000000000002cd5         mov        byte [rax+1], 0x0
0000000000002cd9         lea        rax, qword [rsp+arg_98]
0000000000002ce1         mov        rcx, qword [rsp+ret_addr]                   ; argument "__tp" for method j_strftime
0000000000002ce5         mov        esi, 0x400                                  ; argument "__maxsize" for method j_strftime
0000000000002cea         mov        dword [rsp+arg_38], r10d
0000000000002cef         mov        rdi, rax                                    ; argument "__s" for method j_strftime
0000000000002cf2         mov        dword [rsp+arg_50], r11d
0000000000002cf7         mov        qword [rsp+arg_30], rax
0000000000002cfc         call       j_strftime                                  ; strftime
0000000000002d01         test       rax, rax
0000000000002d04         je         __strftime_internal+272

0000000000002d0a         movsxd     r10, dword [rsp+arg_38]
0000000000002d0f         lea        r13, qword [rax-1]
0000000000002d13         mov        eax, 0x0
0000000000002d18         mov        rdx, r15
0000000000002d1b         not        rdx
0000000000002d1e         test       r10d, r10d
0000000000002d21         cmovns     rax, r10
0000000000002d25         cmp        r13, rax
0000000000002d28         mov        rdi, rax
0000000000002d2b         cmovae     rdi, r13
0000000000002d2f         cmp        rdx, rdi
0000000000002d32         mov        qword [rsp+arg_38], rdi
0000000000002d37         jbe        __strftime_internal+191

0000000000002d3d         test       r12, r12
0000000000002d40         je         loc_2dc3

0000000000002d46         mov        r11d, dword [rsp+arg_50]
0000000000002d4b         test       r11d, r11d
0000000000002d4e         jne        loc_2d9b

0000000000002d50         cmp        r13, rax
0000000000002d53         jae        loc_2d9b

0000000000002d55         mov        eax, dword [rsp+arg_0]
0000000000002d59         movsxd     rbx, r10d
0000000000002d5c         sub        rbx, r13
0000000000002d5f         cmp        eax, 0x30
0000000000002d62         je         loc_3d70

0000000000002d68         cmp        eax, 0x2b
0000000000002d6b         je         loc_3d70

0000000000002d71         xor        edx, edx
0000000000002d73         test       rbx, rbx
0000000000002d76         je         loc_2d9b

0000000000002d78         mov        qword [rsp+arg_0], rbp
0000000000002d7d         mov        rbp, rdx

                     loc_2d80:
0000000000002d80         mov        rsi, r12                                    ; argument "__stream" for method j_fputc, CODE XREF=sub_2ca0+244
0000000000002d83         mov        edi, 0x20                                   ; argument "__c" for method j_fputc
0000000000002d88         add        rbp, 0x1
0000000000002d8c         call       j_fputc                                     ; fputc
0000000000002d91         cmp        rbx, rbp
0000000000002d94         jne        loc_2d80

                     loc_2d96:
0000000000002d96         mov        rbp, qword [rsp+arg_0]                      ; CODE XREF=sub_3d50+78

                     loc_2d9b:
0000000000002d9b         test       r14b, r14b                                  ; CODE XREF=sub_2ca0+174, sub_2ca0+179, sub_2ca0+214, sub_3d50+35
0000000000002d9e         jne        loc_3d30

0000000000002da4         cmp        byte [rsp+arg_2C], 0x0
0000000000002da9         je         loc_3d08

0000000000002daf         mov        rsi, qword [rsp+arg_30]
0000000000002db4         mov        rdx, r13
0000000000002db7         mov        rdi, r12
0000000000002dba         add        rsi, 0x1
0000000000002dbe         call       fwrite_uppcase                              ; fwrite_uppcase

                     loc_2dc3:
0000000000002dc3         add        r15, qword [rsp+arg_38]                     ; CODE XREF=sub_2ca0+160, sub_3bf0+305, sub_3bf0+340
0000000000002dc8         jmp        __strftime_internal+272
                        ; endp
0000000000002dcd         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_93: int16_t, 155
        ;    arg_2C: int8_t, 52


                     sub_2dd0:
0000000000002dd0         test       r11d, r11d
0000000000002dd3         jne        __strftime_internal+528

0000000000002dd9         movzx      eax, byte [rsp+arg_2C]
0000000000002dde         test       r14b, r14b
0000000000002de1         lea        rdx, qword [rsp+arg_93]
0000000000002de9         mov        rbp, rbx
0000000000002dec         cmovne     eax, r14d
0000000000002df0         xor        r14d, r14d
0000000000002df3         xor        r11d, r11d
0000000000002df6         mov        byte [rsp+arg_2C], al
0000000000002dfa         mov        eax, 0x2520
0000000000002dff         mov        word [rsp+arg_93], ax
0000000000002e07         lea        rax, qword [rdx+2]
0000000000002e0b         jmp        sub_2ca0+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_2e10:
0000000000002e10         test       r10d, r10d
0000000000002e13         mov        r13d, 0x0
0000000000002e19         mov        eax, 0x1
0000000000002e1e         cmovns     r13d, r10d
0000000000002e22         movsxd     r13, r13d
0000000000002e25         test       r13, r13
0000000000002e28         cmove      r13, rax
0000000000002e2c         mov        rax, r15
0000000000002e2f         not        rax
0000000000002e32         cmp        rax, r13
0000000000002e35         jbe        __strftime_internal+191

0000000000002e3b         test       r12, r12
0000000000002e3e         je         loc_2fdf

0000000000002e44         cmp        r10d, 0x1
0000000000002e48         jle        loc_2e7f

0000000000002e4a         mov        eax, dword [rsp+arg_0]
0000000000002e4e         movsxd     r10, r10d
0000000000002e51         lea        r14, qword [r10-1]
0000000000002e55         cmp        eax, 0x30
0000000000002e58         je         loc_432f

0000000000002e5e         xor        ebp, ebp
0000000000002e60         cmp        eax, 0x2b
0000000000002e63         je         loc_432f

                     loc_2e69:
0000000000002e69         mov        rsi, r12                                    ; argument "__stream" for method j_fputc, CODE XREF=sub_2e10+109
0000000000002e6c         mov        edi, 0x20                                   ; argument "__c" for method j_fputc
0000000000002e71         add        rbp, 0x1
0000000000002e75         call       j_fputc                                     ; fputc
0000000000002e7a         cmp        r14, rbp
0000000000002e7d         jne        loc_2e69

                     loc_2e7f:
0000000000002e7f         mov        rsi, r12                                    ; argument "__stream" for method j_fputc, CODE XREF=sub_2e10+56, sub_4260+231
0000000000002e82         mov        edi, 0x9                                    ; argument "__c" for method j_fputc
0000000000002e87         call       j_fputc                                     ; fputc
0000000000002e8c         jmp        loc_2fdf
0000000000002e91         mov        rax, qword [rsp]
0000000000002e95         mov        edx, 0x92492493
0000000000002e9a         mov        esi, 0x1
0000000000002e9f         mov        eax, dword [rax+0x18]
0000000000002ea2         lea        ecx, dword [rax+6]
0000000000002ea5         mov        dword [rsp+0x38], eax
0000000000002ea9         mov        eax, ecx
0000000000002eab         imul       edx
0000000000002ead         lea        eax, dword [rdx+rcx]
0000000000002eb0         mov        edx, ecx
0000000000002eb2         sar        edx, 0x1f
0000000000002eb5         sar        eax, 0x2
0000000000002eb8         sub        eax, edx
0000000000002eba         lea        edx, dword [rax*8]
0000000000002ec1         sub        edx, eax
0000000000002ec3         sub        ecx, edx
0000000000002ec5         add        ecx, 0x1
0000000000002ec8         nop        dword [rax+rax]

                     loc_2ed0:
0000000000002ed0         mov        eax, ecx                                    ; CODE XREF=sub_2e10+303, sub_2e10+495, sub_3050+897, sub_3050+1306, sub_3050+1333, sub_3050+1418, sub_3050+1442, sub_3050+2616, sub_3050+2651, sub_3050+2665, sub_41b0+18
0000000000002ed2         xor        r8d, r8d
0000000000002ed5         xor        r9d, r9d
0000000000002ed8         shr        eax, 0x1f
0000000000002edb         mov        r13d, eax
0000000000002ede         mov        eax, ecx
0000000000002ee0         not        eax
0000000000002ee2         shr        eax, 0x1f
                        ; endp

                     loc_2ee5:
0000000000002ee5         cmp        r11d, 0x4f                                  ; CODE XREF=sub_3050+2126, sub_3050+2714, sub_3050+2798, sub_41b0+137, sub_4260+202, sub_4260+394
0000000000002ee9         jne        loc_3c00

0000000000002eef         test       al, al
0000000000002ef1         je         loc_3c00

0000000000002ef7         mov        r13d, edi
0000000000002efa         mov        edx, 0x2520                                 ; CODE XREF=sub_3050+374, sub_3d50+341
0000000000002eff         xor        r14d, r14d
0000000000002f02         mov        word [rsp+155], dx
                        ; endp

                     loc_2f0a:
0000000000002f0a         lea        rdx, qword [rsp+arg_93]                     ; CODE XREF=sub_4260+690
0000000000002f12         mov        byte [rsp+arg_95], r11b
0000000000002f1a         mov        rbp, rbx
0000000000002f1d         mov        r11d, esi
0000000000002f20         lea        rax, qword [rdx+3]
0000000000002f24         jmp        loc_2cd2
0000000000002f29         cmp        r11d, 0x45
0000000000002f2d         je         __strftime_internal+528
0000000000002f33         mov        rax, qword [rsp]
0000000000002f37         mov        esi, 0x1
0000000000002f3c         mov        ecx, dword [rax+0x18]
0000000000002f3f         jmp        sub_2e10+192
0000000000002f41         mov        eax, 0x1
0000000000002f46         test       r14b, r14b                                  ; CODE XREF=sub_3050+2934
0000000000002f49         jne        sub_3d50+346
0000000000002f4f         mov        r14d, eax
0000000000002f52         mov        r13d, 0x70
0000000000002f58         jmp        sub_2ca0+13
0000000000002f5d         lea        rax, qword [aHm]                            ; "%H:%M"
0000000000002f64         mov        r14d, 0xffffffff
0000000000002f6a         mov        qword [rsp+0x38], rax
0000000000002f6f         movzx      ebp, byte [rsp+0x34]                        ; CODE XREF=sub_3050+844, sub_3050+1593, sub_3050+1656, sub_4260+427
0000000000002f74         mov        dword [rsp+0x40], r10d
0000000000002f79         sub        rsp, 0x8
0000000000002f7d         mov        eax, dword [rsp+0x508]
0000000000002f84         xor        edi, edi
0000000000002f86         mov        r9d, r14d
0000000000002f89         push       rax
0000000000002f8a         push       qword [rsp+0x20]
0000000000002f8e         mov        ecx, ebp
0000000000002f90         push       qword [rsp+0x30]
0000000000002f94         mov        rdx, qword [rsp+0x20]
0000000000002f99         mov        r8d, dword [rsp+0x28]
0000000000002f9e         mov        rsi, qword [rsp+0x58]
0000000000002fa3         call       __strftime_internal                         ; __strftime_internal
0000000000002fa8         add        rsp, 0x20
0000000000002fac         movsxd     r10, dword [rsp+0x40]
0000000000002fb1         mov        edx, 0x0
0000000000002fb6         mov        rcx, r15
0000000000002fb9         not        rcx
0000000000002fbc         test       r10d, r10d
0000000000002fbf         cmovns     rdx, r10
0000000000002fc3         cmp        rax, rdx
0000000000002fc6         mov        r13, rdx
0000000000002fc9         cmovae     r13, rax
0000000000002fcd         cmp        rcx, r13
0000000000002fd0         jbe        __strftime_internal+191
0000000000002fd6         test       r12, r12
0000000000002fd9         jne        sub_3d50+139

                     loc_2fdf:
0000000000002fdf         add        r15, r13                                    ; CODE XREF=sub_2e10+46, sub_2e10+124, sub_3050+2849, sub_3050+2927, sub_3d50+283
0000000000002fe2         mov        rbp, rbx
0000000000002fe5         jmp        __strftime_internal+272
                        ; endp
0000000000002fea         cmp        r11d, 0x45
0000000000002fee         je         __strftime_internal+528
0000000000002ff4         mov        rax, qword [rsp]
0000000000002ff8         mov        esi, 0x2
0000000000002ffd         mov        ecx, dword [rax]
0000000000002fff         jmp        sub_2e10+192
0000000000003004         mov        rax, qword [rsp]
0000000000003008         mov        rdi, qword [rsp+0x10]
000000000000300d         lea        rsi, qword [rsp+0x60]
0000000000003012         mov        dword [rsp+0x40], r10d
0000000000003017         lea        r14, qword [rsp+0xb7]
000000000000301f         movdqu     xmm0, xmmword [rax]
0000000000003023         movaps     xmmword [rsp+0x60], xmm0
0000000000003028         movdqu     xmm0, xmmword [rax+0x10]
000000000000302d         movaps     xmmword [rsp+0x70], xmm0
0000000000003032         movdqu     xmm0, xmmword [rax+0x20]
0000000000003037         mov        rax, qword [rax+0x30]
000000000000303b         movaps     xmmword [rsp+0x80], xmm0
0000000000003043         mov        qword [rsp+0x90], rax
000000000000304b         call       mktime_z                                    ; mktime_z


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3050:
0000000000003050         mov        r10d, dword [rsp+64]
0000000000003055         mov        rsi, rax
0000000000003058         mov        rcx, rax
000000000000305b         lea        rax, qword [rsp+160]
0000000000003063         movabs     r8, 0x6666666666666667
000000000000306d         mov        edi, 0x30
0000000000003072         mov        qword [rsp+56], rax
0000000000003077         nop        word [rax+rax]

                     loc_3080:
0000000000003080         mov        rax, rcx                                    ; CODE XREF=sub_3050+110
0000000000003083         imul       r8
0000000000003086         mov        rax, rcx
0000000000003089         sar        rax, 0x3f
000000000000308d         sar        rdx, 0x2
0000000000003091         sub        rdx, rax
0000000000003094         mov        rax, rdx
0000000000003097         lea        rdx, qword [rdx+rdx*4]
000000000000309b         add        rdx, rdx
000000000000309e         sub        rcx, rdx
00000000000030a1         mov        rdx, rcx
00000000000030a4         mov        rcx, rax
00000000000030a7         mov        eax, edi
00000000000030a9         sub        eax, edx
00000000000030ab         add        edx, 0x30
00000000000030ae         test       rsi, rsi
00000000000030b1         cmovs      edx, eax
00000000000030b4         sub        r14, 0x1
00000000000030b8         test       rcx, rcx
00000000000030bb         mov        byte [r14], dl
00000000000030be         jne        loc_3080

00000000000030c0         test       r10d, r10d
00000000000030c3         mov        eax, 0x1
00000000000030c8         cmovg      eax, r10d
00000000000030cc         test       rsi, rsi
00000000000030cf         mov        dword [rsp+88], eax
00000000000030d3         js         loc_3c10

                     loc_30d9:
00000000000030d9         mov        rax, qword [rsp+56]
00000000000030de         mov        rdx, r15
00000000000030e1         not        rdx
00000000000030e4         add        rax, 0x17
00000000000030e8         sub        rax, r14
00000000000030eb         cmp        dword [rsp+8], 0x2d
00000000000030f0         mov        qword [rsp+64], rax
00000000000030f5         je         loc_310a

00000000000030f7         mov        r13d, dword [rsp+88]
00000000000030fc         sub        r13d, dword [rsp+64]
0000000000003101         test       r13d, r13d
0000000000003104         jg         loc_423e

                     loc_310a:
000000000000310a         test       r10d, r10d                                  ; CODE XREF=sub_3050+165
000000000000310d         mov        ecx, 0x0
0000000000003112         mov        rbp, rbx
0000000000003115         cmovns     ecx, r10d
0000000000003119         movsxd     r13, ecx

                     loc_311c:
000000000000311c         mov        rax, qword [rsp+64]                         ; CODE XREF=sub_3050+821, sub_3bf0+240, sub_3d50+523, sub_3d50+712, sub_3d50+975
0000000000003121         cmp        rax, r13
0000000000003124         mov        rbx, rax
0000000000003127         cmovb      rbx, r13
000000000000312b         cmp        rbx, rdx
000000000000312e         jae        __strftime_internal+191

0000000000003134         test       r12, r12
0000000000003137         je         sub_3050+350

0000000000003139         mov        edx, dword [rsp+88]
000000000000313d         test       edx, edx
000000000000313f         jne        loc_3193

0000000000003141         cmp        rax, r13
0000000000003144         jae        loc_3193

0000000000003146         movsxd     r13, r10d
0000000000003149         sub        r13, rax
000000000000314c         mov        eax, dword [rsp+8]
0000000000003150         cmp        eax, 0x30
0000000000003153         je         loc_3e70

0000000000003159         cmp        eax, 0x2b
000000000000315c         je         loc_3e70

0000000000003162         xor        edx, edx
0000000000003164         test       r13, r13
0000000000003167         je         loc_3193

0000000000003169         mov        qword [rsp+8], rbx
000000000000316e         mov        rbx, rdx
0000000000003171         nop        dword [rax]

                     loc_3178:
0000000000003178         mov        rsi, r12                                    ; argument "__stream" for method j_fputc, CODE XREF=sub_3050+316
000000000000317b         mov        edi, 0x20                                   ; argument "__c" for method j_fputc
0000000000003180         add        rbx, 0x1
0000000000003184         call       j_fputc                                     ; fputc
0000000000003189         cmp        r13, rbx
000000000000318c         jne        loc_3178

                     loc_318e:
000000000000318e         mov        rbx, qword [rsp+8]                          ; CODE XREF=sub_3d50+334

                     loc_3193:
0000000000003193         cmp        byte [rsp+52], 0x0                          ; CODE XREF=sub_3050+239, sub_3050+244, sub_3050+279, sub_3d50+291
0000000000003198         je         sub_3d50                                    ; sub_3d50

000000000000319e         mov        rdx, qword [rsp+64]                         ; argument #3 for method fwrite_uppcase
00000000000031a3         mov        rsi, r14                                    ; argument #2 for method fwrite_uppcase
00000000000031a6         mov        rdi, r12                                    ; argument #1 for method fwrite_uppcase
00000000000031a9         call       fwrite_uppcase                              ; fwrite_uppcase
                        ; endp

                     loc_31ae:
00000000000031ae         add        r15, rbx                                    ; CODE XREF=sub_3d50+21
00000000000031b1         jmp        __strftime_internal+272
                        ; endp
00000000000031b6         mov        rax, qword [rsp]
00000000000031ba         cmp        r11d, 0x4f
00000000000031be         mov        esi, 0x1
00000000000031c3         mov        eax, dword [rax+0x10]
00000000000031c6         je         sub_2e10+234
00000000000031cc         lea        edx, dword [rax+rax*4]
00000000000031cf         xor        r9d, r9d
00000000000031d2         xor        r13d, r13d
00000000000031d5         xor        r8d, r8d
00000000000031d8         lea        ecx, dword [rax+rdx*2]
00000000000031db         sar        ecx, 0x5
00000000000031de         add        ecx, 0x1
00000000000031e1         nop        dword [rax]

                     loc_31e8:
00000000000031e8         lea        rax, qword [rsp+160]                        ; CODE XREF=sub_3bf0+26
00000000000031f0         lea        rdi, qword [rsp+183]
00000000000031f8         mov        r11d, 0xcccccccd
00000000000031fe         mov        qword [rsp+56], rax
0000000000003203         nop        dword [rax+rax]

                     loc_3208:
0000000000003208         test       r8b, 0x1                                    ; CODE XREF=sub_3050+498
000000000000320c         lea        r14, qword [rdi-1]
0000000000003210         je         loc_3220

0000000000003212         lea        rax, qword [rdi-2]
0000000000003216         mov        byte [rdi-1], 0x3a
000000000000321a         mov        rdi, r14
000000000000321d         mov        r14, rax

                     loc_3220:
0000000000003220         mov        eax, ecx                                    ; CODE XREF=sub_3050+448
0000000000003222         sar        r8d, 0x1
0000000000003225         mul        r11d
0000000000003228         shr        edx, 0x3
000000000000322b         lea        eax, dword [rdx+rdx*4]
000000000000322e         add        eax, eax
0000000000003230         sub        ecx, eax
0000000000003232         mov        eax, r8d
0000000000003235         add        ecx, 0x30
0000000000003238         or         eax, edx
000000000000323a         mov        byte [rdi-1], cl
000000000000323d         mov        ecx, edx
000000000000323f         mov        rdi, r14
0000000000003242         jne        loc_3208

0000000000003244         cmp        r10d, esi
0000000000003247         cmovge     esi, r10d
000000000000324b         test       r13b, r13b
000000000000324e         mov        dword [rsp+88], esi
0000000000003252         jne        sub_3bf0+32

0000000000003258         test       r9b, r9b
000000000000325b         je         sub_3050+137

0000000000003261         cmp        dword [rsp+8], 0x2d
0000000000003266         mov        ebp, 0x2b
000000000000326b         je         loc_401d

                     loc_3271:
0000000000003271         mov        rax, qword [rsp+56]                         ; CODE XREF=sub_3bf0+42
0000000000003276         mov        rdx, r15
0000000000003279         not        rdx
000000000000327c         add        rax, 0x17
0000000000003280         sub        rax, r14
0000000000003283         mov        rdi, rax
0000000000003286         mov        qword [rsp+64], rax
000000000000328b         mov        eax, dword [rsp+88]
000000000000328f         sub        eax, 0x1
0000000000003292         sub        eax, edi
0000000000003294         test       eax, eax
0000000000003296         mov        r13d, eax
0000000000003299         jle        loc_3f60

000000000000329f         cmp        dword [rsp+8], 0x5f
00000000000032a4         je         loc_3ebc

00000000000032aa         movsxd     rax, dword [rsp+88]
00000000000032af         cmp        rax, rdx
00000000000032b2         mov        rdi, rax
00000000000032b5         jae        __strftime_internal+191

00000000000032bb         test       r10d, r10d
00000000000032be         mov        eax, 0x0
00000000000032c3         mov        ecx, 0x1
00000000000032c8         cmovns     eax, r10d
00000000000032cc         cdqe
00000000000032ce         test       rax, rax
00000000000032d1         cmovne     rcx, rax
00000000000032d5         cmp        rcx, rdx
00000000000032d8         mov        qword [rsp+72], rcx
00000000000032dd         jae        __strftime_internal+191

00000000000032e3         test       r12, r12
00000000000032e6         je         loc_334c

00000000000032e8         test       edi, edi
00000000000032ea         jne        loc_3340

00000000000032ec         cmp        rax, 0x1
00000000000032f0         jbe        loc_3340

00000000000032f2         mov        edi, dword [rsp+8]
00000000000032f6         movsxd     r10, r10d
00000000000032f9         lea        rax, qword [r10-1]
00000000000032fd         cmp        edi, 0x30
0000000000003300         mov        qword [rsp+56], rax
0000000000003305         je         loc_4410

000000000000330b         cmp        edi, 0x2b
000000000000330e         je         loc_4410

0000000000003314         xor        edx, edx
0000000000003316         test       rax, rax
0000000000003319         je         loc_3340

000000000000331b         mov        qword [rsp+80], rbx
0000000000003320         mov        rbx, rdx

                     loc_3323:
0000000000003323         mov        rsi, r12                                    ; argument "__stream" for method j_fputc, CODE XREF=sub_3050+745
0000000000003326         mov        edi, 0x20                                   ; argument "__c" for method j_fputc
000000000000332b         add        rbx, 0x1
000000000000332f         call       j_fputc                                     ; fputc
0000000000003334         cmp        qword [rsp+56], rbx
0000000000003339         jne        loc_3323

                     loc_333b:
000000000000333b         mov        rbx, qword [rsp+80]                         ; CODE XREF=sub_4260+478

                     loc_3340:
0000000000003340         movsx      edi, bpl                                    ; argument "__c" for method j_fputc, CODE XREF=sub_3050+666, sub_3050+672, sub_3050+713, sub_4260+438
0000000000003344         mov        rsi, r12                                    ; argument "__stream" for method j_fputc
0000000000003347         call       j_fputc                                     ; fputc

                     loc_334c:
000000000000334c         add        r15, qword [rsp+72]                         ; CODE XREF=sub_3050+662

                     loc_3351:
0000000000003351         mov        rbp, rbx                                    ; CODE XREF=sub_41b0+161
0000000000003354         movsxd     rbx, r13d
0000000000003357         xor        r13d, r13d
000000000000335a         test       r12, r12
000000000000335d         je         loc_3376

000000000000335f         nop

                     loc_3360:
0000000000003360         mov        rsi, r12                                    ; argument "__stream" for method j_fputc, CODE XREF=sub_3050+804
0000000000003363         mov        edi, 0x30                                   ; argument "__c" for method j_fputc
0000000000003368         add        r13, 0x1
000000000000336c         call       j_fputc                                     ; fputc
0000000000003371         cmp        r13, rbx
0000000000003374         jne        loc_3360

                     loc_3376:
0000000000003376         add        r15, rbx                                    ; CODE XREF=sub_3050+781
0000000000003379         xor        r13d, r13d
000000000000337c         xor        r10d, r10d
000000000000337f         mov        rdx, r15
0000000000003382         not        rdx
0000000000003385         jmp        loc_311c
000000000000338a         lea        rax, qword [aHms_7d78]                      ; "%H:%M:%S"
0000000000003391         mov        r14d, 0xffffffff
0000000000003397         mov        qword [rsp+0x38], rax
000000000000339c         jmp        sub_2e10+351
00000000000033a1         cmp        r11d, 0x45
00000000000033a5         je         __strftime_internal+528
00000000000033ab         mov        rax, qword [rsp]
00000000000033af         mov        edx, 0x92492493
00000000000033b4         mov        esi, dword [rax+0x1c]
00000000000033b7         sub        esi, dword [rax+0x18]
00000000000033ba         add        esi, 0x7
00000000000033bd         mov        eax, esi
00000000000033bf         imul       edx
00000000000033c1         lea        ecx, dword [rdx+rsi]                        ; CODE XREF=sub_3050+2208
00000000000033c4         sar        esi, 0x1f
00000000000033c7         sar        ecx, 0x2
00000000000033ca         sub        ecx, esi
00000000000033cc         mov        esi, 0x2
00000000000033d1         jmp        sub_2e10+192
00000000000033d6         cmp        r11d, 0x45
00000000000033da         je         __strftime_internal+528
00000000000033e0         mov        rcx, qword [rsp]
00000000000033e4         mov        edx, 0x92492493
00000000000033e9         mov        esi, dword [rcx+0x14]
00000000000033ec         mov        r8d, dword [rcx+0x1c]
00000000000033f0         mov        r14d, dword [rcx+0x18]
00000000000033f4         mov        eax, esi
00000000000033f6         mov        ecx, r8d
00000000000033f9         sar        eax, 0x1f
00000000000033fc         sub        ecx, r14d
00000000000033ff         add        ecx, 0x17e
0000000000003405         and        eax, 0x190
000000000000340a         lea        r9d, dword [rsi+rax-0x64]
000000000000340f         mov        eax, ecx
0000000000003411         imul       edx
0000000000003413         lea        eax, dword [rdx+rcx]
0000000000003416         mov        edx, ecx
0000000000003418         sar        edx, 0x1f
000000000000341b         sar        eax, 0x2
000000000000341e         sub        eax, edx
0000000000003420         lea        edx, dword [rax*8]
0000000000003427         sub        edx, eax
0000000000003429         mov        eax, r8d
000000000000342c         sub        eax, ecx
000000000000342e         lea        ebp, dword [rax+rdx+3]
0000000000003432         test       ebp, ebp
0000000000003434         js         sub_4260                                    ; sub_4260
000000000000343a         test       r9b, 0x3
000000000000343e         mov        eax, 0x16d
0000000000003443         jne        sub_3050+1082
0000000000003445         mov        eax, r9d
0000000000003448         mov        edx, 0x51eb851f
000000000000344d         mov        ecx, r9d
0000000000003450         imul       edx
0000000000003452         sar        ecx, 0x1f
0000000000003455         mov        eax, 0x16e
000000000000345a         mov        dword [rsp+0x38], edx
000000000000345e         sar        edx, 0x5
0000000000003461         sub        edx, ecx
0000000000003463         imul       edx, edx, 0x64
0000000000003466         cmp        r9d, edx
0000000000003469         jne        sub_3050+1082
000000000000346b         mov        edx, dword [rsp+0x38]
000000000000346f         sar        edx, 0x7
0000000000003472         mov        eax, edx
0000000000003474         sub        eax, ecx
0000000000003476         imul       eax, eax, 0x190
000000000000347c         cmp        r9d, eax
000000000000347f         sete       al
0000000000003482         movzx      eax, al
0000000000003485         add        eax, 0x16d
000000000000348a         sub        r8d, eax                                    ; CODE XREF=sub_3050+1011, sub_3050+1049
000000000000348d         mov        edx, 0x92492493
0000000000003492         mov        ecx, r8d
0000000000003495         sub        ecx, r14d
0000000000003498         add        ecx, 0x17e
000000000000349e         mov        eax, ecx
00000000000034a0         sub        r8d, ecx
00000000000034a3         imul       edx
00000000000034a5         lea        eax, dword [rdx+rcx]
00000000000034a8         mov        edx, ecx
00000000000034aa         sar        edx, 0x1f
00000000000034ad         sar        eax, 0x2
00000000000034b0         sub        eax, edx
00000000000034b2         lea        edx, dword [rax*8]
00000000000034b9         sub        edx, eax
00000000000034bb         lea        ecx, dword [r8+rdx+3]
00000000000034c0         mov        r8d, 0x1
00000000000034c6         test       ecx, ecx
00000000000034c8         jns        sub_3050+1151
00000000000034ca         mov        ecx, ebp
00000000000034cc         xor        r8d, r8d

                     loc_34cf:
00000000000034cf         cmp        r13b, 0x47                                  ; CODE XREF=sub_3050+1144, sub_4260+133
00000000000034d3         je         loc_4167

00000000000034d9         cmp        r13b, 0x67
00000000000034dd         jne        loc_42ea

00000000000034e3         mov        ecx, 0x51eb851f
00000000000034e8         mov        eax, esi
00000000000034ea         mov        r9d, esi
00000000000034ed         imul       ecx
00000000000034ef         mov        eax, edx
00000000000034f1         mov        edx, esi
00000000000034f3         sar        edx, 0x1f
00000000000034f6         sar        eax, 0x5
00000000000034f9         sub        eax, edx
00000000000034fb         imul       eax, eax, 0x64
00000000000034fe         sub        r9d, eax
0000000000003501         add        r9d, r8d
0000000000003504         mov        eax, r9d
0000000000003507         imul       ecx
0000000000003509         mov        eax, r9d
000000000000350c         sar        eax, 0x1f
000000000000350f         mov        ecx, edx
0000000000003511         sar        ecx, 0x5
0000000000003514         sub        ecx, eax
0000000000003516         imul       ecx, ecx, 0x64
0000000000003519         sub        r9d, ecx
000000000000351c         mov        ecx, r9d
000000000000351f         js         loc_4124

                     loc_3525:
0000000000003525         mov        esi, dword [rsp+8]                          ; CODE XREF=sub_3050+2569, sub_3050+2589
0000000000003529         test       esi, esi
000000000000352b         je         loc_4141

                     loc_3531:
0000000000003531         mov        eax, 0x1                                    ; CODE XREF=sub_3d50+1003, sub_4260+683
0000000000003536         xor        r13d, r13d
0000000000003539         cmp        dword [rsp+8], 0x2b                         ; CODE XREF=sub_3050+1536
000000000000353e         je         loc_44dd

                     loc_3544:
0000000000003544         xor        r9d, r9d                                    ; CODE XREF=sub_3050+1561
0000000000003547         mov        esi, 0x2

                     loc_354c:
000000000000354c         xor        r8d, r8d                                    ; CODE XREF=sub_3050+2302, sub_3d50+753, sub_3d50+774, sub_3d50+1042, sub_3d50+1105
000000000000354f         jmp        sub_2e10+213
                        ; endp
0000000000003554         cmp        r11d, 0x45
0000000000003558         je         __strftime_internal+528
000000000000355e         mov        rax, qword [rsp]
0000000000003562         mov        esi, 0x2
0000000000003567         mov        ecx, dword [rax+8]
000000000000356a         jmp        sub_2e10+192
000000000000356f         cmp        r11d, 0x45
0000000000003573         je         __strftime_internal+528
0000000000003579         mov        rax, qword [rsp]
000000000000357d         mov        esi, 0x2
0000000000003582         mov        ecx, dword [rax+4]
0000000000003585         jmp        sub_2e10+192
000000000000358a         cmp        r11d, 0x45
000000000000358e         je         __strftime_internal+528
0000000000003594         cmp        r10d, 0xffffffff
0000000000003598         je         sub_41b0                                    ; sub_41b0
000000000000359e         cmp        r10d, 0x8
00000000000035a2         jg         sub_4260+652
00000000000035a8         mov        ecx, dword [rsp+0x500]
00000000000035af         mov        esi, r10d
00000000000035b2         mov        r8d, 0x66666667
00000000000035b8         nop        dword [rax+rax]
00000000000035c0         mov        eax, ecx                                    ; CODE XREF=sub_3050+1413
00000000000035c2         add        esi, 0x1
00000000000035c5         sar        ecx, 0x1f
00000000000035c8         imul       r8d
00000000000035cb         sar        edx, 0x2
00000000000035ce         sub        edx, ecx
00000000000035d0         cmp        esi, 0x9
00000000000035d3         mov        ecx, edx
00000000000035d5         jne        sub_3050+1392
00000000000035d7         mov        esi, r10d                                   ; CODE XREF=sub_4260+659
00000000000035da         jmp        sub_2e10+192
00000000000035df         cmp        r11d, 0x45
00000000000035e3         je         __strftime_internal+528
00000000000035e9         mov        ecx, dword [rsp+0x30]
00000000000035ed         mov        esi, 0x2
00000000000035f2         jmp        sub_2e10+192
00000000000035f7         cmp        r11d, 0x45
00000000000035fb         je         sub_3d50+339
0000000000003601         mov        rax, qword [rsp]
0000000000003605         mov        edx, 0x51eb851f
000000000000360a         mov        r9d, dword [rsp+8]
000000000000360f         mov        esi, dword [rax+0x14]
0000000000003612         mov        eax, esi
0000000000003614         imul       edx
0000000000003616         mov        eax, edx
0000000000003618         mov        edx, esi
000000000000361a         sar        edx, 0x1f
000000000000361d         sar        eax, 0x5
0000000000003620         sub        eax, edx
0000000000003622         mov        edx, esi
0000000000003624         lea        ecx, dword [rax+0x13]
0000000000003627         imul       eax, eax, 0x64
000000000000362a         sub        edx, eax
000000000000362c         mov        eax, edx
000000000000362e         shr        eax, 0x1f
0000000000003631         test       ecx, ecx
0000000000003633         setg       dl
0000000000003636         and        eax, edx
0000000000003638         cmp        esi, 0xfffff894
000000000000363e         setl       r13b
0000000000003642         sub        ecx, eax
0000000000003644         cmp        esi, 0xfffff894
000000000000364a         setge      al
000000000000364d         test       r9d, r9d
0000000000003650         jne        sub_3050+1257
0000000000003656         cmp        dword [rsp+0x24], 0x2b
000000000000365b         je         sub_4260+637
0000000000003661         mov        esi, dword [rsp+0x24]
0000000000003665         mov        dword [rsp+8], esi
0000000000003669         jmp        sub_3050+1268
000000000000366e         test       r11d, r11d
0000000000003671         jne        __strftime_internal+528
0000000000003677         lea        rax, qword [aMdy]                           ; "%m/%d/%y"
000000000000367e         mov        r14d, 0xffffffff
0000000000003684         mov        qword [rsp+0x38], rax
0000000000003689         jmp        sub_2e10+351
000000000000368e         test       r11d, r11d
0000000000003691         jne        __strftime_internal+528
0000000000003697         mov        r11d, dword [rsp+8]
000000000000369c         test       r11d, r11d
000000000000369f         jne        sub_4260+399
00000000000036a5         test       r10d, r10d
00000000000036a8         jns        sub_4260+399
00000000000036ae         lea        rax, qword [aYmd]                           ; "%Y-%m-%d"
00000000000036b5         mov        r14d, 0x4
00000000000036bb         mov        dword [rsp+8], 0x2b
00000000000036c3         mov        qword [rsp+0x38], rax
00000000000036c8         jmp        sub_2e10+351
00000000000036cd         movzx      ecx, byte [rbx-1]
00000000000036d1         lea        rax, qword [rbx-1]
00000000000036d5         mov        qword [rsp+0x38], rax

                     loc_36da:
00000000000036da         test       r10d, r10d                                  ; CODE XREF=sub_4260+364
00000000000036dd         mov        eax, 0x0
00000000000036e2         mov        rdx, r15
00000000000036e5         cmovns     eax, r10d
00000000000036e9         cmp        cl, 0x25
00000000000036ec         not        rdx
00000000000036ef         cdqe
00000000000036f1         jne        loc_2b0b

00000000000036f7         test       rax, rax
00000000000036fa         mov        r14d, 0x1
0000000000003700         mov        rbp, qword [rsp+56]
0000000000003705         cmovne     r14, rax
0000000000003709         mov        r13d, 0x1
000000000000370f         jmp        __strftime_internal+596
                        ; endp
0000000000003714         cmp        r11d, 0x45
0000000000003718         je         __strftime_internal+528
000000000000371e         test       r14b, r14b
0000000000003721         je         sub_2ca0+13
0000000000003727         mov        byte [rsp+0x34], r14b
000000000000372c         jmp        sub_2ca0+10
0000000000003731         test       r10d, r10d
0000000000003734         mov        eax, 0x0
0000000000003739         mov        r14d, 0x1
000000000000373f         cmovns     eax, r10d
0000000000003743         mov        rdx, r15
0000000000003746         cdqe
0000000000003748         not        rdx
000000000000374b         test       rax, rax
000000000000374e         cmovne     r14, rax
0000000000003752         test       r11d, r11d
0000000000003755         jne        sub_41b0+23
000000000000375b         cmp        rdx, r14
000000000000375e         jbe        __strftime_internal+191
0000000000003764         test       r12, r12
0000000000003767         je         __strftime_internal+266
000000000000376d         cmp        r10d, 0x1
0000000000003771         jle        __strftime_internal+258
0000000000003777         mov        eax, dword [rsp+8]
000000000000377b         movsxd     r10, r10d
000000000000377e         lea        r13, qword [r10-1]
0000000000003782         cmp        eax, 0x30
0000000000003785         je         sub_4260+590
000000000000378b         xor        ebp, ebp
000000000000378d         cmp        eax, 0x2b
0000000000003790         je         sub_4260+590
0000000000003796         mov        rsi, r12                                    ; CODE XREF=sub_3050+1882
0000000000003799         mov        edi, 0x20
000000000000379e         add        rbp, 0x1
00000000000037a2         call       j_fputc                                     ; fputc
00000000000037a7         cmp        r13, rbp
00000000000037aa         jne        sub_3050+1862
00000000000037ac         jmp        __strftime_internal+255
00000000000037b1         movzx      eax, byte [rbx+1]
00000000000037b5         lea        rdx, qword [rbx+1]
00000000000037b9         cmp        al, 0x3a
00000000000037bb         je         sub_4260+321
00000000000037c1         mov        r14d, 0x1
00000000000037c7         cmp        al, 0x7a                                    ; CODE XREF=sub_4260+348
00000000000037c9         jne        __strftime_internal+528
00000000000037cf         mov        rbx, rdx

                     loc_37d2:
00000000000037d2         mov        rax, qword [rsp+0]                          ; CODE XREF=sub_3bf0+3
00000000000037d6         mov        ecx, dword [rax+0x20]
00000000000037d9         test       ecx, ecx
00000000000037db         js         loc_405b

00000000000037e1         mov        rcx, qword [rax+0x28]
00000000000037e5         mov        r13d, 0x1
00000000000037eb         test       ecx, ecx
00000000000037ed         js         loc_3803

00000000000037ef         mov        r13d, 0x0
00000000000037f5         jne        loc_3803

00000000000037f7         mov        rax, qword [rsp+40]
00000000000037fc         cmp        byte [rax], 0x2d
00000000000037ff         sete       r13b

                     loc_3803:
0000000000003803         mov        eax, ecx                                    ; CODE XREF=sub_3050+1949, sub_3050+1957
0000000000003805         mov        edx, 0x91a2b3c5
000000000000380a         mov        r9d, ecx
000000000000380d         imul       edx
000000000000380f         sar        r9d, 0x1f
0000000000003813         mov        r8d, 0x88888889
0000000000003819         mov        eax, ecx
000000000000381b         add        edx, ecx
000000000000381d         sar        edx, 0xb
0000000000003820         sub        edx, r9d
0000000000003823         mov        ebp, edx
0000000000003825         imul       r8d
0000000000003828         lea        esi, dword [rdx+rcx]
000000000000382b         sar        esi, 0x5
000000000000382e         sub        esi, r9d
0000000000003831         mov        eax, esi
0000000000003833         imul       r8d
0000000000003836         mov        eax, esi
0000000000003838         sar        eax, 0x1f
000000000000383b         lea        r8d, dword [rdx+rsi]
000000000000383f         sar        r8d, 0x5
0000000000003843         sub        r8d, eax
0000000000003846         mov        eax, esi
0000000000003848         imul       r8d, r8d, 0x3c
000000000000384c         imul       esi, esi, 0x3c
000000000000384f         sub        eax, r8d
0000000000003852         sub        ecx, esi
0000000000003854         cmp        r14, 0x1
0000000000003858         mov        r8d, eax
000000000000385b         je         loc_430d

0000000000003861         jb         loc_43d1

0000000000003867         cmp        r14, 0x2
000000000000386b         je         loc_4213

0000000000003871         cmp        r14, 0x3
0000000000003875         jne        loc_43c4

000000000000387b         test       ecx, ecx
000000000000387d         jne        loc_4213

0000000000003883         test       eax, eax
0000000000003885         jne        loc_430d

000000000000388b         mov        eax, r13d
000000000000388e         mov        ecx, ebp
0000000000003890         mov        r9d, 0x1
0000000000003896         xor        eax, 0x1
0000000000003899         mov        esi, 0x3
000000000000389e         jmp        loc_2ee5
00000000000038a3         nop        dword [rax+rax]
00000000000038a8         cmp        r11d, 0x45
00000000000038ac         je         __strftime_internal+528
00000000000038b2         mov        r9, qword [rsp]
00000000000038b6         mov        ecx, 0x92492493
00000000000038bb         mov        eax, dword [r9+0x18]
00000000000038bf         lea        esi, dword [rax+6]
00000000000038c2         mov        dword [rsp+0x38], eax
00000000000038c6         mov        eax, esi
00000000000038c8         imul       ecx
00000000000038ca         lea        eax, dword [rdx+rsi]
00000000000038cd         mov        edx, esi
00000000000038cf         sar        edx, 0x1f
00000000000038d2         sar        eax, 0x2
00000000000038d5         sub        eax, edx
00000000000038d7         lea        edx, dword [rax*8]
00000000000038de         sub        edx, eax
00000000000038e0         mov        eax, edx
00000000000038e2         mov        edx, dword [r9+0x1c]
00000000000038e6         sub        eax, esi
00000000000038e8         lea        esi, dword [rax+rdx+7]
00000000000038ec         mov        eax, esi
00000000000038ee         imul       ecx
00000000000038f0         jmp        sub_3050+881
00000000000038f5         cmp        r11d, 0x45
00000000000038f9         je         sub_3d50+339
00000000000038ff         cmp        r11d, 0x4f
0000000000003903         je         __strftime_internal+528
0000000000003909         mov        rax, qword [rsp]
000000000000390d         mov        r8d, dword [rsp+8]
0000000000003912         mov        eax, dword [rax+0x14]
0000000000003915         cmp        eax, 0xfffff894
000000000000391a         lea        ecx, dword [rax+0x76c]
0000000000003920         setl       r13b
0000000000003924         cmp        eax, 0xfffff894
0000000000003929         setge      al
000000000000392c         test       r8d, r8d
000000000000392f         jne        sub_3d50+1086

                     loc_3935:
0000000000003935         mov        esi, dword [rsp+36]                         ; CODE XREF=sub_3d50+1080
0000000000003939         cmp        esi, 0x2b
000000000000393c         je         loc_4027

0000000000003942         mov        dword [rsp+8], esi
0000000000003946         xor        r9d, r9d
0000000000003949         mov        esi, 0x4
000000000000394e         jmp        loc_354c
0000000000003953         movzx      edi, byte [rsp+0x34]
0000000000003958         test       r14b, r14b
000000000000395b         mov        eax, 0x0
0000000000003960         mov        dword [rsp+0x38], r10d
0000000000003965         cmovne     edi, eax
0000000000003968         mov        byte [rsp+0x34], dil
000000000000396d         mov        rdi, qword [rsp+0x28]
0000000000003972         call       j_strlen                                    ; strlen
0000000000003977         movsxd     r10, dword [rsp+0x38]
000000000000397c         mov        r13, rax
000000000000397f         mov        eax, 0x0
0000000000003984         mov        rdx, r15
0000000000003987         not        rdx
000000000000398a         test       r10d, r10d
000000000000398d         cmovns     rax, r10
0000000000003991         cmp        r13, rax
0000000000003994         mov        rbp, rax
0000000000003997         cmovae     rbp, r13
000000000000399b         cmp        rdx, rbp
000000000000399e         jbe        __strftime_internal+191
00000000000039a4         test       r12, r12
00000000000039a7         je         sub_3050+2511
00000000000039a9         cmp        r13, rax
00000000000039ac         jae        sub_3050+2475
00000000000039ae         mov        edi, dword [rsp+8]
00000000000039b2         mov        rax, r10
00000000000039b5         sub        rax, r13
00000000000039b8         mov        qword [rsp+0x38], rax
00000000000039bd         cmp        edi, 0x30
00000000000039c0         je         sub_4260+483
00000000000039c6         cmp        edi, 0x2b
00000000000039c9         je         sub_4260+483
00000000000039cf         xor        edx, edx
00000000000039d1         test       rax, rax
00000000000039d4         je         sub_3050+2475
00000000000039d6         mov        qword [rsp+8], rbx
00000000000039db         mov        rbx, rdx
00000000000039de         mov        rsi, r12                                    ; CODE XREF=sub_3050+2468
00000000000039e1         mov        edi, 0x20
00000000000039e6         add        rbx, 0x1
00000000000039ea         call       j_fputc                                     ; fputc
00000000000039ef         cmp        qword [rsp+0x38], rbx
00000000000039f4         jne        sub_3050+2446
00000000000039f6         mov        rbx, qword [rsp+8]                          ; CODE XREF=sub_4260+529
00000000000039fb         test       r14b, r14b                                  ; CODE XREF=sub_3050+2396, sub_3050+2436, sub_4260+489
00000000000039fe         jne        sub_4260+291
0000000000003a04         cmp        byte [rsp+0x34], 0x0
0000000000003a09         je         sub_4260+265
0000000000003a0f         mov        rsi, qword [rsp+0x28]
0000000000003a14         mov        rdx, r13
0000000000003a17         mov        rdi, r12
0000000000003a1a         call       fwrite_uppcase                              ; fwrite_uppcase
0000000000003a1f         add        r15, rbp                                    ; CODE XREF=sub_3050+2391, sub_4260+286, sub_4260+307
0000000000003a22         mov        rbp, rbx
0000000000003a25         jmp        __strftime_internal+272
0000000000003a2a         cmp        r11d, 0x45
0000000000003a2e         je         sub_3d50+339
0000000000003a34         mov        rax, qword [rsp]
0000000000003a38         mov        edx, 0x51eb851f
0000000000003a3d         mov        esi, dword [rax+0x14]
0000000000003a40         mov        eax, esi
0000000000003a42         imul       edx
0000000000003a44         mov        eax, esi
0000000000003a46         sar        eax, 0x1f
0000000000003a49         mov        ecx, edx
0000000000003a4b         sar        ecx, 0x5
0000000000003a4e         sub        ecx, eax
0000000000003a50         mov        eax, esi
0000000000003a52         imul       ecx, ecx, 0x64
0000000000003a55         sub        eax, ecx
0000000000003a57         mov        ecx, eax
0000000000003a59         jns        sub_3050+1237
0000000000003a5f         neg        eax
0000000000003a61         add        ecx, 0x64
0000000000003a64         cmp        esi, 0xfffff893
0000000000003a6a         cmovle     ecx, eax
0000000000003a6d         jmp        sub_3050+1237
0000000000003a72         cmp        r11d, 0x45
0000000000003a76         je         __strftime_internal+528
0000000000003a7c         mov        rax, qword [rsp]
0000000000003a80         mov        esi, 0x2
0000000000003a85         mov        ecx, dword [rax+0xc]
0000000000003a88         jmp        sub_2e10+192
0000000000003a8d         cmp        r11d, 0x45
0000000000003a91         je         __strftime_internal+528
0000000000003a97         mov        rax, qword [rsp]
0000000000003a9b         mov        ecx, dword [rax+0xc]
0000000000003a9e         mov        r8d, dword [rsp+8]                          ; CODE XREF=sub_3050+2736, sub_3050+2752
0000000000003aa3         mov        esi, 0x2
0000000000003aa8         test       r8d, r8d
0000000000003aab         jne        sub_2e10+192
0000000000003ab1         mov        dword [rsp+8], 0x5f
0000000000003ab9         jmp        sub_2e10+192
0000000000003abe         cmp        r11d, 0x45
0000000000003ac2         je         __strftime_internal+528
0000000000003ac8         mov        rax, qword [rsp]
0000000000003acc         mov        esi, 0x3
0000000000003ad1         mov        eax, dword [rax+0x1c]
0000000000003ad4         cmp        eax, 0xffffffff
0000000000003ad7         lea        ecx, dword [rax+1]
0000000000003ada         setl       r13b
0000000000003ade         cmp        eax, 0xffffffff
0000000000003ae1         setge      al
0000000000003ae4         xor        r8d, r8d
0000000000003ae7         xor        r9d, r9d
0000000000003aea         jmp        sub_2e10+213
0000000000003aef         cmp        r11d, 0x45
0000000000003af3         je         __strftime_internal+528
0000000000003af9         mov        rax, qword [rsp]
0000000000003afd         mov        ecx, dword [rax+8]
0000000000003b00         jmp        sub_3050+2638
0000000000003b02         cmp        r11d, 0x45
0000000000003b06         je         __strftime_internal+528
0000000000003b0c         mov        ecx, dword [rsp+0x30]
0000000000003b10         jmp        sub_3050+2638
0000000000003b12         cmp        r11d, 0x45
0000000000003b16         je         __strftime_internal+528
0000000000003b1c         mov        rax, qword [rsp]
0000000000003b20         mov        esi, 0x2
0000000000003b25         mov        eax, dword [rax+0x10]
0000000000003b28         cmp        eax, 0xffffffff
0000000000003b2b         lea        ecx, dword [rax+1]
0000000000003b2e         setl       r13b
0000000000003b32         cmp        eax, 0xffffffff
0000000000003b35         setge      al
0000000000003b38         xor        r8d, r8d
0000000000003b3b         xor        r9d, r9d
0000000000003b3e         jmp        sub_2e10+213
0000000000003b43         test       r10d, r10d
0000000000003b46         mov        r13d, 0x0
0000000000003b4c         mov        eax, 0x1
0000000000003b51         cmovns     r13d, r10d
0000000000003b55         movsxd     r13, r13d
0000000000003b58         test       r13, r13
0000000000003b5b         cmove      r13, rax
0000000000003b5f         mov        rax, r15
0000000000003b62         not        rax
0000000000003b65         cmp        rax, r13
0000000000003b68         jbe        __strftime_internal+191
0000000000003b6e         test       r12, r12
0000000000003b71         je         sub_2e10+463
0000000000003b77         cmp        r10d, 0x1
0000000000003b7b         jle        sub_3050+2914
0000000000003b7d         mov        eax, dword [rsp+8]
0000000000003b81         movsxd     r10, r10d
0000000000003b84         lea        r14, qword [r10-1]
0000000000003b88         cmp        eax, 0x30
0000000000003b8b         je         sub_4260+236
0000000000003b91         xor        ebp, ebp
0000000000003b93         cmp        eax, 0x2b
0000000000003b96         je         sub_4260+236
0000000000003b9c         mov        rsi, r12                                    ; CODE XREF=sub_3050+2912
0000000000003b9f         mov        edi, 0x20
0000000000003ba4         add        rbp, 0x1
0000000000003ba8         call       j_fputc                                     ; fputc
0000000000003bad         cmp        r14, rbp
0000000000003bb0         jne        sub_3050+2892
0000000000003bb2         mov        rsi, r12                                    ; CODE XREF=sub_3050+2859, sub_4260+260
0000000000003bb5         mov        edi, 0xa
0000000000003bba         call       j_fputc                                     ; fputc
0000000000003bbf         jmp        sub_2e10+463
0000000000003bc4         xor        eax, eax
0000000000003bc6         jmp        sub_2e10+310
0000000000003bcb         movzx      eax, byte [rsp+0x34]
0000000000003bd0         test       r14b, r14b
0000000000003bd3         cmovne     eax, r14d
0000000000003bd7         cmp        r11d, 0x45
0000000000003bdb         je         sub_4260+312
0000000000003be1         mov        r13d, edi
0000000000003be4         mov        byte [rsp+0x34], al
0000000000003be8         xor        r14d, r14d
0000000000003beb         jmp        sub_2ca0+13


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3bf0:
0000000000003bf0         xor        r14d, r14d
0000000000003bf3         jmp        loc_37d2
0000000000003bf8         nop        dword [rax+rax]

                     loc_3c00:
0000000000003c00         mov        eax, ecx                                    ; CODE XREF=sub_2e10+217, sub_2e10+225
0000000000003c02         neg        eax
0000000000003c04         test       r13b, r13b
0000000000003c07         cmovne     ecx, eax
0000000000003c0a         jmp        loc_31e8
0000000000003c0f         nop

                     loc_3c10:
0000000000003c10         cmp        dword [rsp+8], 0x2d                         ; CODE XREF=sub_3050+131
0000000000003c15         mov        ebp, 0x2d
0000000000003c1a         jne        loc_3271

0000000000003c20         mov        byte [rsp+64], 0x2d
0000000000003c25         test       r10d, r10d
0000000000003c28         mov        ecx, 0x0
0000000000003c2d         mov        eax, 0x1
0000000000003c32         cmovns     ecx, r10d
0000000000003c36         movsxd     r13, ecx
0000000000003c39         test       r13, r13
0000000000003c3c         cmovne     rax, r13
0000000000003c40         mov        rdi, rax
0000000000003c43         mov        qword [rsp+8], rax
0000000000003c48         mov        rax, r15
0000000000003c4b         not        rax
0000000000003c4e         cmp        rax, rdi
0000000000003c51         jbe        __strftime_internal+191

0000000000003c57         test       r12, r12
0000000000003c5a         je         loc_3cb9

0000000000003c5c         mov        edi, dword [rsp+88]
0000000000003c60         test       edi, edi
0000000000003c62         jne        loc_3ca2

0000000000003c64         cmp        r13, 0x1
0000000000003c68         jbe        loc_3ca2

0000000000003c6a         movsxd     rax, r10d
0000000000003c6d         sub        rax, 0x1
0000000000003c71         je         loc_3ca2

0000000000003c73         mov        qword [rsp+72], rbx
0000000000003c78         xor        ebp, ebp
0000000000003c7a         mov        rbx, rax
0000000000003c7d         mov        dword [rsp+80], r10d

                     loc_3c82:
0000000000003c82         mov        rsi, r12                                    ; argument "__stream" for method j_fputc, CODE XREF=sub_3bf0+166
0000000000003c85         mov        edi, 0x20                                   ; argument "__c" for method j_fputc
0000000000003c8a         add        rbp, 0x1
0000000000003c8e         call       j_fputc                                     ; fputc
0000000000003c93         cmp        rbx, rbp
0000000000003c96         jne        loc_3c82

0000000000003c98         mov        rbx, qword [rsp+72]
0000000000003c9d         mov        r10d, dword [rsp+80]

                     loc_3ca2:
0000000000003ca2         movsx      edi, byte [rsp+64]                          ; argument "__c" for method j_fputc, CODE XREF=sub_3bf0+114, sub_3bf0+120, sub_3bf0+129
0000000000003ca7         mov        rsi, r12                                    ; argument "__stream" for method j_fputc
0000000000003caa         mov        dword [rsp+72], r10d
0000000000003caf         call       j_fputc                                     ; fputc
0000000000003cb4         mov        r10d, dword [rsp+72]

                     loc_3cb9:
0000000000003cb9         add        r15, qword [rsp+8]                          ; CODE XREF=sub_3bf0+106
0000000000003cbe         mov        rax, qword [rsp+56]
0000000000003cc3         mov        rbp, rbx
0000000000003cc6         mov        dword [rsp+8], 0x2d
0000000000003cce         add        rax, 0x17
0000000000003cd2         sub        rax, r14
0000000000003cd5         mov        rdx, r15
0000000000003cd8         mov        qword [rsp+64], rax
0000000000003cdd         not        rdx
0000000000003ce0         jmp        loc_311c
0000000000003ce5         nop        dword [rax]

                     loc_3ce8:
0000000000003ce8         mov        rdi, qword [rsp+0x4e8+var_4B0]              ; argument "__ptr" for method j_fwrite, CODE XREF=__strftime_internal+696
0000000000003ced         mov        rcx, r12                                    ; argument "__s" for method j_fwrite
0000000000003cf0         mov        edx, 0x1                                    ; argument "__n" for method j_fwrite
0000000000003cf5         mov        rsi, r13                                    ; argument "__size" for method j_fwrite
0000000000003cf8         call       j_fwrite                                    ; fwrite
0000000000003cfd         jmp        loc_2bce
0000000000003d02         align      8

                     loc_3d08:
0000000000003d08         mov        rdi, qword [rsp+arg_30]                     ; CODE XREF=sub_2ca0+265
0000000000003d0d         mov        rcx, r12                                    ; argument "__s" for method j_fwrite
0000000000003d10         mov        edx, 0x1                                    ; argument "__n" for method j_fwrite
0000000000003d15         mov        rsi, r13                                    ; argument "__size" for method j_fwrite
0000000000003d18         add        rdi, 0x1                                    ; argument "__ptr" for method j_fwrite
0000000000003d1c         call       j_fwrite                                    ; fwrite
0000000000003d21         jmp        loc_2dc3
0000000000003d26         align      16

                     loc_3d30:
0000000000003d30         mov        rsi, qword [rsp+arg_30]                     ; CODE XREF=sub_2ca0+254
0000000000003d35         mov        rdx, r13
0000000000003d38         mov        rdi, r12
0000000000003d3b         add        rsi, 0x1
0000000000003d3f         call       fwrite_lowcase                              ; fwrite_lowcase
0000000000003d44         jmp        loc_2dc3
0000000000003d49         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8


                     sub_3d50:
0000000000003d50         mov        rsi, qword [rsp+arg_38]                     ; argument "__size" for method j_fwrite
0000000000003d55         mov        rcx, r12                                    ; argument "__s" for method j_fwrite
0000000000003d58         mov        edx, 0x1                                    ; argument "__n" for method j_fwrite
0000000000003d5d         mov        rdi, r14                                    ; argument "__ptr" for method j_fwrite
0000000000003d60         call       j_fwrite                                    ; fwrite
0000000000003d65         jmp        loc_31ae
0000000000003d6a         align      16

                     loc_3d70:
0000000000003d70         test       rbx, rbx                                    ; CODE XREF=sub_2ca0+194, sub_2ca0+203
0000000000003d73         je         loc_2d9b

0000000000003d79         xor        edx, edx
0000000000003d7b         mov        qword [rsp+arg_0], rbp
0000000000003d80         mov        rbp, rdx
0000000000003d83         nop        dword [rax+rax]

                     loc_3d88:
0000000000003d88         mov        rsi, r12                                    ; argument "__stream" for method j_fputc, CODE XREF=sub_3d50+76
0000000000003d8b         mov        edi, 0x30                                   ; argument "__c" for method j_fputc
0000000000003d90         add        rbp, 0x1
0000000000003d94         call       j_fputc                                     ; fputc
0000000000003d99         cmp        rbx, rbp
0000000000003d9c         jne        loc_3d88

0000000000003d9e         jmp        loc_2d96

                     loc_3da3:
0000000000003da3         test       rbx, rbx                                    ; CODE XREF=__strftime_internal+628, __strftime_internal+637
0000000000003da6         je         loc_2bb3

0000000000003dac         xor        edx, edx
0000000000003dae         mov        qword [rsp+0x4e8+var_4E0], rbp
0000000000003db3         mov        rbp, rdx
0000000000003db6         nop        word [cs:rax+rax]

                     loc_3dc0:
0000000000003dc0         mov        rsi, r12                                    ; argument "__stream" for method j_fputc, CODE XREF=sub_3d50+132
0000000000003dc3         mov        edi, 0x30                                   ; argument "__c" for method j_fputc
0000000000003dc8         add        rbp, 0x1
0000000000003dcc         call       j_fputc                                     ; fputc
0000000000003dd1         cmp        rbx, rbp
0000000000003dd4         jne        loc_3dc0

0000000000003dd6         jmp        loc_2bae
0000000000003ddb         cmp        rax, rdx                                    ; CODE XREF=sub_2e10+457
0000000000003dde         jae        sub_3d50+231
0000000000003de0         movsxd     rdx, r10d
0000000000003de3         mov        rdi, rdx
0000000000003de6         sub        rdi, rax
0000000000003de9         mov        eax, dword [rsp+8]
0000000000003ded         cmp        eax, 0x30
0000000000003df0         je         sub_41b0+42
0000000000003df6         cmp        eax, 0x2b
0000000000003df9         je         sub_41b0+42
0000000000003dff         xor        edx, edx
0000000000003e01         test       rdi, rdi
0000000000003e04         je         sub_3d50+231
0000000000003e06         mov        dword [rsp+0x34], ebp
0000000000003e0a         mov        qword [rsp+0x40], rbx
0000000000003e0f         mov        rbp, rdi
0000000000003e12         mov        rbx, rdx
0000000000003e15         nop        dword [rax]
0000000000003e18         mov        rsi, r12                                    ; CODE XREF=sub_3d50+220
0000000000003e1b         mov        edi, 0x20
0000000000003e20         add        rbx, 0x1
0000000000003e24         call       j_fputc                                     ; fputc
0000000000003e29         cmp        rbp, rbx
0000000000003e2c         jne        sub_3d50+200
0000000000003e2e         mov        ebp, dword [rsp+0x34]                       ; CODE XREF=sub_41b0+94
0000000000003e32         mov        rbx, qword [rsp+0x40]
0000000000003e37         sub        rsp, 0x8                                    ; CODE XREF=sub_3d50+142, sub_3d50+180, sub_41b0+45
0000000000003e3b         mov        r9d, r14d
0000000000003e3e         mov        ecx, ebp
0000000000003e40         mov        eax, dword [rsp+0x508]
0000000000003e47         mov        rdi, r12
0000000000003e4a         push       rax
0000000000003e4b         push       qword [rsp+0x20]
0000000000003e4f         push       qword [rsp+0x30]
0000000000003e53         mov        r8d, dword [rsp+0x28]
0000000000003e58         mov        rdx, qword [rsp+0x20]
0000000000003e5d         mov        rsi, qword [rsp+0x58]
0000000000003e62         call       __strftime_internal                         ; __strftime_internal
0000000000003e67         add        rsp, 0x20
0000000000003e6b         jmp        sub_2e10+463

                     loc_3e70:
0000000000003e70         test       r13, r13                                    ; CODE XREF=sub_3050+259, sub_3050+268
0000000000003e73         je         loc_3193

0000000000003e79         xor        edx, edx
0000000000003e7b         mov        qword [rsp+8], rbx
0000000000003e80         mov        rbx, rdx
0000000000003e83         nop        dword [rax+rax]

                     loc_3e88:
0000000000003e88         mov        rsi, r12                                    ; argument "__stream" for method j_fputc, CODE XREF=sub_3d50+332
0000000000003e8b         mov        edi, 0x30                                   ; argument "__c" for method j_fputc
0000000000003e90         add        rbx, 0x1
0000000000003e94         call       j_fputc                                     ; fputc
0000000000003e99         cmp        r13, rbx
0000000000003e9c         jne        loc_3e88

0000000000003e9e         jmp        loc_318e
0000000000003ea3         xor        esi, esi                                    ; CODE XREF=sub_3050+1451, sub_3050+2217, sub_3050+2526
0000000000003ea5         jmp        sub_2e10+234
0000000000003eaa         mov        r13d, 0x70                                  ; CODE XREF=sub_2e10+313
0000000000003eb0         mov        byte [rsp+0x34], 0x0
0000000000003eb5         jmp        sub_2ca0+13

                     loc_3eba:
0000000000003eba         xor        ebp, ebp                                    ; CODE XREF=sub_41b0+147

                     loc_3ebc:
0000000000003ebc         movsxd     rax, r13d                                   ; CODE XREF=sub_3050+596
0000000000003ebf         cmp        rax, rdx
0000000000003ec2         mov        qword [rsp+8], rax
0000000000003ec7         jae        __strftime_internal+191

0000000000003ecd         test       r12, r12
0000000000003ed0         je         loc_3f15

0000000000003ed2         xor        edx, edx
0000000000003ed4         mov        byte [rsp+64], bpl
0000000000003ed9         mov        qword [rsp+72], rbx
0000000000003ede         mov        rbp, rdx
0000000000003ee1         mov        rbx, rax
0000000000003ee4         mov        dword [rsp+80], r10d
0000000000003ee9         nop        dword [rax]

                     loc_3ef0:
0000000000003ef0         mov        rsi, r12                                    ; argument "__stream" for method j_fputc, CODE XREF=sub_3d50+436
0000000000003ef3         mov        edi, 0x20                                   ; argument "__c" for method j_fputc
0000000000003ef8         add        rbp, 0x1
0000000000003efc         call       j_fputc                                     ; fputc
0000000000003f01         cmp        rbx, rbp
0000000000003f04         ja         loc_3ef0

0000000000003f06         movzx      ebp, byte [rsp+64]
0000000000003f0b         mov        rbx, qword [rsp+72]
0000000000003f10         mov        r10d, dword [rsp+80]

                     loc_3f15:
0000000000003f15         add        r15, qword [rsp+8]                          ; CODE XREF=sub_3d50+384
0000000000003f1a         mov        eax, r10d
0000000000003f1d         sub        eax, r13d
0000000000003f20         cmp        r10d, r13d
0000000000003f23         mov        r10d, 0x0
0000000000003f29         cmovg      r10d, eax
0000000000003f2d         test       bpl, bpl
0000000000003f30         mov        rdx, r15
0000000000003f33         not        rdx
0000000000003f36         jne        loc_4063

0000000000003f3c         mov        rax, qword [rsp+56]
0000000000003f41         movsxd     r13, r10d
0000000000003f44         mov        rbp, rbx
0000000000003f47         mov        dword [rsp+8], 0x5f
0000000000003f4f         add        rax, 0x17
0000000000003f53         sub        rax, r14
0000000000003f56         mov        qword [rsp+64], rax
0000000000003f5b         jmp        loc_311c

                     loc_3f60:
0000000000003f60         test       r10d, r10d                                  ; CODE XREF=sub_3050+585
0000000000003f63         mov        ecx, 0x0
0000000000003f68         mov        eax, 0x1
0000000000003f6d         cmovns     ecx, r10d
0000000000003f71         movsxd     r13, ecx
0000000000003f74         test       r13, r13
0000000000003f77         cmovne     rax, r13
0000000000003f7b         cmp        rax, rdx
0000000000003f7e         mov        qword [rsp+72], rax
0000000000003f83         jae        __strftime_internal+191

0000000000003f89         test       r12, r12
0000000000003f8c         je         loc_400a

0000000000003f8e         mov        ecx, dword [rsp+88]
0000000000003f92         test       ecx, ecx
0000000000003f94         jne        loc_3ff4

0000000000003f96         cmp        r13, 0x1
0000000000003f9a         jbe        loc_3ff4

0000000000003f9c         mov        edi, dword [rsp+8]
0000000000003fa0         movsxd     rax, r10d
0000000000003fa3         sub        rax, 0x1
0000000000003fa7         mov        qword [rsp+56], rax
0000000000003fac         cmp        edi, 0x30
0000000000003faf         je         loc_4476

0000000000003fb5         cmp        edi, 0x2b
0000000000003fb8         je         loc_4476

0000000000003fbe         xor        edx, edx
0000000000003fc0         test       rax, rax
0000000000003fc3         je         loc_3ff4

0000000000003fc5         mov        qword [rsp+80], rbx
0000000000003fca         mov        dword [rsp+92], r10d
0000000000003fcf         mov        rbx, rdx

                     loc_3fd2:
0000000000003fd2         mov        rsi, r12                                    ; argument "__stream" for method j_fputc, CODE XREF=sub_3d50+664
0000000000003fd5         mov        edi, 0x20                                   ; argument "__c" for method j_fputc
0000000000003fda         add        rbx, 0x1
0000000000003fde         call       j_fputc                                     ; fputc
0000000000003fe3         cmp        qword [rsp+56], rbx
0000000000003fe8         jne        loc_3fd2

                     loc_3fea:
0000000000003fea         mov        rbx, qword [rsp+80]                         ; CODE XREF=sub_4260+585
0000000000003fef         mov        r10d, dword [rsp+92]

                     loc_3ff4:
0000000000003ff4         movsx      edi, bpl                                    ; argument "__c" for method j_fputc, CODE XREF=sub_3d50+580, sub_3d50+586, sub_3d50+627, sub_4260+540
0000000000003ff8         mov        rsi, r12                                    ; argument "__stream" for method j_fputc
0000000000003ffb         mov        dword [rsp+56], r10d
0000000000004000         call       j_fputc                                     ; fputc, DATA XREF=sub_4e60+88
0000000000004005         mov        r10d, dword [rsp+56]

                     loc_400a:
000000000000400a         add        r15, qword [rsp+72]                         ; CODE XREF=sub_3d50+572
000000000000400f         mov        rbp, rbx
0000000000004012         mov        rdx, r15
0000000000004015         not        rdx
0000000000004018         jmp        loc_311c

                     loc_401d:
000000000000401d         mov        byte [rsp+64], 0x2b                         ; CODE XREF=sub_3050+539
0000000000004022         jmp        sub_3bf0+53
                        ; endp

                     loc_4027:
0000000000004027         mov        esi, 0x4                                    ; CODE XREF=sub_3050+2284, sub_3d50+1091
000000000000402c         mov        edx, 0x270f

                     loc_4031:
0000000000004031         cmp        edx, ecx                                    ; CODE XREF=sub_4260+647
0000000000004033         mov        r9d, 0x1
0000000000004039         mov        dword [rsp+8], 0x2b
0000000000004041         jb         loc_354c

                     loc_4047:
0000000000004047         cmp        r10d, esi                                   ; CODE XREF=sub_4260+632
000000000000404a         mov        dword [rsp+8], 0x2b
0000000000004052         setg       r9b
0000000000004056         jmp        loc_354c

                     loc_405b:
000000000000405b         mov        rbp, rbx                                    ; CODE XREF=sub_3050+1931
000000000000405e         jmp        __strftime_internal+272
                        ; endp

                     loc_4063:
0000000000004063         movsxd     rcx, r10d                                   ; CODE XREF=sub_3d50+486
0000000000004066         mov        r13d, 0x1
000000000000406c         test       rcx, rcx
000000000000406f         cmovne     r13, rcx
0000000000004073         cmp        r13, rdx
0000000000004076         mov        qword [rsp+8], r13
000000000000407b         jae        __strftime_internal+191

0000000000004081         test       r12, r12
0000000000004084         je         loc_40f5

0000000000004086         mov        esi, dword [rsp+88]
000000000000408a         test       esi, esi
000000000000408c         jne        loc_40d5

000000000000408e         cmp        r10d, 0x1
0000000000004092         jbe        loc_40d5

0000000000004094         lea        rax, qword [rcx-1]
0000000000004098         xor        r13d, r13d
000000000000409b         mov        qword [rsp+72], rbx
00000000000040a0         mov        dword [rsp+80], r10d
00000000000040a5         mov        rbx, r13
00000000000040a8         mov        r13, rcx
00000000000040ab         mov        qword [rsp+64], rax

                     loc_40b0:
00000000000040b0         mov        rsi, r12                                    ; argument "__stream" for method j_fputc, CODE XREF=sub_3d50+886
00000000000040b3         mov        edi, 0x20                                   ; argument "__c" for method j_fputc
00000000000040b8         add        rbx, 0x1
00000000000040bc         call       j_fputc                                     ; fputc
00000000000040c1         cmp        qword [rsp+64], rbx
00000000000040c6         jne        loc_40b0

00000000000040c8         mov        rbx, qword [rsp+72]
00000000000040cd         mov        r10d, dword [rsp+80]
00000000000040d2         mov        rcx, r13

                     loc_40d5:
00000000000040d5         movsx      edi, bpl                                    ; argument "__c" for method j_fputc, CODE XREF=sub_3d50+828, sub_3d50+834
00000000000040d9         mov        rsi, r12                                    ; argument "__stream" for method j_fputc
00000000000040dc         mov        dword [rsp+72], r10d
00000000000040e1         mov        qword [rsp+64], rcx
00000000000040e6         call       j_fputc                                     ; fputc
00000000000040eb         mov        r10d, dword [rsp+72]
00000000000040f0         mov        rcx, qword [rsp+64]

                     loc_40f5:
00000000000040f5         add        r15, qword [rsp+8]                          ; CODE XREF=sub_3d50+820
00000000000040fa         mov        rax, qword [rsp+56]
00000000000040ff         mov        r13, rcx
0000000000004102         mov        rbp, rbx
0000000000004105         mov        dword [rsp+8], 0x5f
000000000000410d         add        rax, 0x17
0000000000004111         sub        rax, r14
0000000000004114         mov        rdx, r15
0000000000004117         mov        qword [rsp+64], rax
000000000000411c         not        rdx
000000000000411f         jmp        loc_311c

                     loc_4124:
0000000000004124         mov        eax, 0xfffff894                             ; CODE XREF=sub_3050+1231
0000000000004129         sub        eax, r8d
000000000000412c         cmp        esi, eax
000000000000412e         jge        loc_44fd

0000000000004134         neg        ecx
0000000000004136         cmp        dword [rsp+8], 0x0
000000000000413b         jne        loc_3531

                     loc_4141:
0000000000004141         mov        eax, dword [rsp+36]                         ; CODE XREF=sub_3050+1243, sub_4260+677
0000000000004145         cmp        eax, 0x2b
0000000000004148         je         loc_44cb

000000000000414e         mov        dword [rsp+8], eax
0000000000004152         xor        r9d, r9d
0000000000004155         mov        eax, 0x1
000000000000415a         xor        r13d, r13d
000000000000415d         mov        esi, 0x2
0000000000004162         jmp        loc_354c

                     loc_4167:
0000000000004167         mov        eax, 0xfffff894                             ; CODE XREF=sub_3050+1155
000000000000416c         mov        r9d, dword [rsp+8]
0000000000004171         lea        ecx, dword [rsi+r8+0x76c]
0000000000004179         sub        eax, r8d
000000000000417c         cmp        esi, eax
000000000000417e         setl       r13b
0000000000004182         setge      al
0000000000004185         test       r9d, r9d
0000000000004188         je         loc_3935

                     loc_418e:
000000000000418e         cmp        dword [rsp+8], 0x2b                         ; CODE XREF=sub_3050+2271
0000000000004193         je         loc_4027

0000000000004199         xor        r9d, r9d
000000000000419c         mov        esi, 0x4
00000000000041a1         jmp        loc_354c
00000000000041a6         nop        word [cs:rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_41b0:
00000000000041b0         mov        ecx, dword [rsp+1280]                       ; CODE XREF=sub_3050+1352
00000000000041b7         mov        esi, 0x9
00000000000041bc         mov        r10d, 0x9
00000000000041c2         jmp        loc_2ed0
00000000000041c7         mov        rbp, rbx                                    ; CODE XREF=sub_3050+1797
00000000000041ca         mov        qword [rsp+0x38], rbx
00000000000041cf         mov        r13d, 0x1
00000000000041d5         jmp        __strftime_internal+596
00000000000041da         test       rdi, rdi                                    ; CODE XREF=sub_3d50+160, sub_3d50+169
00000000000041dd         je         sub_3d50+231
00000000000041e3         xor        edx, edx
00000000000041e5         mov        dword [rsp+0x34], ebp
00000000000041e9         mov        qword [rsp+0x40], rbx
00000000000041ee         mov        rbp, rdi
00000000000041f1         mov        rbx, rdx
00000000000041f4         nop        dword [rax]
00000000000041f8         mov        rsi, r12                                    ; CODE XREF=sub_41b0+92
00000000000041fb         mov        edi, 0x30
0000000000004200         add        rbx, 0x1
0000000000004204         call       j_fputc                                     ; fputc
0000000000004209         cmp        rbp, rbx
000000000000420c         jne        sub_41b0+72
000000000000420e         jmp        sub_3d50+222

                     loc_4213:
0000000000004213         imul       r8d, r8d, 0x64                              ; CODE XREF=sub_3050+2075, sub_3050+2093
0000000000004217         mov        r9d, 0x1
000000000000421d         mov        esi, 0x9
0000000000004222         imul       eax, ebp, 0x2710
0000000000004228         add        eax, r8d
000000000000422b         mov        r8d, 0x14
0000000000004231         add        ecx, eax
0000000000004233         mov        eax, r13d
0000000000004236         xor        eax, 0x1
0000000000004239         jmp        loc_2ee5

                     loc_423e:
000000000000423e         cmp        dword [rsp+8], 0x5f                         ; CODE XREF=sub_3050+180
0000000000004243         je         loc_3eba

0000000000004249         movsxd     rax, dword [rsp+88]
000000000000424e         cmp        rax, rdx
0000000000004251         jb         loc_3351

0000000000004257         jmp        __strftime_internal+191
                        ; endp
000000000000425c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4260:
0000000000004260         sub        r9d, 0x1                                    ; CODE XREF=sub_3050+996
0000000000004264         mov        edx, 0x16d
0000000000004269         test       r9b, 0x3
000000000000426d         jne        loc_42a9

000000000000426f         mov        eax, r9d
0000000000004272         mov        edx, 0x51eb851f
0000000000004277         imul       edx
0000000000004279         mov        eax, r9d
000000000000427c         sar        eax, 0x1f
000000000000427f         sar        edx, 0x5
0000000000004282         sub        edx, eax
0000000000004284         imul       eax, edx, 0x64
0000000000004287         mov        edx, 0x16e
000000000000428c         cmp        r9d, eax
000000000000428f         jne        loc_42a9

0000000000004291         mov        eax, r9d
0000000000004294         mov        ecx, 0x190
0000000000004299         cdq
000000000000429a         idiv       ecx
000000000000429c         cmp        edx, 0x1
000000000000429f         sbb        edx, edx
00000000000042a1         not        edx
00000000000042a3         add        edx, 0x16e

                     loc_42a9:
00000000000042a9         add        r8d, edx                                    ; CODE XREF=sub_4260+13, sub_4260+47
00000000000042ac         mov        edx, 0x92492493
00000000000042b1         mov        ecx, r8d
00000000000042b4         sub        ecx, r14d
00000000000042b7         add        ecx, 0x17e
00000000000042bd         mov        eax, ecx
00000000000042bf         sub        r8d, ecx
00000000000042c2         imul       edx
00000000000042c4         lea        eax, dword [rdx+rcx]
00000000000042c7         mov        edx, ecx
00000000000042c9         sar        edx, 0x1f
00000000000042cc         sar        eax, 0x2
00000000000042cf         sub        eax, edx
00000000000042d1         lea        edx, dword [rax*8]
00000000000042d8         sub        edx, eax
00000000000042da         lea        ecx, dword [r8+rdx+3]
00000000000042df         mov        r8d, 0xffffffff
00000000000042e5         jmp        loc_34cf

                     loc_42ea:
00000000000042ea         mov        eax, ecx                                    ; CODE XREF=sub_3050+1165
00000000000042ec         mov        edx, 0x92492493
00000000000042f1         mov        esi, 0x2
00000000000042f6         imul       edx
00000000000042f8         lea        eax, dword [rdx+rcx]
00000000000042fb         sar        ecx, 0x1f
00000000000042fe         sar        eax, 0x2
0000000000004301         sub        eax, ecx
0000000000004303         mov        ecx, eax
0000000000004305         add        ecx, 0x1
0000000000004308         jmp        sub_2e10+192
                        ; endp

                     loc_430d:
000000000000430d         imul       ecx, ebp, 0x64                              ; CODE XREF=sub_3050+2059, sub_3050+2101
0000000000004310         mov        eax, r13d
0000000000004313         mov        r9d, 0x1
0000000000004319         xor        eax, 0x1
000000000000431c         mov        esi, 0x6
0000000000004321         add        ecx, r8d
0000000000004324         mov        r8d, 0x4
000000000000432a         jmp        loc_2ee5

                     loc_432f:
000000000000432f         xor        ebp, ebp                                    ; CODE XREF=sub_2e10+72, sub_2e10+83

                     loc_4331:
0000000000004331         mov        rsi, r12                                    ; argument "__stream" for method j_fputc, CODE XREF=sub_4260+229
0000000000004334         mov        edi, 0x30                                   ; argument "__c" for method j_fputc
0000000000004339         add        rbp, 0x1
000000000000433d         call       j_fputc                                     ; fputc
0000000000004342         cmp        r14, rbp
0000000000004345         jne        loc_4331

0000000000004347         jmp        loc_2e7f
000000000000434c         xor        ebp, ebp                                    ; CODE XREF=sub_3050+2875, sub_3050+2886
000000000000434e         mov        rsi, r12                                    ; CODE XREF=sub_4260+258
0000000000004351         mov        edi, 0x30
0000000000004356         add        rbp, 0x1
000000000000435a         call       j_fputc                                     ; fputc
000000000000435f         cmp        r14, rbp
0000000000004362         jne        sub_4260+238
0000000000004364         jmp        sub_3050+2914
0000000000004369         mov        rdi, qword [rsp+0x28]                       ; CODE XREF=sub_3050+2489
000000000000436e         mov        rcx, r12
0000000000004371         mov        edx, 0x1
0000000000004376         mov        rsi, r13
0000000000004379         call       j_fwrite                                    ; fwrite
000000000000437e         jmp        sub_3050+2511
0000000000004383         mov        rsi, qword [rsp+0x28]                       ; CODE XREF=sub_3050+2478
0000000000004388         mov        rdx, r13
000000000000438b         mov        rdi, r12
000000000000438e         call       fwrite_lowcase                              ; fwrite_lowcase
0000000000004393         jmp        sub_3050+2511
0000000000004398         mov        byte [rsp+0x34], al                         ; CODE XREF=sub_3050+2955
000000000000439c         jmp        __strftime_internal+528
00000000000043a1         lea        rcx, qword [rbx+2]                          ; CODE XREF=sub_3050+1899
00000000000043a5         mov        r14d, 0x1
00000000000043ab         mov        rdx, rcx                                    ; CODE XREF=sub_4260+354
00000000000043ae         add        rcx, 0x1
00000000000043b2         movzx      eax, byte [rcx-1]
00000000000043b6         add        r14, 0x1
00000000000043ba         cmp        al, 0x3a
00000000000043bc         jne        sub_3050+1911
00000000000043c2         jmp        sub_4260+331

                     loc_43c4:
00000000000043c4         movzx      ecx, byte [rbx]                             ; CODE XREF=sub_3050+2085
00000000000043c7         mov        qword [rsp+56], rbx
00000000000043cc         jmp        loc_36da

                     loc_43d1:
00000000000043d1         imul       ecx, ebp, 0x64                              ; CODE XREF=sub_3050+2065
00000000000043d4         xor        r8d, r8d
00000000000043d7         mov        r9d, 0x1
00000000000043dd         mov        esi, 0x5
00000000000043e2         add        ecx, eax
00000000000043e4         mov        eax, r13d
00000000000043e7         xor        eax, 0x1
00000000000043ea         jmp        loc_2ee5
00000000000043ef         mov        r14d, r10d                                  ; CODE XREF=sub_3050+1615, sub_3050+1624
00000000000043f2         mov        eax, 0x0
00000000000043f7         sub        r14d, 0x6
00000000000043fb         cmovs      r14d, eax
00000000000043ff         lea        rax, qword [aYmd]                           ; "%Y-%m-%d"
0000000000004406         mov        qword [rsp+0x38], rax
000000000000440b         jmp        sub_2e10+351

                     loc_4410:
0000000000004410         cmp        qword [rsp+56], 0x0                         ; CODE XREF=sub_3050+693, sub_3050+702
0000000000004416         je         loc_3340

000000000000441c         xor        edx, edx
000000000000441e         mov        qword [rsp+80], rbx
0000000000004423         mov        rbx, rdx

                     loc_4426:
0000000000004426         mov        rsi, r12                                    ; argument "__stream" for method j_fputc, CODE XREF=sub_4260+476
0000000000004429         mov        edi, 0x30                                   ; argument "__c" for method j_fputc
000000000000442e         add        rbx, 0x1
0000000000004432         call       j_fputc                                     ; fputc
0000000000004437         cmp        qword [rsp+56], rbx
000000000000443c         jne        loc_4426

000000000000443e         jmp        loc_333b
0000000000004443         cmp        qword [rsp+0x38], 0x0                       ; CODE XREF=sub_3050+2416, sub_3050+2425
0000000000004449         je         sub_3050+2475
000000000000444f         xor        edx, edx
0000000000004451         mov        qword [rsp+8], rbx
0000000000004456         mov        rbx, rdx
0000000000004459         mov        rsi, r12                                    ; CODE XREF=sub_4260+527
000000000000445c         mov        edi, 0x30
0000000000004461         add        rbx, 0x1
0000000000004465         call       j_fputc                                     ; fputc
000000000000446a         cmp        qword [rsp+0x38], rbx
000000000000446f         jne        sub_4260+505
0000000000004471         jmp        sub_3050+2470

                     loc_4476:
0000000000004476         cmp        qword [rsp+56], 0x0                         ; CODE XREF=sub_3d50+607, sub_3d50+616
000000000000447c         je         loc_3ff4

0000000000004482         xor        edx, edx
0000000000004484         mov        qword [rsp+80], rbx
0000000000004489         mov        dword [rsp+92], r10d
000000000000448e         mov        rbx, rdx

                     loc_4491:
0000000000004491         mov        rsi, r12                                    ; argument "__stream" for method j_fputc, CODE XREF=sub_4260+583
0000000000004494         mov        edi, 0x30                                   ; argument "__c" for method j_fputc
0000000000004499         add        rbx, 0x1
000000000000449d         call       j_fputc                                     ; fputc
00000000000044a2         cmp        qword [rsp+56], rbx
00000000000044a7         jne        loc_4491

00000000000044a9         jmp        loc_3fea
00000000000044ae         xor        ebp, ebp                                    ; CODE XREF=sub_3050+1845, sub_3050+1856
00000000000044b0         mov        rsi, r12                                    ; CODE XREF=sub_4260+612
00000000000044b3         mov        edi, 0x30
00000000000044b8         add        rbp, 0x1
00000000000044bc         call       j_fputc                                     ; fputc
00000000000044c1         cmp        r13, rbp
00000000000044c4         jne        sub_4260+592
00000000000044c6         jmp        __strftime_internal+255

                     loc_44cb:
00000000000044cb         mov        eax, 0x1                                    ; CODE XREF=sub_3d50+1016
00000000000044d0         xor        r13d, r13d
00000000000044d3         mov        esi, 0x2
00000000000044d8         jmp        loc_4047

                     loc_44dd:
00000000000044dd         mov        esi, 0x2                                    ; CODE XREF=sub_3050+1262, sub_3050+1547
00000000000044e2         mov        edx, 0x63
00000000000044e7         jmp        loc_4031
00000000000044ec         mov        ecx, dword [rsp+0x500]                      ; CODE XREF=sub_3050+1362
00000000000044f3         jmp        sub_3050+1415

                     loc_44f8:
00000000000044f8         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=__strftime_internal+214
                        ; endp

                     loc_44fd:
00000000000044fd         add        ecx, 0x64                                   ; CODE XREF=sub_3d50+990
0000000000004500         cmp        dword [rsp+8], 0x0
0000000000004505         je         loc_4141

000000000000450b         jmp        loc_3531

                     loc_4510:
0000000000004510         xor        esi, esi                                    ; CODE XREF=sub_2ca0+29
0000000000004512         jmp        loc_2f0a
0000000000004517         align      32                                          ; End of unwind block (FDE at 0x8d84)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_11: int8_t, -17


                     fprintftime:
0000000000004520         sub        rsp, 0x20                                   ; Begin of unwind block (FDE at 0x8dfc), CODE XREF=print_uptime+406
0000000000004524         mov        r9d, 0xffffffff
000000000000452a         mov        rax, qword [fs:0x28]
0000000000004533         mov        qword [rsp+0x20+var_10], rax
0000000000004538         xor        eax, eax
000000000000453a         mov        byte [rsp+0x20+var_11], 0x0
000000000000453f         push       r8
0000000000004541         xor        r8d, r8d
0000000000004544         push       rcx
0000000000004545         xor        ecx, ecx
0000000000004547         lea        rax, qword [rsp+0x30+var_11]
000000000000454c         push       rax
000000000000454d         call       __strftime_internal                         ; __strftime_internal
0000000000004552         add        rsp, 0x20
0000000000004556         mov        rdx, qword [rsp+0x18+var_10]
000000000000455b         xor        rdx, qword [fs:0x28]
0000000000004564         jne        loc_456b

0000000000004566         add        rsp, 0x18
000000000000456a         ret
                        ; endp

                     loc_456b:
000000000000456b         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=fprintftime+68
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_38: -56
        ;    var_48: -72
        ;    var_58: -88
        ;    var_68: -104
        ;    var_78: -120
        ;    var_88: -136
        ;    var_98: -152
        ;    var_A8: -168
        ;    var_D8: int8_t, -216
        ;    var_E0: int64_t, -224
        ;    var_E8: int64_t, -232
        ;    var_F0: int64_t, -240
        ;    var_F4: int32_t, -244
        ;    var_F8: int32_t, -248
        ;    var_100: int64_t, -256


                     parse_long_options:
0000000000004570         push       r13                                         ; End of unwind block (FDE at 0x8dfc), Begin of unwind block (FDE at 0x8e24)
0000000000004572         push       r12
0000000000004574         mov        r13, r8
0000000000004577         push       rbp
0000000000004578         push       rbx
0000000000004579         mov        rbp, rdx
000000000000457c         mov        r12, rcx
000000000000457f         sub        rsp, 0xe8
0000000000004586         test       al, al
0000000000004588         je         loc_45c4

000000000000458a         movaps     xmmword [rsp+0x108+var_A8], xmm0
000000000000458f         movaps     xmmword [rsp+0x108+var_98], xmm1
0000000000004594         movaps     xmmword [rsp+0x108+var_88], xmm2
000000000000459c         movaps     xmmword [rsp+0x108+var_78], xmm3
00000000000045a4         movaps     xmmword [rsp+0x108+var_68], xmm4
00000000000045ac         movaps     xmmword [rsp+0x108+var_58], xmm5
00000000000045b4         movaps     xmmword [rsp+0x108+var_48], xmm6
00000000000045bc         movaps     xmmword [rsp+0x108+var_38], xmm7

                     loc_45c4:
00000000000045c4         mov        rax, qword [fs:0x28]                        ; CODE XREF=parse_long_options+24
00000000000045cd         mov        qword [rsp+0x108+var_E0], rax
00000000000045d2         xor        eax, eax
00000000000045d4         cmp        edi, 0x2
00000000000045d7         mov        ebx, dword [opterr@@GLIBC_2.2.5]            ; opterr@@GLIBC_2.2.5
00000000000045dd         mov        dword [opterr@@GLIBC_2.2.5], 0x0            ; opterr@@GLIBC_2.2.5
00000000000045e7         je         loc_4620

                     loc_45e9:
00000000000045e9         mov        rax, qword [rsp+0x108+var_E0]               ; CODE XREF=parse_long_options+206, parse_long_options+221, parse_long_options+309
00000000000045ee         xor        rax, qword [fs:0x28]
00000000000045f7         mov        dword [opterr@@GLIBC_2.2.5], ebx            ; opterr@@GLIBC_2.2.5
00000000000045fd         mov        dword [optind@@GLIBC_2.2.5], 0x0            ; optind@@GLIBC_2.2.5
0000000000004607         jne        loc_46aa

000000000000460d         add        rsp, 0xe8
0000000000004614         pop        rbx
0000000000004615         pop        rbp
0000000000004616         pop        r12
0000000000004618         pop        r13
000000000000461a         ret
                        ; endp
000000000000461b         align      32

                     loc_4620:
0000000000004620         lea        rcx, qword [long_options]                   ; argument "__longopts" for method j_getopt_long, long_options, CODE XREF=parse_long_options+119
0000000000004627         lea        rdx, qword [aMdy+502]                       ; argument "__shortopts" for method j_getopt_long, 0x7f80
000000000000462e         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000004631         mov        qword [rsp+0x108+var_100], r9
0000000000004636         call       j_getopt_long                               ; getopt_long
000000000000463b         cmp        eax, 0xffffffff
000000000000463e         je         loc_45e9

0000000000004640         cmp        eax, 0x68
0000000000004643         mov        r9, qword [rsp+0x108+var_100]
0000000000004648         je         loc_46a0

000000000000464a         cmp        eax, 0x76
000000000000464d         jne        loc_45e9

000000000000464f         lea        rax, qword [rsp+0x108+arg_0]
0000000000004657         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000465e         lea        r8, qword [rsp+0x108+var_F8]
0000000000004663         mov        rcx, r13
0000000000004666         mov        rdx, r12
0000000000004669         mov        rsi, rbp
000000000000466c         mov        qword [rsp+0x108+var_F0], rax
0000000000004671         lea        rax, qword [rsp+0x108+var_D8]
0000000000004676         mov        dword [rsp+0x108+var_F8], 0x30
000000000000467e         mov        dword [rsp+0x108+var_F4], 0x30
0000000000004686         mov        qword [rsp+0x108+var_E8], rax
000000000000468b         call       version_etc_va                              ; version_etc_va
0000000000004690         xor        edi, edi                                    ; argument "__status" for method j_exit
0000000000004692         call       j_exit                                      ; exit
                        ; endp
0000000000004697         align      32

                     loc_46a0:
00000000000046a0         xor        edi, edi                                    ; CODE XREF=parse_long_options+216
00000000000046a2         call       r9
00000000000046a5         jmp        loc_45e9

                     loc_46aa:
00000000000046aa         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=parse_long_options+151
                        ; endp
00000000000046af         align      16                                          ; End of unwind block (FDE at 0x8e24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_38: -56
        ;    var_48: -72
        ;    var_58: -88
        ;    var_68: -104
        ;    var_78: -120
        ;    var_88: -136
        ;    var_98: -152
        ;    var_A8: -168
        ;    var_D8: int8_t, -216
        ;    var_E0: int64_t, -224
        ;    var_E8: int64_t, -232
        ;    var_F0: int64_t, -240
        ;    var_F4: int32_t, -244
        ;    var_F8: int32_t, -248


                     parse_gnu_standard_options_only:
00000000000046b0         push       r14                                         ; Begin of unwind block (FDE at 0x8e60), CODE XREF=main+151
00000000000046b2         push       r13
00000000000046b4         mov        r14, r8
00000000000046b7         push       r12
00000000000046b9         push       rbp
00000000000046ba         mov        r12, rdx
00000000000046bd         push       rbx
00000000000046be         mov        r13, rcx
00000000000046c1         sub        rsp, 0xd0
00000000000046c8         test       al, al
00000000000046ca         mov        rbp, qword [rsp+0xf8+arg_0]
00000000000046d2         je         loc_470b

00000000000046d4         movaps     xmmword [rsp+0xf8+var_A8], xmm0
00000000000046d9         movaps     xmmword [rsp+0xf8+var_98], xmm1
00000000000046de         movaps     xmmword [rsp+0xf8+var_88], xmm2
00000000000046e3         movaps     xmmword [rsp+0xf8+var_78], xmm3
00000000000046eb         movaps     xmmword [rsp+0xf8+var_68], xmm4
00000000000046f3         movaps     xmmword [rsp+0xf8+var_58], xmm5
00000000000046fb         movaps     xmmword [rsp+0xf8+var_48], xmm6
0000000000004703         movaps     xmmword [rsp+0xf8+var_38], xmm7

                     loc_470b:
000000000000470b         mov        rax, qword [fs:0x28]                        ; CODE XREF=parse_gnu_standard_options_only+34
0000000000004714         mov        qword [rsp+0xf8+var_E0], rax
0000000000004719         xor        eax, eax
000000000000471b         lea        rdx, qword [aWrittenBySSAnd+27]             ; 0x8501
0000000000004722         lea        rax, qword [aMdy+502]                       ; 0x7f80
0000000000004729         test       r9b, r9b
000000000000472c         lea        rcx, qword [long_options]                   ; argument "__longopts" for method j_getopt_long, long_options
0000000000004733         cmove      rdx, rax                                    ; argument "__shortopts" for method j_getopt_long
0000000000004737         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
000000000000473a         mov        ebx, dword [opterr@@GLIBC_2.2.5]            ; opterr@@GLIBC_2.2.5
0000000000004740         mov        dword [opterr@@GLIBC_2.2.5], 0x1            ; opterr@@GLIBC_2.2.5
000000000000474a         call       j_getopt_long                               ; getopt_long
000000000000474f         cmp        eax, 0xffffffff
0000000000004752         je         loc_47b8

0000000000004754         cmp        eax, 0x68
0000000000004757         je         loc_47e0

000000000000475d         cmp        eax, 0x76
0000000000004760         jne        loc_47b0

0000000000004762         lea        rax, qword [rsp+0xf8+arg_8]
000000000000476a         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004771         mov        r8, rsp
0000000000004774         mov        rcx, r14
0000000000004777         mov        rdx, r13
000000000000477a         mov        rsi, r12
000000000000477d         mov        qword [rsp+0xf8+var_F0], rax
0000000000004782         lea        rax, qword [rsp+0xf8+var_D8]
0000000000004787         mov        dword [rsp+0xf8+var_F8], 0x30
000000000000478e         mov        dword [rsp+0xf8+var_F4], 0x30
0000000000004796         mov        qword [rsp+0xf8+var_E8], rax
000000000000479b         call       version_etc_va                              ; version_etc_va
00000000000047a0         xor        edi, edi                                    ; argument "__status" for method j_exit
00000000000047a2         call       j_exit                                      ; exit
                        ; endp
00000000000047a7         align      16

                     loc_47b0:
00000000000047b0         mov        edi, dword [exit_failure]                   ; exit_failure, CODE XREF=parse_gnu_standard_options_only+176
00000000000047b6         call       rbp

                     loc_47b8:
00000000000047b8         mov        rax, qword [rsp+0xf8+var_E0]                ; CODE XREF=parse_gnu_standard_options_only+162, parse_gnu_standard_options_only+308
00000000000047bd         xor        rax, qword [fs:0x28]
00000000000047c6         mov        dword [opterr@@GLIBC_2.2.5], ebx            ; opterr@@GLIBC_2.2.5
00000000000047cc         jne        loc_47e6

00000000000047ce         add        rsp, 0xd0
00000000000047d5         pop        rbx
00000000000047d6         pop        rbp
00000000000047d7         pop        r12
00000000000047d9         pop        r13
00000000000047db         pop        r14
00000000000047dd         ret
                        ; endp
00000000000047de         align      32

                     loc_47e0:
00000000000047e0         xor        edi, edi                                    ; CODE XREF=parse_gnu_standard_options_only+167
00000000000047e2         call       rbp
00000000000047e4         jmp        loc_47b8

                     loc_47e6:
00000000000047e6         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=parse_gnu_standard_options_only+284
                        ; endp
00000000000047eb         align      16                                          ; End of unwind block (FDE at 0x8e60)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
00000000000047f0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x8eac), CODE XREF=main+14
00000000000047f3         push       rbx
00000000000047f4         je         loc_486d

00000000000047f6         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
00000000000047fb         mov        rbx, rdi
00000000000047fe         call       j_strrchr                                   ; strrchr
0000000000004803         test       rax, rax
0000000000004806         je         loc_485d

0000000000004808         lea        r8, qword [rax+1]
000000000000480c         mov        rdx, r8
000000000000480f         sub        rdx, rbx
0000000000004812         cmp        rdx, 0x6
0000000000004816         jle        loc_485d

0000000000004818         lea        rsi, qword [rax-6]
000000000000481c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000004823         mov        ecx, 0x7
0000000000004828         rep  cmpsb byte [rsi], byte [rdi]
000000000000482a         seta       dl
000000000000482d         sbb        dl, 0x0
0000000000004830         test       dl, dl
0000000000004832         jne        loc_485d

0000000000004834         lea        rdi, qword [aLibs+8]                        ; 0x7fd0
000000000000483b         mov        ecx, 0x3
0000000000004840         mov        rsi, r8
0000000000004843         mov        rbx, r8
0000000000004846         rep  cmpsb byte [rsi], byte [rdi]
0000000000004848         seta       dl
000000000000484b         sbb        dl, 0x0
000000000000484e         test       dl, dl
0000000000004850         jne        loc_485d

0000000000004852         lea        rbx, qword [rax+4]
0000000000004856         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_485d:
000000000000485d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000004864         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
000000000000486b         pop        rbx
000000000000486c         ret
                        ; endp

                     loc_486d:
000000000000486d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000004874         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
000000000000487b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000004880         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000004885         call       j_fwrite                                    ; fwrite
000000000000488a         call       j_abort                                     ; abort
                        ; endp
000000000000488f         align      16                                          ; End of unwind block (FDE at 0x8eac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000004890         push       rbp                                         ; Begin of unwind block (FDE at 0x8ecc), CODE XREF=sub_50c0+2597, sub_50c0+2619
0000000000004891         push       rbx
0000000000004892         mov        rbp, rdi
0000000000004895         mov        ebx, esi
0000000000004897         sub        rsp, 0x8
000000000000489b         call       locale_charset                              ; locale_charset
00000000000048a0         movzx      edx, byte [rax]
00000000000048a3         and        edx, 0xffffffdf
00000000000048a6         cmp        dl, 0x55
00000000000048a9         je         loc_4920

00000000000048ab         cmp        dl, 0x47
00000000000048ae         je         loc_48d0

                     loc_48b0:
00000000000048b0         lea        rax, qword [aLibs+27]                       ; 0x7fe3, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
00000000000048b7         lea        rdx, qword [aLibs+29]                       ; 0x7fe5
00000000000048be         cmp        ebx, 0x9
00000000000048c1         cmovne     rax, rdx
00000000000048c5         add        rsp, 0x8
00000000000048c9         pop        rbx
00000000000048ca         pop        rbp
00000000000048cb         ret
                        ; endp
00000000000048cc         align      16

                     loc_48d0:
00000000000048d0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
00000000000048d4         and        edx, 0xffffffdf
00000000000048d7         cmp        dl, 0x42
00000000000048da         jne        loc_48b0

00000000000048dc         cmp        byte [rax+2], 0x31
00000000000048e0         jne        loc_48b0

00000000000048e2         cmp        byte [rax+3], 0x38
00000000000048e6         jne        loc_48b0

00000000000048e8         cmp        byte [rax+4], 0x30
00000000000048ec         jne        loc_48b0

00000000000048ee         cmp        byte [rax+5], 0x33
00000000000048f2         jne        loc_48b0

00000000000048f4         cmp        byte [rax+6], 0x30
00000000000048f8         jne        loc_48b0

00000000000048fa         cmp        byte [rax+7], 0x0
00000000000048fe         jne        loc_48b0

0000000000004900         cmp        byte [rbp], 0x60
0000000000004904         lea        rax, qword [aLibs+20]                       ; 0x7fdc
000000000000490b         lea        rdx, qword [aLibs+24]                       ; 0x7fe0
0000000000004912         cmovne     rax, rdx
0000000000004916         add        rsp, 0x8
000000000000491a         pop        rbx
000000000000491b         pop        rbp
000000000000491c         ret
                        ; endp
000000000000491d         align      32

                     loc_4920:
0000000000004920         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000004924         and        edx, 0xffffffdf
0000000000004927         cmp        dl, 0x54
000000000000492a         jne        loc_48b0

000000000000492c         movzx      edx, byte [rax+2]
0000000000004930         and        edx, 0xffffffdf
0000000000004933         cmp        dl, 0x46
0000000000004936         jne        loc_48b0

000000000000493c         cmp        byte [rax+3], 0x2d
0000000000004940         jne        loc_48b0

0000000000004946         cmp        byte [rax+4], 0x38
000000000000494a         jne        loc_48b0

0000000000004950         cmp        byte [rax+5], 0x0
0000000000004954         jne        loc_48b0

000000000000495a         cmp        byte [rbp], 0x60
000000000000495e         lea        rax, qword [aLibs+12]                       ; 0x7fd4
0000000000004965         lea        rdx, qword [aLibs+16]                       ; 0x7fd8
000000000000496c         cmovne     rax, rdx
0000000000004970         add        rsp, 0x8
0000000000004974         pop        rbx
0000000000004975         pop        rbp
0000000000004976         ret
                        ; endp
0000000000004977         align      128                                         ; End of unwind block (FDE at 0x8ecc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000004980         push       r15                                         ; Begin of unwind block (FDE at 0x8f10), CODE XREF=sub_50c0+1165, sub_50c0+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000004982         push       r14
0000000000004984         mov        r15d, r8d
0000000000004987         push       r13
0000000000004989         push       r12
000000000000498b         mov        r14, rdi
000000000000498e         push       rbp
000000000000498f         push       rbx
0000000000004990         mov        ebx, r9d
0000000000004993         mov        r13, rsi
0000000000004996         mov        rbp, rcx
0000000000004999         and        ebx, 0x2
000000000000499c         sub        rsp, 0xb8
00000000000049a3         mov        rax, qword [rsp+0xe8+arg_0]
00000000000049ab         mov        qword [rsp+0xe8+var_D8], rdx
00000000000049b0         mov        dword [rsp+0xe8+var_E0], r8d
00000000000049b5         mov        dword [rsp+0xe8+var_70], r9d
00000000000049ba         mov        qword [rsp+0xe8+var_C8], rax
00000000000049bf         mov        rax, qword [rsp+0xe8+arg_8]
00000000000049c7         mov        qword [rsp+0xe8+var_80], rax
00000000000049cc         mov        rax, qword [rsp+0xe8+arg_10]
00000000000049d4         mov        qword [rsp+0xe8+var_88], rax
00000000000049d9         mov        rax, qword [fs:0x28]
00000000000049e2         mov        qword [rsp+0xe8+var_40], rax
00000000000049ea         xor        eax, eax
00000000000049ec         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
00000000000049f1         cmp        r15d, 0xa
00000000000049f5         mov        qword [rsp+0xe8+var_90], rax
00000000000049fa         ja         loc_5baf

0000000000004a00         lea        rcx, qword [switch_table_8040]              ; switch_table_8040
0000000000004a07         mov        edx, r15d
0000000000004a0a         movsxd     rax, dword [rcx+rdx*4]
0000000000004a0e         add        rax, rcx
0000000000004a11         jmp        rax                                         ; switch statement using table at 0x8040, with 11 cases, 0x4a13,0x55e4,0x5640,0x5695,0x56da,0x5714,0x57ba,0x57f4,0x59e8

                     loc_4a13:
0000000000004a13         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_50c0+1318
0000000000004a18         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004a1d         xor        r12d, r12d
0000000000004a20         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004a29         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004a2e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_4a33:
0000000000004a33         lea        rax, qword [aLibs+29]                       ; 0x7fe5, CODE XREF=sub_50c0+1876
0000000000004a3a         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004a43         xor        r15d, r15d
0000000000004a46         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000004a4e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_4a53:
0000000000004a53         xor        r11d, r11d                                  ; CODE XREF=sub_50c0+180, sub_50c0+1400, sub_50c0+1488, sub_50c0+1557, sub_50c0+1615, sub_50c0+1781, sub_50c0+1839, sub_50c0+2408, sub_50c0+2485
0000000000004a56         mov        rax, rbp
0000000000004a59         mov        r8d, r12d
0000000000004a5c         mov        rbp, r11
0000000000004a5f         mov        r11, rax
0000000000004a62         nop        word [rax+rax]

                     loc_4a68:
0000000000004a68         cmp        r11, rbp                                    ; CODE XREF=sub_4b70+194
0000000000004a6b         setne      r12b
0000000000004a6f         cmp        r11, 0xffffffffffffffff
0000000000004a73         jne        loc_4a82

0000000000004a75         mov        rax, qword [rsp+0xe8+var_D8]
0000000000004a7a         cmp        byte [rax+rbp], 0x0
0000000000004a7e         setne      r12b

                     loc_4a82:
0000000000004a82         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000004a85         je         loc_50e0

0000000000004a8b         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000004a90         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000004a95         lea        r9, qword [rdi+rbp]
0000000000004a99         setne      al
0000000000004a9c         and        al, byte [rsp+0xe8+var_DB]
0000000000004aa0         mov        r10d, eax
0000000000004aa3         je         loc_4b50

0000000000004aa9         mov        rax, qword [rsp+0xe8+var_D0]
0000000000004aae         test       rax, rax
0000000000004ab1         je         loc_4ee0

0000000000004ab7         cmp        r11, 0xffffffffffffffff
0000000000004abb         lea        rbx, qword [rbp+rax]
0000000000004ac0         jne        loc_4af0

0000000000004ac2         cmp        rax, 0x1
0000000000004ac6         jbe        loc_4af0

0000000000004ac8         mov        byte [rsp+0xe8+var_B0], r8b
0000000000004acd         mov        byte [rsp+0xe8+var_B8], r10b
0000000000004ad2         mov        qword [rsp+0xe8+var_C0], r9
0000000000004ad7         call       j_strlen                                    ; strlen
0000000000004adc         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000004ae2         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000004ae8         mov        r11, rax
0000000000004aeb         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_4af0:
0000000000004af0         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000004af3         mov        byte [rsp+0xe8+var_C0], r10b
0000000000004af8         ja         loc_50b0

0000000000004afe         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000004b03         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000004b08         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
0000000000004b0b         mov        qword [rsp+0xe8+var_A8], r11
0000000000004b10         mov        byte [rsp+0xe8+var_B0], r8b
0000000000004b15         mov        qword [rsp+0xe8+var_B8], r9
0000000000004b1a         call       j_memcmp                                    ; memcmp
0000000000004b1f         test       eax, eax
0000000000004b21         mov        r9, qword [rsp+0xe8+var_B8]
0000000000004b26         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000004b2c         mov        r11, qword [rsp+0xe8+var_A8]
0000000000004b31         jne        loc_50b0

0000000000004b37         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000004b3c         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000004b42         jne        loc_5ac5

0000000000004b48         nop        dword [rax+rax]

                     loc_4b50:
0000000000004b50         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_50a0+19
0000000000004b54         cmp        bl, 0x7e
0000000000004b57         ja         loc_4e78

0000000000004b5d         lea        rcx, qword [switch_table_8040+44]           ; 0x806c
0000000000004b64         movzx      edx, bl
0000000000004b67         movsxd     rax, dword [rcx+rdx*4]
0000000000004b6b         add        rax, rcx
0000000000004b6e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_4b70:
0000000000004b70         xor        r10d, r10d
0000000000004b73         cmp        r11, 0x1
0000000000004b77         setne      al
0000000000004b7a         cmp        r11, 0xffffffffffffffff
0000000000004b7e         jne        loc_4b8c

0000000000004b80         mov        rax, qword [rsp+arg_8]
0000000000004b85         cmp        byte [rax+1], 0x0
0000000000004b89         setne      al

                     loc_4b8c:
0000000000004b8c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_4b70+14
0000000000004b91         sete       dl
0000000000004b94         test       al, al
0000000000004b96         je         loc_4de8

                     loc_4b9c:
0000000000004b9c         xor        r12d, r12d                                  ; CODE XREF=sub_4de0+11
0000000000004b9f         xor        eax, eax
0000000000004ba1         nop        dword [rax]
                        ; endp

                     loc_4ba8:
0000000000004ba8         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_4d90+50, sub_4e60+119
0000000000004bad         jne        loc_4cc2

0000000000004bb3         test       dl, dl
0000000000004bb5         jne        loc_4cc2

                     loc_4bbb:
0000000000004bbb         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_4c70+87
0000000000004bc0         test       rsi, rsi
0000000000004bc3         je         loc_4bd9

0000000000004bc5         mov        edx, ebx
0000000000004bc7         shr        dl, 0x5
0000000000004bca         movzx      edx, dl
0000000000004bcd         mov        edx, dword [rsi+rdx*4]
0000000000004bd0         bt         edx, ebx
0000000000004bd3         jb         loc_4d23

                     loc_4bd9:
0000000000004bd9         test       r10b, r10b                                  ; CODE XREF=sub_4b70+83, sub_4c70+93
0000000000004bdc         jne        loc_4d23

0000000000004be2         xor        eax, 0x1
0000000000004be5         add        rbp, 0x1
0000000000004be9         and        eax, r8d

                     loc_4bec:
0000000000004bec         test       al, al                                      ; CODE XREF=sub_50c0+936
0000000000004bee         je         loc_4c10

0000000000004bf0         cmp        r13, r15
0000000000004bf3         jbe        loc_4bfa

0000000000004bf5         mov        byte [r14+r15], 0x27

                     loc_4bfa:
0000000000004bfa         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4b70+131
0000000000004bfe         cmp        r13, rax
0000000000004c01         jbe        loc_4c09

0000000000004c03         mov        byte [r14+r15+1], 0x27

                     loc_4c09:
0000000000004c09         add        r15, 0x2                                    ; CODE XREF=sub_4b70+145
0000000000004c0d         xor        r8d, r8d

                     loc_4c10:
0000000000004c10         cmp        r15, r13                                    ; CODE XREF=sub_4b70+126, sub_4c70+275, sub_50c0+869
0000000000004c13         jae        loc_4c19

0000000000004c15         mov        byte [r14+r15], bl

                     loc_4c19:
0000000000004c19         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_4b70+163
0000000000004c1e         add        r15, 0x1
0000000000004c22         mov        eax, 0x0
0000000000004c27         test       r12b, r12b
0000000000004c2a         cmove      edi, eax
0000000000004c2d         mov        byte [rsp+0xe8+var_DA], dil
0000000000004c32         jmp        loc_4a68
0000000000004c37         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_4c40:
0000000000004c40         xor        r10d, r10d
0000000000004c43         mov        eax, dword [rsp+arg_0]
0000000000004c47         cmp        eax, 0x2
0000000000004c4a         je         loc_5208

0000000000004c50         cmp        eax, 0x5
0000000000004c53         je         loc_51c8

0000000000004c59         cmp        eax, 0x2
0000000000004c5c         mov        ebx, 0x3f
0000000000004c61         sete       dl
0000000000004c64         xor        r12d, r12d
0000000000004c67         xor        eax, eax
0000000000004c69         jmp        sub_4b70+56
                        ; endp
0000000000004c6e         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_4c70:
0000000000004c70         xor        r10d, r10d
0000000000004c73         cmp        dword [rsp+arg_0], 0x2
0000000000004c78         je         loc_5180

0000000000004c7e         mov        byte [rsp+arg_74], r12b
0000000000004c83         xor        edx, edx
0000000000004c85         xor        eax, eax
0000000000004c87         mov        ebx, 0x27
0000000000004c8c         jmp        sub_4b70+56
                        ; endp
0000000000004c91         nop        dword [rax]
0000000000004c98         mov        edx, 0x9
0000000000004c9d         mov        ebx, 0x74

                     loc_4ca2:
0000000000004ca2         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_4e30+10, sub_4f20+37, sub_5060+53
0000000000004ca7         sete       al
0000000000004caa         and        al, byte [rsp+arg_7]
0000000000004cae         jne        sub_4de0+30
                        ; endp

                     loc_4cb4:
0000000000004cb4         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_4c70+114, sub_4f00+26
0000000000004cb9         jne        loc_4d20

0000000000004cbb         mov        ebx, edx
0000000000004cbd         xor        r12d, r12d
0000000000004cc0         xor        eax, eax
                        ; endp

                     loc_4cc2:
0000000000004cc2         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_4b70+61, sub_4b70+69
0000000000004cc7         jne        loc_4bbb

0000000000004ccd         jmp        loc_4bd9
0000000000004cd2         nop        word [rax+rax]
0000000000004cd8         mov        edx, 0x8
0000000000004cdd         mov        ebx, 0x62
0000000000004ce2         jmp        sub_4c70+68
0000000000004ce4         nop        dword [rax]
0000000000004ce8         cmp        dword [rsp+8], 0x2
0000000000004ced         je         sub_50c0                                    ; sub_50c0
0000000000004cf3         cmp        byte [rsp+0xd], 0x0
0000000000004cf8         je         sub_4f00+16

                     loc_4cfe:
0000000000004cfe         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_4f00+8
0000000000004d03         je         loc_4f10

0000000000004d09         cmp        qword [rsp+arg_10], 0x0
0000000000004d0f         jne        loc_50cb

0000000000004d15         mov        ebx, 0x5c
0000000000004d1a         nop        word [rax+rax]

                     loc_4d20:
0000000000004d20         xor        r12d, r12d                                  ; CODE XREF=sub_4c70+73, sub_5060+29
                        ; endp

                     loc_4d23:
0000000000004d23         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_4b70+99, sub_4b70+108
0000000000004d28         sete       dl
0000000000004d2b         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000004d30         mov        eax, edx
0000000000004d32         jne        loc_5588

0000000000004d38         mov        eax, r8d
0000000000004d3b         xor        eax, 0x1
0000000000004d3e         and        al, dl
0000000000004d40         je         loc_4d71

0000000000004d42         cmp        r13, r15
0000000000004d45         jbe        loc_4d4c

0000000000004d47         mov        byte [r14+r15], 0x27

                     loc_4d4c:
0000000000004d4c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_4c70+213
0000000000004d50         cmp        r13, rdx
0000000000004d53         jbe        loc_4d5b

0000000000004d55         mov        byte [r14+r15+1], 0x24

                     loc_4d5b:
0000000000004d5b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_4c70+227
0000000000004d5f         cmp        r13, rdx
0000000000004d62         jbe        loc_4d6a

0000000000004d64         mov        byte [r14+r15+2], 0x27

                     loc_4d6a:
0000000000004d6a         add        r15, 0x3                                    ; CODE XREF=sub_4c70+242
0000000000004d6e         mov        r8d, eax

                     loc_4d71:
0000000000004d71         cmp        r13, r15                                    ; CODE XREF=sub_4c70+208
0000000000004d74         jbe        loc_4d7b

0000000000004d76         mov        byte [r14+r15], 0x5c

                     loc_4d7b:
0000000000004d7b         add        r15, 0x1                                    ; CODE XREF=sub_4c70+260
0000000000004d7f         add        rbp, 0x1
0000000000004d83         jmp        loc_4c10
0000000000004d88         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_4d90:
0000000000004d90         cmp        byte [rsp+arg_5], 0x0
0000000000004d95         jne        loc_4f63

0000000000004d9b         xor        edx, edx
0000000000004d9d         test       byte [rsp+arg_70], 0x1
0000000000004da2         je         sub_4c70+75

0000000000004da8         add        rbp, 0x1
0000000000004dac         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000004db1         nop        dword [rax]
0000000000004db8         cmp        dword [rsp+8], 0x2
0000000000004dbd         sete       dl
0000000000004dc0         xor        eax, eax
0000000000004dc2         jmp        sub_4b70+56
0000000000004dc7         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4dd0:
0000000000004dd0         mov        edx, 0x7
0000000000004dd5         mov        ebx, 0x61
0000000000004dda         jmp        sub_4c70+68
                        ; endp
0000000000004ddf         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4de0:
0000000000004de0         cmp        dword [rsp+8], 0x2
0000000000004de5         sete       dl
                        ; endp

                     loc_4de8:
0000000000004de8         test       rbp, rbp                                    ; CODE XREF=sub_4b70+38, sub_5000+35
0000000000004deb         jne        loc_4b9c

0000000000004df1         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_5030+43
0000000000004df6         and        al, dl
0000000000004df8         je         sub_4b70+56

0000000000004dfe         mov        rbp, r11
0000000000004e01         mov        dword [rsp+arg_0], 0x2
0000000000004e09         jmp        sub_50c0+1097
                        ; endp
0000000000004e0e         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_4e10:
0000000000004e10         cmp        dword [rsp+arg_0], 0x2
0000000000004e15         sete       dl
0000000000004e18         xor        r12d, r12d
0000000000004e1b         jmp        sub_4de0+17
                        ; endp
0000000000004e1d         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_4e20:
0000000000004e20         cmp        dword [rsp+arg_0], 0x2
0000000000004e25         mov        ebx, 0x20
0000000000004e2a         sete       dl
0000000000004e2d         jmp        sub_4de0+17
                        ; endp
0000000000004e2f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_4e30:
0000000000004e30         mov        edx, 0xd
0000000000004e35         mov        ebx, 0x72
0000000000004e3a         jmp        loc_4ca2
0000000000004e3f         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4e40:
0000000000004e40         mov        edx, 0xc
0000000000004e45         mov        ebx, 0x66
0000000000004e4a         jmp        sub_4c70+68
                        ; endp
0000000000004e4f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4e50:
0000000000004e50         mov        edx, 0xb
0000000000004e55         mov        ebx, 0x76
0000000000004e5a         jmp        sub_4c70+68
                        ; endp
0000000000004e5f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4e60:
0000000000004e60         mov        edx, 0xa
0000000000004e65         mov        ebx, 0x6e
0000000000004e6a         jmp        sub_4c70+50
                        ; endp
0000000000004e6f         align      16

                     loc_4e70:
0000000000004e70         xor        r10d, r10d                                  ; CODE XREF=sub_4e60+135
0000000000004e73         nop        dword [rax+rax]

                     loc_4e78:
0000000000004e78         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
0000000000004e7e         jne        loc_5228

0000000000004e84         mov        qword [rsp+0xe8+var_B0], r11
0000000000004e89         mov        byte [rsp+0xe8+var_B8], r8b
0000000000004e8e         mov        byte [rsp+0xe8+var_C0], r10b
0000000000004e93         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000004e98         mov        rcx, qword [rax]
0000000000004e9b         movzx      edx, bl
0000000000004e9e         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000004ea4         movzx      r8d, byte [rsp+0xe8+var_B8]
0000000000004eaa         mov        r11, qword [rsp+0xe8+var_B0]
0000000000004eaf         mov        edi, 0x1
0000000000004eb4         movzx      eax, word [rcx+rdx*2]
0000000000004eb8         and        ax, 0x4000
0000000000004ebc         setne      r12b
0000000000004ec0         sete       al
0000000000004ec3         and        al, byte [rsp+0xe8+var_DB]

                     loc_4ec7:
0000000000004ec7         test       al, al                                      ; CODE XREF=sub_50c0+2221
0000000000004ec9         jne        loc_5861

0000000000004ecf         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000004ed4         sete       dl
0000000000004ed7         jmp        loc_4ba8
0000000000004edc         align      32

                     loc_4ee0:
0000000000004ee0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000004ee4         cmp        bl, 0x7e
0000000000004ee7         ja         loc_4e70

0000000000004ee9         lea        rcx, qword [switch_table_8040+552]          ; 0x8268
0000000000004ef0         movzx      edx, bl
0000000000004ef3         movsxd     rax, dword [rcx+rdx*4]
0000000000004ef7         add        rax, rcx
0000000000004efa         jmp        rax
                        ; endp
0000000000004efc         align      256


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_4f00:
0000000000004f00         xor        r10d, r10d
0000000000004f03         cmp        byte [rsp+arg_5], 0x0
0000000000004f08         jne        loc_4cfe

0000000000004f0e         nop

                     loc_4f10:
0000000000004f10         mov        edx, 0x5c                                   ; CODE XREF=sub_4c70+136, sub_4c70+147
0000000000004f15         mov        ebx, 0x5c
0000000000004f1a         jmp        loc_4cb4
0000000000004f1f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4f20:
0000000000004f20         mov        edx, 0xc
0000000000004f25         xor        r10d, r10d
0000000000004f28         mov        ebx, 0x66
0000000000004f2d         jmp        sub_4c70+68
                        ; endp
0000000000004f32         nop        word [rax+rax]
0000000000004f38         mov        edx, 0xa
0000000000004f3d         xor        r10d, r10d
0000000000004f40         mov        ebx, 0x6e
0000000000004f45         jmp        sub_4c70+50
0000000000004f4a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4f50:
0000000000004f50         mov        ebx, 0x61
0000000000004f55         jmp        sub_4c70+176
                        ; endp
0000000000004f5a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4f60:
0000000000004f60         xor        r10d, r10d
                        ; endp

                     loc_4f63:
0000000000004f63         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_4d90+5
0000000000004f68         sete       dl
0000000000004f6b         cmp        byte [rsp+arg_7], 0x0
0000000000004f70         jne        loc_5b0a

0000000000004f76         mov        eax, r8d
0000000000004f79         mov        rcx, r15
0000000000004f7c         xor        eax, 0x1
0000000000004f7f         and        al, dl
0000000000004f81         je         loc_4fb0

0000000000004f83         cmp        r13, r15
0000000000004f86         jbe        loc_4f8d

0000000000004f88         mov        byte [r14+r15], 0x27

                     loc_4f8d:
0000000000004f8d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_4f60+38
0000000000004f91         cmp        r13, rcx
0000000000004f94         jbe        loc_4f9c

0000000000004f96         mov        byte [r14+r15+1], 0x24

                     loc_4f9c:
0000000000004f9c         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_4f60+52
0000000000004fa0         cmp        r13, rcx
0000000000004fa3         ja         loc_55d9

                     loc_4fa9:
0000000000004fa9         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_50c0+1311
0000000000004fad         mov        r8d, eax

                     loc_4fb0:
0000000000004fb0         cmp        r13, rcx                                    ; CODE XREF=sub_4f60+33
0000000000004fb3         jbe        loc_4fba

0000000000004fb5         mov        byte [r14+rcx], 0x5c

                     loc_4fba:
0000000000004fba         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_4f60+83
0000000000004fbf         lea        r15, qword [rcx+1]
0000000000004fc3         je         loc_55c9

0000000000004fc9         lea        rax, qword [rbp+1]
0000000000004fcd         cmp        rax, r11
0000000000004fd0         jae        loc_4feb

0000000000004fd2         mov        rax, qword [rsp+arg_8]
0000000000004fd7         movzx      eax, byte [rax+rbp+1]
0000000000004fdc         mov        byte [rsp+arg_20], al
0000000000004fe0         sub        eax, 0x30
0000000000004fe3         cmp        al, 0x9
0000000000004fe5         jbe        loc_5819

                     loc_4feb:
0000000000004feb         mov        eax, r12d                                   ; CODE XREF=sub_4f60+112
0000000000004fee         mov        ebx, 0x30
0000000000004ff3         xor        r12d, r12d
0000000000004ff6         jmp        sub_4b70+56
                        ; endp
0000000000004ffb         align      4096


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_5000:
0000000000005000         cmp        dword [rsp+arg_0], 0x2
0000000000005005         mov        r12d, r10d
0000000000005008         sete       dl
000000000000500b         xor        r10d, r10d
000000000000500e         xor        eax, eax
0000000000005010         jmp        sub_4b70+56
                        ; endp
0000000000005015         nop        dword [rax]
0000000000005018         cmp        dword [rsp+8], 0x2
000000000000501d         sete       dl
0000000000005020         xor        r10d, r10d
0000000000005023         jmp        sub_4de0+8
0000000000005028         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5030:
0000000000005030         cmp        dword [rsp+8], 0x2
0000000000005035         sete       dl
0000000000005038         xor        r10d, r10d
000000000000503b         xor        r12d, r12d
000000000000503e         jmp        sub_4de0+17
                        ; endp
0000000000005043         nop        dword [rax+rax]
0000000000005048         cmp        dword [rsp+8], 0x2
000000000000504d         mov        r12d, r10d
0000000000005050         mov        ebx, 0x20
0000000000005055         sete       dl
0000000000005058         xor        r10d, r10d
000000000000505b         jmp        sub_4de0+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5060:
0000000000005060         mov        edx, 0xd
0000000000005065         xor        r10d, r10d
0000000000005068         mov        ebx, 0x72
000000000000506d         jmp        sub_4c70+50
                        ; endp
0000000000005072         nop        word [rax+rax]
0000000000005078         mov        ebx, 0x76
000000000000507d         jmp        sub_4c70+176
0000000000005082         nop        word [rax+rax]
0000000000005088         mov        edx, 0x9
000000000000508d         xor        r10d, r10d
0000000000005090         mov        ebx, 0x74
0000000000005095         jmp        sub_4c70+50
000000000000509a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_50a0:
00000000000050a0         mov        ebx, 0x62
00000000000050a5         jmp        sub_4c70+176
                        ; endp
00000000000050aa         nop        word [rax+rax]

                     loc_50b0:
00000000000050b0         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
00000000000050b3         jmp        loc_4b50
00000000000050b8         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_50c0:
00000000000050c0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_4c70+125
00000000000050c5         jne        sub_50c0+2416
                        ; endp

                     loc_50cb:
00000000000050cb         add        rbp, 0x1                                    ; CODE XREF=sub_4c70+159
00000000000050cf         mov        eax, r8d
00000000000050d2         xor        r12d, r12d
00000000000050d5         mov        ebx, 0x5c
00000000000050da         jmp        sub_4b70+124
                        ; endp
00000000000050df         align      32

                     loc_50e0:
00000000000050e0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
00000000000050e5         movzx      ebx, byte [rsp+0xe8+var_D9]
00000000000050ea         mov        r12d, r8d
00000000000050ed         mov        rbp, r11
00000000000050f0         sete       dl
00000000000050f3         mov        eax, ebx
00000000000050f5         test       r15, r15
00000000000050f8         sete       cl
00000000000050fb         and        eax, edx
00000000000050fd         and        al, cl
00000000000050ff         jne        loc_5b66

0000000000005105         mov        eax, ebx
0000000000005107         xor        eax, 0x1
000000000000510a         and        dl, al
000000000000510c         je         loc_5a7c

0000000000005112         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000005117         je         loc_5a7a

000000000000511d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000005122         jne        loc_5b1d

0000000000005128         test       r13, r13
000000000000512b         sete       al
000000000000512e         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000005134         setne      dl
0000000000005137         and        al, dl
0000000000005139         je         loc_5b5c

000000000000513f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_5144:
0000000000005144         lea        rbx, qword [aLibs+29]                       ; 0x7fe5, CODE XREF=sub_50c0+2781
000000000000514b         mov        byte [r14], 0x27
000000000000514f         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000005157         mov        r15d, 0x1
000000000000515d         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000005166         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000516b         mov        qword [rsp+0xe8+var_A0], rbx
0000000000005170         mov        byte [rsp+0xe8+var_6C], al
0000000000005174         jmp        loc_4a53
0000000000005179         align      128

                     loc_5180:
0000000000005180         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_4c70+8
0000000000005185         jne        sub_50c0+2416

000000000000518b         test       r13, r13
000000000000518e         je         loc_5590

0000000000005194         xor        edx, edx
0000000000005196         cmp        qword [rsp+arg_48], 0x0
000000000000519c         jne        loc_5590

                     loc_51a2:
00000000000051a2         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_50c0+1284, sub_50c0+2794
00000000000051a7         add        r15, 0x3
00000000000051ab         xor        eax, eax
00000000000051ad         mov        byte [rsp+arg_74], r12b
00000000000051b2         xor        r8d, r8d
00000000000051b5         mov        r13, rdx
00000000000051b8         mov        ebx, 0x27
00000000000051bd         jmp        sub_4b70+105
                        ; endp
00000000000051c2         align      8

                     loc_51c8:
00000000000051c8         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_4c40+19
00000000000051cd         je         loc_51f0

00000000000051cf         lea        rcx, qword [rbp+2]
00000000000051d3         cmp        rcx, r11
00000000000051d6         jae        loc_51f0

00000000000051d8         mov        rax, qword [rsp+arg_8]
00000000000051dd         cmp        byte [rax+rbp+1], 0x3f
00000000000051e2         je         loc_5972

00000000000051e8         nop        dword [rax+rax]

                     loc_51f0:
00000000000051f0         xor        edx, edx                                    ; CODE XREF=sub_50c0+269, sub_50c0+278, sub_50c0+2233, sub_50c0+2253
00000000000051f2         xor        r12d, r12d
00000000000051f5         xor        eax, eax
00000000000051f7         mov        ebx, 0x3f
00000000000051fc         jmp        sub_4b70+56
                        ; endp
0000000000005201         align      8

                     loc_5208:
0000000000005208         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_4c40+10
000000000000520d         jne        loc_5a30

0000000000005213         xor        r12d, r12d
0000000000005216         xor        eax, eax
0000000000005218         mov        ebx, 0x3f
000000000000521d         jmp        sub_4b70+105
                        ; endp
0000000000005222         align      8

                     loc_5228:
0000000000005228         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_4e60+30
0000000000005230         cmp        r11, 0xffffffffffffffff
0000000000005234         mov        qword [rsp+0xe8+var_48], 0x0
0000000000005240         mov        qword [rsp+0xe8+var_C0], rax
0000000000005245         jne        loc_5274

0000000000005247         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
000000000000524c         mov        byte [rsp+0xe8+var_A8], r8b
0000000000005251         mov        byte [rsp+0xe8+var_B0], r10b
0000000000005256         mov        qword [rsp+0xe8+var_B8], r9
000000000000525b         call       j_strlen                                    ; strlen
0000000000005260         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000005266         movzx      r10d, byte [rsp+0xe8+var_B0]
000000000000526c         mov        r11, rax
000000000000526f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_5274:
0000000000005274         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_50c0+389
000000000000527c         xor        ecx, ecx
000000000000527e         mov        byte [rsp+0xe8+var_6A], bl
0000000000005282         mov        byte [rsp+0xe8+var_6B], r8b
0000000000005287         mov        rbx, rcx
000000000000528a         mov        qword [rsp+0xe8+var_60], r9
0000000000005292         mov        qword [rsp+0xe8+var_B0], rax
0000000000005297         mov        byte [rsp+0xe8+var_69], r10b
000000000000529c         mov        qword [rsp+0xe8+var_68], r15
00000000000052a4         mov        qword [rsp+0xe8+var_A8], r14
00000000000052a9         mov        qword [rsp+0xe8+var_78], r13
00000000000052ae         mov        qword [rsp+0xe8+var_B8], r11

                     loc_52b3:
00000000000052b3         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_50c0+623
00000000000052b8         lea        r14, qword [rbp+rbx]
00000000000052bd         mov        rdx, qword [rsp+0xe8+var_B8]
00000000000052c2         mov        rcx, qword [rsp+0xe8+var_C0]
00000000000052c7         mov        rdi, qword [rsp+0xe8+var_B0]
00000000000052cc         lea        r13, qword [rax+r14]
00000000000052d0         sub        rdx, r14
00000000000052d3         mov        rsi, r13
00000000000052d6         call       rpl_mbrtowc                                 ; rpl_mbrtowc
00000000000052db         test       rax, rax
00000000000052de         mov        r15, rax
00000000000052e1         je         loc_5331

00000000000052e3         cmp        rax, 0xffffffffffffffff
00000000000052e7         je         loc_5905

00000000000052ed         cmp        rax, 0xfffffffffffffffe
00000000000052f1         je         loc_5891

00000000000052f7         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000052fc         sete       al
00000000000052ff         and        al, byte [rsp+0xe8+var_D9]
0000000000005303         jne        loc_54a0

                     loc_5309:
0000000000005309         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_50c0+996, sub_50c0+1031
0000000000005310         call       j_iswprint                                  ; iswprint
0000000000005315         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
000000000000531a         test       eax, eax
000000000000531c         mov        eax, 0x0
0000000000005321         cmove      r12d, eax
0000000000005325         add        rbx, r15
0000000000005328         call       j_mbsinit                                   ; mbsinit
000000000000532d         test       eax, eax
000000000000532f         je         loc_52b3

                     loc_5331:
0000000000005331         mov        edx, r12d                                   ; CODE XREF=sub_50c0+545
0000000000005334         mov        rdi, rbx
0000000000005337         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000533d         xor        edx, 0x1
0000000000005340         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000005345         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000534b         and        dl, byte [rsp+0xe8+var_DB]
000000000000534f         mov        r15, qword [rsp+0xe8+var_68]
0000000000005357         mov        r14, qword [rsp+0xe8+var_A8]
000000000000535c         mov        r13, qword [rsp+0xe8+var_78]
0000000000005361         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_5366:
0000000000005366         cmp        rdi, 0x1                                    ; CODE XREF=sub_50c0+2112, sub_50c0+2168
000000000000536a         jbe        loc_596b

                     loc_5370:
0000000000005370         mov        rcx, rdi                                    ; CODE XREF=sub_50c0+1961
0000000000005373         xor        esi, esi
0000000000005375         movzx      r9d, byte [rsp+0xe8+var_D9]
000000000000537b         add        rcx, rbp
000000000000537e         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000005383         jmp        loc_543e
0000000000005388         align      16

                     loc_5390:
0000000000005390         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_50c0+896
0000000000005395         sete       al
0000000000005398         test       r9b, r9b
000000000000539b         jne        loc_5850

00000000000053a1         mov        esi, r8d
00000000000053a4         xor        esi, 0x1
00000000000053a7         and        al, sil
00000000000053aa         je         loc_53db

00000000000053ac         cmp        r13, r15
00000000000053af         jbe        loc_53b6

00000000000053b1         mov        byte [r14+r15], 0x27

                     loc_53b6:
00000000000053b6         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_50c0+751
00000000000053ba         cmp        r13, rsi
00000000000053bd         jbe        loc_53c5

00000000000053bf         mov        byte [r14+r15+1], 0x24

                     loc_53c5:
00000000000053c5         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_50c0+765
00000000000053c9         cmp        r13, rsi
00000000000053cc         jbe        loc_53d4

00000000000053ce         mov        byte [r14+r15+2], 0x27

                     loc_53d4:
00000000000053d4         add        r15, 0x3                                    ; CODE XREF=sub_50c0+780
00000000000053d8         mov        r8d, eax

                     loc_53db:
00000000000053db         cmp        r13, r15                                    ; CODE XREF=sub_50c0+746
00000000000053de         jbe        loc_53e5

00000000000053e0         mov        byte [r14+r15], 0x5c

                     loc_53e5:
00000000000053e5         lea        rax, qword [r15+1]                          ; CODE XREF=sub_50c0+798
00000000000053e9         cmp        r13, rax
00000000000053ec         jbe        loc_53fb

00000000000053ee         mov        eax, ebx
00000000000053f0         shr        al, 0x6
00000000000053f3         add        eax, 0x30
00000000000053f6         mov        byte [r14+r15+1], al

                     loc_53fb:
00000000000053fb         lea        rax, qword [r15+2]                          ; CODE XREF=sub_50c0+812
00000000000053ff         cmp        r13, rax
0000000000005402         jbe        loc_5414

0000000000005404         mov        eax, ebx
0000000000005406         shr        al, 0x3
0000000000005409         and        eax, 0x7
000000000000540c         add        eax, 0x30
000000000000540f         mov        byte [r14+r15+2], al

                     loc_5414:
0000000000005414         and        ebx, 0x7                                    ; CODE XREF=sub_50c0+834
0000000000005417         add        rbp, 0x1
000000000000541b         add        r15, 0x3
000000000000541f         add        ebx, 0x30
0000000000005422         cmp        rbp, rcx
0000000000005425         jae        loc_4c10

000000000000542b         mov        esi, edx

                     loc_542d:
000000000000542d         cmp        r13, r15                                    ; CODE XREF=sub_50c0+985, sub_50c0+1969
0000000000005430         jbe        loc_5436

0000000000005432         mov        byte [r14+r15], bl

                     loc_5436:
0000000000005436         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_50c0+880
000000000000543a         add        r15, 0x1

                     loc_543e:
000000000000543e         test       dl, dl                                      ; CODE XREF=sub_50c0+707
0000000000005440         jne        loc_5390

0000000000005446         mov        eax, esi
0000000000005448         xor        eax, 0x1
000000000000544b         and        eax, r8d
000000000000544e         test       r10b, r10b
0000000000005451         je         loc_5461

0000000000005453         cmp        r13, r15
0000000000005456         jbe        loc_545d

0000000000005458         mov        byte [r14+r15], 0x5c

                     loc_545d:
000000000000545d         add        r15, 0x1                                    ; CODE XREF=sub_50c0+918

                     loc_5461:
0000000000005461         add        rbp, 0x1                                    ; CODE XREF=sub_50c0+913
0000000000005465         cmp        rbp, rcx
0000000000005468         jae        loc_4bec

000000000000546e         test       al, al
0000000000005470         je         loc_586e

0000000000005476         cmp        r13, r15
0000000000005479         jbe        loc_5480

000000000000547b         mov        byte [r14+r15], 0x27

                     loc_5480:
0000000000005480         lea        rax, qword [r15+1]                          ; CODE XREF=sub_50c0+953
0000000000005484         cmp        r13, rax
0000000000005487         jbe        loc_548f

0000000000005489         mov        byte [r14+r15+1], 0x27

                     loc_548f:
000000000000548f         add        r15, 0x2                                    ; CODE XREF=sub_50c0+967
0000000000005493         xor        r10d, r10d
0000000000005496         xor        r8d, r8d
0000000000005499         jmp        loc_542d
000000000000549b         align      32

                     loc_54a0:
00000000000054a0         cmp        r15, 0x1                                    ; CODE XREF=sub_50c0+579
00000000000054a4         je         loc_5309

00000000000054aa         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000054af         lea        rcx, qword [rdi+r15]
00000000000054b3         lea        rdx, qword [rdi+r14+1]
00000000000054b8         lea        r8, qword [rcx+r14]
00000000000054bc         jmp        loc_54cd
00000000000054be         align      64

                     loc_54c0:
00000000000054c0         add        rdx, 0x1                                    ; CODE XREF=sub_50c0+1046, sub_50c0+1072
00000000000054c4         cmp        r8, rdx
00000000000054c7         je         loc_5309

                     loc_54cd:
00000000000054cd         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_50c0+1020
00000000000054d0         sub        ecx, 0x5b
00000000000054d3         cmp        cl, 0x21
00000000000054d6         ja         loc_54c0

00000000000054d8         mov        esi, 0x1
00000000000054dd         shl        rsi, cl
00000000000054e0         mov        rcx, rsi
00000000000054e3         movabs     rsi, 0x20000002b
00000000000054ed         test       rcx, rsi
00000000000054f0         je         loc_54c0

00000000000054f2         mov        r14, qword [rsp+0xe8+var_A8]
00000000000054f7         mov        r13, qword [rsp+0xe8+var_78]
00000000000054fc         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000005501         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_5509:
0000000000005509         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_50c0+1227, sub_50c0+1948, sub_50c0+2585, sub_50c0+2734
000000000000550e         je         loc_5520

0000000000005510         test       al, al
0000000000005512         mov        eax, 0x4
0000000000005517         cmove      eax, dword [rsp+0xe8+var_E0]
000000000000551c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_5520:
0000000000005520         sub        rsp, 0x8                                    ; CODE XREF=sub_50c0+1102
0000000000005524         mov        rcx, rbp
0000000000005527         mov        rsi, r13
000000000000552a         push       qword [rsp+0xf0+var_88]
000000000000552e         push       qword [rsp+0xf8+var_80]
0000000000005532         mov        rdi, r14
0000000000005535         push       0x0
0000000000005537         mov        r9d, dword [rsp+0x108+var_70]
000000000000553f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000005544         mov        rdx, qword [rsp+0x108+var_D8]
0000000000005549         and        r9d, 0xfffffffd
000000000000554d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000005552         add        rsp, 0x20
0000000000005556         mov        r15, rax

                     loc_5559:
0000000000005559         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_50c0+2549, sub_50c0+2560, sub_50c0+2711
0000000000005561         xor        rbx, qword [fs:0x28]
000000000000556a         mov        rax, r15
000000000000556d         jne        loc_5b73

0000000000005573         add        rsp, 0xb8
000000000000557a         pop        rbx
000000000000557b         pop        rbp
000000000000557c         pop        r12
000000000000557e         pop        r13
0000000000005580         pop        r14
0000000000005582         pop        r15
0000000000005584         ret
                        ; endp
0000000000005585         align      8

                     loc_5588:
0000000000005588         mov        rbp, r11                                    ; CODE XREF=sub_4c70+194
000000000000558b         jmp        loc_5509

                     loc_5590:
0000000000005590         cmp        r13, r15                                    ; CODE XREF=sub_50c0+206, sub_50c0+220
0000000000005593         jbe        loc_559a

0000000000005595         mov        byte [r14+r15], 0x27

                     loc_559a:
000000000000559a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_50c0+1235
000000000000559e         cmp        r13, rax
00000000000055a1         jbe        loc_55a9

00000000000055a3         mov        byte [r14+r15+1], 0x5c

                     loc_55a9:
00000000000055a9         lea        rax, qword [r15+2]                          ; CODE XREF=sub_50c0+1249
00000000000055ad         cmp        r13, rax
00000000000055b0         jbe        loc_5ba2

00000000000055b6         mov        rdx, r13
00000000000055b9         mov        byte [r14+r15+2], 0x27
00000000000055bf         mov        r13, qword [rsp+arg_48]
00000000000055c4         jmp        loc_51a2

                     loc_55c9:
00000000000055c9         mov        eax, r12d                                   ; CODE XREF=sub_4f60+99
00000000000055cc         mov        ebx, 0x30
00000000000055d1         xor        r12d, r12d
00000000000055d4         jmp        sub_4b70+105
                        ; endp

                     loc_55d9:
00000000000055d9         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_4f60+67
00000000000055df         jmp        loc_4fa9

                     loc_55e4:
00000000000055e4         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
00000000000055e6         jne        loc_4a13

00000000000055ec         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_55f1:
00000000000055f1         test       r13, r13                                    ; CODE XREF=sub_50c0+2749
00000000000055f4         jne        loc_5b8a

00000000000055fa         lea        rax, qword [aLibs+29]                       ; 0x7fe5
0000000000005601         mov        qword [rsp+0xe8+var_98], 0x0
000000000000560a         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000560f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000005614         xor        r12d, r12d
0000000000005617         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000561c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000005625         mov        qword [rsp+0xe8+var_A0], rax
000000000000562a         mov        r15d, 0x1
0000000000005630         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000005638         jmp        loc_4a53
000000000000563d         align      64

                     loc_5640:
0000000000005640         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000005642         jne        loc_5a3d

0000000000005648         test       r13, r13
000000000000564b         je         loc_5876

0000000000005651         mov        byte [r14], 0x22
0000000000005655         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000565a         xor        r12d, r12d
000000000000565d         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000005662         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_566b:
000000000000566b         lea        rax, qword [aLibs+27]                       ; 0x7fe3, CODE XREF=sub_50c0+1996
0000000000005672         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000005677         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000567c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000005685         mov        r15d, 0x1
000000000000568b         mov        qword [rsp+0xe8+var_A0], rax
0000000000005690         jmp        loc_4a53

                     loc_5695:
0000000000005695         lea        rax, qword [aLibs+27]                       ; case 6, 0x7fe3, CODE XREF=quotearg_buffer_restyled+145
000000000000569c         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000056a1         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000056a6         xor        r12d, r12d
00000000000056a9         mov        qword [rsp+0xe8+var_98], 0x0
00000000000056b2         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000056b7         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000056bc         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000056c5         xor        r15d, r15d
00000000000056c8         mov        qword [rsp+0xe8+var_A0], rax
00000000000056cd         mov        dword [rsp+0xe8+var_E0], 0x5
00000000000056d5         jmp        loc_4a53

                     loc_56da:
00000000000056da         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
00000000000056df         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000056e4         xor        r12d, r12d
00000000000056e7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000056f0         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000056f5         xor        r15d, r15d
00000000000056f8         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000056fd         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000005706         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000570f         jmp        loc_4a53

                     loc_5714:
0000000000005714         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000005719         je         loc_5771

000000000000571b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x7fe7
0000000000005722         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005724         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005729         call       j_dcgettext                                 ; dcgettext
000000000000572e         mov        rcx, rax
0000000000005731         mov        qword [rsp+0xe8+var_80], rax
0000000000005736         lea        rax, qword [aLibs+31]                       ; 0x7fe7
000000000000573d         cmp        rcx, rax
0000000000005740         je         loc_5ade

                     loc_5746:
0000000000005746         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x7fe5, CODE XREF=sub_50c0+2607
000000000000574d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000574f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005754         call       j_dcgettext                                 ; dcgettext
0000000000005759         mov        rcx, rax
000000000000575c         mov        qword [rsp+0xe8+var_88], rax
0000000000005761         lea        rax, qword [aLibs+29]                       ; 0x7fe5
0000000000005768         cmp        rcx, rax
000000000000576b         je         loc_5af4

                     loc_5771:
0000000000005771         xor        r15d, r15d                                  ; CODE XREF=sub_50c0+1625, sub_50c0+2629
0000000000005774         test       ebx, ebx
0000000000005776         je         loc_593d

                     loc_577c:
000000000000577c         test       ebx, ebx                                    ; CODE XREF=sub_50c0+2183, sub_50c0+2214
000000000000577e         mov        rbx, qword [rsp+0xe8+var_88]
0000000000005783         setne      byte [rsp+0xe8+var_D9]
0000000000005788         xor        r12d, r12d
000000000000578b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
000000000000578e         call       j_strlen                                    ; strlen
0000000000005793         mov        qword [rsp+0xe8+var_A0], rbx
0000000000005798         mov        qword [rsp+0xe8+var_D0], rax
000000000000579d         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000057a2         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000057a7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000057b0         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000057b5         jmp        loc_4a53

                     loc_57ba:
00000000000057ba         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
00000000000057bf         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000057c4         xor        r12d, r12d
00000000000057c7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000057d0         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000057d5         xor        r15d, r15d
00000000000057d8         mov        byte [rsp+0xe8+var_DB], 0x0
00000000000057dd         mov        qword [rsp+0xe8+var_D0], 0x0
00000000000057e6         mov        qword [rsp+0xe8+var_A0], 0x0
00000000000057ef         jmp        loc_4a53

                     loc_57f4:
00000000000057f4         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
00000000000057f9         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000057fe         xor        r12d, r12d
0000000000005801         mov        qword [rsp+0xe8+var_98], 0x0
000000000000580a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000580f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000005814         jmp        loc_4a33

                     loc_5819:
0000000000005819         cmp        r13, r15                                    ; CODE XREF=sub_4f60+133
000000000000581c         jbe        loc_5823

000000000000581e         mov        byte [r14+r15], 0x30

                     loc_5823:
0000000000005823         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_50c0+1884
0000000000005827         cmp        r13, rax
000000000000582a         jbe        loc_5832

000000000000582c         mov        byte [r14+rcx+2], 0x30

                     loc_5832:
0000000000005832         mov        eax, r12d                                   ; CODE XREF=sub_50c0+1898
0000000000005835         lea        r15, qword [rcx+3]
0000000000005839         xor        r12d, r12d
000000000000583c         mov        ebx, 0x30
0000000000005841         jmp        sub_4b70+56
                        ; endp
0000000000005846         align      16

                     loc_5850:
0000000000005850         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_50c0+731
0000000000005855         mov        rbp, r11
0000000000005858         mov        byte [rsp+0xe8+var_DB], bl
000000000000585c         jmp        loc_5509

                     loc_5861:
0000000000005861         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_4e60+105
0000000000005866         xor        r12d, r12d
0000000000005869         jmp        loc_5370

                     loc_586e:
000000000000586e         xor        r10d, r10d                                  ; CODE XREF=sub_50c0+944
0000000000005871         jmp        loc_542d

                     loc_5876:
0000000000005876         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_50c0+1419
000000000000587f         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000005884         xor        r12d, r12d
0000000000005887         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000588c         jmp        loc_566b

                     loc_5891:
0000000000005891         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_50c0+561
0000000000005896         mov        rsi, r14
0000000000005899         mov        rcx, r13
000000000000589c         mov        rax, rbx
000000000000589f         mov        rdi, rbx
00000000000058a2         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000058a8         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000058ad         mov        r9, qword [rsp+0xe8+var_60]
00000000000058b5         cmp        rsi, r11
00000000000058b8         movzx      r10d, byte [rsp+0xe8+var_69]
00000000000058be         mov        r15, qword [rsp+0xe8+var_68]
00000000000058c6         mov        r14, qword [rsp+0xe8+var_A8]
00000000000058cb         mov        r13, qword [rsp+0xe8+var_78]
00000000000058d0         jae        loc_58f8

00000000000058d2         cmp        byte [rcx], 0x0
00000000000058d5         jne        loc_58e7

00000000000058d7         jmp        loc_58f8
00000000000058d9         align      32

                     loc_58e0:
00000000000058e0         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_50c0+2099
00000000000058e5         je         loc_58f5

                     loc_58e7:
00000000000058e7         add        rax, 0x1                                    ; CODE XREF=sub_50c0+2069
00000000000058eb         lea        rdx, qword [rbp+rax]
00000000000058f0         cmp        r11, rdx
00000000000058f3         ja         loc_58e0

                     loc_58f5:
00000000000058f5         mov        rdi, rax                                    ; CODE XREF=sub_50c0+2085

                     loc_58f8:
00000000000058f8         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_50c0+2064, sub_50c0+2071
00000000000058fd         xor        r12d, r12d
0000000000005900         jmp        loc_5366

                     loc_5905:
0000000000005905         mov        rdi, rbx                                    ; CODE XREF=sub_50c0+551
0000000000005908         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000590e         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000005913         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000005919         mov        r15, qword [rsp+0xe8+var_68]
0000000000005921         xor        r12d, r12d
0000000000005924         mov        r14, qword [rsp+0xe8+var_A8]
0000000000005929         mov        r13, qword [rsp+0xe8+var_78]
000000000000592e         mov        r11, qword [rsp+0xe8+var_B8]
0000000000005933         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000005938         jmp        loc_5366

                     loc_593d:
000000000000593d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_50c0+1718
0000000000005942         movzx      eax, byte [rdx]
0000000000005945         test       al, al
0000000000005947         je         loc_577c

000000000000594d         nop        dword [rax]

                     loc_5950:
0000000000005950         cmp        r13, r15                                    ; CODE XREF=sub_50c0+2212
0000000000005953         jbe        loc_5959

0000000000005955         mov        byte [r14+r15], al

                     loc_5959:
0000000000005959         add        r15, 0x1                                    ; CODE XREF=sub_50c0+2195
000000000000595d         movzx      eax, byte [rdx+r15]
0000000000005962         test       al, al
0000000000005964         jne        loc_5950

0000000000005966         jmp        loc_577c

                     loc_596b:
000000000000596b         mov        eax, edx                                    ; CODE XREF=sub_50c0+682
000000000000596d         jmp        loc_4ec7

                     loc_5972:
0000000000005972         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_50c0+290
0000000000005976         cmp        bl, 0x3e
0000000000005979         ja         loc_51f0

000000000000597f         movabs     rax, 0x7000a38200000000
0000000000005989         bt         rax, rbx
000000000000598d         jae        loc_51f0

0000000000005993         cmp        byte [rsp+arg_7], 0x0
0000000000005998         jne        loc_5b82

000000000000599e         cmp        r13, r15
00000000000059a1         jbe        loc_59a8

00000000000059a3         mov        byte [r14+r15], 0x3f

                     loc_59a8:
00000000000059a8         lea        rax, qword [r15+1]                          ; CODE XREF=sub_50c0+2273
00000000000059ac         cmp        r13, rax
00000000000059af         jbe        loc_59b7

00000000000059b1         mov        byte [r14+r15+1], 0x22

                     loc_59b7:
00000000000059b7         lea        rax, qword [r15+2]                          ; CODE XREF=sub_50c0+2287
00000000000059bb         cmp        r13, rax
00000000000059be         jbe        loc_59c6

00000000000059c0         mov        byte [r14+r15+2], 0x22

                     loc_59c6:
00000000000059c6         lea        rax, qword [r15+3]                          ; CODE XREF=sub_50c0+2302
00000000000059ca         cmp        r13, rax
00000000000059cd         jbe        loc_59d5

00000000000059cf         mov        byte [r14+r15+3], 0x3f

                     loc_59d5:
00000000000059d5         add        r15, 0x4                                    ; CODE XREF=sub_50c0+2317
00000000000059d9         xor        edx, edx
00000000000059db         xor        r12d, r12d
00000000000059de         xor        eax, eax
00000000000059e0         mov        rbp, rcx
00000000000059e3         jmp        sub_4b70+56
                        ; endp

                     loc_59e8:
00000000000059e8         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
00000000000059ea         je         loc_5b78

00000000000059f0         lea        rax, qword [aLibs+29]                       ; 0x7fe5
00000000000059f7         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000059fc         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000005a01         xor        r12d, r12d
0000000000005a04         mov        qword [rsp+0xe8+var_98], 0x0
0000000000005a0d         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000005a12         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000005a17         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000005a20         xor        r15d, r15d
0000000000005a23         mov        qword [rsp+0xe8+var_A0], rax
0000000000005a28         jmp        loc_4a53
0000000000005a2d         align      16

                     loc_5a30:
0000000000005a30         mov        rbp, r11                                    ; CODE XREF=sub_50c0+333
0000000000005a33         movzx      eax, byte [rsp+arg_7]
0000000000005a38         jmp        sub_50c0+1097
                        ; endp

                     loc_5a3d:
0000000000005a3d         lea        rax, qword [aLibs+27]                       ; 0x7fe3, CODE XREF=sub_50c0+1410
0000000000005a44         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000005a49         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000005a4e         xor        r12d, r12d
0000000000005a51         mov        qword [rsp+0xe8+var_98], 0x0
0000000000005a5a         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000005a5f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000005a64         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000005a6d         xor        r15d, r15d
0000000000005a70         mov        qword [rsp+0xe8+var_A0], rax
0000000000005a75         jmp        loc_4a53

                     loc_5a7a:
0000000000005a7a         mov        eax, edx                                    ; CODE XREF=sub_50c0+87

                     loc_5a7c:
0000000000005a7c         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_50c0+76, sub_50c0+2721
0000000000005a81         test       rbx, rbx
0000000000005a84         je         loc_5ab2

0000000000005a86         test       al, al
0000000000005a88         je         loc_5ab2

0000000000005a8a         movzx      ecx, byte [rbx]
0000000000005a8d         mov        rax, rbx
0000000000005a90         test       cl, cl
0000000000005a92         je         loc_5ab2

0000000000005a94         mov        rdx, r15
0000000000005a97         sub        rax, r15

                     loc_5a9a:
0000000000005a9a         cmp        r13, rdx                                    ; CODE XREF=sub_50c0+2541
0000000000005a9d         jbe        loc_5aa3

0000000000005a9f         mov        byte [r14+rdx], cl

                     loc_5aa3:
0000000000005aa3         add        rdx, 0x1                                    ; CODE XREF=sub_50c0+2525
0000000000005aa7         movzx      ecx, byte [rax+rdx]
0000000000005aab         test       cl, cl
0000000000005aad         jne        loc_5a9a

0000000000005aaf         mov        r15, rdx

                     loc_5ab2:
0000000000005ab2         cmp        r13, r15                                    ; CODE XREF=sub_50c0+2500, sub_50c0+2504, sub_50c0+2514
0000000000005ab5         jbe        loc_5559

0000000000005abb         mov        byte [r14+r15], 0x0
0000000000005ac0         jmp        loc_5559

                     loc_5ac5:
0000000000005ac5         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
0000000000005aca         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000005acf         mov        rbp, r11
0000000000005ad2         sete       al
0000000000005ad5         mov        byte [rsp+0xe8+var_DB], bl
0000000000005ad9         jmp        loc_5509

                     loc_5ade:
0000000000005ade         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_50c0+1664
0000000000005ae2         mov        rdi, rcx
0000000000005ae5         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000005aea         mov        qword [rsp+0xe8+var_80], rax
0000000000005aef         jmp        loc_5746

                     loc_5af4:
0000000000005af4         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_50c0+1707
0000000000005af8         mov        rdi, rcx
0000000000005afb         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000005b00         mov        qword [rsp+0xe8+var_88], rax
0000000000005b05         jmp        loc_5771

                     loc_5b0a:
0000000000005b0a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_4f60+16
0000000000005b0f         mov        rbp, r11
0000000000005b12         mov        eax, edx
0000000000005b14         mov        byte [rsp+arg_5], bl
0000000000005b18         jmp        sub_50c0+1097
                        ; endp

                     loc_5b1d:
0000000000005b1d         sub        rsp, 0x8                                    ; CODE XREF=sub_50c0+98
0000000000005b21         mov        r8d, 0x5
0000000000005b27         mov        rcx, r11
0000000000005b2a         push       qword [rsp+0xf0+var_88]
0000000000005b2e         push       qword [rsp+0xf8+var_80]
0000000000005b32         mov        rdi, r14
0000000000005b35         push       qword [rsp+0x100+var_C8]
0000000000005b39         mov        r9d, dword [rsp+0x108+var_70]
0000000000005b41         mov        rdx, qword [rsp+0x108+var_D8]
0000000000005b46         mov        rsi, qword [rsp+0x108+var_98]
0000000000005b4b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000005b50         add        rsp, 0x20
0000000000005b54         mov        r15, rax
0000000000005b57         jmp        loc_5559

                     loc_5b5c:
0000000000005b5c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_50c0+121
0000000000005b61         jmp        loc_5a7c

                     loc_5b66:
0000000000005b66         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_50c0+63
0000000000005b6e         jmp        loc_5509

                     loc_5b73:
0000000000005b73         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_50c0+1197
                        ; endp

                     loc_5b78:
0000000000005b78         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_50c0+2346
0000000000005b7d         jmp        loc_55f1

                     loc_5b82:
0000000000005b82         mov        rbp, r11                                    ; CODE XREF=sub_50c0+2264
0000000000005b85         jmp        sub_50c0+1120
                        ; endp

                     loc_5b8a:
0000000000005b8a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_50c0+1332
0000000000005b8f         xor        eax, eax
0000000000005b91         xor        r12d, r12d
0000000000005b94         mov        qword [rsp+0xe8+var_98], 0x0
0000000000005b9d         jmp        loc_5144

                     loc_5ba2:
0000000000005ba2         mov        rdx, r13                                    ; CODE XREF=sub_50c0+1264
0000000000005ba5         mov        r13, qword [rsp+arg_48]
0000000000005baa         jmp        loc_51a2

                     loc_5baf:
0000000000005baf         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000005bb4         align      64                                          ; End of unwind block (FDE at 0x8f10)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000005bc0         push       r15                                         ; Begin of unwind block (FDE at 0x8f88), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000005bc2         push       r14
0000000000005bc4         movsxd     r15, edi
0000000000005bc7         push       r13
0000000000005bc9         push       r12
0000000000005bcb         mov        r14, rdx
0000000000005bce         push       rbp
0000000000005bcf         push       rbx
0000000000005bd0         mov        rbp, rcx
0000000000005bd3         sub        rsp, 0x28
0000000000005bd7         mov        qword [rsp+0x58+var_50], rsi
0000000000005bdc         call       j___errno_location                          ; __errno_location
0000000000005be1         mov        r13, rax
0000000000005be4         mov        eax, dword [rax]
0000000000005be6         test       r15d, r15d
0000000000005be9         mov        rbx, qword [slotvec]                        ; slotvec
0000000000005bf0         mov        dword [rsp+0x58+var_40], eax
0000000000005bf4         js         loc_5d61

0000000000005bfa         cmp        dword [nslots], r15d                        ; nslots
0000000000005c01         jg         loc_5c65

0000000000005c03         cmp        r15d, 0x7fffffff
0000000000005c0a         je         loc_5d66

0000000000005c10         lea        r12d, dword [r15+1]
0000000000005c14         lea        rax, qword [slotvec0]                       ; slotvec0
0000000000005c1b         movsxd     rsi, r12d
0000000000005c1e         shl        rsi, 0x4
0000000000005c22         cmp        rbx, rax
0000000000005c25         je         loc_5d40

0000000000005c2b         mov        rdi, rbx                                    ; argument #1 for method xrealloc
0000000000005c2e         call       xrealloc                                    ; xrealloc
0000000000005c33         mov        rbx, rax
0000000000005c36         mov        qword [slotvec], rax                        ; slotvec

                     loc_5c3d:
0000000000005c3d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000005c44         mov        edx, r12d
0000000000005c47         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000005c49         sub        edx, edi
0000000000005c4b         shl        rdi, 0x4
0000000000005c4f         movsxd     rdx, edx
0000000000005c52         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000005c55         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000005c59         call       j_memset                                    ; memset
0000000000005c5e         mov        dword [nslots], r12d                        ; nslots

                     loc_5c65:
0000000000005c65         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000005c68         shl        r15, 0x4
0000000000005c6c         sub        rsp, 0x8
0000000000005c70         add        rbx, r15
0000000000005c73         lea        r15, qword [rbp+8]
0000000000005c77         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000005c7b         mov        r11, qword [rbx]
0000000000005c7e         mov        r12, qword [rbx+8]
0000000000005c82         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000005c85         or         eax, 0x1
0000000000005c88         mov        dword [rsp+0x60+var_3C], eax
0000000000005c8c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000005c8f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000005c92         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000005c95         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000005c97         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
0000000000005c9a         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000005c9f         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000005ca2         mov        qword [rsp+0x78+var_48], r11
0000000000005ca7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000005cac         add        rsp, 0x20
0000000000005cb0         mov        r11, qword [rsp+0x58+var_48]
0000000000005cb5         cmp        r11, rax
0000000000005cb8         ja         loc_5d21

0000000000005cba         lea        rsi, qword [rax+1]
0000000000005cbe         lea        rax, qword [slot0]                          ; slot0
0000000000005cc5         cmp        r12, rax
0000000000005cc8         mov        qword [rbx], rsi
0000000000005ccb         je         loc_5cdf

0000000000005ccd         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000005cd0         mov        qword [rsp+0x58+var_48], rsi
0000000000005cd5         call       j_free                                      ; free
0000000000005cda         mov        rsi, qword [rsp+0x58+var_48]

                     loc_5cdf:
0000000000005cdf         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000005ce2         mov        qword [rsp+0x58+var_48], rsi
0000000000005ce7         call       xmalloc                                     ; xmalloc
0000000000005cec         sub        rsp, 0x8
0000000000005cf0         mov        qword [rbx+8], rax
0000000000005cf4         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000005cf8         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000005cfb         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000005cfe         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000005d01         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000005d03         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000005d08         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
0000000000005d0b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000005d10         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000005d15         mov        r12, rax
0000000000005d18         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000005d1d         add        rsp, 0x20

                     loc_5d21:
0000000000005d21         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000005d25         mov        dword [r13], eax
0000000000005d29         add        rsp, 0x28
0000000000005d2d         mov        rax, r12
0000000000005d30         pop        rbx
0000000000005d31         pop        rbp
0000000000005d32         pop        r12
0000000000005d34         pop        r13
0000000000005d36         pop        r14
0000000000005d38         pop        r15
0000000000005d3a         ret
                        ; endp
0000000000005d3b         align      64

                     loc_5d40:
0000000000005d40         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000005d42         call       xrealloc                                    ; xrealloc
0000000000005d47         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
0000000000005d4f         mov        rbx, rax
0000000000005d52         mov        qword [slotvec], rax                        ; slotvec
0000000000005d59         movups     xmmword [rax], xmm0
0000000000005d5c         jmp        loc_5c3d

                     loc_5d61:
0000000000005d61         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_5d66:
0000000000005d66         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5d6b:
0000000000005d6b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x8f88)
                     clone_quoting_options:
0000000000005d70         push       r12                                         ; Begin of unwind block (FDE at 0x8ff4)
0000000000005d72         push       rbp
0000000000005d73         push       rbx
0000000000005d74         mov        rbx, rdi
0000000000005d77         call       j___errno_location                          ; __errno_location
0000000000005d7c         mov        r12d, dword [rax]
0000000000005d7f         mov        rbp, rax
0000000000005d82         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000005d89         test       rbx, rbx
0000000000005d8c         mov        esi, 0x38                                   ; argument #2 for method xmemdup
0000000000005d91         cmove      rbx, rax
0000000000005d95         mov        rdi, rbx                                    ; argument #1 for method xmemdup
0000000000005d98         call       xmemdup                                     ; xmemdup
0000000000005d9d         mov        dword [rbp], r12d
0000000000005da1         pop        rbx
0000000000005da2         pop        rbp
0000000000005da3         pop        r12
0000000000005da5         ret
                        ; endp
0000000000005da6         align      16                                          ; End of unwind block (FDE at 0x8ff4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000005db0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x9020), default_quoting_options
0000000000005db7         test       rdi, rdi
0000000000005dba         cmove      rdi, rax
0000000000005dbe         mov        eax, dword [rdi]
0000000000005dc0         ret
                        ; endp
0000000000005dc1         align      16                                          ; End of unwind block (FDE at 0x9020)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000005dd0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x9034), default_quoting_options
0000000000005dd7         test       rdi, rdi
0000000000005dda         cmove      rdi, rax
0000000000005dde         mov        dword [rdi], esi
0000000000005de0         ret
                        ; endp
0000000000005de1         align      16                                          ; End of unwind block (FDE at 0x9034)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000005df0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x9048), default_quoting_options
0000000000005df7         test       rdi, rdi
0000000000005dfa         mov        ecx, esi
0000000000005dfc         cmove      rdi, rax
0000000000005e00         mov        eax, esi
0000000000005e02         and        ecx, 0x1f
0000000000005e05         shr        al, 0x5
0000000000005e08         movzx      eax, al
0000000000005e0b         lea        rdi, qword [rdi+rax*4+8]
0000000000005e10         mov        esi, dword [rdi]
0000000000005e12         mov        eax, esi
0000000000005e14         shr        eax, cl
0000000000005e16         xor        edx, eax
0000000000005e18         and        eax, 0x1
0000000000005e1b         and        edx, 0x1
0000000000005e1e         shl        edx, cl
0000000000005e20         xor        edx, esi
0000000000005e22         mov        dword [rdi], edx
0000000000005e24         ret
                        ; endp
0000000000005e25         align      16                                          ; End of unwind block (FDE at 0x9048)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000005e30         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x905c), default_quoting_options
0000000000005e37         test       rdi, rdi
0000000000005e3a         cmove      rdi, rax
0000000000005e3e         mov        eax, dword [rdi+4]
0000000000005e41         mov        dword [rdi+4], esi
0000000000005e44         ret
                        ; endp
0000000000005e45         align      16                                          ; End of unwind block (FDE at 0x905c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000005e50         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x9070), default_quoting_options
0000000000005e57         test       rdi, rdi
0000000000005e5a         cmove      rdi, rax
0000000000005e5e         test       rsi, rsi
0000000000005e61         mov        dword [rdi], 0xa
0000000000005e67         je         loc_5e77

0000000000005e69         test       rdx, rdx
0000000000005e6c         je         loc_5e77

0000000000005e6e         mov        qword [rdi+0x28], rsi
0000000000005e72         mov        qword [rdi+0x30], rdx
0000000000005e76         ret
                        ; endp

                     loc_5e77:
0000000000005e77         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
0000000000005e7b         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000005e80         push       r15                                         ; End of unwind block (FDE at 0x9070), Begin of unwind block (FDE at 0x9084)
0000000000005e82         push       r14
0000000000005e84         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000005e8b         push       r13
0000000000005e8d         push       r12
0000000000005e8f         mov        r13, rdi
0000000000005e92         push       rbp
0000000000005e93         push       rbx
0000000000005e94         mov        rbx, r8
0000000000005e97         mov        r14, rsi
0000000000005e9a         mov        r15, rdx
0000000000005e9d         sub        rsp, 0x18
0000000000005ea1         test       r8, r8
0000000000005ea4         cmove      rbx, rax
0000000000005ea8         mov        qword [rsp+0x48+var_40], rcx
0000000000005ead         call       j___errno_location                          ; __errno_location
0000000000005eb2         mov        r12d, dword [rax]
0000000000005eb5         mov        rbp, rax
0000000000005eb8         lea        rax, qword [rbx+8]
0000000000005ebc         sub        rsp, 0x8
0000000000005ec0         mov        r9d, dword [rbx+4]
0000000000005ec4         push       qword [rbx+0x30]
0000000000005ec7         mov        r8d, dword [rbx]
0000000000005eca         push       qword [rbx+0x28]
0000000000005ecd         mov        rdx, r15
0000000000005ed0         push       rax
0000000000005ed1         mov        rcx, qword [rsp+0x68+var_40]
0000000000005ed6         mov        rsi, r14
0000000000005ed9         mov        rdi, r13
0000000000005edc         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000005ee1         mov        dword [rbp], r12d
0000000000005ee5         add        rsp, 0x38
0000000000005ee9         pop        rbx
0000000000005eea         pop        rbp
0000000000005eeb         pop        r12
0000000000005eed         pop        r13
0000000000005eef         pop        r14
0000000000005ef1         pop        r15
0000000000005ef3         ret
                        ; endp
0000000000005ef4         align      256                                         ; End of unwind block (FDE at 0x9084)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000005f00         push       r15                                         ; Begin of unwind block (FDE at 0x90d8), CODE XREF=quotearg_alloc+5
0000000000005f02         push       r14
0000000000005f04         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000005f0b         push       r13
0000000000005f0d         push       r12
0000000000005f0f         mov        r12, rdx
0000000000005f12         push       rbp
0000000000005f13         push       rbx
0000000000005f14         mov        rbx, rcx
0000000000005f17         mov        r14, rdi
0000000000005f1a         mov        r15, rsi
0000000000005f1d         sub        rsp, 0x38
0000000000005f21         test       rcx, rcx
0000000000005f24         cmove      rbx, rax
0000000000005f28         xor        ebp, ebp
0000000000005f2a         call       j___errno_location                          ; __errno_location
0000000000005f2f         test       r12, r12
0000000000005f32         mov        r13, rax
0000000000005f35         mov        eax, dword [rax]
0000000000005f37         sete       bpl
0000000000005f3b         or         ebp, dword [rbx+4]
0000000000005f3e         lea        r10, qword [rbx+8]
0000000000005f42         sub        rsp, 0x8
0000000000005f46         mov        r8d, dword [rbx]
0000000000005f49         mov        rcx, r15
0000000000005f4c         mov        dword [rsp+0x70+var_5C], eax
0000000000005f50         push       qword [rbx+0x30]
0000000000005f53         mov        rdx, r14
0000000000005f56         push       qword [rbx+0x28]
0000000000005f59         push       r10
0000000000005f5b         xor        esi, esi
0000000000005f5d         mov        r9d, ebp
0000000000005f60         xor        edi, edi
0000000000005f62         mov        qword [rsp+0x88+var_48], r10
0000000000005f67         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000005f6c         lea        rsi, qword [rax+1]
0000000000005f70         mov        qword [rsp+0x88+var_40], rax
0000000000005f75         add        rsp, 0x20
0000000000005f79         mov        rdi, rsi
0000000000005f7c         mov        qword [rsp+0x68+var_50], rsi
0000000000005f81         call       xmalloc                                     ; xmalloc
0000000000005f86         mov        qword [rsp+0x68+var_58], rax
0000000000005f8b         sub        rsp, 0x8
0000000000005f8f         push       qword [rbx+0x30]
0000000000005f92         push       qword [rbx+0x28]
0000000000005f95         mov        r10, qword [rsp+0x80+var_48]
0000000000005f9a         mov        r9d, ebp
0000000000005f9d         mov        r8d, dword [rbx]
0000000000005fa0         mov        rcx, r15
0000000000005fa3         mov        rdx, r14
0000000000005fa6         mov        rdi, rax
0000000000005fa9         push       r10
0000000000005fab         mov        rsi, qword [rsp+0x88+var_50]
0000000000005fb0         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000005fb5         mov        eax, dword [rsp+0x88+var_5C]
0000000000005fb9         add        rsp, 0x20
0000000000005fbd         test       r12, r12
0000000000005fc0         mov        dword [r13], eax
0000000000005fc4         je         loc_5fcf

0000000000005fc6         mov        r11, qword [rsp+0x68+var_40]
0000000000005fcb         mov        qword [r12], r11

                     loc_5fcf:
0000000000005fcf         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000005fd4         add        rsp, 0x38
0000000000005fd8         pop        rbx
0000000000005fd9         pop        rbp
0000000000005fda         pop        r12
0000000000005fdc         pop        r13
0000000000005fde         pop        r14
0000000000005fe0         pop        r15
0000000000005fe2         ret
                        ; endp
0000000000005fe3         align      16                                          ; End of unwind block (FDE at 0x90d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000005ff0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x9144)
0000000000005ff3         xor        edx, edx
0000000000005ff5         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
0000000000005ffa         align      8192                                        ; End of unwind block (FDE at 0x9144)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000006000         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x9158), nslots
0000000000006006         push       r12
0000000000006008         mov        r12, qword [slotvec]                        ; slotvec
000000000000600f         push       rbp
0000000000006010         push       rbx
0000000000006011         cmp        eax, 0x1
0000000000006014         jle        loc_6041

0000000000006016         sub        eax, 0x2
0000000000006019         lea        rbx, qword [r12+0x18]
000000000000601e         shl        rax, 0x4
0000000000006022         lea        rbp, qword [r12+rax+0x28]
0000000000006027         nop        word [rax+rax]

                     loc_6030:
0000000000006030         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
0000000000006033         add        rbx, 0x10
0000000000006037         call       j_free                                      ; free
000000000000603c         cmp        rbx, rbp
000000000000603f         jne        loc_6030

                     loc_6041:
0000000000006041         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000006046         lea        rbx, qword [slot0]                          ; slot0
000000000000604d         cmp        rdi, rbx
0000000000006050         je         loc_6069

0000000000006052         call       j_free                                      ; free
0000000000006057         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000006062         mov        qword [slotvec0+8], rbx                     ; 0x20a078

                     loc_6069:
0000000000006069         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000006070         cmp        r12, rbx
0000000000006073         je         loc_6084

0000000000006075         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000006078         call       j_free                                      ; free
000000000000607d         mov        qword [slotvec], rbx                        ; slotvec

                     loc_6084:
0000000000006084         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000006085         mov        dword [nslots], 0x1                         ; nslots
000000000000608f         pop        rbp
0000000000006090         pop        r12
0000000000006092         ret
                        ; endp
0000000000006093         align      32                                          ; End of unwind block (FDE at 0x9158)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
00000000000060a0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x9184), default_quoting_options
00000000000060a7         mov        rdx, 0xffffffffffffffff
00000000000060ae         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000060b3         align      64                                          ; End of unwind block (FDE at 0x9184)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
00000000000060c0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x9198), default_quoting_options
00000000000060c7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000060cc         align      16                                          ; End of unwind block (FDE at 0x9198)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
00000000000060d0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x91ac), default_quoting_options
00000000000060d7         mov        rsi, rdi
00000000000060da         mov        rdx, 0xffffffffffffffff
00000000000060e1         xor        edi, edi
00000000000060e3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000060e8         align      16                                          ; End of unwind block (FDE at 0x91ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
00000000000060f0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x91c0), default_quoting_options
00000000000060f7         mov        rdx, rsi
00000000000060fa         mov        rsi, rdi
00000000000060fd         xor        edi, edi
00000000000060ff         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000006104         align      16                                          ; End of unwind block (FDE at 0x91c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
0000000000006110         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x91d4)
0000000000006114         mov        rax, rdx
0000000000006117         mov        rdx, qword [fs:0x28]
0000000000006120         mov        qword [rsp+0x48+var_10], rdx
0000000000006125         xor        edx, edx
0000000000006127         cmp        esi, 0xa
000000000000612a         je         loc_6194

000000000000612c         mov        dword [rsp+0x48+var_48], esi
000000000000612f         mov        rcx, rsp
0000000000006132         mov        rdx, 0xffffffffffffffff
0000000000006139         mov        rsi, rax
000000000000613c         mov        qword [rsp+0x48+var_44], 0x0
0000000000006145         mov        qword [rsp+0x48+var_3C], 0x0
000000000000614e         mov        qword [rsp+0x48+var_34], 0x0
0000000000006157         mov        qword [rsp+0x48+var_2C], 0x0
0000000000006160         mov        qword [rsp+0x48+var_24], 0x0
0000000000006169         mov        qword [rsp+0x48+var_1C], 0x0
0000000000006172         mov        dword [rsp+0x48+var_14], 0x0
000000000000617a         call       quotearg_n_options                          ; quotearg_n_options
000000000000617f         mov        rcx, qword [rsp+0x48+var_10]
0000000000006184         xor        rcx, qword [fs:0x28]
000000000000618d         jne        loc_6199

000000000000618f         add        rsp, 0x48
0000000000006193         ret
                        ; endp

                     loc_6194:
0000000000006194         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_6199:
0000000000006199         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
000000000000619e         align      32                                          ; End of unwind block (FDE at 0x91d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
00000000000061a0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x91f0), CODE XREF=quotearg_style_mem+10
00000000000061a4         mov        rax, rdx
00000000000061a7         mov        rdx, rcx
00000000000061aa         mov        rcx, qword [fs:0x28]
00000000000061b3         mov        qword [rsp+0x48+var_10], rcx
00000000000061b8         xor        ecx, ecx
00000000000061ba         cmp        esi, 0xa
00000000000061bd         je         loc_6220

00000000000061bf         mov        dword [rsp+0x48+var_48], esi
00000000000061c2         mov        rcx, rsp
00000000000061c5         mov        rsi, rax
00000000000061c8         mov        qword [rsp+0x48+var_44], 0x0
00000000000061d1         mov        qword [rsp+0x48+var_3C], 0x0
00000000000061da         mov        qword [rsp+0x48+var_34], 0x0
00000000000061e3         mov        qword [rsp+0x48+var_2C], 0x0
00000000000061ec         mov        qword [rsp+0x48+var_24], 0x0
00000000000061f5         mov        qword [rsp+0x48+var_1C], 0x0
00000000000061fe         mov        dword [rsp+0x48+var_14], 0x0
0000000000006206         call       quotearg_n_options                          ; quotearg_n_options
000000000000620b         mov        rdx, qword [rsp+0x48+var_10]
0000000000006210         xor        rdx, qword [fs:0x28]
0000000000006219         jne        loc_6225

000000000000621b         add        rsp, 0x48
000000000000621f         ret
                        ; endp

                     loc_6220:
0000000000006220         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_6225:
0000000000006225         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
000000000000622a         align      16                                          ; End of unwind block (FDE at 0x91f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
0000000000006230         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x920c)
0000000000006233         mov        esi, edi
0000000000006235         xor        edi, edi
0000000000006237         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
000000000000623c         align      64                                          ; End of unwind block (FDE at 0x920c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000006240         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x9220)
0000000000006243         mov        rdx, rsi
0000000000006246         mov        esi, edi
0000000000006248         xor        edi, edi
000000000000624a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
000000000000624f         align      16                                          ; End of unwind block (FDE at 0x9220)

                     quotearg_char_mem:
0000000000006250         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x9234), CODE XREF=quotearg_char+11
0000000000006254         mov        ecx, edx
0000000000006256         mov        rax, qword [fs:0x28]
000000000000625f         mov        qword [rsp+0x48+var_10], rax
0000000000006264         xor        eax, eax
0000000000006266         mov        rax, qword [qword_20a230]                   ; qword_20a230
000000000000626d         mov        r8, rsp
0000000000006270         and        ecx, 0x1f
0000000000006273         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
000000000000627b         mov        qword [rsp+0x48+var_18], rax
0000000000006280         mov        eax, edx
0000000000006282         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000006286         shr        al, 0x5
0000000000006289         movzx      eax, al
000000000000628c         lea        r9, qword [r8+rax*4+8]
0000000000006291         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20a210
0000000000006299         movaps     xmmword [rsp+0x48+var_38], xmm0
000000000000629e         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20a220
00000000000062a6         movaps     xmmword [rsp+0x48+var_28], xmm0
00000000000062ab         mov        edx, dword [r9]
00000000000062ae         mov        eax, edx
00000000000062b0         shr        eax, cl
00000000000062b2         not        eax
00000000000062b4         and        eax, 0x1
00000000000062b7         shl        eax, cl
00000000000062b9         mov        rcx, r8
00000000000062bc         xor        eax, edx
00000000000062be         mov        rdx, rsi
00000000000062c1         mov        rsi, rdi
00000000000062c4         mov        dword [r9], eax
00000000000062c7         xor        edi, edi
00000000000062c9         call       quotearg_n_options                          ; quotearg_n_options
00000000000062ce         mov        rsi, qword [rsp+0x48+var_10]
00000000000062d3         xor        rsi, qword [fs:0x28]
00000000000062dc         jne        loc_62e3

00000000000062de         add        rsp, 0x48
00000000000062e2         ret
                        ; endp

                     loc_62e3:
00000000000062e3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
00000000000062e8         align      16                                          ; End of unwind block (FDE at 0x9234)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
00000000000062f0         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x9250)
00000000000062f4         mov        rsi, 0xffffffffffffffff
00000000000062fb         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000006300         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x9250), Begin of unwind block (FDE at 0x9264), CODE XREF=close_stdout+101
0000000000006305         mov        rsi, 0xffffffffffffffff
000000000000630c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000006311         align      32                                          ; End of unwind block (FDE at 0x9264)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000006320         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x9278)
0000000000006325         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
000000000000632a         align      16                                          ; End of unwind block (FDE at 0x9278)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000006330         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x928c), CODE XREF=uptime+101
0000000000006334         mov        rax, rdx
0000000000006337         mov        rdx, qword [fs:0x28]
0000000000006340         mov        qword [rsp+0x48+var_10], rdx
0000000000006345         xor        edx, edx
0000000000006347         cmp        esi, 0xa
000000000000634a         je         loc_63b4

000000000000634c         mov        dword [rsp+0x48+var_48], esi
000000000000634f         mov        rcx, rsp
0000000000006352         mov        rdx, 0xffffffffffffffff
0000000000006359         mov        rsi, rax
000000000000635c         mov        qword [rsp+0x48+var_44], 0x0
0000000000006365         mov        qword [rsp+0x48+var_3C], 0x4000000
000000000000636e         mov        qword [rsp+0x48+var_34], 0x0
0000000000006377         mov        qword [rsp+0x48+var_2C], 0x0
0000000000006380         mov        qword [rsp+0x48+var_24], 0x0
0000000000006389         mov        qword [rsp+0x48+var_1C], 0x0
0000000000006392         mov        dword [rsp+0x48+var_14], 0x0
000000000000639a         call       quotearg_n_options                          ; quotearg_n_options
000000000000639f         mov        rcx, qword [rsp+0x48+var_10]
00000000000063a4         xor        rcx, qword [fs:0x28]
00000000000063ad         jne        loc_63b9

00000000000063af         add        rsp, 0x48
00000000000063b3         ret
                        ; endp

                     loc_63b4:
00000000000063b4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_63b9:
00000000000063b9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
00000000000063be         align      64                                          ; End of unwind block (FDE at 0x928c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom_mem:
00000000000063c0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x92a8), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
00000000000063c4         mov        r9, rcx
00000000000063c7         mov        rcx, qword [qword_20a230]                   ; qword_20a230
00000000000063ce         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
00000000000063d6         mov        rax, qword [fs:0x28]
00000000000063df         mov        qword [rsp+0x48+var_10], rax
00000000000063e4         xor        eax, eax
00000000000063e6         movaps     xmmword [rsp+0x48+var_48], xmm0
00000000000063ea         test       rsi, rsi
00000000000063ed         mov        qword [rsp+0x48+var_18], rcx
00000000000063f2         mov        dword [rsp+0x48+var_48], 0xa
00000000000063f9         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20a210
0000000000006401         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000006406         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20a220
000000000000640e         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000006413         je         loc_6447

0000000000006415         test       rdx, rdx
0000000000006418         je         loc_6447

000000000000641a         mov        qword [rsp+0x48+var_20], rsi
000000000000641f         mov        qword [rsp+0x48+var_18], rdx
0000000000006424         mov        rcx, rsp
0000000000006427         mov        rdx, r8
000000000000642a         mov        rsi, r9
000000000000642d         call       quotearg_n_options                          ; quotearg_n_options
0000000000006432         mov        rdi, qword [rsp+0x48+var_10]
0000000000006437         xor        rdi, qword [fs:0x28]
0000000000006440         jne        loc_644c

0000000000006442         add        rsp, 0x48
0000000000006446         ret
                        ; endp

                     loc_6447:
0000000000006447         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_644c:
000000000000644c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000006451         align      32                                          ; End of unwind block (FDE at 0x92a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_custom:
0000000000006460         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x92c4)
0000000000006467         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
000000000000646c         align      16                                          ; End of unwind block (FDE at 0x92c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000006470         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x92d8)
0000000000006473         mov        r8, 0xffffffffffffffff
000000000000647a         mov        rdx, rsi
000000000000647d         mov        rsi, rdi
0000000000006480         xor        edi, edi
0000000000006482         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000006487         align      16                                          ; End of unwind block (FDE at 0x92d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000006490         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x92ec)
0000000000006493         mov        rcx, rdx
0000000000006496         mov        rdx, rsi
0000000000006499         mov        rsi, rdi
000000000000649c         xor        edi, edi
000000000000649e         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
00000000000064a3         align      16                                          ; End of unwind block (FDE at 0x92ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
00000000000064b0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x9300), quote_quoting_options
00000000000064b7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000064bc         align      64                                          ; End of unwind block (FDE at 0x9300)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
00000000000064c0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x9314), quote_quoting_options
00000000000064c7         mov        rdx, rsi
00000000000064ca         mov        rsi, rdi
00000000000064cd         xor        edi, edi
00000000000064cf         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000064d4         align      32                                          ; End of unwind block (FDE at 0x9314)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
00000000000064e0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x9328), quote_quoting_options
00000000000064e7         mov        rdx, 0xffffffffffffffff
00000000000064ee         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000064f3         align      256                                         ; End of unwind block (FDE at 0x9328)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000006500         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x933c), quote_quoting_options, CODE XREF=main+221
0000000000006507         mov        rsi, rdi
000000000000650a         mov        rdx, 0xffffffffffffffff
0000000000006511         xor        edi, edi
0000000000006513         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000006518         align      32                                          ; End of unwind block (FDE at 0x933c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
0000000000006520         push       r15                                         ; Begin of unwind block (FDE at 0x9354), CODE XREF=version_etc_va+75, version_etc+161
0000000000006522         push       r14
0000000000006524         push       r13
0000000000006526         push       r12
0000000000006528         mov        r12, r9
000000000000652b         push       rbp
000000000000652c         push       rbx
000000000000652d         mov        rbp, rdi
0000000000006530         mov        rbx, r8
0000000000006533         sub        rsp, 0x28
0000000000006537         test       rsi, rsi
000000000000653a         je         loc_6658

0000000000006540         mov        r8, rdx
0000000000006543         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
000000000000654a         mov        r9, rcx
000000000000654d         xor        eax, eax
000000000000654f         mov        rcx, rsi
0000000000006552         mov        esi, 0x1
0000000000006557         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_655c:
000000000000655c         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x84bb, CODE XREF=version_etc_arn+337
0000000000006563         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006565         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000656a         call       j_dcgettext                                 ; dcgettext
000000000000656f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000006576         mov        rcx, rax
0000000000006579         mov        r8d, 0x7e3
000000000000657f         mov        esi, 0x1
0000000000006584         mov        rdi, rbp
0000000000006587         xor        eax, eax
0000000000006589         call       j___fprintf_chk                             ; __fprintf_chk
000000000000658e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000006595         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006597         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000659c         call       j_dcgettext                                 ; dcgettext
00000000000065a1         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
00000000000065a4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000065a7         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000065ac         cmp        r12, 0x9
00000000000065b0         ja         loc_68f0

00000000000065b6         lea        rdx, qword [switch_table_87a8]              ; switch_table_87a8
00000000000065bd         movsxd     rax, dword [rdx+r12*4]
00000000000065c1         add        rax, rdx
00000000000065c4         jmp        rax                                         ; switch statement using table at 0x87a8, with 10 cases, 0x65d0,0x6646,0x6680,0x66d8,0x6718,0x6760,0x67b0,0x6808,0x6838,0x68a0
00000000000065c6         align      16

                     loc_65d0:
00000000000065d0         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
00000000000065d4         mov        rax, qword [rbx+0x10]
00000000000065d8         lea        rsi, qword [aWrittenBySSSns_86b8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
00000000000065df         mov        r8, qword [rbx+8]
00000000000065e3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000065e8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000065ea         mov        r13, qword [rbx+0x30]
00000000000065ee         mov        r12, qword [rbx+0x28]
00000000000065f2         mov        qword [rsp+0x58+var_48], r9
00000000000065f7         mov        r15, qword [rbx+0x20]
00000000000065fb         mov        r14, qword [rbx+0x18]
00000000000065ff         mov        qword [rsp+0x58+var_58], rax
0000000000006603         mov        qword [rsp+0x58+var_50], r8
0000000000006608         mov        rbx, qword [rbx]
000000000000660b         call       j_dcgettext                                 ; dcgettext
0000000000006610         sub        rsp, 0x8

                     loc_6614:
0000000000006614         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000006619         mov        rdx, rax
000000000000661c         mov        rcx, rbx
000000000000661f         mov        esi, 0x1
0000000000006624         mov        rdi, rbp
0000000000006627         xor        eax, eax
0000000000006629         push       r9
000000000000662b         push       r13
000000000000662d         push       r12
000000000000662f         push       r15
0000000000006631         push       r14
0000000000006633         mov        r9, qword [rsp+0x88+var_58]
0000000000006638         mov        r8, qword [rsp+0x88+var_50]
000000000000663d         call       j___fprintf_chk                             ; __fprintf_chk
0000000000006642         add        rsp, 0x30

                     loc_6646:
0000000000006646         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
000000000000664a         pop        rbx
000000000000664b         pop        rbp
000000000000664c         pop        r12
000000000000664e         pop        r13
0000000000006650         pop        r14
0000000000006652         pop        r15
0000000000006654         ret
                        ; endp
0000000000006655         align      8

                     loc_6658:
0000000000006658         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
000000000000665b         mov        rcx, rdx
000000000000665e         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000006665         mov        esi, 0x1
000000000000666a         xor        eax, eax
000000000000666c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000006671         jmp        loc_655c
0000000000006676         align      128

                     loc_6680:
0000000000006680         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000006684         mov        r9, qword [rbx+0x38]
0000000000006688         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
000000000000668f         mov        rax, qword [rbx+0x10]
0000000000006693         mov        r8, qword [rbx+8]
0000000000006697         mov        edx, 0x5
000000000000669c         mov        r13, qword [rbx+0x30]
00000000000066a0         mov        r12, qword [rbx+0x28]
00000000000066a4         mov        r15, qword [rbx+0x20]
00000000000066a8         mov        r14, qword [rbx+0x18]
00000000000066ac         mov        rbx, qword [rbx]
00000000000066af         mov        qword [rsp+0x58+var_40], r10
00000000000066b4         mov        qword [rsp+0x58+var_48], r9
00000000000066b9         mov        qword [rsp+0x58+var_58], rax
00000000000066bd         mov        qword [rsp+0x58+var_50], r8

                     loc_66c2:
00000000000066c2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
00000000000066c4         call       j_dcgettext                                 ; dcgettext
00000000000066c9         mov        r10, qword [rsp+0x58+var_40]
00000000000066ce         push       r10
00000000000066d0         jmp        loc_6614
00000000000066d5         align      8

                     loc_66d8:
00000000000066d8         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
00000000000066db         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
00000000000066e2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000066e7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000066e9         call       j_dcgettext                                 ; dcgettext
00000000000066ee         add        rsp, 0x28
00000000000066f2         mov        rcx, rbx
00000000000066f5         mov        rdi, rbp
00000000000066f8         pop        rbx
00000000000066f9         pop        rbp
00000000000066fa         pop        r12
00000000000066fc         pop        r13
00000000000066fe         pop        r14
0000000000006700         pop        r15
0000000000006702         mov        rdx, rax
0000000000006705         mov        esi, 0x1
000000000000670a         xor        eax, eax
000000000000670c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000006711         align      8

                     loc_6718:
0000000000006718         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
000000000000671c         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000006723         mov        rbx, qword [rbx]
0000000000006726         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000672b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000672d         call       j_dcgettext                                 ; dcgettext
0000000000006732         add        rsp, 0x28
0000000000006736         mov        r8, r12
0000000000006739         mov        rcx, rbx
000000000000673c         mov        rdi, rbp
000000000000673f         mov        rdx, rax
0000000000006742         mov        esi, 0x1
0000000000006747         pop        rbx
0000000000006748         pop        rbp
0000000000006749         pop        r12
000000000000674b         pop        r13
000000000000674d         pop        r14
000000000000674f         pop        r15
0000000000006751         xor        eax, eax
0000000000006753         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000006758         align      32

                     loc_6760:
0000000000006760         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000006764         mov        r12, qword [rbx+8]
0000000000006768         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
000000000000676f         mov        rbx, qword [rbx]
0000000000006772         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006777         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006779         call       j_dcgettext                                 ; dcgettext
000000000000677e         add        rsp, 0x28
0000000000006782         mov        r9, r13
0000000000006785         mov        r8, r12
0000000000006788         mov        rcx, rbx
000000000000678b         mov        rdi, rbp
000000000000678e         mov        rdx, rax
0000000000006791         pop        rbx
0000000000006792         pop        rbp
0000000000006793         pop        r12
0000000000006795         pop        r13
0000000000006797         pop        r14
0000000000006799         pop        r15
000000000000679b         mov        esi, 0x1
00000000000067a0         xor        eax, eax
00000000000067a2         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000067a7         align      16

                     loc_67b0:
00000000000067b0         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
00000000000067b7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000067bc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000067be         mov        r14, qword [rbx+0x18]
00000000000067c2         mov        r13, qword [rbx+0x10]
00000000000067c6         mov        r12, qword [rbx+8]
00000000000067ca         mov        rbx, qword [rbx]
00000000000067cd         call       j_dcgettext                                 ; dcgettext
00000000000067d2         sub        rsp, 0x8

                     loc_67d6:
00000000000067d6         push       r14                                         ; CODE XREF=version_etc_arn+784
00000000000067d8         mov        rdx, rax
00000000000067db         mov        r9, r13
00000000000067de         mov        r8, r12
00000000000067e1         mov        rcx, rbx
00000000000067e4         mov        rdi, rbp
00000000000067e7         mov        esi, 0x1
00000000000067ec         xor        eax, eax
00000000000067ee         call       j___fprintf_chk                             ; __fprintf_chk
00000000000067f3         pop        rax
00000000000067f4         pop        rdx
00000000000067f5         add        rsp, 0x28
00000000000067f9         pop        rbx
00000000000067fa         pop        rbp
00000000000067fb         pop        r12
00000000000067fd         pop        r13
00000000000067ff         pop        r14
0000000000006801         pop        r15
0000000000006803         ret
                        ; endp
0000000000006804         align      8

                     loc_6808:
0000000000006808         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
000000000000680c         lea        rsi, qword [aWrittenBySSSns_8638]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000006813         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006818         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000681a         mov        r14, qword [rbx+0x18]
000000000000681e         mov        r13, qword [rbx+0x10]
0000000000006822         mov        r12, qword [rbx+8]
0000000000006826         mov        rbx, qword [rbx]
0000000000006829         call       j_dcgettext                                 ; dcgettext
000000000000682e         push       r15
0000000000006830         jmp        loc_67d6
0000000000006832         align      8

                     loc_6838:
0000000000006838         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
000000000000683c         mov        r12, qword [rbx+0x28]
0000000000006840         lea        rsi, qword [aWrittenBySSSns_8660]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000006847         mov        r15, qword [rbx+0x20]
000000000000684b         mov        r14, qword [rbx+0x18]
000000000000684f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006854         mov        r13, qword [rbx+0x10]
0000000000006858         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000685a         mov        rbx, qword [rbx]
000000000000685d         mov        qword [rsp+0x58+var_58], r8
0000000000006861         call       j_dcgettext                                 ; dcgettext
0000000000006866         sub        rsp, 0x8
000000000000686a         mov        r9, r13
000000000000686d         push       r12
000000000000686f         push       r15
0000000000006871         push       r14

                     loc_6873:
0000000000006873         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000006878         mov        rcx, rbx
000000000000687b         mov        rdx, rax
000000000000687e         mov        rdi, rbp
0000000000006881         mov        esi, 0x1
0000000000006886         xor        eax, eax
0000000000006888         call       j___fprintf_chk                             ; __fprintf_chk
000000000000688d         add        rsp, 0x20
0000000000006891         add        rsp, 0x28
0000000000006895         pop        rbx
0000000000006896         pop        rbp
0000000000006897         pop        r12
0000000000006899         pop        r13
000000000000689b         pop        r14
000000000000689d         pop        r15
000000000000689f         ret
                        ; endp

                     loc_68a0:
00000000000068a0         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
00000000000068a4         mov        r13, qword [rbx+0x30]
00000000000068a8         lea        rsi, qword [aWrittenBySSSns_8688]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
00000000000068af         mov        r12, qword [rbx+0x28]
00000000000068b3         mov        r15, qword [rbx+0x20]
00000000000068b7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000068bc         mov        r14, qword [rbx+0x18]
00000000000068c0         mov        r8, qword [rbx+8]
00000000000068c4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000068c6         mov        qword [rsp+0x58+var_50], r9
00000000000068cb         mov        rbx, qword [rbx]
00000000000068ce         mov        qword [rsp+0x58+var_58], r8
00000000000068d2         call       j_dcgettext                                 ; dcgettext
00000000000068d7         push       r13
00000000000068d9         push       r12
00000000000068db         push       r15
00000000000068dd         push       r14
00000000000068df         mov        r9, qword [rsp+0x78+var_50]
00000000000068e4         jmp        loc_6873
00000000000068e6         align      16

                     loc_68f0:
00000000000068f0         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
00000000000068f4         mov        r9, qword [rbx+0x38]
00000000000068f8         mov        edx, 0x5
00000000000068fd         mov        rax, qword [rbx+0x10]
0000000000006901         mov        r8, qword [rbx+8]
0000000000006905         lea        rsi, qword [aWrittenBySSSns_8720]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
000000000000690c         mov        r13, qword [rbx+0x30]
0000000000006910         mov        r12, qword [rbx+0x28]
0000000000006914         mov        r15, qword [rbx+0x20]
0000000000006918         mov        r14, qword [rbx+0x18]
000000000000691c         mov        qword [rsp+0x58+var_40], r10
0000000000006921         mov        qword [rsp+0x58+var_48], r9
0000000000006926         mov        qword [rsp+0x58+var_58], rax
000000000000692a         mov        qword [rsp+0x58+var_50], r8
000000000000692f         mov        rbx, qword [rbx]
0000000000006932         jmp        loc_66c2
0000000000006937         align      64                                          ; End of unwind block (FDE at 0x9354)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000006940         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x9468)
0000000000006943         cmp        qword [r8], 0x0
0000000000006947         je         j_version_etc_arn                           ; version_etc_arn

0000000000006949         nop        dword [rax]

                     loc_6950:
0000000000006950         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000006954         cmp        qword [r8+r9*8], 0x0
0000000000006959         jne        loc_6950

                     j_version_etc_arn:        // version_etc_arn
000000000000695b         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000006960         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x9468), Begin of unwind block (FDE at 0x947c), CODE XREF=parse_long_options+283, parse_gnu_standard_options_only+235
0000000000006964         mov        r10, r8
0000000000006967         xor        r9d, r9d
000000000000696a         mov        rax, qword [fs:0x28]
0000000000006973         mov        qword [rsp+0x68+var_10], rax
0000000000006978         xor        eax, eax
000000000000697a         mov        r8, rsp
000000000000697d         nop        dword [rax]

                     loc_6980:
0000000000006980         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000006983         cmp        eax, 0x2f
0000000000006986         ja         loc_69ca

0000000000006988         mov        r11d, eax
000000000000698b         add        r11, qword [r10+0x10]
000000000000698f         add        eax, 0x8
0000000000006992         mov        dword [r10], eax

                     loc_6995:
0000000000006995         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000006998         test       rax, rax
000000000000699b         mov        qword [r8+r9*8], rax
000000000000699f         je         loc_69ab

00000000000069a1         add        r9, 0x1
00000000000069a5         cmp        r9, 0xa
00000000000069a9         jne        loc_6980

                     loc_69ab:
00000000000069ab         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
00000000000069b0         mov        rax, qword [rsp+0x68+var_10]
00000000000069b5         xor        rax, qword [fs:0x28]
00000000000069be         jne        loc_69c5

00000000000069c0         add        rsp, 0x68
00000000000069c4         ret
                        ; endp

                     loc_69c5:
00000000000069c5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_69ca:
00000000000069ca         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
00000000000069ce         lea        rax, qword [r11+8]
00000000000069d2         mov        qword [r10+8], rax
00000000000069d6         jmp        loc_6995
00000000000069d8         align      32                                          ; End of unwind block (FDE at 0x947c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
00000000000069e0         push       rbp                                         ; Begin of unwind block (FDE at 0x9498)
00000000000069e1         push       rbx
00000000000069e2         mov        r10d, 0x20
00000000000069e8         xor        r11d, r11d
00000000000069eb         sub        rsp, 0xb8
00000000000069f2         mov        rax, qword [fs:0x28]
00000000000069fb         mov        qword [rsp+0xc8+var_50], rax
0000000000006a00         xor        eax, eax
0000000000006a02         lea        rax, qword [rsp+0xc8+arg_0]
0000000000006a0a         mov        qword [rsp+0xc8+var_28], r8
0000000000006a12         lea        rbx, qword [rsp+0xc8+arg_0]
0000000000006a1a         lea        r8, qword [rsp+0xc8+var_A8]
0000000000006a1f         mov        qword [rsp+0xc8+var_20], r9
0000000000006a27         mov        dword [rsp+0xc8+var_C0], 0x20
0000000000006a2f         mov        qword [rsp+0xc8+var_B8], rax
0000000000006a34         lea        rax, qword [rsp+0xc8+var_48]
0000000000006a3c         xor        r9d, r9d
0000000000006a3f         mov        qword [rsp+0xc8+var_B0], rax
0000000000006a44         mov        rbp, rax
0000000000006a47         nop        word [rax+rax]

                     loc_6a50:
0000000000006a50         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000006a54         ja         loc_6aac

0000000000006a56         mov        eax, r10d
0000000000006a59         mov        r11d, 0x1
0000000000006a5f         add        r10d, 0x8
0000000000006a63         add        rax, rbp

                     loc_6a66:
0000000000006a66         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000006a69         test       rax, rax
0000000000006a6c         mov        qword [r8+r9*8], rax
0000000000006a70         je         loc_6a7c

0000000000006a72         add        r9, 0x1
0000000000006a76         cmp        r9, 0xa
0000000000006a7a         jne        loc_6a50

                     loc_6a7c:
0000000000006a7c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
0000000000006a7f         jne        loc_6aa5

                     loc_6a81:
0000000000006a81         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000006a86         mov        rax, qword [rsp+0xc8+var_50]
0000000000006a8b         xor        rax, qword [fs:0x28]
0000000000006a94         jne        loc_6aa0

0000000000006a96         add        rsp, 0xb8
0000000000006a9d         pop        rbx
0000000000006a9e         pop        rbp
0000000000006a9f         ret
                        ; endp

                     loc_6aa0:
0000000000006aa0         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_6aa5:
0000000000006aa5         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
0000000000006aaa         jmp        loc_6a81

                     loc_6aac:
0000000000006aac         mov        rax, rbx                                    ; CODE XREF=version_etc+116
0000000000006aaf         add        rbx, 0x8
0000000000006ab3         jmp        loc_6a66
0000000000006ab5         align      64                                          ; End of unwind block (FDE at 0x9498)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000006ac0         push       rbx                                         ; Begin of unwind block (FDE at 0x94c4)
0000000000006ac1         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000006ac8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006acd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006acf         call       j_dcgettext                                 ; dcgettext
0000000000006ad4         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
0000000000006adb         mov        rsi, rax
0000000000006ade         mov        edi, 0x1
0000000000006ae3         xor        eax, eax
0000000000006ae5         call       j___printf_chk                              ; __printf_chk
0000000000006aea         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000006af1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006af6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006af8         call       j_dcgettext                                 ; dcgettext
0000000000006afd         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000006b04         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x7a34
0000000000006b0b         mov        rsi, rax
0000000000006b0e         mov        edi, 0x1
0000000000006b13         xor        eax, eax
0000000000006b15         call       j___printf_chk                              ; __printf_chk
0000000000006b1a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000006b21         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000006b28         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006b2a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006b2f         call       j_dcgettext                                 ; dcgettext
0000000000006b34         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000006b37         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000006b3a         pop        rbx
0000000000006b3b         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000006b40         push       rbx                                         ; End of unwind block (FDE at 0x94c4), Begin of unwind block (FDE at 0x94e4), CODE XREF=quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15, extract_trimmed_name+14
0000000000006b41         mov        rbx, rdi
0000000000006b44         call       j_malloc                                    ; malloc
0000000000006b49         test       rax, rax
0000000000006b4c         jne        loc_6b53

0000000000006b4e         test       rbx, rbx
0000000000006b51         jne        loc_6b55

                     loc_6b53:
0000000000006b53         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000006b54         ret
                        ; endp

                     loc_6b55:
0000000000006b55         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6b5a:
0000000000006b5a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x94e4)
                     xnmalloc:
0000000000006b60         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x9500)
0000000000006b63         mul        rsi
0000000000006b66         mov        rdi, rax
0000000000006b69         seto       al
0000000000006b6c         test       rdi, rdi
0000000000006b6f         js         loc_6b7b

0000000000006b71         movzx      eax, al
0000000000006b74         test       rax, rax
0000000000006b77         jne        loc_6b7b

0000000000006b79         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_6b7b:
0000000000006b7b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
0000000000006b7f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6b84:
0000000000006b84         nop                                                    ; End of unwind block (FDE at 0x9500)
0000000000006b86         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000006b90         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x9514)
                        ; endp
0000000000006b92         align      32                                          ; End of unwind block (FDE at 0x9514)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000006ba0         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x9528), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40, read_utmp+331
0000000000006ba3         push       rbx
0000000000006ba4         mov        rbx, rsi
0000000000006ba7         jne        loc_6bae

0000000000006ba9         test       rdi, rdi
0000000000006bac         jne        loc_6bc8

                     loc_6bae:
0000000000006bae         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000006bb1         call       j_realloc                                   ; realloc
0000000000006bb6         test       rax, rax
0000000000006bb9         jne        loc_6bc0

0000000000006bbb         test       rbx, rbx
0000000000006bbe         jne        loc_6bd1

                     loc_6bc0:
0000000000006bc0         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000006bc1         ret
                        ; endp
0000000000006bc2         align      8

                     loc_6bc8:
0000000000006bc8         call       j_free                                      ; free, CODE XREF=xrealloc+12
0000000000006bcd         xor        eax, eax
0000000000006bcf         pop        rbx
0000000000006bd0         ret
                        ; endp

                     loc_6bd1:
0000000000006bd1         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6bd6:
0000000000006bd6         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x9528)
                     xnrealloc:
0000000000006be0         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x954c)
0000000000006be3         mul        rdx
0000000000006be6         mov        rsi, rax
0000000000006be9         seto       al
0000000000006bec         test       rsi, rsi
0000000000006bef         js         loc_6bfb

0000000000006bf1         movzx      eax, al
0000000000006bf4         test       rax, rax
0000000000006bf7         jne        loc_6bfb

0000000000006bf9         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_6bfb:
0000000000006bfb         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
0000000000006bff         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6c04:
0000000000006c04         nop                                                    ; End of unwind block (FDE at 0x954c)
0000000000006c06         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000006c10         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x9560)
0000000000006c13         mov        r9, rdx
0000000000006c16         mov        rcx, qword [rsi]
0000000000006c19         je         loc_6c50

0000000000006c1b         xor        edx, edx
0000000000006c1d         movabs     rax, 0x5555555555555554
0000000000006c27         div        r9
0000000000006c2a         cmp        rax, rcx
0000000000006c2d         jbe        loc_6c6b

0000000000006c2f         mov        rax, rcx
0000000000006c32         shr        rax, 0x1
0000000000006c35         lea        rcx, qword [rax+rcx+1]

                     loc_6c3a:
0000000000006c3a         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
0000000000006c3d         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000006c41         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000006c44         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000006c49         align      16

                     loc_6c50:
0000000000006c50         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000006c53         je         loc_6c78

                     loc_6c55:
0000000000006c55         mov        rax, rcx                                    ; CODE XREF=sub_6c74+28
0000000000006c58         mul        r9
0000000000006c5b         seto       dl
0000000000006c5e         test       rax, rax
0000000000006c61         movzx      edx, dl
0000000000006c64         js         loc_6c6b

0000000000006c66         test       rdx, rdx
0000000000006c69         je         loc_6c3a

                     loc_6c6b:
0000000000006c6b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
0000000000006c6f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6c74:
0000000000006c74         nop        dword [rax]
                        ; endp

                     loc_6c78:
0000000000006c78         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
0000000000006c7a         mov        eax, 0x80
0000000000006c7f         xor        r8d, r8d
0000000000006c82         div        r9
0000000000006c85         test       rax, rax
0000000000006c88         sete       r8b
0000000000006c8c         lea        rcx, qword [r8+rax]
0000000000006c90         jmp        loc_6c55
0000000000006c92         align      32                                          ; End of unwind block (FDE at 0x9560)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000006ca0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x9578)
0000000000006ca3         mov        rax, qword [rsi]
0000000000006ca6         je         loc_6cd0

0000000000006ca8         movabs     rdx, 0x5555555555555553
0000000000006cb2         cmp        rax, rdx
0000000000006cb5         ja         loc_6ce1

0000000000006cb7         mov        rdx, rax
0000000000006cba         shr        rdx, 0x1
0000000000006cbd         lea        rax, qword [rdx+rax+1]

                     loc_6cc2:
0000000000006cc2         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000006cc5         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000006cc8         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000006ccd         align      16

                     loc_6cd0:
0000000000006cd0         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000006cd3         mov        edx, 0x80
0000000000006cd8         cmove      rax, rdx
0000000000006cdc         test       rax, rax
0000000000006cdf         jns        loc_6cc2

                     loc_6ce1:
0000000000006ce1         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000006ce5         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6cea:
0000000000006cea         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x9578)
                     xzalloc:
0000000000006cf0         push       rbx                                         ; Begin of unwind block (FDE at 0x9590)
0000000000006cf1         mov        rbx, rdi
0000000000006cf4         call       xmalloc                                     ; xmalloc
0000000000006cf9         mov        rdx, rbx                                    ; argument "__n" for method j_memset
0000000000006cfc         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000006cfe         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000006d01         pop        rbx
0000000000006d02         jmp        j_memset                                    ; memset
                        ; endp
0000000000006d07         align      16                                          ; End of unwind block (FDE at 0x9590)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000006d10         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x95ac)
0000000000006d13         sub        rsp, 0x8
0000000000006d17         mul        rsi
0000000000006d1a         seto       dl
0000000000006d1d         test       rax, rax
0000000000006d20         js         loc_6d39

0000000000006d22         movzx      edx, dl
0000000000006d25         test       rdx, rdx
0000000000006d28         jne        loc_6d39

0000000000006d2a         call       j_calloc                                    ; calloc
0000000000006d2f         test       rax, rax
0000000000006d32         je         loc_6d39

0000000000006d34         add        rsp, 0x8
0000000000006d38         ret
                        ; endp

                     loc_6d39:
0000000000006d39         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6d3e:
0000000000006d3e         nop                                                    ; End of unwind block (FDE at 0x95ac)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemdup:
0000000000006d40         push       rbp                                         ; Begin of unwind block (FDE at 0x95c8), CODE XREF=clone_quoting_options+40
0000000000006d41         push       rbx
0000000000006d42         mov        rbp, rdi
0000000000006d45         mov        rdi, rsi
0000000000006d48         mov        rbx, rsi
0000000000006d4b         sub        rsp, 0x8
0000000000006d4f         call       xmalloc                                     ; xmalloc
0000000000006d54         add        rsp, 0x8
0000000000006d58         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
0000000000006d5b         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
0000000000006d5e         pop        rbx
0000000000006d5f         pop        rbp
0000000000006d60         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000006d63         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000006d68         align      16                                          ; End of unwind block (FDE at 0x95c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000006d70         push       rbx                                         ; Begin of unwind block (FDE at 0x95f0)
0000000000006d71         mov        rbx, rdi
0000000000006d74         call       j_strlen                                    ; strlen
0000000000006d79         mov        rdi, rbx
0000000000006d7c         lea        rsi, qword [rax+1]
0000000000006d80         pop        rbx
0000000000006d81         jmp        xmemdup                                     ; xmemdup
                        ; endp
0000000000006d83         align      16                                          ; End of unwind block (FDE at 0x95f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000006d90         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x960c), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41, read_utmp+381
0000000000006d97         sub        rsp, 0x8
0000000000006d9b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006da0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006da2         call       j_dcgettext                                 ; dcgettext
0000000000006da7         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
0000000000006dad         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x7d6f
0000000000006db4         mov        rcx, rax
0000000000006db7         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000006db9         xor        eax, eax
0000000000006dbb         call       j_error                                     ; error
0000000000006dc0         call       j_abort                                     ; abort
                        ; endp
0000000000006dc5         align      16                                          ; End of unwind block (FDE at 0x960c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000006dd0         push       r12                                         ; Begin of unwind block (FDE at 0x9624), CODE XREF=print_uptime+107, print_uptime+950, close_stream+21
0000000000006dd2         push       rbp
0000000000006dd3         push       rbx
0000000000006dd4         mov        rbx, rdi
0000000000006dd7         call       j_fileno                                    ; fileno
0000000000006ddc         test       eax, eax
0000000000006dde         mov        rdi, rbx
0000000000006de1         js         loc_6e37

0000000000006de3         call       j___freading                                ; __freading
0000000000006de8         test       eax, eax
0000000000006dea         jne        loc_6e18

                     loc_6dec:
0000000000006dec         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
0000000000006def         call       rpl_fflush                                  ; rpl_fflush
0000000000006df4         test       eax, eax
0000000000006df6         je         loc_6e34

0000000000006df8         call       j___errno_location                          ; __errno_location
0000000000006dfd         mov        r12d, dword [rax]
0000000000006e00         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000006e03         mov        rbp, rax
0000000000006e06         call       j_fclose                                    ; fclose
0000000000006e0b         test       r12d, r12d
0000000000006e0e         jne        loc_6e40

                     loc_6e10:
0000000000006e10         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000006e11         pop        rbp
0000000000006e12         pop        r12
0000000000006e14         ret
                        ; endp
0000000000006e15         align      8

                     loc_6e18:
0000000000006e18         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
0000000000006e1b         call       j_fileno                                    ; fileno
0000000000006e20         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000006e22         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000006e27         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000006e29         call       j_lseek                                     ; lseek
0000000000006e2e         cmp        rax, 0xffffffffffffffff
0000000000006e32         jne        loc_6dec

                     loc_6e34:
0000000000006e34         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_6e37:
0000000000006e37         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000006e38         pop        rbp
0000000000006e39         pop        r12
0000000000006e3b         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_6e40:
0000000000006e40         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
0000000000006e44         mov        eax, 0xffffffff
0000000000006e49         jmp        loc_6e10
0000000000006e4b         align      16                                          ; End of unwind block (FDE at 0x9624)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000006e50         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x965c), CODE XREF=rpl_fclose+31
0000000000006e53         push       rbx
0000000000006e54         mov        rbx, rdi
0000000000006e57         je         loc_6e6a

0000000000006e59         call       j___freading                                ; __freading
0000000000006e5e         test       eax, eax
0000000000006e60         je         loc_6e6a

0000000000006e62         test       dword [rbx], 0x100
0000000000006e68         jne        loc_6e78

                     loc_6e6a:
0000000000006e6a         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
0000000000006e6d         pop        rbx
0000000000006e6e         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000006e73         align      8

                     loc_6e78:
0000000000006e78         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
0000000000006e7b         mov        edx, 0x1
0000000000006e80         xor        esi, esi
0000000000006e82         call       rpl_fseeko                                  ; rpl_fseeko
0000000000006e87         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
0000000000006e8a         pop        rbx
0000000000006e8b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000006e90         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x965c), Begin of unwind block (FDE at 0x967c), CODE XREF=rpl_fflush+50
0000000000006e94         cmp        qword [rdi+0x10], rax
0000000000006e98         je         loc_6ea0

                     j_j_fseeko:        // fseeko
0000000000006e9a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
0000000000006e9f         align      32

                     loc_6ea0:
0000000000006ea0         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000006ea4         cmp        qword [rdi+0x28], rax
0000000000006ea8         jne        j_j_fseeko                                  ; fseeko

0000000000006eaa         cmp        qword [rdi+0x48], 0x0
0000000000006eaf         jne        j_j_fseeko                                  ; fseeko

0000000000006eb1         push       r12
0000000000006eb3         push       rbp
0000000000006eb4         mov        r12d, edx
0000000000006eb7         push       rbx
0000000000006eb8         mov        rbp, rsi
0000000000006ebb         mov        rbx, rdi
0000000000006ebe         call       j_fileno                                    ; fileno
0000000000006ec3         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000006ec6         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000006ec9         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000006ecb         call       j_lseek                                     ; lseek
0000000000006ed0         cmp        rax, 0xffffffffffffffff
0000000000006ed4         je         loc_6ee2

0000000000006ed6         and        dword [rbx], 0xffffffef
0000000000006ed9         mov        qword [rbx+0x90], rax
0000000000006ee0         xor        eax, eax

                     loc_6ee2:
0000000000006ee2         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000006ee3         pop        rbp
0000000000006ee4         pop        r12
0000000000006ee6         ret
                        ; endp
0000000000006ee7         align      16                                          ; End of unwind block (FDE at 0x967c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000006ef0         push       r13                                         ; Begin of unwind block (FDE at 0x96ac), CODE XREF=sub_50c0+534
0000000000006ef2         push       r12
0000000000006ef4         mov        r13, rsi
0000000000006ef7         push       rbp
0000000000006ef8         push       rbx
0000000000006ef9         mov        rbx, rdi
0000000000006efc         mov        r12, rdx
0000000000006eff         sub        rsp, 0x18
0000000000006f03         mov        rax, qword [fs:0x28]
0000000000006f0c         mov        qword [rsp+0x38+var_30], rax
0000000000006f11         xor        eax, eax
0000000000006f13         lea        rax, qword [rsp+0x38+var_34]
0000000000006f18         test       rdi, rdi
0000000000006f1b         cmove      rbx, rax
0000000000006f1f         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000006f22         call       j_mbrtowc                                   ; mbrtowc
0000000000006f27         cmp        rax, 0xfffffffffffffffd
0000000000006f2b         mov        rbp, rax
0000000000006f2e         jbe        loc_6f50

0000000000006f30         test       r12, r12
0000000000006f33         je         loc_6f50

0000000000006f35         xor        edi, edi
0000000000006f37         call       hard_locale                                 ; hard_locale
0000000000006f3c         test       al, al
0000000000006f3e         jne        loc_6f50

0000000000006f40         movzx      eax, byte [r13]
0000000000006f45         mov        ebp, 0x1
0000000000006f4a         mov        dword [rbx], eax
0000000000006f4c         nop        dword [rax]

                     loc_6f50:
0000000000006f50         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000006f55         xor        rdx, qword [fs:0x28]
0000000000006f5e         mov        rax, rbp
0000000000006f61         jne        loc_6f6e

0000000000006f63         add        rsp, 0x18
0000000000006f67         pop        rbx
0000000000006f68         pop        rbp
0000000000006f69         pop        r12
0000000000006f6b         pop        r13
0000000000006f6d         ret
                        ; endp

                     loc_6f6e:
0000000000006f6e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000006f73         align      128                                         ; End of unwind block (FDE at 0x96ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     extract_trimmed_name:
0000000000006f80         push       rbp                                         ; Begin of unwind block (FDE at 0x96ec)
0000000000006f81         push       rbx
0000000000006f82         mov        rbp, rdi
0000000000006f85         mov        edi, 0x21
0000000000006f8a         sub        rsp, 0x8
0000000000006f8e         call       xmalloc                                     ; xmalloc
0000000000006f93         lea        rsi, qword [rbp+0x2c]                       ; argument "__src" for method j_strncpy
0000000000006f97         mov        rbx, rax
0000000000006f9a         mov        edx, 0x20                                   ; argument "__n" for method j_strncpy
0000000000006f9f         mov        rdi, rax                                    ; argument "__dest" for method j_strncpy
0000000000006fa2         call       j_strncpy                                   ; strncpy
0000000000006fa7         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
0000000000006faa         mov        byte [rbx+0x20], 0x0
0000000000006fae         call       j_strlen                                    ; strlen
0000000000006fb3         add        rax, rbx
0000000000006fb6         cmp        rbx, rax
0000000000006fb9         jae        loc_6fc1

                     loc_6fbb:
0000000000006fbb         cmp        byte [rax-1], 0x20                          ; CODE XREF=extract_trimmed_name+90
0000000000006fbf         je         loc_6fd0

                     loc_6fc1:
0000000000006fc1         add        rsp, 0x8                                    ; CODE XREF=extract_trimmed_name+57, extract_trimmed_name+92
0000000000006fc5         mov        rax, rbx
0000000000006fc8         pop        rbx
0000000000006fc9         pop        rbp
0000000000006fca         ret
                        ; endp
0000000000006fcb         align      16

                     loc_6fd0:
0000000000006fd0         sub        rax, 0x1                                    ; CODE XREF=extract_trimmed_name+63
0000000000006fd4         mov        byte [rax], 0x0
0000000000006fd7         cmp        rbx, rax
0000000000006fda         jne        loc_6fbb

0000000000006fdc         jmp        loc_6fc1
0000000000006fde         align      32                                          ; End of unwind block (FDE at 0x96ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72


                     read_utmp:
0000000000006fe0         push       r15                                         ; Begin of unwind block (FDE at 0x9718), CODE XREF=uptime+45
0000000000006fe2         push       r14
0000000000006fe4         xor        r14d, r14d
0000000000006fe7         push       r13
0000000000006fe9         mov        r13d, ecx
0000000000006fec         push       r12
0000000000006fee         push       rbp
0000000000006fef         push       rbx
0000000000006ff0         mov        r12d, r13d
0000000000006ff3         xor        ebx, ebx
0000000000006ff5         xor        ebp, ebp
0000000000006ff7         and        r12d, 0x2
0000000000006ffb         sub        rsp, 0x18
0000000000006fff         and        r13d, 0x1
0000000000007003         mov        qword [rsp+0x48+var_48], rsi
0000000000007007         mov        qword [rsp+0x48+var_40], rdx
000000000000700c         call       j_utmpxname                                 ; utmpxname
0000000000007011         call       j_setutxent                                 ; setutxent

                     loc_7016:
0000000000007016         call       j_getutxent                                 ; getutxent, CODE XREF=read_utmp+88, read_utmp+268
000000000000701b         test       rax, rax
000000000000701e         mov        r15, rax
0000000000007021         je         loc_7091

                     loc_7023:
0000000000007023         cmp        word [r15], 0x7                             ; CODE XREF=read_utmp+175
0000000000007028         jne        loc_7035

000000000000702a         cmp        byte [r15+0x2c], 0x0
000000000000702f         jne        loc_70c0

                     loc_7035:
0000000000007035         test       r12d, r12d                                  ; CODE XREF=read_utmp+72
0000000000007038         jne        loc_7016

                     loc_703a:
000000000000703a         cmp        rbp, rbx                                    ; CODE XREF=read_utmp+230, read_utmp+239, read_utmp+254
000000000000703d         je         loc_7100

                     loc_7043:
0000000000007043         lea        rax, qword [rbx+rbx*2]                      ; CODE XREF=read_utmp+277, read_utmp+339
0000000000007047         mov        rdx, qword [r15]
000000000000704a         mov        rsi, r15
000000000000704d         add        rbx, 0x1
0000000000007051         shl        rax, 0x7
0000000000007055         add        rax, r14
0000000000007058         mov        qword [rax], rdx
000000000000705b         lea        rdi, qword [rax+8]
000000000000705f         mov        rdx, qword [r15+0x178]
0000000000007066         and        rdi, 0xfffffffffffffff8
000000000000706a         mov        qword [rax+0x178], rdx
0000000000007071         sub        rax, rdi
0000000000007074         sub        rsi, rax
0000000000007077         add        eax, 0x180
000000000000707c         shr        eax, 0x3
000000000000707f         mov        ecx, eax
0000000000007081         rep movsq  qword [rdi], qword [rsi]
0000000000007084         call       j_getutxent                                 ; getutxent
0000000000007089         test       rax, rax
000000000000708c         mov        r15, rax
000000000000708f         jne        loc_7023

                     loc_7091:
0000000000007091         call       j_endutxent                                 ; endutxent, CODE XREF=read_utmp+65
0000000000007096         mov        rax, qword [rsp+0x48+var_48]
000000000000709a         mov        qword [rax], rbx
000000000000709d         mov        rax, qword [rsp+0x48+var_40]
00000000000070a2         mov        qword [rax], r14
00000000000070a5         add        rsp, 0x18
00000000000070a9         xor        eax, eax
00000000000070ab         pop        rbx
00000000000070ac         pop        rbp
00000000000070ad         pop        r12
00000000000070af         pop        r13
00000000000070b1         pop        r14
00000000000070b3         pop        r15
00000000000070b5         ret
                        ; endp
00000000000070b6         align      64

                     loc_70c0:
00000000000070c0         mov        edi, dword [r15+4]                          ; CODE XREF=read_utmp+79
00000000000070c4         test       edi, edi
00000000000070c6         jle        loc_703a

00000000000070cc         test       r13b, r13b
00000000000070cf         je         loc_703a

00000000000070d5         xor        esi, esi                                    ; argument "__sig" for method j_kill
00000000000070d7         call       j_kill                                      ; kill
00000000000070dc         test       eax, eax
00000000000070de         jns        loc_703a

00000000000070e4         call       j___errno_location                          ; __errno_location
00000000000070e9         cmp        dword [rax], 0x3
00000000000070ec         je         loc_7016

00000000000070f2         cmp        rbp, rbx
00000000000070f5         jne        loc_7043

00000000000070fb         nop        dword [rax+rax]

                     loc_7100:
0000000000007100         test       r14, r14                                    ; CODE XREF=read_utmp+93
0000000000007103         je         loc_7138

0000000000007105         movabs     rax, 0x38e38e38e38e37
000000000000710f         cmp        rbp, rax
0000000000007112         ja         loc_715d

0000000000007114         mov        rax, rbp
0000000000007117         shr        rax, 0x1
000000000000711a         lea        rbp, qword [rbp+rax+1]

                     loc_711f:
000000000000711f         lea        rsi, qword [rbp+rbp*2]                      ; CODE XREF=read_utmp+379
0000000000007124         mov        rdi, r14                                    ; argument #1 for method xrealloc
0000000000007127         shl        rsi, 0x7                                    ; argument #2 for method xrealloc
000000000000712b         call       xrealloc                                    ; xrealloc
0000000000007130         mov        r14, rax
0000000000007133         jmp        loc_7043

                     loc_7138:
0000000000007138         test       rbp, rbp                                    ; CODE XREF=read_utmp+291
000000000000713b         mov        eax, 0x1
0000000000007140         mov        edx, 0x180
0000000000007145         cmove      rbp, rax
0000000000007149         mov        rax, rdx
000000000000714c         xor        esi, esi
000000000000714e         mul        rbp
0000000000007151         jo         loc_7162

                     loc_7153:
0000000000007153         test       rax, rax                                    ; CODE XREF=read_utmp+391
0000000000007156         js         loc_715d

0000000000007158         test       rsi, rsi
000000000000715b         je         loc_711f

                     loc_715d:
000000000000715d         call       xalloc_die                                  ; xalloc_die, CODE XREF=read_utmp+306, read_utmp+374
                        ; endp

                     loc_7162:
0000000000007162         mov        esi, 0x1                                    ; CODE XREF=read_utmp+369
0000000000007167         jmp        loc_7153
0000000000007169         align      16                                          ; End of unwind block (FDE at 0x9718)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     setenv_TZ:
0000000000007170         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x9764), CODE XREF=revert_tz.part.1+36, set_tz+69
0000000000007173         je         loc_7190

0000000000007175         mov        rsi, rdi                                    ; argument "__value" for method j_setenv
0000000000007178         lea        rdi, qword [aMemoryExhauste+17]             ; argument "__name" for method j_setenv, 0x8820
000000000000717f         mov        edx, 0x1                                    ; argument "__replace" for method j_setenv
0000000000007184         jmp        j_setenv                                    ; setenv
                        ; endp
0000000000007189         align      16

                     loc_7190:
0000000000007190         lea        rdi, qword [aMemoryExhauste+17]             ; argument "__name" for method j_unsetenv, 0x8820, CODE XREF=setenv_TZ+3
0000000000007197         jmp        j_unsetenv                                  ; unsetenv
                        ; endp
000000000000719c         align      32                                          ; End of unwind block (FDE at 0x9764)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     tzfree.part.0:
00000000000071a0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x9778), CODE XREF=revert_tz.part.1+54, set_tz+103, tzfree+6
00000000000071a3         je         loc_71c8

00000000000071a5         push       rbx
00000000000071a6         nop        word [cs:rax+rax]

                     loc_71b0:
00000000000071b0         mov        rbx, qword [rdi]                            ; CODE XREF=tzfree.part.0+30
00000000000071b3         call       j_free                                      ; free
00000000000071b8         test       rbx, rbx
00000000000071bb         mov        rdi, rbx
00000000000071be         jne        loc_71b0

00000000000071c0         pop        rbx
00000000000071c1         ret
                        ; endp
00000000000071c2         align      8

                     loc_71c8:
00000000000071c8         ret                                                    ; CODE XREF=tzfree.part.0+3
                        ; endp
00000000000071ca         align      16                                          ; End of unwind block (FDE at 0x9778)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     revert_tz.part.1:
00000000000071d0         push       r13                                         ; Begin of unwind block (FDE at 0x9794), CODE XREF=localtime_rz+105, localtime_rz+152, mktime_z+108
00000000000071d2         push       r12
00000000000071d4         push       rbp
00000000000071d5         push       rbx
00000000000071d6         mov        rbp, rdi
00000000000071d9         sub        rsp, 0x8
00000000000071dd         call       j___errno_location                          ; __errno_location
00000000000071e2         cmp        byte [rbp+8], 0x0
00000000000071e6         mov        rbx, rax
00000000000071e9         mov        r12d, dword [rax]
00000000000071ec         lea        rdi, qword [rbp+9]
00000000000071f0         jne        loc_71f4

00000000000071f2         xor        edi, edi

                     loc_71f4:
00000000000071f4         call       setenv_TZ                                   ; setenv_TZ, CODE XREF=revert_tz.part.1+32
00000000000071f9         test       eax, eax
00000000000071fb         je         loc_7220

00000000000071fd         mov        r12d, dword [rbx]
0000000000007200         xor        r13d, r13d

                     loc_7203:
0000000000007203         mov        rdi, rbp                                    ; CODE XREF=revert_tz.part.1+91
0000000000007206         call       tzfree.part.0                               ; tzfree.part.0
000000000000720b         mov        dword [rbx], r12d
000000000000720e         add        rsp, 0x8
0000000000007212         mov        eax, r13d
0000000000007215         pop        rbx
0000000000007216         pop        rbp
0000000000007217         pop        r12
0000000000007219         pop        r13
000000000000721b         ret
                        ; endp
000000000000721c         align      32

                     loc_7220:
0000000000007220         call       j_tzset                                     ; tzset, CODE XREF=revert_tz.part.1+43
0000000000007225         mov        r13d, 0x1
000000000000722b         jmp        loc_7203
000000000000722d         align      16                                          ; End of unwind block (FDE at 0x9794)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     tzalloc:
0000000000007230         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x97d0), CODE XREF=save_abbr+236, set_tz+44
0000000000007233         push       r12
0000000000007235         push       rbp
0000000000007236         push       rbx
0000000000007237         je         loc_7298

0000000000007239         mov        r12, rdi
000000000000723c         call       j_strlen                                    ; strlen
0000000000007241         lea        rbp, qword [rax+1]
0000000000007245         mov        edi, 0x76
000000000000724a         cmp        rbp, 0x76
000000000000724e         cmovae     rdi, rbp
0000000000007252         add        rdi, 0x11
0000000000007256         and        rdi, 0xfffffffffffffff8                     ; argument "__size" for method j_malloc
000000000000725a         call       j_malloc                                    ; malloc
000000000000725f         test       rax, rax
0000000000007262         mov        rbx, rax
0000000000007265         je         loc_728b

0000000000007267         mov        qword [rax], 0x0
000000000000726e         lea        rdi, qword [rbx+9]                          ; argument "__dest" for method j_memcpy
0000000000007272         mov        eax, 0x1
0000000000007277         mov        word [rbx+8], ax
000000000000727b         mov        rdx, rbp                                    ; argument "__n" for method j_memcpy
000000000000727e         mov        rsi, r12                                    ; argument "__src" for method j_memcpy
0000000000007281         call       j_memcpy                                    ; memcpy
0000000000007286         mov        byte [rbx+rbp+9], 0x0

                     loc_728b:
000000000000728b         mov        rax, rbx                                    ; CODE XREF=tzalloc+53, tzalloc+120
000000000000728e         pop        rbx
000000000000728f         pop        rbp
0000000000007290         pop        r12
0000000000007292         ret
                        ; endp
0000000000007293         align      8

                     loc_7298:
0000000000007298         mov        edi, 0x80                                   ; argument "__size" for method j_malloc, CODE XREF=tzalloc+7
000000000000729d         call       j_malloc                                    ; malloc
00000000000072a2         test       rax, rax
00000000000072a5         mov        rbx, rax
00000000000072a8         je         loc_728b

00000000000072aa         xor        edx, edx
00000000000072ac         mov        qword [rbx], 0x0
00000000000072b3         mov        rax, rbx
00000000000072b6         mov        word [rbx+8], dx
00000000000072ba         pop        rbx
00000000000072bb         pop        rbp
00000000000072bc         pop        r12
00000000000072be         ret
                        ; endp
00000000000072bf         align      64                                          ; End of unwind block (FDE at 0x97d0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     save_abbr:
00000000000072c0         push       r15                                         ; Begin of unwind block (FDE at 0x9808), CODE XREF=localtime_rz+59, mktime_z+81
00000000000072c2         push       r14
00000000000072c4         mov        eax, 0x1
00000000000072c9         push       r13
00000000000072cb         push       r12
00000000000072cd         push       rbp
00000000000072ce         push       rbx
00000000000072cf         sub        rsp, 0x8
00000000000072d3         mov        rbp, qword [rsi+0x30]
00000000000072d7         test       rbp, rbp
00000000000072da         je         loc_7370

00000000000072e0         cmp        rsi, rbp
00000000000072e3         mov        r12, rdi
00000000000072e6         mov        r13, rsi
00000000000072e9         ja         loc_72f4

00000000000072eb         lea        rdx, qword [rsi+0x38]
00000000000072ef         cmp        rbp, rdx
00000000000072f2         jb         loc_7370

                     loc_72f4:
00000000000072f4         cmp        byte [rbp], 0x0                             ; CODE XREF=save_abbr+41
00000000000072f8         lea        rbx, qword [r12+9]
00000000000072fd         je         loc_7360

00000000000072ff         nop

                     loc_7300:
0000000000007300         mov        rsi, rbp                                    ; argument "__s2" for method j_strcmp, CODE XREF=save_abbr+118, save_abbr+127
0000000000007303         mov        rdi, rbx                                    ; argument "__s1" for method j_strcmp
0000000000007306         call       j_strcmp                                    ; strcmp
000000000000730b         test       eax, eax
000000000000730d         je         loc_7367

                     loc_730f:
000000000000730f         cmp        byte [rbx], 0x0                             ; CODE XREF=save_abbr+149
0000000000007312         jne        loc_7326

0000000000007314         lea        r14, qword [r12+9]
0000000000007319         cmp        r14, rbx
000000000000731c         jne        loc_7380

000000000000731e         cmp        byte [r12+8], 0x0
0000000000007324         je         loc_7380

                     loc_7326:
0000000000007326         mov        rdi, rbx                                    ; argument "__s" for method j_strlen, CODE XREF=save_abbr+82
0000000000007329         call       j_strlen                                    ; strlen
000000000000732e         lea        rbx, qword [rbx+rax+1]
0000000000007333         cmp        byte [rbx], 0x0
0000000000007336         jne        loc_7300

0000000000007338         mov        rax, qword [r12]
000000000000733c         test       rax, rax
000000000000733f         je         loc_7300

0000000000007341         lea        rbx, qword [rax+9]
0000000000007345         mov        rsi, rbp                                    ; argument "__s2" for method j_strcmp
0000000000007348         mov        r12, rax
000000000000734b         mov        rdi, rbx                                    ; argument "__s1" for method j_strcmp
000000000000734e         call       j_strcmp                                    ; strcmp
0000000000007353         test       eax, eax
0000000000007355         jne        loc_730f

0000000000007357         jmp        loc_7367
0000000000007359         align      32

                     loc_7360:
0000000000007360         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x8501, CODE XREF=save_abbr+61

                     loc_7367:
0000000000007367         mov        qword [r13+0x30], rbx                       ; CODE XREF=save_abbr+77, save_abbr+151, save_abbr+263, save_abbr+305
000000000000736b         mov        eax, 0x1

                     loc_7370:
0000000000007370         add        rsp, 0x8                                    ; CODE XREF=save_abbr+26, save_abbr+50, save_abbr+253, save_abbr+285
0000000000007374         pop        rbx
0000000000007375         pop        rbp
0000000000007376         pop        r12
0000000000007378         pop        r13
000000000000737a         pop        r14
000000000000737c         pop        r15
000000000000737e         ret
                        ; endp
000000000000737f         align      128

                     loc_7380:
0000000000007380         mov        rdi, rbp                                    ; argument "__s" for method j_strlen, CODE XREF=save_abbr+92, save_abbr+100
0000000000007383         call       j_strlen                                    ; strlen
0000000000007388         lea        rdx, qword [rax+1]
000000000000738c         mov        r15, rax
000000000000738f         mov        rax, rbx
0000000000007392         sub        rax, r14
0000000000007395         mov        rcx, rax
0000000000007398         not        rcx
000000000000739b         cmp        rcx, rdx
000000000000739e         jb         loc_73d0

00000000000073a0         add        rax, rdx
00000000000073a3         cmp        rax, 0x76
00000000000073a7         jbe        loc_73e0

00000000000073a9         mov        rdi, rbp
00000000000073ac         call       tzalloc                                     ; tzalloc
00000000000073b1         mov        rbx, rax
00000000000073b4         mov        qword [r12], rax
00000000000073b8         xor        eax, eax
00000000000073ba         test       rbx, rbx
00000000000073bd         je         loc_7370

00000000000073bf         mov        byte [rbx+8], 0x0
00000000000073c3         add        rbx, 0x9
00000000000073c7         jmp        loc_7367
00000000000073c9         align      16

                     loc_73d0:
00000000000073d0         call       j___errno_location                          ; __errno_location, CODE XREF=save_abbr+222
00000000000073d5         mov        dword [rax], 0xc
00000000000073db         xor        eax, eax
00000000000073dd         jmp        loc_7370
00000000000073df         align      32

                     loc_73e0:
00000000000073e0         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy, CODE XREF=save_abbr+231
00000000000073e3         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
00000000000073e6         call       j_memcpy                                    ; memcpy
00000000000073eb         mov        byte [rbx+r15+1], 0x0
00000000000073f1         jmp        loc_7367
00000000000073f6         align      1024                                        ; End of unwind block (FDE at 0x9808)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32


                     set_tz:
0000000000007400         push       r12                                         ; Begin of unwind block (FDE at 0x9854), CODE XREF=localtime_rz+24, mktime_z+39
0000000000007402         push       rbp
0000000000007403         mov        rbp, rdi
0000000000007406         push       rbx
0000000000007407         lea        rdi, qword [aMemoryExhauste+17]             ; argument "__name" for method j_getenv, 0x8820
000000000000740e         sub        rsp, 0x10
0000000000007412         call       j_getenv                                    ; getenv
0000000000007417         test       rax, rax
000000000000741a         mov        rbx, rax
000000000000741d         je         loc_74b8

0000000000007423         cmp        byte [rbp+8], 0x0
0000000000007427         jne        loc_7490

                     loc_7429:
0000000000007429         mov        rdi, rbx                                    ; CODE XREF=set_tz+164, set_tz+194
000000000000742c         call       tzalloc                                     ; tzalloc
0000000000007431         test       rax, rax
0000000000007434         mov        r12, rax
0000000000007437         je         loc_747d

0000000000007439         xor        edi, edi
000000000000743b         cmp        byte [rbp+8], 0x0
000000000000743f         je         loc_7445

0000000000007441         lea        rdi, qword [rbp+9]

                     loc_7445:
0000000000007445         call       setenv_TZ                                   ; setenv_TZ, CODE XREF=set_tz+63
000000000000744a         test       eax, eax
000000000000744c         je         loc_74d8

0000000000007452         call       j___errno_location                          ; __errno_location
0000000000007457         cmp        r12, 0x1
000000000000745b         mov        ebx, dword [rax]
000000000000745d         je         loc_7478

000000000000745f         mov        rdi, r12
0000000000007462         mov        qword [rsp+0x28+var_20], rax
0000000000007467         call       tzfree.part.0                               ; tzfree.part.0
000000000000746c         mov        rax, qword [rsp+0x28+var_20]
0000000000007471         nop        dword [rax]

                     loc_7478:
0000000000007478         mov        dword [rax], ebx                            ; CODE XREF=set_tz+93
000000000000747a         xor        r12d, r12d

                     loc_747d:
000000000000747d         add        rsp, 0x10                                   ; CODE XREF=set_tz+55, set_tz+221
0000000000007481         mov        rax, r12
0000000000007484         pop        rbx
0000000000007485         pop        rbp
0000000000007486         pop        r12
0000000000007488         ret
                        ; endp
0000000000007489         align      16

                     loc_7490:
0000000000007490         lea        rdi, qword [rbp+9]                          ; argument "__s1" for method j_strcmp, CODE XREF=set_tz+39
0000000000007494         mov        rsi, rax                                    ; argument "__s2" for method j_strcmp
0000000000007497         mov        r12d, 0x1
000000000000749d         call       j_strcmp                                    ; strcmp
00000000000074a2         test       eax, eax
00000000000074a4         jne        loc_7429

00000000000074a6         add        rsp, 0x10
00000000000074aa         mov        rax, r12
00000000000074ad         pop        rbx
00000000000074ae         pop        rbp
00000000000074af         pop        r12
00000000000074b1         ret
                        ; endp
00000000000074b2         align      8

                     loc_74b8:
00000000000074b8         cmp        byte [rbp+8], 0x0                           ; CODE XREF=set_tz+29
00000000000074bc         mov        r12d, 0x1
00000000000074c2         jne        loc_7429

00000000000074c8         add        rsp, 0x10
00000000000074cc         mov        rax, r12
00000000000074cf         pop        rbx
00000000000074d0         pop        rbp
00000000000074d1         pop        r12
00000000000074d3         ret
                        ; endp
00000000000074d4         align      8

                     loc_74d8:
00000000000074d8         call       j_tzset                                     ; tzset, CODE XREF=set_tz+76
00000000000074dd         jmp        loc_747d
00000000000074df         align      32                                          ; End of unwind block (FDE at 0x9854)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     tzfree:
00000000000074e0         cmp        rdi, 0x1                                    ; Begin of unwind block (FDE at 0x98a8)
00000000000074e4         je         loc_74eb

00000000000074e6         jmp        tzfree.part.0                               ; tzfree.part.0
                        ; endp

                     loc_74eb:
00000000000074eb         ret                                                    ; CODE XREF=tzfree+4
                        ; endp
00000000000074ec         align      16                                          ; End of unwind block (FDE at 0x98a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     localtime_rz:
00000000000074f0         push       r13                                         ; Begin of unwind block (FDE at 0x98bc)
00000000000074f2         push       r12
00000000000074f4         push       rbp
00000000000074f5         push       rbx
00000000000074f6         mov        rbp, rsi
00000000000074f9         sub        rsp, 0x8
00000000000074fd         test       rdi, rdi
0000000000007500         je         loc_7570

0000000000007502         mov        r13, rdx
0000000000007505         mov        rbx, rdi
0000000000007508         call       set_tz                                      ; set_tz
000000000000750d         test       rax, rax
0000000000007510         mov        r12, rax
0000000000007513         je         loc_755e

0000000000007515         mov        rsi, r13                                    ; argument "__tp" for method j_localtime_r
0000000000007518         mov        rdi, rbp                                    ; argument "__timer" for method j_localtime_r
000000000000751b         call       j_localtime_r                               ; localtime_r
0000000000007520         test       rax, rax
0000000000007523         je         loc_7550

0000000000007525         mov        rsi, r13
0000000000007528         mov        rdi, rbx
000000000000752b         call       save_abbr                                   ; save_abbr
0000000000007530         test       al, al
0000000000007532         je         loc_7550

0000000000007534         cmp        r12, 0x1
0000000000007538         jne        loc_7585

                     loc_753a:
000000000000753a         add        rsp, 0x8                                    ; CODE XREF=localtime_rz+159
000000000000753e         mov        rax, r13
0000000000007541         pop        rbx
0000000000007542         pop        rbp
0000000000007543         pop        r12
0000000000007545         pop        r13
0000000000007547         ret
                        ; endp
0000000000007548         align      16

                     loc_7550:
0000000000007550         cmp        r12, 0x1                                    ; CODE XREF=localtime_rz+51, localtime_rz+66
0000000000007554         je         loc_755e

0000000000007556         mov        rdi, r12
0000000000007559         call       revert_tz.part.1                            ; revert_tz.part.1

                     loc_755e:
000000000000755e         add        rsp, 0x8                                    ; CODE XREF=localtime_rz+35, localtime_rz+100, localtime_rz+161
0000000000007562         xor        eax, eax
0000000000007564         pop        rbx
0000000000007565         pop        rbp
0000000000007566         pop        r12
0000000000007568         pop        r13
000000000000756a         ret
                        ; endp
000000000000756b         align      16

                     loc_7570:
0000000000007570         add        rsp, 0x8                                    ; CODE XREF=localtime_rz+16
0000000000007574         mov        rdi, rbp                                    ; argument "__timer" for method j_gmtime_r
0000000000007577         mov        rsi, rdx                                    ; argument "__tp" for method j_gmtime_r
000000000000757a         pop        rbx
000000000000757b         pop        rbp
000000000000757c         pop        r12
000000000000757e         pop        r13
0000000000007580         jmp        j_gmtime_r                                  ; gmtime_r
                        ; endp

                     loc_7585:
0000000000007585         mov        rdi, r12                                    ; CODE XREF=localtime_rz+72
0000000000007588         call       revert_tz.part.1                            ; revert_tz.part.1
000000000000758d         test       al, al
000000000000758f         jne        loc_753a

0000000000007591         jmp        loc_755e
0000000000007593         align      32                                          ; End of unwind block (FDE at 0x98bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_38: int32_t, -56
        ;    var_44: int32_t, -68
        ;    var_48: int32_t, -72
        ;    var_4C: int32_t, -76
        ;    var_50: int32_t, -80
        ;    var_54: int32_t, -84
        ;    var_58: int32_t, -88
        ;    var_60: int64_t, -96


                     mktime_z:
00000000000075a0         push       r12                                         ; Begin of unwind block (FDE at 0x991c), CODE XREF=sub_2e10+571
00000000000075a2         push       rbp
00000000000075a3         push       rbx
00000000000075a4         mov        rbx, rsi
00000000000075a7         sub        rsp, 0x50
00000000000075ab         mov        rax, qword [fs:0x28]
00000000000075b4         mov        qword [rsp+0x68+var_20], rax
00000000000075b9         xor        eax, eax
00000000000075bb         test       rdi, rdi
00000000000075be         je         loc_76c0

00000000000075c4         mov        rbp, rdi
00000000000075c7         call       set_tz                                      ; set_tz
00000000000075cc         test       rax, rax
00000000000075cf         mov        r12, rax
00000000000075d2         je         loc_76d0

00000000000075d8         mov        rdi, rbx                                    ; argument "__tp" for method j_mktime
00000000000075db         call       j_mktime                                    ; mktime
00000000000075e0         cmp        rax, 0xffffffffffffffff
00000000000075e4         mov        qword [rsp+0x68+var_60], rax
00000000000075e9         je         loc_7640

                     loc_75eb:
00000000000075eb         mov        rsi, rbx                                    ; CODE XREF=mktime_z+269
00000000000075ee         mov        rdi, rbp
00000000000075f1         call       save_abbr                                   ; save_abbr
00000000000075f6         test       al, al
00000000000075f8         jne        loc_7603

00000000000075fa         mov        qword [rsp+0x68+var_60], 0xffffffffffffffff

                     loc_7603:
0000000000007603         cmp        r12, 0x1                                    ; CODE XREF=mktime_z+88, mktime_z+178, mktime_z+261, mktime_z+275
0000000000007607         je         loc_7619

0000000000007609         mov        rdi, r12
000000000000760c         call       revert_tz.part.1                            ; revert_tz.part.1
0000000000007611         test       al, al
0000000000007613         je         loc_76d0

                     loc_7619:
0000000000007619         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=mktime_z+103

                     loc_761e:
000000000000761e         mov        rcx, qword [rsp+0x68+var_20]                ; CODE XREF=mktime_z+296, mktime_z+311
0000000000007623         xor        rcx, qword [fs:0x28]
000000000000762c         jne        loc_76dc

0000000000007632         add        rsp, 0x50
0000000000007636         pop        rbx
0000000000007637         pop        rbp
0000000000007638         pop        r12
000000000000763a         ret
                        ; endp
000000000000763b         align      64

                     loc_7640:
0000000000007640         lea        rsi, qword [rsp+0x68+var_58]                ; argument "__tp" for method j_localtime_r, CODE XREF=mktime_z+73
0000000000007645         lea        rdi, qword [rsp+0x68+var_60]                ; argument "__timer" for method j_localtime_r
000000000000764a         call       j_localtime_r                               ; localtime_r
000000000000764f         test       rax, rax
0000000000007652         je         loc_7603

0000000000007654         mov        eax, dword [rbx]
0000000000007656         mov        edx, dword [rbx+4]
0000000000007659         xor        eax, dword [rsp+0x68+var_58]
000000000000765d         xor        edx, dword [rsp+0x68+var_54]
0000000000007661         mov        ecx, dword [rsp+0x68+var_38]
0000000000007665         or         eax, edx
0000000000007667         mov        edx, dword [rbx+8]
000000000000766a         xor        edx, dword [rsp+0x68+var_50]
000000000000766e         or         eax, edx
0000000000007670         mov        edx, dword [rbx+0xc]
0000000000007673         xor        edx, dword [rsp+0x68+var_4C]
0000000000007677         or         eax, edx
0000000000007679         mov        edx, dword [rbx+0x10]
000000000000767c         xor        edx, dword [rsp+0x68+var_48]
0000000000007680         or         eax, edx
0000000000007682         mov        edx, dword [rbx+0x14]
0000000000007685         xor        edx, dword [rsp+0x68+var_44]
0000000000007689         or         eax, edx
000000000000768b         mov        edx, dword [rbx+0x20]
000000000000768e         test       edx, edx
0000000000007690         sete       dil
0000000000007694         test       ecx, ecx
0000000000007696         sete       sil
000000000000769a         cmp        dil, sil
000000000000769d         je         loc_76ab

000000000000769f         test       edx, edx
00000000000076a1         js         loc_76ab

00000000000076a3         test       ecx, ecx
00000000000076a5         jns        loc_7603

                     loc_76ab:
00000000000076ab         test       eax, eax                                    ; CODE XREF=mktime_z+253, mktime_z+257
00000000000076ad         je         loc_75eb

00000000000076b3         jmp        loc_7603
00000000000076b8         align      64

                     loc_76c0:
00000000000076c0         mov        rdi, rsi                                    ; argument "__tp" for method j_timegm, CODE XREF=mktime_z+30
00000000000076c3         call       j_timegm                                    ; timegm
00000000000076c8         jmp        loc_761e
00000000000076cd         align      16

                     loc_76d0:
00000000000076d0         mov        rax, 0xffffffffffffffff                     ; CODE XREF=mktime_z+50, mktime_z+115
00000000000076d7         jmp        loc_761e

                     loc_76dc:
00000000000076dc         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=mktime_z+140
                        ; endp
00000000000076e1         align      16                                          ; End of unwind block (FDE at 0x991c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
00000000000076f0         push       r12                                         ; Begin of unwind block (FDE at 0x9954), CODE XREF=close_stdout+13, close_stdout+51
00000000000076f2         push       rbp
00000000000076f3         mov        rbp, rdi
00000000000076f6         push       rbx
00000000000076f7         call       j___fpending                                ; __fpending
00000000000076fc         mov        ebx, dword [rbp]
00000000000076ff         mov        rdi, rbp
0000000000007702         mov        r12, rax
0000000000007705         call       rpl_fclose                                  ; rpl_fclose
000000000000770a         and        ebx, 0x20
000000000000770d         test       ebx, ebx
000000000000770f         jne        loc_7728

0000000000007711         test       eax, eax
0000000000007713         je         loc_771f

0000000000007715         test       r12, r12
0000000000007718         mov        eax, 0xffffffff
000000000000771d         je         loc_7758

                     loc_771f:
000000000000771f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000007720         pop        rbp
0000000000007721         pop        r12
0000000000007723         ret
                        ; endp
0000000000007724         align      8

                     loc_7728:
0000000000007728         test       eax, eax                                    ; CODE XREF=close_stream+31
000000000000772a         jne        loc_7748

000000000000772c         call       j___errno_location                          ; __errno_location
0000000000007731         mov        dword [rax], 0x0
0000000000007737         mov        eax, 0xffffffff
000000000000773c         pop        rbx
000000000000773d         pop        rbp
000000000000773e         pop        r12
0000000000007740         ret
                        ; endp
0000000000007741         align      8

                     loc_7748:
0000000000007748         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000007749         mov        eax, 0xffffffff
000000000000774e         pop        rbp
000000000000774f         pop        r12
0000000000007751         ret
                        ; endp
0000000000007752         align      8

                     loc_7758:
0000000000007758         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
000000000000775d         cmp        dword [rax], 0x9
0000000000007760         pop        rbx
0000000000007761         pop        rbp
0000000000007762         pop        r12
0000000000007764         setne      al
0000000000007767         movzx      eax, al
000000000000776a         neg        eax
000000000000776c         ret
                        ; endp
000000000000776d         align      16                                          ; End of unwind block (FDE at 0x9954)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000007770         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x99a4), CODE XREF=rpl_mbrtowc+71
0000000000007774         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000007776         call       j_setlocale                                 ; setlocale
000000000000777b         mov        rdx, rax
000000000000777e         mov        eax, 0x1
0000000000007783         test       rdx, rdx
0000000000007786         je         loc_77a5

0000000000007788         lea        rdi, qword [a831+5]                         ; 0x7d5d
000000000000778f         mov        ecx, 0x2
0000000000007794         mov        rsi, rdx
0000000000007797         rep  cmpsb byte [rsi], byte [rdi]
0000000000007799         seta       cl
000000000000779c         sbb        cl, 0x0
000000000000779f         xor        eax, eax
00000000000077a1         test       cl, cl
00000000000077a3         jne        loc_77b0

                     loc_77a5:
00000000000077a5         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
00000000000077a9         ret
                        ; endp
00000000000077aa         align      16

                     loc_77b0:
00000000000077b0         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
00000000000077b7         mov        ecx, 0x6
00000000000077bc         mov        rsi, rdx
00000000000077bf         rep  cmpsb byte [rsi], byte [rdi]
00000000000077c1         seta       al
00000000000077c4         sbb        al, 0x0
00000000000077c6         test       al, al
00000000000077c8         setne      al
00000000000077cb         add        rsp, 0x8
00000000000077cf         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
00000000000077d0         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0x99a4), Begin of unwind block (FDE at 0x99c4), CODE XREF=gettext_quote.part.1+11
00000000000077d4         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
00000000000077d9         call       j_nl_langinfo                               ; nl_langinfo
00000000000077de         test       rax, rax
00000000000077e1         je         loc_7800

00000000000077e3         cmp        byte [rax], 0x0
00000000000077e6         lea        rdx, qword [aAscii]                         ; "ASCII"
00000000000077ed         cmove      rax, rdx
00000000000077f1         add        rsp, 0x8
00000000000077f5         ret
                        ; endp
00000000000077f6         align      2048

                     loc_7800:
0000000000007800         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000007807         add        rsp, 0x8
000000000000780b         ret
                        ; endp
000000000000780c         align      16                                          ; End of unwind block (FDE at 0x99c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000007810         push       r15                                         ; Begin of unwind block (FDE at 0x99e4), DATA XREF=_start+22
0000000000007812         push       r14
0000000000007814         mov        r15, rdx
0000000000007817         push       r13
0000000000007819         push       r12
000000000000781b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000007822         push       rbp
0000000000007823         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
000000000000782a         push       rbx
000000000000782b         mov        r13d, edi
000000000000782e         mov        r14, rsi
0000000000007831         sub        rbp, r12
0000000000007834         sub        rsp, 0x8
0000000000007838         sar        rbp, 0x3
000000000000783c         call       _init                                       ; _init
0000000000007841         test       rbp, rbp
0000000000007844         je         loc_7866

0000000000007846         xor        ebx, ebx
0000000000007848         nop        dword [rax+rax]

                     loc_7850:
0000000000007850         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000007853         mov        rsi, r14
0000000000007856         mov        edi, r13d
0000000000007859         call       qword [r12+rbx*8]
000000000000785d         add        rbx, 0x1
0000000000007861         cmp        rbp, rbx
0000000000007864         jne        loc_7850

                     loc_7866:
0000000000007866         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
000000000000786a         pop        rbx
000000000000786b         pop        rbp
000000000000786c         pop        r12
000000000000786e         pop        r13
0000000000007870         pop        r14
0000000000007872         pop        r15
0000000000007874         ret
                        ; endp
0000000000007875         align      128                                         ; End of unwind block (FDE at 0x99e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000007880         ret                                                    ; Begin of unwind block (FDE at 0x9a2c), DATA XREF=_start+15
                        ; endp
0000000000007882         align      16                                          ; End of unwind block (FDE at 0x9a2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000007890         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x9a44), __dso_handle, CODE XREF=main+74
0000000000007897         xor        esi, esi
0000000000007899         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
000000000000789e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x9a44)
000000000000789f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x78a0; 0x78a9[ (9 bytes)
        ; File offset : [30880; 30889[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
00000000000078a0         sub        rsp, 0x8
00000000000078a4         add        rsp, 0x8
00000000000078a8         ret
                        ; endp
00000000000078a9         db  0x00 ; '.'
00000000000078aa         db  0x00 ; '.'
00000000000078ab         db  0x00 ; '.'
00000000000078ac         db  0x00 ; '.'
00000000000078ad         db  0x00 ; '.'
00000000000078ae         db  0x00 ; '.'
00000000000078af         db  0x00 ; '.'
00000000000078b0         db  0x00 ; '.'
00000000000078b1         db  0x00 ; '.'
00000000000078b2         db  0x00 ; '.'
00000000000078b3         db  0x00 ; '.'
00000000000078b4         db  0x00 ; '.'
00000000000078b5         db  0x00 ; '.'
00000000000078b6         db  0x00 ; '.'
00000000000078b7         db  0x00 ; '.'
00000000000078b8         db  0x00 ; '.'
00000000000078b9         db  0x00 ; '.'
00000000000078ba         db  0x00 ; '.'
00000000000078bb         db  0x00 ; '.'
00000000000078bc         db  0x00 ; '.'
00000000000078bd         db  0x00 ; '.'
00000000000078be         db  0x00 ; '.'
00000000000078bf         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x78c0; 0x882f[ (3951 bytes)
        ; File offset : [30912; 34863[ (3951 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
00000000000078c0         db  0x01 ; '.'
00000000000078c1         db  0x00 ; '.'
00000000000078c2         db  0x02 ; '.'
00000000000078c3         db  0x00 ; '.'
                     aProcuptime:
00000000000078c4         db         "/proc/uptime", 0                           ; DATA XREF=print_uptime+13
                     aCouldntGetBoot:
00000000000078d1         db         "couldn't get boot time", 0                 ; DATA XREF=print_uptime+999
                     aHms:
00000000000078e8         db         " %H:%M:%S  ", 0                            ; DATA XREF=print_uptime+374
00000000000078f4         db  0x20 ; ' '                                         ; DATA XREF=print_uptime+760
00000000000078f5         db  0x3f ; '?'
00000000000078f6         db  0x3f ; '?'
00000000000078f7         db  0x3a ; ':'
00000000000078f8         db  0x3f ; '?'
00000000000078f9         db  0x3f ; '?'
00000000000078fa         db  0x3f ; '?'
00000000000078fb         db  0x3f ; '?'
00000000000078fc         db  0x20 ; ' '
00000000000078fd         db  0x20 ; ' '
00000000000078fe         db  0x00 ; '.'
00000000000078ff         db  0x75 ; 'u'                                         ; DATA XREF=print_uptime+838
0000000000007900         db  0x70 ; 'p'
0000000000007901         db  0x20 ; ' '
0000000000007902         db  0x3f ; '?'
0000000000007903         db  0x3f ; '?'
0000000000007904         db  0x3f ; '?'
0000000000007905         db  0x3f ; '?'
0000000000007906         db  0x20 ; ' '
0000000000007907         db  0x64 ; 'd'
0000000000007908         db  0x61 ; 'a'
0000000000007909         db  0x79 ; 'y'
000000000000790a         db  0x73 ; 's'
000000000000790b         db  0x20 ; ' '
000000000000790c         db  0x3f ; '?'
000000000000790d         db  0x3f ; '?'
000000000000790e         db  0x3a ; ':'
000000000000790f         db  0x3f ; '?'
0000000000007910         db  0x3f ; '?'
0000000000007911         db  0x2c ; ','
0000000000007912         db  0x20 ; ' '
0000000000007913         db  0x20 ; ' '
0000000000007914         db  0x00 ; '.'
                     aUpLdDays2d02d:
0000000000007915         db         "up %ld days %2d:%02d,  ", 0                ; DATA XREF=print_uptime+430
                     aUpLdDay2d02d:
000000000000792d         db         "up %ld day %2d:%02d,  ", 0                 ; DATA XREF=print_uptime+437
                     aUp2d02d:
0000000000007944         db         "up  %2d:%02d,  ", 0                        ; DATA XREF=print_uptime+794
                     aLuUsers:
0000000000007954         db         "%lu users", 0                              ; DATA XREF=print_uptime+483
                     aLuUser:
000000000000795e         db         "%lu user", 0                               ; DATA XREF=print_uptime+490
                     aLoadAverage2f:
0000000000007967         db         ",  load average: %.2f", 0                  ; DATA XREF=print_uptime+608
                     a2f:
000000000000797d         db         ", %.2f", 0                                 ; DATA XREF=print_uptime+668, print_uptime+701
                     aUsageSOptionFi:
0000000000007984         db         "Usage: %s [OPTION]... [FILE]\n", 0         ; DATA XREF=usage+93
                     aVarlogwtmp:
00000000000079a2         db         "/var/log/wtmp", 0                          ; DATA XREF=usage+212
                     aVarrunutmp:
00000000000079b0         db         "/var/run/utmp", 0                          ; DATA XREF=main+197, usage+219
00000000000079be         db  0x5b ; '['                                         ; DATA XREF=usage+322
00000000000079bf         db  0x00 ; '.'
                     aTestInvocation:
00000000000079c0         db         "test invocation", 0                        ; DATA XREF=usage+370
                     aMulticallInvoc:
00000000000079d0         db         "Multi-call invocation", 0                  ; DATA XREF=usage+414
                     aSha224sum:
00000000000079e6         db         "sha224sum", 0                              ; DATA XREF=usage+426
                     aSha2Utilities:
00000000000079f0         db         "sha2 utilities", 0                         ; DATA XREF=usage+438
                     aSha256sum:
00000000000079ff         db         "sha256sum", 0                              ; DATA XREF=usage+329
                     aSha384sum:
0000000000007a09         db         "sha384sum", 0                              ; DATA XREF=usage+310
                     aSha512sum:
0000000000007a13         db         "sha512sum", 0                              ; DATA XREF=usage+382
                     aNsOnlineHelpSn:
0000000000007a1d         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+514
0000000000007a34         db  0x47 ; 'G'                                         ; DATA XREF=main+99, usage+542, usage+735, emit_bug_reporting_address+68
0000000000007a35         db  0x4e ; 'N'
0000000000007a36         db  0x55 ; 'U'
0000000000007a37         db  0x20 ; ' '
                     aCoreutils:
0000000000007a38         db         "coreutils", 0                              ; DATA XREF=main+43, main+55, usage+397
0000000000007a42         db  0x65 ; 'e'                                         ; DATA XREF=usage+581, usage+774
0000000000007a43         db  0x6e ; 'n'
0000000000007a44         db  0x5f ; '_'
0000000000007a45         db  0x00 ; '.'
                     aFullDocumentat:
0000000000007a46         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+609, usage+798
                     aUsrlocalsharel:
0000000000007a61         db         "/usr/local/share/locale", 0                ; DATA XREF=main+36
                     aKavehGhazi:
0000000000007a79         db         "Kaveh Ghazi", 0                            ; DATA XREF=main+79
                     aDavidMackenzie:
0000000000007a85         db         "David MacKenzie", 0                        ; DATA XREF=main+114
                     aJosephArceneau:
0000000000007a95         db         "Joseph Arceneaux", 0                       ; DATA XREF=main+133
                     aExtraOperandS:
0000000000007aa6         db         "extra operand %s", 0                       ; DATA XREF=main+226
0000000000007ab7         align      8
                     aTrySHelpForMor:
0000000000007ab8         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
0000000000007adf         align      32
                     aPrintTheCurren:
0000000000007ae0         db         "Print the current time, the length of time the system has been up,\nthe number of users on the system, and the average number of jobs\nin the run queue over the last 1, 5 and 15 minutes.", 0 ; DATA XREF=usage+125
0000000000007b99         align      32
                     aProcessesInnan:
0000000000007ba0         db         "  Processes in\nan uninterruptible sleep state also contribute to the load average.\n", 0 ; DATA XREF=usage+159
0000000000007bf4         align      8
                     aIfFileIsNotSpe:
0000000000007bf8         db         "If FILE is not specified, use %s.  %s as FILE is common.\n\n", 0 ; DATA XREF=usage+193
0000000000007c33         align      8
                     aHelpDisplayThi:
0000000000007c38         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+248
0000000000007c65         align      8
                     aVersionOutputV:
0000000000007c68         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+285
0000000000007c9e         align      32
                     aHttpswwwgnuorg:
0000000000007ca0         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+535, usage+635, usage+728, usage+838, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000007cc8         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+879
0000000000007d0f         align      16
                     aOrAvailableLoc:
0000000000007d10         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+678
0000000000007d43         align      2
0000000000007d56         db  0xe0 ; '.'
0000000000007d57         db  0x43 ; 'C'
                     a831:
0000000000007d58         db         "8.31", 0                                   ; DATA XREF=Version
0000000000007d5d         db  0x43 ; 'C'                                         ; DATA XREF=c_strtod+80, hard_locale+24
0000000000007d5e         db  0x00 ; '.'
                     aWriteError:
0000000000007d5f         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
0000000000007d6b         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
                     aHm:
0000000000007d72         db         "%H:%M", 0                                  ; DATA XREF=sub_2e10+333
                     aHms_7d78:        // aHms
0000000000007d78         db         "%H:%M:%S", 0                               ; DATA XREF=sub_3050+826
                     aYmd:
0000000000007d81         db         "%Y-%m-%d", 0                               ; DATA XREF=sub_3050+1630, sub_4260+415
                     aMdy:
0000000000007d8a         db         "%m/%d/%y", 0                               ; DATA XREF=sub_3050+1575
0000000000007d93         db  0x00 ; '.'
0000000000007d94         db  0x39 ; '9'                                         ; DATA XREF=__strftime_internal+433
0000000000007d95         db  0xb9 ; '.'
0000000000007d96         db  0xff ; '.'
0000000000007d97         db  0xff ; '.'
0000000000007d98         db  0x7c ; '|'
0000000000007d99         db  0xad ; '.'
0000000000007d9a         db  0xff ; '.'
0000000000007d9b         db  0xff ; '.'
0000000000007d9c         db  0x7c ; '|'
0000000000007d9d         db  0xad ; '.'
0000000000007d9e         db  0xff ; '.'
0000000000007d9f         db  0xff ; '.'
0000000000007da0         db  0x7c ; '|'
0000000000007da1         db  0xad ; '.'
0000000000007da2         db  0xff ; '.'
0000000000007da3         db  0xff ; '.'
0000000000007da4         db  0x7c ; '|'
0000000000007da5         db  0xad ; '.'
0000000000007da6         db  0xff ; '.'
0000000000007da7         db  0xff ; '.'
0000000000007da8         db  0x7c ; '|'
0000000000007da9         db  0xad ; '.'
0000000000007daa         db  0xff ; '.'
0000000000007dab         db  0xff ; '.'
0000000000007dac         db  0x7c ; '|'
0000000000007dad         db  0xad ; '.'
0000000000007dae         db  0xff ; '.'
0000000000007daf         db  0xff ; '.'
0000000000007db0         db  0x7c ; '|'
0000000000007db1         db  0xad ; '.'
0000000000007db2         db  0xff ; '.'
0000000000007db3         db  0xff ; '.'
0000000000007db4         db  0x7c ; '|'
0000000000007db5         db  0xad ; '.'
0000000000007db6         db  0xff ; '.'
0000000000007db7         db  0xff ; '.'
0000000000007db8         db  0x7c ; '|'
0000000000007db9         db  0xad ; '.'
0000000000007dba         db  0xff ; '.'
0000000000007dbb         db  0xff ; '.'
0000000000007dbc         db  0x7c ; '|'
0000000000007dbd         db  0xad ; '.'
0000000000007dbe         db  0xff ; '.'
0000000000007dbf         db  0xff ; '.'
0000000000007dc0         db  0x7c ; '|'
0000000000007dc1         db  0xad ; '.'
0000000000007dc2         db  0xff ; '.'
0000000000007dc3         db  0xff ; '.'
0000000000007dc4         db  0x7c ; '|'
0000000000007dc5         db  0xad ; '.'
0000000000007dc6         db  0xff ; '.'
0000000000007dc7         db  0xff ; '.'
0000000000007dc8         db  0x7c ; '|'
0000000000007dc9         db  0xad ; '.'
0000000000007dca         db  0xff ; '.'
0000000000007dcb         db  0xff ; '.'
0000000000007dcc         db  0x7c ; '|'
0000000000007dcd         db  0xad ; '.'
0000000000007dce         db  0xff ; '.'
0000000000007dcf         db  0xff ; '.'
0000000000007dd0         db  0x7c ; '|'
0000000000007dd1         db  0xad ; '.'
0000000000007dd2         db  0xff ; '.'
0000000000007dd3         db  0xff ; '.'
0000000000007dd4         db  0x7c ; '|'
0000000000007dd5         db  0xad ; '.'
0000000000007dd6         db  0xff ; '.'
0000000000007dd7         db  0xff ; '.'
0000000000007dd8         db  0x7c ; '|'
0000000000007dd9         db  0xad ; '.'
0000000000007dda         db  0xff ; '.'
0000000000007ddb         db  0xff ; '.'
0000000000007ddc         db  0x7c ; '|'
0000000000007ddd         db  0xad ; '.'
0000000000007dde         db  0xff ; '.'
0000000000007ddf         db  0xff ; '.'
0000000000007de0         db  0x7c ; '|'
0000000000007de1         db  0xad ; '.'
0000000000007de2         db  0xff ; '.'
0000000000007de3         db  0xff ; '.'
0000000000007de4         db  0x7c ; '|'
0000000000007de5         db  0xad ; '.'
0000000000007de6         db  0xff ; '.'
0000000000007de7         db  0xff ; '.'
0000000000007de8         db  0x7c ; '|'
0000000000007de9         db  0xad ; '.'
0000000000007dea         db  0xff ; '.'
0000000000007deb         db  0xff ; '.'
0000000000007dec         db  0x7c ; '|'
0000000000007ded         db  0xad ; '.'
0000000000007dee         db  0xff ; '.'
0000000000007def         db  0xff ; '.'
0000000000007df0         db  0x7c ; '|'
0000000000007df1         db  0xad ; '.'
0000000000007df2         db  0xff ; '.'
0000000000007df3         db  0xff ; '.'
0000000000007df4         db  0x7c ; '|'
0000000000007df5         db  0xad ; '.'
0000000000007df6         db  0xff ; '.'
0000000000007df7         db  0xff ; '.'
0000000000007df8         db  0x7c ; '|'
0000000000007df9         db  0xad ; '.'
0000000000007dfa         db  0xff ; '.'
0000000000007dfb         db  0xff ; '.'
0000000000007dfc         db  0x7c ; '|'
0000000000007dfd         db  0xad ; '.'
0000000000007dfe         db  0xff ; '.'
0000000000007dff         db  0xff ; '.'
0000000000007e00         db  0x7c ; '|'
0000000000007e01         db  0xad ; '.'
0000000000007e02         db  0xff ; '.'
0000000000007e03         db  0xff ; '.'
0000000000007e04         db  0x7c ; '|'
0000000000007e05         db  0xad ; '.'
0000000000007e06         db  0xff ; '.'
0000000000007e07         db  0xff ; '.'
0000000000007e08         db  0x7c ; '|'
0000000000007e09         db  0xad ; '.'
0000000000007e0a         db  0xff ; '.'
0000000000007e0b         db  0xff ; '.'
0000000000007e0c         db  0x7c ; '|'
0000000000007e0d         db  0xad ; '.'
0000000000007e0e         db  0xff ; '.'
0000000000007e0f         db  0xff ; '.'
0000000000007e10         db  0x7c ; '|'
0000000000007e11         db  0xad ; '.'
0000000000007e12         db  0xff ; '.'
0000000000007e13         db  0xff ; '.'
0000000000007e14         db  0x7c ; '|'
0000000000007e15         db  0xad ; '.'
0000000000007e16         db  0xff ; '.'
0000000000007e17         db  0xff ; '.'
0000000000007e18         db  0x7c ; '|'
0000000000007e19         db  0xad ; '.'
0000000000007e1a         db  0xff ; '.'
0000000000007e1b         db  0xff ; '.'
0000000000007e1c         db  0x7c ; '|'
0000000000007e1d         db  0xad ; '.'
0000000000007e1e         db  0xff ; '.'
0000000000007e1f         db  0xff ; '.'
0000000000007e20         db  0x7c ; '|'
0000000000007e21         db  0xad ; '.'
0000000000007e22         db  0xff ; '.'
0000000000007e23         db  0xff ; '.'
0000000000007e24         db  0x7c ; '|'
0000000000007e25         db  0xad ; '.'
0000000000007e26         db  0xff ; '.'
0000000000007e27         db  0xff ; '.'
0000000000007e28         db  0x9d ; '.'
0000000000007e29         db  0xb9 ; '.'
0000000000007e2a         db  0xff ; '.'
0000000000007e2b         db  0xff ; '.'
0000000000007e2c         db  0x7c ; '|'
0000000000007e2d         db  0xad ; '.'
0000000000007e2e         db  0xff ; '.'
0000000000007e2f         db  0xff ; '.'
0000000000007e30         db  0x7c ; '|'
0000000000007e31         db  0xad ; '.'
0000000000007e32         db  0xff ; '.'
0000000000007e33         db  0xff ; '.'
0000000000007e34         db  0x7c ; '|'
0000000000007e35         db  0xad ; '.'
0000000000007e36         db  0xff ; '.'
0000000000007e37         db  0xff ; '.'
0000000000007e38         db  0x7c ; '|'
0000000000007e39         db  0xad ; '.'
0000000000007e3a         db  0xff ; '.'
0000000000007e3b         db  0xff ; '.'
0000000000007e3c         db  0x7c ; '|'
0000000000007e3d         db  0xad ; '.'
0000000000007e3e         db  0xff ; '.'
0000000000007e3f         db  0xff ; '.'
0000000000007e40         db  0x7c ; '|'
0000000000007e41         db  0xad ; '.'
0000000000007e42         db  0xff ; '.'
0000000000007e43         db  0xff ; '.'
0000000000007e44         db  0x7c ; '|'
0000000000007e45         db  0xad ; '.'
0000000000007e46         db  0xff ; '.'
0000000000007e47         db  0xff ; '.'
0000000000007e48         db  0x7c ; '|'
0000000000007e49         db  0xad ; '.'
0000000000007e4a         db  0xff ; '.'
0000000000007e4b         db  0xff ; '.'
0000000000007e4c         db  0x7c ; '|'
0000000000007e4d         db  0xad ; '.'
0000000000007e4e         db  0xff ; '.'
0000000000007e4f         db  0xff ; '.'
0000000000007e50         db  0x7c ; '|'
0000000000007e51         db  0xad ; '.'
0000000000007e52         db  0xff ; '.'
0000000000007e53         db  0xff ; '.'
0000000000007e54         db  0x7c ; '|'
0000000000007e55         db  0xad ; '.'
0000000000007e56         db  0xff ; '.'
0000000000007e57         db  0xff ; '.'
0000000000007e58         db  0x7c ; '|'
0000000000007e59         db  0xad ; '.'
0000000000007e5a         db  0xff ; '.'
0000000000007e5b         db  0xff ; '.'
0000000000007e5c         db  0x7c ; '|'
0000000000007e5d         db  0xad ; '.'
0000000000007e5e         db  0xff ; '.'
0000000000007e5f         db  0xff ; '.'
0000000000007e60         db  0x7c ; '|'
0000000000007e61         db  0xad ; '.'
0000000000007e62         db  0xff ; '.'
0000000000007e63         db  0xff ; '.'
0000000000007e64         db  0x7c ; '|'
0000000000007e65         db  0xad ; '.'
0000000000007e66         db  0xff ; '.'
0000000000007e67         db  0xff ; '.'
0000000000007e68         db  0x7c ; '|'
0000000000007e69         db  0xad ; '.'
0000000000007e6a         db  0xff ; '.'
0000000000007e6b         db  0xff ; '.'
0000000000007e6c         db  0x7c ; '|'
0000000000007e6d         db  0xad ; '.'
0000000000007e6e         db  0xff ; '.'
0000000000007e6f         db  0xff ; '.'
0000000000007e70         db  0x7c ; '|'
0000000000007e71         db  0xad ; '.'
0000000000007e72         db  0xff ; '.'
0000000000007e73         db  0xff ; '.'
0000000000007e74         db  0x7c ; '|'
0000000000007e75         db  0xad ; '.'
0000000000007e76         db  0xff ; '.'
0000000000007e77         db  0xff ; '.'
0000000000007e78         db  0x7c ; '|'
0000000000007e79         db  0xad ; '.'
0000000000007e7a         db  0xff ; '.'
0000000000007e7b         db  0xff ; '.'
0000000000007e7c         db  0x1d ; '.'
0000000000007e7d         db  0xba ; '.'
0000000000007e7e         db  0xff ; '.'
0000000000007e7f         db  0xff ; '.'
0000000000007e80         db  0x7c ; '|'
0000000000007e81         db  0xad ; '.'
0000000000007e82         db  0xff ; '.'
0000000000007e83         db  0xff ; '.'
0000000000007e84         db  0x7c ; '|'
0000000000007e85         db  0xad ; '.'
0000000000007e86         db  0xff ; '.'
0000000000007e87         db  0xff ; '.'
0000000000007e88         db  0x7c ; '|'
0000000000007e89         db  0xad ; '.'
0000000000007e8a         db  0xff ; '.'
0000000000007e8b         db  0xff ; '.'
0000000000007e8c         db  0x7c ; '|'
0000000000007e8d         db  0xad ; '.'
0000000000007e8e         db  0xff ; '.'
0000000000007e8f         db  0xff ; '.'
0000000000007e90         db  0x7c ; '|'
0000000000007e91         db  0xad ; '.'
0000000000007e92         db  0xff ; '.'
0000000000007e93         db  0xff ; '.'
0000000000007e94         db  0x7c ; '|'
0000000000007e95         db  0xad ; '.'
0000000000007e96         db  0xff ; '.'
0000000000007e97         db  0xff ; '.'
0000000000007e98         db  0x3c ; '<'
0000000000007e99         db  0xb0 ; '.'
0000000000007e9a         db  0xff ; '.'
0000000000007e9b         db  0xff ; '.'
0000000000007e9c         db  0x80 ; '.'
0000000000007e9d         db  0xb9 ; '.'
0000000000007e9e         db  0xff ; '.'
0000000000007e9f         db  0xff ; '.'
0000000000007ea0         db  0x63 ; 'c'
0000000000007ea1         db  0xb8 ; '.'
0000000000007ea2         db  0xff ; '.'
0000000000007ea3         db  0xff ; '.'
0000000000007ea4         db  0xda ; '.'
0000000000007ea5         db  0xb8 ; '.'
0000000000007ea6         db  0xff ; '.'
0000000000007ea7         db  0xff ; '.'
0000000000007ea8         db  0x7c ; '|'
0000000000007ea9         db  0xad ; '.'
0000000000007eaa         db  0xff ; '.'
0000000000007eab         db  0xff ; '.'
0000000000007eac         db  0xfa ; '.'
0000000000007ead         db  0xb8 ; '.'
0000000000007eae         db  0xff ; '.'
0000000000007eaf         db  0xff ; '.'
0000000000007eb0         db  0x42 ; 'B'
0000000000007eb1         db  0xb6 ; '.'
0000000000007eb2         db  0xff ; '.'
0000000000007eb3         db  0xff ; '.'
0000000000007eb4         db  0xc0 ; '.'
0000000000007eb5         db  0xb7 ; '.'
0000000000007eb6         db  0xff ; '.'
0000000000007eb7         db  0xff ; '.'
0000000000007eb8         db  0x4b ; 'K'
0000000000007eb9         db  0xb8 ; '.'
0000000000007eba         db  0xff ; '.'
0000000000007ebb         db  0xff ; '.'
0000000000007ebc         db  0x7c ; '|'
0000000000007ebd         db  0xad ; '.'
0000000000007ebe         db  0xff ; '.'
0000000000007ebf         db  0xff ; '.'
0000000000007ec0         db  0x7c ; '|'
0000000000007ec1         db  0xad ; '.'
0000000000007ec2         db  0xff ; '.'
0000000000007ec3         db  0xff ; '.'
0000000000007ec4         db  0x7c ; '|'
0000000000007ec5         db  0xad ; '.'
0000000000007ec6         db  0xff ; '.'
0000000000007ec7         db  0xff ; '.'
0000000000007ec8         db  0xdb ; '.'
0000000000007ec9         db  0xb7 ; '.'
0000000000007eca         db  0xff ; '.'
0000000000007ecb         db  0xff ; '.'
0000000000007ecc         db  0xf6 ; '.'
0000000000007ecd         db  0xb7 ; '.'
0000000000007ece         db  0xff ; '.'
0000000000007ecf         db  0xff ; '.'
0000000000007ed0         db  0x7c ; '|'
0000000000007ed1         db  0xad ; '.'
0000000000007ed2         db  0xff ; '.'
0000000000007ed3         db  0xff ; '.'
0000000000007ed4         db  0xad ; '.'
0000000000007ed5         db  0xb1 ; '.'
0000000000007ed6         db  0xff ; '.'
0000000000007ed7         db  0xff ; '.'
0000000000007ed8         db  0x7c ; '|'
0000000000007ed9         db  0xad ; '.'
0000000000007eda         db  0xff ; '.'
0000000000007edb         db  0xff ; '.'
0000000000007edc         db  0xc9 ; '.'
0000000000007edd         db  0xb1 ; '.'
0000000000007ede         db  0xff ; '.'
0000000000007edf         db  0xff ; '.'
0000000000007ee0         db  0x56 ; 'V'
0000000000007ee1         db  0xb2 ; '.'
0000000000007ee2         db  0xff ; '.'
0000000000007ee3         db  0xff ; '.'
0000000000007ee4         db  0xf6 ; '.'
0000000000007ee5         db  0xb5 ; '.'
0000000000007ee6         db  0xff ; '.'
0000000000007ee7         db  0xff ; '.'
0000000000007ee8         db  0x0d ; '.'
0000000000007ee9         db  0xb6 ; '.'
0000000000007eea         db  0xff ; '.'
0000000000007eeb         db  0xff ; '.'
0000000000007eec         db  0x42 ; 'B'
0000000000007eed         db  0xb6 ; '.'
0000000000007eee         db  0xff ; '.'
0000000000007eef         db  0xff ; '.'
0000000000007ef0         db  0x14 ; '.'
0000000000007ef1         db  0xbb ; '.'
0000000000007ef2         db  0xff ; '.'
0000000000007ef3         db  0xff ; '.'
0000000000007ef4         db  0x0c ; '.'
0000000000007ef5         db  0xaf ; '.'
0000000000007ef6         db  0xff ; '.'
0000000000007ef7         db  0xff ; '.'
0000000000007ef8         db  0x61 ; 'a'
0000000000007ef9         db  0xbb ; '.'
0000000000007efa         db  0xff ; '.'
0000000000007efb         db  0xff ; '.'
0000000000007efc         db  0xbf ; '.'
0000000000007efd         db  0xbb ; '.'
0000000000007efe         db  0xff ; '.'
0000000000007eff         db  0xff ; '.'
0000000000007f00         db  0x7c ; '|'
0000000000007f01         db  0xad ; '.'
0000000000007f02         db  0xff ; '.'
0000000000007f03         db  0xff ; '.'
0000000000007f04         db  0x7c ; '|'
0000000000007f05         db  0xad ; '.'
0000000000007f06         db  0xff ; '.'
0000000000007f07         db  0xff ; '.'
0000000000007f08         db  0x7c ; '|'
0000000000007f09         db  0xad ; '.'
0000000000007f0a         db  0xff ; '.'
0000000000007f0b         db  0xff ; '.'
0000000000007f0c         db  0x7c ; '|'
0000000000007f0d         db  0xad ; '.'
0000000000007f0e         db  0xff ; '.'
0000000000007f0f         db  0xff ; '.'
0000000000007f10         db  0x7c ; '|'
0000000000007f11         db  0xad ; '.'
0000000000007f12         db  0xff ; '.'
0000000000007f13         db  0xff ; '.'
0000000000007f14         db  0x7c ; '|'
0000000000007f15         db  0xad ; '.'
0000000000007f16         db  0xff ; '.'
0000000000007f17         db  0xff ; '.'
0000000000007f18         db  0x3c ; '<'
0000000000007f19         db  0xb0 ; '.'
0000000000007f1a         db  0xff ; '.'
0000000000007f1b         db  0xff ; '.'
0000000000007f1c         db  0x37 ; '7'
0000000000007f1d         db  0xbe ; '.'
0000000000007f1e         db  0xff ; '.'
0000000000007f1f         db  0xff ; '.'
0000000000007f20         db  0x0c ; '.'
0000000000007f21         db  0xaf ; '.'
0000000000007f22         db  0xff ; '.'
0000000000007f23         db  0xff ; '.'
0000000000007f24         db  0xde ; '.'
0000000000007f25         db  0xbc ; '.'
0000000000007f26         db  0xff ; '.'
0000000000007f27         db  0xff ; '.'
0000000000007f28         db  0xf9 ; '.'
0000000000007f29         db  0xbc ; '.'
0000000000007f2a         db  0xff ; '.'
0000000000007f2b         db  0xff ; '.'
0000000000007f2c         db  0x7c ; '|'
0000000000007f2d         db  0xad ; '.'
0000000000007f2e         db  0xff ; '.'
0000000000007f2f         db  0xff ; '.'
0000000000007f30         db  0x42 ; 'B'
0000000000007f31         db  0xb6 ; '.'
0000000000007f32         db  0xff ; '.'
0000000000007f33         db  0xff ; '.'
0000000000007f34         db  0x37 ; '7'
0000000000007f35         db  0xbe ; '.'
0000000000007f36         db  0xff ; '.'
0000000000007f37         db  0xff ; '.'
0000000000007f38         db  0x7c ; '|'
0000000000007f39         db  0xad ; '.'
0000000000007f3a         db  0xff ; '.'
0000000000007f3b         db  0xff ; '.'
0000000000007f3c         db  0x2a ; '*'
0000000000007f3d         db  0xbd ; '.'
0000000000007f3e         db  0xff ; '.'
0000000000007f3f         db  0xff ; '.'
0000000000007f40         db  0x5b ; '['
0000000000007f41         db  0xbd ; '.'
0000000000007f42         db  0xff ; '.'
0000000000007f43         db  0xff ; '.'
0000000000007f44         db  0x6e ; 'n'
0000000000007f45         db  0xbd ; '.'
0000000000007f46         db  0xff ; '.'
0000000000007f47         db  0xff ; '.'
0000000000007f48         db  0x7e ; '~'
0000000000007f49         db  0xbd ; '.'
0000000000007f4a         db  0xff ; '.'
0000000000007f4b         db  0xff ; '.'
0000000000007f4c         db  0xaf ; '.'
0000000000007f4d         db  0xbd ; '.'
0000000000007f4e         db  0xff ; '.'
0000000000007f4f         db  0xff ; '.'
0000000000007f50         db  0x7c ; '|'
0000000000007f51         db  0xad ; '.'
0000000000007f52         db  0xff ; '.'
0000000000007f53         db  0xff ; '.'
0000000000007f54         db  0x30 ; '0'
0000000000007f55         db  0xbe ; '.'
0000000000007f56         db  0xff ; '.'
0000000000007f57         db  0xff ; '.'
0000000000007f58         db  0x22 ; '"'
0000000000007f59         db  0xb4 ; '.'
0000000000007f5a         db  0xff ; '.'
0000000000007f5b         db  0xff ; '.'
0000000000007f5c         db  0x16 ; '.'
0000000000007f5d         db  0xaf ; '.'
0000000000007f5e         db  0xff ; '.'
0000000000007f5f         db  0xff ; '.'
0000000000007f60         db  0x70 ; 'p'
0000000000007f61         db  0xb2 ; '.'
0000000000007f62         db  0xff ; '.'
0000000000007f63         db  0xff ; '.'
0000000000007f64         db  0x7c ; '|'
0000000000007f65         db  0xb0 ; '.'
0000000000007f66         db  0xff ; '.'
0000000000007f67         db  0xff ; '.'
0000000000007f68         db  0xfd ; '.'
0000000000007f69         db  0xb0 ; '.'
0000000000007f6a         db  0xff ; '.'
0000000000007f6b         db  0xff ; '.'
0000000000007f6c         db  0x7c ; '|'
0000000000007f6d         db  0xad ; '.'
0000000000007f6e         db  0xff ; '.'
0000000000007f6f         db  0xff ; '.'
0000000000007f70         db  0x95 ; '.'
0000000000007f71         db  0xb1 ; '.'
0000000000007f72         db  0xff ; '.'
0000000000007f73         db  0xff ; '.'
0000000000007f74         db  0x0c ; '.'
0000000000007f75         db  0xaf ; '.'
0000000000007f76         db  0xff ; '.'
0000000000007f77         db  0xff ; '.'
0000000000007f78         db  0x96 ; '.'
0000000000007f79         db  0xbc ; '.'
0000000000007f7a         db  0xff ; '.'
0000000000007f7b         db  0xff ; '.'
0000000000007f7c         db  0x5c ; '\'
0000000000007f7d         db  0xbe ; '.'
0000000000007f7e         db  0xff ; '.'
0000000000007f7f         db  0xff ; '.'
0000000000007f80         db  0x2b ; '+'                                         ; DATA XREF=parse_long_options+183, parse_gnu_standard_options_only+114
0000000000007f81         db  0x00 ; '.'
                     aHelp:
0000000000007f82         db         "help", 0
                     aVersion:
0000000000007f87         db         "version", 0
0000000000007f8f         align      16
                     aANullArgv0WasP:
0000000000007f90         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
0000000000007fc8         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
0000000000007fd0         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
0000000000007fd1         db  0x74 ; 't'
0000000000007fd2         db  0x2d ; '-'
0000000000007fd3         db  0x00 ; '.'
0000000000007fd4         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
0000000000007fd5         db  0x80 ; '.'
0000000000007fd6         db  0x98 ; '.'
0000000000007fd7         db  0x00 ; '.'
0000000000007fd8         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
0000000000007fd9         db  0x80 ; '.'
0000000000007fda         db  0x99 ; '.'
0000000000007fdb         db  0x00 ; '.'
0000000000007fdc         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
0000000000007fdd         db  0x07 ; '.'
0000000000007fde         db  0x65 ; 'e'
0000000000007fdf         db  0x00 ; '.'
0000000000007fe0         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
0000000000007fe1         db  0xaf ; '.'
0000000000007fe2         db  0x00 ; '.'
0000000000007fe3         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_50c0+1451, sub_50c0+1493, sub_50c0+2429
0000000000007fe4         db  0x00 ; '.'
0000000000007fe5         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_50c0+132, sub_50c0+1338, sub_50c0+1670, sub_50c0+1697, sub_50c0+2352
0000000000007fe6         db  0x00 ; '.'
0000000000007fe7         db  0x60 ; '`'                                         ; DATA XREF=sub_50c0+1627, sub_50c0+1654
0000000000007fe8         db  0x00 ; '.'
                     aLiteral:
0000000000007fe9         db         "literal", 0
                     aShell:
0000000000007ff1         db         "shell", 0
                     aShellalways:
0000000000007ff7         db         "shell-always", 0
0000000000008004         db  0x73 ; 's'
0000000000008005         db  0x68 ; 'h'
0000000000008006         db  0x65 ; 'e'
0000000000008007         db  0x6c ; 'l'
0000000000008008         db  0x6c ; 'l'
0000000000008009         db  0x2d ; '-'
                     aEscape:
000000000000800a         db         "escape", 0
                     aShellescapealw:
0000000000008011         db         "shell-escape-always", 0
0000000000008025         db  0x63 ; 'c'
0000000000008026         db  0x00 ; '.'
                     aCmaybe:
0000000000008027         db         "c-maybe", 0
                     aClocale:
000000000000802f         db         "clocale", 0
0000000000008037         align      64
                     switch_table_8040:        // switch_table
0000000000008040         dd         quotearg_buffer_restyled.loc_57ba-switch_table_8040, quotearg_buffer_restyled.loc_4a13-switch_table_8040, quotearg_buffer_restyled.loc_59e8-switch_table_8040, quotearg_buffer_restyled.loc_57f4-switch_table_8040 ; switch table used at 0x4a11 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000008050         dd         quotearg_buffer_restyled.loc_55e4-switch_table_8040, quotearg_buffer_restyled.loc_5640-switch_table_8040, quotearg_buffer_restyled.loc_5695-switch_table_8040, quotearg_buffer_restyled.loc_56da-switch_table_8040
0000000000008060         dd         3 dup (quotearg_buffer_restyled.loc_5714-switch_table_8040)
000000000000806c         db  0x24 ; '$'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000806d         db  0xcd ; '.'
000000000000806e         db  0xff ; '.'
000000000000806f         db  0xff ; '.'
0000000000008070         db  0x0c ; '.'
0000000000008071         db  0xce ; '.'
0000000000008072         db  0xff ; '.'
0000000000008073         db  0xff ; '.'
0000000000008074         db  0x0c ; '.'
0000000000008075         db  0xce ; '.'
0000000000008076         db  0xff ; '.'
0000000000008077         db  0xff ; '.'
0000000000008078         db  0x0c ; '.'
0000000000008079         db  0xce ; '.'
000000000000807a         db  0xff ; '.'
000000000000807b         db  0xff ; '.'
000000000000807c         db  0x0c ; '.'
000000000000807d         db  0xce ; '.'
000000000000807e         db  0xff ; '.'
000000000000807f         db  0xff ; '.'
0000000000008080         db  0x0c ; '.'
0000000000008081         db  0xce ; '.'
0000000000008082         db  0xff ; '.'
0000000000008083         db  0xff ; '.'
0000000000008084         db  0x0c ; '.'
0000000000008085         db  0xce ; '.'
0000000000008086         db  0xff ; '.'
0000000000008087         db  0xff ; '.'
0000000000008088         db  0x64 ; 'd'
0000000000008089         db  0xcd ; '.'
000000000000808a         db  0xff ; '.'
000000000000808b         db  0xff ; '.'
000000000000808c         db  0x6c ; 'l'
000000000000808d         db  0xcc ; '.'
000000000000808e         db  0xff ; '.'
000000000000808f         db  0xff ; '.'
0000000000008090         db  0x2c ; ','
0000000000008091         db  0xcc ; '.'
0000000000008092         db  0xff ; '.'
0000000000008093         db  0xff ; '.'
0000000000008094         db  0xf4 ; '.'
0000000000008095         db  0xcd ; '.'
0000000000008096         db  0xff ; '.'
0000000000008097         db  0xff ; '.'
0000000000008098         db  0xe4 ; '.'
0000000000008099         db  0xcd ; '.'
000000000000809a         db  0xff ; '.'
000000000000809b         db  0xff ; '.'
000000000000809c         db  0xd4 ; '.'
000000000000809d         db  0xcd ; '.'
000000000000809e         db  0xff ; '.'
000000000000809f         db  0xff ; '.'
00000000000080a0         db  0xc4 ; '.'
00000000000080a1         db  0xcd ; '.'
00000000000080a2         db  0xff ; '.'
00000000000080a3         db  0xff ; '.'
00000000000080a4         db  0x0c ; '.'
00000000000080a5         db  0xce ; '.'
00000000000080a6         db  0xff ; '.'
00000000000080a7         db  0xff ; '.'
00000000000080a8         db  0x0c ; '.'
00000000000080a9         db  0xce ; '.'
00000000000080aa         db  0xff ; '.'
00000000000080ab         db  0xff ; '.'
00000000000080ac         db  0x0c ; '.'
00000000000080ad         db  0xce ; '.'
00000000000080ae         db  0xff ; '.'
00000000000080af         db  0xff ; '.'
00000000000080b0         db  0x0c ; '.'
00000000000080b1         db  0xce ; '.'
00000000000080b2         db  0xff ; '.'
00000000000080b3         db  0xff ; '.'
00000000000080b4         db  0x0c ; '.'
00000000000080b5         db  0xce ; '.'
00000000000080b6         db  0xff ; '.'
00000000000080b7         db  0xff ; '.'
00000000000080b8         db  0x0c ; '.'
00000000000080b9         db  0xce ; '.'
00000000000080ba         db  0xff ; '.'
00000000000080bb         db  0xff ; '.'
00000000000080bc         db  0x0c ; '.'
00000000000080bd         db  0xce ; '.'
00000000000080be         db  0xff ; '.'
00000000000080bf         db  0xff ; '.'
00000000000080c0         db  0x0c ; '.'
00000000000080c1         db  0xce ; '.'
00000000000080c2         db  0xff ; '.'
00000000000080c3         db  0xff ; '.'
00000000000080c4         db  0x0c ; '.'
00000000000080c5         db  0xce ; '.'
00000000000080c6         db  0xff ; '.'
00000000000080c7         db  0xff ; '.'
00000000000080c8         db  0x0c ; '.'
00000000000080c9         db  0xce ; '.'
00000000000080ca         db  0xff ; '.'
00000000000080cb         db  0xff ; '.'
00000000000080cc         db  0x0c ; '.'
00000000000080cd         db  0xce ; '.'
00000000000080ce         db  0xff ; '.'
00000000000080cf         db  0xff ; '.'
00000000000080d0         db  0x0c ; '.'
00000000000080d1         db  0xce ; '.'
00000000000080d2         db  0xff ; '.'
00000000000080d3         db  0xff ; '.'
00000000000080d4         db  0x0c ; '.'
00000000000080d5         db  0xce ; '.'
00000000000080d6         db  0xff ; '.'
00000000000080d7         db  0xff ; '.'
00000000000080d8         db  0x0c ; '.'
00000000000080d9         db  0xce ; '.'
00000000000080da         db  0xff ; '.'
00000000000080db         db  0xff ; '.'
00000000000080dc         db  0x0c ; '.'
00000000000080dd         db  0xce ; '.'
00000000000080de         db  0xff ; '.'
00000000000080df         db  0xff ; '.'
00000000000080e0         db  0x0c ; '.'
00000000000080e1         db  0xce ; '.'
00000000000080e2         db  0xff ; '.'
00000000000080e3         db  0xff ; '.'
00000000000080e4         db  0x0c ; '.'
00000000000080e5         db  0xce ; '.'
00000000000080e6         db  0xff ; '.'
00000000000080e7         db  0xff ; '.'
00000000000080e8         db  0x0c ; '.'
00000000000080e9         db  0xce ; '.'
00000000000080ea         db  0xff ; '.'
00000000000080eb         db  0xff ; '.'
00000000000080ec         db  0xb4 ; '.'
00000000000080ed         db  0xcd ; '.'
00000000000080ee         db  0xff ; '.'
00000000000080ef         db  0xff ; '.'
00000000000080f0         db  0xa4 ; '.'
00000000000080f1         db  0xcd ; '.'
00000000000080f2         db  0xff ; '.'
00000000000080f3         db  0xff ; '.'
00000000000080f4         db  0xa4 ; '.'
00000000000080f5         db  0xcd ; '.'
00000000000080f6         db  0xff ; '.'
00000000000080f7         db  0xff ; '.'
00000000000080f8         db  0x74 ; 't'
00000000000080f9         db  0xcd ; '.'
00000000000080fa         db  0xff ; '.'
00000000000080fb         db  0xff ; '.'
00000000000080fc         db  0xa4 ; '.'
00000000000080fd         db  0xcd ; '.'
00000000000080fe         db  0xff ; '.'
00000000000080ff         db  0xff ; '.'
0000000000008100         db  0x4c ; 'L'
0000000000008101         db  0xcd ; '.'
0000000000008102         db  0xff ; '.'
0000000000008103         db  0xff ; '.'
0000000000008104         db  0xa4 ; '.'
0000000000008105         db  0xcd ; '.'
0000000000008106         db  0xff ; '.'
0000000000008107         db  0xff ; '.'
0000000000008108         db  0x07 ; '.'
0000000000008109         db  0xcc ; '.'
000000000000810a         db  0xff ; '.'
000000000000810b         db  0xff ; '.'
000000000000810c         db  0xa4 ; '.'
000000000000810d         db  0xcd ; '.'
000000000000810e         db  0xff ; '.'
000000000000810f         db  0xff ; '.'
0000000000008110         db  0xa4 ; '.'
0000000000008111         db  0xcd ; '.'
0000000000008112         db  0xff ; '.'
0000000000008113         db  0xff ; '.'
0000000000008114         db  0xa4 ; '.'
0000000000008115         db  0xcd ; '.'
0000000000008116         db  0xff ; '.'
0000000000008117         db  0xff ; '.'
0000000000008118         db  0x4c ; 'L'
0000000000008119         db  0xcd ; '.'
000000000000811a         db  0xff ; '.'
000000000000811b         db  0xff ; '.'
000000000000811c         db  0x4c ; 'L'
000000000000811d         db  0xcd ; '.'
000000000000811e         db  0xff ; '.'
000000000000811f         db  0xff ; '.'
0000000000008120         db  0x4c ; 'L'
0000000000008121         db  0xcd ; '.'
0000000000008122         db  0xff ; '.'
0000000000008123         db  0xff ; '.'
0000000000008124         db  0x4c ; 'L'
0000000000008125         db  0xcd ; '.'
0000000000008126         db  0xff ; '.'
0000000000008127         db  0xff ; '.'
0000000000008128         db  0x4c ; 'L'
0000000000008129         db  0xcd ; '.'
000000000000812a         db  0xff ; '.'
000000000000812b         db  0xff ; '.'
000000000000812c         db  0x4c ; 'L'
000000000000812d         db  0xcd ; '.'
000000000000812e         db  0xff ; '.'
000000000000812f         db  0xff ; '.'
0000000000008130         db  0x4c ; 'L'
0000000000008131         db  0xcd ; '.'
0000000000008132         db  0xff ; '.'
0000000000008133         db  0xff ; '.'
0000000000008134         db  0x4c ; 'L'
0000000000008135         db  0xcd ; '.'
0000000000008136         db  0xff ; '.'
0000000000008137         db  0xff ; '.'
0000000000008138         db  0x4c ; 'L'
0000000000008139         db  0xcd ; '.'
000000000000813a         db  0xff ; '.'
000000000000813b         db  0xff ; '.'
000000000000813c         db  0x4c ; 'L'
000000000000813d         db  0xcd ; '.'
000000000000813e         db  0xff ; '.'
000000000000813f         db  0xff ; '.'
0000000000008140         db  0x4c ; 'L'
0000000000008141         db  0xcd ; '.'
0000000000008142         db  0xff ; '.'
0000000000008143         db  0xff ; '.'
0000000000008144         db  0x4c ; 'L'
0000000000008145         db  0xcd ; '.'
0000000000008146         db  0xff ; '.'
0000000000008147         db  0xff ; '.'
0000000000008148         db  0x4c ; 'L'
0000000000008149         db  0xcd ; '.'
000000000000814a         db  0xff ; '.'
000000000000814b         db  0xff ; '.'
000000000000814c         db  0x4c ; 'L'
000000000000814d         db  0xcd ; '.'
000000000000814e         db  0xff ; '.'
000000000000814f         db  0xff ; '.'
0000000000008150         db  0x4c ; 'L'
0000000000008151         db  0xcd ; '.'
0000000000008152         db  0xff ; '.'
0000000000008153         db  0xff ; '.'
0000000000008154         db  0x4c ; 'L'
0000000000008155         db  0xcd ; '.'
0000000000008156         db  0xff ; '.'
0000000000008157         db  0xff ; '.'
0000000000008158         db  0xa4 ; '.'
0000000000008159         db  0xcd ; '.'
000000000000815a         db  0xff ; '.'
000000000000815b         db  0xff ; '.'
000000000000815c         db  0xa4 ; '.'
000000000000815d         db  0xcd ; '.'
000000000000815e         db  0xff ; '.'
000000000000815f         db  0xff ; '.'
0000000000008160         db  0xa4 ; '.'
0000000000008161         db  0xcd ; '.'
0000000000008162         db  0xff ; '.'
0000000000008163         db  0xff ; '.'
0000000000008164         db  0xa4 ; '.'
0000000000008165         db  0xcd ; '.'
0000000000008166         db  0xff ; '.'
0000000000008167         db  0xff ; '.'
0000000000008168         db  0xd7 ; '.'
0000000000008169         db  0xcb ; '.'
000000000000816a         db  0xff ; '.'
000000000000816b         db  0xff ; '.'
000000000000816c         db  0x0c ; '.'
000000000000816d         db  0xce ; '.'
000000000000816e         db  0xff ; '.'
000000000000816f         db  0xff ; '.'
0000000000008170         db  0x4c ; 'L'
0000000000008171         db  0xcd ; '.'
0000000000008172         db  0xff ; '.'
0000000000008173         db  0xff ; '.'
0000000000008174         db  0x4c ; 'L'
0000000000008175         db  0xcd ; '.'
0000000000008176         db  0xff ; '.'
0000000000008177         db  0xff ; '.'
0000000000008178         db  0x4c ; 'L'
0000000000008179         db  0xcd ; '.'
000000000000817a         db  0xff ; '.'
000000000000817b         db  0xff ; '.'
000000000000817c         db  0x4c ; 'L'
000000000000817d         db  0xcd ; '.'
000000000000817e         db  0xff ; '.'
000000000000817f         db  0xff ; '.'
0000000000008180         db  0x4c ; 'L'
0000000000008181         db  0xcd ; '.'
0000000000008182         db  0xff ; '.'
0000000000008183         db  0xff ; '.'
0000000000008184         db  0x4c ; 'L'
0000000000008185         db  0xcd ; '.'
0000000000008186         db  0xff ; '.'
0000000000008187         db  0xff ; '.'
0000000000008188         db  0x4c ; 'L'
0000000000008189         db  0xcd ; '.'
000000000000818a         db  0xff ; '.'
000000000000818b         db  0xff ; '.'
000000000000818c         db  0x4c ; 'L'
000000000000818d         db  0xcd ; '.'
000000000000818e         db  0xff ; '.'
000000000000818f         db  0xff ; '.'
0000000000008190         db  0x4c ; 'L'
0000000000008191         db  0xcd ; '.'
0000000000008192         db  0xff ; '.'
0000000000008193         db  0xff ; '.'
0000000000008194         db  0x4c ; 'L'
0000000000008195         db  0xcd ; '.'
0000000000008196         db  0xff ; '.'
0000000000008197         db  0xff ; '.'
0000000000008198         db  0x4c ; 'L'
0000000000008199         db  0xcd ; '.'
000000000000819a         db  0xff ; '.'
000000000000819b         db  0xff ; '.'
000000000000819c         db  0x4c ; 'L'
000000000000819d         db  0xcd ; '.'
000000000000819e         db  0xff ; '.'
000000000000819f         db  0xff ; '.'
00000000000081a0         db  0x4c ; 'L'
00000000000081a1         db  0xcd ; '.'
00000000000081a2         db  0xff ; '.'
00000000000081a3         db  0xff ; '.'
00000000000081a4         db  0x4c ; 'L'
00000000000081a5         db  0xcd ; '.'
00000000000081a6         db  0xff ; '.'
00000000000081a7         db  0xff ; '.'
00000000000081a8         db  0x4c ; 'L'
00000000000081a9         db  0xcd ; '.'
00000000000081aa         db  0xff ; '.'
00000000000081ab         db  0xff ; '.'
00000000000081ac         db  0x4c ; 'L'
00000000000081ad         db  0xcd ; '.'
00000000000081ae         db  0xff ; '.'
00000000000081af         db  0xff ; '.'
00000000000081b0         db  0x4c ; 'L'
00000000000081b1         db  0xcd ; '.'
00000000000081b2         db  0xff ; '.'
00000000000081b3         db  0xff ; '.'
00000000000081b4         db  0x4c ; 'L'
00000000000081b5         db  0xcd ; '.'
00000000000081b6         db  0xff ; '.'
00000000000081b7         db  0xff ; '.'
00000000000081b8         db  0x4c ; 'L'
00000000000081b9         db  0xcd ; '.'
00000000000081ba         db  0xff ; '.'
00000000000081bb         db  0xff ; '.'
00000000000081bc         db  0x4c ; 'L'
00000000000081bd         db  0xcd ; '.'
00000000000081be         db  0xff ; '.'
00000000000081bf         db  0xff ; '.'
00000000000081c0         db  0x4c ; 'L'
00000000000081c1         db  0xcd ; '.'
00000000000081c2         db  0xff ; '.'
00000000000081c3         db  0xff ; '.'
00000000000081c4         db  0x4c ; 'L'
00000000000081c5         db  0xcd ; '.'
00000000000081c6         db  0xff ; '.'
00000000000081c7         db  0xff ; '.'
00000000000081c8         db  0x4c ; 'L'
00000000000081c9         db  0xcd ; '.'
00000000000081ca         db  0xff ; '.'
00000000000081cb         db  0xff ; '.'
00000000000081cc         db  0x4c ; 'L'
00000000000081cd         db  0xcd ; '.'
00000000000081ce         db  0xff ; '.'
00000000000081cf         db  0xff ; '.'
00000000000081d0         db  0x4c ; 'L'
00000000000081d1         db  0xcd ; '.'
00000000000081d2         db  0xff ; '.'
00000000000081d3         db  0xff ; '.'
00000000000081d4         db  0x4c ; 'L'
00000000000081d5         db  0xcd ; '.'
00000000000081d6         db  0xff ; '.'
00000000000081d7         db  0xff ; '.'
00000000000081d8         db  0xa4 ; '.'
00000000000081d9         db  0xcd ; '.'
00000000000081da         db  0xff ; '.'
00000000000081db         db  0xff ; '.'
00000000000081dc         db  0x7c ; '|'
00000000000081dd         db  0xcc ; '.'
00000000000081de         db  0xff ; '.'
00000000000081df         db  0xff ; '.'
00000000000081e0         db  0x4c ; 'L'
00000000000081e1         db  0xcd ; '.'
00000000000081e2         db  0xff ; '.'
00000000000081e3         db  0xff ; '.'
00000000000081e4         db  0xa4 ; '.'
00000000000081e5         db  0xcd ; '.'
00000000000081e6         db  0xff ; '.'
00000000000081e7         db  0xff ; '.'
00000000000081e8         db  0x4c ; 'L'
00000000000081e9         db  0xcd ; '.'
00000000000081ea         db  0xff ; '.'
00000000000081eb         db  0xff ; '.'
00000000000081ec         db  0xa4 ; '.'
00000000000081ed         db  0xcd ; '.'
00000000000081ee         db  0xff ; '.'
00000000000081ef         db  0xff ; '.'
00000000000081f0         db  0x4c ; 'L'
00000000000081f1         db  0xcd ; '.'
00000000000081f2         db  0xff ; '.'
00000000000081f3         db  0xff ; '.'
00000000000081f4         db  0x4c ; 'L'
00000000000081f5         db  0xcd ; '.'
00000000000081f6         db  0xff ; '.'
00000000000081f7         db  0xff ; '.'
00000000000081f8         db  0x4c ; 'L'
00000000000081f9         db  0xcd ; '.'
00000000000081fa         db  0xff ; '.'
00000000000081fb         db  0xff ; '.'
00000000000081fc         db  0x4c ; 'L'
00000000000081fd         db  0xcd ; '.'
00000000000081fe         db  0xff ; '.'
00000000000081ff         db  0xff ; '.'
0000000000008200         db  0x4c ; 'L'
0000000000008201         db  0xcd ; '.'
0000000000008202         db  0xff ; '.'
0000000000008203         db  0xff ; '.'
0000000000008204         db  0x4c ; 'L'
0000000000008205         db  0xcd ; '.'
0000000000008206         db  0xff ; '.'
0000000000008207         db  0xff ; '.'
0000000000008208         db  0x4c ; 'L'
0000000000008209         db  0xcd ; '.'
000000000000820a         db  0xff ; '.'
000000000000820b         db  0xff ; '.'
000000000000820c         db  0x4c ; 'L'
000000000000820d         db  0xcd ; '.'
000000000000820e         db  0xff ; '.'
000000000000820f         db  0xff ; '.'
0000000000008210         db  0x4c ; 'L'
0000000000008211         db  0xcd ; '.'
0000000000008212         db  0xff ; '.'
0000000000008213         db  0xff ; '.'
0000000000008214         db  0x4c ; 'L'
0000000000008215         db  0xcd ; '.'
0000000000008216         db  0xff ; '.'
0000000000008217         db  0xff ; '.'
0000000000008218         db  0x4c ; 'L'
0000000000008219         db  0xcd ; '.'
000000000000821a         db  0xff ; '.'
000000000000821b         db  0xff ; '.'
000000000000821c         db  0x4c ; 'L'
000000000000821d         db  0xcd ; '.'
000000000000821e         db  0xff ; '.'
000000000000821f         db  0xff ; '.'
0000000000008220         db  0x4c ; 'L'
0000000000008221         db  0xcd ; '.'
0000000000008222         db  0xff ; '.'
0000000000008223         db  0xff ; '.'
0000000000008224         db  0x4c ; 'L'
0000000000008225         db  0xcd ; '.'
0000000000008226         db  0xff ; '.'
0000000000008227         db  0xff ; '.'
0000000000008228         db  0x4c ; 'L'
0000000000008229         db  0xcd ; '.'
000000000000822a         db  0xff ; '.'
000000000000822b         db  0xff ; '.'
000000000000822c         db  0x4c ; 'L'
000000000000822d         db  0xcd ; '.'
000000000000822e         db  0xff ; '.'
000000000000822f         db  0xff ; '.'
0000000000008230         db  0x4c ; 'L'
0000000000008231         db  0xcd ; '.'
0000000000008232         db  0xff ; '.'
0000000000008233         db  0xff ; '.'
0000000000008234         db  0x4c ; 'L'
0000000000008235         db  0xcd ; '.'
0000000000008236         db  0xff ; '.'
0000000000008237         db  0xff ; '.'
0000000000008238         db  0x4c ; 'L'
0000000000008239         db  0xcd ; '.'
000000000000823a         db  0xff ; '.'
000000000000823b         db  0xff ; '.'
000000000000823c         db  0x4c ; 'L'
000000000000823d         db  0xcd ; '.'
000000000000823e         db  0xff ; '.'
000000000000823f         db  0xff ; '.'
0000000000008240         db  0x4c ; 'L'
0000000000008241         db  0xcd ; '.'
0000000000008242         db  0xff ; '.'
0000000000008243         db  0xff ; '.'
0000000000008244         db  0x4c ; 'L'
0000000000008245         db  0xcd ; '.'
0000000000008246         db  0xff ; '.'
0000000000008247         db  0xff ; '.'
0000000000008248         db  0x4c ; 'L'
0000000000008249         db  0xcd ; '.'
000000000000824a         db  0xff ; '.'
000000000000824b         db  0xff ; '.'
000000000000824c         db  0x4c ; 'L'
000000000000824d         db  0xcd ; '.'
000000000000824e         db  0xff ; '.'
000000000000824f         db  0xff ; '.'
0000000000008250         db  0x4c ; 'L'
0000000000008251         db  0xcd ; '.'
0000000000008252         db  0xff ; '.'
0000000000008253         db  0xff ; '.'
0000000000008254         db  0x4c ; 'L'
0000000000008255         db  0xcd ; '.'
0000000000008256         db  0xff ; '.'
0000000000008257         db  0xff ; '.'
0000000000008258         db  0x07 ; '.'
0000000000008259         db  0xcb ; '.'
000000000000825a         db  0xff ; '.'
000000000000825b         db  0xff ; '.'
000000000000825c         db  0xa4 ; '.'
000000000000825d         db  0xcd ; '.'
000000000000825e         db  0xff ; '.'
000000000000825f         db  0xff ; '.'
0000000000008260         db  0x07 ; '.'
0000000000008261         db  0xcb ; '.'
0000000000008262         db  0xff ; '.'
0000000000008263         db  0xff ; '.'
0000000000008264         db  0x74 ; 't'
0000000000008265         db  0xcd ; '.'
0000000000008266         db  0xff ; '.'
0000000000008267         db  0xff ; '.'
0000000000008268         db  0xf8 ; '.'                                         ; DATA XREF=sub_4e60+137
0000000000008269         db  0xcc ; '.'
000000000000826a         db  0xff ; '.'
000000000000826b         db  0xff ; '.'
000000000000826c         db  0x08 ; '.'
000000000000826d         db  0xcc ; '.'
000000000000826e         db  0xff ; '.'
000000000000826f         db  0xff ; '.'
0000000000008270         db  0x08 ; '.'
0000000000008271         db  0xcc ; '.'
0000000000008272         db  0xff ; '.'
0000000000008273         db  0xff ; '.'
0000000000008274         db  0x08 ; '.'
0000000000008275         db  0xcc ; '.'
0000000000008276         db  0xff ; '.'
0000000000008277         db  0xff ; '.'
0000000000008278         db  0x08 ; '.'
0000000000008279         db  0xcc ; '.'
000000000000827a         db  0xff ; '.'
000000000000827b         db  0xff ; '.'
000000000000827c         db  0x08 ; '.'
000000000000827d         db  0xcc ; '.'
000000000000827e         db  0xff ; '.'
000000000000827f         db  0xff ; '.'
0000000000008280         db  0x08 ; '.'
0000000000008281         db  0xcc ; '.'
0000000000008282         db  0xff ; '.'
0000000000008283         db  0xff ; '.'
0000000000008284         db  0xe8 ; '.'
0000000000008285         db  0xcc ; '.'
0000000000008286         db  0xff ; '.'
0000000000008287         db  0xff ; '.'
0000000000008288         db  0x38 ; '8'
0000000000008289         db  0xce ; '.'
000000000000828a         db  0xff ; '.'
000000000000828b         db  0xff ; '.'
000000000000828c         db  0x20 ; ' '
000000000000828d         db  0xce ; '.'
000000000000828e         db  0xff ; '.'
000000000000828f         db  0xff ; '.'
0000000000008290         db  0xd0 ; '.'
0000000000008291         db  0xcc ; '.'
0000000000008292         db  0xff ; '.'
0000000000008293         db  0xff ; '.'
0000000000008294         db  0x10 ; '.'
0000000000008295         db  0xce ; '.'
0000000000008296         db  0xff ; '.'
0000000000008297         db  0xff ; '.'
0000000000008298         db  0xb8 ; '.'
0000000000008299         db  0xcc ; '.'
000000000000829a         db  0xff ; '.'
000000000000829b         db  0xff ; '.'
000000000000829c         db  0xf8 ; '.'
000000000000829d         db  0xcd ; '.'
000000000000829e         db  0xff ; '.'
000000000000829f         db  0xff ; '.'
00000000000082a0         db  0x08 ; '.'
00000000000082a1         db  0xcc ; '.'
00000000000082a2         db  0xff ; '.'
00000000000082a3         db  0xff ; '.'
00000000000082a4         db  0x08 ; '.'
00000000000082a5         db  0xcc ; '.'
00000000000082a6         db  0xff ; '.'
00000000000082a7         db  0xff ; '.'
00000000000082a8         db  0x08 ; '.'
00000000000082a9         db  0xcc ; '.'
00000000000082aa         db  0xff ; '.'
00000000000082ab         db  0xff ; '.'
00000000000082ac         db  0x08 ; '.'
00000000000082ad         db  0xcc ; '.'
00000000000082ae         db  0xff ; '.'
00000000000082af         db  0xff ; '.'
00000000000082b0         db  0x08 ; '.'
00000000000082b1         db  0xcc ; '.'
00000000000082b2         db  0xff ; '.'
00000000000082b3         db  0xff ; '.'
00000000000082b4         db  0x08 ; '.'
00000000000082b5         db  0xcc ; '.'
00000000000082b6         db  0xff ; '.'
00000000000082b7         db  0xff ; '.'
00000000000082b8         db  0x08 ; '.'
00000000000082b9         db  0xcc ; '.'
00000000000082ba         db  0xff ; '.'
00000000000082bb         db  0xff ; '.'
00000000000082bc         db  0x08 ; '.'
00000000000082bd         db  0xcc ; '.'
00000000000082be         db  0xff ; '.'
00000000000082bf         db  0xff ; '.'
00000000000082c0         db  0x08 ; '.'
00000000000082c1         db  0xcc ; '.'
00000000000082c2         db  0xff ; '.'
00000000000082c3         db  0xff ; '.'
00000000000082c4         db  0x08 ; '.'
00000000000082c5         db  0xcc ; '.'
00000000000082c6         db  0xff ; '.'
00000000000082c7         db  0xff ; '.'
00000000000082c8         db  0x08 ; '.'
00000000000082c9         db  0xcc ; '.'
00000000000082ca         db  0xff ; '.'
00000000000082cb         db  0xff ; '.'
00000000000082cc         db  0x08 ; '.'
00000000000082cd         db  0xcc ; '.'
00000000000082ce         db  0xff ; '.'
00000000000082cf         db  0xff ; '.'
00000000000082d0         db  0x08 ; '.'
00000000000082d1         db  0xcc ; '.'
00000000000082d2         db  0xff ; '.'
00000000000082d3         db  0xff ; '.'
00000000000082d4         db  0x08 ; '.'
00000000000082d5         db  0xcc ; '.'
00000000000082d6         db  0xff ; '.'
00000000000082d7         db  0xff ; '.'
00000000000082d8         db  0x08 ; '.'
00000000000082d9         db  0xcc ; '.'
00000000000082da         db  0xff ; '.'
00000000000082db         db  0xff ; '.'
00000000000082dc         db  0x08 ; '.'
00000000000082dd         db  0xcc ; '.'
00000000000082de         db  0xff ; '.'
00000000000082df         db  0xff ; '.'
00000000000082e0         db  0x08 ; '.'
00000000000082e1         db  0xcc ; '.'
00000000000082e2         db  0xff ; '.'
00000000000082e3         db  0xff ; '.'
00000000000082e4         db  0x08 ; '.'
00000000000082e5         db  0xcc ; '.'
00000000000082e6         db  0xff ; '.'
00000000000082e7         db  0xff ; '.'
00000000000082e8         db  0xe0 ; '.'
00000000000082e9         db  0xcd ; '.'
00000000000082ea         db  0xff ; '.'
00000000000082eb         db  0xff ; '.'
00000000000082ec         db  0xc8 ; '.'
00000000000082ed         db  0xcd ; '.'
00000000000082ee         db  0xff ; '.'
00000000000082ef         db  0xff ; '.'
00000000000082f0         db  0xc8 ; '.'
00000000000082f1         db  0xcd ; '.'
00000000000082f2         db  0xff ; '.'
00000000000082f3         db  0xff ; '.'
00000000000082f4         db  0xb0 ; '.'
00000000000082f5         db  0xcd ; '.'
00000000000082f6         db  0xff ; '.'
00000000000082f7         db  0xff ; '.'
00000000000082f8         db  0xc8 ; '.'
00000000000082f9         db  0xcd ; '.'
00000000000082fa         db  0xff ; '.'
00000000000082fb         db  0xff ; '.'
00000000000082fc         db  0x98 ; '.'
00000000000082fd         db  0xcd ; '.'
00000000000082fe         db  0xff ; '.'
00000000000082ff         db  0xff ; '.'
0000000000008300         db  0xc8 ; '.'
0000000000008301         db  0xcd ; '.'
0000000000008302         db  0xff ; '.'
0000000000008303         db  0xff ; '.'
0000000000008304         db  0x08 ; '.'
0000000000008305         db  0xca ; '.'
0000000000008306         db  0xff ; '.'
0000000000008307         db  0xff ; '.'
0000000000008308         db  0xc8 ; '.'
0000000000008309         db  0xcd ; '.'
000000000000830a         db  0xff ; '.'
000000000000830b         db  0xff ; '.'
000000000000830c         db  0xc8 ; '.'
000000000000830d         db  0xcd ; '.'
000000000000830e         db  0xff ; '.'
000000000000830f         db  0xff ; '.'
0000000000008310         db  0xc8 ; '.'
0000000000008311         db  0xcd ; '.'
0000000000008312         db  0xff ; '.'
0000000000008313         db  0xff ; '.'
0000000000008314         db  0x98 ; '.'
0000000000008315         db  0xcd ; '.'
0000000000008316         db  0xff ; '.'
0000000000008317         db  0xff ; '.'
0000000000008318         db  0x98 ; '.'
0000000000008319         db  0xcd ; '.'
000000000000831a         db  0xff ; '.'
000000000000831b         db  0xff ; '.'
000000000000831c         db  0x98 ; '.'
000000000000831d         db  0xcd ; '.'
000000000000831e         db  0xff ; '.'
000000000000831f         db  0xff ; '.'
0000000000008320         db  0x98 ; '.'
0000000000008321         db  0xcd ; '.'
0000000000008322         db  0xff ; '.'
0000000000008323         db  0xff ; '.'
0000000000008324         db  0x98 ; '.'
0000000000008325         db  0xcd ; '.'
0000000000008326         db  0xff ; '.'
0000000000008327         db  0xff ; '.'
0000000000008328         db  0x98 ; '.'
0000000000008329         db  0xcd ; '.'
000000000000832a         db  0xff ; '.'
000000000000832b         db  0xff ; '.'
000000000000832c         db  0x98 ; '.'
000000000000832d         db  0xcd ; '.'
000000000000832e         db  0xff ; '.'
000000000000832f         db  0xff ; '.'
0000000000008330         db  0x98 ; '.'
0000000000008331         db  0xcd ; '.'
0000000000008332         db  0xff ; '.'
0000000000008333         db  0xff ; '.'
0000000000008334         db  0x98 ; '.'
0000000000008335         db  0xcd ; '.'
0000000000008336         db  0xff ; '.'
0000000000008337         db  0xff ; '.'
0000000000008338         db  0x98 ; '.'
0000000000008339         db  0xcd ; '.'
000000000000833a         db  0xff ; '.'
000000000000833b         db  0xff ; '.'
000000000000833c         db  0x98 ; '.'
000000000000833d         db  0xcd ; '.'
000000000000833e         db  0xff ; '.'
000000000000833f         db  0xff ; '.'
0000000000008340         db  0x98 ; '.'
0000000000008341         db  0xcd ; '.'
0000000000008342         db  0xff ; '.'
0000000000008343         db  0xff ; '.'
0000000000008344         db  0x98 ; '.'
0000000000008345         db  0xcd ; '.'
0000000000008346         db  0xff ; '.'
0000000000008347         db  0xff ; '.'
0000000000008348         db  0x98 ; '.'
0000000000008349         db  0xcd ; '.'
000000000000834a         db  0xff ; '.'
000000000000834b         db  0xff ; '.'
000000000000834c         db  0x98 ; '.'
000000000000834d         db  0xcd ; '.'
000000000000834e         db  0xff ; '.'
000000000000834f         db  0xff ; '.'
0000000000008350         db  0x98 ; '.'
0000000000008351         db  0xcd ; '.'
0000000000008352         db  0xff ; '.'
0000000000008353         db  0xff ; '.'
0000000000008354         db  0xc8 ; '.'
0000000000008355         db  0xcd ; '.'
0000000000008356         db  0xff ; '.'
0000000000008357         db  0xff ; '.'
0000000000008358         db  0xc8 ; '.'
0000000000008359         db  0xcd ; '.'
000000000000835a         db  0xff ; '.'
000000000000835b         db  0xff ; '.'
000000000000835c         db  0xc8 ; '.'
000000000000835d         db  0xcd ; '.'
000000000000835e         db  0xff ; '.'
000000000000835f         db  0xff ; '.'
0000000000008360         db  0xc8 ; '.'
0000000000008361         db  0xcd ; '.'
0000000000008362         db  0xff ; '.'
0000000000008363         db  0xff ; '.'
0000000000008364         db  0xd8 ; '.'
0000000000008365         db  0xc9 ; '.'
0000000000008366         db  0xff ; '.'
0000000000008367         db  0xff ; '.'
0000000000008368         db  0x08 ; '.'
0000000000008369         db  0xcc ; '.'
000000000000836a         db  0xff ; '.'
000000000000836b         db  0xff ; '.'
000000000000836c         db  0x98 ; '.'
000000000000836d         db  0xcd ; '.'
000000000000836e         db  0xff ; '.'
000000000000836f         db  0xff ; '.'
0000000000008370         db  0x98 ; '.'
0000000000008371         db  0xcd ; '.'
0000000000008372         db  0xff ; '.'
0000000000008373         db  0xff ; '.'
0000000000008374         db  0x98 ; '.'
0000000000008375         db  0xcd ; '.'
0000000000008376         db  0xff ; '.'
0000000000008377         db  0xff ; '.'
0000000000008378         db  0x98 ; '.'
0000000000008379         db  0xcd ; '.'
000000000000837a         db  0xff ; '.'
000000000000837b         db  0xff ; '.'
000000000000837c         db  0x98 ; '.'
000000000000837d         db  0xcd ; '.'
000000000000837e         db  0xff ; '.'
000000000000837f         db  0xff ; '.'
0000000000008380         db  0x98 ; '.'
0000000000008381         db  0xcd ; '.'
0000000000008382         db  0xff ; '.'
0000000000008383         db  0xff ; '.'
0000000000008384         db  0x98 ; '.'
0000000000008385         db  0xcd ; '.'
0000000000008386         db  0xff ; '.'
0000000000008387         db  0xff ; '.'
0000000000008388         db  0x98 ; '.'
0000000000008389         db  0xcd ; '.'
000000000000838a         db  0xff ; '.'
000000000000838b         db  0xff ; '.'
000000000000838c         db  0x98 ; '.'
000000000000838d         db  0xcd ; '.'
000000000000838e         db  0xff ; '.'
000000000000838f         db  0xff ; '.'
0000000000008390         db  0x98 ; '.'
0000000000008391         db  0xcd ; '.'
0000000000008392         db  0xff ; '.'
0000000000008393         db  0xff ; '.'
0000000000008394         db  0x98 ; '.'
0000000000008395         db  0xcd ; '.'
0000000000008396         db  0xff ; '.'
0000000000008397         db  0xff ; '.'
0000000000008398         db  0x98 ; '.'
0000000000008399         db  0xcd ; '.'
000000000000839a         db  0xff ; '.'
000000000000839b         db  0xff ; '.'
000000000000839c         db  0x98 ; '.'
000000000000839d         db  0xcd ; '.'
000000000000839e         db  0xff ; '.'
000000000000839f         db  0xff ; '.'
00000000000083a0         db  0x98 ; '.'
00000000000083a1         db  0xcd ; '.'
00000000000083a2         db  0xff ; '.'
00000000000083a3         db  0xff ; '.'
00000000000083a4         db  0x98 ; '.'
00000000000083a5         db  0xcd ; '.'
00000000000083a6         db  0xff ; '.'
00000000000083a7         db  0xff ; '.'
00000000000083a8         db  0x98 ; '.'
00000000000083a9         db  0xcd ; '.'
00000000000083aa         db  0xff ; '.'
00000000000083ab         db  0xff ; '.'
00000000000083ac         db  0x98 ; '.'
00000000000083ad         db  0xcd ; '.'
00000000000083ae         db  0xff ; '.'
00000000000083af         db  0xff ; '.'
00000000000083b0         db  0x98 ; '.'
00000000000083b1         db  0xcd ; '.'
00000000000083b2         db  0xff ; '.'
00000000000083b3         db  0xff ; '.'
00000000000083b4         db  0x98 ; '.'
00000000000083b5         db  0xcd ; '.'
00000000000083b6         db  0xff ; '.'
00000000000083b7         db  0xff ; '.'
00000000000083b8         db  0x98 ; '.'
00000000000083b9         db  0xcd ; '.'
00000000000083ba         db  0xff ; '.'
00000000000083bb         db  0xff ; '.'
00000000000083bc         db  0x98 ; '.'
00000000000083bd         db  0xcd ; '.'
00000000000083be         db  0xff ; '.'
00000000000083bf         db  0xff ; '.'
00000000000083c0         db  0x98 ; '.'
00000000000083c1         db  0xcd ; '.'
00000000000083c2         db  0xff ; '.'
00000000000083c3         db  0xff ; '.'
00000000000083c4         db  0x98 ; '.'
00000000000083c5         db  0xcd ; '.'
00000000000083c6         db  0xff ; '.'
00000000000083c7         db  0xff ; '.'
00000000000083c8         db  0x98 ; '.'
00000000000083c9         db  0xcd ; '.'
00000000000083ca         db  0xff ; '.'
00000000000083cb         db  0xff ; '.'
00000000000083cc         db  0x98 ; '.'
00000000000083cd         db  0xcd ; '.'
00000000000083ce         db  0xff ; '.'
00000000000083cf         db  0xff ; '.'
00000000000083d0         db  0x98 ; '.'
00000000000083d1         db  0xcd ; '.'
00000000000083d2         db  0xff ; '.'
00000000000083d3         db  0xff ; '.'
00000000000083d4         db  0xc8 ; '.'
00000000000083d5         db  0xcd ; '.'
00000000000083d6         db  0xff ; '.'
00000000000083d7         db  0xff ; '.'
00000000000083d8         db  0x98 ; '.'
00000000000083d9         db  0xcc ; '.'
00000000000083da         db  0xff ; '.'
00000000000083db         db  0xff ; '.'
00000000000083dc         db  0x98 ; '.'
00000000000083dd         db  0xcd ; '.'
00000000000083de         db  0xff ; '.'
00000000000083df         db  0xff ; '.'
00000000000083e0         db  0xc8 ; '.'
00000000000083e1         db  0xcd ; '.'
00000000000083e2         db  0xff ; '.'
00000000000083e3         db  0xff ; '.'
00000000000083e4         db  0x98 ; '.'
00000000000083e5         db  0xcd ; '.'
00000000000083e6         db  0xff ; '.'
00000000000083e7         db  0xff ; '.'
00000000000083e8         db  0xc8 ; '.'
00000000000083e9         db  0xcd ; '.'
00000000000083ea         db  0xff ; '.'
00000000000083eb         db  0xff ; '.'
00000000000083ec         db  0x98 ; '.'
00000000000083ed         db  0xcd ; '.'
00000000000083ee         db  0xff ; '.'
00000000000083ef         db  0xff ; '.'
00000000000083f0         db  0x98 ; '.'
00000000000083f1         db  0xcd ; '.'
00000000000083f2         db  0xff ; '.'
00000000000083f3         db  0xff ; '.'
00000000000083f4         db  0x98 ; '.'
00000000000083f5         db  0xcd ; '.'
00000000000083f6         db  0xff ; '.'
00000000000083f7         db  0xff ; '.'
00000000000083f8         db  0x98 ; '.'
00000000000083f9         db  0xcd ; '.'
00000000000083fa         db  0xff ; '.'
00000000000083fb         db  0xff ; '.'
00000000000083fc         db  0x98 ; '.'
00000000000083fd         db  0xcd ; '.'
00000000000083fe         db  0xff ; '.'
00000000000083ff         db  0xff ; '.'
0000000000008400         db  0x98 ; '.'
0000000000008401         db  0xcd ; '.'
0000000000008402         db  0xff ; '.'
0000000000008403         db  0xff ; '.'
0000000000008404         db  0x98 ; '.'
0000000000008405         db  0xcd ; '.'
0000000000008406         db  0xff ; '.'
0000000000008407         db  0xff ; '.'
0000000000008408         db  0x98 ; '.'
0000000000008409         db  0xcd ; '.'
000000000000840a         db  0xff ; '.'
000000000000840b         db  0xff ; '.'
000000000000840c         db  0x98 ; '.'
000000000000840d         db  0xcd ; '.'
000000000000840e         db  0xff ; '.'
000000000000840f         db  0xff ; '.'
0000000000008410         db  0x98 ; '.'
0000000000008411         db  0xcd ; '.'
0000000000008412         db  0xff ; '.'
0000000000008413         db  0xff ; '.'
0000000000008414         db  0x98 ; '.'
0000000000008415         db  0xcd ; '.'
0000000000008416         db  0xff ; '.'
0000000000008417         db  0xff ; '.'
0000000000008418         db  0x98 ; '.'
0000000000008419         db  0xcd ; '.'
000000000000841a         db  0xff ; '.'
000000000000841b         db  0xff ; '.'
000000000000841c         db  0x98 ; '.'
000000000000841d         db  0xcd ; '.'
000000000000841e         db  0xff ; '.'
000000000000841f         db  0xff ; '.'
0000000000008420         db  0x98 ; '.'
0000000000008421         db  0xcd ; '.'
0000000000008422         db  0xff ; '.'
0000000000008423         db  0xff ; '.'
0000000000008424         db  0x98 ; '.'
0000000000008425         db  0xcd ; '.'
0000000000008426         db  0xff ; '.'
0000000000008427         db  0xff ; '.'
0000000000008428         db  0x98 ; '.'
0000000000008429         db  0xcd ; '.'
000000000000842a         db  0xff ; '.'
000000000000842b         db  0xff ; '.'
000000000000842c         db  0x98 ; '.'
000000000000842d         db  0xcd ; '.'
000000000000842e         db  0xff ; '.'
000000000000842f         db  0xff ; '.'
0000000000008430         db  0x98 ; '.'
0000000000008431         db  0xcd ; '.'
0000000000008432         db  0xff ; '.'
0000000000008433         db  0xff ; '.'
0000000000008434         db  0x98 ; '.'
0000000000008435         db  0xcd ; '.'
0000000000008436         db  0xff ; '.'
0000000000008437         db  0xff ; '.'
0000000000008438         db  0x98 ; '.'
0000000000008439         db  0xcd ; '.'
000000000000843a         db  0xff ; '.'
000000000000843b         db  0xff ; '.'
000000000000843c         db  0x98 ; '.'
000000000000843d         db  0xcd ; '.'
000000000000843e         db  0xff ; '.'
000000000000843f         db  0xff ; '.'
0000000000008440         db  0x98 ; '.'
0000000000008441         db  0xcd ; '.'
0000000000008442         db  0xff ; '.'
0000000000008443         db  0xff ; '.'
0000000000008444         db  0x98 ; '.'
0000000000008445         db  0xcd ; '.'
0000000000008446         db  0xff ; '.'
0000000000008447         db  0xff ; '.'
0000000000008448         db  0x98 ; '.'
0000000000008449         db  0xcd ; '.'
000000000000844a         db  0xff ; '.'
000000000000844b         db  0xff ; '.'
000000000000844c         db  0x98 ; '.'
000000000000844d         db  0xcd ; '.'
000000000000844e         db  0xff ; '.'
000000000000844f         db  0xff ; '.'
0000000000008450         db  0x98 ; '.'
0000000000008451         db  0xcd ; '.'
0000000000008452         db  0xff ; '.'
0000000000008453         db  0xff ; '.'
0000000000008454         db  0x08 ; '.'
0000000000008455         db  0xc9 ; '.'
0000000000008456         db  0xff ; '.'
0000000000008457         db  0xff ; '.'
0000000000008458         db  0xc8 ; '.'
0000000000008459         db  0xcd ; '.'
000000000000845a         db  0xff ; '.'
000000000000845b         db  0xff ; '.'
000000000000845c         db  0x08 ; '.'
000000000000845d         db  0xc9 ; '.'
000000000000845e         db  0xff ; '.'
000000000000845f         db  0xff ; '.'
0000000000008460         db  0xb0 ; '.'
0000000000008461         db  0xcd ; '.'
0000000000008462         db  0xff ; '.'
0000000000008463         db  0xff ; '.'
0000000000008464         db  0x00 ; '.'
0000000000008465         db  0x00 ; '.'
0000000000008466         db  0x00 ; '.'
0000000000008467         db  0x00 ; '.'
0000000000008468         db  0x00 ; '.'
0000000000008469         db  0x00 ; '.'
000000000000846a         db  0x00 ; '.'
000000000000846b         db  0x00 ; '.'
000000000000846c         db  0x00 ; '.'
000000000000846d         db  0x00 ; '.'
000000000000846e         db  0x00 ; '.'
000000000000846f         db  0x00 ; '.'
0000000000008470         db  0x00 ; '.'
0000000000008471         db  0x00 ; '.'
0000000000008472         db  0x00 ; '.'
0000000000008473         db  0x00 ; '.'
0000000000008474         db  0x00 ; '.'
0000000000008475         db  0x00 ; '.'
0000000000008476         db  0x00 ; '.'
0000000000008477         db  0x00 ; '.'
0000000000008478         db  0x00 ; '.'
0000000000008479         db  0x00 ; '.'
000000000000847a         db  0x00 ; '.'
000000000000847b         db  0x00 ; '.'
000000000000847c         db  0x00 ; '.'
000000000000847d         db  0x00 ; '.'
000000000000847e         db  0x00 ; '.'
000000000000847f         db  0x00 ; '.'
                     quoting_style_vals:
0000000000008480         db  0x00 ; '.'
0000000000008481         db  0x00 ; '.'
0000000000008482         db  0x00 ; '.'
0000000000008483         db  0x00 ; '.'
0000000000008484         db  0x01 ; '.'
0000000000008485         db  0x00 ; '.'
0000000000008486         db  0x00 ; '.'
0000000000008487         db  0x00 ; '.'
0000000000008488         db  0x02 ; '.'
0000000000008489         db  0x00 ; '.'
000000000000848a         db  0x00 ; '.'
000000000000848b         db  0x00 ; '.'
000000000000848c         db  0x03 ; '.'
000000000000848d         db  0x00 ; '.'
000000000000848e         db  0x00 ; '.'
000000000000848f         db  0x00 ; '.'
0000000000008490         db  0x04 ; '.'
0000000000008491         db  0x00 ; '.'
0000000000008492         db  0x00 ; '.'
0000000000008493         db  0x00 ; '.'
0000000000008494         db  0x05 ; '.'
0000000000008495         db  0x00 ; '.'
0000000000008496         db  0x00 ; '.'
0000000000008497         db  0x00 ; '.'
0000000000008498         db  0x06 ; '.'
0000000000008499         db  0x00 ; '.'
000000000000849a         db  0x00 ; '.'
000000000000849b         db  0x00 ; '.'
000000000000849c         db  0x07 ; '.'
000000000000849d         db  0x00 ; '.'
000000000000849e         db  0x00 ; '.'
000000000000849f         db  0x00 ; '.'
00000000000084a0         db  0x08 ; '.'
00000000000084a1         db  0x00 ; '.'
00000000000084a2         db  0x00 ; '.'
00000000000084a3         db  0x00 ; '.'
00000000000084a4         db  0x09 ; '.'
00000000000084a5         db  0x00 ; '.'
00000000000084a6         db  0x00 ; '.'
00000000000084a7         db  0x00 ; '.'
                     aSSSn:
00000000000084a8         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
00000000000084b4         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
00000000000084bb         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
00000000000084bc         db  0x43 ; 'C'
00000000000084bd         db  0x29 ; ')'
00000000000084be         db  0x00 ; '.'
                     aWrittenBySn:
00000000000084bf         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
00000000000084cf         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
00000000000084e6         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
0000000000008502         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
0000000000008517         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
000000000000852d         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
0000000000008541         align      8
                     aNlicenseGplv3G:
0000000000008548         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
0000000000008614         align      8
                     aWrittenBySSSna:
0000000000008618         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_8638:        // aWrittenBySSSns
0000000000008638         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
000000000000865c         align      32
                     aWrittenBySSSns_8660:        // aWrittenBySSSns
0000000000008660         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_8688:        // aWrittenBySSSns
0000000000008688         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
00000000000086b4         align      8
                     aWrittenBySSSns_86b8:        // aWrittenBySSSns
00000000000086b8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
00000000000086e8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
000000000000871c         align      32
                     aWrittenBySSSns_8720:        // aWrittenBySSSns
0000000000008720         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
000000000000875c         align      32
                     aGeneralHelpUsi:
0000000000008760         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
00000000000087a1         align      8
                     switch_table_87a8:        // switch_table
00000000000087a8         dd         version_etc_arn.loc_6646-switch_table_87a8, version_etc_arn.loc_66d8-switch_table_87a8, version_etc_arn.loc_6718-switch_table_87a8, version_etc_arn.loc_6760-switch_table_87a8 ; switch table used at 0x65c4 containing 10 entries, DATA XREF=version_etc_arn+150
00000000000087b8         dd         version_etc_arn.loc_67b0-switch_table_87a8, version_etc_arn.loc_6808-switch_table_87a8, version_etc_arn.loc_6838-switch_table_87a8, version_etc_arn.loc_68a0-switch_table_87a8
00000000000087c8         dd         version_etc_arn.loc_65d0-switch_table_87a8, version_etc_arn.loc_6680-switch_table_87a8
00000000000087d0         align      32
                     version_etc_copyright:
00000000000087e0         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
000000000000880f         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
0000000000008820         db  0x54 ; 'T'                                         ; DATA XREF=setenv_TZ+8, setenv_TZ+32, set_tz+7
0000000000008821         db  0x5a ; 'Z'
0000000000008822         db  0x00 ; '.'
                     aPosix:
0000000000008823         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
0000000000008829         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
000000000000882f         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x8830; 0x8b0c[ (732 bytes)
        ; File offset : [34864; 35596[ (732 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000008830         db  0x01 ; '.'
0000000000008831         db  0x1b ; '.'
0000000000008832         db  0x03 ; '.'
0000000000008833         db  0x3b ; ';'
0000000000008834         db  0xdc ; '.'
0000000000008835         db  0x02 ; '.'
0000000000008836         db  0x00 ; '.'
0000000000008837         db  0x00 ; '.'
0000000000008838         db  0x5a ; 'Z'
0000000000008839         db  0x00 ; '.'
000000000000883a         db  0x00 ; '.'
000000000000883b         db  0x00 ; '.'
000000000000883c         db  0xe0 ; '.'
000000000000883d         db  0x8f ; '.'
000000000000883e         db  0xff ; '.'
000000000000883f         db  0xff ; '.'
0000000000008840         db  0x28 ; '('
0000000000008841         db  0x03 ; '.'
0000000000008842         db  0x00 ; '.'
0000000000008843         db  0x00 ; '.'
0000000000008844         db  0x20 ; ' '
0000000000008845         db  0x94 ; '.'
0000000000008846         db  0xff ; '.'
0000000000008847         db  0xff ; '.'
0000000000008848         db  0x50 ; 'P'
0000000000008849         db  0x03 ; '.'
000000000000884a         db  0x00 ; '.'
000000000000884b         db  0x00 ; '.'
000000000000884c         db  0x30 ; '0'
000000000000884d         db  0x94 ; '.'
000000000000884e         db  0xff ; '.'
000000000000884f         db  0xff ; '.'
0000000000008850         db  0x08 ; '.'
0000000000008851         db  0x04 ; '.'
0000000000008852         db  0x00 ; '.'
0000000000008853         db  0x00 ; '.'
0000000000008854         db  0x50 ; 'P'
0000000000008855         db  0x95 ; '.'
0000000000008856         db  0xff ; '.'
0000000000008857         db  0xff ; '.'
0000000000008858         db  0xf8 ; '.'
0000000000008859         db  0x02 ; '.'
000000000000885a         db  0x00 ; '.'
000000000000885b         db  0x00 ; '.'
000000000000885c         db  0x60 ; '`'
000000000000885d         db  0x96 ; '.'
000000000000885e         db  0xff ; '.'
000000000000885f         db  0xff ; '.'
0000000000008860         db  0x68 ; 'h'
0000000000008861         db  0x03 ; '.'
0000000000008862         db  0x00 ; '.'
0000000000008863         db  0x00 ; '.'
0000000000008864         db  0xa0 ; '.'
0000000000008865         db  0x9a ; '.'
0000000000008866         db  0xff ; '.'
0000000000008867         db  0xff ; '.'
0000000000008868         db  0xb8 ; '.'
0000000000008869         db  0x03 ; '.'
000000000000886a         db  0x00 ; '.'
000000000000886b         db  0x00 ; '.'
000000000000886c         db  0x30 ; '0'
000000000000886d         db  0x9b ; '.'
000000000000886e         db  0xff ; '.'
000000000000886f         db  0xff ; '.'
0000000000008870         db  0xdc ; '.'
0000000000008871         db  0x03 ; '.'
0000000000008872         db  0x00 ; '.'
0000000000008873         db  0x00 ; '.'
0000000000008874         db  0xd0 ; '.'
0000000000008875         db  0x9e ; '.'
0000000000008876         db  0xff ; '.'
0000000000008877         db  0xff ; '.'
0000000000008878         db  0x48 ; 'H'
0000000000008879         db  0x04 ; '.'
000000000000887a         db  0x00 ; '.'
000000000000887b         db  0x00 ; '.'
000000000000887c         db  0x40 ; '@'
000000000000887d         db  0x9f ; '.'
000000000000887e         db  0xff ; '.'
000000000000887f         db  0xff ; '.'
0000000000008880         db  0x80 ; '.'
0000000000008881         db  0x04 ; '.'
0000000000008882         db  0x00 ; '.'
0000000000008883         db  0x00 ; '.'
0000000000008884         db  0x50 ; 'P'
0000000000008885         db  0x9f ; '.'
0000000000008886         db  0xff ; '.'
0000000000008887         db  0xff ; '.'
0000000000008888         db  0x94 ; '.'
0000000000008889         db  0x04 ; '.'
000000000000888a         db  0x00 ; '.'
000000000000888b         db  0x00 ; '.'
000000000000888c         db  0x60 ; '`'
000000000000888d         db  0x9f ; '.'
000000000000888e         db  0xff ; '.'
000000000000888f         db  0xff ; '.'
0000000000008890         db  0xa8 ; '.'
0000000000008891         db  0x04 ; '.'
0000000000008892         db  0x00 ; '.'
0000000000008893         db  0x00 ; '.'
0000000000008894         db  0x10 ; '.'
0000000000008895         db  0xa0 ; '.'
0000000000008896         db  0xff ; '.'
0000000000008897         db  0xff ; '.'
0000000000008898         db  0xd8 ; '.'
0000000000008899         db  0x04 ; '.'
000000000000889a         db  0x00 ; '.'
000000000000889b         db  0x00 ; '.'
000000000000889c         db  0x70 ; 'p'
000000000000889d         db  0xa0 ; '.'
000000000000889e         db  0xff ; '.'
000000000000889f         db  0xff ; '.'
00000000000088a0         db  0x14 ; '.'
00000000000088a1         db  0x05 ; '.'
00000000000088a2         db  0x00 ; '.'
00000000000088a3         db  0x00 ; '.'
00000000000088a4         db  0xd0 ; '.'
00000000000088a5         db  0xa0 ; '.'
00000000000088a6         db  0xff ; '.'
00000000000088a7         db  0xff ; '.'
00000000000088a8         db  0x50 ; 'P'
00000000000088a9         db  0x05 ; '.'
00000000000088aa         db  0x00 ; '.'
00000000000088ab         db  0x00 ; '.'
00000000000088ac         db  0xf0 ; '.'
00000000000088ad         db  0xbc ; '.'
00000000000088ae         db  0xff ; '.'
00000000000088af         db  0xff ; '.'
00000000000088b0         db  0xc8 ; '.'
00000000000088b1         db  0x05 ; '.'
00000000000088b2         db  0x00 ; '.'
00000000000088b3         db  0x00 ; '.'
00000000000088b4         db  0x40 ; '@'
00000000000088b5         db  0xbd ; '.'
00000000000088b6         db  0xff ; '.'
00000000000088b7         db  0xff ; '.'
00000000000088b8         db  0xf0 ; '.'
00000000000088b9         db  0x05 ; '.'
00000000000088ba         db  0x00 ; '.'
00000000000088bb         db  0x00 ; '.'
00000000000088bc         db  0x80 ; '.'
00000000000088bd         db  0xbe ; '.'
00000000000088be         db  0xff ; '.'
00000000000088bf         db  0xff ; '.'
00000000000088c0         db  0x2c ; ','
00000000000088c1         db  0x06 ; '.'
00000000000088c2         db  0x00 ; '.'
00000000000088c3         db  0x00 ; '.'
00000000000088c4         db  0xc0 ; '.'
00000000000088c5         db  0xbf ; '.'
00000000000088c6         db  0xff ; '.'
00000000000088c7         db  0xff ; '.'
00000000000088c8         db  0x78 ; 'x'
00000000000088c9         db  0x06 ; '.'
00000000000088ca         db  0x00 ; '.'
00000000000088cb         db  0x00 ; '.'
00000000000088cc         db  0x60 ; '`'
00000000000088cd         db  0xc0 ; '.'
00000000000088ce         db  0xff ; '.'
00000000000088cf         db  0xff ; '.'
00000000000088d0         db  0x98 ; '.'
00000000000088d1         db  0x06 ; '.'
00000000000088d2         db  0x00 ; '.'
00000000000088d3         db  0x00 ; '.'
00000000000088d4         db  0x50 ; 'P'
00000000000088d5         db  0xc1 ; '.'
00000000000088d6         db  0xff ; '.'
00000000000088d7         db  0xff ; '.'
00000000000088d8         db  0xdc ; '.'
00000000000088d9         db  0x06 ; '.'
00000000000088da         db  0x00 ; '.'
00000000000088db         db  0x00 ; '.'
00000000000088dc         db  0x90 ; '.'
00000000000088dd         db  0xd3 ; '.'
00000000000088de         db  0xff ; '.'
00000000000088df         db  0xff ; '.'
00000000000088e0         db  0x54 ; 'T'
00000000000088e1         db  0x07 ; '.'
00000000000088e2         db  0x00 ; '.'
00000000000088e3         db  0x00 ; '.'
00000000000088e4         db  0x40 ; '@'
00000000000088e5         db  0xd5 ; '.'
00000000000088e6         db  0xff ; '.'
00000000000088e7         db  0xff ; '.'
00000000000088e8         db  0xc0 ; '.'
00000000000088e9         db  0x07 ; '.'
00000000000088ea         db  0x00 ; '.'
00000000000088eb         db  0x00 ; '.'
00000000000088ec         db  0x80 ; '.'
00000000000088ed         db  0xd5 ; '.'
00000000000088ee         db  0xff ; '.'
00000000000088ef         db  0xff ; '.'
00000000000088f0         db  0xec ; '.'
00000000000088f1         db  0x07 ; '.'
00000000000088f2         db  0x00 ; '.'
00000000000088f3         db  0x00 ; '.'
00000000000088f4         db  0xa0 ; '.'
00000000000088f5         db  0xd5 ; '.'
00000000000088f6         db  0xff ; '.'
00000000000088f7         db  0xff ; '.'
00000000000088f8         db  0x00 ; '.'
00000000000088f9         db  0x08 ; '.'
00000000000088fa         db  0x00 ; '.'
00000000000088fb         db  0x00 ; '.'
00000000000088fc         db  0xc0 ; '.'
00000000000088fd         db  0xd5 ; '.'
00000000000088fe         db  0xff ; '.'
00000000000088ff         db  0xff ; '.'
0000000000008900         db  0x14 ; '.'
0000000000008901         db  0x08 ; '.'
0000000000008902         db  0x00 ; '.'
0000000000008903         db  0x00 ; '.'
0000000000008904         db  0x00 ; '.'
0000000000008905         db  0xd6 ; '.'
0000000000008906         db  0xff ; '.'
0000000000008907         db  0xff ; '.'
0000000000008908         db  0x28 ; '('
0000000000008909         db  0x08 ; '.'
000000000000890a         db  0x00 ; '.'
000000000000890b         db  0x00 ; '.'
000000000000890c         db  0x20 ; ' '
000000000000890d         db  0xd6 ; '.'
000000000000890e         db  0xff ; '.'
000000000000890f         db  0xff ; '.'
0000000000008910         db  0x3c ; '<'
0000000000008911         db  0x08 ; '.'
0000000000008912         db  0x00 ; '.'
0000000000008913         db  0x00 ; '.'
0000000000008914         db  0x50 ; 'P'
0000000000008915         db  0xd6 ; '.'
0000000000008916         db  0xff ; '.'
0000000000008917         db  0xff ; '.'
0000000000008918         db  0x50 ; 'P'
0000000000008919         db  0x08 ; '.'
000000000000891a         db  0x00 ; '.'
000000000000891b         db  0x00 ; '.'
000000000000891c         db  0xd0 ; '.'
000000000000891d         db  0xd6 ; '.'
000000000000891e         db  0xff ; '.'
000000000000891f         db  0xff ; '.'
0000000000008920         db  0xa4 ; '.'
0000000000008921         db  0x08 ; '.'
0000000000008922         db  0x00 ; '.'
0000000000008923         db  0x00 ; '.'
0000000000008924         db  0xc0 ; '.'
0000000000008925         db  0xd7 ; '.'
0000000000008926         db  0xff ; '.'
0000000000008927         db  0xff ; '.'
0000000000008928         db  0x10 ; '.'
0000000000008929         db  0x09 ; '.'
000000000000892a         db  0x00 ; '.'
000000000000892b         db  0x00 ; '.'
000000000000892c         db  0xd0 ; '.'
000000000000892d         db  0xd7 ; '.'
000000000000892e         db  0xff ; '.'
000000000000892f         db  0xff ; '.'
0000000000008930         db  0x24 ; '$'
0000000000008931         db  0x09 ; '.'
0000000000008932         db  0x00 ; '.'
0000000000008933         db  0x00 ; '.'
0000000000008934         db  0x70 ; 'p'
0000000000008935         db  0xd8 ; '.'
0000000000008936         db  0xff ; '.'
0000000000008937         db  0xff ; '.'
0000000000008938         db  0x50 ; 'P'
0000000000008939         db  0x09 ; '.'
000000000000893a         db  0x00 ; '.'
000000000000893b         db  0x00 ; '.'
000000000000893c         db  0x90 ; '.'
000000000000893d         db  0xd8 ; '.'
000000000000893e         db  0xff ; '.'
000000000000893f         db  0xff ; '.'
0000000000008940         db  0x64 ; 'd'
0000000000008941         db  0x09 ; '.'
0000000000008942         db  0x00 ; '.'
0000000000008943         db  0x00 ; '.'
0000000000008944         db  0xa0 ; '.'
0000000000008945         db  0xd8 ; '.'
0000000000008946         db  0xff ; '.'
0000000000008947         db  0xff ; '.'
0000000000008948         db  0x78 ; 'x'
0000000000008949         db  0x09 ; '.'
000000000000894a         db  0x00 ; '.'
000000000000894b         db  0x00 ; '.'
000000000000894c         db  0xc0 ; '.'
000000000000894d         db  0xd8 ; '.'
000000000000894e         db  0xff ; '.'
000000000000894f         db  0xff ; '.'
0000000000008950         db  0x8c ; '.'
0000000000008951         db  0x09 ; '.'
0000000000008952         db  0x00 ; '.'
0000000000008953         db  0x00 ; '.'
0000000000008954         db  0xe0 ; '.'
0000000000008955         db  0xd8 ; '.'
0000000000008956         db  0xff ; '.'
0000000000008957         db  0xff ; '.'
0000000000008958         db  0xa0 ; '.'
0000000000008959         db  0x09 ; '.'
000000000000895a         db  0x00 ; '.'
000000000000895b         db  0x00 ; '.'
000000000000895c         db  0x70 ; 'p'
000000000000895d         db  0xd9 ; '.'
000000000000895e         db  0xff ; '.'
000000000000895f         db  0xff ; '.'
0000000000008960         db  0xbc ; '.'
0000000000008961         db  0x09 ; '.'
0000000000008962         db  0x00 ; '.'
0000000000008963         db  0x00 ; '.'
0000000000008964         db  0x00 ; '.'
0000000000008965         db  0xda ; '.'
0000000000008966         db  0xff ; '.'
0000000000008967         db  0xff ; '.'
0000000000008968         db  0xd8 ; '.'
0000000000008969         db  0x09 ; '.'
000000000000896a         db  0x00 ; '.'
000000000000896b         db  0x00 ; '.'
000000000000896c         db  0x10 ; '.'
000000000000896d         db  0xda ; '.'
000000000000896e         db  0xff ; '.'
000000000000896f         db  0xff ; '.'
0000000000008970         db  0xec ; '.'
0000000000008971         db  0x09 ; '.'
0000000000008972         db  0x00 ; '.'
0000000000008973         db  0x00 ; '.'
0000000000008974         db  0x20 ; ' '
0000000000008975         db  0xda ; '.'
0000000000008976         db  0xff ; '.'
0000000000008977         db  0xff ; '.'
0000000000008978         db  0x00 ; '.'
0000000000008979         db  0x0a ; '.'
000000000000897a         db  0x00 ; '.'
000000000000897b         db  0x00 ; '.'
000000000000897c         db  0xc0 ; '.'
000000000000897d         db  0xda ; '.'
000000000000897e         db  0xff ; '.'
000000000000897f         db  0xff ; '.'
0000000000008980         db  0x1c ; '.'
0000000000008981         db  0x0a ; '.'
0000000000008982         db  0x00 ; '.'
0000000000008983         db  0x00 ; '.'
0000000000008984         db  0xd0 ; '.'
0000000000008985         db  0xda ; '.'
0000000000008986         db  0xff ; '.'
0000000000008987         db  0xff ; '.'
0000000000008988         db  0x30 ; '0'
0000000000008989         db  0x0a ; '.'
000000000000898a         db  0x00 ; '.'
000000000000898b         db  0x00 ; '.'
000000000000898c         db  0xf0 ; '.'
000000000000898d         db  0xda ; '.'
000000000000898e         db  0xff ; '.'
000000000000898f         db  0xff ; '.'
0000000000008990         db  0x44 ; 'D'
0000000000008991         db  0x0a ; '.'
0000000000008992         db  0x00 ; '.'
0000000000008993         db  0x00 ; '.'
0000000000008994         db  0x00 ; '.'
0000000000008995         db  0xdb ; '.'
0000000000008996         db  0xff ; '.'
0000000000008997         db  0xff ; '.'
0000000000008998         db  0x58 ; 'X'
0000000000008999         db  0x0a ; '.'
000000000000899a         db  0x00 ; '.'
000000000000899b         db  0x00 ; '.'
000000000000899c         db  0x90 ; '.'
000000000000899d         db  0xdb ; '.'
000000000000899e         db  0xff ; '.'
000000000000899f         db  0xff ; '.'
00000000000089a0         db  0x74 ; 't'
00000000000089a1         db  0x0a ; '.'
00000000000089a2         db  0x00 ; '.'
00000000000089a3         db  0x00 ; '.'
00000000000089a4         db  0x30 ; '0'
00000000000089a5         db  0xdc ; '.'
00000000000089a6         db  0xff ; '.'
00000000000089a7         db  0xff ; '.'
00000000000089a8         db  0x90 ; '.'
00000000000089a9         db  0x0a ; '.'
00000000000089aa         db  0x00 ; '.'
00000000000089ab         db  0x00 ; '.'
00000000000089ac         db  0x40 ; '@'
00000000000089ad         db  0xdc ; '.'
00000000000089ae         db  0xff ; '.'
00000000000089af         db  0xff ; '.'
00000000000089b0         db  0xa4 ; '.'
00000000000089b1         db  0x0a ; '.'
00000000000089b2         db  0x00 ; '.'
00000000000089b3         db  0x00 ; '.'
00000000000089b4         db  0x60 ; '`'
00000000000089b5         db  0xdc ; '.'
00000000000089b6         db  0xff ; '.'
00000000000089b7         db  0xff ; '.'
00000000000089b8         db  0xb8 ; '.'
00000000000089b9         db  0x0a ; '.'
00000000000089ba         db  0x00 ; '.'
00000000000089bb         db  0x00 ; '.'
00000000000089bc         db  0x80 ; '.'
00000000000089bd         db  0xdc ; '.'
00000000000089be         db  0xff ; '.'
00000000000089bf         db  0xff ; '.'
00000000000089c0         db  0xcc ; '.'
00000000000089c1         db  0x0a ; '.'
00000000000089c2         db  0x00 ; '.'
00000000000089c3         db  0x00 ; '.'
00000000000089c4         db  0x90 ; '.'
00000000000089c5         db  0xdc ; '.'
00000000000089c6         db  0xff ; '.'
00000000000089c7         db  0xff ; '.'
00000000000089c8         db  0xe0 ; '.'
00000000000089c9         db  0x0a ; '.'
00000000000089ca         db  0x00 ; '.'
00000000000089cb         db  0x00 ; '.'
00000000000089cc         db  0xb0 ; '.'
00000000000089cd         db  0xdc ; '.'
00000000000089ce         db  0xff ; '.'
00000000000089cf         db  0xff ; '.'
00000000000089d0         db  0xf4 ; '.'
00000000000089d1         db  0x0a ; '.'
00000000000089d2         db  0x00 ; '.'
00000000000089d3         db  0x00 ; '.'
00000000000089d4         db  0xd0 ; '.'
00000000000089d5         db  0xdc ; '.'
00000000000089d6         db  0xff ; '.'
00000000000089d7         db  0xff ; '.'
00000000000089d8         db  0x08 ; '.'
00000000000089d9         db  0x0b ; '.'
00000000000089da         db  0x00 ; '.'
00000000000089db         db  0x00 ; '.'
00000000000089dc         db  0xf0 ; '.'
00000000000089dd         db  0xdc ; '.'
00000000000089de         db  0xff ; '.'
00000000000089df         db  0xff ; '.'
00000000000089e0         db  0x20 ; ' '
00000000000089e1         db  0x0b ; '.'
00000000000089e2         db  0x00 ; '.'
00000000000089e3         db  0x00 ; '.'
00000000000089e4         db  0x10 ; '.'
00000000000089e5         db  0xe1 ; '.'
00000000000089e6         db  0xff ; '.'
00000000000089e7         db  0xff ; '.'
00000000000089e8         db  0x34 ; '4'
00000000000089e9         db  0x0c ; '.'
00000000000089ea         db  0x00 ; '.'
00000000000089eb         db  0x00 ; '.'
00000000000089ec         db  0x30 ; '0'
00000000000089ed         db  0xe1 ; '.'
00000000000089ee         db  0xff ; '.'
00000000000089ef         db  0xff ; '.'
00000000000089f0         db  0x48 ; 'H'
00000000000089f1         db  0x0c ; '.'
00000000000089f2         db  0x00 ; '.'
00000000000089f3         db  0x00 ; '.'
00000000000089f4         db  0xb0 ; '.'
00000000000089f5         db  0xe1 ; '.'
00000000000089f6         db  0xff ; '.'
00000000000089f7         db  0xff ; '.'
00000000000089f8         db  0x64 ; 'd'
00000000000089f9         db  0x0c ; '.'
00000000000089fa         db  0x00 ; '.'
00000000000089fb         db  0x00 ; '.'
00000000000089fc         db  0x90 ; '.'
00000000000089fd         db  0xe2 ; '.'
00000000000089fe         db  0xff ; '.'
00000000000089ff         db  0xff ; '.'
0000000000008a00         db  0x90 ; '.'
0000000000008a01         db  0x0c ; '.'
0000000000008a02         db  0x00 ; '.'
0000000000008a03         db  0x00 ; '.'
0000000000008a04         db  0x10 ; '.'
0000000000008a05         db  0xe3 ; '.'
0000000000008a06         db  0xff ; '.'
0000000000008a07         db  0xff ; '.'
0000000000008a08         db  0xb0 ; '.'
0000000000008a09         db  0x0c ; '.'
0000000000008a0a         db  0x00 ; '.'
0000000000008a0b         db  0x00 ; '.'
0000000000008a0c         db  0x30 ; '0'
0000000000008a0d         db  0xe3 ; '.'
0000000000008a0e         db  0xff ; '.'
0000000000008a0f         db  0xff ; '.'
0000000000008a10         db  0xcc ; '.'
0000000000008a11         db  0x0c ; '.'
0000000000008a12         db  0x00 ; '.'
0000000000008a13         db  0x00 ; '.'
0000000000008a14         db  0x60 ; '`'
0000000000008a15         db  0xe3 ; '.'
0000000000008a16         db  0xff ; '.'
0000000000008a17         db  0xff ; '.'
0000000000008a18         db  0xe0 ; '.'
0000000000008a19         db  0x0c ; '.'
0000000000008a1a         db  0x00 ; '.'
0000000000008a1b         db  0x00 ; '.'
0000000000008a1c         db  0x70 ; 'p'
0000000000008a1d         db  0xe3 ; '.'
0000000000008a1e         db  0xff ; '.'
0000000000008a1f         db  0xff ; '.'
0000000000008a20         db  0xf4 ; '.'
0000000000008a21         db  0x0c ; '.'
0000000000008a22         db  0x00 ; '.'
0000000000008a23         db  0x00 ; '.'
0000000000008a24         db  0xb0 ; '.'
0000000000008a25         db  0xe3 ; '.'
0000000000008a26         db  0xff ; '.'
0000000000008a27         db  0xff ; '.'
0000000000008a28         db  0x18 ; '.'
0000000000008a29         db  0x0d ; '.'
0000000000008a2a         db  0x00 ; '.'
0000000000008a2b         db  0x00 ; '.'
0000000000008a2c         db  0xe0 ; '.'
0000000000008a2d         db  0xe3 ; '.'
0000000000008a2e         db  0xff ; '.'
0000000000008a2f         db  0xff ; '.'
0000000000008a30         db  0x2c ; ','
0000000000008a31         db  0x0d ; '.'
0000000000008a32         db  0x00 ; '.'
0000000000008a33         db  0x00 ; '.'
0000000000008a34         db  0x70 ; 'p'
0000000000008a35         db  0xe4 ; '.'
0000000000008a36         db  0xff ; '.'
0000000000008a37         db  0xff ; '.'
0000000000008a38         db  0x44 ; 'D'
0000000000008a39         db  0x0d ; '.'
0000000000008a3a         db  0x00 ; '.'
0000000000008a3b         db  0x00 ; '.'
0000000000008a3c         db  0xc0 ; '.'
0000000000008a3d         db  0xe4 ; '.'
0000000000008a3e         db  0xff ; '.'
0000000000008a3f         db  0xff ; '.'
0000000000008a40         db  0x5c ; '\'
0000000000008a41         db  0x0d ; '.'
0000000000008a42         db  0x00 ; '.'
0000000000008a43         db  0x00 ; '.'
0000000000008a44         db  0xe0 ; '.'
0000000000008a45         db  0xe4 ; '.'
0000000000008a46         db  0xff ; '.'
0000000000008a47         db  0xff ; '.'
0000000000008a48         db  0x78 ; 'x'
0000000000008a49         db  0x0d ; '.'
0000000000008a4a         db  0x00 ; '.'
0000000000008a4b         db  0x00 ; '.'
0000000000008a4c         db  0x10 ; '.'
0000000000008a4d         db  0xe5 ; '.'
0000000000008a4e         db  0xff ; '.'
0000000000008a4f         db  0xff ; '.'
0000000000008a50         db  0x94 ; '.'
0000000000008a51         db  0x0d ; '.'
0000000000008a52         db  0x00 ; '.'
0000000000008a53         db  0x00 ; '.'
0000000000008a54         db  0x40 ; '@'
0000000000008a55         db  0xe5 ; '.'
0000000000008a56         db  0xff ; '.'
0000000000008a57         db  0xff ; '.'
0000000000008a58         db  0xbc ; '.'
0000000000008a59         db  0x0d ; '.'
0000000000008a5a         db  0x00 ; '.'
0000000000008a5b         db  0x00 ; '.'
0000000000008a5c         db  0x60 ; '`'
0000000000008a5d         db  0xe5 ; '.'
0000000000008a5e         db  0xff ; '.'
0000000000008a5f         db  0xff ; '.'
0000000000008a60         db  0xd8 ; '.'
0000000000008a61         db  0x0d ; '.'
0000000000008a62         db  0x00 ; '.'
0000000000008a63         db  0x00 ; '.'
0000000000008a64         db  0xa0 ; '.'
0000000000008a65         db  0xe5 ; '.'
0000000000008a66         db  0xff ; '.'
0000000000008a67         db  0xff ; '.'
0000000000008a68         db  0xf0 ; '.'
0000000000008a69         db  0x0d ; '.'
0000000000008a6a         db  0x00 ; '.'
0000000000008a6b         db  0x00 ; '.'
0000000000008a6c         db  0x20 ; ' '
0000000000008a6d         db  0xe6 ; '.'
0000000000008a6e         db  0xff ; '.'
0000000000008a6f         db  0xff ; '.'
0000000000008a70         db  0x28 ; '('
0000000000008a71         db  0x0e ; '.'
0000000000008a72         db  0x00 ; '.'
0000000000008a73         db  0x00 ; '.'
0000000000008a74         db  0x60 ; '`'
0000000000008a75         db  0xe6 ; '.'
0000000000008a76         db  0xff ; '.'
0000000000008a77         db  0xff ; '.'
0000000000008a78         db  0x48 ; 'H'
0000000000008a79         db  0x0e ; '.'
0000000000008a7a         db  0x00 ; '.'
0000000000008a7b         db  0x00 ; '.'
0000000000008a7c         db  0xc0 ; '.'
0000000000008a7d         db  0xe6 ; '.'
0000000000008a7e         db  0xff ; '.'
0000000000008a7f         db  0xff ; '.'
0000000000008a80         db  0x78 ; 'x'
0000000000008a81         db  0x0e ; '.'
0000000000008a82         db  0x00 ; '.'
0000000000008a83         db  0x00 ; '.'
0000000000008a84         db  0x50 ; 'P'
0000000000008a85         db  0xe7 ; '.'
0000000000008a86         db  0xff ; '.'
0000000000008a87         db  0xff ; '.'
0000000000008a88         db  0xb8 ; '.'
0000000000008a89         db  0x0e ; '.'
0000000000008a8a         db  0x00 ; '.'
0000000000008a8b         db  0x00 ; '.'
0000000000008a8c         db  0xb0 ; '.'
0000000000008a8d         db  0xe7 ; '.'
0000000000008a8e         db  0xff ; '.'
0000000000008a8f         db  0xff ; '.'
0000000000008a90         db  0xe4 ; '.'
0000000000008a91         db  0x0e ; '.'
0000000000008a92         db  0x00 ; '.'
0000000000008a93         db  0x00 ; '.'
0000000000008a94         db  0x40 ; '@'
0000000000008a95         db  0xe9 ; '.'
0000000000008a96         db  0xff ; '.'
0000000000008a97         db  0xff ; '.'
0000000000008a98         db  0x30 ; '0'
0000000000008a99         db  0x0f ; '.'
0000000000008a9a         db  0x00 ; '.'
0000000000008a9b         db  0x00 ; '.'
0000000000008a9c         db  0x70 ; 'p'
0000000000008a9d         db  0xe9 ; '.'
0000000000008a9e         db  0xff ; '.'
0000000000008a9f         db  0xff ; '.'
0000000000008aa0         db  0x44 ; 'D'
0000000000008aa1         db  0x0f ; '.'
0000000000008aa2         db  0x00 ; '.'
0000000000008aa3         db  0x00 ; '.'
0000000000008aa4         db  0xa0 ; '.'
0000000000008aa5         db  0xe9 ; '.'
0000000000008aa6         db  0xff ; '.'
0000000000008aa7         db  0xff ; '.'
0000000000008aa8         db  0x60 ; '`'
0000000000008aa9         db  0x0f ; '.'
0000000000008aaa         db  0x00 ; '.'
0000000000008aab         db  0x00 ; '.'
0000000000008aac         db  0x00 ; '.'
0000000000008aad         db  0xea ; '.'
0000000000008aae         db  0xff ; '.'
0000000000008aaf         db  0xff ; '.'
0000000000008ab0         db  0x9c ; '.'
0000000000008ab1         db  0x0f ; '.'
0000000000008ab2         db  0x00 ; '.'
0000000000008ab3         db  0x00 ; '.'
0000000000008ab4         db  0x90 ; '.'
0000000000008ab5         db  0xea ; '.'
0000000000008ab6         db  0xff ; '.'
0000000000008ab7         db  0xff ; '.'
0000000000008ab8         db  0xd4 ; '.'
0000000000008ab9         db  0x0f ; '.'
0000000000008aba         db  0x00 ; '.'
0000000000008abb         db  0x00 ; '.'
0000000000008abc         db  0xd0 ; '.'
0000000000008abd         db  0xeb ; '.'
0000000000008abe         db  0xff ; '.'
0000000000008abf         db  0xff ; '.'
0000000000008ac0         db  0x20 ; ' '
0000000000008ac1         db  0x10 ; '.'
0000000000008ac2         db  0x00 ; '.'
0000000000008ac3         db  0x00 ; '.'
0000000000008ac4         db  0xb0 ; '.'
0000000000008ac5         db  0xec ; '.'
0000000000008ac6         db  0xff ; '.'
0000000000008ac7         db  0xff ; '.'
0000000000008ac8         db  0x74 ; 't'
0000000000008ac9         db  0x10 ; '.'
0000000000008aca         db  0x00 ; '.'
0000000000008acb         db  0x00 ; '.'
0000000000008acc         db  0xc0 ; '.'
0000000000008acd         db  0xec ; '.'
0000000000008ace         db  0xff ; '.'
0000000000008acf         db  0xff ; '.'
0000000000008ad0         db  0x88 ; '.'
0000000000008ad1         db  0x10 ; '.'
0000000000008ad2         db  0x00 ; '.'
0000000000008ad3         db  0x00 ; '.'
0000000000008ad4         db  0x70 ; 'p'
0000000000008ad5         db  0xed ; '.'
0000000000008ad6         db  0xff ; '.'
0000000000008ad7         db  0xff ; '.'
0000000000008ad8         db  0xe8 ; '.'
0000000000008ad9         db  0x10 ; '.'
0000000000008ada         db  0x00 ; '.'
0000000000008adb         db  0x00 ; '.'
0000000000008adc         db  0xc0 ; '.'
0000000000008add         db  0xee ; '.'
0000000000008ade         db  0xff ; '.'
0000000000008adf         db  0xff ; '.'
0000000000008ae0         db  0x20 ; ' '
0000000000008ae1         db  0x11 ; '.'
0000000000008ae2         db  0x00 ; '.'
0000000000008ae3         db  0x00 ; '.'
0000000000008ae4         db  0x40 ; '@'
0000000000008ae5         db  0xef ; '.'
0000000000008ae6         db  0xff ; '.'
0000000000008ae7         db  0xff ; '.'
0000000000008ae8         db  0x70 ; 'p'
0000000000008ae9         db  0x11 ; '.'
0000000000008aea         db  0x00 ; '.'
0000000000008aeb         db  0x00 ; '.'
0000000000008aec         db  0xa0 ; '.'
0000000000008aed         db  0xef ; '.'
0000000000008aee         db  0xff ; '.'
0000000000008aef         db  0xff ; '.'
0000000000008af0         db  0x90 ; '.'
0000000000008af1         db  0x11 ; '.'
0000000000008af2         db  0x00 ; '.'
0000000000008af3         db  0x00 ; '.'
0000000000008af4         db  0xe0 ; '.'
0000000000008af5         db  0xef ; '.'
0000000000008af6         db  0xff ; '.'
0000000000008af7         db  0xff ; '.'
0000000000008af8         db  0xb0 ; '.'
0000000000008af9         db  0x11 ; '.'
0000000000008afa         db  0x00 ; '.'
0000000000008afb         db  0x00 ; '.'
0000000000008afc         db  0x50 ; 'P'
0000000000008afd         db  0xf0 ; '.'
0000000000008afe         db  0xff ; '.'
0000000000008aff         db  0xff ; '.'
0000000000008b00         db  0xf8 ; '.'
0000000000008b01         db  0x11 ; '.'
0000000000008b02         db  0x00 ; '.'
0000000000008b03         db  0x00 ; '.'
0000000000008b04         db  0x60 ; '`'
0000000000008b05         db  0xf0 ; '.'
0000000000008b06         db  0xff ; '.'
0000000000008b07         db  0xff ; '.'
0000000000008b08         db  0x10 ; '.'
0000000000008b09         db  0x12 ; '.'
0000000000008b0a         db  0x00 ; '.'
0000000000008b0b         db  0x00 ; '.'
0000000000008b0c         db  0x00 ; '.'
0000000000008b0d         db  0x00 ; '.'
0000000000008b0e         db  0x00 ; '.'
0000000000008b0f         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x8b10; 0x9a58[ (3912 bytes)
        ; File offset : [35600; 39512[ (3912 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000008b10         dd         0x00000014                                  ; Length of the record
0000000000008b14         dd         0x00000000                                  ; CIE ID
0000000000008b18         db         0x01                                        ; Version
0000000000008b19         db         "zR", 0                                     ; Augmentation String
0000000000008b1c         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000008b1d         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000008b1e         db         0x10                                        ; Return address register
0000000000008b1f         db         0x01                                        ; Augmentation data length
0000000000008b20         db         0x1b                                        ; FDE encoding
0000000000008b21         db  0x0c ; '.'
0000000000008b22         db  0x07 ; '.'
0000000000008b23         db  0x08 ; '.'
0000000000008b24         db  0x90 ; '.'
0000000000008b25         db  0x01 ; '.'
0000000000008b26         db  0x07 ; '.'
0000000000008b27         db  0x10 ; '.'
0000000000008b28         dd         0x00000014                                  ; Length of the record
0000000000008b2c         dd         0x0000001c                                  ; FDE: parent CIE at 0x8b10 (FDE encoding = 0x1B)
0000000000008b30         db         0x50, 0x92, 2 dup (0xff)                    ; begin 0x1d80
0000000000008b34         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x1dab)
0000000000008b38         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b39         align      64
0000000000008b40         dd         0x00000014                                  ; Length of the record
0000000000008b44         dd         0x00000000                                  ; CIE ID
0000000000008b48         db         0x01                                        ; Version
0000000000008b49         db         "zR", 0                                     ; Augmentation String
0000000000008b4c         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000008b4d         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000008b4e         db         0x10                                        ; Return address register
0000000000008b4f         db         0x01                                        ; Augmentation data length
0000000000008b50         db         0x1b                                        ; FDE encoding
0000000000008b51         db  0x0c ; '.'
0000000000008b52         db  0x07 ; '.'
0000000000008b53         db  0x08 ; '.'
0000000000008b54         db  0x90 ; '.'
0000000000008b55         db  0x01 ; '.'
0000000000008b56         db  0x00 ; '.'
0000000000008b57         db  0x00 ; '.'
0000000000008b58         dd         0x00000024                                  ; Length of the record
0000000000008b5c         dd         0x0000001c                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000008b60         db         0xb0, 0x8c, 2 dup (0xff)                    ; begin 0x1810
0000000000008b64         db         0x40, 0x04, 2 dup (0x00)                    ; length 0x440 (end at 0x1c50)
0000000000008b68         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b69         db  0x0e ; '.'
0000000000008b6a         db  0x10 ; '.'
0000000000008b6b         db  0x46 ; 'F'
0000000000008b6c         db  0x0e ; '.'
0000000000008b6d         db  0x18 ; '.'
0000000000008b6e         db  0x4a ; 'J'
0000000000008b6f         db  0x0f ; '.'
0000000000008b70         db  0x0b ; '.'
0000000000008b71         db  0x77 ; 'w'
0000000000008b72         db  0x08 ; '.'
0000000000008b73         db  0x80 ; '.'
0000000000008b74         db  0x00 ; '.'
0000000000008b75         db  0x3f ; '?'
0000000000008b76         db  0x1a ; '.'
0000000000008b77         db  0x3b ; ';'
0000000000008b78         db  0x2a ; '*'
0000000000008b79         db  0x33 ; '3'
0000000000008b7a         db  0x24 ; '$'
0000000000008b7b         db  0x22 ; '"'
0000000000008b7c         db  0x00 ; '.'
0000000000008b7d         db  0x00 ; '.'
0000000000008b7e         db  0x00 ; '.'
0000000000008b7f         db  0x00 ; '.'
0000000000008b80         dd         0x00000014                                  ; Length of the record
0000000000008b84         dd         0x00000044                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000008b88         db         0xc8, 0x90, 2 dup (0xff)                    ; begin 0x1c50
0000000000008b8c         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x1c58)
0000000000008b90         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b91         align      8
0000000000008b98         dd         0x0000004c                                  ; Length of the record
0000000000008b9c         dd         0x0000005c                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000008ba0         db         0xf0, 0x92, 2 dup (0xff)                    ; begin 0x1e90
0000000000008ba4         db         0x32, 0x04, 2 dup (0x00)                    ; length 0x432 (end at 0x22c2)
0000000000008ba8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ba9         db  0x42 ; 'B'
0000000000008baa         db  0x0e ; '.'
0000000000008bab         db  0x10 ; '.'
0000000000008bac         db  0x8f ; '.'
0000000000008bad         db  0x02 ; '.'
0000000000008bae         db  0x42 ; 'B'
0000000000008baf         db  0x0e ; '.'
0000000000008bb0         db  0x18 ; '.'
0000000000008bb1         db  0x8e ; '.'
0000000000008bb2         db  0x03 ; '.'
0000000000008bb3         db  0x42 ; 'B'
0000000000008bb4         db  0x0e ; '.'
0000000000008bb5         db  0x20 ; ' '
0000000000008bb6         db  0x8d ; '.'
0000000000008bb7         db  0x04 ; '.'
0000000000008bb8         db  0x42 ; 'B'
0000000000008bb9         db  0x0e ; '.'
0000000000008bba         db  0x28 ; '('
0000000000008bbb         db  0x8c ; '.'
0000000000008bbc         db  0x05 ; '.'
0000000000008bbd         db  0x44 ; 'D'
0000000000008bbe         db  0x0e ; '.'
0000000000008bbf         db  0x30 ; '0'
0000000000008bc0         db  0x86 ; '.'
0000000000008bc1         db  0x06 ; '.'
0000000000008bc2         db  0x41 ; 'A'
0000000000008bc3         db  0x0e ; '.'
0000000000008bc4         db  0x38 ; '8'
0000000000008bc5         db  0x83 ; '.'
0000000000008bc6         db  0x07 ; '.'
0000000000008bc7         db  0x5d ; ']'
0000000000008bc8         db  0x0e ; '.'
0000000000008bc9         db  0x90 ; '.'
0000000000008bca         db  0x41 ; 'A'
0000000000008bcb         db  0x03 ; '.'
0000000000008bcc         db  0x25 ; '%'
0000000000008bcd         db  0x02 ; '.'
0000000000008bce         db  0x0a ; '.'
0000000000008bcf         db  0x0e ; '.'
0000000000008bd0         db  0x38 ; '8'
0000000000008bd1         db  0x41 ; 'A'
0000000000008bd2         db  0x0e ; '.'
0000000000008bd3         db  0x30 ; '0'
0000000000008bd4         db  0x41 ; 'A'
0000000000008bd5         db  0x0e ; '.'
0000000000008bd6         db  0x28 ; '('
0000000000008bd7         db  0x42 ; 'B'
0000000000008bd8         db  0x0e ; '.'
0000000000008bd9         db  0x20 ; ' '
0000000000008bda         db  0x42 ; 'B'
0000000000008bdb         db  0x0e ; '.'
0000000000008bdc         db  0x18 ; '.'
0000000000008bdd         db  0x42 ; 'B'
0000000000008bde         db  0x0e ; '.'
0000000000008bdf         db  0x10 ; '.'
0000000000008be0         db  0x42 ; 'B'
0000000000008be1         db  0x0e ; '.'
0000000000008be2         db  0x08 ; '.'
0000000000008be3         db  0x41 ; 'A'
0000000000008be4         db  0x0b ; '.'
0000000000008be5         db  0x00 ; '.'
0000000000008be6         db  0x00 ; '.'
0000000000008be7         db  0x00 ; '.'
0000000000008be8         dd         0x00000020                                  ; Length of the record
0000000000008bec         dd         0x000000ac                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000008bf0         db         0xe0, 0x96, 2 dup (0xff)                    ; begin 0x22d0
0000000000008bf4         db         0x8f, 3 dup (0x00)                          ; length 0x8f (end at 0x235f)
0000000000008bf8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008bf9         db  0x41 ; 'A'
0000000000008bfa         db  0x0e ; '.'
0000000000008bfb         db  0x10 ; '.'
0000000000008bfc         db  0x83 ; '.'
0000000000008bfd         db  0x02 ; '.'
0000000000008bfe         db  0x49 ; 'I'
0000000000008bff         db  0x0e ; '.'
0000000000008c00         db  0x30 ; '0'
0000000000008c01         db  0x02 ; '.'
0000000000008c02         db  0x4f ; 'O'
0000000000008c03         db  0x0a ; '.'
0000000000008c04         db  0x0e ; '.'
0000000000008c05         db  0x10 ; '.'
0000000000008c06         db  0x41 ; 'A'
0000000000008c07         db  0x0e ; '.'
0000000000008c08         db  0x08 ; '.'
0000000000008c09         db  0x41 ; 'A'
0000000000008c0a         db  0x0b ; '.'
0000000000008c0b         db  0x00 ; '.'
0000000000008c0c         dd         0x00000028                                  ; Length of the record
0000000000008c10         dd         0x000000d0                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000008c14         db         0x4c, 0x97, 2 dup (0xff)                    ; begin 0x2360
0000000000008c18         db         0x92, 0x03, 2 dup (0x00)                    ; length 0x392 (end at 0x26f2)
0000000000008c1c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c1d         db  0x42 ; 'B'
0000000000008c1e         db  0x0e ; '.'
0000000000008c1f         db  0x10 ; '.'
0000000000008c20         db  0x8d ; '.'
0000000000008c21         db  0x02 ; '.'
0000000000008c22         db  0x42 ; 'B'
0000000000008c23         db  0x0e ; '.'
0000000000008c24         db  0x18 ; '.'
0000000000008c25         db  0x8c ; '.'
0000000000008c26         db  0x03 ; '.'
0000000000008c27         db  0x46 ; 'F'
0000000000008c28         db  0x0e ; '.'
0000000000008c29         db  0x20 ; ' '
0000000000008c2a         db  0x86 ; '.'
0000000000008c2b         db  0x04 ; '.'
0000000000008c2c         db  0x41 ; 'A'
0000000000008c2d         db  0x0e ; '.'
0000000000008c2e         db  0x28 ; '('
0000000000008c2f         db  0x83 ; '.'
0000000000008c30         db  0x05 ; '.'
0000000000008c31         db  0x49 ; 'I'
0000000000008c32         db  0x0e ; '.'
0000000000008c33         db  0xb0 ; '.'
0000000000008c34         db  0x01 ; '.'
0000000000008c35         db  0x00 ; '.'
0000000000008c36         db  0x00 ; '.'
0000000000008c37         db  0x00 ; '.'
0000000000008c38         dd         0x0000003c                                  ; Length of the record
0000000000008c3c         dd         0x000000fc                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000008c40         db         0x20, 0x90, 2 dup (0xff)                    ; begin 0x1c60
0000000000008c44         db         0x13, 0x01, 2 dup (0x00)                    ; length 0x113 (end at 0x1d73)
0000000000008c48         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c49         db  0x41 ; 'A'
0000000000008c4a         db  0x0e ; '.'
0000000000008c4b         db  0x10 ; '.'
0000000000008c4c         db  0x86 ; '.'
0000000000008c4d         db  0x02 ; '.'
0000000000008c4e         db  0x41 ; 'A'
0000000000008c4f         db  0x0e ; '.'
0000000000008c50         db  0x18 ; '.'
0000000000008c51         db  0x83 ; '.'
0000000000008c52         db  0x03 ; '.'
0000000000008c53         db  0x49 ; 'I'
0000000000008c54         db  0x0e ; '.'
0000000000008c55         db  0x20 ; ' '
0000000000008c56         db  0x02 ; '.'
0000000000008c57         db  0x4f ; 'O'
0000000000008c58         db  0x0e ; '.'
0000000000008c59         db  0x28 ; '('
0000000000008c5a         db  0x49 ; 'I'
0000000000008c5b         db  0x0e ; '.'
0000000000008c5c         db  0x30 ; '0'
0000000000008c5d         db  0x4f ; 'O'
0000000000008c5e         db  0x0e ; '.'
0000000000008c5f         db  0x38 ; '8'
0000000000008c60         db  0x53 ; 'S'
0000000000008c61         db  0x0e ; '.'
0000000000008c62         db  0x40 ; '@'
0000000000008c63         db  0x48 ; 'H'
0000000000008c64         db  0x0e ; '.'
0000000000008c65         db  0x48 ; 'H'
0000000000008c66         db  0x48 ; 'H'
0000000000008c67         db  0x0e ; '.'
0000000000008c68         db  0x50 ; 'P'
0000000000008c69         db  0x52 ; 'R'
0000000000008c6a         db  0x0e ; '.'
0000000000008c6b         db  0x20 ; ' '
0000000000008c6c         db  0x59 ; 'Y'
0000000000008c6d         db  0x0a ; '.'
0000000000008c6e         db  0x0e ; '.'
0000000000008c6f         db  0x18 ; '.'
0000000000008c70         db  0x43 ; 'C'
0000000000008c71         db  0x0e ; '.'
0000000000008c72         db  0x10 ; '.'
0000000000008c73         db  0x41 ; 'A'
0000000000008c74         db  0x0e ; '.'
0000000000008c75         db  0x08 ; '.'
0000000000008c76         db  0x41 ; 'A'
0000000000008c77         db  0x0b ; '.'
0000000000008c78         dd         0x00000034                                  ; Length of the record
0000000000008c7c         dd         0x0000013c                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000008c80         db         0x80, 0x9a, 2 dup (0xff)                    ; begin 0x2700
0000000000008c84         db         0x6c, 3 dup (0x00)                          ; length 0x6c (end at 0x276c)
0000000000008c88         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c89         db  0x41 ; 'A'
0000000000008c8a         db  0x0e ; '.'
0000000000008c8b         db  0x10 ; '.'
0000000000008c8c         db  0x86 ; '.'
0000000000008c8d         db  0x02 ; '.'
0000000000008c8e         db  0x41 ; 'A'
0000000000008c8f         db  0x0e ; '.'
0000000000008c90         db  0x18 ; '.'
0000000000008c91         db  0x83 ; '.'
0000000000008c92         db  0x03 ; '.'
0000000000008c93         db  0x4a ; 'J'
0000000000008c94         db  0x0e ; '.'
0000000000008c95         db  0x20 ; ' '
0000000000008c96         db  0x5c ; '\'
0000000000008c97         db  0x0a ; '.'
0000000000008c98         db  0x0e ; '.'
0000000000008c99         db  0x18 ; '.'
0000000000008c9a         db  0x47 ; 'G'
0000000000008c9b         db  0x0e ; '.'
0000000000008c9c         db  0x10 ; '.'
0000000000008c9d         db  0x41 ; 'A'
0000000000008c9e         db  0x0e ; '.'
0000000000008c9f         db  0x08 ; '.'
0000000000008ca0         db  0x48 ; 'H'
0000000000008ca1         db  0x0b ; '.'
0000000000008ca2         db  0x54 ; 'T'
0000000000008ca3         db  0x0a ; '.'
0000000000008ca4         db  0x0e ; '.'
0000000000008ca5         db  0x18 ; '.'
0000000000008ca6         db  0x41 ; 'A'
0000000000008ca7         db  0x0e ; '.'
0000000000008ca8         db  0x10 ; '.'
0000000000008ca9         db  0x41 ; 'A'
0000000000008caa         db  0x0e ; '.'
0000000000008cab         db  0x08 ; '.'
0000000000008cac         db  0x42 ; 'B'
0000000000008cad         db  0x0b ; '.'
0000000000008cae         db  0x00 ; '.'
0000000000008caf         db  0x00 ; '.'
0000000000008cb0         dd         0x00000010                                  ; Length of the record
0000000000008cb4         dd         0x00000174                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000008cb8         db         0xb8, 0x9a, 2 dup (0xff)                    ; begin 0x2770
0000000000008cbc         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2778)
0000000000008cc0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008cc1         align      4
0000000000008cc4         dd         0x00000010                                  ; Length of the record
0000000000008cc8         dd         0x00000188                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000008ccc         db         0xb4, 0x9a, 2 dup (0xff)                    ; begin 0x2780
0000000000008cd0         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2788)
0000000000008cd4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008cd5         align      8
0000000000008cd8         dd         0x0000002c                                  ; Length of the record
0000000000008cdc         dd         0x0000019c                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000008ce0         db         0xb0, 0x9a, 2 dup (0xff)                    ; begin 0x2790
0000000000008ce4         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x2834)
0000000000008ce8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ce9         db  0x41 ; 'A'
0000000000008cea         db  0x0e ; '.'
0000000000008ceb         db  0x10 ; '.'
0000000000008cec         db  0x86 ; '.'
0000000000008ced         db  0x02 ; '.'
0000000000008cee         db  0x41 ; 'A'
0000000000008cef         db  0x0e ; '.'
0000000000008cf0         db  0x18 ; '.'
0000000000008cf1         db  0x83 ; '.'
0000000000008cf2         db  0x03 ; '.'
0000000000008cf3         db  0x44 ; 'D'
0000000000008cf4         db  0x0e ; '.'
0000000000008cf5         db  0x20 ; ' '
0000000000008cf6         db  0x7a ; 'z'
0000000000008cf7         db  0x0a ; '.'
0000000000008cf8         db  0x0e ; '.'
0000000000008cf9         db  0x18 ; '.'
0000000000008cfa         db  0x41 ; 'A'
0000000000008cfb         db  0x0e ; '.'
0000000000008cfc         db  0x10 ; '.'
0000000000008cfd         db  0x41 ; 'A'
0000000000008cfe         db  0x0e ; '.'
0000000000008cff         db  0x08 ; '.'
0000000000008d00         db  0x41 ; 'A'
0000000000008d01         db  0x0b ; '.'
0000000000008d02         db  0x00 ; '.'
0000000000008d03         db  0x00 ; '.'
0000000000008d04         db  0x00 ; '.'
0000000000008d05         db  0x00 ; '.'
0000000000008d06         db  0x00 ; '.'
0000000000008d07         db  0x00 ; '.'
0000000000008d08         dd         0x00000038                                  ; Length of the record
0000000000008d0c         dd         0x000001cc                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000008d10         db         0x30, 0x9b, 2 dup (0xff)                    ; begin 0x2840
0000000000008d14         db         0x52, 3 dup (0x00)                          ; length 0x52 (end at 0x2892)
0000000000008d18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d19         db  0x47 ; 'G'
0000000000008d1a         db  0x0e ; '.'
0000000000008d1b         db  0x10 ; '.'
0000000000008d1c         db  0x8d ; '.'
0000000000008d1d         db  0x02 ; '.'
0000000000008d1e         db  0x42 ; 'B'
0000000000008d1f         db  0x0e ; '.'
0000000000008d20         db  0x18 ; '.'
0000000000008d21         db  0x8c ; '.'
0000000000008d22         db  0x03 ; '.'
0000000000008d23         db  0x44 ; 'D'
0000000000008d24         db  0x0e ; '.'
0000000000008d25         db  0x20 ; ' '
0000000000008d26         db  0x86 ; '.'
0000000000008d27         db  0x04 ; '.'
0000000000008d28         db  0x41 ; 'A'
0000000000008d29         db  0x0e ; '.'
0000000000008d2a         db  0x28 ; '('
0000000000008d2b         db  0x83 ; '.'
0000000000008d2c         db  0x05 ; '.'
0000000000008d2d         db  0x4a ; 'J'
0000000000008d2e         db  0x0e ; '.'
0000000000008d2f         db  0x30 ; '0'
0000000000008d30         db  0x6f ; 'o'
0000000000008d31         db  0x0e ; '.'
0000000000008d32         db  0x28 ; '('
0000000000008d33         db  0x41 ; 'A'
0000000000008d34         db  0x0e ; '.'
0000000000008d35         db  0x20 ; ' '
0000000000008d36         db  0x41 ; 'A'
0000000000008d37         db  0x0e ; '.'
0000000000008d38         db  0x18 ; '.'
0000000000008d39         db  0x42 ; 'B'
0000000000008d3a         db  0x0e ; '.'
0000000000008d3b         db  0x10 ; '.'
0000000000008d3c         db  0x42 ; 'B'
0000000000008d3d         db  0x0e ; '.'
0000000000008d3e         db  0x08 ; '.'
0000000000008d3f         db  0x43 ; 'C'
0000000000008d40         db  0xc3 ; '.'
0000000000008d41         db  0xc6 ; '.'
0000000000008d42         db  0xcc ; '.'
0000000000008d43         db  0xcd ; '.'
0000000000008d44         dd         0x00000038                                  ; Length of the record
0000000000008d48         dd         0x00000208                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000008d4c         db         0x54, 0x9b, 2 dup (0xff)                    ; begin 0x28a0
0000000000008d50         db         0x52, 3 dup (0x00)                          ; length 0x52 (end at 0x28f2)
0000000000008d54         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d55         db  0x47 ; 'G'
0000000000008d56         db  0x0e ; '.'
0000000000008d57         db  0x10 ; '.'
0000000000008d58         db  0x8d ; '.'
0000000000008d59         db  0x02 ; '.'
0000000000008d5a         db  0x42 ; 'B'
0000000000008d5b         db  0x0e ; '.'
0000000000008d5c         db  0x18 ; '.'
0000000000008d5d         db  0x8c ; '.'
0000000000008d5e         db  0x03 ; '.'
0000000000008d5f         db  0x44 ; 'D'
0000000000008d60         db  0x0e ; '.'
0000000000008d61         db  0x20 ; ' '
0000000000008d62         db  0x86 ; '.'
0000000000008d63         db  0x04 ; '.'
0000000000008d64         db  0x41 ; 'A'
0000000000008d65         db  0x0e ; '.'
0000000000008d66         db  0x28 ; '('
0000000000008d67         db  0x83 ; '.'
0000000000008d68         db  0x05 ; '.'
0000000000008d69         db  0x4a ; 'J'
0000000000008d6a         db  0x0e ; '.'
0000000000008d6b         db  0x30 ; '0'
0000000000008d6c         db  0x6f ; 'o'
0000000000008d6d         db  0x0e ; '.'
0000000000008d6e         db  0x28 ; '('
0000000000008d6f         db  0x41 ; 'A'
0000000000008d70         db  0x0e ; '.'
0000000000008d71         db  0x20 ; ' '
0000000000008d72         db  0x41 ; 'A'
0000000000008d73         db  0x0e ; '.'
0000000000008d74         db  0x18 ; '.'
0000000000008d75         db  0x42 ; 'B'
0000000000008d76         db  0x0e ; '.'
0000000000008d77         db  0x10 ; '.'
0000000000008d78         db  0x42 ; 'B'
0000000000008d79         db  0x0e ; '.'
0000000000008d7a         db  0x08 ; '.'
0000000000008d7b         db  0x43 ; 'C'
0000000000008d7c         db  0xc3 ; '.'
0000000000008d7d         db  0xc6 ; '.'
0000000000008d7e         db  0xcc ; '.'
0000000000008d7f         db  0xcd ; '.'
0000000000008d80         dd         0x00000074                                  ; Length of the record
0000000000008d84         dd         0x00000244                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000008d88         db         0x78, 0x9b, 2 dup (0xff)                    ; begin 0x2900
0000000000008d8c         db         0x17, 0x1c, 2 dup (0x00)                    ; length 0x1c17 (end at 0x4517)
0000000000008d90         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d91         db  0x42 ; 'B'
0000000000008d92         db  0x0e ; '.'
0000000000008d93         db  0x10 ; '.'
0000000000008d94         db  0x8f ; '.'
0000000000008d95         db  0x02 ; '.'
0000000000008d96         db  0x42 ; 'B'
0000000000008d97         db  0x0e ; '.'
0000000000008d98         db  0x18 ; '.'
0000000000008d99         db  0x8e ; '.'
0000000000008d9a         db  0x03 ; '.'
0000000000008d9b         db  0x45 ; 'E'
0000000000008d9c         db  0x0e ; '.'
0000000000008d9d         db  0x20 ; ' '
0000000000008d9e         db  0x8d ; '.'
0000000000008d9f         db  0x04 ; '.'
0000000000008da0         db  0x42 ; 'B'
0000000000008da1         db  0x0e ; '.'
0000000000008da2         db  0x28 ; '('
0000000000008da3         db  0x8c ; '.'
0000000000008da4         db  0x05 ; '.'
0000000000008da5         db  0x44 ; 'D'
0000000000008da6         db  0x0e ; '.'
0000000000008da7         db  0x30 ; '0'
0000000000008da8         db  0x86 ; '.'
0000000000008da9         db  0x06 ; '.'
0000000000008daa         db  0x41 ; 'A'
0000000000008dab         db  0x0e ; '.'
0000000000008dac         db  0x38 ; '8'
0000000000008dad         db  0x83 ; '.'
0000000000008dae         db  0x07 ; '.'
0000000000008daf         db  0x4a ; 'J'
0000000000008db0         db  0x0e ; '.'
0000000000008db1         db  0xf0 ; '.'
0000000000008db2         db  0x09 ; '.'
0000000000008db3         db  0x02 ; '.'
0000000000008db4         db  0xc9 ; '.'
0000000000008db5         db  0x0a ; '.'
0000000000008db6         db  0x0e ; '.'
0000000000008db7         db  0x38 ; '8'
0000000000008db8         db  0x41 ; 'A'
0000000000008db9         db  0x0e ; '.'
0000000000008dba         db  0x30 ; '0'
0000000000008dbb         db  0x41 ; 'A'
0000000000008dbc         db  0x0e ; '.'
0000000000008dbd         db  0x28 ; '('
0000000000008dbe         db  0x42 ; 'B'
0000000000008dbf         db  0x0e ; '.'
0000000000008dc0         db  0x20 ; ' '
0000000000008dc1         db  0x42 ; 'B'
0000000000008dc2         db  0x0e ; '.'
0000000000008dc3         db  0x18 ; '.'
0000000000008dc4         db  0x42 ; 'B'
0000000000008dc5         db  0x0e ; '.'
0000000000008dc6         db  0x10 ; '.'
0000000000008dc7         db  0x42 ; 'B'
0000000000008dc8         db  0x0e ; '.'
0000000000008dc9         db  0x08 ; '.'
0000000000008dca         db  0x43 ; 'C'
0000000000008dcb         db  0x0b ; '.'
0000000000008dcc         db  0x03 ; '.'
0000000000008dcd         db  0x8d ; '.'
0000000000008dce         db  0x05 ; '.'
0000000000008dcf         db  0x0e ; '.'
0000000000008dd0         db  0xf8 ; '.'
0000000000008dd1         db  0x09 ; '.'
0000000000008dd2         db  0x4d ; 'M'
0000000000008dd3         db  0x0e ; '.'
0000000000008dd4         db  0x80 ; '.'
0000000000008dd5         db  0x0a ; '.'
0000000000008dd6         db  0x44 ; 'D'
0000000000008dd7         db  0x0e ; '.'
0000000000008dd8         db  0x88 ; '.'
0000000000008dd9         db  0x0a ; '.'
0000000000008dda         db  0x46 ; 'F'
0000000000008ddb         db  0x0e ; '.'
0000000000008ddc         db  0x90 ; '.'
0000000000008ddd         db  0x0a ; '.'
0000000000008dde         db  0x58 ; 'X'
0000000000008ddf         db  0x0e ; '.'
0000000000008de0         db  0xf0 ; '.'
0000000000008de1         db  0x09 ; '.'
0000000000008de2         db  0x03 ; '.'
0000000000008de3         db  0x8f ; '.'
0000000000008de4         db  0x0e ; '.'
0000000000008de5         db  0x0e ; '.'
0000000000008de6         db  0xf8 ; '.'
0000000000008de7         db  0x09 ; '.'
0000000000008de8         db  0x50 ; 'P'
0000000000008de9         db  0x0e ; '.'
0000000000008dea         db  0x80 ; '.'
0000000000008deb         db  0x0a ; '.'
0000000000008dec         db  0x44 ; 'D'
0000000000008ded         db  0x0e ; '.'
0000000000008dee         db  0x88 ; '.'
0000000000008def         db  0x0a ; '.'
0000000000008df0         db  0x44 ; 'D'
0000000000008df1         db  0x0e ; '.'
0000000000008df2         db  0x90 ; '.'
0000000000008df3         db  0x0a ; '.'
0000000000008df4         db  0x58 ; 'X'
0000000000008df5         db  0x0e ; '.'
0000000000008df6         db  0xf0 ; '.'
0000000000008df7         db  0x09 ; '.'
0000000000008df8         dd         0x00000024                                  ; Length of the record
0000000000008dfc         dd         0x000002bc                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000008e00         db         0x20, 0xb7, 2 dup (0xff)                    ; begin 0x4520
0000000000008e04         db         0x50, 3 dup (0x00)                          ; length 0x50 (end at 0x4570)
0000000000008e08         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e09         db  0x44 ; 'D'
0000000000008e0a         db  0x0e ; '.'
0000000000008e0b         db  0x28 ; '('
0000000000008e0c         db  0x5d ; ']'
0000000000008e0d         db  0x0e ; '.'
0000000000008e0e         db  0x30 ; '0'
0000000000008e0f         db  0x44 ; 'D'
0000000000008e10         db  0x0e ; '.'
0000000000008e11         db  0x38 ; '8'
0000000000008e12         db  0x48 ; 'H'
0000000000008e13         db  0x0e ; '.'
0000000000008e14         db  0x40 ; '@'
0000000000008e15         db  0x49 ; 'I'
0000000000008e16         db  0x0e ; '.'
0000000000008e17         db  0x20 ; ' '
0000000000008e18         db  0x54 ; 'T'
0000000000008e19         db  0x0a ; '.'
0000000000008e1a         db  0x0e ; '.'
0000000000008e1b         db  0x08 ; '.'
0000000000008e1c         db  0x41 ; 'A'
0000000000008e1d         db  0x0b ; '.'
0000000000008e1e         db  0x00 ; '.'
0000000000008e1f         db  0x00 ; '.'
0000000000008e20         dd         0x00000038                                  ; Length of the record
0000000000008e24         dd         0x000002e4                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000008e28         db         0x48, 0xb7, 2 dup (0xff)                    ; begin 0x4570
0000000000008e2c         db         0x3f, 0x01, 2 dup (0x00)                    ; length 0x13f (end at 0x46af)
0000000000008e30         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e31         db  0x42 ; 'B'
0000000000008e32         db  0x0e ; '.'
0000000000008e33         db  0x10 ; '.'
0000000000008e34         db  0x8d ; '.'
0000000000008e35         db  0x02 ; '.'
0000000000008e36         db  0x42 ; 'B'
0000000000008e37         db  0x0e ; '.'
0000000000008e38         db  0x18 ; '.'
0000000000008e39         db  0x8c ; '.'
0000000000008e3a         db  0x03 ; '.'
0000000000008e3b         db  0x44 ; 'D'
0000000000008e3c         db  0x0e ; '.'
0000000000008e3d         db  0x20 ; ' '
0000000000008e3e         db  0x86 ; '.'
0000000000008e3f         db  0x04 ; '.'
0000000000008e40         db  0x41 ; 'A'
0000000000008e41         db  0x0e ; '.'
0000000000008e42         db  0x28 ; '('
0000000000008e43         db  0x83 ; '.'
0000000000008e44         db  0x05 ; '.'
0000000000008e45         db  0x4d ; 'M'
0000000000008e46         db  0x0e ; '.'
0000000000008e47         db  0x90 ; '.'
0000000000008e48         db  0x02 ; '.'
0000000000008e49         db  0x02 ; '.'
0000000000008e4a         db  0x8e ; '.'
0000000000008e4b         db  0x0a ; '.'
0000000000008e4c         db  0x0e ; '.'
0000000000008e4d         db  0x28 ; '('
0000000000008e4e         db  0x41 ; 'A'
0000000000008e4f         db  0x0e ; '.'
0000000000008e50         db  0x20 ; ' '
0000000000008e51         db  0x41 ; 'A'
0000000000008e52         db  0x0e ; '.'
0000000000008e53         db  0x18 ; '.'
0000000000008e54         db  0x42 ; 'B'
0000000000008e55         db  0x0e ; '.'
0000000000008e56         db  0x10 ; '.'
0000000000008e57         db  0x42 ; 'B'
0000000000008e58         db  0x0e ; '.'
0000000000008e59         db  0x08 ; '.'
0000000000008e5a         db  0x46 ; 'F'
0000000000008e5b         db  0x0b ; '.'
0000000000008e5c         dd         0x00000048                                  ; Length of the record
0000000000008e60         dd         0x00000320                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000008e64         db         0x4c, 0xb8, 2 dup (0xff)                    ; begin 0x46b0
0000000000008e68         db         0x3b, 0x01, 2 dup (0x00)                    ; length 0x13b (end at 0x47eb)
0000000000008e6c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e6d         db  0x42 ; 'B'
0000000000008e6e         db  0x0e ; '.'
0000000000008e6f         db  0x10 ; '.'
0000000000008e70         db  0x8e ; '.'
0000000000008e71         db  0x02 ; '.'
0000000000008e72         db  0x42 ; 'B'
0000000000008e73         db  0x0e ; '.'
0000000000008e74         db  0x18 ; '.'
0000000000008e75         db  0x8d ; '.'
0000000000008e76         db  0x03 ; '.'
0000000000008e77         db  0x45 ; 'E'
0000000000008e78         db  0x0e ; '.'
0000000000008e79         db  0x20 ; ' '
0000000000008e7a         db  0x8c ; '.'
0000000000008e7b         db  0x04 ; '.'
0000000000008e7c         db  0x41 ; 'A'
0000000000008e7d         db  0x0e ; '.'
0000000000008e7e         db  0x28 ; '('
0000000000008e7f         db  0x86 ; '.'
0000000000008e80         db  0x05 ; '.'
0000000000008e81         db  0x44 ; 'D'
0000000000008e82         db  0x0e ; '.'
0000000000008e83         db  0x30 ; '0'
0000000000008e84         db  0x83 ; '.'
0000000000008e85         db  0x06 ; '.'
0000000000008e86         db  0x4a ; 'J'
0000000000008e87         db  0x0e ; '.'
0000000000008e88         db  0x80 ; '.'
0000000000008e89         db  0x02 ; '.'
0000000000008e8a         db  0x03 ; '.'
0000000000008e8b         db  0x0d ; '.'
0000000000008e8c         db  0x01 ; '.'
0000000000008e8d         db  0x0a ; '.'
0000000000008e8e         db  0x0e ; '.'
0000000000008e8f         db  0x30 ; '0'
0000000000008e90         db  0x41 ; 'A'
0000000000008e91         db  0x0e ; '.'
0000000000008e92         db  0x28 ; '('
0000000000008e93         db  0x41 ; 'A'
0000000000008e94         db  0x0e ; '.'
0000000000008e95         db  0x20 ; ' '
0000000000008e96         db  0x42 ; 'B'
0000000000008e97         db  0x0e ; '.'
0000000000008e98         db  0x18 ; '.'
0000000000008e99         db  0x42 ; 'B'
0000000000008e9a         db  0x0e ; '.'
0000000000008e9b         db  0x10 ; '.'
0000000000008e9c         db  0x42 ; 'B'
0000000000008e9d         db  0x0e ; '.'
0000000000008e9e         db  0x08 ; '.'
0000000000008e9f         db  0x43 ; 'C'
0000000000008ea0         db  0x0b ; '.'
0000000000008ea1         db  0x00 ; '.'
0000000000008ea2         db  0x00 ; '.'
0000000000008ea3         db  0x00 ; '.'
0000000000008ea4         db  0x00 ; '.'
0000000000008ea5         db  0x00 ; '.'
0000000000008ea6         db  0x00 ; '.'
0000000000008ea7         db  0x00 ; '.'
0000000000008ea8         dd         0x0000001c                                  ; Length of the record
0000000000008eac         dd         0x0000036c                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000008eb0         db         0x40, 0xb9, 2 dup (0xff)                    ; begin 0x47f0
0000000000008eb4         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x488f)
0000000000008eb8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008eb9         db  0x44 ; 'D'
0000000000008eba         db  0x0e ; '.'
0000000000008ebb         db  0x10 ; '.'
0000000000008ebc         db  0x83 ; '.'
0000000000008ebd         db  0x02 ; '.'
0000000000008ebe         db  0x02 ; '.'
0000000000008ebf         db  0x78 ; 'x'
0000000000008ec0         db  0x0a ; '.'
0000000000008ec1         db  0x0e ; '.'
0000000000008ec2         db  0x08 ; '.'
0000000000008ec3         db  0x41 ; 'A'
0000000000008ec4         db  0x0b ; '.'
0000000000008ec5         db  0x00 ; '.'
0000000000008ec6         db  0x00 ; '.'
0000000000008ec7         db  0x00 ; '.'
0000000000008ec8         dd         0x00000040                                  ; Length of the record
0000000000008ecc         dd         0x0000038c                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000008ed0         db         0xc0, 0xb9, 2 dup (0xff)                    ; begin 0x4890
0000000000008ed4         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x4977)
0000000000008ed8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ed9         db  0x41 ; 'A'
0000000000008eda         db  0x0e ; '.'
0000000000008edb         db  0x10 ; '.'
0000000000008edc         db  0x86 ; '.'
0000000000008edd         db  0x02 ; '.'
0000000000008ede         db  0x41 ; 'A'
0000000000008edf         db  0x0e ; '.'
0000000000008ee0         db  0x18 ; '.'
0000000000008ee1         db  0x83 ; '.'
0000000000008ee2         db  0x03 ; '.'
0000000000008ee3         db  0x49 ; 'I'
0000000000008ee4         db  0x0e ; '.'
0000000000008ee5         db  0x20 ; ' '
0000000000008ee6         db  0x6e ; 'n'
0000000000008ee7         db  0x0a ; '.'
0000000000008ee8         db  0x0e ; '.'
0000000000008ee9         db  0x18 ; '.'
0000000000008eea         db  0x41 ; 'A'
0000000000008eeb         db  0x0e ; '.'
0000000000008eec         db  0x10 ; '.'
0000000000008eed         db  0x41 ; 'A'
0000000000008eee         db  0x0e ; '.'
0000000000008eef         db  0x08 ; '.'
0000000000008ef0         db  0x45 ; 'E'
0000000000008ef1         db  0x0b ; '.'
0000000000008ef2         db  0x02 ; '.'
0000000000008ef3         db  0x4a ; 'J'
0000000000008ef4         db  0x0a ; '.'
0000000000008ef5         db  0x0e ; '.'
0000000000008ef6         db  0x18 ; '.'
0000000000008ef7         db  0x41 ; 'A'
0000000000008ef8         db  0x0e ; '.'
0000000000008ef9         db  0x10 ; '.'
0000000000008efa         db  0x41 ; 'A'
0000000000008efb         db  0x0e ; '.'
0000000000008efc         db  0x08 ; '.'
0000000000008efd         db  0x44 ; 'D'
0000000000008efe         db  0x0b ; '.'
0000000000008eff         db  0x02 ; '.'
0000000000008f00         db  0x54 ; 'T'
0000000000008f01         db  0x0e ; '.'
0000000000008f02         db  0x18 ; '.'
0000000000008f03         db  0x41 ; 'A'
0000000000008f04         db  0x0e ; '.'
0000000000008f05         db  0x10 ; '.'
0000000000008f06         db  0x41 ; 'A'
0000000000008f07         db  0x0e ; '.'
0000000000008f08         db  0x08 ; '.'
0000000000008f09         db  0x00 ; '.'
0000000000008f0a         db  0x00 ; '.'
0000000000008f0b         db  0x00 ; '.'
0000000000008f0c         dd         0x00000074                                  ; Length of the record
0000000000008f10         dd         0x000003d0                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000008f14         db         0x6c, 0xba, 2 dup (0xff)                    ; begin 0x4980
0000000000008f18         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x5bb4)
0000000000008f1c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f1d         db  0x42 ; 'B'
0000000000008f1e         db  0x0e ; '.'
0000000000008f1f         db  0x10 ; '.'
0000000000008f20         db  0x8f ; '.'
0000000000008f21         db  0x02 ; '.'
0000000000008f22         db  0x42 ; 'B'
0000000000008f23         db  0x0e ; '.'
0000000000008f24         db  0x18 ; '.'
0000000000008f25         db  0x8e ; '.'
0000000000008f26         db  0x03 ; '.'
0000000000008f27         db  0x45 ; 'E'
0000000000008f28         db  0x0e ; '.'
0000000000008f29         db  0x20 ; ' '
0000000000008f2a         db  0x8d ; '.'
0000000000008f2b         db  0x04 ; '.'
0000000000008f2c         db  0x42 ; 'B'
0000000000008f2d         db  0x0e ; '.'
0000000000008f2e         db  0x28 ; '('
0000000000008f2f         db  0x8c ; '.'
0000000000008f30         db  0x05 ; '.'
0000000000008f31         db  0x44 ; 'D'
0000000000008f32         db  0x0e ; '.'
0000000000008f33         db  0x30 ; '0'
0000000000008f34         db  0x86 ; '.'
0000000000008f35         db  0x06 ; '.'
0000000000008f36         db  0x41 ; 'A'
0000000000008f37         db  0x0e ; '.'
0000000000008f38         db  0x38 ; '8'
0000000000008f39         db  0x83 ; '.'
0000000000008f3a         db  0x07 ; '.'
0000000000008f3b         db  0x53 ; 'S'
0000000000008f3c         db  0x0e ; '.'
0000000000008f3d         db  0xf0 ; '.'
0000000000008f3e         db  0x01 ; '.'
0000000000008f3f         db  0x03 ; '.'
0000000000008f40         db  0x81 ; '.'
0000000000008f41         db  0x0b ; '.'
0000000000008f42         db  0x0e ; '.'
0000000000008f43         db  0xf8 ; '.'
0000000000008f44         db  0x01 ; '.'
0000000000008f45         db  0x4a ; 'J'
0000000000008f46         db  0x0e ; '.'
0000000000008f47         db  0x80 ; '.'
0000000000008f48         db  0x02 ; '.'
0000000000008f49         db  0x44 ; 'D'
0000000000008f4a         db  0x0e ; '.'
0000000000008f4b         db  0x88 ; '.'
0000000000008f4c         db  0x02 ; '.'
0000000000008f4d         db  0x45 ; 'E'
0000000000008f4e         db  0x0e ; '.'
0000000000008f4f         db  0x90 ; '.'
0000000000008f50         db  0x02 ; '.'
0000000000008f51         db  0x5f ; '_'
0000000000008f52         db  0x0e ; '.'
0000000000008f53         db  0xf0 ; '.'
0000000000008f54         db  0x01 ; '.'
0000000000008f55         db  0x64 ; 'd'
0000000000008f56         db  0x0a ; '.'
0000000000008f57         db  0x0e ; '.'
0000000000008f58         db  0x38 ; '8'
0000000000008f59         db  0x41 ; 'A'
0000000000008f5a         db  0x0e ; '.'
0000000000008f5b         db  0x30 ; '0'
0000000000008f5c         db  0x41 ; 'A'
0000000000008f5d         db  0x0e ; '.'
0000000000008f5e         db  0x28 ; '('
0000000000008f5f         db  0x42 ; 'B'
0000000000008f60         db  0x0e ; '.'
0000000000008f61         db  0x20 ; ' '
0000000000008f62         db  0x42 ; 'B'
0000000000008f63         db  0x0e ; '.'
0000000000008f64         db  0x18 ; '.'
0000000000008f65         db  0x42 ; 'B'
0000000000008f66         db  0x0e ; '.'
0000000000008f67         db  0x10 ; '.'
0000000000008f68         db  0x42 ; 'B'
0000000000008f69         db  0x0e ; '.'
0000000000008f6a         db  0x08 ; '.'
0000000000008f6b         db  0x44 ; 'D'
0000000000008f6c         db  0x0b ; '.'
0000000000008f6d         db  0x03 ; '.'
0000000000008f6e         db  0x99 ; '.'
0000000000008f6f         db  0x05 ; '.'
0000000000008f70         db  0x0e ; '.'
0000000000008f71         db  0xf8 ; '.'
0000000000008f72         db  0x01 ; '.'
0000000000008f73         db  0x4d ; 'M'
0000000000008f74         db  0x0e ; '.'
0000000000008f75         db  0x80 ; '.'
0000000000008f76         db  0x02 ; '.'
0000000000008f77         db  0x44 ; 'D'
0000000000008f78         db  0x0e ; '.'
0000000000008f79         db  0x88 ; '.'
0000000000008f7a         db  0x02 ; '.'
0000000000008f7b         db  0x47 ; 'G'
0000000000008f7c         db  0x0e ; '.'
0000000000008f7d         db  0x90 ; '.'
0000000000008f7e         db  0x02 ; '.'
0000000000008f7f         db  0x5b ; '['
0000000000008f80         db  0x0e ; '.'
0000000000008f81         db  0xf0 ; '.'
0000000000008f82         db  0x01 ; '.'
0000000000008f83         db  0x00 ; '.'
0000000000008f84         dd         0x00000068                                  ; Length of the record
0000000000008f88         dd         0x00000448                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000008f8c         db         0x34, 0xcc, 2 dup (0xff)                    ; begin 0x5bc0
0000000000008f90         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x5d6b)
0000000000008f94         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f95         db  0x42 ; 'B'
0000000000008f96         db  0x0e ; '.'
0000000000008f97         db  0x10 ; '.'
0000000000008f98         db  0x8f ; '.'
0000000000008f99         db  0x02 ; '.'
0000000000008f9a         db  0x42 ; 'B'
0000000000008f9b         db  0x0e ; '.'
0000000000008f9c         db  0x18 ; '.'
0000000000008f9d         db  0x8e ; '.'
0000000000008f9e         db  0x03 ; '.'
0000000000008f9f         db  0x45 ; 'E'
0000000000008fa0         db  0x0e ; '.'
0000000000008fa1         db  0x20 ; ' '
0000000000008fa2         db  0x8d ; '.'
0000000000008fa3         db  0x04 ; '.'
0000000000008fa4         db  0x42 ; 'B'
0000000000008fa5         db  0x0e ; '.'
0000000000008fa6         db  0x28 ; '('
0000000000008fa7         db  0x8c ; '.'
0000000000008fa8         db  0x05 ; '.'
0000000000008fa9         db  0x44 ; 'D'
0000000000008faa         db  0x0e ; '.'
0000000000008fab         db  0x30 ; '0'
0000000000008fac         db  0x86 ; '.'
0000000000008fad         db  0x06 ; '.'
0000000000008fae         db  0x41 ; 'A'
0000000000008faf         db  0x0e ; '.'
0000000000008fb0         db  0x38 ; '8'
0000000000008fb1         db  0x83 ; '.'
0000000000008fb2         db  0x07 ; '.'
0000000000008fb3         db  0x47 ; 'G'
0000000000008fb4         db  0x0e ; '.'
0000000000008fb5         db  0x60 ; '`'
0000000000008fb6         db  0x02 ; '.'
0000000000008fb7         db  0x99 ; '.'
0000000000008fb8         db  0x0e ; '.'
0000000000008fb9         db  0x68 ; 'h'
0000000000008fba         db  0x5f ; '_'
0000000000008fbb         db  0x0e ; '.'
0000000000008fbc         db  0x70 ; 'p'
0000000000008fbd         db  0x46 ; 'F'
0000000000008fbe         db  0x0e ; '.'
0000000000008fbf         db  0x78 ; 'x'
0000000000008fc0         db  0x42 ; 'B'
0000000000008fc1         db  0x0e ; '.'
0000000000008fc2         db  0x80 ; '.'
0000000000008fc3         db  0x01 ; '.'
0000000000008fc4         db  0x59 ; 'Y'
0000000000008fc5         db  0x0e ; '.'
0000000000008fc6         db  0x60 ; '`'
0000000000008fc7         db  0x02 ; '.'
0000000000008fc8         db  0x40 ; '@'
0000000000008fc9         db  0x0e ; '.'
0000000000008fca         db  0x68 ; 'h'
0000000000008fcb         db  0x4b ; 'K'
0000000000008fcc         db  0x0e ; '.'
0000000000008fcd         db  0x70 ; 'p'
0000000000008fce         db  0x43 ; 'C'
0000000000008fcf         db  0x0e ; '.'
0000000000008fd0         db  0x78 ; 'x'
0000000000008fd1         db  0x45 ; 'E'
0000000000008fd2         db  0x0e ; '.'
0000000000008fd3         db  0x80 ; '.'
0000000000008fd4         db  0x01 ; '.'
0000000000008fd5         db  0x5e ; '^'
0000000000008fd6         db  0x0e ; '.'
0000000000008fd7         db  0x60 ; '`'
0000000000008fd8         db  0x4c ; 'L'
0000000000008fd9         db  0x0a ; '.'
0000000000008fda         db  0x0e ; '.'
0000000000008fdb         db  0x38 ; '8'
0000000000008fdc         db  0x44 ; 'D'
0000000000008fdd         db  0x0e ; '.'
0000000000008fde         db  0x30 ; '0'
0000000000008fdf         db  0x41 ; 'A'
0000000000008fe0         db  0x0e ; '.'
0000000000008fe1         db  0x28 ; '('
0000000000008fe2         db  0x42 ; 'B'
0000000000008fe3         db  0x0e ; '.'
0000000000008fe4         db  0x20 ; ' '
0000000000008fe5         db  0x42 ; 'B'
0000000000008fe6         db  0x0e ; '.'
0000000000008fe7         db  0x18 ; '.'
0000000000008fe8         db  0x42 ; 'B'
0000000000008fe9         db  0x0e ; '.'
0000000000008fea         db  0x10 ; '.'
0000000000008feb         db  0x42 ; 'B'
0000000000008fec         db  0x0e ; '.'
0000000000008fed         db  0x08 ; '.'
0000000000008fee         db  0x46 ; 'F'
0000000000008fef         db  0x0b ; '.'
0000000000008ff0         dd         0x00000028                                  ; Length of the record
0000000000008ff4         dd         0x000004b4                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000008ff8         db         0x78, 0xcd, 2 dup (0xff)                    ; begin 0x5d70
0000000000008ffc         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x5da6)
0000000000009000         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009001         db  0x42 ; 'B'
0000000000009002         db  0x0e ; '.'
0000000000009003         db  0x10 ; '.'
0000000000009004         db  0x8c ; '.'
0000000000009005         db  0x02 ; '.'
0000000000009006         db  0x41 ; 'A'
0000000000009007         db  0x0e ; '.'
0000000000009008         db  0x18 ; '.'
0000000000009009         db  0x86 ; '.'
000000000000900a         db  0x03 ; '.'
000000000000900b         db  0x41 ; 'A'
000000000000900c         db  0x0e ; '.'
000000000000900d         db  0x20 ; ' '
000000000000900e         db  0x83 ; '.'
000000000000900f         db  0x04 ; '.'
0000000000009010         db  0x6e ; 'n'
0000000000009011         db  0x0e ; '.'
0000000000009012         db  0x18 ; '.'
0000000000009013         db  0x41 ; 'A'
0000000000009014         db  0x0e ; '.'
0000000000009015         db  0x10 ; '.'
0000000000009016         db  0x42 ; 'B'
0000000000009017         db  0x0e ; '.'
0000000000009018         db  0x08 ; '.'
0000000000009019         db  0x00 ; '.'
000000000000901a         db  0x00 ; '.'
000000000000901b         db  0x00 ; '.'
000000000000901c         dd         0x00000010                                  ; Length of the record
0000000000009020         dd         0x000004e0                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009024         db         0x8c, 0xcd, 2 dup (0xff)                    ; begin 0x5db0
0000000000009028         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5dc1)
000000000000902c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000902d         align      16
0000000000009030         dd         0x00000010                                  ; Length of the record
0000000000009034         dd         0x000004f4                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009038         db         0x98, 0xcd, 2 dup (0xff)                    ; begin 0x5dd0
000000000000903c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5de1)
0000000000009040         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009041         align      4
0000000000009044         dd         0x00000010                                  ; Length of the record
0000000000009048         dd         0x00000508                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
000000000000904c         db         0xa4, 0xcd, 2 dup (0xff)                    ; begin 0x5df0
0000000000009050         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x5e25)
0000000000009054         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009055         align      8
0000000000009058         dd         0x00000010                                  ; Length of the record
000000000000905c         dd         0x0000051c                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009060         db         0xd0, 0xcd, 2 dup (0xff)                    ; begin 0x5e30
0000000000009064         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x5e45)
0000000000009068         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009069         align      4
000000000000906c         dd         0x00000010                                  ; Length of the record
0000000000009070         dd         0x00000530                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009074         db         0xdc, 0xcd, 2 dup (0xff)                    ; begin 0x5e50
0000000000009078         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x5e80)
000000000000907c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000907d         db  0x6b ; 'k'
000000000000907e         db  0x0e ; '.'
000000000000907f         db  0x10 ; '.'
0000000000009080         dd         0x00000050                                  ; Length of the record
0000000000009084         dd         0x00000544                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009088         db         0xf8, 0xcd, 2 dup (0xff)                    ; begin 0x5e80
000000000000908c         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x5ef4)
0000000000009090         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009091         db  0x42 ; 'B'
0000000000009092         db  0x0e ; '.'
0000000000009093         db  0x10 ; '.'
0000000000009094         db  0x8f ; '.'
0000000000009095         db  0x02 ; '.'
0000000000009096         db  0x42 ; 'B'
0000000000009097         db  0x0e ; '.'
0000000000009098         db  0x18 ; '.'
0000000000009099         db  0x8e ; '.'
000000000000909a         db  0x03 ; '.'
000000000000909b         db  0x49 ; 'I'
000000000000909c         db  0x0e ; '.'
000000000000909d         db  0x20 ; ' '
000000000000909e         db  0x8d ; '.'
000000000000909f         db  0x04 ; '.'
00000000000090a0         db  0x42 ; 'B'
00000000000090a1         db  0x0e ; '.'
00000000000090a2         db  0x28 ; '('
00000000000090a3         db  0x8c ; '.'
00000000000090a4         db  0x05 ; '.'
00000000000090a5         db  0x44 ; 'D'
00000000000090a6         db  0x0e ; '.'
00000000000090a7         db  0x30 ; '0'
00000000000090a8         db  0x86 ; '.'
00000000000090a9         db  0x06 ; '.'
00000000000090aa         db  0x41 ; 'A'
00000000000090ab         db  0x0e ; '.'
00000000000090ac         db  0x38 ; '8'
00000000000090ad         db  0x83 ; '.'
00000000000090ae         db  0x07 ; '.'
00000000000090af         db  0x4d ; 'M'
00000000000090b0         db  0x0e ; '.'
00000000000090b1         db  0x50 ; 'P'
00000000000090b2         db  0x5f ; '_'
00000000000090b3         db  0x0e ; '.'
00000000000090b4         db  0x58 ; 'X'
00000000000090b5         db  0x47 ; 'G'
00000000000090b6         db  0x0e ; '.'
00000000000090b7         db  0x60 ; '`'
00000000000090b8         db  0x46 ; 'F'
00000000000090b9         db  0x0e ; '.'
00000000000090ba         db  0x68 ; 'h'
00000000000090bb         db  0x44 ; 'D'
00000000000090bc         db  0x0e ; '.'
00000000000090bd         db  0x70 ; 'p'
00000000000090be         db  0x58 ; 'X'
00000000000090bf         db  0x0e ; '.'
00000000000090c0         db  0x38 ; '8'
00000000000090c1         db  0x41 ; 'A'
00000000000090c2         db  0x0e ; '.'
00000000000090c3         db  0x30 ; '0'
00000000000090c4         db  0x41 ; 'A'
00000000000090c5         db  0x0e ; '.'
00000000000090c6         db  0x28 ; '('
00000000000090c7         db  0x42 ; 'B'
00000000000090c8         db  0x0e ; '.'
00000000000090c9         db  0x20 ; ' '
00000000000090ca         db  0x42 ; 'B'
00000000000090cb         db  0x0e ; '.'
00000000000090cc         db  0x18 ; '.'
00000000000090cd         db  0x42 ; 'B'
00000000000090ce         db  0x0e ; '.'
00000000000090cf         db  0x10 ; '.'
00000000000090d0         db  0x42 ; 'B'
00000000000090d1         db  0x0e ; '.'
00000000000090d2         db  0x08 ; '.'
00000000000090d3         db  0x00 ; '.'
00000000000090d4         dd         0x00000068                                  ; Length of the record
00000000000090d8         dd         0x00000598                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
00000000000090dc         db         0x24, 0xce, 2 dup (0xff)                    ; begin 0x5f00
00000000000090e0         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x5fe3)
00000000000090e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000090e5         db  0x42 ; 'B'
00000000000090e6         db  0x0e ; '.'
00000000000090e7         db  0x10 ; '.'
00000000000090e8         db  0x8f ; '.'
00000000000090e9         db  0x02 ; '.'
00000000000090ea         db  0x42 ; 'B'
00000000000090eb         db  0x0e ; '.'
00000000000090ec         db  0x18 ; '.'
00000000000090ed         db  0x8e ; '.'
00000000000090ee         db  0x03 ; '.'
00000000000090ef         db  0x49 ; 'I'
00000000000090f0         db  0x0e ; '.'
00000000000090f1         db  0x20 ; ' '
00000000000090f2         db  0x8d ; '.'
00000000000090f3         db  0x04 ; '.'
00000000000090f4         db  0x42 ; 'B'
00000000000090f5         db  0x0e ; '.'
00000000000090f6         db  0x28 ; '('
00000000000090f7         db  0x8c ; '.'
00000000000090f8         db  0x05 ; '.'
00000000000090f9         db  0x44 ; 'D'
00000000000090fa         db  0x0e ; '.'
00000000000090fb         db  0x30 ; '0'
00000000000090fc         db  0x86 ; '.'
00000000000090fd         db  0x06 ; '.'
00000000000090fe         db  0x41 ; 'A'
00000000000090ff         db  0x0e ; '.'
0000000000009100         db  0x38 ; '8'
0000000000009101         db  0x83 ; '.'
0000000000009102         db  0x07 ; '.'
0000000000009103         db  0x4d ; 'M'
0000000000009104         db  0x0e ; '.'
0000000000009105         db  0x70 ; 'p'
0000000000009106         db  0x65 ; 'e'
0000000000009107         db  0x0e ; '.'
0000000000009108         db  0x78 ; 'x'
0000000000009109         db  0x4d ; 'M'
000000000000910a         db  0x0e ; '.'
000000000000910b         db  0x80 ; '.'
000000000000910c         db  0x01 ; '.'
000000000000910d         db  0x46 ; 'F'
000000000000910e         db  0x0e ; '.'
000000000000910f         db  0x88 ; '.'
0000000000009110         db  0x01 ; '.'
0000000000009111         db  0x42 ; 'B'
0000000000009112         db  0x0e ; '.'
0000000000009113         db  0x90 ; '.'
0000000000009114         db  0x01 ; '.'
0000000000009115         db  0x5e ; '^'
0000000000009116         db  0x0e ; '.'
0000000000009117         db  0x70 ; 'p'
0000000000009118         db  0x56 ; 'V'
0000000000009119         db  0x0e ; '.'
000000000000911a         db  0x78 ; 'x'
000000000000911b         db  0x43 ; 'C'
000000000000911c         db  0x0e ; '.'
000000000000911d         db  0x80 ; '.'
000000000000911e         db  0x01 ; '.'
000000000000911f         db  0x43 ; 'C'
0000000000009120         db  0x0e ; '.'
0000000000009121         db  0x88 ; '.'
0000000000009122         db  0x01 ; '.'
0000000000009123         db  0x56 ; 'V'
0000000000009124         db  0x0e ; '.'
0000000000009125         db  0x90 ; '.'
0000000000009126         db  0x01 ; '.'
0000000000009127         db  0x52 ; 'R'
0000000000009128         db  0x0e ; '.'
0000000000009129         db  0x70 ; 'p'
000000000000912a         db  0x5b ; '['
000000000000912b         db  0x0e ; '.'
000000000000912c         db  0x38 ; '8'
000000000000912d         db  0x41 ; 'A'
000000000000912e         db  0x0e ; '.'
000000000000912f         db  0x30 ; '0'
0000000000009130         db  0x41 ; 'A'
0000000000009131         db  0x0e ; '.'
0000000000009132         db  0x28 ; '('
0000000000009133         db  0x42 ; 'B'
0000000000009134         db  0x0e ; '.'
0000000000009135         db  0x20 ; ' '
0000000000009136         db  0x42 ; 'B'
0000000000009137         db  0x0e ; '.'
0000000000009138         db  0x18 ; '.'
0000000000009139         db  0x42 ; 'B'
000000000000913a         db  0x0e ; '.'
000000000000913b         db  0x10 ; '.'
000000000000913c         db  0x42 ; 'B'
000000000000913d         db  0x0e ; '.'
000000000000913e         db  0x08 ; '.'
000000000000913f         db  0x00 ; '.'
0000000000009140         dd         0x00000010                                  ; Length of the record
0000000000009144         dd         0x00000604                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009148         db         0xa8, 0xce, 2 dup (0xff)                    ; begin 0x5ff0
000000000000914c         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x5ffa)
0000000000009150         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009151         align      4
0000000000009154         dd         0x00000028                                  ; Length of the record
0000000000009158         dd         0x00000618                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
000000000000915c         db         0xa4, 0xce, 2 dup (0xff)                    ; begin 0x6000
0000000000009160         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x6093)
0000000000009164         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009165         db  0x48 ; 'H'
0000000000009166         db  0x0e ; '.'
0000000000009167         db  0x10 ; '.'
0000000000009168         db  0x8c ; '.'
0000000000009169         db  0x02 ; '.'
000000000000916a         db  0x48 ; 'H'
000000000000916b         db  0x0e ; '.'
000000000000916c         db  0x18 ; '.'
000000000000916d         db  0x86 ; '.'
000000000000916e         db  0x03 ; '.'
000000000000916f         db  0x41 ; 'A'
0000000000009170         db  0x0e ; '.'
0000000000009171         db  0x20 ; ' '
0000000000009172         db  0x83 ; '.'
0000000000009173         db  0x04 ; '.'
0000000000009174         db  0x02 ; '.'
0000000000009175         db  0x74 ; 't'
0000000000009176         db  0x0e ; '.'
0000000000009177         db  0x18 ; '.'
0000000000009178         db  0x4b ; 'K'
0000000000009179         db  0x0e ; '.'
000000000000917a         db  0x10 ; '.'
000000000000917b         db  0x42 ; 'B'
000000000000917c         db  0x0e ; '.'
000000000000917d         db  0x08 ; '.'
000000000000917e         db  0x00 ; '.'
000000000000917f         db  0x00 ; '.'
0000000000009180         dd         0x00000010                                  ; Length of the record
0000000000009184         dd         0x00000644                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009188         db         0x18, 0xcf, 2 dup (0xff)                    ; begin 0x60a0
000000000000918c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x60b3)
0000000000009190         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009191         align      4
0000000000009194         dd         0x00000010                                  ; Length of the record
0000000000009198         dd         0x00000658                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
000000000000919c         db         0x24, 0xcf, 2 dup (0xff)                    ; begin 0x60c0
00000000000091a0         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x60cc)
00000000000091a4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000091a5         align      8
00000000000091a8         dd         0x00000010                                  ; Length of the record
00000000000091ac         dd         0x0000066c                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
00000000000091b0         db         0x20, 0xcf, 2 dup (0xff)                    ; begin 0x60d0
00000000000091b4         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x60e8)
00000000000091b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000091b9         align      4
00000000000091bc         dd         0x00000010                                  ; Length of the record
00000000000091c0         dd         0x00000680                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
00000000000091c4         db         0x2c, 0xcf, 2 dup (0xff)                    ; begin 0x60f0
00000000000091c8         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x6104)
00000000000091cc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000091cd         align      16
00000000000091d0         dd         0x00000018                                  ; Length of the record
00000000000091d4         dd         0x00000694                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
00000000000091d8         db         0x38, 0xcf, 2 dup (0xff)                    ; begin 0x6110
00000000000091dc         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x619e)
00000000000091e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000091e1         db  0x44 ; 'D'
00000000000091e2         db  0x0e ; '.'
00000000000091e3         db  0x50 ; 'P'
00000000000091e4         db  0x02 ; '.'
00000000000091e5         db  0x7f ; '.'
00000000000091e6         db  0x0a ; '.'
00000000000091e7         db  0x0e ; '.'
00000000000091e8         db  0x08 ; '.'
00000000000091e9         db  0x41 ; 'A'
00000000000091ea         db  0x0b ; '.'
00000000000091eb         db  0x00 ; '.'
00000000000091ec         dd         0x00000018                                  ; Length of the record
00000000000091f0         dd         0x000006b0                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
00000000000091f4         db         0xac, 0xcf, 2 dup (0xff)                    ; begin 0x61a0
00000000000091f8         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x622a)
00000000000091fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000091fd         db  0x44 ; 'D'
00000000000091fe         db  0x0e ; '.'
00000000000091ff         db  0x50 ; 'P'
0000000000009200         db  0x02 ; '.'
0000000000009201         db  0x7b ; '{'
0000000000009202         db  0x0a ; '.'
0000000000009203         db  0x0e ; '.'
0000000000009204         db  0x08 ; '.'
0000000000009205         db  0x41 ; 'A'
0000000000009206         db  0x0b ; '.'
0000000000009207         db  0x00 ; '.'
0000000000009208         dd         0x00000010                                  ; Length of the record
000000000000920c         dd         0x000006cc                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009210         db         0x20, 0xd0, 2 dup (0xff)                    ; begin 0x6230
0000000000009214         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x623c)
0000000000009218         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009219         align      4
000000000000921c         dd         0x00000010                                  ; Length of the record
0000000000009220         dd         0x000006e0                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009224         db         0x1c, 0xd0, 2 dup (0xff)                    ; begin 0x6240
0000000000009228         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x624f)
000000000000922c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000922d         align      16
0000000000009230         dd         0x00000018                                  ; Length of the record
0000000000009234         dd         0x000006f4                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009238         db         0x18, 0xd0, 2 dup (0xff)                    ; begin 0x6250
000000000000923c         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x62e8)
0000000000009240         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009241         db  0x44 ; 'D'
0000000000009242         db  0x0e ; '.'
0000000000009243         db  0x50 ; 'P'
0000000000009244         db  0x02 ; '.'
0000000000009245         db  0x8e ; '.'
0000000000009246         db  0x0a ; '.'
0000000000009247         db  0x0e ; '.'
0000000000009248         db  0x08 ; '.'
0000000000009249         db  0x41 ; 'A'
000000000000924a         db  0x0b ; '.'
000000000000924b         db  0x00 ; '.'
000000000000924c         dd         0x00000010                                  ; Length of the record
0000000000009250         dd         0x00000710                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009254         db         0x9c, 0xd0, 2 dup (0xff)                    ; begin 0x62f0
0000000000009258         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x6300)
000000000000925c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000925d         align      32
0000000000009260         dd         0x00000010                                  ; Length of the record
0000000000009264         dd         0x00000724                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009268         db         0x98, 0xd0, 2 dup (0xff)                    ; begin 0x6300
000000000000926c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x6311)
0000000000009270         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009271         align      4
0000000000009274         dd         0x00000010                                  ; Length of the record
0000000000009278         dd         0x00000738                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
000000000000927c         db         0xa4, 0xd0, 2 dup (0xff)                    ; begin 0x6320
0000000000009280         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x632a)
0000000000009284         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009285         align      8
0000000000009288         dd         0x00000018                                  ; Length of the record
000000000000928c         dd         0x0000074c                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009290         db         0xa0, 0xd0, 2 dup (0xff)                    ; begin 0x6330
0000000000009294         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x63be)
0000000000009298         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009299         db  0x44 ; 'D'
000000000000929a         db  0x0e ; '.'
000000000000929b         db  0x50 ; 'P'
000000000000929c         db  0x02 ; '.'
000000000000929d         db  0x7f ; '.'
000000000000929e         db  0x0a ; '.'
000000000000929f         db  0x0e ; '.'
00000000000092a0         db  0x08 ; '.'
00000000000092a1         db  0x41 ; 'A'
00000000000092a2         db  0x0b ; '.'
00000000000092a3         db  0x00 ; '.'
00000000000092a4         dd         0x00000018                                  ; Length of the record
00000000000092a8         dd         0x00000768                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
00000000000092ac         db         0x14, 0xd1, 2 dup (0xff)                    ; begin 0x63c0
00000000000092b0         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x6451)
00000000000092b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000092b5         db  0x44 ; 'D'
00000000000092b6         db  0x0e ; '.'
00000000000092b7         db  0x50 ; 'P'
00000000000092b8         db  0x02 ; '.'
00000000000092b9         db  0x82 ; '.'
00000000000092ba         db  0x0a ; '.'
00000000000092bb         db  0x0e ; '.'
00000000000092bc         db  0x08 ; '.'
00000000000092bd         db  0x41 ; 'A'
00000000000092be         db  0x0b ; '.'
00000000000092bf         db  0x00 ; '.'
00000000000092c0         dd         0x00000010                                  ; Length of the record
00000000000092c4         dd         0x00000784                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
00000000000092c8         db         0x98, 0xd1, 2 dup (0xff)                    ; begin 0x6460
00000000000092cc         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x646c)
00000000000092d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000092d1         align      4
00000000000092d4         dd         0x00000010                                  ; Length of the record
00000000000092d8         dd         0x00000798                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
00000000000092dc         db         0x94, 0xd1, 2 dup (0xff)                    ; begin 0x6470
00000000000092e0         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x6487)
00000000000092e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000092e5         align      8
00000000000092e8         dd         0x00000010                                  ; Length of the record
00000000000092ec         dd         0x000007ac                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
00000000000092f0         db         0xa0, 0xd1, 2 dup (0xff)                    ; begin 0x6490
00000000000092f4         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x64a3)
00000000000092f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000092f9         align      4
00000000000092fc         dd         0x00000010                                  ; Length of the record
0000000000009300         dd         0x000007c0                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009304         db         0xac, 0xd1, 2 dup (0xff)                    ; begin 0x64b0
0000000000009308         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x64bc)
000000000000930c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000930d         align      16
0000000000009310         dd         0x00000010                                  ; Length of the record
0000000000009314         dd         0x000007d4                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009318         db         0xa8, 0xd1, 2 dup (0xff)                    ; begin 0x64c0
000000000000931c         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x64d4)
0000000000009320         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009321         align      4
0000000000009324         dd         0x00000010                                  ; Length of the record
0000000000009328         dd         0x000007e8                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
000000000000932c         db         0xb4, 0xd1, 2 dup (0xff)                    ; begin 0x64e0
0000000000009330         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x64f3)
0000000000009334         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009335         align      8
0000000000009338         dd         0x00000014                                  ; Length of the record
000000000000933c         dd         0x000007fc                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009340         db         0xc0, 0xd1, 2 dup (0xff)                    ; begin 0x6500
0000000000009344         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x6518)
0000000000009348         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009349         align      16
0000000000009350         dd         0x00000110                                  ; Length of the record
0000000000009354         dd         0x00000814                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009358         db         0xc8, 0xd1, 2 dup (0xff)                    ; begin 0x6520
000000000000935c         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x6937)
0000000000009360         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009361         db  0x42 ; 'B'
0000000000009362         db  0x0e ; '.'
0000000000009363         db  0x10 ; '.'
0000000000009364         db  0x8f ; '.'
0000000000009365         db  0x02 ; '.'
0000000000009366         db  0x42 ; 'B'
0000000000009367         db  0x0e ; '.'
0000000000009368         db  0x18 ; '.'
0000000000009369         db  0x8e ; '.'
000000000000936a         db  0x03 ; '.'
000000000000936b         db  0x42 ; 'B'
000000000000936c         db  0x0e ; '.'
000000000000936d         db  0x20 ; ' '
000000000000936e         db  0x8d ; '.'
000000000000936f         db  0x04 ; '.'
0000000000009370         db  0x42 ; 'B'
0000000000009371         db  0x0e ; '.'
0000000000009372         db  0x28 ; '('
0000000000009373         db  0x8c ; '.'
0000000000009374         db  0x05 ; '.'
0000000000009375         db  0x44 ; 'D'
0000000000009376         db  0x0e ; '.'
0000000000009377         db  0x30 ; '0'
0000000000009378         db  0x86 ; '.'
0000000000009379         db  0x06 ; '.'
000000000000937a         db  0x41 ; 'A'
000000000000937b         db  0x0e ; '.'
000000000000937c         db  0x38 ; '8'
000000000000937d         db  0x83 ; '.'
000000000000937e         db  0x07 ; '.'
000000000000937f         db  0x4a ; 'J'
0000000000009380         db  0x0e ; '.'
0000000000009381         db  0x60 ; '`'
0000000000009382         db  0x02 ; '.'
0000000000009383         db  0xdd ; '.'
0000000000009384         db  0x0e ; '.'
0000000000009385         db  0x68 ; 'h'
0000000000009386         db  0x57 ; 'W'
0000000000009387         db  0x0e ; '.'
0000000000009388         db  0x70 ; 'p'
0000000000009389         db  0x42 ; 'B'
000000000000938a         db  0x0e ; '.'
000000000000938b         db  0x78 ; 'x'
000000000000938c         db  0x42 ; 'B'
000000000000938d         db  0x0e ; '.'
000000000000938e         db  0x80 ; '.'
000000000000938f         db  0x01 ; '.'
0000000000009390         db  0x42 ; 'B'
0000000000009391         db  0x0e ; '.'
0000000000009392         db  0x88 ; '.'
0000000000009393         db  0x01 ; '.'
0000000000009394         db  0x42 ; 'B'
0000000000009395         db  0x0e ; '.'
0000000000009396         db  0x90 ; '.'
0000000000009397         db  0x01 ; '.'
0000000000009398         db  0x53 ; 'S'
0000000000009399         db  0x0e ; '.'
000000000000939a         db  0x60 ; '`'
000000000000939b         db  0x44 ; 'D'
000000000000939c         db  0x0a ; '.'
000000000000939d         db  0x0e ; '.'
000000000000939e         db  0x38 ; '8'
000000000000939f         db  0x41 ; 'A'
00000000000093a0         db  0x0e ; '.'
00000000000093a1         db  0x30 ; '0'
00000000000093a2         db  0x41 ; 'A'
00000000000093a3         db  0x0e ; '.'
00000000000093a4         db  0x28 ; '('
00000000000093a5         db  0x42 ; 'B'
00000000000093a6         db  0x0e ; '.'
00000000000093a7         db  0x20 ; ' '
00000000000093a8         db  0x42 ; 'B'
00000000000093a9         db  0x0e ; '.'
00000000000093aa         db  0x18 ; '.'
00000000000093ab         db  0x42 ; 'B'
00000000000093ac         db  0x0e ; '.'
00000000000093ad         db  0x10 ; '.'
00000000000093ae         db  0x42 ; 'B'
00000000000093af         db  0x0e ; '.'
00000000000093b0         db  0x08 ; '.'
00000000000093b1         db  0x44 ; 'D'
00000000000093b2         db  0x0b ; '.'
00000000000093b3         db  0x02 ; '.'
00000000000093b4         db  0x78 ; 'x'
00000000000093b5         db  0x0a ; '.'
00000000000093b6         db  0x0e ; '.'
00000000000093b7         db  0x68 ; 'h'
00000000000093b8         db  0x48 ; 'H'
00000000000093b9         db  0x0b ; '.'
00000000000093ba         db  0x5a ; 'Z'
00000000000093bb         db  0x0a ; '.'
00000000000093bc         db  0x0e ; '.'
00000000000093bd         db  0x38 ; '8'
00000000000093be         db  0x47 ; 'G'
00000000000093bf         db  0x0e ; '.'
00000000000093c0         db  0x30 ; '0'
00000000000093c1         db  0x41 ; 'A'
00000000000093c2         db  0x0e ; '.'
00000000000093c3         db  0x28 ; '('
00000000000093c4         db  0x42 ; 'B'
00000000000093c5         db  0x0e ; '.'
00000000000093c6         db  0x20 ; ' '
00000000000093c7         db  0x42 ; 'B'
00000000000093c8         db  0x0e ; '.'
00000000000093c9         db  0x18 ; '.'
00000000000093ca         db  0x42 ; 'B'
00000000000093cb         db  0x0e ; '.'
00000000000093cc         db  0x10 ; '.'
00000000000093cd         db  0x42 ; 'B'
00000000000093ce         db  0x0e ; '.'
00000000000093cf         db  0x08 ; '.'
00000000000093d0         db  0x56 ; 'V'
00000000000093d1         db  0x0b ; '.'
00000000000093d2         db  0x5e ; '^'
00000000000093d3         db  0x0a ; '.'
00000000000093d4         db  0x0e ; '.'
00000000000093d5         db  0x38 ; '8'
00000000000093d6         db  0x52 ; 'R'
00000000000093d7         db  0x0e ; '.'
00000000000093d8         db  0x30 ; '0'
00000000000093d9         db  0x41 ; 'A'
00000000000093da         db  0x0e ; '.'
00000000000093db         db  0x28 ; '('
00000000000093dc         db  0x42 ; 'B'
00000000000093dd         db  0x0e ; '.'
00000000000093de         db  0x20 ; ' '
00000000000093df         db  0x42 ; 'B'
00000000000093e0         db  0x0e ; '.'
00000000000093e1         db  0x18 ; '.'
00000000000093e2         db  0x42 ; 'B'
00000000000093e3         db  0x0e ; '.'
00000000000093e4         db  0x10 ; '.'
00000000000093e5         db  0x42 ; 'B'
00000000000093e6         db  0x0e ; '.'
00000000000093e7         db  0x08 ; '.'
00000000000093e8         db  0x4f ; 'O'
00000000000093e9         db  0x0b ; '.'
00000000000093ea         db  0x62 ; 'b'
00000000000093eb         db  0x0a ; '.'
00000000000093ec         db  0x0e ; '.'
00000000000093ed         db  0x38 ; '8'
00000000000093ee         db  0x50 ; 'P'
00000000000093ef         db  0x0e ; '.'
00000000000093f0         db  0x30 ; '0'
00000000000093f1         db  0x41 ; 'A'
00000000000093f2         db  0x0e ; '.'
00000000000093f3         db  0x28 ; '('
00000000000093f4         db  0x42 ; 'B'
00000000000093f5         db  0x0e ; '.'
00000000000093f6         db  0x20 ; ' '
00000000000093f7         db  0x42 ; 'B'
00000000000093f8         db  0x0e ; '.'
00000000000093f9         db  0x18 ; '.'
00000000000093fa         db  0x42 ; 'B'
00000000000093fb         db  0x0e ; '.'
00000000000093fc         db  0x10 ; '.'
00000000000093fd         db  0x42 ; 'B'
00000000000093fe         db  0x0e ; '.'
00000000000093ff         db  0x08 ; '.'
0000000000009400         db  0x55 ; 'U'
0000000000009401         db  0x0b ; '.'
0000000000009402         db  0x66 ; 'f'
0000000000009403         db  0x0e ; '.'
0000000000009404         db  0x68 ; 'h'
0000000000009405         db  0x42 ; 'B'
0000000000009406         db  0x0e ; '.'
0000000000009407         db  0x70 ; 'p'
0000000000009408         db  0x5c ; '\'
0000000000009409         db  0x0e ; '.'
000000000000940a         db  0x68 ; 'h'
000000000000940b         db  0x41 ; 'A'
000000000000940c         db  0x0e ; '.'
000000000000940d         db  0x60 ; '`'
000000000000940e         db  0x44 ; 'D'
000000000000940f         db  0x0a ; '.'
0000000000009410         db  0x0e ; '.'
0000000000009411         db  0x38 ; '8'
0000000000009412         db  0x41 ; 'A'
0000000000009413         db  0x0e ; '.'
0000000000009414         db  0x30 ; '0'
0000000000009415         db  0x41 ; 'A'
0000000000009416         db  0x0e ; '.'
0000000000009417         db  0x28 ; '('
0000000000009418         db  0x42 ; 'B'
0000000000009419         db  0x0e ; '.'
000000000000941a         db  0x20 ; ' '
000000000000941b         db  0x42 ; 'B'
000000000000941c         db  0x0e ; '.'
000000000000941d         db  0x18 ; '.'
000000000000941e         db  0x42 ; 'B'
000000000000941f         db  0x0e ; '.'
0000000000009420         db  0x10 ; '.'
0000000000009421         db  0x42 ; 'B'
0000000000009422         db  0x0e ; '.'
0000000000009423         db  0x08 ; '.'
0000000000009424         db  0x45 ; 'E'
0000000000009425         db  0x0b ; '.'
0000000000009426         db  0x68 ; 'h'
0000000000009427         db  0x0a ; '.'
0000000000009428         db  0x0e ; '.'
0000000000009429         db  0x68 ; 'h'
000000000000942a         db  0x48 ; 'H'
000000000000942b         db  0x0b ; '.'
000000000000942c         db  0x72 ; 'r'
000000000000942d         db  0x0e ; '.'
000000000000942e         db  0x68 ; 'h'
000000000000942f         db  0x45 ; 'E'
0000000000009430         db  0x0e ; '.'
0000000000009431         db  0x70 ; 'p'
0000000000009432         db  0x42 ; 'B'
0000000000009433         db  0x0e ; '.'
0000000000009434         db  0x78 ; 'x'
0000000000009435         db  0x42 ; 'B'
0000000000009436         db  0x0e ; '.'
0000000000009437         db  0x80 ; '.'
0000000000009438         db  0x01 ; '.'
0000000000009439         db  0x5e ; '^'
000000000000943a         db  0x0e ; '.'
000000000000943b         db  0x60 ; '`'
000000000000943c         db  0x44 ; 'D'
000000000000943d         db  0x0a ; '.'
000000000000943e         db  0x0e ; '.'
000000000000943f         db  0x38 ; '8'
0000000000009440         db  0x41 ; 'A'
0000000000009441         db  0x0e ; '.'
0000000000009442         db  0x30 ; '0'
0000000000009443         db  0x41 ; 'A'
0000000000009444         db  0x0e ; '.'
0000000000009445         db  0x28 ; '('
0000000000009446         db  0x42 ; 'B'
0000000000009447         db  0x0e ; '.'
0000000000009448         db  0x20 ; ' '
0000000000009449         db  0x42 ; 'B'
000000000000944a         db  0x0e ; '.'
000000000000944b         db  0x18 ; '.'
000000000000944c         db  0x42 ; 'B'
000000000000944d         db  0x0e ; '.'
000000000000944e         db  0x10 ; '.'
000000000000944f         db  0x42 ; 'B'
0000000000009450         db  0x0e ; '.'
0000000000009451         db  0x08 ; '.'
0000000000009452         db  0x41 ; 'A'
0000000000009453         db  0x0b ; '.'
0000000000009454         db  0x79 ; 'y'
0000000000009455         db  0x0a ; '.'
0000000000009456         db  0x0e ; '.'
0000000000009457         db  0x68 ; 'h'
0000000000009458         db  0x42 ; 'B'
0000000000009459         db  0x0e ; '.'
000000000000945a         db  0x70 ; 'p'
000000000000945b         db  0x42 ; 'B'
000000000000945c         db  0x0e ; '.'
000000000000945d         db  0x78 ; 'x'
000000000000945e         db  0x42 ; 'B'
000000000000945f         db  0x0e ; '.'
0000000000009460         db  0x80 ; '.'
0000000000009461         db  0x01 ; '.'
0000000000009462         db  0x51 ; 'Q'
0000000000009463         db  0x0b ; '.'
0000000000009464         dd         0x00000010                                  ; Length of the record
0000000000009468         dd         0x00000928                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
000000000000946c         db         2 dup (0xd4), 2 dup (0xff)                  ; begin 0x6940
0000000000009470         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x6960)
0000000000009474         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009475         align      8
0000000000009478         dd         0x00000018                                  ; Length of the record
000000000000947c         dd         0x0000093c                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009480         db         0xe0, 0xd4, 2 dup (0xff)                    ; begin 0x6960
0000000000009484         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x69d8)
0000000000009488         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009489         db  0x44 ; 'D'
000000000000948a         db  0x0e ; '.'
000000000000948b         db  0x70 ; 'p'
000000000000948c         db  0x02 ; '.'
000000000000948d         db  0x60 ; '`'
000000000000948e         db  0x0a ; '.'
000000000000948f         db  0x0e ; '.'
0000000000009490         db  0x08 ; '.'
0000000000009491         db  0x41 ; 'A'
0000000000009492         db  0x0b ; '.'
0000000000009493         db  0x00 ; '.'
0000000000009494         dd         0x00000028                                  ; Length of the record
0000000000009498         dd         0x00000958                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
000000000000949c         db         0x44, 0xd5, 2 dup (0xff)                    ; begin 0x69e0
00000000000094a0         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x6ab5)
00000000000094a4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000094a5         db  0x41 ; 'A'
00000000000094a6         db  0x0e ; '.'
00000000000094a7         db  0x10 ; '.'
00000000000094a8         db  0x86 ; '.'
00000000000094a9         db  0x02 ; '.'
00000000000094aa         db  0x41 ; 'A'
00000000000094ab         db  0x0e ; '.'
00000000000094ac         db  0x18 ; '.'
00000000000094ad         db  0x83 ; '.'
00000000000094ae         db  0x03 ; '.'
00000000000094af         db  0x50 ; 'P'
00000000000094b0         db  0x0e ; '.'
00000000000094b1         db  0xd0 ; '.'
00000000000094b2         db  0x01 ; '.'
00000000000094b3         db  0x02 ; '.'
00000000000094b4         db  0xab ; '.'
00000000000094b5         db  0x0a ; '.'
00000000000094b6         db  0x0e ; '.'
00000000000094b7         db  0x18 ; '.'
00000000000094b8         db  0x41 ; 'A'
00000000000094b9         db  0x0e ; '.'
00000000000094ba         db  0x10 ; '.'
00000000000094bb         db  0x41 ; 'A'
00000000000094bc         db  0x0e ; '.'
00000000000094bd         db  0x08 ; '.'
00000000000094be         db  0x41 ; 'A'
00000000000094bf         db  0x0b ; '.'
00000000000094c0         dd         0x0000001c                                  ; Length of the record
00000000000094c4         dd         0x00000984                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
00000000000094c8         db         0xf8, 0xd5, 2 dup (0xff)                    ; begin 0x6ac0
00000000000094cc         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x6b40)
00000000000094d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000094d1         db  0x41 ; 'A'
00000000000094d2         db  0x0e ; '.'
00000000000094d3         db  0x10 ; '.'
00000000000094d4         db  0x83 ; '.'
00000000000094d5         db  0x02 ; '.'
00000000000094d6         db  0x02 ; '.'
00000000000094d7         db  0x7a ; 'z'
00000000000094d8         db  0x0e ; '.'
00000000000094d9         db  0x08 ; '.'
00000000000094da         db  0x00 ; '.'
00000000000094db         db  0x00 ; '.'
00000000000094dc         db  0x00 ; '.'
00000000000094dd         db  0x00 ; '.'
00000000000094de         db  0x00 ; '.'
00000000000094df         db  0x00 ; '.'
00000000000094e0         dd         0x00000018                                  ; Length of the record
00000000000094e4         dd         0x000009a4                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
00000000000094e8         db         0x58, 0xd6, 2 dup (0xff)                    ; begin 0x6b40
00000000000094ec         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x6b5a)
00000000000094f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000094f1         db  0x41 ; 'A'
00000000000094f2         db  0x0e ; '.'
00000000000094f3         db  0x10 ; '.'
00000000000094f4         db  0x83 ; '.'
00000000000094f5         db  0x02 ; '.'
00000000000094f6         db  0x53 ; 'S'
00000000000094f7         db  0x0a ; '.'
00000000000094f8         db  0x0e ; '.'
00000000000094f9         db  0x08 ; '.'
00000000000094fa         db  0x41 ; 'A'
00000000000094fb         db  0x0b ; '.'
00000000000094fc         dd         0x00000010                                  ; Length of the record
0000000000009500         dd         0x000009c0                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009504         db         0x5c, 0xd6, 2 dup (0xff)                    ; begin 0x6b60
0000000000009508         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x6b84)
000000000000950c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000950d         db  0x5f ; '_'
000000000000950e         db  0x0e ; '.'
000000000000950f         db  0x10 ; '.'
0000000000009510         dd         0x00000010                                  ; Length of the record
0000000000009514         dd         0x000009d4                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009518         db         0x78, 0xd6, 2 dup (0xff)                    ; begin 0x6b90
000000000000951c         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x6b92)
0000000000009520         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009521         align      4
0000000000009524         dd         0x00000020                                  ; Length of the record
0000000000009528         dd         0x000009e8                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
000000000000952c         db         0x74, 0xd6, 2 dup (0xff)                    ; begin 0x6ba0
0000000000009530         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x6bd6)
0000000000009534         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009535         db  0x44 ; 'D'
0000000000009536         db  0x0e ; '.'
0000000000009537         db  0x10 ; '.'
0000000000009538         db  0x83 ; '.'
0000000000009539         db  0x02 ; '.'
000000000000953a         db  0x5d ; ']'
000000000000953b         db  0x0a ; '.'
000000000000953c         db  0x0e ; '.'
000000000000953d         db  0x08 ; '.'
000000000000953e         db  0x47 ; 'G'
000000000000953f         db  0x0b ; '.'
0000000000009540         db  0x48 ; 'H'
0000000000009541         db  0x0a ; '.'
0000000000009542         db  0x0e ; '.'
0000000000009543         db  0x08 ; '.'
0000000000009544         db  0x41 ; 'A'
0000000000009545         db  0x0b ; '.'
0000000000009546         db  0x00 ; '.'
0000000000009547         db  0x00 ; '.'
0000000000009548         dd         0x00000010                                  ; Length of the record
000000000000954c         dd         0x00000a0c                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009550         db         0x90, 0xd6, 2 dup (0xff)                    ; begin 0x6be0
0000000000009554         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x6c04)
0000000000009558         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009559         db  0x5f ; '_'
000000000000955a         db  0x0e ; '.'
000000000000955b         db  0x10 ; '.'
000000000000955c         dd         0x00000014                                  ; Length of the record
0000000000009560         dd         0x00000a20                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009564         db         0xac, 0xd6, 2 dup (0xff)                    ; begin 0x6c10
0000000000009568         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x6c92)
000000000000956c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000956d         db  0x02 ; '.'
000000000000956e         db  0x5f ; '_'
000000000000956f         db  0x0e ; '.'
0000000000009570         db  0x10 ; '.'
0000000000009571         db  0x49 ; 'I'
0000000000009572         db  0x0e ; '.'
0000000000009573         db  0x08 ; '.'
0000000000009574         dd         0x00000014                                  ; Length of the record
0000000000009578         dd         0x00000a38                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
000000000000957c         db         0x24, 0xd7, 2 dup (0xff)                    ; begin 0x6ca0
0000000000009580         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x6cea)
0000000000009584         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009585         db  0x02 ; '.'
0000000000009586         db  0x45 ; 'E'
0000000000009587         db  0x0e ; '.'
0000000000009588         db  0x10 ; '.'
0000000000009589         db  0x00 ; '.'
000000000000958a         db  0x00 ; '.'
000000000000958b         db  0x00 ; '.'
000000000000958c         dd         0x00000018                                  ; Length of the record
0000000000009590         dd         0x00000a50                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009594         db         0x5c, 0xd7, 2 dup (0xff)                    ; begin 0x6cf0
0000000000009598         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x6d07)
000000000000959c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000959d         db  0x41 ; 'A'
000000000000959e         db  0x0e ; '.'
000000000000959f         db  0x10 ; '.'
00000000000095a0         db  0x83 ; '.'
00000000000095a1         db  0x02 ; '.'
00000000000095a2         db  0x51 ; 'Q'
00000000000095a3         db  0x0e ; '.'
00000000000095a4         db  0x08 ; '.'
00000000000095a5         db  0x00 ; '.'
00000000000095a6         db  0x00 ; '.'
00000000000095a7         db  0x00 ; '.'
00000000000095a8         dd         0x00000018                                  ; Length of the record
00000000000095ac         dd         0x00000a6c                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
00000000000095b0         db         0x60, 0xd7, 2 dup (0xff)                    ; begin 0x6d10
00000000000095b4         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x6d3e)
00000000000095b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000095b9         db  0x47 ; 'G'
00000000000095ba         db  0x0e ; '.'
00000000000095bb         db  0x10 ; '.'
00000000000095bc         db  0x61 ; 'a'
00000000000095bd         db  0x0a ; '.'
00000000000095be         db  0x0e ; '.'
00000000000095bf         db  0x08 ; '.'
00000000000095c0         db  0x41 ; 'A'
00000000000095c1         db  0x0b ; '.'
00000000000095c2         db  0x00 ; '.'
00000000000095c3         db  0x00 ; '.'
00000000000095c4         dd         0x00000024                                  ; Length of the record
00000000000095c8         dd         0x00000a88                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
00000000000095cc         db         0x74, 0xd7, 2 dup (0xff)                    ; begin 0x6d40
00000000000095d0         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x6d68)
00000000000095d4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000095d5         db  0x41 ; 'A'
00000000000095d6         db  0x0e ; '.'
00000000000095d7         db  0x10 ; '.'
00000000000095d8         db  0x86 ; '.'
00000000000095d9         db  0x02 ; '.'
00000000000095da         db  0x41 ; 'A'
00000000000095db         db  0x0e ; '.'
00000000000095dc         db  0x18 ; '.'
00000000000095dd         db  0x83 ; '.'
00000000000095de         db  0x03 ; '.'
00000000000095df         db  0x4d ; 'M'
00000000000095e0         db  0x0e ; '.'
00000000000095e1         db  0x20 ; ' '
00000000000095e2         db  0x49 ; 'I'
00000000000095e3         db  0x0e ; '.'
00000000000095e4         db  0x18 ; '.'
00000000000095e5         db  0x47 ; 'G'
00000000000095e6         db  0x0e ; '.'
00000000000095e7         db  0x10 ; '.'
00000000000095e8         db  0x41 ; 'A'
00000000000095e9         db  0x0e ; '.'
00000000000095ea         db  0x08 ; '.'
00000000000095eb         db  0x00 ; '.'
00000000000095ec         dd         0x00000018                                  ; Length of the record
00000000000095f0         dd         0x00000ab0                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
00000000000095f4         db         0x7c, 0xd7, 2 dup (0xff)                    ; begin 0x6d70
00000000000095f8         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x6d83)
00000000000095fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000095fd         db  0x41 ; 'A'
00000000000095fe         db  0x0e ; '.'
00000000000095ff         db  0x10 ; '.'
0000000000009600         db  0x83 ; '.'
0000000000009601         db  0x02 ; '.'
0000000000009602         db  0x50 ; 'P'
0000000000009603         db  0x0e ; '.'
0000000000009604         db  0x08 ; '.'
0000000000009605         db  0x00 ; '.'
0000000000009606         db  0x00 ; '.'
0000000000009607         db  0x00 ; '.'
0000000000009608         dd         0x00000014                                  ; Length of the record
000000000000960c         dd         0x00000acc                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009610         db         0x80, 0xd7, 2 dup (0xff)                    ; begin 0x6d90
0000000000009614         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x6dc5)
0000000000009618         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009619         db  0x4b ; 'K'
000000000000961a         db  0x0e ; '.'
000000000000961b         db  0x10 ; '.'
000000000000961c         db  0x00 ; '.'
000000000000961d         db  0x00 ; '.'
000000000000961e         db  0x00 ; '.'
000000000000961f         db  0x00 ; '.'
0000000000009620         dd         0x00000034                                  ; Length of the record
0000000000009624         dd         0x00000ae4                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009628         db         0xa8, 0xd7, 2 dup (0xff)                    ; begin 0x6dd0
000000000000962c         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x6e4b)
0000000000009630         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009631         db  0x42 ; 'B'
0000000000009632         db  0x0e ; '.'
0000000000009633         db  0x10 ; '.'
0000000000009634         db  0x8c ; '.'
0000000000009635         db  0x02 ; '.'
0000000000009636         db  0x41 ; 'A'
0000000000009637         db  0x0e ; '.'
0000000000009638         db  0x18 ; '.'
0000000000009639         db  0x86 ; '.'
000000000000963a         db  0x03 ; '.'
000000000000963b         db  0x41 ; 'A'
000000000000963c         db  0x0e ; '.'
000000000000963d         db  0x20 ; ' '
000000000000963e         db  0x83 ; '.'
000000000000963f         db  0x04 ; '.'
0000000000009640         db  0x7d ; '}'
0000000000009641         db  0x0a ; '.'
0000000000009642         db  0x0e ; '.'
0000000000009643         db  0x18 ; '.'
0000000000009644         db  0x41 ; 'A'
0000000000009645         db  0x0e ; '.'
0000000000009646         db  0x10 ; '.'
0000000000009647         db  0x42 ; 'B'
0000000000009648         db  0x0e ; '.'
0000000000009649         db  0x08 ; '.'
000000000000964a         db  0x44 ; 'D'
000000000000964b         db  0x0b ; '.'
000000000000964c         db  0x60 ; '`'
000000000000964d         db  0x0a ; '.'
000000000000964e         db  0x0e ; '.'
000000000000964f         db  0x18 ; '.'
0000000000009650         db  0x41 ; 'A'
0000000000009651         db  0x0e ; '.'
0000000000009652         db  0x10 ; '.'
0000000000009653         db  0x42 ; 'B'
0000000000009654         db  0x0e ; '.'
0000000000009655         db  0x08 ; '.'
0000000000009656         db  0x45 ; 'E'
0000000000009657         db  0x0b ; '.'
0000000000009658         dd         0x0000001c                                  ; Length of the record
000000000000965c         dd         0x00000b1c                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009660         db         0xf0, 0xd7, 2 dup (0xff)                    ; begin 0x6e50
0000000000009664         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x6e90)
0000000000009668         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009669         db  0x44 ; 'D'
000000000000966a         db  0x0e ; '.'
000000000000966b         db  0x10 ; '.'
000000000000966c         db  0x83 ; '.'
000000000000966d         db  0x02 ; '.'
000000000000966e         db  0x5a ; 'Z'
000000000000966f         db  0x0a ; '.'
0000000000009670         db  0x0e ; '.'
0000000000009671         db  0x08 ; '.'
0000000000009672         db  0x4a ; 'J'
0000000000009673         db  0x0b ; '.'
0000000000009674         db  0x53 ; 'S'
0000000000009675         db  0x0e ; '.'
0000000000009676         db  0x08 ; '.'
0000000000009677         db  0x00 ; '.'
0000000000009678         dd         0x0000002c                                  ; Length of the record
000000000000967c         dd         0x00000b3c                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009680         db         0x10, 0xd8, 2 dup (0xff)                    ; begin 0x6e90
0000000000009684         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x6ee7)
0000000000009688         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009689         db  0x63 ; 'c'
000000000000968a         db  0x0e ; '.'
000000000000968b         db  0x10 ; '.'
000000000000968c         db  0x8c ; '.'
000000000000968d         db  0x02 ; '.'
000000000000968e         db  0x41 ; 'A'
000000000000968f         db  0x0e ; '.'
0000000000009690         db  0x18 ; '.'
0000000000009691         db  0x86 ; '.'
0000000000009692         db  0x03 ; '.'
0000000000009693         db  0x44 ; 'D'
0000000000009694         db  0x0e ; '.'
0000000000009695         db  0x20 ; ' '
0000000000009696         db  0x83 ; '.'
0000000000009697         db  0x04 ; '.'
0000000000009698         db  0x6b ; 'k'
0000000000009699         db  0x0e ; '.'
000000000000969a         db  0x18 ; '.'
000000000000969b         db  0x41 ; 'A'
000000000000969c         db  0x0e ; '.'
000000000000969d         db  0x10 ; '.'
000000000000969e         db  0x42 ; 'B'
000000000000969f         db  0x0e ; '.'
00000000000096a0         db  0x08 ; '.'
00000000000096a1         db  0x00 ; '.'
00000000000096a2         db  0x00 ; '.'
00000000000096a3         db  0x00 ; '.'
00000000000096a4         db  0x00 ; '.'
00000000000096a5         db  0x00 ; '.'
00000000000096a6         db  0x00 ; '.'
00000000000096a7         db  0x00 ; '.'
00000000000096a8         dd         0x0000003c                                  ; Length of the record
00000000000096ac         dd         0x00000b6c                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
00000000000096b0         db         0x40, 0xd8, 2 dup (0xff)                    ; begin 0x6ef0
00000000000096b4         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x6f73)
00000000000096b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000096b9         db  0x42 ; 'B'
00000000000096ba         db  0x0e ; '.'
00000000000096bb         db  0x10 ; '.'
00000000000096bc         db  0x8d ; '.'
00000000000096bd         db  0x02 ; '.'
00000000000096be         db  0x42 ; 'B'
00000000000096bf         db  0x0e ; '.'
00000000000096c0         db  0x18 ; '.'
00000000000096c1         db  0x8c ; '.'
00000000000096c2         db  0x03 ; '.'
00000000000096c3         db  0x44 ; 'D'
00000000000096c4         db  0x0e ; '.'
00000000000096c5         db  0x20 ; ' '
00000000000096c6         db  0x86 ; '.'
00000000000096c7         db  0x04 ; '.'
00000000000096c8         db  0x41 ; 'A'
00000000000096c9         db  0x0e ; '.'
00000000000096ca         db  0x28 ; '('
00000000000096cb         db  0x83 ; '.'
00000000000096cc         db  0x05 ; '.'
00000000000096cd         db  0x4a ; 'J'
00000000000096ce         db  0x0e ; '.'
00000000000096cf         db  0x40 ; '@'
00000000000096d0         db  0x02 ; '.'
00000000000096d1         db  0x64 ; 'd'
00000000000096d2         db  0x0a ; '.'
00000000000096d3         db  0x0e ; '.'
00000000000096d4         db  0x28 ; '('
00000000000096d5         db  0x41 ; 'A'
00000000000096d6         db  0x0e ; '.'
00000000000096d7         db  0x20 ; ' '
00000000000096d8         db  0x41 ; 'A'
00000000000096d9         db  0x0e ; '.'
00000000000096da         db  0x18 ; '.'
00000000000096db         db  0x42 ; 'B'
00000000000096dc         db  0x0e ; '.'
00000000000096dd         db  0x10 ; '.'
00000000000096de         db  0x42 ; 'B'
00000000000096df         db  0x0e ; '.'
00000000000096e0         db  0x08 ; '.'
00000000000096e1         db  0x41 ; 'A'
00000000000096e2         db  0x0b ; '.'
00000000000096e3         db  0x00 ; '.'
00000000000096e4         db  0x00 ; '.'
00000000000096e5         db  0x00 ; '.'
00000000000096e6         db  0x00 ; '.'
00000000000096e7         db  0x00 ; '.'
00000000000096e8         dd         0x00000028                                  ; Length of the record
00000000000096ec         dd         0x00000bac                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
00000000000096f0         db         0x90, 0xd8, 2 dup (0xff)                    ; begin 0x6f80
00000000000096f4         db         0x5e, 3 dup (0x00)                          ; length 0x5e (end at 0x6fde)
00000000000096f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000096f9         db  0x41 ; 'A'
00000000000096fa         db  0x0e ; '.'
00000000000096fb         db  0x10 ; '.'
00000000000096fc         db  0x86 ; '.'
00000000000096fd         db  0x02 ; '.'
00000000000096fe         db  0x41 ; 'A'
00000000000096ff         db  0x0e ; '.'
0000000000009700         db  0x18 ; '.'
0000000000009701         db  0x83 ; '.'
0000000000009702         db  0x03 ; '.'
0000000000009703         db  0x4c ; 'L'
0000000000009704         db  0x0e ; '.'
0000000000009705         db  0x20 ; ' '
0000000000009706         db  0x77 ; 'w'
0000000000009707         db  0x0a ; '.'
0000000000009708         db  0x0e ; '.'
0000000000009709         db  0x18 ; '.'
000000000000970a         db  0x44 ; 'D'
000000000000970b         db  0x0e ; '.'
000000000000970c         db  0x10 ; '.'
000000000000970d         db  0x41 ; 'A'
000000000000970e         db  0x0e ; '.'
000000000000970f         db  0x08 ; '.'
0000000000009710         db  0x46 ; 'F'
0000000000009711         db  0x0b ; '.'
0000000000009712         db  0x00 ; '.'
0000000000009713         db  0x00 ; '.'
0000000000009714         dd         0x00000048                                  ; Length of the record
0000000000009718         dd         0x00000bd8                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
000000000000971c         db         0xc4, 0xd8, 2 dup (0xff)                    ; begin 0x6fe0
0000000000009720         db         0x89, 0x01, 2 dup (0x00)                    ; length 0x189 (end at 0x7169)
0000000000009724         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009725         db  0x42 ; 'B'
0000000000009726         db  0x0e ; '.'
0000000000009727         db  0x10 ; '.'
0000000000009728         db  0x8f ; '.'
0000000000009729         db  0x02 ; '.'
000000000000972a         db  0x42 ; 'B'
000000000000972b         db  0x0e ; '.'
000000000000972c         db  0x18 ; '.'
000000000000972d         db  0x8e ; '.'
000000000000972e         db  0x03 ; '.'
000000000000972f         db  0x45 ; 'E'
0000000000009730         db  0x0e ; '.'
0000000000009731         db  0x20 ; ' '
0000000000009732         db  0x8d ; '.'
0000000000009733         db  0x04 ; '.'
0000000000009734         db  0x45 ; 'E'
0000000000009735         db  0x0e ; '.'
0000000000009736         db  0x28 ; '('
0000000000009737         db  0x8c ; '.'
0000000000009738         db  0x05 ; '.'
0000000000009739         db  0x41 ; 'A'
000000000000973a         db  0x0e ; '.'
000000000000973b         db  0x30 ; '0'
000000000000973c         db  0x86 ; '.'
000000000000973d         db  0x06 ; '.'
000000000000973e         db  0x41 ; 'A'
000000000000973f         db  0x0e ; '.'
0000000000009740         db  0x38 ; '8'
0000000000009741         db  0x83 ; '.'
0000000000009742         db  0x07 ; '.'
0000000000009743         db  0x4f ; 'O'
0000000000009744         db  0x0e ; '.'
0000000000009745         db  0x50 ; 'P'
0000000000009746         db  0x02 ; '.'
0000000000009747         db  0xaa ; '.'
0000000000009748         db  0x0a ; '.'
0000000000009749         db  0x0e ; '.'
000000000000974a         db  0x38 ; '8'
000000000000974b         db  0x43 ; 'C'
000000000000974c         db  0x0e ; '.'
000000000000974d         db  0x30 ; '0'
000000000000974e         db  0x41 ; 'A'
000000000000974f         db  0x0e ; '.'
0000000000009750         db  0x28 ; '('
0000000000009751         db  0x42 ; 'B'
0000000000009752         db  0x0e ; '.'
0000000000009753         db  0x20 ; ' '
0000000000009754         db  0x42 ; 'B'
0000000000009755         db  0x0e ; '.'
0000000000009756         db  0x18 ; '.'
0000000000009757         db  0x42 ; 'B'
0000000000009758         db  0x0e ; '.'
0000000000009759         db  0x10 ; '.'
000000000000975a         db  0x42 ; 'B'
000000000000975b         db  0x0e ; '.'
000000000000975c         db  0x08 ; '.'
000000000000975d         db  0x4b ; 'K'
000000000000975e         db  0x0b ; '.'
000000000000975f         db  0x00 ; '.'
0000000000009760         dd         0x00000010                                  ; Length of the record
0000000000009764         dd         0x00000c24                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009768         db         0x08, 0xda, 2 dup (0xff)                    ; begin 0x7170
000000000000976c         db         0x2c, 3 dup (0x00)                          ; length 0x2c (end at 0x719c)
0000000000009770         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009771         align      4
0000000000009774         dd         0x00000018                                  ; Length of the record
0000000000009778         dd         0x00000c38                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
000000000000977c         db         0x24, 0xda, 2 dup (0xff)                    ; begin 0x71a0
0000000000009780         db         0x2a, 3 dup (0x00)                          ; length 0x2a (end at 0x71ca)
0000000000009784         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009785         db  0x46 ; 'F'
0000000000009786         db  0x0e ; '.'
0000000000009787         db  0x10 ; '.'
0000000000009788         db  0x83 ; '.'
0000000000009789         db  0x02 ; '.'
000000000000978a         db  0x5b ; '['
000000000000978b         db  0x0e ; '.'
000000000000978c         db  0x08 ; '.'
000000000000978d         db  0x47 ; 'G'
000000000000978e         db  0xc3 ; '.'
000000000000978f         db  0x00 ; '.'
0000000000009790         dd         0x00000038                                  ; Length of the record
0000000000009794         dd         0x00000c54                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009798         db         0x38, 0xda, 2 dup (0xff)                    ; begin 0x71d0
000000000000979c         db         0x5d, 3 dup (0x00)                          ; length 0x5d (end at 0x722d)
00000000000097a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000097a1         db  0x42 ; 'B'
00000000000097a2         db  0x0e ; '.'
00000000000097a3         db  0x10 ; '.'
00000000000097a4         db  0x8d ; '.'
00000000000097a5         db  0x02 ; '.'
00000000000097a6         db  0x42 ; 'B'
00000000000097a7         db  0x0e ; '.'
00000000000097a8         db  0x18 ; '.'
00000000000097a9         db  0x8c ; '.'
00000000000097aa         db  0x03 ; '.'
00000000000097ab         db  0x41 ; 'A'
00000000000097ac         db  0x0e ; '.'
00000000000097ad         db  0x20 ; ' '
00000000000097ae         db  0x86 ; '.'
00000000000097af         db  0x04 ; '.'
00000000000097b0         db  0x41 ; 'A'
00000000000097b1         db  0x0e ; '.'
00000000000097b2         db  0x28 ; '('
00000000000097b3         db  0x83 ; '.'
00000000000097b4         db  0x05 ; '.'
00000000000097b5         db  0x47 ; 'G'
00000000000097b6         db  0x0e ; '.'
00000000000097b7         db  0x30 ; '0'
00000000000097b8         db  0x75 ; 'u'
00000000000097b9         db  0x0a ; '.'
00000000000097ba         db  0x0e ; '.'
00000000000097bb         db  0x28 ; '('
00000000000097bc         db  0x44 ; 'D'
00000000000097bd         db  0x0e ; '.'
00000000000097be         db  0x20 ; ' '
00000000000097bf         db  0x41 ; 'A'
00000000000097c0         db  0x0e ; '.'
00000000000097c1         db  0x18 ; '.'
00000000000097c2         db  0x42 ; 'B'
00000000000097c3         db  0x0e ; '.'
00000000000097c4         db  0x10 ; '.'
00000000000097c5         db  0x42 ; 'B'
00000000000097c6         db  0x0e ; '.'
00000000000097c7         db  0x08 ; '.'
00000000000097c8         db  0x45 ; 'E'
00000000000097c9         db  0x0b ; '.'
00000000000097ca         db  0x00 ; '.'
00000000000097cb         db  0x00 ; '.'
00000000000097cc         dd         0x00000034                                  ; Length of the record
00000000000097d0         dd         0x00000c90                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
00000000000097d4         db         0x5c, 0xda, 2 dup (0xff)                    ; begin 0x7230
00000000000097d8         db         0x8f, 3 dup (0x00)                          ; length 0x8f (end at 0x72bf)
00000000000097dc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000097dd         db  0x45 ; 'E'
00000000000097de         db  0x0e ; '.'
00000000000097df         db  0x10 ; '.'
00000000000097e0         db  0x8c ; '.'
00000000000097e1         db  0x02 ; '.'
00000000000097e2         db  0x41 ; 'A'
00000000000097e3         db  0x0e ; '.'
00000000000097e4         db  0x18 ; '.'
00000000000097e5         db  0x86 ; '.'
00000000000097e6         db  0x03 ; '.'
00000000000097e7         db  0x41 ; 'A'
00000000000097e8         db  0x0e ; '.'
00000000000097e9         db  0x20 ; ' '
00000000000097ea         db  0x83 ; '.'
00000000000097eb         db  0x04 ; '.'
00000000000097ec         db  0x02 ; '.'
00000000000097ed         db  0x58 ; 'X'
00000000000097ee         db  0x0a ; '.'
00000000000097ef         db  0x0e ; '.'
00000000000097f0         db  0x18 ; '.'
00000000000097f1         db  0x41 ; 'A'
00000000000097f2         db  0x0e ; '.'
00000000000097f3         db  0x10 ; '.'
00000000000097f4         db  0x42 ; 'B'
00000000000097f5         db  0x0e ; '.'
00000000000097f6         db  0x08 ; '.'
00000000000097f7         db  0x46 ; 'F'
00000000000097f8         db  0x0b ; '.'
00000000000097f9         db  0x63 ; 'c'
00000000000097fa         db  0x0e ; '.'
00000000000097fb         db  0x18 ; '.'
00000000000097fc         db  0x41 ; 'A'
00000000000097fd         db  0x0e ; '.'
00000000000097fe         db  0x10 ; '.'
00000000000097ff         db  0x42 ; 'B'
0000000000009800         db  0x0e ; '.'
0000000000009801         db  0x08 ; '.'
0000000000009802         db  0x00 ; '.'
0000000000009803         db  0x00 ; '.'
0000000000009804         dd         0x00000048                                  ; Length of the record
0000000000009808         dd         0x00000cc8                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
000000000000980c         db         0xb4, 0xda, 2 dup (0xff)                    ; begin 0x72c0
0000000000009810         db         0x36, 0x01, 2 dup (0x00)                    ; length 0x136 (end at 0x73f6)
0000000000009814         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009815         db  0x42 ; 'B'
0000000000009816         db  0x0e ; '.'
0000000000009817         db  0x10 ; '.'
0000000000009818         db  0x8f ; '.'
0000000000009819         db  0x02 ; '.'
000000000000981a         db  0x42 ; 'B'
000000000000981b         db  0x0e ; '.'
000000000000981c         db  0x18 ; '.'
000000000000981d         db  0x8e ; '.'
000000000000981e         db  0x03 ; '.'
000000000000981f         db  0x47 ; 'G'
0000000000009820         db  0x0e ; '.'
0000000000009821         db  0x20 ; ' '
0000000000009822         db  0x8d ; '.'
0000000000009823         db  0x04 ; '.'
0000000000009824         db  0x42 ; 'B'
0000000000009825         db  0x0e ; '.'
0000000000009826         db  0x28 ; '('
0000000000009827         db  0x8c ; '.'
0000000000009828         db  0x05 ; '.'
0000000000009829         db  0x41 ; 'A'
000000000000982a         db  0x0e ; '.'
000000000000982b         db  0x30 ; '0'
000000000000982c         db  0x86 ; '.'
000000000000982d         db  0x06 ; '.'
000000000000982e         db  0x41 ; 'A'
000000000000982f         db  0x0e ; '.'
0000000000009830         db  0x38 ; '8'
0000000000009831         db  0x83 ; '.'
0000000000009832         db  0x07 ; '.'
0000000000009833         db  0x44 ; 'D'
0000000000009834         db  0x0e ; '.'
0000000000009835         db  0x40 ; '@'
0000000000009836         db  0x02 ; '.'
0000000000009837         db  0xa1 ; '.'
0000000000009838         db  0x0a ; '.'
0000000000009839         db  0x0e ; '.'
000000000000983a         db  0x38 ; '8'
000000000000983b         db  0x41 ; 'A'
000000000000983c         db  0x0e ; '.'
000000000000983d         db  0x30 ; '0'
000000000000983e         db  0x41 ; 'A'
000000000000983f         db  0x0e ; '.'
0000000000009840         db  0x28 ; '('
0000000000009841         db  0x42 ; 'B'
0000000000009842         db  0x0e ; '.'
0000000000009843         db  0x20 ; ' '
0000000000009844         db  0x42 ; 'B'
0000000000009845         db  0x0e ; '.'
0000000000009846         db  0x18 ; '.'
0000000000009847         db  0x42 ; 'B'
0000000000009848         db  0x0e ; '.'
0000000000009849         db  0x10 ; '.'
000000000000984a         db  0x42 ; 'B'
000000000000984b         db  0x0e ; '.'
000000000000984c         db  0x08 ; '.'
000000000000984d         db  0x42 ; 'B'
000000000000984e         db  0x0b ; '.'
000000000000984f         db  0x00 ; '.'
0000000000009850         dd         0x00000050                                  ; Length of the record
0000000000009854         dd         0x00000d14                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009858         db         0xa8, 0xdb, 2 dup (0xff)                    ; begin 0x7400
000000000000985c         db         0xdf, 3 dup (0x00)                          ; length 0xdf (end at 0x74df)
0000000000009860         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009861         db  0x42 ; 'B'
0000000000009862         db  0x0e ; '.'
0000000000009863         db  0x10 ; '.'
0000000000009864         db  0x8c ; '.'
0000000000009865         db  0x02 ; '.'
0000000000009866         db  0x41 ; 'A'
0000000000009867         db  0x0e ; '.'
0000000000009868         db  0x18 ; '.'
0000000000009869         db  0x86 ; '.'
000000000000986a         db  0x03 ; '.'
000000000000986b         db  0x44 ; 'D'
000000000000986c         db  0x0e ; '.'
000000000000986d         db  0x20 ; ' '
000000000000986e         db  0x83 ; '.'
000000000000986f         db  0x04 ; '.'
0000000000009870         db  0x4b ; 'K'
0000000000009871         db  0x0e ; '.'
0000000000009872         db  0x30 ; '0'
0000000000009873         db  0x02 ; '.'
0000000000009874         db  0x6f ; 'o'
0000000000009875         db  0x0a ; '.'
0000000000009876         db  0x0e ; '.'
0000000000009877         db  0x20 ; ' '
0000000000009878         db  0x44 ; 'D'
0000000000009879         db  0x0e ; '.'
000000000000987a         db  0x18 ; '.'
000000000000987b         db  0x41 ; 'A'
000000000000987c         db  0x0e ; '.'
000000000000987d         db  0x10 ; '.'
000000000000987e         db  0x42 ; 'B'
000000000000987f         db  0x0e ; '.'
0000000000009880         db  0x08 ; '.'
0000000000009881         db  0x48 ; 'H'
0000000000009882         db  0x0b ; '.'
0000000000009883         db  0x5a ; 'Z'
0000000000009884         db  0x0a ; '.'
0000000000009885         db  0x0e ; '.'
0000000000009886         db  0x20 ; ' '
0000000000009887         db  0x44 ; 'D'
0000000000009888         db  0x0e ; '.'
0000000000009889         db  0x18 ; '.'
000000000000988a         db  0x41 ; 'A'
000000000000988b         db  0x0e ; '.'
000000000000988c         db  0x10 ; '.'
000000000000988d         db  0x42 ; 'B'
000000000000988e         db  0x0e ; '.'
000000000000988f         db  0x08 ; '.'
0000000000009890         db  0x47 ; 'G'
0000000000009891         db  0x0b ; '.'
0000000000009892         db  0x54 ; 'T'
0000000000009893         db  0x0a ; '.'
0000000000009894         db  0x0e ; '.'
0000000000009895         db  0x20 ; ' '
0000000000009896         db  0x44 ; 'D'
0000000000009897         db  0x0e ; '.'
0000000000009898         db  0x18 ; '.'
0000000000009899         db  0x41 ; 'A'
000000000000989a         db  0x0e ; '.'
000000000000989b         db  0x10 ; '.'
000000000000989c         db  0x42 ; 'B'
000000000000989d         db  0x0e ; '.'
000000000000989e         db  0x08 ; '.'
000000000000989f         db  0x45 ; 'E'
00000000000098a0         db  0x0b ; '.'
00000000000098a1         db  0x00 ; '.'
00000000000098a2         db  0x00 ; '.'
00000000000098a3         db  0x00 ; '.'
00000000000098a4         dd         0x00000010                                  ; Length of the record
00000000000098a8         dd         0x00000d68                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
00000000000098ac         db         0x34, 0xdc, 2 dup (0xff)                    ; begin 0x74e0
00000000000098b0         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x74ec)
00000000000098b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000098b5         align      8
00000000000098b8         dd         0x0000005c                                  ; Length of the record
00000000000098bc         dd         0x00000d7c                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
00000000000098c0         db         0x30, 0xdc, 2 dup (0xff)                    ; begin 0x74f0
00000000000098c4         db         0xa3, 3 dup (0x00)                          ; length 0xa3 (end at 0x7593)
00000000000098c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000098c9         db  0x42 ; 'B'
00000000000098ca         db  0x0e ; '.'
00000000000098cb         db  0x10 ; '.'
00000000000098cc         db  0x8d ; '.'
00000000000098cd         db  0x02 ; '.'
00000000000098ce         db  0x42 ; 'B'
00000000000098cf         db  0x0e ; '.'
00000000000098d0         db  0x18 ; '.'
00000000000098d1         db  0x8c ; '.'
00000000000098d2         db  0x03 ; '.'
00000000000098d3         db  0x41 ; 'A'
00000000000098d4         db  0x0e ; '.'
00000000000098d5         db  0x20 ; ' '
00000000000098d6         db  0x86 ; '.'
00000000000098d7         db  0x04 ; '.'
00000000000098d8         db  0x41 ; 'A'
00000000000098d9         db  0x0e ; '.'
00000000000098da         db  0x28 ; '('
00000000000098db         db  0x83 ; '.'
00000000000098dc         db  0x05 ; '.'
00000000000098dd         db  0x47 ; 'G'
00000000000098de         db  0x0e ; '.'
00000000000098df         db  0x30 ; '0'
00000000000098e0         db  0x02 ; '.'
00000000000098e1         db  0x41 ; 'A'
00000000000098e2         db  0x0a ; '.'
00000000000098e3         db  0x0e ; '.'
00000000000098e4         db  0x28 ; '('
00000000000098e5         db  0x44 ; 'D'
00000000000098e6         db  0x0e ; '.'
00000000000098e7         db  0x20 ; ' '
00000000000098e8         db  0x41 ; 'A'
00000000000098e9         db  0x0e ; '.'
00000000000098ea         db  0x18 ; '.'
00000000000098eb         db  0x42 ; 'B'
00000000000098ec         db  0x0e ; '.'
00000000000098ed         db  0x10 ; '.'
00000000000098ee         db  0x42 ; 'B'
00000000000098ef         db  0x0e ; '.'
00000000000098f0         db  0x08 ; '.'
00000000000098f1         db  0x49 ; 'I'
00000000000098f2         db  0x0b ; '.'
00000000000098f3         db  0x52 ; 'R'
00000000000098f4         db  0x0a ; '.'
00000000000098f5         db  0x0e ; '.'
00000000000098f6         db  0x28 ; '('
00000000000098f7         db  0x43 ; 'C'
00000000000098f8         db  0x0e ; '.'
00000000000098f9         db  0x20 ; ' '
00000000000098fa         db  0x41 ; 'A'
00000000000098fb         db  0x0e ; '.'
00000000000098fc         db  0x18 ; '.'
00000000000098fd         db  0x42 ; 'B'
00000000000098fe         db  0x0e ; '.'
00000000000098ff         db  0x10 ; '.'
0000000000009900         db  0x42 ; 'B'
0000000000009901         db  0x0e ; '.'
0000000000009902         db  0x08 ; '.'
0000000000009903         db  0x46 ; 'F'
0000000000009904         db  0x0b ; '.'
0000000000009905         db  0x44 ; 'D'
0000000000009906         db  0x0a ; '.'
0000000000009907         db  0x0e ; '.'
0000000000009908         db  0x28 ; '('
0000000000009909         db  0x47 ; 'G'
000000000000990a         db  0x0e ; '.'
000000000000990b         db  0x20 ; ' '
000000000000990c         db  0x41 ; 'A'
000000000000990d         db  0x0e ; '.'
000000000000990e         db  0x18 ; '.'
000000000000990f         db  0x42 ; 'B'
0000000000009910         db  0x0e ; '.'
0000000000009911         db  0x10 ; '.'
0000000000009912         db  0x42 ; 'B'
0000000000009913         db  0x0e ; '.'
0000000000009914         db  0x08 ; '.'
0000000000009915         db  0x45 ; 'E'
0000000000009916         db  0x0b ; '.'
0000000000009917         db  0x00 ; '.'
0000000000009918         dd         0x00000034                                  ; Length of the record
000000000000991c         dd         0x00000ddc                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009920         db         0x80, 0xdc, 2 dup (0xff)                    ; begin 0x75a0
0000000000009924         db         0x41, 0x01, 2 dup (0x00)                    ; length 0x141 (end at 0x76e1)
0000000000009928         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009929         db  0x42 ; 'B'
000000000000992a         db  0x0e ; '.'
000000000000992b         db  0x10 ; '.'
000000000000992c         db  0x8c ; '.'
000000000000992d         db  0x02 ; '.'
000000000000992e         db  0x41 ; 'A'
000000000000992f         db  0x0e ; '.'
0000000000009930         db  0x18 ; '.'
0000000000009931         db  0x86 ; '.'
0000000000009932         db  0x03 ; '.'
0000000000009933         db  0x41 ; 'A'
0000000000009934         db  0x0e ; '.'
0000000000009935         db  0x20 ; ' '
0000000000009936         db  0x83 ; '.'
0000000000009937         db  0x04 ; '.'
0000000000009938         db  0x47 ; 'G'
0000000000009939         db  0x0e ; '.'
000000000000993a         db  0x70 ; 'p'
000000000000993b         db  0x02 ; '.'
000000000000993c         db  0x8b ; '.'
000000000000993d         db  0x0a ; '.'
000000000000993e         db  0x0e ; '.'
000000000000993f         db  0x20 ; ' '
0000000000009940         db  0x41 ; 'A'
0000000000009941         db  0x0e ; '.'
0000000000009942         db  0x18 ; '.'
0000000000009943         db  0x41 ; 'A'
0000000000009944         db  0x0e ; '.'
0000000000009945         db  0x10 ; '.'
0000000000009946         db  0x42 ; 'B'
0000000000009947         db  0x0e ; '.'
0000000000009948         db  0x08 ; '.'
0000000000009949         db  0x46 ; 'F'
000000000000994a         db  0x0b ; '.'
000000000000994b         db  0x00 ; '.'
000000000000994c         db  0x00 ; '.'
000000000000994d         db  0x00 ; '.'
000000000000994e         db  0x00 ; '.'
000000000000994f         db  0x00 ; '.'
0000000000009950         dd         0x0000004c                                  ; Length of the record
0000000000009954         dd         0x00000e14                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009958         db         0x98, 0xdd, 2 dup (0xff)                    ; begin 0x76f0
000000000000995c         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x776d)
0000000000009960         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009961         db  0x42 ; 'B'
0000000000009962         db  0x0e ; '.'
0000000000009963         db  0x10 ; '.'
0000000000009964         db  0x8c ; '.'
0000000000009965         db  0x02 ; '.'
0000000000009966         db  0x41 ; 'A'
0000000000009967         db  0x0e ; '.'
0000000000009968         db  0x18 ; '.'
0000000000009969         db  0x86 ; '.'
000000000000996a         db  0x03 ; '.'
000000000000996b         db  0x44 ; 'D'
000000000000996c         db  0x0e ; '.'
000000000000996d         db  0x20 ; ' '
000000000000996e         db  0x83 ; '.'
000000000000996f         db  0x04 ; '.'
0000000000009970         db  0x69 ; 'i'
0000000000009971         db  0x0a ; '.'
0000000000009972         db  0x0e ; '.'
0000000000009973         db  0x18 ; '.'
0000000000009974         db  0x41 ; 'A'
0000000000009975         db  0x0e ; '.'
0000000000009976         db  0x10 ; '.'
0000000000009977         db  0x42 ; 'B'
0000000000009978         db  0x0e ; '.'
0000000000009979         db  0x08 ; '.'
000000000000997a         db  0x45 ; 'E'
000000000000997b         db  0x0b ; '.'
000000000000997c         db  0x55 ; 'U'
000000000000997d         db  0x0a ; '.'
000000000000997e         db  0x0e ; '.'
000000000000997f         db  0x18 ; '.'
0000000000009980         db  0x41 ; 'A'
0000000000009981         db  0x0e ; '.'
0000000000009982         db  0x10 ; '.'
0000000000009983         db  0x42 ; 'B'
0000000000009984         db  0x0e ; '.'
0000000000009985         db  0x08 ; '.'
0000000000009986         db  0x48 ; 'H'
0000000000009987         db  0x0b ; '.'
0000000000009988         db  0x41 ; 'A'
0000000000009989         db  0x0a ; '.'
000000000000998a         db  0x0e ; '.'
000000000000998b         db  0x18 ; '.'
000000000000998c         db  0x46 ; 'F'
000000000000998d         db  0x0e ; '.'
000000000000998e         db  0x10 ; '.'
000000000000998f         db  0x42 ; 'B'
0000000000009990         db  0x0e ; '.'
0000000000009991         db  0x08 ; '.'
0000000000009992         db  0x47 ; 'G'
0000000000009993         db  0x0b ; '.'
0000000000009994         db  0x49 ; 'I'
0000000000009995         db  0x0e ; '.'
0000000000009996         db  0x18 ; '.'
0000000000009997         db  0x41 ; 'A'
0000000000009998         db  0x0e ; '.'
0000000000009999         db  0x10 ; '.'
000000000000999a         db  0x42 ; 'B'
000000000000999b         db  0x0e ; '.'
000000000000999c         db  0x08 ; '.'
000000000000999d         db  0x00 ; '.'
000000000000999e         db  0x00 ; '.'
000000000000999f         db  0x00 ; '.'
00000000000099a0         dd         0x0000001c                                  ; Length of the record
00000000000099a4         dd         0x00000e64                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
00000000000099a8         db         0xc8, 0xdd, 2 dup (0xff)                    ; begin 0x7770
00000000000099ac         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x77d0)
00000000000099b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000099b1         db  0x44 ; 'D'
00000000000099b2         db  0x0e ; '.'
00000000000099b3         db  0x10 ; '.'
00000000000099b4         db  0x75 ; 'u'
00000000000099b5         db  0x0a ; '.'
00000000000099b6         db  0x0e ; '.'
00000000000099b7         db  0x08 ; '.'
00000000000099b8         db  0x47 ; 'G'
00000000000099b9         db  0x0b ; '.'
00000000000099ba         db  0x5f ; '_'
00000000000099bb         db  0x0e ; '.'
00000000000099bc         db  0x08 ; '.'
00000000000099bd         db  0x00 ; '.'
00000000000099be         db  0x00 ; '.'
00000000000099bf         db  0x00 ; '.'
00000000000099c0         dd         0x0000001c                                  ; Length of the record
00000000000099c4         dd         0x00000e84                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
00000000000099c8         db         0x08, 0xde, 2 dup (0xff)                    ; begin 0x77d0
00000000000099cc         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x780c)
00000000000099d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000099d1         db  0x44 ; 'D'
00000000000099d2         db  0x0e ; '.'
00000000000099d3         db  0x10 ; '.'
00000000000099d4         db  0x61 ; 'a'
00000000000099d5         db  0x0a ; '.'
00000000000099d6         db  0x0e ; '.'
00000000000099d7         db  0x08 ; '.'
00000000000099d8         db  0x4b ; 'K'
00000000000099d9         db  0x0b ; '.'
00000000000099da         db  0x4b ; 'K'
00000000000099db         db  0x0e ; '.'
00000000000099dc         db  0x08 ; '.'
00000000000099dd         db  0x00 ; '.'
00000000000099de         db  0x00 ; '.'
00000000000099df         db  0x00 ; '.'
00000000000099e0         dd         0x00000044                                  ; Length of the record
00000000000099e4         dd         0x00000ea4                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
00000000000099e8         db         0x28, 0xde, 2 dup (0xff)                    ; begin 0x7810
00000000000099ec         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x7875)
00000000000099f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000099f1         db  0x42 ; 'B'
00000000000099f2         db  0x0e ; '.'
00000000000099f3         db  0x10 ; '.'
00000000000099f4         db  0x8f ; '.'
00000000000099f5         db  0x02 ; '.'
00000000000099f6         db  0x42 ; 'B'
00000000000099f7         db  0x0e ; '.'
00000000000099f8         db  0x18 ; '.'
00000000000099f9         db  0x8e ; '.'
00000000000099fa         db  0x03 ; '.'
00000000000099fb         db  0x45 ; 'E'
00000000000099fc         db  0x0e ; '.'
00000000000099fd         db  0x20 ; ' '
00000000000099fe         db  0x8d ; '.'
00000000000099ff         db  0x04 ; '.'
0000000000009a00         db  0x42 ; 'B'
0000000000009a01         db  0x0e ; '.'
0000000000009a02         db  0x28 ; '('
0000000000009a03         db  0x8c ; '.'
0000000000009a04         db  0x05 ; '.'
0000000000009a05         db  0x48 ; 'H'
0000000000009a06         db  0x0e ; '.'
0000000000009a07         db  0x30 ; '0'
0000000000009a08         db  0x86 ; '.'
0000000000009a09         db  0x06 ; '.'
0000000000009a0a         db  0x48 ; 'H'
0000000000009a0b         db  0x0e ; '.'
0000000000009a0c         db  0x38 ; '8'
0000000000009a0d         db  0x83 ; '.'
0000000000009a0e         db  0x07 ; '.'
0000000000009a0f         db  0x4d ; 'M'
0000000000009a10         db  0x0e ; '.'
0000000000009a11         db  0x40 ; '@'
0000000000009a12         db  0x72 ; 'r'
0000000000009a13         db  0x0e ; '.'
0000000000009a14         db  0x38 ; '8'
0000000000009a15         db  0x41 ; 'A'
0000000000009a16         db  0x0e ; '.'
0000000000009a17         db  0x30 ; '0'
0000000000009a18         db  0x41 ; 'A'
0000000000009a19         db  0x0e ; '.'
0000000000009a1a         db  0x28 ; '('
0000000000009a1b         db  0x42 ; 'B'
0000000000009a1c         db  0x0e ; '.'
0000000000009a1d         db  0x20 ; ' '
0000000000009a1e         db  0x42 ; 'B'
0000000000009a1f         db  0x0e ; '.'
0000000000009a20         db  0x18 ; '.'
0000000000009a21         db  0x42 ; 'B'
0000000000009a22         db  0x0e ; '.'
0000000000009a23         db  0x10 ; '.'
0000000000009a24         db  0x42 ; 'B'
0000000000009a25         db  0x0e ; '.'
0000000000009a26         db  0x08 ; '.'
0000000000009a27         db  0x00 ; '.'
0000000000009a28         dd         0x00000014                                  ; Length of the record
0000000000009a2c         dd         0x00000eec                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009a30         db         0x50, 0xde, 2 dup (0xff)                    ; begin 0x7880
0000000000009a34         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x7882)
0000000000009a38         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009a39         align      64
0000000000009a40         dd         0x00000010                                  ; Length of the record
0000000000009a44         dd         0x00000f04                                  ; FDE: parent CIE at 0x8b40 (FDE encoding = 0x1B)
0000000000009a48         db         0x48, 0xde, 2 dup (0xff)                    ; begin 0x7890
0000000000009a4c         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x789e)
0000000000009a50         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009a51         align      8


        ; Segment Segment 3
        ; Range: [0x209af0; 0x20a238[ (1864 bytes)
        ; File offset : [39664; 41088[ (1424 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x209af0; 0x209af8[ (8 bytes)
        ; File offset : [39664; 39672[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
0000000000209af0         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x209af8; 0x209b00[ (8 bytes)
        ; File offset : [39672; 39680[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
0000000000209af8         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x209b00; 0x209bb8[ (184 bytes)
        ; File offset : [39680; 39864[ (184 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     long_options:
0000000000209b00         db  0x82 ; '.'                                         ; DATA XREF=parse_long_options+176, parse_gnu_standard_options_only+124
0000000000209b01         db  0x7f ; '.'
0000000000209b02         db  0x00 ; '.'
0000000000209b03         db  0x00 ; '.'
0000000000209b04         db  0x00 ; '.'
0000000000209b05         db  0x00 ; '.'
0000000000209b06         db  0x00 ; '.'
0000000000209b07         db  0x00 ; '.'
0000000000209b08         db  0x00 ; '.'
0000000000209b09         db  0x00 ; '.'
0000000000209b0a         db  0x00 ; '.'
0000000000209b0b         db  0x00 ; '.'
0000000000209b0c         db  0x00 ; '.'
0000000000209b0d         db  0x00 ; '.'
0000000000209b0e         db  0x00 ; '.'
0000000000209b0f         db  0x00 ; '.'
0000000000209b10         db  0x00 ; '.'
0000000000209b11         db  0x00 ; '.'
0000000000209b12         db  0x00 ; '.'
0000000000209b13         db  0x00 ; '.'
0000000000209b14         db  0x00 ; '.'
0000000000209b15         db  0x00 ; '.'
0000000000209b16         db  0x00 ; '.'
0000000000209b17         db  0x00 ; '.'
0000000000209b18         db  0x68 ; 'h'
0000000000209b19         db  0x00 ; '.'
0000000000209b1a         db  0x00 ; '.'
0000000000209b1b         db  0x00 ; '.'
0000000000209b1c         db  0x00 ; '.'
0000000000209b1d         db  0x00 ; '.'
0000000000209b1e         db  0x00 ; '.'
0000000000209b1f         db  0x00 ; '.'
0000000000209b20         db  0x87 ; '.'
0000000000209b21         db  0x7f ; '.'
0000000000209b22         db  0x00 ; '.'
0000000000209b23         db  0x00 ; '.'
0000000000209b24         db  0x00 ; '.'
0000000000209b25         db  0x00 ; '.'
0000000000209b26         db  0x00 ; '.'
0000000000209b27         db  0x00 ; '.'
0000000000209b28         db  0x00 ; '.'
0000000000209b29         db  0x00 ; '.'
0000000000209b2a         db  0x00 ; '.'
0000000000209b2b         db  0x00 ; '.'
0000000000209b2c         db  0x00 ; '.'
0000000000209b2d         db  0x00 ; '.'
0000000000209b2e         db  0x00 ; '.'
0000000000209b2f         db  0x00 ; '.'
0000000000209b30         db  0x00 ; '.'
0000000000209b31         db  0x00 ; '.'
0000000000209b32         db  0x00 ; '.'
0000000000209b33         db  0x00 ; '.'
0000000000209b34         db  0x00 ; '.'
0000000000209b35         db  0x00 ; '.'
0000000000209b36         db  0x00 ; '.'
0000000000209b37         db  0x00 ; '.'
0000000000209b38         db  0x76 ; 'v'
0000000000209b39         db  0x00 ; '.'
0000000000209b3a         db  0x00 ; '.'
0000000000209b3b         db  0x00 ; '.'
0000000000209b3c         db  0x00 ; '.'
0000000000209b3d         db  0x00 ; '.'
0000000000209b3e         db  0x00 ; '.'
0000000000209b3f         db  0x00 ; '.'
0000000000209b40         db  0x00 ; '.'
0000000000209b41         db  0x00 ; '.'
0000000000209b42         db  0x00 ; '.'
0000000000209b43         db  0x00 ; '.'
0000000000209b44         db  0x00 ; '.'
0000000000209b45         db  0x00 ; '.'
0000000000209b46         db  0x00 ; '.'
0000000000209b47         db  0x00 ; '.'
0000000000209b48         db  0x00 ; '.'
0000000000209b49         db  0x00 ; '.'
0000000000209b4a         db  0x00 ; '.'
0000000000209b4b         db  0x00 ; '.'
0000000000209b4c         db  0x00 ; '.'
0000000000209b4d         db  0x00 ; '.'
0000000000209b4e         db  0x00 ; '.'
0000000000209b4f         db  0x00 ; '.'
0000000000209b50         db  0x00 ; '.'
0000000000209b51         db  0x00 ; '.'
0000000000209b52         db  0x00 ; '.'
0000000000209b53         db  0x00 ; '.'
0000000000209b54         db  0x00 ; '.'
0000000000209b55         db  0x00 ; '.'
0000000000209b56         db  0x00 ; '.'
0000000000209b57         db  0x00 ; '.'
0000000000209b58         db  0x00 ; '.'
0000000000209b59         db  0x00 ; '.'
0000000000209b5a         db  0x00 ; '.'
0000000000209b5b         db  0x00 ; '.'
0000000000209b5c         db  0x00 ; '.'
0000000000209b5d         db  0x00 ; '.'
0000000000209b5e         db  0x00 ; '.'
0000000000209b5f         db  0x00 ; '.'
                     quoting_style_args:
0000000000209b60         db  0xe9 ; '.'
0000000000209b61         db  0x7f ; '.'
0000000000209b62         db  0x00 ; '.'
0000000000209b63         db  0x00 ; '.'
0000000000209b64         db  0x00 ; '.'
0000000000209b65         db  0x00 ; '.'
0000000000209b66         db  0x00 ; '.'
0000000000209b67         db  0x00 ; '.'
0000000000209b68         db  0xf1 ; '.'
0000000000209b69         db  0x7f ; '.'
0000000000209b6a         db  0x00 ; '.'
0000000000209b6b         db  0x00 ; '.'
0000000000209b6c         db  0x00 ; '.'
0000000000209b6d         db  0x00 ; '.'
0000000000209b6e         db  0x00 ; '.'
0000000000209b6f         db  0x00 ; '.'
0000000000209b70         db  0xf7 ; '.'
0000000000209b71         db  0x7f ; '.'
0000000000209b72         db  0x00 ; '.'
0000000000209b73         db  0x00 ; '.'
0000000000209b74         db  0x00 ; '.'
0000000000209b75         db  0x00 ; '.'
0000000000209b76         db  0x00 ; '.'
0000000000209b77         db  0x00 ; '.'
0000000000209b78         db  0x04 ; '.'
0000000000209b79         db  0x80 ; '.'
0000000000209b7a         db  0x00 ; '.'
0000000000209b7b         db  0x00 ; '.'
0000000000209b7c         db  0x00 ; '.'
0000000000209b7d         db  0x00 ; '.'
0000000000209b7e         db  0x00 ; '.'
0000000000209b7f         db  0x00 ; '.'
0000000000209b80         db  0x11 ; '.'
0000000000209b81         db  0x80 ; '.'
0000000000209b82         db  0x00 ; '.'
0000000000209b83         db  0x00 ; '.'
0000000000209b84         db  0x00 ; '.'
0000000000209b85         db  0x00 ; '.'
0000000000209b86         db  0x00 ; '.'
0000000000209b87         db  0x00 ; '.'
0000000000209b88         db  0x25 ; '%'
0000000000209b89         db  0x80 ; '.'
0000000000209b8a         db  0x00 ; '.'
0000000000209b8b         db  0x00 ; '.'
0000000000209b8c         db  0x00 ; '.'
0000000000209b8d         db  0x00 ; '.'
0000000000209b8e         db  0x00 ; '.'
0000000000209b8f         db  0x00 ; '.'
0000000000209b90         db  0x27 ; '''
0000000000209b91         db  0x80 ; '.'
0000000000209b92         db  0x00 ; '.'
0000000000209b93         db  0x00 ; '.'
0000000000209b94         db  0x00 ; '.'
0000000000209b95         db  0x00 ; '.'
0000000000209b96         db  0x00 ; '.'
0000000000209b97         db  0x00 ; '.'
0000000000209b98         db  0x0a ; '.'
0000000000209b99         db  0x80 ; '.'
0000000000209b9a         db  0x00 ; '.'
0000000000209b9b         db  0x00 ; '.'
0000000000209b9c         db  0x00 ; '.'
0000000000209b9d         db  0x00 ; '.'
0000000000209b9e         db  0x00 ; '.'
0000000000209b9f         db  0x00 ; '.'
0000000000209ba0         db  0x72 ; 'r'
0000000000209ba1         db  0x7a ; 'z'
0000000000209ba2         db  0x00 ; '.'
0000000000209ba3         db  0x00 ; '.'
0000000000209ba4         db  0x00 ; '.'
0000000000209ba5         db  0x00 ; '.'
0000000000209ba6         db  0x00 ; '.'
0000000000209ba7         db  0x00 ; '.'
0000000000209ba8         db  0x2f ; '/'
0000000000209ba9         db  0x80 ; '.'
0000000000209baa         db  0x00 ; '.'
0000000000209bab         db  0x00 ; '.'
0000000000209bac         db  0x00 ; '.'
0000000000209bad         db  0x00 ; '.'
0000000000209bae         db  0x00 ; '.'
0000000000209baf         db  0x00 ; '.'
0000000000209bb0         db  0x00 ; '.'
0000000000209bb1         db  0x00 ; '.'
0000000000209bb2         db  0x00 ; '.'
0000000000209bb3         db  0x00 ; '.'
0000000000209bb4         db  0x00 ; '.'
0000000000209bb5         db  0x00 ; '.'
0000000000209bb6         db  0x00 ; '.'
0000000000209bb7         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x209bb8; 0x209da8[ (496 bytes)
        ; File offset : [39864; 40360[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000209bb8         db  0x01 ; '.'
0000000000209bb9         db  0x00 ; '.'
0000000000209bba         db  0x00 ; '.'
0000000000209bbb         db  0x00 ; '.'
0000000000209bbc         db  0x00 ; '.'
0000000000209bbd         db  0x00 ; '.'
0000000000209bbe         db  0x00 ; '.'
0000000000209bbf         db  0x00 ; '.'
0000000000209bc0         db  0x01 ; '.'
0000000000209bc1         db  0x00 ; '.'
0000000000209bc2         db  0x00 ; '.'
0000000000209bc3         db  0x00 ; '.'
0000000000209bc4         db  0x00 ; '.'
0000000000209bc5         db  0x00 ; '.'
0000000000209bc6         db  0x00 ; '.'
0000000000209bc7         db  0x00 ; '.'
0000000000209bc8         db  0x0c ; '.'
0000000000209bc9         db  0x00 ; '.'
0000000000209bca         db  0x00 ; '.'
0000000000209bcb         db  0x00 ; '.'
0000000000209bcc         db  0x00 ; '.'
0000000000209bcd         db  0x00 ; '.'
0000000000209bce         db  0x00 ; '.'
0000000000209bcf         db  0x00 ; '.'
0000000000209bd0         db  0xf8 ; '.'
0000000000209bd1         db  0x17 ; '.'
0000000000209bd2         db  0x00 ; '.'
0000000000209bd3         db  0x00 ; '.'
0000000000209bd4         db  0x00 ; '.'
0000000000209bd5         db  0x00 ; '.'
0000000000209bd6         db  0x00 ; '.'
0000000000209bd7         db  0x00 ; '.'
0000000000209bd8         db  0x0d ; '.'
0000000000209bd9         db  0x00 ; '.'
0000000000209bda         db  0x00 ; '.'
0000000000209bdb         db  0x00 ; '.'
0000000000209bdc         db  0x00 ; '.'
0000000000209bdd         db  0x00 ; '.'
0000000000209bde         db  0x00 ; '.'
0000000000209bdf         db  0x00 ; '.'
0000000000209be0         db  0xa0 ; '.'
0000000000209be1         db  0x78 ; 'x'
0000000000209be2         db  0x00 ; '.'
0000000000209be3         db  0x00 ; '.'
0000000000209be4         db  0x00 ; '.'
0000000000209be5         db  0x00 ; '.'
0000000000209be6         db  0x00 ; '.'
0000000000209be7         db  0x00 ; '.'
0000000000209be8         db  0x19 ; '.'
0000000000209be9         db  0x00 ; '.'
0000000000209bea         db  0x00 ; '.'
0000000000209beb         db  0x00 ; '.'
0000000000209bec         db  0x00 ; '.'
0000000000209bed         db  0x00 ; '.'
0000000000209bee         db  0x00 ; '.'
0000000000209bef         db  0x00 ; '.'
0000000000209bf0         db  0xf0 ; '.'
0000000000209bf1         db  0x9a ; '.'
0000000000209bf2         db  0x20 ; ' '
0000000000209bf3         db  0x00 ; '.'
0000000000209bf4         db  0x00 ; '.'
0000000000209bf5         db  0x00 ; '.'
0000000000209bf6         db  0x00 ; '.'
0000000000209bf7         db  0x00 ; '.'
0000000000209bf8         db  0x1b ; '.'
0000000000209bf9         db  0x00 ; '.'
0000000000209bfa         db  0x00 ; '.'
0000000000209bfb         db  0x00 ; '.'
0000000000209bfc         db  0x00 ; '.'
0000000000209bfd         db  0x00 ; '.'
0000000000209bfe         db  0x00 ; '.'
0000000000209bff         db  0x00 ; '.'
0000000000209c00         db  0x08 ; '.'
0000000000209c01         db  0x00 ; '.'
0000000000209c02         db  0x00 ; '.'
0000000000209c03         db  0x00 ; '.'
0000000000209c04         db  0x00 ; '.'
0000000000209c05         db  0x00 ; '.'
0000000000209c06         db  0x00 ; '.'
0000000000209c07         db  0x00 ; '.'
0000000000209c08         db  0x1a ; '.'
0000000000209c09         db  0x00 ; '.'
0000000000209c0a         db  0x00 ; '.'
0000000000209c0b         db  0x00 ; '.'
0000000000209c0c         db  0x00 ; '.'
0000000000209c0d         db  0x00 ; '.'
0000000000209c0e         db  0x00 ; '.'
0000000000209c0f         db  0x00 ; '.'
0000000000209c10         db  0xf8 ; '.'
0000000000209c11         db  0x9a ; '.'
0000000000209c12         db  0x20 ; ' '
0000000000209c13         db  0x00 ; '.'
0000000000209c14         db  0x00 ; '.'
0000000000209c15         db  0x00 ; '.'
0000000000209c16         db  0x00 ; '.'
0000000000209c17         db  0x00 ; '.'
0000000000209c18         db  0x1c ; '.'
0000000000209c19         db  0x00 ; '.'
0000000000209c1a         db  0x00 ; '.'
0000000000209c1b         db  0x00 ; '.'
0000000000209c1c         db  0x00 ; '.'
0000000000209c1d         db  0x00 ; '.'
0000000000209c1e         db  0x00 ; '.'
0000000000209c1f         db  0x00 ; '.'
0000000000209c20         db  0x08 ; '.'
0000000000209c21         db  0x00 ; '.'
0000000000209c22         db  0x00 ; '.'
0000000000209c23         db  0x00 ; '.'
0000000000209c24         db  0x00 ; '.'
0000000000209c25         db  0x00 ; '.'
0000000000209c26         db  0x00 ; '.'
0000000000209c27         db  0x00 ; '.'
0000000000209c28         db  0xf5 ; '.'
0000000000209c29         db  0xfe ; '.'
0000000000209c2a         db  0xff ; '.'
0000000000209c2b         db  0x6f ; 'o'
0000000000209c2c         db  0x00 ; '.'
0000000000209c2d         db  0x00 ; '.'
0000000000209c2e         db  0x00 ; '.'
0000000000209c2f         db  0x00 ; '.'
0000000000209c30         db  0x98 ; '.'
0000000000209c31         db  0x02 ; '.'
0000000000209c32         db  0x00 ; '.'
0000000000209c33         db  0x00 ; '.'
0000000000209c34         db  0x00 ; '.'
0000000000209c35         db  0x00 ; '.'
0000000000209c36         db  0x00 ; '.'
0000000000209c37         db  0x00 ; '.'
0000000000209c38         db  0x05 ; '.'
0000000000209c39         db  0x00 ; '.'
0000000000209c3a         db  0x00 ; '.'
0000000000209c3b         db  0x00 ; '.'
0000000000209c3c         db  0x00 ; '.'
0000000000209c3d         db  0x00 ; '.'
0000000000209c3e         db  0x00 ; '.'
0000000000209c3f         db  0x00 ; '.'
0000000000209c40         db  0x78 ; 'x'
0000000000209c41         db  0x0a ; '.'
0000000000209c42         db  0x00 ; '.'
0000000000209c43         db  0x00 ; '.'
0000000000209c44         db  0x00 ; '.'
0000000000209c45         db  0x00 ; '.'
0000000000209c46         db  0x00 ; '.'
0000000000209c47         db  0x00 ; '.'
0000000000209c48         db  0x06 ; '.'
0000000000209c49         db  0x00 ; '.'
0000000000209c4a         db  0x00 ; '.'
0000000000209c4b         db  0x00 ; '.'
0000000000209c4c         db  0x00 ; '.'
0000000000209c4d         db  0x00 ; '.'
0000000000209c4e         db  0x00 ; '.'
0000000000209c4f         db  0x00 ; '.'
0000000000209c50         db  0xe0 ; '.'
0000000000209c51         db  0x02 ; '.'
0000000000209c52         db  0x00 ; '.'
0000000000209c53         db  0x00 ; '.'
0000000000209c54         db  0x00 ; '.'
0000000000209c55         db  0x00 ; '.'
0000000000209c56         db  0x00 ; '.'
0000000000209c57         db  0x00 ; '.'
0000000000209c58         db  0x0a ; '.'
0000000000209c59         db  0x00 ; '.'
0000000000209c5a         db  0x00 ; '.'
0000000000209c5b         db  0x00 ; '.'
0000000000209c5c         db  0x00 ; '.'
0000000000209c5d         db  0x00 ; '.'
0000000000209c5e         db  0x00 ; '.'
0000000000209c5f         db  0x00 ; '.'
0000000000209c60         db  0x7e ; '~'
0000000000209c61         db  0x03 ; '.'
0000000000209c62         db  0x00 ; '.'
0000000000209c63         db  0x00 ; '.'
0000000000209c64         db  0x00 ; '.'
0000000000209c65         db  0x00 ; '.'
0000000000209c66         db  0x00 ; '.'
0000000000209c67         db  0x00 ; '.'
0000000000209c68         db  0x0b ; '.'
0000000000209c69         db  0x00 ; '.'
0000000000209c6a         db  0x00 ; '.'
0000000000209c6b         db  0x00 ; '.'
0000000000209c6c         db  0x00 ; '.'
0000000000209c6d         db  0x00 ; '.'
0000000000209c6e         db  0x00 ; '.'
0000000000209c6f         db  0x00 ; '.'
0000000000209c70         db  0x18 ; '.'
0000000000209c71         db  0x00 ; '.'
0000000000209c72         db  0x00 ; '.'
0000000000209c73         db  0x00 ; '.'
0000000000209c74         db  0x00 ; '.'
0000000000209c75         db  0x00 ; '.'
0000000000209c76         db  0x00 ; '.'
0000000000209c77         db  0x00 ; '.'
0000000000209c78         db  0x15 ; '.'
0000000000209c79         db  0x00 ; '.'
0000000000209c7a         db  0x00 ; '.'
0000000000209c7b         db  0x00 ; '.'
0000000000209c7c         db  0x00 ; '.'
0000000000209c7d         db  0x00 ; '.'
0000000000209c7e         db  0x00 ; '.'
0000000000209c7f         db  0x00 ; '.'
0000000000209c80         db  0x00 ; '.'
0000000000209c81         db  0x00 ; '.'
0000000000209c82         db  0x00 ; '.'
0000000000209c83         db  0x00 ; '.'
0000000000209c84         db  0x00 ; '.'
0000000000209c85         db  0x00 ; '.'
0000000000209c86         db  0x00 ; '.'
0000000000209c87         db  0x00 ; '.'
0000000000209c88         db  0x03 ; '.'
0000000000209c89         db  0x00 ; '.'
0000000000209c8a         db  0x00 ; '.'
0000000000209c8b         db  0x00 ; '.'
0000000000209c8c         db  0x00 ; '.'
0000000000209c8d         db  0x00 ; '.'
0000000000209c8e         db  0x00 ; '.'
0000000000209c8f         db  0x00 ; '.'
0000000000209c90         db  0xa8 ; '.'
0000000000209c91         db  0x9d ; '.'
0000000000209c92         db  0x20 ; ' '
0000000000209c93         db  0x00 ; '.'
0000000000209c94         db  0x00 ; '.'
0000000000209c95         db  0x00 ; '.'
0000000000209c96         db  0x00 ; '.'
0000000000209c97         db  0x00 ; '.'
0000000000209c98         db  0x02 ; '.'
0000000000209c99         db  0x00 ; '.'
0000000000209c9a         db  0x00 ; '.'
0000000000209c9b         db  0x00 ; '.'
0000000000209c9c         db  0x00 ; '.'
0000000000209c9d         db  0x00 ; '.'
0000000000209c9e         db  0x00 ; '.'
0000000000209c9f         db  0x00 ; '.'
0000000000209ca0         db  0x48 ; 'H'
0000000000209ca1         db  0x06 ; '.'
0000000000209ca2         db  0x00 ; '.'
0000000000209ca3         db  0x00 ; '.'
0000000000209ca4         db  0x00 ; '.'
0000000000209ca5         db  0x00 ; '.'
0000000000209ca6         db  0x00 ; '.'
0000000000209ca7         db  0x00 ; '.'
0000000000209ca8         db  0x14 ; '.'
0000000000209ca9         db  0x00 ; '.'
0000000000209caa         db  0x00 ; '.'
0000000000209cab         db  0x00 ; '.'
0000000000209cac         db  0x00 ; '.'
0000000000209cad         db  0x00 ; '.'
0000000000209cae         db  0x00 ; '.'
0000000000209caf         db  0x00 ; '.'
0000000000209cb0         db  0x07 ; '.'
0000000000209cb1         db  0x00 ; '.'
0000000000209cb2         db  0x00 ; '.'
0000000000209cb3         db  0x00 ; '.'
0000000000209cb4         db  0x00 ; '.'
0000000000209cb5         db  0x00 ; '.'
0000000000209cb6         db  0x00 ; '.'
0000000000209cb7         db  0x00 ; '.'
0000000000209cb8         db  0x17 ; '.'
0000000000209cb9         db  0x00 ; '.'
0000000000209cba         db  0x00 ; '.'
0000000000209cbb         db  0x00 ; '.'
0000000000209cbc         db  0x00 ; '.'
0000000000209cbd         db  0x00 ; '.'
0000000000209cbe         db  0x00 ; '.'
0000000000209cbf         db  0x00 ; '.'
0000000000209cc0         db  0xb0 ; '.'
0000000000209cc1         db  0x11 ; '.'
0000000000209cc2         db  0x00 ; '.'
0000000000209cc3         db  0x00 ; '.'
0000000000209cc4         db  0x00 ; '.'
0000000000209cc5         db  0x00 ; '.'
0000000000209cc6         db  0x00 ; '.'
0000000000209cc7         db  0x00 ; '.'
0000000000209cc8         db  0x07 ; '.'
0000000000209cc9         db  0x00 ; '.'
0000000000209cca         db  0x00 ; '.'
0000000000209ccb         db  0x00 ; '.'
0000000000209ccc         db  0x00 ; '.'
0000000000209ccd         db  0x00 ; '.'
0000000000209cce         db  0x00 ; '.'
0000000000209ccf         db  0x00 ; '.'
0000000000209cd0         db  0xf8 ; '.'
0000000000209cd1         db  0x0e ; '.'
0000000000209cd2         db  0x00 ; '.'
0000000000209cd3         db  0x00 ; '.'
0000000000209cd4         db  0x00 ; '.'
0000000000209cd5         db  0x00 ; '.'
0000000000209cd6         db  0x00 ; '.'
0000000000209cd7         db  0x00 ; '.'
0000000000209cd8         db  0x08 ; '.'
0000000000209cd9         db  0x00 ; '.'
0000000000209cda         db  0x00 ; '.'
0000000000209cdb         db  0x00 ; '.'
0000000000209cdc         db  0x00 ; '.'
0000000000209cdd         db  0x00 ; '.'
0000000000209cde         db  0x00 ; '.'
0000000000209cdf         db  0x00 ; '.'
0000000000209ce0         db  0xb8 ; '.'
0000000000209ce1         db  0x02 ; '.'
0000000000209ce2         db  0x00 ; '.'
0000000000209ce3         db  0x00 ; '.'
0000000000209ce4         db  0x00 ; '.'
0000000000209ce5         db  0x00 ; '.'
0000000000209ce6         db  0x00 ; '.'
0000000000209ce7         db  0x00 ; '.'
0000000000209ce8         db  0x09 ; '.'
0000000000209ce9         db  0x00 ; '.'
0000000000209cea         db  0x00 ; '.'
0000000000209ceb         db  0x00 ; '.'
0000000000209cec         db  0x00 ; '.'
0000000000209ced         db  0x00 ; '.'
0000000000209cee         db  0x00 ; '.'
0000000000209cef         db  0x00 ; '.'
0000000000209cf0         db  0x18 ; '.'
0000000000209cf1         db  0x00 ; '.'
0000000000209cf2         db  0x00 ; '.'
0000000000209cf3         db  0x00 ; '.'
0000000000209cf4         db  0x00 ; '.'
0000000000209cf5         db  0x00 ; '.'
0000000000209cf6         db  0x00 ; '.'
0000000000209cf7         db  0x00 ; '.'
0000000000209cf8         db  0x1e ; '.'
0000000000209cf9         db  0x00 ; '.'
0000000000209cfa         db  0x00 ; '.'
0000000000209cfb         db  0x00 ; '.'
0000000000209cfc         db  0x00 ; '.'
0000000000209cfd         db  0x00 ; '.'
0000000000209cfe         db  0x00 ; '.'
0000000000209cff         db  0x00 ; '.'
0000000000209d00         db  0x08 ; '.'
0000000000209d01         db  0x00 ; '.'
0000000000209d02         db  0x00 ; '.'
0000000000209d03         db  0x00 ; '.'
0000000000209d04         db  0x00 ; '.'
0000000000209d05         db  0x00 ; '.'
0000000000209d06         db  0x00 ; '.'
0000000000209d07         db  0x00 ; '.'
0000000000209d08         db  0xfb ; '.'
0000000000209d09         db  0xff ; '.'
0000000000209d0a         db  0xff ; '.'
0000000000209d0b         db  0x6f ; 'o'
0000000000209d0c         db  0x00 ; '.'
0000000000209d0d         db  0x00 ; '.'
0000000000209d0e         db  0x00 ; '.'
0000000000209d0f         db  0x00 ; '.'
0000000000209d10         db  0x01 ; '.'
0000000000209d11         db  0x00 ; '.'
0000000000209d12         db  0x00 ; '.'
0000000000209d13         db  0x08 ; '.'
0000000000209d14         db  0x00 ; '.'
0000000000209d15         db  0x00 ; '.'
0000000000209d16         db  0x00 ; '.'
0000000000209d17         db  0x00 ; '.'
0000000000209d18         db  0xfe ; '.'
0000000000209d19         db  0xff ; '.'
0000000000209d1a         db  0xff ; '.'
0000000000209d1b         db  0x6f ; 'o'
0000000000209d1c         db  0x00 ; '.'
0000000000209d1d         db  0x00 ; '.'
0000000000209d1e         db  0x00 ; '.'
0000000000209d1f         db  0x00 ; '.'
0000000000209d20         db  0x98 ; '.'
0000000000209d21         db  0x0e ; '.'
0000000000209d22         db  0x00 ; '.'
0000000000209d23         db  0x00 ; '.'
0000000000209d24         db  0x00 ; '.'
0000000000209d25         db  0x00 ; '.'
0000000000209d26         db  0x00 ; '.'
0000000000209d27         db  0x00 ; '.'
0000000000209d28         db  0xff ; '.'
0000000000209d29         db  0xff ; '.'
0000000000209d2a         db  0xff ; '.'
0000000000209d2b         db  0x6f ; 'o'
0000000000209d2c         db  0x00 ; '.'
0000000000209d2d         db  0x00 ; '.'
0000000000209d2e         db  0x00 ; '.'
0000000000209d2f         db  0x00 ; '.'
0000000000209d30         db  0x01 ; '.'
0000000000209d31         db  0x00 ; '.'
0000000000209d32         db  0x00 ; '.'
0000000000209d33         db  0x00 ; '.'
0000000000209d34         db  0x00 ; '.'
0000000000209d35         db  0x00 ; '.'
0000000000209d36         db  0x00 ; '.'
0000000000209d37         db  0x00 ; '.'
0000000000209d38         db  0xf0 ; '.'
0000000000209d39         db  0xff ; '.'
0000000000209d3a         db  0xff ; '.'
0000000000209d3b         db  0x6f ; 'o'
0000000000209d3c         db  0x00 ; '.'
0000000000209d3d         db  0x00 ; '.'
0000000000209d3e         db  0x00 ; '.'
0000000000209d3f         db  0x00 ; '.'
0000000000209d40         db  0xf6 ; '.'
0000000000209d41         db  0x0d ; '.'
0000000000209d42         db  0x00 ; '.'
0000000000209d43         db  0x00 ; '.'
0000000000209d44         db  0x00 ; '.'
0000000000209d45         db  0x00 ; '.'
0000000000209d46         db  0x00 ; '.'
0000000000209d47         db  0x00 ; '.'
0000000000209d48         db  0xf9 ; '.'
0000000000209d49         db  0xff ; '.'
0000000000209d4a         db  0xff ; '.'
0000000000209d4b         db  0x6f ; 'o'
0000000000209d4c         db  0x00 ; '.'
0000000000209d4d         db  0x00 ; '.'
0000000000209d4e         db  0x00 ; '.'
0000000000209d4f         db  0x00 ; '.'
0000000000209d50         db  0x12 ; '.'
0000000000209d51         db  0x00 ; '.'
0000000000209d52         db  0x00 ; '.'
0000000000209d53         db  0x00 ; '.'
0000000000209d54         db  0x00 ; '.'
0000000000209d55         db  0x00 ; '.'
0000000000209d56         db  0x00 ; '.'
0000000000209d57         db  0x00 ; '.'
0000000000209d58         db  0x00 ; '.'
0000000000209d59         db  0x00 ; '.'
0000000000209d5a         db  0x00 ; '.'
0000000000209d5b         db  0x00 ; '.'
0000000000209d5c         db  0x00 ; '.'
0000000000209d5d         db  0x00 ; '.'
0000000000209d5e         db  0x00 ; '.'
0000000000209d5f         db  0x00 ; '.'
0000000000209d60         db  0x00 ; '.'
0000000000209d61         db  0x00 ; '.'
0000000000209d62         db  0x00 ; '.'
0000000000209d63         db  0x00 ; '.'
0000000000209d64         db  0x00 ; '.'
0000000000209d65         db  0x00 ; '.'
0000000000209d66         db  0x00 ; '.'
0000000000209d67         db  0x00 ; '.'
0000000000209d68         db  0x00 ; '.'
0000000000209d69         db  0x00 ; '.'
0000000000209d6a         db  0x00 ; '.'
0000000000209d6b         db  0x00 ; '.'
0000000000209d6c         db  0x00 ; '.'
0000000000209d6d         db  0x00 ; '.'
0000000000209d6e         db  0x00 ; '.'
0000000000209d6f         db  0x00 ; '.'
0000000000209d70         db  0x00 ; '.'
0000000000209d71         db  0x00 ; '.'
0000000000209d72         db  0x00 ; '.'
0000000000209d73         db  0x00 ; '.'
0000000000209d74         db  0x00 ; '.'
0000000000209d75         db  0x00 ; '.'
0000000000209d76         db  0x00 ; '.'
0000000000209d77         db  0x00 ; '.'
0000000000209d78         db  0x00 ; '.'
0000000000209d79         db  0x00 ; '.'
0000000000209d7a         db  0x00 ; '.'
0000000000209d7b         db  0x00 ; '.'
0000000000209d7c         db  0x00 ; '.'
0000000000209d7d         db  0x00 ; '.'
0000000000209d7e         db  0x00 ; '.'
0000000000209d7f         db  0x00 ; '.'
0000000000209d80         db  0x00 ; '.'
0000000000209d81         db  0x00 ; '.'
0000000000209d82         db  0x00 ; '.'
0000000000209d83         db  0x00 ; '.'
0000000000209d84         db  0x00 ; '.'
0000000000209d85         db  0x00 ; '.'
0000000000209d86         db  0x00 ; '.'
0000000000209d87         db  0x00 ; '.'
0000000000209d88         db  0x00 ; '.'
0000000000209d89         db  0x00 ; '.'
0000000000209d8a         db  0x00 ; '.'
0000000000209d8b         db  0x00 ; '.'
0000000000209d8c         db  0x00 ; '.'
0000000000209d8d         db  0x00 ; '.'
0000000000209d8e         db  0x00 ; '.'
0000000000209d8f         db  0x00 ; '.'
0000000000209d90         db  0x00 ; '.'
0000000000209d91         db  0x00 ; '.'
0000000000209d92         db  0x00 ; '.'
0000000000209d93         db  0x00 ; '.'
0000000000209d94         db  0x00 ; '.'
0000000000209d95         db  0x00 ; '.'
0000000000209d96         db  0x00 ; '.'
0000000000209d97         db  0x00 ; '.'
0000000000209d98         db  0x00 ; '.'
0000000000209d99         db  0x00 ; '.'
0000000000209d9a         db  0x00 ; '.'
0000000000209d9b         db  0x00 ; '.'
0000000000209d9c         db  0x00 ; '.'
0000000000209d9d         db  0x00 ; '.'
0000000000209d9e         db  0x00 ; '.'
0000000000209d9f         db  0x00 ; '.'
0000000000209da0         db  0x00 ; '.'
0000000000209da1         db  0x00 ; '.'
0000000000209da2         db  0x00 ; '.'
0000000000209da3         db  0x00 ; '.'
0000000000209da4         db  0x00 ; '.'
0000000000209da5         db  0x00 ; '.'
0000000000209da6         db  0x00 ; '.'
0000000000209da7         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x209da8; 0x20a000[ (600 bytes)
        ; File offset : [40360; 40960[ (600 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000209da8         db  0xb8 ; '.'
0000000000209da9         db  0x9b ; '.'
0000000000209daa         db  0x20 ; ' '
0000000000209dab         db  0x00 ; '.'
0000000000209dac         db  0x00 ; '.'
0000000000209dad         db  0x00 ; '.'
0000000000209dae         db  0x00 ; '.'
0000000000209daf         db  0x00 ; '.'
                     qword_209db0:
0000000000209db0         dq         0x0000000000000000                          ; DATA XREF=0x1810
0000000000209db8         db  0x00 ; '.'                                         ; DATA XREF=0x1816
0000000000209db9         db  0x00 ; '.'
0000000000209dba         db  0x00 ; '.'
0000000000209dbb         db  0x00 ; '.'
0000000000209dbc         db  0x00 ; '.'
0000000000209dbd         db  0x00 ; '.'
0000000000209dbe         db  0x00 ; '.'
0000000000209dbf         db  0x00 ; '.'
                     __ctype_toupper_loc@GOT:        // __ctype_toupper_loc
0000000000209dc0         dq         0x000000000020a240                          ; DATA XREF=j___ctype_toupper_loc
                     utmpxname@GOT:        // utmpxname
0000000000209dc8         dq         0x000000000020a248                          ; DATA XREF=j_utmpxname
                     getenv@GOT:        // getenv
0000000000209dd0         dq         0x000000000020a250                          ; DATA XREF=j_getenv
                     free@GOT:        // free
0000000000209dd8         dq         0x000000000020a258                          ; DATA XREF=j_free
                     localtime@GOT:        // localtime
0000000000209de0         dq         0x000000000020a260                          ; DATA XREF=j_localtime
                     abort@GOT:        // abort
0000000000209de8         dq         0x000000000020a268                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000209df0         dq         0x000000000020a270                          ; DATA XREF=j___errno_location
                     strncpy@GOT:        // strncpy
0000000000209df8         dq         0x000000000020a278                          ; DATA XREF=j_strncpy
                     strncmp@GOT:        // strncmp
0000000000209e00         dq         0x000000000020a280                          ; DATA XREF=j_strncmp
                     localtime_r@GOT:        // localtime_r
0000000000209e08         dq         0x000000000020a290                          ; DATA XREF=j_localtime_r
                     _exit@GOT:        // _exit
0000000000209e10         dq         0x000000000020a298                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000209e18         dq         0x000000000020a2a0                          ; DATA XREF=j___fpending
                     setenv@GOT:        // setenv
0000000000209e20         dq         0x000000000020a2a8                          ; DATA XREF=j_setenv
                     textdomain@GOT:        // textdomain
0000000000209e28         dq         0x000000000020a2b0                          ; DATA XREF=j_textdomain
                     endutxent@GOT:        // endutxent
0000000000209e30         dq         0x000000000020a2b8                          ; DATA XREF=j_endutxent
                     strtod_l@GOT:        // strtod_l
0000000000209e38         dq         0x000000000020a2c0                          ; DATA XREF=j_strtod_l
                     fclose@GOT:        // fclose
0000000000209e40         dq         0x000000000020a2c8                          ; DATA XREF=j_fclose
                     getloadavg@GOT:        // getloadavg
0000000000209e48         dq         0x000000000020a2d0                          ; DATA XREF=j_getloadavg
                     bindtextdomain@GOT:        // bindtextdomain
0000000000209e50         dq         0x000000000020a2d8                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
0000000000209e58         dq         0x000000000020a2e0                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000209e60         dq         0x000000000020a2e8                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000209e68         dq         0x000000000020a2f0                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000209e70         dq         0x000000000020a2f8                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
0000000000209e78         dq         0x000000000020a300                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000209e80         dq         0x000000000020a308                          ; DATA XREF=j_mbrtowc
                     newlocale@GOT:        // newlocale
0000000000209e88         dq         0x000000000020a310                          ; DATA XREF=j_newlocale
                     __overflow@GOT:        // __overflow
0000000000209e90         dq         0x000000000020a318                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
0000000000209e98         dq         0x000000000020a320                          ; DATA XREF=j_strrchr
                     gmtime_r@GOT:        // gmtime_r
0000000000209ea0         dq         0x000000000020a328                          ; DATA XREF=j_gmtime_r
                     lseek@GOT:        // lseek
0000000000209ea8         dq         0x000000000020a330                          ; DATA XREF=j_lseek
                     memset@GOT:        // memset
0000000000209eb0         dq         0x000000000020a338                          ; DATA XREF=j_memset
                     fputc@GOT:        // fputc
0000000000209eb8         dq         0x000000000020a340                          ; DATA XREF=j_fputc
                     memcmp@GOT:        // memcmp
0000000000209ec0         dq         0x000000000020a350                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000209ec8         dq         0x000000000020a358                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000209ed0         dq         0x000000000020a360                          ; DATA XREF=j_calloc
                     strcmp@GOT:        // strcmp
0000000000209ed8         dq         0x000000000020a368                          ; DATA XREF=j_strcmp
                     setutxent@GOT:        // setutxent
0000000000209ee0         dq         0x000000000020a370                          ; DATA XREF=j_setutxent
                     memcpy@GOT:        // memcpy
0000000000209ee8         dq         0x000000000020a380                          ; DATA XREF=j_memcpy
                     tzset@GOT:        // tzset
0000000000209ef0         dq         0x000000000020a388                          ; DATA XREF=j_tzset
                     kill@GOT:        // kill
0000000000209ef8         dq         0x000000000020a390                          ; DATA XREF=j_kill
                     time@GOT:        // time
0000000000209f00         dq         0x000000000020a398                          ; DATA XREF=j_time
                     fileno@GOT:        // fileno
0000000000209f08         dq         0x000000000020a3a0                          ; DATA XREF=j_fileno
                     fgets_unlocked@GOT:        // fgets_unlocked
0000000000209f10         dq         0x000000000020a3a8                          ; DATA XREF=j_fgets_unlocked
                     malloc@GOT:        // malloc
0000000000209f18         dq         0x000000000020a3b0                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000209f20         dq         0x000000000020a3b8                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000209f28         dq         0x000000000020a3c0                          ; DATA XREF=j_nl_langinfo
                     mktime@GOT:        // mktime
0000000000209f30         dq         0x000000000020a3c8                          ; DATA XREF=j_mktime
                     __freading@GOT:        // __freading
0000000000209f38         dq         0x000000000020a3d0                          ; DATA XREF=j___freading
                     realloc@GOT:        // realloc
0000000000209f40         dq         0x000000000020a3d8                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
0000000000209f48         dq         0x000000000020a3e0                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000209f50         dq         0x000000000020a3e8                          ; DATA XREF=j___printf_chk
                     timegm@GOT:        // timegm
0000000000209f58         dq         0x000000000020a3f0                          ; DATA XREF=j_timegm
                     strftime@GOT:        // strftime
0000000000209f60         dq         0x000000000020a3f8                          ; DATA XREF=j_strftime
                     getutxent@GOT:        // getutxent
0000000000209f68         dq         0x000000000020a400                          ; DATA XREF=j_getutxent
                     error@GOT:        // error
0000000000209f70         dq         0x000000000020a408                          ; DATA XREF=j_error
                     fseeko@GOT:        // fseeko
0000000000209f78         dq         0x000000000020a410                          ; DATA XREF=j_fseeko
                     fopen@GOT:        // fopen
0000000000209f80         dq         0x000000000020a418                          ; DATA XREF=j_fopen
                     dcngettext@GOT:        // dcngettext
0000000000209f88         dq         0x000000000020a420                          ; DATA XREF=j_dcngettext
                     unsetenv@GOT:        // unsetenv
0000000000209f90         dq         0x000000000020a428                          ; DATA XREF=j_unsetenv
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000209f98         dq         0x000000000020a430                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
0000000000209fa0         dq         0x000000000020a438                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000209fa8         dq         0x000000000020a440                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000209fb0         dq         0x000000000020a448                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000209fb8         dq         0x000000000020a458                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000209fc0         dq         0x000000000020a460                          ; DATA XREF=j_iswprint
                     __ctype_tolower_loc@GOT:        // __ctype_tolower_loc
0000000000209fc8         dq         0x000000000020a470                          ; DATA XREF=j___ctype_tolower_loc
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000209fd0         dq         0x000000000020a478                          ; DATA XREF=j___ctype_b_loc
                     qword_209fd8:
0000000000209fd8         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000209fe0         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000209fe1         db  0x00 ; '.'
0000000000209fe2         db  0x00 ; '.'
0000000000209fe3         db  0x00 ; '.'
0000000000209fe4         db  0x00 ; '.'
0000000000209fe5         db  0x00 ; '.'
0000000000209fe6         db  0x00 ; '.'
0000000000209fe7         db  0x00 ; '.'
                     qword_209fe8:
0000000000209fe8         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_209ff0:
0000000000209ff0         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_209ff8:
0000000000209ff8         dq         0x0000000000000000                          ; DATA XREF=j_qword_209ff8, __do_global_dtors_aux+9


        ; Section .data
        ; Range: [0x20a000; 0x20a080[ (128 bytes)
        ; File offset : [40960; 41088[ (128 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

000000000020a000         align      8
                     __dso_handle:
000000000020a008         dq         0x000000000020a008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     Version:
000000000020a010         dq         0x0000000000007d58                          ; "8.31", DATA XREF=main+90
                     exit_failure:
000000000020a018         dd         0x00000001                                  ; DATA XREF=close_stdout+130, parse_gnu_standard_options_only+256, xalloc_die+23
000000000020a01c         db  0x00 ; '.'
000000000020a01d         db  0x00 ; '.'
000000000020a01e         db  0x00 ; '.'
000000000020a01f         db  0x00 ; '.'
                     quote_quoting_options:
000000000020a020         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
000000000020a021         db  0x00 ; '.'
000000000020a022         db  0x00 ; '.'
000000000020a023         db  0x00 ; '.'
000000000020a024         db  0x00 ; '.'
000000000020a025         db  0x00 ; '.'
000000000020a026         db  0x00 ; '.'
000000000020a027         db  0x00 ; '.'
000000000020a028         db  0x00 ; '.'
000000000020a029         db  0x00 ; '.'
000000000020a02a         db  0x00 ; '.'
000000000020a02b         db  0x00 ; '.'
000000000020a02c         db  0x00 ; '.'
000000000020a02d         db  0x00 ; '.'
000000000020a02e         db  0x00 ; '.'
000000000020a02f         db  0x00 ; '.'
000000000020a030         db  0x00 ; '.'
000000000020a031         db  0x00 ; '.'
000000000020a032         db  0x00 ; '.'
000000000020a033         db  0x00 ; '.'
000000000020a034         db  0x00 ; '.'
000000000020a035         db  0x00 ; '.'
000000000020a036         db  0x00 ; '.'
000000000020a037         db  0x00 ; '.'
000000000020a038         db  0x00 ; '.'
000000000020a039         db  0x00 ; '.'
000000000020a03a         db  0x00 ; '.'
000000000020a03b         db  0x00 ; '.'
000000000020a03c         db  0x00 ; '.'
000000000020a03d         db  0x00 ; '.'
000000000020a03e         db  0x00 ; '.'
000000000020a03f         db  0x00 ; '.'
000000000020a040         db  0x00 ; '.'
000000000020a041         db  0x00 ; '.'
000000000020a042         db  0x00 ; '.'
000000000020a043         db  0x00 ; '.'
000000000020a044         db  0x00 ; '.'
000000000020a045         db  0x00 ; '.'
000000000020a046         db  0x00 ; '.'
000000000020a047         db  0x00 ; '.'
000000000020a048         db  0x00 ; '.'
000000000020a049         db  0x00 ; '.'
000000000020a04a         db  0x00 ; '.'
000000000020a04b         db  0x00 ; '.'
000000000020a04c         db  0x00 ; '.'
000000000020a04d         db  0x00 ; '.'
000000000020a04e         db  0x00 ; '.'
000000000020a04f         db  0x00 ; '.'
000000000020a050         db  0x00 ; '.'
000000000020a051         db  0x00 ; '.'
000000000020a052         db  0x00 ; '.'
000000000020a053         db  0x00 ; '.'
000000000020a054         db  0x00 ; '.'
000000000020a055         db  0x00 ; '.'
000000000020a056         db  0x00 ; '.'
000000000020a057         db  0x00 ; '.'
                     nslots:
000000000020a058         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020a05c         align      32
                     slotvec:
000000000020a060         dq         0x000000000020a070                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
000000000020a068         db  0x00 ; '.'
000000000020a069         db  0x00 ; '.'
000000000020a06a         db  0x00 ; '.'
000000000020a06b         db  0x00 ; '.'
000000000020a06c         db  0x00 ; '.'
000000000020a06d         db  0x00 ; '.'
000000000020a06e         db  0x00 ; '.'
000000000020a06f         db  0x00 ; '.'
                     slotvec0:
000000000020a070         dq         1.26481e-321, 1.05649e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x20a080; 0x20a238[ (440 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
000000000020a080         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
000000000020a081         db  0x00 ; '.'
000000000020a082         db  0x00 ; '.'
000000000020a083         db  0x00 ; '.'
000000000020a084         db  0x00 ; '.'
000000000020a085         db  0x00 ; '.'
000000000020a086         db  0x00 ; '.'
000000000020a087         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
000000000020a088         db  0x00 ; '.'                                         ; DATA XREF=print_uptime+388, print_uptime+723, usage+241, usage+278, usage+872, close_stdout+6, parse_long_options+231, parse_gnu_standard_options_only+186, emit_bug_reporting_address+90
000000000020a089         db  0x00 ; '.'
000000000020a08a         db  0x00 ; '.'
000000000020a08b         db  0x00 ; '.'
000000000020a08c         db  0x00 ; '.'
000000000020a08d         db  0x00 ; '.'
000000000020a08e         db  0x00 ; '.'
000000000020a08f         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
000000000020a090         db  0x00 ; '.'                                         ; DATA XREF=main+156, parse_long_options+141
000000000020a091         db  0x00 ; '.'
000000000020a092         db  0x00 ; '.'
000000000020a093         db  0x00 ; '.'
000000000020a094         db  0x00 ; '.'
000000000020a095         db  0x00 ; '.'
000000000020a096         db  0x00 ; '.'
000000000020a097         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
000000000020a098         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
000000000020a099         db  0x00 ; '.'
000000000020a09a         db  0x00 ; '.'
000000000020a09b         db  0x00 ; '.'
000000000020a09c         db  0x00 ; '.'
000000000020a09d         db  0x00 ; '.'
000000000020a09e         db  0x00 ; '.'
000000000020a09f         db  0x00 ; '.'
                     opterr@@GLIBC_2.2.5:
000000000020a0a0         db  0x00 ; '.'                                         ; DATA XREF=parse_long_options+103, parse_long_options+109, parse_long_options+135, parse_gnu_standard_options_only+138, parse_gnu_standard_options_only+144, parse_gnu_standard_options_only+278
000000000020a0a1         db  0x00 ; '.'
000000000020a0a2         db  0x00 ; '.'
000000000020a0a3         db  0x00 ; '.'
000000000020a0a4         db  0x00 ; '.'
000000000020a0a5         db  0x00 ; '.'
000000000020a0a6         db  0x00 ; '.'
000000000020a0a7         db  0x00 ; '.'
000000000020a0a8         db  0x00 ; '.'
000000000020a0a9         db  0x00 ; '.'
000000000020a0aa         db  0x00 ; '.'
000000000020a0ab         db  0x00 ; '.'
000000000020a0ac         db  0x00 ; '.'
000000000020a0ad         db  0x00 ; '.'
000000000020a0ae         db  0x00 ; '.'
000000000020a0af         db  0x00 ; '.'
000000000020a0b0         db  0x00 ; '.'
000000000020a0b1         db  0x00 ; '.'
000000000020a0b2         db  0x00 ; '.'
000000000020a0b3         db  0x00 ; '.'
000000000020a0b4         db  0x00 ; '.'
000000000020a0b5         db  0x00 ; '.'
000000000020a0b6         db  0x00 ; '.'
000000000020a0b7         db  0x00 ; '.'
000000000020a0b8         db  0x00 ; '.'
000000000020a0b9         db  0x00 ; '.'
000000000020a0ba         db  0x00 ; '.'
000000000020a0bb         db  0x00 ; '.'
000000000020a0bc         db  0x00 ; '.'
000000000020a0bd         db  0x00 ; '.'
000000000020a0be         db  0x00 ; '.'
000000000020a0bf         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
000000000020a0c0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
000000000020a0c1         db  0x00 ; '.'
000000000020a0c2         db  0x00 ; '.'
000000000020a0c3         db  0x00 ; '.'
000000000020a0c4         db  0x00 ; '.'
000000000020a0c5         db  0x00 ; '.'
000000000020a0c6         db  0x00 ; '.'
000000000020a0c7         db  0x00 ; '.'
                     completed.7697:
000000000020a0c8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
000000000020a0c9         db  0x00 ; '.'
000000000020a0ca         db  0x00 ; '.'
000000000020a0cb         db  0x00 ; '.'
000000000020a0cc         db  0x00 ; '.'
000000000020a0cd         db  0x00 ; '.'
000000000020a0ce         db  0x00 ; '.'
000000000020a0cf         db  0x00 ; '.'
                     c_locale_cache:
000000000020a0d0         db  0x00 ; '.'                                         ; DATA XREF=c_strtod+12, c_strtod+24, c_strtod+99
000000000020a0d1         db  0x00 ; '.'
000000000020a0d2         db  0x00 ; '.'
000000000020a0d3         db  0x00 ; '.'
000000000020a0d4         db  0x00 ; '.'
000000000020a0d5         db  0x00 ; '.'
000000000020a0d6         db  0x00 ; '.'
000000000020a0d7         db  0x00 ; '.'
                     ignore_EPIPE:
000000000020a0d8         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
000000000020a0d9         db  0x00 ; '.'
000000000020a0da         db  0x00 ; '.'
000000000020a0db         db  0x00 ; '.'
000000000020a0dc         db  0x00 ; '.'
000000000020a0dd         db  0x00 ; '.'
000000000020a0de         db  0x00 ; '.'
000000000020a0df         db  0x00 ; '.'
                     file_name:
000000000020a0e0         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
000000000020a0e1         db  0x00 ; '.'
000000000020a0e2         db  0x00 ; '.'
000000000020a0e3         db  0x00 ; '.'
000000000020a0e4         db  0x00 ; '.'
000000000020a0e5         db  0x00 ; '.'
000000000020a0e6         db  0x00 ; '.'
000000000020a0e7         db  0x00 ; '.'
                     program_name:
000000000020a0e8         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
000000000020a0e9         db  0x00 ; '.'
000000000020a0ea         db  0x00 ; '.'
000000000020a0eb         db  0x00 ; '.'
000000000020a0ec         db  0x00 ; '.'
000000000020a0ed         db  0x00 ; '.'
000000000020a0ee         db  0x00 ; '.'
000000000020a0ef         db  0x00 ; '.'
000000000020a0f0         db  0x00 ; '.'
000000000020a0f1         db  0x00 ; '.'
000000000020a0f2         db  0x00 ; '.'
000000000020a0f3         db  0x00 ; '.'
000000000020a0f4         db  0x00 ; '.'
000000000020a0f5         db  0x00 ; '.'
000000000020a0f6         db  0x00 ; '.'
000000000020a0f7         db  0x00 ; '.'
000000000020a0f8         db  0x00 ; '.'
000000000020a0f9         db  0x00 ; '.'
000000000020a0fa         db  0x00 ; '.'
000000000020a0fb         db  0x00 ; '.'
000000000020a0fc         db  0x00 ; '.'
000000000020a0fd         db  0x00 ; '.'
000000000020a0fe         db  0x00 ; '.'
000000000020a0ff         db  0x00 ; '.'
                     slot0:
000000000020a100         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
000000000020a101         db  0x00 ; '.'
000000000020a102         db  0x00 ; '.'
000000000020a103         db  0x00 ; '.'
000000000020a104         db  0x00 ; '.'
000000000020a105         db  0x00 ; '.'
000000000020a106         db  0x00 ; '.'
000000000020a107         db  0x00 ; '.'
000000000020a108         db  0x00 ; '.'
000000000020a109         db  0x00 ; '.'
000000000020a10a         db  0x00 ; '.'
000000000020a10b         db  0x00 ; '.'
000000000020a10c         db  0x00 ; '.'
000000000020a10d         db  0x00 ; '.'
000000000020a10e         db  0x00 ; '.'
000000000020a10f         db  0x00 ; '.'
000000000020a110         db  0x00 ; '.'
000000000020a111         db  0x00 ; '.'
000000000020a112         db  0x00 ; '.'
000000000020a113         db  0x00 ; '.'
000000000020a114         db  0x00 ; '.'
000000000020a115         db  0x00 ; '.'
000000000020a116         db  0x00 ; '.'
000000000020a117         db  0x00 ; '.'
000000000020a118         db  0x00 ; '.'
000000000020a119         db  0x00 ; '.'
000000000020a11a         db  0x00 ; '.'
000000000020a11b         db  0x00 ; '.'
000000000020a11c         db  0x00 ; '.'
000000000020a11d         db  0x00 ; '.'
000000000020a11e         db  0x00 ; '.'
000000000020a11f         db  0x00 ; '.'
000000000020a120         db  0x00 ; '.'
000000000020a121         db  0x00 ; '.'
000000000020a122         db  0x00 ; '.'
000000000020a123         db  0x00 ; '.'
000000000020a124         db  0x00 ; '.'
000000000020a125         db  0x00 ; '.'
000000000020a126         db  0x00 ; '.'
000000000020a127         db  0x00 ; '.'
000000000020a128         db  0x00 ; '.'
000000000020a129         db  0x00 ; '.'
000000000020a12a         db  0x00 ; '.'
000000000020a12b         db  0x00 ; '.'
000000000020a12c         db  0x00 ; '.'
000000000020a12d         db  0x00 ; '.'
000000000020a12e         db  0x00 ; '.'
000000000020a12f         db  0x00 ; '.'
000000000020a130         db  0x00 ; '.'
000000000020a131         db  0x00 ; '.'
000000000020a132         db  0x00 ; '.'
000000000020a133         db  0x00 ; '.'
000000000020a134         db  0x00 ; '.'
000000000020a135         db  0x00 ; '.'
000000000020a136         db  0x00 ; '.'
000000000020a137         db  0x00 ; '.'
000000000020a138         db  0x00 ; '.'
000000000020a139         db  0x00 ; '.'
000000000020a13a         db  0x00 ; '.'
000000000020a13b         db  0x00 ; '.'
000000000020a13c         db  0x00 ; '.'
000000000020a13d         db  0x00 ; '.'
000000000020a13e         db  0x00 ; '.'
000000000020a13f         db  0x00 ; '.'
000000000020a140         db  0x00 ; '.'
000000000020a141         db  0x00 ; '.'
000000000020a142         db  0x00 ; '.'
000000000020a143         db  0x00 ; '.'
000000000020a144         db  0x00 ; '.'
000000000020a145         db  0x00 ; '.'
000000000020a146         db  0x00 ; '.'
000000000020a147         db  0x00 ; '.'
000000000020a148         db  0x00 ; '.'
000000000020a149         db  0x00 ; '.'
000000000020a14a         db  0x00 ; '.'
000000000020a14b         db  0x00 ; '.'
000000000020a14c         db  0x00 ; '.'
000000000020a14d         db  0x00 ; '.'
000000000020a14e         db  0x00 ; '.'
000000000020a14f         db  0x00 ; '.'
000000000020a150         db  0x00 ; '.'
000000000020a151         db  0x00 ; '.'
000000000020a152         db  0x00 ; '.'
000000000020a153         db  0x00 ; '.'
000000000020a154         db  0x00 ; '.'
000000000020a155         db  0x00 ; '.'
000000000020a156         db  0x00 ; '.'
000000000020a157         db  0x00 ; '.'
000000000020a158         db  0x00 ; '.'
000000000020a159         db  0x00 ; '.'
000000000020a15a         db  0x00 ; '.'
000000000020a15b         db  0x00 ; '.'
000000000020a15c         db  0x00 ; '.'
000000000020a15d         db  0x00 ; '.'
000000000020a15e         db  0x00 ; '.'
000000000020a15f         db  0x00 ; '.'
000000000020a160         db  0x00 ; '.'
000000000020a161         db  0x00 ; '.'
000000000020a162         db  0x00 ; '.'
000000000020a163         db  0x00 ; '.'
000000000020a164         db  0x00 ; '.'
000000000020a165         db  0x00 ; '.'
000000000020a166         db  0x00 ; '.'
000000000020a167         db  0x00 ; '.'
000000000020a168         db  0x00 ; '.'
000000000020a169         db  0x00 ; '.'
000000000020a16a         db  0x00 ; '.'
000000000020a16b         db  0x00 ; '.'
000000000020a16c         db  0x00 ; '.'
000000000020a16d         db  0x00 ; '.'
000000000020a16e         db  0x00 ; '.'
000000000020a16f         db  0x00 ; '.'
000000000020a170         db  0x00 ; '.'
000000000020a171         db  0x00 ; '.'
000000000020a172         db  0x00 ; '.'
000000000020a173         db  0x00 ; '.'
000000000020a174         db  0x00 ; '.'
000000000020a175         db  0x00 ; '.'
000000000020a176         db  0x00 ; '.'
000000000020a177         db  0x00 ; '.'
000000000020a178         db  0x00 ; '.'
000000000020a179         db  0x00 ; '.'
000000000020a17a         db  0x00 ; '.'
000000000020a17b         db  0x00 ; '.'
000000000020a17c         db  0x00 ; '.'
000000000020a17d         db  0x00 ; '.'
000000000020a17e         db  0x00 ; '.'
000000000020a17f         db  0x00 ; '.'
000000000020a180         db  0x00 ; '.'
000000000020a181         db  0x00 ; '.'
000000000020a182         db  0x00 ; '.'
000000000020a183         db  0x00 ; '.'
000000000020a184         db  0x00 ; '.'
000000000020a185         db  0x00 ; '.'
000000000020a186         db  0x00 ; '.'
000000000020a187         db  0x00 ; '.'
000000000020a188         db  0x00 ; '.'
000000000020a189         db  0x00 ; '.'
000000000020a18a         db  0x00 ; '.'
000000000020a18b         db  0x00 ; '.'
000000000020a18c         db  0x00 ; '.'
000000000020a18d         db  0x00 ; '.'
000000000020a18e         db  0x00 ; '.'
000000000020a18f         db  0x00 ; '.'
000000000020a190         db  0x00 ; '.'
000000000020a191         db  0x00 ; '.'
000000000020a192         db  0x00 ; '.'
000000000020a193         db  0x00 ; '.'
000000000020a194         db  0x00 ; '.'
000000000020a195         db  0x00 ; '.'
000000000020a196         db  0x00 ; '.'
000000000020a197         db  0x00 ; '.'
000000000020a198         db  0x00 ; '.'
000000000020a199         db  0x00 ; '.'
000000000020a19a         db  0x00 ; '.'
000000000020a19b         db  0x00 ; '.'
000000000020a19c         db  0x00 ; '.'
000000000020a19d         db  0x00 ; '.'
000000000020a19e         db  0x00 ; '.'
000000000020a19f         db  0x00 ; '.'
000000000020a1a0         db  0x00 ; '.'
000000000020a1a1         db  0x00 ; '.'
000000000020a1a2         db  0x00 ; '.'
000000000020a1a3         db  0x00 ; '.'
000000000020a1a4         db  0x00 ; '.'
000000000020a1a5         db  0x00 ; '.'
000000000020a1a6         db  0x00 ; '.'
000000000020a1a7         db  0x00 ; '.'
000000000020a1a8         db  0x00 ; '.'
000000000020a1a9         db  0x00 ; '.'
000000000020a1aa         db  0x00 ; '.'
000000000020a1ab         db  0x00 ; '.'
000000000020a1ac         db  0x00 ; '.'
000000000020a1ad         db  0x00 ; '.'
000000000020a1ae         db  0x00 ; '.'
000000000020a1af         db  0x00 ; '.'
000000000020a1b0         db  0x00 ; '.'
000000000020a1b1         db  0x00 ; '.'
000000000020a1b2         db  0x00 ; '.'
000000000020a1b3         db  0x00 ; '.'
000000000020a1b4         db  0x00 ; '.'
000000000020a1b5         db  0x00 ; '.'
000000000020a1b6         db  0x00 ; '.'
000000000020a1b7         db  0x00 ; '.'
000000000020a1b8         db  0x00 ; '.'
000000000020a1b9         db  0x00 ; '.'
000000000020a1ba         db  0x00 ; '.'
000000000020a1bb         db  0x00 ; '.'
000000000020a1bc         db  0x00 ; '.'
000000000020a1bd         db  0x00 ; '.'
000000000020a1be         db  0x00 ; '.'
000000000020a1bf         db  0x00 ; '.'
000000000020a1c0         db  0x00 ; '.'
000000000020a1c1         db  0x00 ; '.'
000000000020a1c2         db  0x00 ; '.'
000000000020a1c3         db  0x00 ; '.'
000000000020a1c4         db  0x00 ; '.'
000000000020a1c5         db  0x00 ; '.'
000000000020a1c6         db  0x00 ; '.'
000000000020a1c7         db  0x00 ; '.'
000000000020a1c8         db  0x00 ; '.'
000000000020a1c9         db  0x00 ; '.'
000000000020a1ca         db  0x00 ; '.'
000000000020a1cb         db  0x00 ; '.'
000000000020a1cc         db  0x00 ; '.'
000000000020a1cd         db  0x00 ; '.'
000000000020a1ce         db  0x00 ; '.'
000000000020a1cf         db  0x00 ; '.'
000000000020a1d0         db  0x00 ; '.'
000000000020a1d1         db  0x00 ; '.'
000000000020a1d2         db  0x00 ; '.'
000000000020a1d3         db  0x00 ; '.'
000000000020a1d4         db  0x00 ; '.'
000000000020a1d5         db  0x00 ; '.'
000000000020a1d6         db  0x00 ; '.'
000000000020a1d7         db  0x00 ; '.'
000000000020a1d8         db  0x00 ; '.'
000000000020a1d9         db  0x00 ; '.'
000000000020a1da         db  0x00 ; '.'
000000000020a1db         db  0x00 ; '.'
000000000020a1dc         db  0x00 ; '.'
000000000020a1dd         db  0x00 ; '.'
000000000020a1de         db  0x00 ; '.'
000000000020a1df         db  0x00 ; '.'
000000000020a1e0         db  0x00 ; '.'
000000000020a1e1         db  0x00 ; '.'
000000000020a1e2         db  0x00 ; '.'
000000000020a1e3         db  0x00 ; '.'
000000000020a1e4         db  0x00 ; '.'
000000000020a1e5         db  0x00 ; '.'
000000000020a1e6         db  0x00 ; '.'
000000000020a1e7         db  0x00 ; '.'
000000000020a1e8         db  0x00 ; '.'
000000000020a1e9         db  0x00 ; '.'
000000000020a1ea         db  0x00 ; '.'
000000000020a1eb         db  0x00 ; '.'
000000000020a1ec         db  0x00 ; '.'
000000000020a1ed         db  0x00 ; '.'
000000000020a1ee         db  0x00 ; '.'
000000000020a1ef         db  0x00 ; '.'
000000000020a1f0         db  0x00 ; '.'
000000000020a1f1         db  0x00 ; '.'
000000000020a1f2         db  0x00 ; '.'
000000000020a1f3         db  0x00 ; '.'
000000000020a1f4         db  0x00 ; '.'
000000000020a1f5         db  0x00 ; '.'
000000000020a1f6         db  0x00 ; '.'
000000000020a1f7         db  0x00 ; '.'
000000000020a1f8         db  0x00 ; '.'
000000000020a1f9         db  0x00 ; '.'
000000000020a1fa         db  0x00 ; '.'
000000000020a1fb         db  0x00 ; '.'
000000000020a1fc         db  0x00 ; '.'
000000000020a1fd         db  0x00 ; '.'
000000000020a1fe         db  0x00 ; '.'
000000000020a1ff         db  0x00 ; '.'
                     default_quoting_options:
000000000020a200         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
000000000020a201         db  0x00 ; '.'
000000000020a202         db  0x00 ; '.'
000000000020a203         db  0x00 ; '.'
000000000020a204         db  0x00 ; '.'
000000000020a205         db  0x00 ; '.'
000000000020a206         db  0x00 ; '.'
000000000020a207         db  0x00 ; '.'
000000000020a208         db  0x00 ; '.'
000000000020a209         db  0x00 ; '.'
000000000020a20a         db  0x00 ; '.'
000000000020a20b         db  0x00 ; '.'
000000000020a20c         db  0x00 ; '.'
000000000020a20d         db  0x00 ; '.'
000000000020a20e         db  0x00 ; '.'
000000000020a20f         db  0x00 ; '.'
000000000020a210         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
000000000020a211         db  0x00 ; '.'
000000000020a212         db  0x00 ; '.'
000000000020a213         db  0x00 ; '.'
000000000020a214         db  0x00 ; '.'
000000000020a215         db  0x00 ; '.'
000000000020a216         db  0x00 ; '.'
000000000020a217         db  0x00 ; '.'
000000000020a218         db  0x00 ; '.'
000000000020a219         db  0x00 ; '.'
000000000020a21a         db  0x00 ; '.'
000000000020a21b         db  0x00 ; '.'
000000000020a21c         db  0x00 ; '.'
000000000020a21d         db  0x00 ; '.'
000000000020a21e         db  0x00 ; '.'
000000000020a21f         db  0x00 ; '.'
000000000020a220         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
000000000020a221         db  0x00 ; '.'
000000000020a222         db  0x00 ; '.'
000000000020a223         db  0x00 ; '.'
000000000020a224         db  0x00 ; '.'
000000000020a225         db  0x00 ; '.'
000000000020a226         db  0x00 ; '.'
000000000020a227         db  0x00 ; '.'
000000000020a228         db  0x00 ; '.'
000000000020a229         db  0x00 ; '.'
000000000020a22a         db  0x00 ; '.'
000000000020a22b         db  0x00 ; '.'
000000000020a22c         db  0x00 ; '.'
000000000020a22d         db  0x00 ; '.'
000000000020a22e         db  0x00 ; '.'
000000000020a22f         db  0x00 ; '.'
                     qword_20a230:
000000000020a230         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
000000000020a231         db  0x00 ; '.'
000000000020a232         db  0x00 ; '.'
000000000020a233         db  0x00 ; '.'
000000000020a234         db  0x00 ; '.'
000000000020a235         db  0x00 ; '.'
000000000020a236         db  0x00 ; '.'
000000000020a237         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x20a240; 0x20a6c0[ (1152 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x20a240; 0x414900[ (2139840 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     __ctype_toupper_loc:
000000000020a240         extern function code                                   ; DATA XREF=__ctype_toupper_loc@GOT
                     utmpxname:
000000000020a248         extern function code                                   ; DATA XREF=utmpxname@GOT
                     getenv:
000000000020a250         extern function code                                   ; DATA XREF=getenv@GOT
                     free:
000000000020a258         extern function code                                   ; DATA XREF=free@GOT
                     localtime:
000000000020a260         extern function code                                   ; DATA XREF=localtime@GOT
                     abort:
000000000020a268         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
000000000020a270         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncpy:
000000000020a278         extern function code                                   ; DATA XREF=strncpy@GOT
                     strncmp:
000000000020a280         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
000000000020a288         extern function code
                     localtime_r:
000000000020a290         extern function code                                   ; DATA XREF=localtime_r@GOT
                     _exit:
000000000020a298         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
000000000020a2a0         extern function code                                   ; DATA XREF=__fpending@GOT
                     setenv:
000000000020a2a8         extern function code                                   ; DATA XREF=setenv@GOT
                     textdomain:
000000000020a2b0         extern function code                                   ; DATA XREF=textdomain@GOT
                     endutxent:
000000000020a2b8         extern function code                                   ; DATA XREF=endutxent@GOT
                     strtod_l:
000000000020a2c0         extern function code                                   ; DATA XREF=strtod_l@GOT
                     fclose:
000000000020a2c8         extern function code                                   ; DATA XREF=fclose@GOT
                     getloadavg:
000000000020a2d0         extern function code                                   ; DATA XREF=getloadavg@GOT
                     bindtextdomain:
000000000020a2d8         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
000000000020a2e0         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
000000000020a2e8         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
000000000020a2f0         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
000000000020a2f8         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
000000000020a300         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
000000000020a308         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     newlocale:
000000000020a310         extern function code                                   ; DATA XREF=newlocale@GOT
                     __overflow:
000000000020a318         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
000000000020a320         extern function code                                   ; DATA XREF=strrchr@GOT
                     gmtime_r:
000000000020a328         extern function code                                   ; DATA XREF=gmtime_r@GOT
                     lseek:
000000000020a330         extern function code                                   ; DATA XREF=lseek@GOT
                     memset:
000000000020a338         extern function code                                   ; DATA XREF=memset@GOT
                     fputc:
000000000020a340         extern function code                                   ; DATA XREF=fputc@GOT
                     __libc_start_main:
000000000020a348         extern function code
                     memcmp:
000000000020a350         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
000000000020a358         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
000000000020a360         extern function code                                   ; DATA XREF=calloc@GOT
                     strcmp:
000000000020a368         extern function code                                   ; DATA XREF=strcmp@GOT
                     setutxent:
000000000020a370         extern function code                                   ; DATA XREF=setutxent@GOT
                     __gmon_start__:
000000000020a378         extern function code
                     memcpy:
000000000020a380         extern function code                                   ; DATA XREF=memcpy@GOT
                     tzset:
000000000020a388         extern function code                                   ; DATA XREF=tzset@GOT
                     kill:
000000000020a390         extern function code                                   ; DATA XREF=kill@GOT
                     time:
000000000020a398         extern function code                                   ; DATA XREF=time@GOT
                     fileno:
000000000020a3a0         extern function code                                   ; DATA XREF=fileno@GOT
                     fgets_unlocked:
000000000020a3a8         extern function code                                   ; DATA XREF=fgets_unlocked@GOT
                     malloc:
000000000020a3b0         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
000000000020a3b8         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
000000000020a3c0         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     mktime:
000000000020a3c8         extern function code                                   ; DATA XREF=mktime@GOT
                     __freading:
000000000020a3d0         extern function code                                   ; DATA XREF=__freading@GOT
                     realloc:
000000000020a3d8         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
000000000020a3e0         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
000000000020a3e8         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     timegm:
000000000020a3f0         extern function code                                   ; DATA XREF=timegm@GOT
                     strftime:
000000000020a3f8         extern function code                                   ; DATA XREF=strftime@GOT
                     getutxent:
000000000020a400         extern function code                                   ; DATA XREF=getutxent@GOT
                     error:
000000000020a408         extern function code                                   ; DATA XREF=error@GOT
                     fseeko:
000000000020a410         extern function code                                   ; DATA XREF=fseeko@GOT
                     fopen:
000000000020a418         extern function code                                   ; DATA XREF=fopen@GOT
                     dcngettext:
000000000020a420         extern function code                                   ; DATA XREF=dcngettext@GOT
                     unsetenv:
000000000020a428         extern function code                                   ; DATA XREF=unsetenv@GOT
                     __cxa_atexit:
000000000020a430         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
000000000020a438         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
000000000020a440         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
000000000020a448         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
000000000020a450         extern function code
                     mbsinit:
000000000020a458         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
000000000020a460         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
000000000020a468         extern function code
                     __ctype_tolower_loc:
000000000020a470         extern function code                                   ; DATA XREF=__ctype_tolower_loc@GOT
                     __ctype_b_loc:
000000000020a478         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     __ctype_toupper_loc@@GLIBC_2.3:
000000000020a480         extern function code
                     utmpxname@@GLIBC_2.2.5:
000000000020a488         extern function code
                     getenv@@GLIBC_2.2.5:
000000000020a490         extern function code
                     free@@GLIBC_2.2.5:
000000000020a498         extern function code
                     localtime@@GLIBC_2.2.5:
000000000020a4a0         extern function code
                     abort@@GLIBC_2.2.5:
000000000020a4a8         extern function code
                     __errno_location@@GLIBC_2.2.5:
000000000020a4b0         extern function code
                     strncpy@@GLIBC_2.2.5:
000000000020a4b8         extern function code
                     strncmp@@GLIBC_2.2.5:
000000000020a4c0         extern function code
                     _ITM_deregisterTMCloneTable_20a4c8:        // _ITM_deregisterTMCloneTable
000000000020a4c8         extern function code
                     localtime_r@@GLIBC_2.2.5:
000000000020a4d0         extern function code
                     _exit@@GLIBC_2.2.5:
000000000020a4d8         extern function code
                     __fpending@@GLIBC_2.2.5:
000000000020a4e0         extern function code
                     setenv@@GLIBC_2.2.5:
000000000020a4e8         extern function code
                     textdomain@@GLIBC_2.2.5:
000000000020a4f0         extern function code
                     endutxent@@GLIBC_2.2.5:
000000000020a4f8         extern function code
                     strtod_l@@GLIBC_2.3:
000000000020a500         extern function code
                     fclose@@GLIBC_2.2.5:
000000000020a508         extern function code
                     getloadavg@@GLIBC_2.2.5:
000000000020a510         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
000000000020a518         extern function code
                     dcgettext@@GLIBC_2.2.5:
000000000020a520         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
000000000020a528         extern function code
                     strlen@@GLIBC_2.2.5:
000000000020a530         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
000000000020a538         extern function code
                     getopt_long@@GLIBC_2.2.5:
000000000020a540         extern function code
                     mbrtowc@@GLIBC_2.2.5:
000000000020a548         extern function code
                     newlocale@@GLIBC_2.3:
000000000020a550         extern function code
                     __overflow@@GLIBC_2.2.5:
000000000020a558         extern function code
                     strrchr@@GLIBC_2.2.5:
000000000020a560         extern function code
                     gmtime_r@@GLIBC_2.2.5:
000000000020a568         extern function code
                     lseek@@GLIBC_2.2.5:
000000000020a570         extern function code
                     memset@@GLIBC_2.2.5:
000000000020a578         extern function code
                     fputc@@GLIBC_2.2.5:
000000000020a580         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
000000000020a588         extern function code
                     memcmp@@GLIBC_2.2.5:
000000000020a590         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
000000000020a598         extern function code
                     calloc@@GLIBC_2.2.5:
000000000020a5a0         extern function code
                     strcmp@@GLIBC_2.2.5:
000000000020a5a8         extern function code
                     setutxent@@GLIBC_2.2.5:
000000000020a5b0         extern function code
                     __gmon_start___20a5b8:        // __gmon_start__
000000000020a5b8         extern function code
                     memcpy@@GLIBC_2.14:
000000000020a5c0         extern function code
                     tzset@@GLIBC_2.2.5:
000000000020a5c8         extern function code
                     kill@@GLIBC_2.2.5:
000000000020a5d0         extern function code
                     time@@GLIBC_2.2.5:
000000000020a5d8         extern function code
                     fileno@@GLIBC_2.2.5:
000000000020a5e0         extern function code
                     fgets_unlocked@@GLIBC_2.2.5:
000000000020a5e8         extern function code
                     malloc@@GLIBC_2.2.5:
000000000020a5f0         extern function code
                     fflush@@GLIBC_2.2.5:
000000000020a5f8         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
000000000020a600         extern function code
                     mktime@@GLIBC_2.2.5:
000000000020a608         extern function code
                     __freading@@GLIBC_2.2.5:
000000000020a610         extern function code
                     realloc@@GLIBC_2.2.5:
000000000020a618         extern function code
                     setlocale@@GLIBC_2.2.5:
000000000020a620         extern function code
                     __printf_chk@@GLIBC_2.3.4:
000000000020a628         extern function code
                     timegm@@GLIBC_2.2.5:
000000000020a630         extern function code
                     strftime@@GLIBC_2.2.5:
000000000020a638         extern function code
                     getutxent@@GLIBC_2.2.5:
000000000020a640         extern function code
                     error@@GLIBC_2.2.5:
000000000020a648         extern function code
                     fseeko@@GLIBC_2.2.5:
000000000020a650         extern function code
                     fopen@@GLIBC_2.2.5:
000000000020a658         extern function code
                     dcngettext@@GLIBC_2.2.5:
000000000020a660         extern function code
                     unsetenv@@GLIBC_2.2.5:
000000000020a668         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
000000000020a670         extern function code
                     exit@@GLIBC_2.2.5:
000000000020a678         extern function code
                     fwrite@@GLIBC_2.2.5:
000000000020a680         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
000000000020a688         extern function code
                     _ITM_registerTMCloneTable_20a690:        // _ITM_registerTMCloneTable
000000000020a690         extern function code
                     mbsinit@@GLIBC_2.2.5:
000000000020a698         extern function code
                     iswprint@@GLIBC_2.2.5:
000000000020a6a0         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
000000000020a6a8         extern function code
                     __ctype_tolower_loc@@GLIBC_2.3:
000000000020a6b0         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
000000000020a6b8         extern function code
