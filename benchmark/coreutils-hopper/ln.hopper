
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/ln
        UUID: 8BEC607F-292B-D9D0-C8A9-EE5FB37BDEBA
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0xed00[ (60672 bytes)
        ; File offset : [0; 60672[ (60672 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0xb0 ; '.'
0000000000000019         db  0x2a ; '*'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x40 ; '@'
0000000000000029         db  0x73 ; 's'
000000000000002a         db  0x05 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x00 ; '.'
00000000000000d1         db  0xed ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x00 ; '.'
00000000000000d9         db  0xed ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x70 ; 'p'
00000000000000f1         db  0xf8 ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x70 ; 'p'
00000000000000f9         db  0xf8 ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x70 ; 'p'                                         ; DATA XREF=do_link+824, samedir_template+25, quotearg_free+87, renameatu+297, renameatu+376, renameatu+466, same_nameat.part.0+51, same_nameat.part.0+108, rpl_fflush+18, freadahead+20, slotvec0
0000000000000101         db  0xf8 ; '.'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x38 ; '8'
0000000000000109         db  0x08 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x30 ; '0'
0000000000000111         db  0x0a ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x38 ; '8'
0000000000000129         db  0xfb ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x38 ; '8'                                         ; DATA XREF=force_symlinkat+16, force_symlinkat+194
0000000000000131         db  0xfb ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x38 ; '8'                                         ; DATA XREF=same_nameat.part.0+17, same_nameat.part.0+198
0000000000000139         db  0xfb ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'                                         ; DATA XREF=renameatu+65
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'                                         ; DATA XREF=gen_tempname_len+43
0000000000000148         db  0xf0 ; '.'                                         ; DATA XREF=force_linkat+24, force_linkat+217, renameatu+28, renameatu+116
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'                                         ; DATA XREF=do_link+28, do_link+405
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'                                         ; DATA XREF=try_file+2
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0xb8 ; '.'
0000000000000199         db  0xca ; '.'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0xb8 ; '.'
00000000000001a1         db  0xca ; '.'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0xb8 ; '.'
00000000000001a9         db  0xca ; '.'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0x6c ; 'l'
00000000000001b1         db  0x05 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0x6c ; 'l'
00000000000001b9         db  0x05 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'                                         ; DATA XREF=try_dir
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x70 ; 'p'
0000000000000209         db  0xf8 ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x70 ; 'p'
0000000000000211         db  0xf8 ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x70 ; 'p'
0000000000000219         db  0xf8 ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0x90 ; '.'
0000000000000221         db  0x07 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0x90 ; '.'
0000000000000229         db  0x07 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000000238         db  0x2f ; '/'
0000000000000239         db  0x6c ; 'l'
000000000000023a         db  0x69 ; 'i'
000000000000023b         db  0x62 ; 'b'
000000000000023c         db  0x36 ; '6'
000000000000023d         db  0x34 ; '4'
000000000000023e         db  0x2f ; '/'
000000000000023f         db  0x6c ; 'l'
0000000000000240         db  0x64 ; 'd'
0000000000000241         db  0x2d ; '-'
0000000000000242         db  0x6c ; 'l'
0000000000000243         db  0x69 ; 'i'
0000000000000244         db  0x6e ; 'n'
0000000000000245         db  0x75 ; 'u'
0000000000000246         db  0x78 ; 'x'
0000000000000247         db  0x2d ; '-'
0000000000000248         db  0x78 ; 'x'
0000000000000249         db  0x38 ; '8'
000000000000024a         db  0x36 ; '6'
000000000000024b         db  0x2d ; '-'
000000000000024c         db  0x36 ; '6'
000000000000024d         db  0x34 ; '4'
000000000000024e         db  0x2e ; '.'
000000000000024f         db  0x73 ; 's'
0000000000000250         db  0x6f ; 'o'
0000000000000251         db  0x2e ; '.'
0000000000000252         db  0x32 ; '2'
0000000000000253         db  0x00 ; '.'


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0x8b ; '.'
0000000000000285         db  0xec ; '.'
0000000000000286         db  0x60 ; '`'
0000000000000287         db  0x7f ; '.'
0000000000000288         db  0x29 ; ')'
0000000000000289         db  0x2b ; '+'
000000000000028a         db  0xd9 ; '.'
000000000000028b         db  0xd0 ; '.'
000000000000028c         db  0xc8 ; '.'
000000000000028d         db  0xa9 ; '.'
000000000000028e         db  0xee ; '.'
000000000000028f         db  0x5f ; '_'
0000000000000290         db  0xb3 ; '.'
0000000000000291         db  0x7b ; '{'
0000000000000292         db  0xde ; '.'
0000000000000293         db  0xba ; '.'
0000000000000294         db  0xd4 ; '.'
0000000000000295         db  0x60 ; '`'
0000000000000296         db  0xf0 ; '.'
0000000000000297         db  0x6b ; 'k'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2e0[ (72 bytes)
        ; File offset : [664; 736[ (72 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x57 ; 'W'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x61 ; 'a'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0xa0 ; '.'
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x57 ; 'W'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x58 ; 'X'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x5e ; '^'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x66 ; 'f'
00000000000002c5         db  0x55 ; 'U'
00000000000002c6         db  0x61 ; 'a'
00000000000002c7         db  0x10 ; '.'
00000000000002c8         db  0x96 ; '.'
00000000000002c9         db  0xa0 ; '.'
00000000000002ca         db  0x89 ; '.'
00000000000002cb         db  0x97 ; '.'
00000000000002cc         db  0xce ; '.'
00000000000002cd         db  0x2c ; ','
00000000000002ce         db  0x63 ; 'c'
00000000000002cf         db  0x72 ; 'r'
00000000000002d0         db  0xe4 ; '.'
00000000000002d1         db  0x62 ; 'b'
00000000000002d2         db  0x41 ; 'A'
00000000000002d3         db  0xf5 ; '.'
00000000000002d4         db  0x39 ; '9'
00000000000002d5         db  0xf2 ; '.'
00000000000002d6         db  0x8b ; '.'
00000000000002d7         db  0x1c ; '.'
00000000000002d8         db  0x32 ; '2'
00000000000002d9         db  0xc4 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0xb3 ; '.'
00000000000002dd         db  0xa2 ; '.'
00000000000002de         db  0xf7 ; '.'
00000000000002df         db  0x12 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0xbe0[ (2304 bytes)
        ; File offset : [736; 3040[ (2304 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0xf6 ; '.'
00000000000002f9         db  0x01 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x34 ; '4'
0000000000000311         db  0x03 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0xcd ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x5f ; '_'
0000000000000341         db  0x01 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x46 ; 'F'
0000000000000359         db  0x00 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x12 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0xa3 ; '.'
0000000000000371         db  0x03 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x20 ; ' '
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0xd9 ; '.'
0000000000000389         db  0x00 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0x12 ; '.'
00000000000003a1         db  0x00 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0x74 ; 't'
00000000000003b9         db  0x02 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x87 ; '.'
00000000000003d1         db  0x00 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0xb5 ; '.'
00000000000003e9         db  0x00 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x6f ; 'o'                                         ; DATA XREF=rpl_fcntl+288
0000000000000401         db  0x00 ; '.'                                         ; DATA XREF=areadlink_with_size+4, areadlink_with_size+46, rpl_fcntl+272
0000000000000402         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+280
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+81, rpl_fcntl+123, rpl_fcntl+264
0000000000000407         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+256
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+336
000000000000040a         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+350
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x1d ; '.'
0000000000000419         db  0x02 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0xc3 ; '.'
0000000000000431         db  0x02 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0xdf ; '.'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x49 ; 'I'
0000000000000461         db  0x01 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0xe4 ; '.'
0000000000000479         db  0x02 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x95 ; '.'
0000000000000491         db  0x01 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0xab ; '.'
00000000000004a9         db  0x01 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0xe0 ; '.'
00000000000004c1         db  0x02 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x65 ; 'e'
00000000000004d9         db  0x00 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x13 ; '.'
00000000000004f1         db  0x01 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x42 ; 'B'
0000000000000509         db  0x01 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0xa3 ; '.'
0000000000000521         db  0x00 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0xc9 ; '.'
0000000000000539         db  0x02 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x92 ; '.'
0000000000000551         db  0x00 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x16 ; '.'
0000000000000569         db  0x02 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x26 ; '&'
0000000000000581         db  0x02 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x38 ; '8'
0000000000000599         db  0x00 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0xef ; '.'
00000000000005b1         db  0x02 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x1a ; '.'
00000000000005c9         db  0x03 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x55 ; 'U'
00000000000005e1         db  0x00 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x9e ; '.'
00000000000005f9         db  0x01 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x52 ; 'R'
0000000000000611         db  0x02 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x05 ; '.'
0000000000000629         db  0x01 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x58 ; 'X'
0000000000000641         db  0x01 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x39 ; '9'
0000000000000659         db  0x02 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0xac ; '.'
0000000000000671         db  0x01 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0xc3 ; '.'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0xe6 ; '.'
00000000000006a1         db  0x00 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x78 ; 'x'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x01 ; '.'
00000000000006d1         db  0x03 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x70 ; 'p'
00000000000006e9         db  0x01 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x25 ; '%'
0000000000000701         db  0x03 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x32 ; '2'
0000000000000719         db  0x01 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x40 ; '@'
0000000000000731         db  0x02 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0xfa ; '.'
0000000000000749         db  0x02 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x94 ; '.'
0000000000000761         db  0x01 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x5d ; ']'
0000000000000779         db  0x00 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0xb3 ; '.'
0000000000000791         db  0x02 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0xbf ; '.'
00000000000007a9         db  0x03 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x20 ; ' '
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0xa4 ; '.'
00000000000007c1         db  0x01 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x12 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x32 ; '2'
00000000000007d9         db  0x02 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0xd5 ; '.'
00000000000007f1         db  0x01 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x12 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'                                         ; DATA XREF=isaac_refill+74, isaac_refill+108, isaac_refill+141, isaac_refill+175, isaac_refill+207, isaac_refill+234, isaac_refill+275, isaac_refill+311, isaac_refill+378, isaac_refill+412, isaac_refill+445
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'                                         ; DATA XREF=randread_new+296, randread_new+495, randread_new+648, randread_new+735, randread_new+786, randread+200, randread+223
0000000000000800         db  0x00 ; '.'                                         ; DATA XREF=randread_new+250, randread_new+260, randread_new+431, randread_new+517, randread+165, randread+245, randread+258, randread+312, randread+323, randread+336
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0xd0 ; '.'
0000000000000809         db  0x02 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x12 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x00 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x26 ; '&'
0000000000000821         db  0x00 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x12 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x00 ; '.'
0000000000000829         db  0x00 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x00 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0xbc ; '.'
0000000000000839         db  0x01 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x12 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x00 ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x00 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x0b ; '.'
0000000000000851         db  0x00 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x12 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x00 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x00 ; '.'
0000000000000859         db  0x00 ; '.'
000000000000085a         db  0x00 ; '.'
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x00 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0xdc ; '.'
0000000000000869         db  0x01 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x12 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x00 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x00 ; '.'
0000000000000871         db  0x00 ; '.'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x00 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x04 ; '.'
0000000000000881         db  0x02 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x12 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x00 ; '.'
0000000000000889         db  0x00 ; '.'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x00 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0xbb ; '.'
0000000000000899         db  0x00 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x12 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x00 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0x00 ; '.'
00000000000008a1         db  0x00 ; '.'
00000000000008a2         db  0x00 ; '.'
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x00 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x9d ; '.'
00000000000008b1         db  0x02 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x12 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x00 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0x00 ; '.'
00000000000008b9         db  0x00 ; '.'
00000000000008ba         db  0x00 ; '.'
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x00 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0xb5 ; '.'
00000000000008c9         db  0x01 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x12 ; '.'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x00 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0x00 ; '.'
00000000000008d1         db  0x00 ; '.'
00000000000008d2         db  0x00 ; '.'
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x00 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x00 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0x2e ; '.'
00000000000008e1         db  0x00 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x12 ; '.'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x00 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0x00 ; '.'
00000000000008e9         db  0x00 ; '.'
00000000000008ea         db  0x00 ; '.'
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x00 ; '.'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x00 ; '.'
00000000000008f1         db  0x00 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x00 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'
00000000000008f8         db  0x19 ; '.'
00000000000008f9         db  0x00 ; '.'
00000000000008fa         db  0x00 ; '.'
00000000000008fb         db  0x00 ; '.'
00000000000008fc         db  0x12 ; '.'
00000000000008fd         db  0x00 ; '.'
00000000000008fe         db  0x00 ; '.'
00000000000008ff         db  0x00 ; '.'
0000000000000900         db  0x00 ; '.'
0000000000000901         db  0x00 ; '.'
0000000000000902         db  0x00 ; '.'
0000000000000903         db  0x00 ; '.'
0000000000000904         db  0x00 ; '.'
0000000000000905         db  0x00 ; '.'
0000000000000906         db  0x00 ; '.'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x00 ; '.'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x00 ; '.'
000000000000090c         db  0x00 ; '.'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x00 ; '.'
000000000000090f         db  0x00 ; '.'
0000000000000910         db  0xbb ; '.'
0000000000000911         db  0x02 ; '.'
0000000000000912         db  0x00 ; '.'
0000000000000913         db  0x00 ; '.'
0000000000000914         db  0x12 ; '.'
0000000000000915         db  0x00 ; '.'
0000000000000916         db  0x00 ; '.'
0000000000000917         db  0x00 ; '.'
0000000000000918         db  0x00 ; '.'
0000000000000919         db  0x00 ; '.'
000000000000091a         db  0x00 ; '.'
000000000000091b         db  0x00 ; '.'
000000000000091c         db  0x00 ; '.'
000000000000091d         db  0x00 ; '.'
000000000000091e         db  0x00 ; '.'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x00 ; '.'
0000000000000921         db  0x00 ; '.'
0000000000000922         db  0x00 ; '.'
0000000000000923         db  0x00 ; '.'
0000000000000924         db  0x00 ; '.'
0000000000000925         db  0x00 ; '.'
0000000000000926         db  0x00 ; '.'
0000000000000927         db  0x00 ; '.'
0000000000000928         db  0x77 ; 'w'
0000000000000929         db  0x01 ; '.'
000000000000092a         db  0x00 ; '.'
000000000000092b         db  0x00 ; '.'
000000000000092c         db  0x12 ; '.'
000000000000092d         db  0x00 ; '.'
000000000000092e         db  0x00 ; '.'
000000000000092f         db  0x00 ; '.'
0000000000000930         db  0x00 ; '.'
0000000000000931         db  0x00 ; '.'
0000000000000932         db  0x00 ; '.'
0000000000000933         db  0x00 ; '.'
0000000000000934         db  0x00 ; '.'
0000000000000935         db  0x00 ; '.'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x00 ; '.'
0000000000000938         db  0x00 ; '.'
0000000000000939         db  0x00 ; '.'
000000000000093a         db  0x00 ; '.'
000000000000093b         db  0x00 ; '.'
000000000000093c         db  0x00 ; '.'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x00 ; '.'
000000000000093f         db  0x00 ; '.'
0000000000000940         db  0xd8 ; '.'
0000000000000941         db  0x02 ; '.'
0000000000000942         db  0x00 ; '.'
0000000000000943         db  0x00 ; '.'
0000000000000944         db  0x12 ; '.'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x00 ; '.'
0000000000000947         db  0x00 ; '.'
0000000000000948         db  0x00 ; '.'
0000000000000949         db  0x00 ; '.'
000000000000094a         db  0x00 ; '.'
000000000000094b         db  0x00 ; '.'
000000000000094c         db  0x00 ; '.'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x00 ; '.'
000000000000094f         db  0x00 ; '.'
0000000000000950         db  0x00 ; '.'
0000000000000951         db  0x00 ; '.'
0000000000000952         db  0x00 ; '.'
0000000000000953         db  0x00 ; '.'
0000000000000954         db  0x00 ; '.'
0000000000000955         db  0x00 ; '.'
0000000000000956         db  0x00 ; '.'
0000000000000957         db  0x00 ; '.'
0000000000000958         db  0x81 ; '.'
0000000000000959         db  0x00 ; '.'
000000000000095a         db  0x00 ; '.'
000000000000095b         db  0x00 ; '.'
000000000000095c         db  0x12 ; '.'
000000000000095d         db  0x00 ; '.'
000000000000095e         db  0x00 ; '.'
000000000000095f         db  0x00 ; '.'
0000000000000960         db  0x00 ; '.'
0000000000000961         db  0x00 ; '.'
0000000000000962         db  0x00 ; '.'
0000000000000963         db  0x00 ; '.'
0000000000000964         db  0x00 ; '.'
0000000000000965         db  0x00 ; '.'
0000000000000966         db  0x00 ; '.'
0000000000000967         db  0x00 ; '.'
0000000000000968         db  0x00 ; '.'
0000000000000969         db  0x00 ; '.'
000000000000096a         db  0x00 ; '.'
000000000000096b         db  0x00 ; '.'
000000000000096c         db  0x00 ; '.'
000000000000096d         db  0x00 ; '.'
000000000000096e         db  0x00 ; '.'
000000000000096f         db  0x00 ; '.'
0000000000000970         db  0x5f ; '_'
0000000000000971         db  0x02 ; '.'
0000000000000972         db  0x00 ; '.'
0000000000000973         db  0x00 ; '.'
0000000000000974         db  0x12 ; '.'
0000000000000975         db  0x00 ; '.'
0000000000000976         db  0x00 ; '.'
0000000000000977         db  0x00 ; '.'
0000000000000978         db  0x00 ; '.'
0000000000000979         db  0x00 ; '.'
000000000000097a         db  0x00 ; '.'
000000000000097b         db  0x00 ; '.'
000000000000097c         db  0x00 ; '.'
000000000000097d         db  0x00 ; '.'
000000000000097e         db  0x00 ; '.'
000000000000097f         db  0x00 ; '.'
0000000000000980         db  0x00 ; '.'
0000000000000981         db  0x00 ; '.'
0000000000000982         db  0x00 ; '.'
0000000000000983         db  0x00 ; '.'
0000000000000984         db  0x00 ; '.'
0000000000000985         db  0x00 ; '.'
0000000000000986         db  0x00 ; '.'
0000000000000987         db  0x00 ; '.'
0000000000000988         db  0x9f ; '.'
0000000000000989         db  0x02 ; '.'
000000000000098a         db  0x00 ; '.'
000000000000098b         db  0x00 ; '.'
000000000000098c         db  0x12 ; '.'
000000000000098d         db  0x00 ; '.'
000000000000098e         db  0x00 ; '.'
000000000000098f         db  0x00 ; '.'
0000000000000990         db  0x00 ; '.'
0000000000000991         db  0x00 ; '.'
0000000000000992         db  0x00 ; '.'
0000000000000993         db  0x00 ; '.'
0000000000000994         db  0x00 ; '.'
0000000000000995         db  0x00 ; '.'
0000000000000996         db  0x00 ; '.'
0000000000000997         db  0x00 ; '.'
0000000000000998         db  0x00 ; '.'
0000000000000999         db  0x00 ; '.'
000000000000099a         db  0x00 ; '.'
000000000000099b         db  0x00 ; '.'
000000000000099c         db  0x00 ; '.'
000000000000099d         db  0x00 ; '.'
000000000000099e         db  0x00 ; '.'
000000000000099f         db  0x00 ; '.'
00000000000009a0         db  0x13 ; '.'
00000000000009a1         db  0x03 ; '.'
00000000000009a2         db  0x00 ; '.'
00000000000009a3         db  0x00 ; '.'
00000000000009a4         db  0x12 ; '.'
00000000000009a5         db  0x00 ; '.'
00000000000009a6         db  0x00 ; '.'
00000000000009a7         db  0x00 ; '.'
00000000000009a8         db  0x00 ; '.'
00000000000009a9         db  0x00 ; '.'
00000000000009aa         db  0x00 ; '.'
00000000000009ab         db  0x00 ; '.'
00000000000009ac         db  0x00 ; '.'
00000000000009ad         db  0x00 ; '.'
00000000000009ae         db  0x00 ; '.'
00000000000009af         db  0x00 ; '.'
00000000000009b0         db  0x00 ; '.'
00000000000009b1         db  0x00 ; '.'
00000000000009b2         db  0x00 ; '.'
00000000000009b3         db  0x00 ; '.'
00000000000009b4         db  0x00 ; '.'
00000000000009b5         db  0x00 ; '.'
00000000000009b6         db  0x00 ; '.'
00000000000009b7         db  0x00 ; '.'
00000000000009b8         db  0x40 ; '@'
00000000000009b9         db  0x00 ; '.'
00000000000009ba         db  0x00 ; '.'
00000000000009bb         db  0x00 ; '.'
00000000000009bc         db  0x12 ; '.'
00000000000009bd         db  0x00 ; '.'
00000000000009be         db  0x00 ; '.'
00000000000009bf         db  0x00 ; '.'
00000000000009c0         db  0x00 ; '.'
00000000000009c1         db  0x00 ; '.'
00000000000009c2         db  0x00 ; '.'
00000000000009c3         db  0x00 ; '.'
00000000000009c4         db  0x00 ; '.'
00000000000009c5         db  0x00 ; '.'
00000000000009c6         db  0x00 ; '.'
00000000000009c7         db  0x00 ; '.'
00000000000009c8         db  0x00 ; '.'
00000000000009c9         db  0x00 ; '.'
00000000000009ca         db  0x00 ; '.'
00000000000009cb         db  0x00 ; '.'
00000000000009cc         db  0x00 ; '.'
00000000000009cd         db  0x00 ; '.'
00000000000009ce         db  0x00 ; '.'
00000000000009cf         db  0x00 ; '.'
00000000000009d0         db  0xc3 ; '.'
00000000000009d1         db  0x01 ; '.'
00000000000009d2         db  0x00 ; '.'
00000000000009d3         db  0x00 ; '.'
00000000000009d4         db  0x12 ; '.'
00000000000009d5         db  0x00 ; '.'
00000000000009d6         db  0x00 ; '.'
00000000000009d7         db  0x00 ; '.'
00000000000009d8         db  0x00 ; '.'
00000000000009d9         db  0x00 ; '.'
00000000000009da         db  0x00 ; '.'
00000000000009db         db  0x00 ; '.'
00000000000009dc         db  0x00 ; '.'
00000000000009dd         db  0x00 ; '.'
00000000000009de         db  0x00 ; '.'
00000000000009df         db  0x00 ; '.'
00000000000009e0         db  0x00 ; '.'
00000000000009e1         db  0x00 ; '.'
00000000000009e2         db  0x00 ; '.'
00000000000009e3         db  0x00 ; '.'
00000000000009e4         db  0x00 ; '.'
00000000000009e5         db  0x00 ; '.'
00000000000009e6         db  0x00 ; '.'
00000000000009e7         db  0x00 ; '.'
00000000000009e8         db  0x54 ; 'T'
00000000000009e9         db  0x03 ; '.'
00000000000009ea         db  0x00 ; '.'
00000000000009eb         db  0x00 ; '.'
00000000000009ec         db  0x12 ; '.'
00000000000009ed         db  0x00 ; '.'
00000000000009ee         db  0x00 ; '.'
00000000000009ef         db  0x00 ; '.'
00000000000009f0         db  0x00 ; '.'
00000000000009f1         db  0x00 ; '.'
00000000000009f2         db  0x00 ; '.'
00000000000009f3         db  0x00 ; '.'
00000000000009f4         db  0x00 ; '.'
00000000000009f5         db  0x00 ; '.'
00000000000009f6         db  0x00 ; '.'
00000000000009f7         db  0x00 ; '.'
00000000000009f8         db  0x00 ; '.'
00000000000009f9         db  0x00 ; '.'
00000000000009fa         db  0x00 ; '.'
00000000000009fb         db  0x00 ; '.'
00000000000009fc         db  0x00 ; '.'
00000000000009fd         db  0x00 ; '.'
00000000000009fe         db  0x00 ; '.'
00000000000009ff         db  0x00 ; '.'
0000000000000a00         db  0x39 ; '9'
0000000000000a01         db  0x01 ; '.'
0000000000000a02         db  0x00 ; '.'
0000000000000a03         db  0x00 ; '.'
0000000000000a04         db  0x12 ; '.'
0000000000000a05         db  0x00 ; '.'
0000000000000a06         db  0x00 ; '.'
0000000000000a07         db  0x00 ; '.'
0000000000000a08         db  0x00 ; '.'
0000000000000a09         db  0x00 ; '.'
0000000000000a0a         db  0x00 ; '.'
0000000000000a0b         db  0x00 ; '.'
0000000000000a0c         db  0x00 ; '.'
0000000000000a0d         db  0x00 ; '.'
0000000000000a0e         db  0x00 ; '.'
0000000000000a0f         db  0x00 ; '.'
0000000000000a10         db  0x00 ; '.'
0000000000000a11         db  0x00 ; '.'
0000000000000a12         db  0x00 ; '.'
0000000000000a13         db  0x00 ; '.'
0000000000000a14         db  0x00 ; '.'
0000000000000a15         db  0x00 ; '.'
0000000000000a16         db  0x00 ; '.'
0000000000000a17         db  0x00 ; '.'
0000000000000a18         db  0x2a ; '*'
0000000000000a19         db  0x01 ; '.'
0000000000000a1a         db  0x00 ; '.'
0000000000000a1b         db  0x00 ; '.'
0000000000000a1c         db  0x12 ; '.'
0000000000000a1d         db  0x00 ; '.'
0000000000000a1e         db  0x00 ; '.'
0000000000000a1f         db  0x00 ; '.'
0000000000000a20         db  0x00 ; '.'
0000000000000a21         db  0x00 ; '.'
0000000000000a22         db  0x00 ; '.'
0000000000000a23         db  0x00 ; '.'
0000000000000a24         db  0x00 ; '.'
0000000000000a25         db  0x00 ; '.'
0000000000000a26         db  0x00 ; '.'
0000000000000a27         db  0x00 ; '.'
0000000000000a28         db  0x00 ; '.'
0000000000000a29         db  0x00 ; '.'
0000000000000a2a         db  0x00 ; '.'
0000000000000a2b         db  0x00 ; '.'
0000000000000a2c         db  0x00 ; '.'
0000000000000a2d         db  0x00 ; '.'
0000000000000a2e         db  0x00 ; '.'
0000000000000a2f         db  0x00 ; '.'
0000000000000a30         db  0xda ; '.'
0000000000000a31         db  0x00 ; '.'
0000000000000a32         db  0x00 ; '.'
0000000000000a33         db  0x00 ; '.'
0000000000000a34         db  0x12 ; '.'
0000000000000a35         db  0x00 ; '.'
0000000000000a36         db  0x00 ; '.'
0000000000000a37         db  0x00 ; '.'
0000000000000a38         db  0x00 ; '.'
0000000000000a39         db  0x00 ; '.'
0000000000000a3a         db  0x00 ; '.'
0000000000000a3b         db  0x00 ; '.'
0000000000000a3c         db  0x00 ; '.'
0000000000000a3d         db  0x00 ; '.'
0000000000000a3e         db  0x00 ; '.'
0000000000000a3f         db  0x00 ; '.'
0000000000000a40         db  0x00 ; '.'
0000000000000a41         db  0x00 ; '.'
0000000000000a42         db  0x00 ; '.'
0000000000000a43         db  0x00 ; '.'
0000000000000a44         db  0x00 ; '.'
0000000000000a45         db  0x00 ; '.'
0000000000000a46         db  0x00 ; '.'
0000000000000a47         db  0x00 ; '.'
0000000000000a48         db  0x4b ; 'K'
0000000000000a49         db  0x02 ; '.'
0000000000000a4a         db  0x00 ; '.'
0000000000000a4b         db  0x00 ; '.'
0000000000000a4c         db  0x12 ; '.'
0000000000000a4d         db  0x00 ; '.'
0000000000000a4e         db  0x00 ; '.'
0000000000000a4f         db  0x00 ; '.'
0000000000000a50         db  0x00 ; '.'
0000000000000a51         db  0x00 ; '.'
0000000000000a52         db  0x00 ; '.'
0000000000000a53         db  0x00 ; '.'
0000000000000a54         db  0x00 ; '.'
0000000000000a55         db  0x00 ; '.'
0000000000000a56         db  0x00 ; '.'
0000000000000a57         db  0x00 ; '.'
0000000000000a58         db  0x00 ; '.'
0000000000000a59         db  0x00 ; '.'
0000000000000a5a         db  0x00 ; '.'
0000000000000a5b         db  0x00 ; '.'
0000000000000a5c         db  0x00 ; '.'
0000000000000a5d         db  0x00 ; '.'
0000000000000a5e         db  0x00 ; '.'
0000000000000a5f         db  0x00 ; '.'
0000000000000a60         db  0x7f ; '.'
0000000000000a61         db  0x01 ; '.'
0000000000000a62         db  0x00 ; '.'
0000000000000a63         db  0x00 ; '.'
0000000000000a64         db  0x12 ; '.'
0000000000000a65         db  0x00 ; '.'
0000000000000a66         db  0x00 ; '.'
0000000000000a67         db  0x00 ; '.'
0000000000000a68         db  0x00 ; '.'
0000000000000a69         db  0x00 ; '.'
0000000000000a6a         db  0x00 ; '.'
0000000000000a6b         db  0x00 ; '.'
0000000000000a6c         db  0x00 ; '.'
0000000000000a6d         db  0x00 ; '.'
0000000000000a6e         db  0x00 ; '.'
0000000000000a6f         db  0x00 ; '.'
0000000000000a70         db  0x00 ; '.'
0000000000000a71         db  0x00 ; '.'
0000000000000a72         db  0x00 ; '.'
0000000000000a73         db  0x00 ; '.'
0000000000000a74         db  0x00 ; '.'
0000000000000a75         db  0x00 ; '.'
0000000000000a76         db  0x00 ; '.'
0000000000000a77         db  0x00 ; '.'
0000000000000a78         db  0xce ; '.'
0000000000000a79         db  0x03 ; '.'
0000000000000a7a         db  0x00 ; '.'
0000000000000a7b         db  0x00 ; '.'
0000000000000a7c         db  0x20 ; ' '
0000000000000a7d         db  0x00 ; '.'
0000000000000a7e         db  0x00 ; '.'
0000000000000a7f         db  0x00 ; '.'
0000000000000a80         db  0x00 ; '.'
0000000000000a81         db  0x00 ; '.'
0000000000000a82         db  0x00 ; '.'
0000000000000a83         db  0x00 ; '.'
0000000000000a84         db  0x00 ; '.'
0000000000000a85         db  0x00 ; '.'
0000000000000a86         db  0x00 ; '.'
0000000000000a87         db  0x00 ; '.'
0000000000000a88         db  0x00 ; '.'
0000000000000a89         db  0x00 ; '.'
0000000000000a8a         db  0x00 ; '.'
0000000000000a8b         db  0x00 ; '.'
0000000000000a8c         db  0x00 ; '.'
0000000000000a8d         db  0x00 ; '.'
0000000000000a8e         db  0x00 ; '.'
0000000000000a8f         db  0x00 ; '.'
0000000000000a90         db  0xcd ; '.'
0000000000000a91         db  0x01 ; '.'
0000000000000a92         db  0x00 ; '.'
0000000000000a93         db  0x00 ; '.'
0000000000000a94         db  0x12 ; '.'
0000000000000a95         db  0x00 ; '.'
0000000000000a96         db  0x00 ; '.'
0000000000000a97         db  0x00 ; '.'
0000000000000a98         db  0x00 ; '.'
0000000000000a99         db  0x00 ; '.'
0000000000000a9a         db  0x00 ; '.'
0000000000000a9b         db  0x00 ; '.'
0000000000000a9c         db  0x00 ; '.'
0000000000000a9d         db  0x00 ; '.'
0000000000000a9e         db  0x00 ; '.'
0000000000000a9f         db  0x00 ; '.'
0000000000000aa0         db  0x00 ; '.'
0000000000000aa1         db  0x00 ; '.'
0000000000000aa2         db  0x00 ; '.'
0000000000000aa3         db  0x00 ; '.'
0000000000000aa4         db  0x00 ; '.'
0000000000000aa5         db  0x00 ; '.'
0000000000000aa6         db  0x00 ; '.'
0000000000000aa7         db  0x00 ; '.'
0000000000000aa8         db  0xb2 ; '.'
0000000000000aa9         db  0x01 ; '.'
0000000000000aaa         db  0x00 ; '.'
0000000000000aab         db  0x00 ; '.'
0000000000000aac         db  0x12 ; '.'
0000000000000aad         db  0x00 ; '.'
0000000000000aae         db  0x00 ; '.'
0000000000000aaf         db  0x00 ; '.'
0000000000000ab0         db  0x00 ; '.'
0000000000000ab1         db  0x00 ; '.'
0000000000000ab2         db  0x00 ; '.'
0000000000000ab3         db  0x00 ; '.'
0000000000000ab4         db  0x00 ; '.'
0000000000000ab5         db  0x00 ; '.'
0000000000000ab6         db  0x00 ; '.'
0000000000000ab7         db  0x00 ; '.'
0000000000000ab8         db  0x00 ; '.'
0000000000000ab9         db  0x00 ; '.'
0000000000000aba         db  0x00 ; '.'
0000000000000abb         db  0x00 ; '.'
0000000000000abc         db  0x00 ; '.'
0000000000000abd         db  0x00 ; '.'
0000000000000abe         db  0x00 ; '.'
0000000000000abf         db  0x00 ; '.'
0000000000000ac0         db  0xac ; '.'
0000000000000ac1         db  0x00 ; '.'
0000000000000ac2         db  0x00 ; '.'
0000000000000ac3         db  0x00 ; '.'
0000000000000ac4         db  0x12 ; '.'
0000000000000ac5         db  0x00 ; '.'
0000000000000ac6         db  0x00 ; '.'
0000000000000ac7         db  0x00 ; '.'
0000000000000ac8         db  0x00 ; '.'
0000000000000ac9         db  0x00 ; '.'
0000000000000aca         db  0x00 ; '.'
0000000000000acb         db  0x00 ; '.'
0000000000000acc         db  0x00 ; '.'
0000000000000acd         db  0x00 ; '.'
0000000000000ace         db  0x00 ; '.'
0000000000000acf         db  0x00 ; '.'
0000000000000ad0         db  0x00 ; '.'
0000000000000ad1         db  0x00 ; '.'
0000000000000ad2         db  0x00 ; '.'
0000000000000ad3         db  0x00 ; '.'
0000000000000ad4         db  0x00 ; '.'
0000000000000ad5         db  0x00 ; '.'
0000000000000ad6         db  0x00 ; '.'
0000000000000ad7         db  0x00 ; '.'
0000000000000ad8         db  0xa4 ; '.'
0000000000000ad9         db  0x02 ; '.'
0000000000000ada         db  0x00 ; '.'
0000000000000adb         db  0x00 ; '.'
0000000000000adc         db  0x22 ; '"'
0000000000000add         db  0x00 ; '.'
0000000000000ade         db  0x00 ; '.'
0000000000000adf         db  0x00 ; '.'
0000000000000ae0         db  0x00 ; '.'
0000000000000ae1         db  0x00 ; '.'
0000000000000ae2         db  0x00 ; '.'
0000000000000ae3         db  0x00 ; '.'
0000000000000ae4         db  0x00 ; '.'
0000000000000ae5         db  0x00 ; '.'
0000000000000ae6         db  0x00 ; '.'
0000000000000ae7         db  0x00 ; '.'
0000000000000ae8         db  0x00 ; '.'
0000000000000ae9         db  0x00 ; '.'
0000000000000aea         db  0x00 ; '.'
0000000000000aeb         db  0x00 ; '.'
0000000000000aec         db  0x00 ; '.'
0000000000000aed         db  0x00 ; '.'
0000000000000aee         db  0x00 ; '.'
0000000000000aef         db  0x00 ; '.'
0000000000000af0         db  0xe8 ; '.'
0000000000000af1         db  0x01 ; '.'
0000000000000af2         db  0x00 ; '.'
0000000000000af3         db  0x00 ; '.'
0000000000000af4         db  0x12 ; '.'
0000000000000af5         db  0x00 ; '.'
0000000000000af6         db  0x00 ; '.'
0000000000000af7         db  0x00 ; '.'
0000000000000af8         db  0x00 ; '.'
0000000000000af9         db  0x00 ; '.'
0000000000000afa         db  0x00 ; '.'
0000000000000afb         db  0x00 ; '.'
0000000000000afc         db  0x00 ; '.'
0000000000000afd         db  0x00 ; '.'
0000000000000afe         db  0x00 ; '.'
0000000000000aff         db  0x00 ; '.'
0000000000000b00         db  0x00 ; '.'
0000000000000b01         db  0x00 ; '.'
0000000000000b02         db  0x00 ; '.'
0000000000000b03         db  0x00 ; '.'
0000000000000b04         db  0x00 ; '.'
0000000000000b05         db  0x00 ; '.'
0000000000000b06         db  0x00 ; '.'
0000000000000b07         db  0x00 ; '.'
0000000000000b08         db  0x8d ; '.'
0000000000000b09         db  0x01 ; '.'
0000000000000b0a         db  0x00 ; '.'
0000000000000b0b         db  0x00 ; '.'
0000000000000b0c         db  0x11 ; '.'
0000000000000b0d         db  0x00 ; '.'
0000000000000b0e         db  0x19 ; '.'
0000000000000b0f         db  0x00 ; '.'
0000000000000b10         db  0xc8 ; '.'
0000000000000b11         db  0x00 ; '.'
0000000000000b12         db  0x21 ; '!'
0000000000000b13         db  0x00 ; '.'
0000000000000b14         db  0x00 ; '.'
0000000000000b15         db  0x00 ; '.'
0000000000000b16         db  0x00 ; '.'
0000000000000b17         db  0x00 ; '.'
0000000000000b18         db  0x08 ; '.'
0000000000000b19         db  0x00 ; '.'
0000000000000b1a         db  0x00 ; '.'
0000000000000b1b         db  0x00 ; '.'
0000000000000b1c         db  0x00 ; '.'
0000000000000b1d         db  0x00 ; '.'
0000000000000b1e         db  0x00 ; '.'
0000000000000b1f         db  0x00 ; '.'
0000000000000b20         db  0x39 ; '9'
0000000000000b21         db  0x03 ; '.'
0000000000000b22         db  0x00 ; '.'
0000000000000b23         db  0x00 ; '.'
0000000000000b24         db  0x11 ; '.'
0000000000000b25         db  0x00 ; '.'
0000000000000b26         db  0x19 ; '.'
0000000000000b27         db  0x00 ; '.'
0000000000000b28         db  0xc0 ; '.'
0000000000000b29         db  0x00 ; '.'
0000000000000b2a         db  0x21 ; '!'
0000000000000b2b         db  0x00 ; '.'
0000000000000b2c         db  0x00 ; '.'
0000000000000b2d         db  0x00 ; '.'
0000000000000b2e         db  0x00 ; '.'
0000000000000b2f         db  0x00 ; '.'
0000000000000b30         db  0x08 ; '.'
0000000000000b31         db  0x00 ; '.'
0000000000000b32         db  0x00 ; '.'
0000000000000b33         db  0x00 ; '.'
0000000000000b34         db  0x00 ; '.'
0000000000000b35         db  0x00 ; '.'
0000000000000b36         db  0x00 ; '.'
0000000000000b37         db  0x00 ; '.'
0000000000000b38         db  0xd3 ; '.'
0000000000000b39         db  0x00 ; '.'
0000000000000b3a         db  0x00 ; '.'
0000000000000b3b         db  0x00 ; '.'
0000000000000b3c         db  0x11 ; '.'
0000000000000b3d         db  0x00 ; '.'
0000000000000b3e         db  0x19 ; '.'
0000000000000b3f         db  0x00 ; '.'
0000000000000b40         db  0xd0 ; '.'
0000000000000b41         db  0x00 ; '.'
0000000000000b42         db  0x21 ; '!'
0000000000000b43         db  0x00 ; '.'
0000000000000b44         db  0x00 ; '.'
0000000000000b45         db  0x00 ; '.'
0000000000000b46         db  0x00 ; '.'
0000000000000b47         db  0x00 ; '.'
0000000000000b48         db  0x08 ; '.'
0000000000000b49         db  0x00 ; '.'
0000000000000b4a         db  0x00 ; '.'
0000000000000b4b         db  0x00 ; '.'
0000000000000b4c         db  0x00 ; '.'
0000000000000b4d         db  0x00 ; '.'
0000000000000b4e         db  0x00 ; '.'
0000000000000b4f         db  0x00 ; '.'
0000000000000b50         db  0xed ; '.'
0000000000000b51         db  0x00 ; '.'
0000000000000b52         db  0x00 ; '.'
0000000000000b53         db  0x00 ; '.'
0000000000000b54         db  0x21 ; '!'
0000000000000b55         db  0x00 ; '.'
0000000000000b56         db  0x19 ; '.'
0000000000000b57         db  0x00 ; '.'
0000000000000b58         db  0xe8 ; '.'
0000000000000b59         db  0x00 ; '.'
0000000000000b5a         db  0x21 ; '!'
0000000000000b5b         db  0x00 ; '.'
0000000000000b5c         db  0x00 ; '.'
0000000000000b5d         db  0x00 ; '.'
0000000000000b5e         db  0x00 ; '.'
0000000000000b5f         db  0x00 ; '.'
0000000000000b60         db  0x08 ; '.'
0000000000000b61         db  0x00 ; '.'
0000000000000b62         db  0x00 ; '.'
0000000000000b63         db  0x00 ; '.'
0000000000000b64         db  0x00 ; '.'
0000000000000b65         db  0x00 ; '.'
0000000000000b66         db  0x00 ; '.'
0000000000000b67         db  0x00 ; '.'
0000000000000b68         db  0x44 ; 'D'
0000000000000b69         db  0x03 ; '.'
0000000000000b6a         db  0x00 ; '.'
0000000000000b6b         db  0x00 ; '.'
0000000000000b6c         db  0x11 ; '.'
0000000000000b6d         db  0x00 ; '.'
0000000000000b6e         db  0x19 ; '.'
0000000000000b6f         db  0x00 ; '.'
0000000000000b70         db  0xe8 ; '.'
0000000000000b71         db  0x00 ; '.'
0000000000000b72         db  0x21 ; '!'
0000000000000b73         db  0x00 ; '.'
0000000000000b74         db  0x00 ; '.'
0000000000000b75         db  0x00 ; '.'
0000000000000b76         db  0x00 ; '.'
0000000000000b77         db  0x00 ; '.'
0000000000000b78         db  0x08 ; '.'
0000000000000b79         db  0x00 ; '.'
0000000000000b7a         db  0x00 ; '.'
0000000000000b7b         db  0x00 ; '.'
0000000000000b7c         db  0x00 ; '.'
0000000000000b7d         db  0x00 ; '.'
0000000000000b7e         db  0x00 ; '.'
0000000000000b7f         db  0x00 ; '.'
0000000000000b80         db  0x7f ; '.'
0000000000000b81         db  0x02 ; '.'
0000000000000b82         db  0x00 ; '.'
0000000000000b83         db  0x00 ; '.'
0000000000000b84         db  0x21 ; '!'
0000000000000b85         db  0x00 ; '.'
0000000000000b86         db  0x19 ; '.'
0000000000000b87         db  0x00 ; '.'
0000000000000b88         db  0xc0 ; '.'
0000000000000b89         db  0x00 ; '.'
0000000000000b8a         db  0x21 ; '!'
0000000000000b8b         db  0x00 ; '.'
0000000000000b8c         db  0x00 ; '.'
0000000000000b8d         db  0x00 ; '.'
0000000000000b8e         db  0x00 ; '.'
0000000000000b8f         db  0x00 ; '.'
0000000000000b90         db  0x08 ; '.'
0000000000000b91         db  0x00 ; '.'
0000000000000b92         db  0x00 ; '.'
0000000000000b93         db  0x00 ; '.'
0000000000000b94         db  0x00 ; '.'
0000000000000b95         db  0x00 ; '.'
0000000000000b96         db  0x00 ; '.'
0000000000000b97         db  0x00 ; '.'
0000000000000b98         db  0x0f ; '.'
0000000000000b99         db  0x02 ; '.'
0000000000000b9a         db  0x00 ; '.'
0000000000000b9b         db  0x00 ; '.'
0000000000000b9c         db  0x11 ; '.'
0000000000000b9d         db  0x00 ; '.'
0000000000000b9e         db  0x19 ; '.'
0000000000000b9f         db  0x00 ; '.'
0000000000000ba0         db  0x00 ; '.'
0000000000000ba1         db  0x01 ; '.'
0000000000000ba2         db  0x21 ; '!'
0000000000000ba3         db  0x00 ; '.'
0000000000000ba4         db  0x00 ; '.'
0000000000000ba5         db  0x00 ; '.'
0000000000000ba6         db  0x00 ; '.'
0000000000000ba7         db  0x00 ; '.'
0000000000000ba8         db  0x08 ; '.'
0000000000000ba9         db  0x00 ; '.'
0000000000000baa         db  0x00 ; '.'
0000000000000bab         db  0x00 ; '.'
0000000000000bac         db  0x00 ; '.'
0000000000000bad         db  0x00 ; '.'
0000000000000bae         db  0x00 ; '.'
0000000000000baf         db  0x00 ; '.'
0000000000000bb0         db  0x4e ; 'N'
0000000000000bb1         db  0x00 ; '.'
0000000000000bb2         db  0x00 ; '.'
0000000000000bb3         db  0x00 ; '.'
0000000000000bb4         db  0x11 ; '.'
0000000000000bb5         db  0x00 ; '.'
0000000000000bb6         db  0x19 ; '.'
0000000000000bb7         db  0x00 ; '.'
0000000000000bb8         db  0xd8 ; '.'
0000000000000bb9         db  0x00 ; '.'
0000000000000bba         db  0x21 ; '!'
0000000000000bbb         db  0x00 ; '.'
0000000000000bbc         db  0x00 ; '.'
0000000000000bbd         db  0x00 ; '.'
0000000000000bbe         db  0x00 ; '.'
0000000000000bbf         db  0x00 ; '.'
0000000000000bc0         db  0x04 ; '.'
0000000000000bc1         db  0x00 ; '.'
0000000000000bc2         db  0x00 ; '.'
0000000000000bc3         db  0x00 ; '.'
0000000000000bc4         db  0x00 ; '.'
0000000000000bc5         db  0x00 ; '.'
0000000000000bc6         db  0x00 ; '.'
0000000000000bc7         db  0x00 ; '.'
0000000000000bc8         db  0xfd ; '.'
0000000000000bc9         db  0x01 ; '.'
0000000000000bca         db  0x00 ; '.'
0000000000000bcb         db  0x00 ; '.'
0000000000000bcc         db  0x11 ; '.'
0000000000000bcd         db  0x00 ; '.'
0000000000000bce         db  0x19 ; '.'
0000000000000bcf         db  0x00 ; '.'
0000000000000bd0         db  0xe0 ; '.'
0000000000000bd1         db  0x00 ; '.'
0000000000000bd2         db  0x21 ; '!'
0000000000000bd3         db  0x00 ; '.'
0000000000000bd4         db  0x00 ; '.'
0000000000000bd5         db  0x00 ; '.'
0000000000000bd6         db  0x00 ; '.'
0000000000000bd7         db  0x00 ; '.'
0000000000000bd8         db  0x08 ; '.'
0000000000000bd9         db  0x00 ; '.'
0000000000000bda         db  0x00 ; '.'
0000000000000bdb         db  0x00 ; '.'
0000000000000bdc         db  0x00 ; '.'
0000000000000bdd         db  0x00 ; '.'
0000000000000bde         db  0x00 ; '.'
0000000000000bdf         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0xbe0; 0xfc8[ (1000 bytes)
        ; File offset : [3040; 4040[ (1000 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000000be0         db  0x00 ; '.'
0000000000000be1         db  0x6c ; 'l'
0000000000000be2         db  0x69 ; 'i'
0000000000000be3         db  0x62 ; 'b'
0000000000000be4         db  0x63 ; 'c'
0000000000000be5         db  0x2e ; '.'
0000000000000be6         db  0x73 ; 's'
0000000000000be7         db  0x6f ; 'o'
0000000000000be8         db  0x2e ; '.'
0000000000000be9         db  0x36 ; '6'
0000000000000bea         db  0x00 ; '.'
0000000000000beb         db  0x66 ; 'f'
0000000000000bec         db  0x66 ; 'f'
0000000000000bed         db  0x6c ; 'l'
0000000000000bee         db  0x75 ; 'u'
0000000000000bef         db  0x73 ; 's'
0000000000000bf0         db  0x68 ; 'h'
0000000000000bf1         db  0x00 ; '.'
0000000000000bf2         db  0x73 ; 's'
0000000000000bf3         db  0x74 ; 't'
0000000000000bf4         db  0x72 ; 'r'
0000000000000bf5         db  0x63 ; 'c'
0000000000000bf6         db  0x70 ; 'p'
0000000000000bf7         db  0x79 ; 'y'
0000000000000bf8         db  0x00 ; '.'
0000000000000bf9         db  0x5f ; '_'
0000000000000bfa         db  0x5f ; '_'
0000000000000bfb         db  0x70 ; 'p'
0000000000000bfc         db  0x72 ; 'r'
0000000000000bfd         db  0x69 ; 'i'
0000000000000bfe         db  0x6e ; 'n'
0000000000000bff         db  0x74 ; 't'
                     aFchk:
0000000000000c00         db         "f_chk", 0
0000000000000c06         db  0x72 ; 'r'
0000000000000c07         db  0x65 ; 'e'
0000000000000c08         db  0x61 ; 'a'
0000000000000c09         db  0x64 ; 'd'
0000000000000c0a         db  0x64 ; 'd'
0000000000000c0b         db  0x69 ; 'i'
0000000000000c0c         db  0x72 ; 'r'
0000000000000c0d         db  0x00 ; '.'
0000000000000c0e         db  0x73 ; 's'
0000000000000c0f         db  0x65 ; 'e'
0000000000000c10         db  0x74 ; 't'
0000000000000c11         db  0x6c ; 'l'
0000000000000c12         db  0x6f ; 'o'
0000000000000c13         db  0x63 ; 'c'
0000000000000c14         db  0x61 ; 'a'
0000000000000c15         db  0x6c ; 'l'
0000000000000c16         db  0x65 ; 'e'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x6d ; 'm'
0000000000000c19         db  0x62 ; 'b'
0000000000000c1a         db  0x72 ; 'r'
0000000000000c1b         db  0x74 ; 't'
0000000000000c1c         db  0x6f ; 'o'
0000000000000c1d         db  0x77 ; 'w'
0000000000000c1e         db  0x63 ; 'c'
0000000000000c1f         db  0x00 ; '.'
0000000000000c20         db  0x66 ; 'f'
0000000000000c21         db  0x6f ; 'o'
0000000000000c22         db  0x70 ; 'p'
0000000000000c23         db  0x65 ; 'e'
0000000000000c24         db  0x6e ; 'n'
0000000000000c25         db  0x00 ; '.'
0000000000000c26         db  0x73 ; 's'
0000000000000c27         db  0x74 ; 't'
0000000000000c28         db  0x72 ; 'r'
0000000000000c29         db  0x6e ; 'n'
0000000000000c2a         db  0x63 ; 'c'
0000000000000c2b         db  0x6d ; 'm'
0000000000000c2c         db  0x70 ; 'p'
0000000000000c2d         db  0x00 ; '.'
0000000000000c2e         db  0x6f ; 'o'
0000000000000c2f         db  0x70 ; 'p'
0000000000000c30         db  0x74 ; 't'
0000000000000c31         db  0x69 ; 'i'
0000000000000c32         db  0x6e ; 'n'
0000000000000c33         db  0x64 ; 'd'
0000000000000c34         db  0x00 ; '.'
0000000000000c35         db  0x73 ; 's'
0000000000000c36         db  0x74 ; 't'
0000000000000c37         db  0x72 ; 'r'
0000000000000c38         db  0x72 ; 'r'
0000000000000c39         db  0x63 ; 'c'
0000000000000c3a         db  0x68 ; 'h'
0000000000000c3b         db  0x72 ; 'r'
0000000000000c3c         db  0x00 ; '.'
0000000000000c3d         db  0x72 ; 'r'
0000000000000c3e         db  0x70 ; 'p'
0000000000000c3f         db  0x6d ; 'm'
0000000000000c40         db  0x61 ; 'a'
0000000000000c41         db  0x74 ; 't'
0000000000000c42         db  0x63 ; 'c'
0000000000000c43         db  0x68 ; 'h'
0000000000000c44         db  0x00 ; '.'
0000000000000c45         db  0x64 ; 'd'
0000000000000c46         db  0x63 ; 'c'
0000000000000c47         db  0x67 ; 'g'
0000000000000c48         db  0x65 ; 'e'
0000000000000c49         db  0x74 ; 't'
0000000000000c4a         db  0x74 ; 't'
0000000000000c4b         db  0x65 ; 'e'
0000000000000c4c         db  0x78 ; 'x'
0000000000000c4d         db  0x74 ; 't'
0000000000000c4e         db  0x00 ; '.'
0000000000000c4f         db  0x75 ; 'u'
0000000000000c50         db  0x6e ; 'n'
0000000000000c51         db  0x6c ; 'l'
0000000000000c52         db  0x69 ; 'i'
0000000000000c53         db  0x6e ; 'n'
0000000000000c54         db  0x6b ; 'k'
0000000000000c55         db  0x61 ; 'a'
0000000000000c56         db  0x74 ; 't'
0000000000000c57         db  0x00 ; '.'
0000000000000c58         db  0x63 ; 'c'
0000000000000c59         db  0x6c ; 'l'
0000000000000c5a         db  0x6f ; 'o'
0000000000000c5b         db  0x73 ; 's'
0000000000000c5c         db  0x65 ; 'e'
0000000000000c5d         db  0x64 ; 'd'
0000000000000c5e         db  0x69 ; 'i'
0000000000000c5f         db  0x72 ; 'r'
0000000000000c60         db  0x00 ; '.'
0000000000000c61         db  0x65 ; 'e'
0000000000000c62         db  0x72 ; 'r'
0000000000000c63         db  0x72 ; 'r'
0000000000000c64         db  0x6f ; 'o'
0000000000000c65         db  0x72 ; 'r'
0000000000000c66         db  0x00 ; '.'
0000000000000c67         db  0x5f ; '_'
0000000000000c68         db  0x5f ; '_'
0000000000000c69         db  0x72 ; 'r'
0000000000000c6a         db  0x65 ; 'e'
0000000000000c6b         db  0x61 ; 'a'
0000000000000c6c         db  0x64 ; 'd'
0000000000000c6d         db  0x5f ; '_'
0000000000000c6e         db  0x63 ; 'c'
0000000000000c6f         db  0x68 ; 'h'
0000000000000c70         db  0x6b ; 'k'
0000000000000c71         db  0x00 ; '.'
0000000000000c72         db  0x5f ; '_'
0000000000000c73         db  0x5f ; '_'
0000000000000c74         db  0x73 ; 's'
0000000000000c75         db  0x74 ; 't'
0000000000000c76         db  0x61 ; 'a'
0000000000000c77         db  0x63 ; 'c'
0000000000000c78         db  0x6b ; 'k'
0000000000000c79         db  0x5f ; '_'
0000000000000c7a         db  0x63 ; 'c'
0000000000000c7b         db  0x68 ; 'h'
0000000000000c7c         db  0x6b ; 'k'
0000000000000c7d         db  0x5f ; '_'
0000000000000c7e         db  0x66 ; 'f'
0000000000000c7f         db  0x61 ; 'a'
0000000000000c80         db  0x69 ; 'i'
0000000000000c81         db  0x6c ; 'l'
0000000000000c82         db  0x00 ; '.'
0000000000000c83         db  0x5f ; '_'
0000000000000c84         db  0x5f ; '_'
0000000000000c85         db  0x6c ; 'l'
0000000000000c86         db  0x78 ; 'x'
0000000000000c87         db  0x73 ; 's'
0000000000000c88         db  0x74 ; 't'
0000000000000c89         db  0x61 ; 'a'
0000000000000c8a         db  0x74 ; 't'
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x69 ; 'i'
0000000000000c8d         db  0x73 ; 's'
0000000000000c8e         db  0x77 ; 'w'
0000000000000c8f         db  0x70 ; 'p'
0000000000000c90         db  0x72 ; 'r'
0000000000000c91         db  0x69 ; 'i'
0000000000000c92         db  0x6e ; 'n'
0000000000000c93         db  0x74 ; 't'
0000000000000c94         db  0x00 ; '.'
0000000000000c95         db  0x6d ; 'm'
0000000000000c96         db  0x6b ; 'k'
0000000000000c97         db  0x64 ; 'd'
0000000000000c98         db  0x69 ; 'i'
0000000000000c99         db  0x72 ; 'r'
0000000000000c9a         db  0x00 ; '.'
0000000000000c9b         db  0x72 ; 'r'
0000000000000c9c         db  0x65 ; 'e'
0000000000000c9d         db  0x61 ; 'a'
0000000000000c9e         db  0x6c ; 'l'
0000000000000c9f         db  0x6c ; 'l'
0000000000000ca0         db  0x6f ; 'o'
0000000000000ca1         db  0x63 ; 'c'
0000000000000ca2         db  0x00 ; '.'
0000000000000ca3         db  0x72 ; 'r'
0000000000000ca4         db  0x65 ; 'e'
0000000000000ca5         db  0x77 ; 'w'
0000000000000ca6         db  0x69 ; 'i'
0000000000000ca7         db  0x6e ; 'n'
0000000000000ca8         db  0x64 ; 'd'
0000000000000ca9         db  0x64 ; 'd'
0000000000000caa         db  0x69 ; 'i'
0000000000000cab         db  0x72 ; 'r'
0000000000000cac         db  0x00 ; '.'
0000000000000cad         db  0x61 ; 'a'
0000000000000cae         db  0x62 ; 'b'
0000000000000caf         db  0x6f ; 'o'
0000000000000cb0         db  0x72 ; 'r'
0000000000000cb1         db  0x74 ; 't'
0000000000000cb2         db  0x00 ; '.'
0000000000000cb3         db  0x73 ; 's'
0000000000000cb4         db  0x74 ; 't'
0000000000000cb5         db  0x64 ; 'd'
0000000000000cb6         db  0x69 ; 'i'
0000000000000cb7         db  0x6e ; 'n'
0000000000000cb8         db  0x00 ; '.'
0000000000000cb9         db  0x5f ; '_'
0000000000000cba         db  0x65 ; 'e'
0000000000000cbb         db  0x78 ; 'x'
0000000000000cbc         db  0x69 ; 'i'
0000000000000cbd         db  0x74 ; 't'
0000000000000cbe         db  0x00 ; '.'
0000000000000cbf         db  0x67 ; 'g'
0000000000000cc0         db  0x65 ; 'e'
0000000000000cc1         db  0x74 ; 't'
0000000000000cc2         db  0x70 ; 'p'
0000000000000cc3         db  0x69 ; 'i'
0000000000000cc4         db  0x64 ; 'd'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x73 ; 's'
0000000000000cc7         db  0x74 ; 't'
0000000000000cc8         db  0x72 ; 'r'
0000000000000cc9         db  0x73 ; 's'
0000000000000cca         db  0x70 ; 'p'
0000000000000ccb         db  0x6e ; 'n'
0000000000000ccc         db  0x00 ; '.'
0000000000000ccd         db  0x70 ; 'p'
0000000000000cce         db  0x72 ; 'r'
0000000000000ccf         db  0x6f ; 'o'
0000000000000cd0         db  0x67 ; 'g'
0000000000000cd1         db  0x72 ; 'r'
0000000000000cd2         db  0x61 ; 'a'
0000000000000cd3         db  0x6d ; 'm'
0000000000000cd4         db  0x5f ; '_'
0000000000000cd5         db  0x69 ; 'i'
0000000000000cd6         db  0x6e ; 'n'
0000000000000cd7         db  0x76 ; 'v'
0000000000000cd8         db  0x6f ; 'o'
0000000000000cd9         db  0x63 ; 'c'
0000000000000cda         db  0x61 ; 'a'
0000000000000cdb         db  0x74 ; 't'
0000000000000cdc         db  0x69 ; 'i'
0000000000000cdd         db  0x6f ; 'o'
0000000000000cde         db  0x6e ; 'n'
0000000000000cdf         db  0x5f ; '_'
0000000000000ce0         db  0x6e ; 'n'
0000000000000ce1         db  0x61 ; 'a'
0000000000000ce2         db  0x6d ; 'm'
0000000000000ce3         db  0x65 ; 'e'
0000000000000ce4         db  0x00 ; '.'
0000000000000ce5         db  0x5f ; '_'
0000000000000ce6         db  0x5f ; '_'
0000000000000ce7         db  0x61 ; 'a'
0000000000000ce8         db  0x73 ; 's'
0000000000000ce9         db  0x73 ; 's'
0000000000000cea         db  0x65 ; 'e'
0000000000000ceb         db  0x72 ; 'r'
0000000000000cec         db  0x74 ; 't'
0000000000000ced         db  0x5f ; '_'
0000000000000cee         db  0x66 ; 'f'
0000000000000cef         db  0x61 ; 'a'
0000000000000cf0         db  0x69 ; 'i'
0000000000000cf1         db  0x6c ; 'l'
0000000000000cf2         db  0x00 ; '.'
0000000000000cf3         db  0x5f ; '_'
0000000000000cf4         db  0x5f ; '_'
0000000000000cf5         db  0x63 ; 'c'
0000000000000cf6         db  0x74 ; 't'
0000000000000cf7         db  0x79 ; 'y'
0000000000000cf8         db  0x70 ; 'p'
0000000000000cf9         db  0x65 ; 'e'
0000000000000cfa         db  0x5f ; '_'
0000000000000cfb         db  0x67 ; 'g'
0000000000000cfc         db  0x65 ; 'e'
0000000000000cfd         db  0x74 ; 't'
0000000000000cfe         db  0x5f ; '_'
0000000000000cff         db  0x6d ; 'm'
                     aBcurmax:
0000000000000d00         db         "b_cur_max", 0
0000000000000d0a         db  0x67 ; 'g'
0000000000000d0b         db  0x65 ; 'e'
0000000000000d0c         db  0x74 ; 't'
0000000000000d0d         db  0x70 ; 'p'
0000000000000d0e         db  0x70 ; 'p'
0000000000000d0f         db  0x69 ; 'i'
0000000000000d10         db  0x64 ; 'd'
0000000000000d11         db  0x00 ; '.'
0000000000000d12         db  0x63 ; 'c'
0000000000000d13         db  0x61 ; 'a'
0000000000000d14         db  0x6c ; 'l'
0000000000000d15         db  0x6c ; 'l'
0000000000000d16         db  0x6f ; 'o'
0000000000000d17         db  0x63 ; 'c'
0000000000000d18         db  0x00 ; '.'
0000000000000d19         db  0x72 ; 'r'
0000000000000d1a         db  0x65 ; 'e'
0000000000000d1b         db  0x6e ; 'n'
0000000000000d1c         db  0x61 ; 'a'
0000000000000d1d         db  0x6d ; 'm'
0000000000000d1e         db  0x65 ; 'e'
0000000000000d1f         db  0x61 ; 'a'
0000000000000d20         db  0x74 ; 't'
0000000000000d21         db  0x00 ; '.'
0000000000000d22         db  0x73 ; 's'
0000000000000d23         db  0x74 ; 't'
0000000000000d24         db  0x72 ; 'r'
0000000000000d25         db  0x6c ; 'l'
0000000000000d26         db  0x65 ; 'e'
0000000000000d27         db  0x6e ; 'n'
0000000000000d28         db  0x00 ; '.'
0000000000000d29         db  0x66 ; 'f'
0000000000000d2a         db  0x72 ; 'r'
0000000000000d2b         db  0x65 ; 'e'
0000000000000d2c         db  0x61 ; 'a'
0000000000000d2d         db  0x64 ; 'd'
0000000000000d2e         db  0x5f ; '_'
0000000000000d2f         db  0x75 ; 'u'
0000000000000d30         db  0x6e ; 'n'
0000000000000d31         db  0x6c ; 'l'
0000000000000d32         db  0x6f ; 'o'
0000000000000d33         db  0x63 ; 'c'
0000000000000d34         db  0x6b ; 'k'
0000000000000d35         db  0x65 ; 'e'
0000000000000d36         db  0x64 ; 'd'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0x6d ; 'm'
0000000000000d39         db  0x65 ; 'e'
0000000000000d3a         db  0x6d ; 'm'
0000000000000d3b         db  0x73 ; 's'
0000000000000d3c         db  0x65 ; 'e'
0000000000000d3d         db  0x74 ; 't'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x5f ; '_'
0000000000000d40         db  0x5f ; '_'
0000000000000d41         db  0x65 ; 'e'
0000000000000d42         db  0x72 ; 'r'
0000000000000d43         db  0x72 ; 'r'
0000000000000d44         db  0x6e ; 'n'
0000000000000d45         db  0x6f ; 'o'
0000000000000d46         db  0x5f ; '_'
0000000000000d47         db  0x6c ; 'l'
0000000000000d48         db  0x6f ; 'o'
0000000000000d49         db  0x63 ; 'c'
0000000000000d4a         db  0x61 ; 'a'
0000000000000d4b         db  0x74 ; 't'
0000000000000d4c         db  0x69 ; 'i'
0000000000000d4d         db  0x6f ; 'o'
0000000000000d4e         db  0x6e ; 'n'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0x6d ; 'm'
0000000000000d51         db  0x65 ; 'e'
0000000000000d52         db  0x6d ; 'm'
0000000000000d53         db  0x63 ; 'c'
0000000000000d54         db  0x6d ; 'm'
0000000000000d55         db  0x70 ; 'p'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x6d ; 'm'
0000000000000d58         db  0x65 ; 'e'
0000000000000d59         db  0x6d ; 'm'
0000000000000d5a         db  0x70 ; 'p'
0000000000000d5b         db  0x63 ; 'c'
0000000000000d5c         db  0x70 ; 'p'
0000000000000d5d         db  0x79 ; 'y'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x5f ; '_'
0000000000000d60         db  0x5f ; '_'
0000000000000d61         db  0x66 ; 'f'
0000000000000d62         db  0x70 ; 'p'
0000000000000d63         db  0x72 ; 'r'
0000000000000d64         db  0x69 ; 'i'
0000000000000d65         db  0x6e ; 'n'
0000000000000d66         db  0x74 ; 't'
0000000000000d67         db  0x66 ; 'f'
0000000000000d68         db  0x5f ; '_'
0000000000000d69         db  0x63 ; 'c'
0000000000000d6a         db  0x68 ; 'h'
0000000000000d6b         db  0x6b ; 'k'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x73 ; 's'
0000000000000d6e         db  0x74 ; 't'
0000000000000d6f         db  0x64 ; 'd'
0000000000000d70         db  0x6f ; 'o'
0000000000000d71         db  0x75 ; 'u'
0000000000000d72         db  0x74 ; 't'
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x66 ; 'f'
0000000000000d75         db  0x70 ; 'p'
0000000000000d76         db  0x61 ; 'a'
0000000000000d77         db  0x74 ; 't'
0000000000000d78         db  0x68 ; 'h'
0000000000000d79         db  0x63 ; 'c'
0000000000000d7a         db  0x6f ; 'o'
0000000000000d7b         db  0x6e ; 'n'
0000000000000d7c         db  0x66 ; 'f'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x6c ; 'l'
0000000000000d7f         db  0x73 ; 's'
0000000000000d80         db  0x65 ; 'e'
0000000000000d81         db  0x65 ; 'e'
0000000000000d82         db  0x6b ; 'k'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x6d ; 'm'
0000000000000d85         db  0x65 ; 'e'
0000000000000d86         db  0x6d ; 'm'
0000000000000d87         db  0x63 ; 'c'
0000000000000d88         db  0x70 ; 'p'
0000000000000d89         db  0x79 ; 'y'
0000000000000d8a         db  0x00 ; '.'
0000000000000d8b         db  0x66 ; 'f'
0000000000000d8c         db  0x63 ; 'c'
0000000000000d8d         db  0x6c ; 'l'
0000000000000d8e         db  0x6f ; 'o'
0000000000000d8f         db  0x73 ; 's'
0000000000000d90         db  0x65 ; 'e'
0000000000000d91         db  0x00 ; '.'
0000000000000d92         db  0x73 ; 's'
0000000000000d93         db  0x79 ; 'y'
0000000000000d94         db  0x6d ; 'm'
0000000000000d95         db  0x6c ; 'l'
0000000000000d96         db  0x69 ; 'i'
0000000000000d97         db  0x6e ; 'n'
0000000000000d98         db  0x6b ; 'k'
0000000000000d99         db  0x61 ; 'a'
0000000000000d9a         db  0x74 ; 't'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x6d ; 'm'
0000000000000d9d         db  0x61 ; 'a'
0000000000000d9e         db  0x6c ; 'l'
0000000000000d9f         db  0x6c ; 'l'
0000000000000da0         db  0x6f ; 'o'
0000000000000da1         db  0x63 ; 'c'
0000000000000da2         db  0x00 ; '.'
0000000000000da3         db  0x66 ; 'f'
0000000000000da4         db  0x64 ; 'd'
0000000000000da5         db  0x6f ; 'o'
0000000000000da6         db  0x70 ; 'p'
0000000000000da7         db  0x65 ; 'e'
0000000000000da8         db  0x6e ; 'n'
0000000000000da9         db  0x64 ; 'd'
0000000000000daa         db  0x69 ; 'i'
0000000000000dab         db  0x72 ; 'r'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x6d ; 'm'
0000000000000dae         db  0x62 ; 'b'
0000000000000daf         db  0x73 ; 's'
0000000000000db0         db  0x69 ; 'i'
0000000000000db1         db  0x6e ; 'n'
0000000000000db2         db  0x69 ; 'i'
0000000000000db3         db  0x74 ; 't'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x67 ; 'g'
0000000000000db6         db  0x65 ; 'e'
0000000000000db7         db  0x74 ; 't'
0000000000000db8         db  0x67 ; 'g'
0000000000000db9         db  0x69 ; 'i'
0000000000000dba         db  0x64 ; 'd'
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x6e ; 'n'
0000000000000dbd         db  0x6c ; 'l'
0000000000000dbe         db  0x5f ; '_'
0000000000000dbf         db  0x6c ; 'l'
0000000000000dc0         db  0x61 ; 'a'
0000000000000dc1         db  0x6e ; 'n'
0000000000000dc2         db  0x67 ; 'g'
0000000000000dc3         db  0x69 ; 'i'
0000000000000dc4         db  0x6e ; 'n'
0000000000000dc5         db  0x66 ; 'f'
0000000000000dc6         db  0x6f ; 'o'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0x5f ; '_'
0000000000000dc9         db  0x5f ; '_'
0000000000000dca         db  0x63 ; 'c'
0000000000000dcb         db  0x74 ; 't'
0000000000000dcc         db  0x79 ; 'y'
0000000000000dcd         db  0x70 ; 'p'
0000000000000dce         db  0x65 ; 'e'
0000000000000dcf         db  0x5f ; '_'
0000000000000dd0         db  0x62 ; 'b'
0000000000000dd1         db  0x5f ; '_'
0000000000000dd2         db  0x6c ; 'l'
0000000000000dd3         db  0x6f ; 'o'
0000000000000dd4         db  0x63 ; 'c'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x67 ; 'g'
0000000000000dd7         db  0x65 ; 'e'
0000000000000dd8         db  0x74 ; 't'
0000000000000dd9         db  0x65 ; 'e'
0000000000000dda         db  0x6e ; 'n'
0000000000000ddb         db  0x76 ; 'v'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x6f ; 'o'
0000000000000dde         db  0x70 ; 'p'
0000000000000ddf         db  0x74 ; 't'
0000000000000de0         db  0x61 ; 'a'
0000000000000de1         db  0x72 ; 'r'
0000000000000de2         db  0x67 ; 'g'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x5f ; '_'
0000000000000de5         db  0x5f ; '_'
0000000000000de6         db  0x66 ; 'f'
0000000000000de7         db  0x72 ; 'r'
0000000000000de8         db  0x65 ; 'e'
0000000000000de9         db  0x61 ; 'a'
0000000000000dea         db  0x64 ; 'd'
0000000000000deb         db  0x69 ; 'i'
0000000000000dec         db  0x6e ; 'n'
0000000000000ded         db  0x67 ; 'g'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x73 ; 's'
0000000000000df0         db  0x74 ; 't'
0000000000000df1         db  0x64 ; 'd'
0000000000000df2         db  0x65 ; 'e'
0000000000000df3         db  0x72 ; 'r'
0000000000000df4         db  0x72 ; 'r'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x67 ; 'g'
0000000000000df7         db  0x65 ; 'e'
0000000000000df8         db  0x74 ; 't'
0000000000000df9         db  0x75 ; 'u'
0000000000000dfa         db  0x69 ; 'i'
0000000000000dfb         db  0x64 ; 'd'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x72 ; 'r'
0000000000000dfe         db  0x65 ; 'e'
0000000000000dff         db  0x61 ; 'a'
                     aDlink:
0000000000000e00         db         "dlink", 0
0000000000000e06         db  0x67 ; 'g'
0000000000000e07         db  0x65 ; 'e'
0000000000000e08         db  0x74 ; 't'
0000000000000e09         db  0x6f ; 'o'
0000000000000e0a         db  0x70 ; 'p'
0000000000000e0b         db  0x74 ; 't'
0000000000000e0c         db  0x5f ; '_'
0000000000000e0d         db  0x6c ; 'l'
0000000000000e0e         db  0x6f ; 'o'
0000000000000e0f         db  0x6e ; 'n'
0000000000000e10         db  0x67 ; 'g'
0000000000000e11         db  0x00 ; '.'
0000000000000e12         db  0x66 ; 'f'
0000000000000e13         db  0x69 ; 'i'
0000000000000e14         db  0x6c ; 'l'
0000000000000e15         db  0x65 ; 'e'
0000000000000e16         db  0x6e ; 'n'
0000000000000e17         db  0x6f ; 'o'
0000000000000e18         db  0x00 ; '.'
0000000000000e19         db  0x67 ; 'g'
0000000000000e1a         db  0x65 ; 'e'
0000000000000e1b         db  0x74 ; 't'
0000000000000e1c         db  0x63 ; 'c'
0000000000000e1d         db  0x77 ; 'w'
0000000000000e1e         db  0x64 ; 'd'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x5f ; '_'
0000000000000e21         db  0x5f ; '_'
0000000000000e22         db  0x67 ; 'g'
0000000000000e23         db  0x65 ; 'e'
0000000000000e24         db  0x74 ; 't'
0000000000000e25         db  0x64 ; 'd'
0000000000000e26         db  0x65 ; 'e'
0000000000000e27         db  0x6c ; 'l'
0000000000000e28         db  0x69 ; 'i'
0000000000000e29         db  0x6d ; 'm'
0000000000000e2a         db  0x00 ; '.'
0000000000000e2b         db  0x66 ; 'f'
0000000000000e2c         db  0x77 ; 'w'
0000000000000e2d         db  0x72 ; 'r'
0000000000000e2e         db  0x69 ; 'i'
0000000000000e2f         db  0x74 ; 't'
0000000000000e30         db  0x65 ; 'e'
0000000000000e31         db  0x00 ; '.'
0000000000000e32         db  0x67 ; 'g'
0000000000000e33         db  0x65 ; 'e'
0000000000000e34         db  0x74 ; 't'
0000000000000e35         db  0x74 ; 't'
0000000000000e36         db  0x69 ; 'i'
0000000000000e37         db  0x6d ; 'm'
0000000000000e38         db  0x65 ; 'e'
0000000000000e39         db  0x6f ; 'o'
0000000000000e3a         db  0x66 ; 'f'
0000000000000e3b         db  0x64 ; 'd'
0000000000000e3c         db  0x61 ; 'a'
0000000000000e3d         db  0x79 ; 'y'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x5f ; '_'
0000000000000e40         db  0x5f ; '_'
0000000000000e41         db  0x65 ; 'e'
0000000000000e42         db  0x78 ; 'x'
0000000000000e43         db  0x70 ; 'p'
0000000000000e44         db  0x6c ; 'l'
0000000000000e45         db  0x69 ; 'i'
0000000000000e46         db  0x63 ; 'c'
0000000000000e47         db  0x69 ; 'i'
0000000000000e48         db  0x74 ; 't'
0000000000000e49         db  0x5f ; '_'
0000000000000e4a         db  0x62 ; 'b'
0000000000000e4b         db  0x7a ; 'z'
0000000000000e4c         db  0x65 ; 'e'
0000000000000e4d         db  0x72 ; 'r'
0000000000000e4e         db  0x6f ; 'o'
0000000000000e4f         db  0x5f ; '_'
0000000000000e50         db  0x63 ; 'c'
0000000000000e51         db  0x68 ; 'h'
0000000000000e52         db  0x6b ; 'k'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x5f ; '_'
0000000000000e55         db  0x5f ; '_'
0000000000000e56         db  0x66 ; 'f'
0000000000000e57         db  0x70 ; 'p'
0000000000000e58         db  0x65 ; 'e'
0000000000000e59         db  0x6e ; 'n'
0000000000000e5a         db  0x64 ; 'd'
0000000000000e5b         db  0x69 ; 'i'
0000000000000e5c         db  0x6e ; 'n'
0000000000000e5d         db  0x67 ; 'g'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x70 ; 'p'
0000000000000e60         db  0x72 ; 'r'
0000000000000e61         db  0x6f ; 'o'
0000000000000e62         db  0x67 ; 'g'
0000000000000e63         db  0x72 ; 'r'
0000000000000e64         db  0x61 ; 'a'
0000000000000e65         db  0x6d ; 'm'
0000000000000e66         db  0x5f ; '_'
0000000000000e67         db  0x69 ; 'i'
0000000000000e68         db  0x6e ; 'n'
0000000000000e69         db  0x76 ; 'v'
0000000000000e6a         db  0x6f ; 'o'
0000000000000e6b         db  0x63 ; 'c'
0000000000000e6c         db  0x61 ; 'a'
0000000000000e6d         db  0x74 ; 't'
0000000000000e6e         db  0x69 ; 'i'
0000000000000e6f         db  0x6f ; 'o'
0000000000000e70         db  0x6e ; 'n'
0000000000000e71         db  0x5f ; '_'
0000000000000e72         db  0x73 ; 's'
0000000000000e73         db  0x68 ; 'h'
0000000000000e74         db  0x6f ; 'o'
0000000000000e75         db  0x72 ; 'r'
0000000000000e76         db  0x74 ; 't'
0000000000000e77         db  0x5f ; '_'
0000000000000e78         db  0x6e ; 'n'
0000000000000e79         db  0x61 ; 'a'
0000000000000e7a         db  0x6d ; 'm'
0000000000000e7b         db  0x65 ; 'e'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x66 ; 'f'
0000000000000e7e         db  0x64 ; 'd'
0000000000000e7f         db  0x6f ; 'o'
0000000000000e80         db  0x70 ; 'p'
0000000000000e81         db  0x65 ; 'e'
0000000000000e82         db  0x6e ; 'n'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x5f ; '_'
0000000000000e85         db  0x5f ; '_'
0000000000000e86         db  0x63 ; 'c'
0000000000000e87         db  0x78 ; 'x'
0000000000000e88         db  0x61 ; 'a'
0000000000000e89         db  0x5f ; '_'
0000000000000e8a         db  0x66 ; 'f'
0000000000000e8b         db  0x69 ; 'i'
0000000000000e8c         db  0x6e ; 'n'
0000000000000e8d         db  0x61 ; 'a'
0000000000000e8e         db  0x6c ; 'l'
0000000000000e8f         db  0x69 ; 'i'
0000000000000e90         db  0x7a ; 'z'
0000000000000e91         db  0x65 ; 'e'
0000000000000e92         db  0x00 ; '.'
0000000000000e93         db  0x73 ; 's'
0000000000000e94         db  0x79 ; 'y'
0000000000000e95         db  0x73 ; 's'
0000000000000e96         db  0x63 ; 'c'
0000000000000e97         db  0x61 ; 'a'
0000000000000e98         db  0x6c ; 'l'
0000000000000e99         db  0x6c ; 'l'
0000000000000e9a         db  0x00 ; '.'
0000000000000e9b         db  0x73 ; 's'
0000000000000e9c         db  0x65 ; 'e'
0000000000000e9d         db  0x74 ; 't'
0000000000000e9e         db  0x76 ; 'v'
0000000000000e9f         db  0x62 ; 'b'
0000000000000ea0         db  0x75 ; 'u'
0000000000000ea1         db  0x66 ; 'f'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x66 ; 'f'
0000000000000ea4         db  0x63 ; 'c'
0000000000000ea5         db  0x6e ; 'n'
0000000000000ea6         db  0x74 ; 't'
0000000000000ea7         db  0x6c ; 'l'
0000000000000ea8         db  0x00 ; '.'
0000000000000ea9         db  0x6f ; 'o'
0000000000000eaa         db  0x70 ; 'p'
0000000000000eab         db  0x65 ; 'e'
0000000000000eac         db  0x6e ; 'n'
0000000000000ead         db  0x61 ; 'a'
0000000000000eae         db  0x74 ; 't'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x5f ; '_'
0000000000000eb1         db  0x5f ; '_'
0000000000000eb2         db  0x78 ; 'x'
0000000000000eb3         db  0x73 ; 's'
0000000000000eb4         db  0x74 ; 't'
0000000000000eb5         db  0x61 ; 'a'
0000000000000eb6         db  0x74 ; 't'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x6d ; 'm'
0000000000000eb9         db  0x65 ; 'e'
0000000000000eba         db  0x6d ; 'm'
0000000000000ebb         db  0x6d ; 'm'
0000000000000ebc         db  0x6f ; 'o'
0000000000000ebd         db  0x76 ; 'v'
0000000000000ebe         db  0x65 ; 'e'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x62 ; 'b'
0000000000000ec1         db  0x69 ; 'i'
0000000000000ec2         db  0x6e ; 'n'
0000000000000ec3         db  0x64 ; 'd'
0000000000000ec4         db  0x74 ; 't'
0000000000000ec5         db  0x65 ; 'e'
0000000000000ec6         db  0x78 ; 'x'
0000000000000ec7         db  0x74 ; 't'
0000000000000ec8         db  0x64 ; 'd'
0000000000000ec9         db  0x6f ; 'o'
0000000000000eca         db  0x6d ; 'm'
0000000000000ecb         db  0x61 ; 'a'
0000000000000ecc         db  0x69 ; 'i'
0000000000000ecd         db  0x6e ; 'n'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x5f ; '_'
0000000000000ed0         db  0x5f ; '_'
0000000000000ed1         db  0x66 ; 'f'
0000000000000ed2         db  0x78 ; 'x'
0000000000000ed3         db  0x73 ; 's'
0000000000000ed4         db  0x74 ; 't'
0000000000000ed5         db  0x61 ; 'a'
0000000000000ed6         db  0x74 ; 't'
0000000000000ed7         db  0x61 ; 'a'
0000000000000ed8         db  0x74 ; 't'
0000000000000ed9         db  0x00 ; '.'
0000000000000eda         db  0x73 ; 's'
0000000000000edb         db  0x74 ; 't'
0000000000000edc         db  0x72 ; 'r'
0000000000000edd         db  0x63 ; 'c'
0000000000000ede         db  0x6d ; 'm'
0000000000000edf         db  0x70 ; 'p'
0000000000000ee0         db  0x00 ; '.'
0000000000000ee1         db  0x5f ; '_'
0000000000000ee2         db  0x5f ; '_'
0000000000000ee3         db  0x6c ; 'l'
0000000000000ee4         db  0x69 ; 'i'
0000000000000ee5         db  0x62 ; 'b'
0000000000000ee6         db  0x63 ; 'c'
0000000000000ee7         db  0x5f ; '_'
0000000000000ee8         db  0x73 ; 's'
0000000000000ee9         db  0x74 ; 't'
0000000000000eea         db  0x61 ; 'a'
0000000000000eeb         db  0x72 ; 'r'
0000000000000eec         db  0x74 ; 't'
0000000000000eed         db  0x5f ; '_'
0000000000000eee         db  0x6d ; 'm'
0000000000000eef         db  0x61 ; 'a'
0000000000000ef0         db  0x69 ; 'i'
0000000000000ef1         db  0x6e ; 'n'
0000000000000ef2         db  0x00 ; '.'
0000000000000ef3         db  0x66 ; 'f'
0000000000000ef4         db  0x73 ; 's'
0000000000000ef5         db  0x65 ; 'e'
0000000000000ef6         db  0x65 ; 'e'
0000000000000ef7         db  0x6b ; 'k'
0000000000000ef8         db  0x6f ; 'o'
0000000000000ef9         db  0x00 ; '.'
0000000000000efa         db  0x5f ; '_'
0000000000000efb         db  0x5f ; '_'
0000000000000efc         db  0x6f ; 'o'
0000000000000efd         db  0x76 ; 'v'
0000000000000efe         db  0x65 ; 'e'
0000000000000eff         db  0x72 ; 'r'
                     aFlow:
0000000000000f00         db         "flow", 0
0000000000000f05         db  0x66 ; 'f'
0000000000000f06         db  0x70 ; 'p'
0000000000000f07         db  0x75 ; 'u'
0000000000000f08         db  0x74 ; 't'
0000000000000f09         db  0x73 ; 's'
0000000000000f0a         db  0x5f ; '_'
0000000000000f0b         db  0x75 ; 'u'
0000000000000f0c         db  0x6e ; 'n'
0000000000000f0d         db  0x6c ; 'l'
0000000000000f0e         db  0x6f ; 'o'
0000000000000f0f         db  0x63 ; 'c'
0000000000000f10         db  0x6b ; 'k'
0000000000000f11         db  0x65 ; 'e'
0000000000000f12         db  0x64 ; 'd'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x66 ; 'f'
0000000000000f15         db  0x72 ; 'r'
0000000000000f16         db  0x65 ; 'e'
0000000000000f17         db  0x65 ; 'e'
0000000000000f18         db  0x00 ; '.'
0000000000000f19         db  0x5f ; '_'
0000000000000f1a         db  0x5f ; '_'
0000000000000f1b         db  0x70 ; 'p'
0000000000000f1c         db  0x72 ; 'r'
0000000000000f1d         db  0x6f ; 'o'
0000000000000f1e         db  0x67 ; 'g'
0000000000000f1f         db  0x6e ; 'n'
0000000000000f20         db  0x61 ; 'a'
0000000000000f21         db  0x6d ; 'm'
0000000000000f22         db  0x65 ; 'e'
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x5f ; '_'
0000000000000f25         db  0x5f ; '_'
0000000000000f26         db  0x70 ; 'p'
0000000000000f27         db  0x72 ; 'r'
0000000000000f28         db  0x6f ; 'o'
0000000000000f29         db  0x67 ; 'g'
0000000000000f2a         db  0x6e ; 'n'
0000000000000f2b         db  0x61 ; 'a'
0000000000000f2c         db  0x6d ; 'm'
0000000000000f2d         db  0x65 ; 'e'
0000000000000f2e         db  0x5f ; '_'
0000000000000f2f         db  0x66 ; 'f'
0000000000000f30         db  0x75 ; 'u'
0000000000000f31         db  0x6c ; 'l'
0000000000000f32         db  0x6c ; 'l'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x5f ; '_'
0000000000000f35         db  0x5f ; '_'
0000000000000f36         db  0x63 ; 'c'
0000000000000f37         db  0x78 ; 'x'
0000000000000f38         db  0x61 ; 'a'
0000000000000f39         db  0x5f ; '_'
0000000000000f3a         db  0x61 ; 'a'
0000000000000f3b         db  0x74 ; 't'
0000000000000f3c         db  0x65 ; 'e'
0000000000000f3d         db  0x78 ; 'x'
0000000000000f3e         db  0x69 ; 'i'
0000000000000f3f         db  0x74 ; 't'
0000000000000f40         db  0x00 ; '.'
0000000000000f41         db  0x47 ; 'G'
0000000000000f42         db  0x4c ; 'L'
0000000000000f43         db  0x49 ; 'I'
0000000000000f44         db  0x42 ; 'B'
0000000000000f45         db  0x43 ; 'C'
0000000000000f46         db  0x5f ; '_'
0000000000000f47         db  0x32 ; '2'
0000000000000f48         db  0x2e ; '.'
0000000000000f49         db  0x33 ; '3'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x47 ; 'G'
0000000000000f4c         db  0x4c ; 'L'
0000000000000f4d         db  0x49 ; 'I'
0000000000000f4e         db  0x42 ; 'B'
0000000000000f4f         db  0x43 ; 'C'
0000000000000f50         db  0x5f ; '_'
0000000000000f51         db  0x32 ; '2'
0000000000000f52         db  0x2e ; '.'
0000000000000f53         db  0x32 ; '2'
0000000000000f54         db  0x35 ; '5'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x47 ; 'G'
0000000000000f57         db  0x4c ; 'L'
0000000000000f58         db  0x49 ; 'I'
0000000000000f59         db  0x42 ; 'B'
0000000000000f5a         db  0x43 ; 'C'
0000000000000f5b         db  0x5f ; '_'
0000000000000f5c         db  0x32 ; '2'
0000000000000f5d         db  0x2e ; '.'
0000000000000f5e         db  0x33 ; '3'
0000000000000f5f         db  0x2e ; '.'
0000000000000f60         db  0x34 ; '4'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x47 ; 'G'
0000000000000f63         db  0x4c ; 'L'
0000000000000f64         db  0x49 ; 'I'
0000000000000f65         db  0x42 ; 'B'
0000000000000f66         db  0x43 ; 'C'
0000000000000f67         db  0x5f ; '_'
0000000000000f68         db  0x32 ; '2'
0000000000000f69         db  0x2e ; '.'
0000000000000f6a         db  0x31 ; '1'
0000000000000f6b         db  0x34 ; '4'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x47 ; 'G'
0000000000000f6e         db  0x4c ; 'L'
0000000000000f6f         db  0x49 ; 'I'
0000000000000f70         db  0x42 ; 'B'
0000000000000f71         db  0x43 ; 'C'
0000000000000f72         db  0x5f ; '_'
0000000000000f73         db  0x32 ; '2'
0000000000000f74         db  0x2e ; '.'
0000000000000f75         db  0x34 ; '4'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x47 ; 'G'
0000000000000f78         db  0x4c ; 'L'
0000000000000f79         db  0x49 ; 'I'
0000000000000f7a         db  0x42 ; 'B'
0000000000000f7b         db  0x43 ; 'C'
0000000000000f7c         db  0x5f ; '_'
0000000000000f7d         db  0x32 ; '2'
0000000000000f7e         db  0x2e ; '.'
0000000000000f7f         db  0x32 ; '2'
0000000000000f80         db  0x2e ; '.'
0000000000000f81         db  0x35 ; '5'
0000000000000f82         db  0x00 ; '.'
0000000000000f83         db  0x5f ; '_'
0000000000000f84         db  0x49 ; 'I'
0000000000000f85         db  0x54 ; 'T'
0000000000000f86         db  0x4d ; 'M'
0000000000000f87         db  0x5f ; '_'
0000000000000f88         db  0x64 ; 'd'
0000000000000f89         db  0x65 ; 'e'
0000000000000f8a         db  0x72 ; 'r'
0000000000000f8b         db  0x65 ; 'e'
0000000000000f8c         db  0x67 ; 'g'
0000000000000f8d         db  0x69 ; 'i'
0000000000000f8e         db  0x73 ; 's'
0000000000000f8f         db  0x74 ; 't'
0000000000000f90         db  0x65 ; 'e'
0000000000000f91         db  0x72 ; 'r'
0000000000000f92         db  0x54 ; 'T'
0000000000000f93         db  0x4d ; 'M'
0000000000000f94         db  0x43 ; 'C'
0000000000000f95         db  0x6c ; 'l'
0000000000000f96         db  0x6f ; 'o'
0000000000000f97         db  0x6e ; 'n'
0000000000000f98         db  0x65 ; 'e'
0000000000000f99         db  0x54 ; 'T'
0000000000000f9a         db  0x61 ; 'a'
0000000000000f9b         db  0x62 ; 'b'
0000000000000f9c         db  0x6c ; 'l'
0000000000000f9d         db  0x65 ; 'e'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x5f ; '_'
0000000000000fa0         db  0x5f ; '_'
0000000000000fa1         db  0x67 ; 'g'
0000000000000fa2         db  0x6d ; 'm'
0000000000000fa3         db  0x6f ; 'o'
0000000000000fa4         db  0x6e ; 'n'
0000000000000fa5         db  0x5f ; '_'
0000000000000fa6         db  0x73 ; 's'
0000000000000fa7         db  0x74 ; 't'
0000000000000fa8         db  0x61 ; 'a'
0000000000000fa9         db  0x72 ; 'r'
0000000000000faa         db  0x74 ; 't'
0000000000000fab         db  0x5f ; '_'
0000000000000fac         db  0x5f ; '_'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x5f ; '_'
0000000000000faf         db  0x49 ; 'I'
0000000000000fb0         db  0x54 ; 'T'
0000000000000fb1         db  0x4d ; 'M'
0000000000000fb2         db  0x5f ; '_'
0000000000000fb3         db  0x72 ; 'r'
0000000000000fb4         db  0x65 ; 'e'
0000000000000fb5         db  0x67 ; 'g'
0000000000000fb6         db  0x69 ; 'i'
0000000000000fb7         db  0x73 ; 's'
0000000000000fb8         db  0x74 ; 't'
0000000000000fb9         db  0x65 ; 'e'
0000000000000fba         db  0x72 ; 'r'
0000000000000fbb         db  0x54 ; 'T'
0000000000000fbc         db  0x4d ; 'M'
0000000000000fbd         db  0x43 ; 'C'
0000000000000fbe         db  0x6c ; 'l'
0000000000000fbf         db  0x6f ; 'o'
0000000000000fc0         db  0x6e ; 'n'
0000000000000fc1         db  0x65 ; 'e'
0000000000000fc2         db  0x54 ; 'T'
0000000000000fc3         db  0x61 ; 'a'
0000000000000fc4         db  0x62 ; 'b'
0000000000000fc5         db  0x6c ; 'l'
0000000000000fc6         db  0x65 ; 'e'
0000000000000fc7         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xfc8; 0x1088[ (192 bytes)
        ; File offset : [4040; 4232[ (192 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000fc8         db  0x00 ; '.'
0000000000000fc9         db  0x00 ; '.'
0000000000000fca         db  0x02 ; '.'
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x02 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x02 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x02 ; '.'
0000000000000fd1         db  0x00 ; '.'
0000000000000fd2         db  0x02 ; '.'
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x00 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x02 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x02 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x02 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x03 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x02 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x03 ; '.'
0000000000000fe1         db  0x00 ; '.'
0000000000000fe2         db  0x02 ; '.'
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x02 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x02 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x02 ; '.'
0000000000000fe9         db  0x00 ; '.'
0000000000000fea         db  0x02 ; '.'
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x02 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x02 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x02 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x02 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x02 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x02 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x02 ; '.'
0000000000000ff9         db  0x00 ; '.'
0000000000000ffa         db  0x03 ; '.'
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x03 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x02 ; '.'
0000000000000fff         db  0x00 ; '.'                                         ; DATA XREF=canonicalize_filename_mode+124
0000000000001000         db  0x02 ; '.'                                         ; DATA XREF=do_link+1656, do_link+1671, canonicalize_filename_mode+343, canonicalize_filename_mode+350, sub_4daa+6, sub_4daa+41, sub_4daa+69, sub_4daa+76, randread_new+97, randread_new+104
0000000000001001         db  0x00 ; '.'
0000000000001002         db  0x02 ; '.'
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x03 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x02 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x02 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x02 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x02 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x02 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x02 ; '.'
0000000000001011         db  0x00 ; '.'
0000000000001012         db  0x02 ; '.'
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x02 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x02 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x02 ; '.'                                         ; DATA XREF=randread_new+270
0000000000001019         db  0x00 ; '.'
000000000000101a         db  0x02 ; '.'
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x02 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x02 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x02 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x02 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x02 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x02 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x02 ; '.'
0000000000001029         db  0x00 ; '.'
000000000000102a         db  0x02 ; '.'
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x02 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x04 ; '.'
0000000000001031         db  0x00 ; '.'
0000000000001032         db  0x02 ; '.'
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x02 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x02 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x02 ; '.'                                         ; DATA XREF=randread_new+74, randread_new+176, randread_new+328, randread_free+12
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x02 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x02 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x02 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x02 ; '.'
0000000000001041         db  0x00 ; '.'
0000000000001042         db  0x02 ; '.'
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x02 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x03 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x02 ; '.'
0000000000001049         db  0x00 ; '.'
000000000000104a         db  0x05 ; '.'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x02 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x02 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x02 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x02 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x06 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x02 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x02 ; '.'
0000000000001059         db  0x00 ; '.'
000000000000105a         db  0x02 ; '.'
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x03 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x02 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x03 ; '.'
0000000000001061         db  0x00 ; '.'
0000000000001062         db  0x02 ; '.'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x02 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x02 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x05 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x02 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x03 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x02 ; '.'
0000000000001071         db  0x00 ; '.'
0000000000001072         db  0x02 ; '.'
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x07 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x02 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x02 ; '.'
0000000000001079         db  0x00 ; '.'
000000000000107a         db  0x02 ; '.'
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x02 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x02 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x02 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x02 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x02 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x02 ; '.'
0000000000001087         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0x1088; 0x10f8[ (112 bytes)
        ; File offset : [4232; 4344[ (112 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000001088         db  0x01 ; '.'
0000000000001089         db  0x00 ; '.'
000000000000108a         db  0x06 ; '.'
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x01 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x10 ; '.'
0000000000001091         db  0x00 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x00 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x13 ; '.'
0000000000001099         db  0x69 ; 'i'
000000000000109a         db  0x69 ; 'i'
000000000000109b         db  0x0d ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x07 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x61 ; 'a'
00000000000010a1         db  0x03 ; '.'
00000000000010a2         db  0x00 ; '.'
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x10 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x85 ; '.'
00000000000010a9         db  0x91 ; '.'
00000000000010aa         db  0x96 ; '.'
00000000000010ab         db  0x06 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x06 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x6b ; 'k'
00000000000010b1         db  0x03 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x10 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x74 ; 't'
00000000000010b9         db  0x19 ; '.'
00000000000010ba         db  0x69 ; 'i'
00000000000010bb         db  0x09 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x05 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x76 ; 'v'
00000000000010c1         db  0x03 ; '.'
00000000000010c2         db  0x00 ; '.'
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x10 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x94 ; '.'
00000000000010c9         db  0x91 ; '.'
00000000000010ca         db  0x96 ; '.'
00000000000010cb         db  0x06 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x04 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x82 ; '.'
00000000000010d1         db  0x03 ; '.'
00000000000010d2         db  0x00 ; '.'
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x10 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x14 ; '.'
00000000000010d9         db  0x69 ; 'i'
00000000000010da         db  0x69 ; 'i'
00000000000010db         db  0x0d ; '.'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x03 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x8d ; '.'
00000000000010e1         db  0x03 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x10 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x75 ; 'u'
00000000000010e9         db  0x1a ; '.'
00000000000010ea         db  0x69 ; 'i'
00000000000010eb         db  0x09 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x02 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x97 ; '.'
00000000000010f1         db  0x03 ; '.'
00000000000010f2         db  0x00 ; '.'
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x00 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0x10f8; 0x15d8[ (1248 bytes)
        ; File offset : [4344; 5592[ (1248 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

00000000000010f8         db  0x70 ; 'p'
00000000000010f9         db  0xf8 ; '.'
00000000000010fa         db  0x20 ; ' '
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x08 ; '.'
0000000000001101         db  0x00 ; '.'
0000000000001102         db  0x00 ; '.'
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0xb0 ; '.'
0000000000001109         db  0x2b ; '+'
000000000000110a         db  0x00 ; '.'
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x00 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x78 ; 'x'
0000000000001111         db  0xf8 ; '.'
0000000000001112         db  0x20 ; ' '
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x08 ; '.'
0000000000001119         db  0x00 ; '.'
000000000000111a         db  0x00 ; '.'
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x70 ; 'p'
0000000000001121         db  0x2b ; '+'
0000000000001122         db  0x00 ; '.'
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x00 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x80 ; '.'
0000000000001129         db  0xf8 ; '.'
000000000000112a         db  0x20 ; ' '
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x08 ; '.'
0000000000001131         db  0x00 ; '.'
0000000000001132         db  0x00 ; '.'
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x82 ; '.'
0000000000001139         db  0xb1 ; '.'
000000000000113a         db  0x00 ; '.'
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x00 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0xa0 ; '.'
0000000000001141         db  0xf8 ; '.'
0000000000001142         db  0x20 ; ' '
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x08 ; '.'
0000000000001149         db  0x00 ; '.'
000000000000114a         db  0x00 ; '.'
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x0f ; '.'
0000000000001151         db  0xb1 ; '.'
0000000000001152         db  0x00 ; '.'
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x00 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0xc0 ; '.'
0000000000001159         db  0xf8 ; '.'
000000000000115a         db  0x20 ; ' '
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x08 ; '.'
0000000000001161         db  0x00 ; '.'
0000000000001162         db  0x00 ; '.'
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x89 ; '.'
0000000000001169         db  0xb1 ; '.'
000000000000116a         db  0x00 ; '.'
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x00 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0xe0 ; '.'
0000000000001171         db  0xf8 ; '.'
0000000000001172         db  0x20 ; ' '
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x08 ; '.'
0000000000001179         db  0x00 ; '.'
000000000000117a         db  0x00 ; '.'
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x98 ; '.'
0000000000001181         db  0xb1 ; '.'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x00 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x00 ; '.'
0000000000001189         db  0xf9 ; '.'
000000000000118a         db  0x20 ; ' '
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x08 ; '.'
0000000000001191         db  0x00 ; '.'
0000000000001192         db  0x00 ; '.'
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0xac ; '.'
0000000000001199         db  0xb1 ; '.'
000000000000119a         db  0x00 ; '.'
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x00 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x20 ; ' '
00000000000011a1         db  0xf9 ; '.'
00000000000011a2         db  0x20 ; ' '
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x08 ; '.'
00000000000011a9         db  0x00 ; '.'
00000000000011aa         db  0x00 ; '.'
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0xb2 ; '.'
00000000000011b1         db  0xb1 ; '.'
00000000000011b2         db  0x00 ; '.'
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x00 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x40 ; '@'
00000000000011b9         db  0xf9 ; '.'
00000000000011ba         db  0x20 ; ' '
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x08 ; '.'
00000000000011c1         db  0x00 ; '.'
00000000000011c2         db  0x00 ; '.'
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0xbe ; '.'
00000000000011c9         db  0xb1 ; '.'
00000000000011ca         db  0x00 ; '.'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x00 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x60 ; '`'
00000000000011d1         db  0xf9 ; '.'
00000000000011d2         db  0x20 ; ' '
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x08 ; '.'
00000000000011d9         db  0x00 ; '.'
00000000000011da         db  0x00 ; '.'
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x9b ; '.'
00000000000011e1         db  0xb1 ; '.'
00000000000011e2         db  0x00 ; '.'
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x00 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x80 ; '.'
00000000000011e9         db  0xf9 ; '.'
00000000000011ea         db  0x20 ; ' '
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x08 ; '.'
00000000000011f1         db  0x00 ; '.'
00000000000011f2         db  0x00 ; '.'
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0xc5 ; '.'
00000000000011f9         db  0xb1 ; '.'
00000000000011fa         db  0x00 ; '.'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x00 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0xa0 ; '.'
0000000000001201         db  0xf9 ; '.'
0000000000001202         db  0x20 ; ' '
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x08 ; '.'
0000000000001209         db  0x00 ; '.'
000000000000120a         db  0x00 ; '.'
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0xcd ; '.'
0000000000001211         db  0xb1 ; '.'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x00 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0xc0 ; '.'
0000000000001219         db  0xf9 ; '.'
000000000000121a         db  0x20 ; ' '
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x08 ; '.'
0000000000001221         db  0x00 ; '.'
0000000000001222         db  0x00 ; '.'
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0xd6 ; '.'
0000000000001229         db  0xb1 ; '.'
000000000000122a         db  0x00 ; '.'
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x00 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0xe0 ; '.'
0000000000001231         db  0xf9 ; '.'
0000000000001232         db  0x20 ; ' '
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x08 ; '.'
0000000000001239         db  0x00 ; '.'
000000000000123a         db  0x00 ; '.'
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0xdf ; '.'
0000000000001241         db  0xb1 ; '.'
0000000000001242         db  0x00 ; '.'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x00 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x00 ; '.'
0000000000001249         db  0xfa ; '.'
000000000000124a         db  0x20 ; ' '
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x08 ; '.'
0000000000001251         db  0x00 ; '.'
0000000000001252         db  0x00 ; '.'
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0xe8 ; '.'
0000000000001259         db  0xb1 ; '.'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x00 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x20 ; ' '
0000000000001261         db  0xfa ; '.'
0000000000001262         db  0x20 ; ' '
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x08 ; '.'
0000000000001269         db  0x00 ; '.'
000000000000126a         db  0x00 ; '.'
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0xf0 ; '.'
0000000000001271         db  0xb1 ; '.'
0000000000001272         db  0x00 ; '.'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x00 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x40 ; '@'
0000000000001279         db  0xfa ; '.'
000000000000127a         db  0x20 ; ' '
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x08 ; '.'
0000000000001281         db  0x00 ; '.'
0000000000001282         db  0x00 ; '.'
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0xf5 ; '.'
0000000000001289         db  0xb1 ; '.'
000000000000128a         db  0x00 ; '.'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x00 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x80 ; '.'
0000000000001291         db  0xfa ; '.'
0000000000001292         db  0x20 ; ' '
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x08 ; '.'
0000000000001299         db  0x00 ; '.'
000000000000129a         db  0x00 ; '.'
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x9c ; '.'
00000000000012a1         db  0xbf ; '.'
00000000000012a2         db  0x00 ; '.'
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x00 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x88 ; '.'
00000000000012a9         db  0xfa ; '.'
00000000000012aa         db  0x20 ; ' '
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x08 ; '.'
00000000000012b1         db  0x00 ; '.'
00000000000012b2         db  0x00 ; '.'
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0xa1 ; '.'
00000000000012b9         db  0xbf ; '.'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x00 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x90 ; '.'
00000000000012c1         db  0xfa ; '.'
00000000000012c2         db  0x20 ; ' '
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x08 ; '.'
00000000000012c9         db  0x00 ; '.'
00000000000012ca         db  0x00 ; '.'
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0xa5 ; '.'
00000000000012d1         db  0xbf ; '.'
00000000000012d2         db  0x00 ; '.'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x00 ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x98 ; '.'
00000000000012d9         db  0xfa ; '.'
00000000000012da         db  0x20 ; ' '
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x08 ; '.'
00000000000012e1         db  0x00 ; '.'
00000000000012e2         db  0x00 ; '.'
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0xac ; '.'
00000000000012e9         db  0xbf ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x00 ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0xa0 ; '.'
00000000000012f1         db  0xfa ; '.'
00000000000012f2         db  0x20 ; ' '
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x08 ; '.'
00000000000012f9         db  0x00 ; '.'
00000000000012fa         db  0x00 ; '.'
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0xb2 ; '.'
0000000000001301         db  0xbf ; '.'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x00 ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0xa8 ; '.'
0000000000001309         db  0xfa ; '.'
000000000000130a         db  0x20 ; ' '
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x08 ; '.'
0000000000001311         db  0x00 ; '.'
0000000000001312         db  0x00 ; '.'
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0xbb ; '.'
0000000000001319         db  0xbf ; '.'
000000000000131a         db  0x00 ; '.'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x00 ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0xb0 ; '.'
0000000000001321         db  0xfa ; '.'
0000000000001322         db  0x20 ; ' '
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x08 ; '.'
0000000000001329         db  0x00 ; '.'
000000000000132a         db  0x00 ; '.'
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0xbf ; '.'
0000000000001331         db  0xbf ; '.'
0000000000001332         db  0x00 ; '.'
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x00 ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0xb8 ; '.'
0000000000001339         db  0xfa ; '.'
000000000000133a         db  0x20 ; ' '
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x08 ; '.'
0000000000001341         db  0x00 ; '.'
0000000000001342         db  0x00 ; '.'
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0xc8 ; '.'
0000000000001349         db  0xbf ; '.'
000000000000134a         db  0x00 ; '.'
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x00 ; '.'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0xe0 ; '.'
0000000000001351         db  0xfa ; '.'
0000000000001352         db  0x20 ; ' '
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x08 ; '.'
0000000000001359         db  0x00 ; '.'
000000000000135a         db  0x00 ; '.'
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x39 ; '9'
0000000000001361         db  0xc1 ; '.'
0000000000001362         db  0x00 ; '.'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x00 ; '.'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0xe8 ; '.'
0000000000001369         db  0xfa ; '.'
000000000000136a         db  0x20 ; ' '
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x08 ; '.'
0000000000001371         db  0x00 ; '.'
0000000000001372         db  0x00 ; '.'
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x41 ; 'A'
0000000000001379         db  0xc1 ; '.'
000000000000137a         db  0x00 ; '.'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x00 ; '.'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0xf0 ; '.'
0000000000001381         db  0xfa ; '.'
0000000000001382         db  0x20 ; ' '
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x08 ; '.'
0000000000001389         db  0x00 ; '.'
000000000000138a         db  0x00 ; '.'
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x47 ; 'G'
0000000000001391         db  0xc1 ; '.'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x00 ; '.'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0xf8 ; '.'
0000000000001399         db  0xfa ; '.'
000000000000139a         db  0x20 ; ' '
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x08 ; '.'
00000000000013a1         db  0x00 ; '.'
00000000000013a2         db  0x00 ; '.'
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x54 ; 'T'
00000000000013a9         db  0xc1 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x00 ; '.'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x00 ; '.'
00000000000013b1         db  0xfb ; '.'
00000000000013b2         db  0x20 ; ' '
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x08 ; '.'
00000000000013b9         db  0x00 ; '.'
00000000000013ba         db  0x00 ; '.'
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x00 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x61 ; 'a'
00000000000013c1         db  0xc1 ; '.'
00000000000013c2         db  0x00 ; '.'
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x00 ; '.'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x08 ; '.'
00000000000013c9         db  0xfb ; '.'
00000000000013ca         db  0x20 ; ' '
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x00 ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x08 ; '.'
00000000000013d1         db  0x00 ; '.'
00000000000013d2         db  0x00 ; '.'
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x00 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0xe6 ; '.'
00000000000013d9         db  0xb1 ; '.'
00000000000013da         db  0x00 ; '.'
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x00 ; '.'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x10 ; '.'
00000000000013e1         db  0xfb ; '.'
00000000000013e2         db  0x20 ; ' '
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x00 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x08 ; '.'
00000000000013e9         db  0x00 ; '.'
00000000000013ea         db  0x00 ; '.'
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x00 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x75 ; 'u'
00000000000013f1         db  0xc1 ; '.'
00000000000013f2         db  0x00 ; '.'
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x00 ; '.'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x18 ; '.'
00000000000013f9         db  0xfb ; '.'
00000000000013fa         db  0x20 ; ' '
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x00 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x08 ; '.'
0000000000001401         db  0x00 ; '.'
0000000000001402         db  0x00 ; '.'
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x00 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x5a ; 'Z'
0000000000001409         db  0xc1 ; '.'
000000000000140a         db  0x00 ; '.'
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x00 ; '.'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x20 ; ' '
0000000000001411         db  0xfb ; '.'
0000000000001412         db  0x20 ; ' '
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x00 ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0x08 ; '.'
0000000000001419         db  0x00 ; '.'
000000000000141a         db  0x00 ; '.'
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x00 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0xf5 ; '.'
0000000000001421         db  0xb0 ; '.'
0000000000001422         db  0x00 ; '.'
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x00 ; '.'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x28 ; '('
0000000000001429         db  0xfb ; '.'
000000000000142a         db  0x20 ; ' '
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x00 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x08 ; '.'
0000000000001431         db  0x00 ; '.'
0000000000001432         db  0x00 ; '.'
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x00 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x7d ; '}'
0000000000001439         db  0xc1 ; '.'
000000000000143a         db  0x00 ; '.'
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x00 ; '.'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x08 ; '.'
0000000000001441         db  0x00 ; '.'
0000000000001442         db  0x21 ; '!'
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x00 ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0x08 ; '.'
0000000000001449         db  0x00 ; '.'
000000000000144a         db  0x00 ; '.'
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x00 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x08 ; '.'
0000000000001451         db  0x00 ; '.'
0000000000001452         db  0x21 ; '!'
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x00 ; '.'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x18 ; '.'
0000000000001459         db  0x00 ; '.'
000000000000145a         db  0x21 ; '!'
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x00 ; '.'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0x08 ; '.'
0000000000001461         db  0x00 ; '.'
0000000000001462         db  0x00 ; '.'
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x00 ; '.'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x6f ; 'o'
0000000000001469         db  0xbf ; '.'
000000000000146a         db  0x00 ; '.'
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x00 ; '.'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x80 ; '.'
0000000000001471         db  0x00 ; '.'
0000000000001472         db  0x21 ; '!'
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x00 ; '.'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0x08 ; '.'
0000000000001479         db  0x00 ; '.'
000000000000147a         db  0x00 ; '.'
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x00 ; '.'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0x90 ; '.'
0000000000001481         db  0x00 ; '.'
0000000000001482         db  0x21 ; '!'
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x00 ; '.'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0x98 ; '.'
0000000000001489         db  0x00 ; '.'
000000000000148a         db  0x21 ; '!'
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x00 ; '.'
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0x08 ; '.'
0000000000001491         db  0x00 ; '.'
0000000000001492         db  0x00 ; '.'
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x00 ; '.'
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0x60 ; '`'
0000000000001499         db  0x01 ; '.'
000000000000149a         db  0x21 ; '!'
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x00 ; '.'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0xa0 ; '.'
00000000000014a1         db  0x00 ; '.'
00000000000014a2         db  0x21 ; '!'
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x00 ; '.'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0x08 ; '.'
00000000000014a9         db  0x00 ; '.'
00000000000014aa         db  0x00 ; '.'
00000000000014ab         db  0x00 ; '.'
00000000000014ac         db  0x00 ; '.'
00000000000014ad         db  0x00 ; '.'
00000000000014ae         db  0x00 ; '.'
00000000000014af         db  0x00 ; '.'
00000000000014b0         db  0xc0 ; '.'
00000000000014b1         db  0x99 ; '.'
00000000000014b2         db  0x00 ; '.'
00000000000014b3         db  0x00 ; '.'
00000000000014b4         db  0x00 ; '.'
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x00 ; '.'
00000000000014b7         db  0x00 ; '.'
00000000000014b8         db  0xc8 ; '.'
00000000000014b9         db  0xff ; '.'
00000000000014ba         db  0x20 ; ' '
00000000000014bb         db  0x00 ; '.'
00000000000014bc         db  0x00 ; '.'
00000000000014bd         db  0x00 ; '.'
00000000000014be         db  0x00 ; '.'
00000000000014bf         db  0x00 ; '.'
00000000000014c0         db  0x06 ; '.'
00000000000014c1         db  0x00 ; '.'
00000000000014c2         db  0x00 ; '.'
00000000000014c3         db  0x00 ; '.'
00000000000014c4         db  0x06 ; '.'
00000000000014c5         db  0x00 ; '.'
00000000000014c6         db  0x00 ; '.'
00000000000014c7         db  0x00 ; '.'
00000000000014c8         db  0x00 ; '.'
00000000000014c9         db  0x00 ; '.'
00000000000014ca         db  0x00 ; '.'
00000000000014cb         db  0x00 ; '.'
00000000000014cc         db  0x00 ; '.'
00000000000014cd         db  0x00 ; '.'
00000000000014ce         db  0x00 ; '.'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0xd0 ; '.'
00000000000014d1         db  0xff ; '.'
00000000000014d2         db  0x20 ; ' '
00000000000014d3         db  0x00 ; '.'
00000000000014d4         db  0x00 ; '.'
00000000000014d5         db  0x00 ; '.'
00000000000014d6         db  0x00 ; '.'
00000000000014d7         db  0x00 ; '.'
00000000000014d8         db  0x06 ; '.'
00000000000014d9         db  0x00 ; '.'
00000000000014da         db  0x00 ; '.'
00000000000014db         db  0x00 ; '.'
00000000000014dc         db  0x2a ; '*'
00000000000014dd         db  0x00 ; '.'
00000000000014de         db  0x00 ; '.'
00000000000014df         db  0x00 ; '.'
00000000000014e0         db  0x00 ; '.'
00000000000014e1         db  0x00 ; '.'
00000000000014e2         db  0x00 ; '.'
00000000000014e3         db  0x00 ; '.'
00000000000014e4         db  0x00 ; '.'
00000000000014e5         db  0x00 ; '.'
00000000000014e6         db  0x00 ; '.'
00000000000014e7         db  0x00 ; '.'
00000000000014e8         db  0xd8 ; '.'
00000000000014e9         db  0xff ; '.'
00000000000014ea         db  0x20 ; ' '
00000000000014eb         db  0x00 ; '.'
00000000000014ec         db  0x00 ; '.'
00000000000014ed         db  0x00 ; '.'
00000000000014ee         db  0x00 ; '.'
00000000000014ef         db  0x00 ; '.'
00000000000014f0         db  0x06 ; '.'
00000000000014f1         db  0x00 ; '.'
00000000000014f2         db  0x00 ; '.'
00000000000014f3         db  0x00 ; '.'
00000000000014f4         db  0x33 ; '3'
00000000000014f5         db  0x00 ; '.'
00000000000014f6         db  0x00 ; '.'
00000000000014f7         db  0x00 ; '.'
00000000000014f8         db  0x00 ; '.'
00000000000014f9         db  0x00 ; '.'
00000000000014fa         db  0x00 ; '.'
00000000000014fb         db  0x00 ; '.'
00000000000014fc         db  0x00 ; '.'
00000000000014fd         db  0x00 ; '.'
00000000000014fe         db  0x00 ; '.'
00000000000014ff         db  0x00 ; '.'
0000000000001500         db  0xe0 ; '.'
0000000000001501         db  0xff ; '.'
0000000000001502         db  0x20 ; ' '
0000000000001503         db  0x00 ; '.'
0000000000001504         db  0x00 ; '.'
0000000000001505         db  0x00 ; '.'
0000000000001506         db  0x00 ; '.'
0000000000001507         db  0x00 ; '.'
0000000000001508         db  0x06 ; '.'
0000000000001509         db  0x00 ; '.'
000000000000150a         db  0x00 ; '.'
000000000000150b         db  0x00 ; '.'
000000000000150c         db  0x51 ; 'Q'
000000000000150d         db  0x00 ; '.'
000000000000150e         db  0x00 ; '.'
000000000000150f         db  0x00 ; '.'
0000000000001510         db  0x00 ; '.'
0000000000001511         db  0x00 ; '.'
0000000000001512         db  0x00 ; '.'
0000000000001513         db  0x00 ; '.'
0000000000001514         db  0x00 ; '.'
0000000000001515         db  0x00 ; '.'
0000000000001516         db  0x00 ; '.'
0000000000001517         db  0x00 ; '.'
0000000000001518         db  0xe8 ; '.'
0000000000001519         db  0xff ; '.'
000000000000151a         db  0x20 ; ' '
000000000000151b         db  0x00 ; '.'
000000000000151c         db  0x00 ; '.'
000000000000151d         db  0x00 ; '.'
000000000000151e         db  0x00 ; '.'
000000000000151f         db  0x00 ; '.'
0000000000001520         db  0x06 ; '.'
0000000000001521         db  0x00 ; '.'
0000000000001522         db  0x00 ; '.'
0000000000001523         db  0x00 ; '.'
0000000000001524         db  0x55 ; 'U'
0000000000001525         db  0x00 ; '.'
0000000000001526         db  0x00 ; '.'
0000000000001527         db  0x00 ; '.'
0000000000001528         db  0x00 ; '.'
0000000000001529         db  0x00 ; '.'
000000000000152a         db  0x00 ; '.'
000000000000152b         db  0x00 ; '.'
000000000000152c         db  0x00 ; '.'
000000000000152d         db  0x00 ; '.'
000000000000152e         db  0x00 ; '.'
000000000000152f         db  0x00 ; '.'
0000000000001530         db  0xc0 ; '.'
0000000000001531         db  0x00 ; '.'
0000000000001532         db  0x21 ; '!'
0000000000001533         db  0x00 ; '.'
0000000000001534         db  0x00 ; '.'
0000000000001535         db  0x00 ; '.'
0000000000001536         db  0x00 ; '.'
0000000000001537         db  0x00 ; '.'
0000000000001538         db  0x05 ; '.'
0000000000001539         db  0x00 ; '.'
000000000000153a         db  0x00 ; '.'
000000000000153b         db  0x00 ; '.'
000000000000153c         db  0x58 ; 'X'
000000000000153d         db  0x00 ; '.'
000000000000153e         db  0x00 ; '.'
000000000000153f         db  0x00 ; '.'
0000000000001540         db  0x00 ; '.'
0000000000001541         db  0x00 ; '.'
0000000000001542         db  0x00 ; '.'
0000000000001543         db  0x00 ; '.'
0000000000001544         db  0x00 ; '.'
0000000000001545         db  0x00 ; '.'
0000000000001546         db  0x00 ; '.'
0000000000001547         db  0x00 ; '.'
0000000000001548         db  0xc8 ; '.'
0000000000001549         db  0x00 ; '.'
000000000000154a         db  0x21 ; '!'
000000000000154b         db  0x00 ; '.'
000000000000154c         db  0x00 ; '.'
000000000000154d         db  0x00 ; '.'
000000000000154e         db  0x00 ; '.'
000000000000154f         db  0x00 ; '.'
0000000000001550         db  0x05 ; '.'
0000000000001551         db  0x00 ; '.'
0000000000001552         db  0x00 ; '.'
0000000000001553         db  0x00 ; '.'
0000000000001554         db  0x57 ; 'W'
0000000000001555         db  0x00 ; '.'
0000000000001556         db  0x00 ; '.'
0000000000001557         db  0x00 ; '.'
0000000000001558         db  0x00 ; '.'
0000000000001559         db  0x00 ; '.'
000000000000155a         db  0x00 ; '.'
000000000000155b         db  0x00 ; '.'
000000000000155c         db  0x00 ; '.'
000000000000155d         db  0x00 ; '.'
000000000000155e         db  0x00 ; '.'
000000000000155f         db  0x00 ; '.'
0000000000001560         db  0xd0 ; '.'
0000000000001561         db  0x00 ; '.'
0000000000001562         db  0x21 ; '!'
0000000000001563         db  0x00 ; '.'
0000000000001564         db  0x00 ; '.'
0000000000001565         db  0x00 ; '.'
0000000000001566         db  0x00 ; '.'
0000000000001567         db  0x00 ; '.'
0000000000001568         db  0x05 ; '.'
0000000000001569         db  0x00 ; '.'
000000000000156a         db  0x00 ; '.'
000000000000156b         db  0x00 ; '.'
000000000000156c         db  0x59 ; 'Y'
000000000000156d         db  0x00 ; '.'
000000000000156e         db  0x00 ; '.'
000000000000156f         db  0x00 ; '.'
0000000000001570         db  0x00 ; '.'
0000000000001571         db  0x00 ; '.'
0000000000001572         db  0x00 ; '.'
0000000000001573         db  0x00 ; '.'
0000000000001574         db  0x00 ; '.'
0000000000001575         db  0x00 ; '.'
0000000000001576         db  0x00 ; '.'
0000000000001577         db  0x00 ; '.'
0000000000001578         db  0xd8 ; '.'
0000000000001579         db  0x00 ; '.'
000000000000157a         db  0x21 ; '!'
000000000000157b         db  0x00 ; '.'
000000000000157c         db  0x00 ; '.'
000000000000157d         db  0x00 ; '.'
000000000000157e         db  0x00 ; '.'
000000000000157f         db  0x00 ; '.'
0000000000001580         db  0x05 ; '.'
0000000000001581         db  0x00 ; '.'
0000000000001582         db  0x00 ; '.'
0000000000001583         db  0x00 ; '.'
0000000000001584         db  0x5e ; '^'
0000000000001585         db  0x00 ; '.'
0000000000001586         db  0x00 ; '.'
0000000000001587         db  0x00 ; '.'
0000000000001588         db  0x00 ; '.'
0000000000001589         db  0x00 ; '.'
000000000000158a         db  0x00 ; '.'
000000000000158b         db  0x00 ; '.'
000000000000158c         db  0x00 ; '.'
000000000000158d         db  0x00 ; '.'
000000000000158e         db  0x00 ; '.'
000000000000158f         db  0x00 ; '.'
0000000000001590         db  0xe0 ; '.'
0000000000001591         db  0x00 ; '.'
0000000000001592         db  0x21 ; '!'
0000000000001593         db  0x00 ; '.'
0000000000001594         db  0x00 ; '.'
0000000000001595         db  0x00 ; '.'
0000000000001596         db  0x00 ; '.'
0000000000001597         db  0x00 ; '.'
0000000000001598         db  0x05 ; '.'
0000000000001599         db  0x00 ; '.'
000000000000159a         db  0x00 ; '.'
000000000000159b         db  0x00 ; '.'
000000000000159c         db  0x5f ; '_'
000000000000159d         db  0x00 ; '.'
000000000000159e         db  0x00 ; '.'
000000000000159f         db  0x00 ; '.'
00000000000015a0         db  0x00 ; '.'
00000000000015a1         db  0x00 ; '.'
00000000000015a2         db  0x00 ; '.'
00000000000015a3         db  0x00 ; '.'
00000000000015a4         db  0x00 ; '.'
00000000000015a5         db  0x00 ; '.'
00000000000015a6         db  0x00 ; '.'
00000000000015a7         db  0x00 ; '.'
00000000000015a8         db  0xe8 ; '.'
00000000000015a9         db  0x00 ; '.'
00000000000015aa         db  0x21 ; '!'
00000000000015ab         db  0x00 ; '.'
00000000000015ac         db  0x00 ; '.'
00000000000015ad         db  0x00 ; '.'
00000000000015ae         db  0x00 ; '.'
00000000000015af         db  0x00 ; '.'
00000000000015b0         db  0x05 ; '.'
00000000000015b1         db  0x00 ; '.'
00000000000015b2         db  0x00 ; '.'
00000000000015b3         db  0x00 ; '.'
00000000000015b4         db  0x5b ; '['
00000000000015b5         db  0x00 ; '.'
00000000000015b6         db  0x00 ; '.'
00000000000015b7         db  0x00 ; '.'
00000000000015b8         db  0x00 ; '.'
00000000000015b9         db  0x00 ; '.'
00000000000015ba         db  0x00 ; '.'
00000000000015bb         db  0x00 ; '.'
00000000000015bc         db  0x00 ; '.'
00000000000015bd         db  0x00 ; '.'
00000000000015be         db  0x00 ; '.'
00000000000015bf         db  0x00 ; '.'
00000000000015c0         db  0x00 ; '.'
00000000000015c1         db  0x01 ; '.'
00000000000015c2         db  0x21 ; '!'
00000000000015c3         db  0x00 ; '.'
00000000000015c4         db  0x00 ; '.'
00000000000015c5         db  0x00 ; '.'
00000000000015c6         db  0x00 ; '.'
00000000000015c7         db  0x00 ; '.'
00000000000015c8         db  0x05 ; '.'
00000000000015c9         db  0x00 ; '.'
00000000000015ca         db  0x00 ; '.'
00000000000015cb         db  0x00 ; '.'
00000000000015cc         db  0x5d ; ']'
00000000000015cd         db  0x00 ; '.'
00000000000015ce         db  0x00 ; '.'
00000000000015cf         db  0x00 ; '.'
00000000000015d0         db  0x00 ; '.'
00000000000015d1         db  0x00 ; '.'
00000000000015d2         db  0x00 ; '.'
00000000000015d3         db  0x00 ; '.'
00000000000015d4         db  0x00 ; '.'
00000000000015d5         db  0x00 ; '.'
00000000000015d6         db  0x00 ; '.'
00000000000015d7         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x15d8; 0x1d70[ (1944 bytes)
        ; File offset : [5592; 7536[ (1944 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

00000000000015d8         db  0x40 ; '@'
00000000000015d9         db  0xfd ; '.'
00000000000015da         db  0x20 ; ' '
00000000000015db         db  0x00 ; '.'
00000000000015dc         db  0x00 ; '.'
00000000000015dd         db  0x00 ; '.'
00000000000015de         db  0x00 ; '.'
00000000000015df         db  0x00 ; '.'
00000000000015e0         db  0x07 ; '.'
00000000000015e1         db  0x00 ; '.'
00000000000015e2         db  0x00 ; '.'
00000000000015e3         db  0x00 ; '.'
00000000000015e4         db  0x01 ; '.'
00000000000015e5         db  0x00 ; '.'
00000000000015e6         db  0x00 ; '.'
00000000000015e7         db  0x00 ; '.'
00000000000015e8         db  0x00 ; '.'
00000000000015e9         db  0x00 ; '.'
00000000000015ea         db  0x00 ; '.'
00000000000015eb         db  0x00 ; '.'
00000000000015ec         db  0x00 ; '.'
00000000000015ed         db  0x00 ; '.'
00000000000015ee         db  0x00 ; '.'
00000000000015ef         db  0x00 ; '.'
00000000000015f0         db  0x48 ; 'H'
00000000000015f1         db  0xfd ; '.'
00000000000015f2         db  0x20 ; ' '
00000000000015f3         db  0x00 ; '.'
00000000000015f4         db  0x00 ; '.'
00000000000015f5         db  0x00 ; '.'
00000000000015f6         db  0x00 ; '.'
00000000000015f7         db  0x00 ; '.'
00000000000015f8         db  0x07 ; '.'
00000000000015f9         db  0x00 ; '.'
00000000000015fa         db  0x00 ; '.'
00000000000015fb         db  0x00 ; '.'
00000000000015fc         db  0x02 ; '.'
00000000000015fd         db  0x00 ; '.'
00000000000015fe         db  0x00 ; '.'
00000000000015ff         db  0x00 ; '.'
0000000000001600         db  0x00 ; '.'
0000000000001601         db  0x00 ; '.'
0000000000001602         db  0x00 ; '.'
0000000000001603         db  0x00 ; '.'
0000000000001604         db  0x00 ; '.'
0000000000001605         db  0x00 ; '.'
0000000000001606         db  0x00 ; '.'
0000000000001607         db  0x00 ; '.'
0000000000001608         db  0x50 ; 'P'
0000000000001609         db  0xfd ; '.'
000000000000160a         db  0x20 ; ' '
000000000000160b         db  0x00 ; '.'
000000000000160c         db  0x00 ; '.'
000000000000160d         db  0x00 ; '.'
000000000000160e         db  0x00 ; '.'
000000000000160f         db  0x00 ; '.'
0000000000001610         db  0x07 ; '.'
0000000000001611         db  0x00 ; '.'
0000000000001612         db  0x00 ; '.'
0000000000001613         db  0x00 ; '.'
0000000000001614         db  0x03 ; '.'
0000000000001615         db  0x00 ; '.'
0000000000001616         db  0x00 ; '.'
0000000000001617         db  0x00 ; '.'
0000000000001618         db  0x00 ; '.'
0000000000001619         db  0x00 ; '.'
000000000000161a         db  0x00 ; '.'
000000000000161b         db  0x00 ; '.'
000000000000161c         db  0x00 ; '.'
000000000000161d         db  0x00 ; '.'
000000000000161e         db  0x00 ; '.'
000000000000161f         db  0x00 ; '.'
0000000000001620         db  0x58 ; 'X'
0000000000001621         db  0xfd ; '.'
0000000000001622         db  0x20 ; ' '
0000000000001623         db  0x00 ; '.'
0000000000001624         db  0x00 ; '.'
0000000000001625         db  0x00 ; '.'
0000000000001626         db  0x00 ; '.'
0000000000001627         db  0x00 ; '.'
0000000000001628         db  0x07 ; '.'
0000000000001629         db  0x00 ; '.'
000000000000162a         db  0x00 ; '.'
000000000000162b         db  0x00 ; '.'
000000000000162c         db  0x04 ; '.'
000000000000162d         db  0x00 ; '.'
000000000000162e         db  0x00 ; '.'
000000000000162f         db  0x00 ; '.'
0000000000001630         db  0x00 ; '.'
0000000000001631         db  0x00 ; '.'
0000000000001632         db  0x00 ; '.'
0000000000001633         db  0x00 ; '.'
0000000000001634         db  0x00 ; '.'
0000000000001635         db  0x00 ; '.'
0000000000001636         db  0x00 ; '.'
0000000000001637         db  0x00 ; '.'
0000000000001638         db  0x60 ; '`'
0000000000001639         db  0xfd ; '.'
000000000000163a         db  0x20 ; ' '
000000000000163b         db  0x00 ; '.'
000000000000163c         db  0x00 ; '.'
000000000000163d         db  0x00 ; '.'
000000000000163e         db  0x00 ; '.'
000000000000163f         db  0x00 ; '.'
0000000000001640         db  0x07 ; '.'
0000000000001641         db  0x00 ; '.'
0000000000001642         db  0x00 ; '.'
0000000000001643         db  0x00 ; '.'
0000000000001644         db  0x05 ; '.'
0000000000001645         db  0x00 ; '.'
0000000000001646         db  0x00 ; '.'
0000000000001647         db  0x00 ; '.'
0000000000001648         db  0x00 ; '.'
0000000000001649         db  0x00 ; '.'
000000000000164a         db  0x00 ; '.'
000000000000164b         db  0x00 ; '.'
000000000000164c         db  0x00 ; '.'
000000000000164d         db  0x00 ; '.'
000000000000164e         db  0x00 ; '.'
000000000000164f         db  0x00 ; '.'
0000000000001650         db  0x68 ; 'h'
0000000000001651         db  0xfd ; '.'
0000000000001652         db  0x20 ; ' '
0000000000001653         db  0x00 ; '.'
0000000000001654         db  0x00 ; '.'
0000000000001655         db  0x00 ; '.'
0000000000001656         db  0x00 ; '.'
0000000000001657         db  0x00 ; '.'
0000000000001658         db  0x07 ; '.'
0000000000001659         db  0x00 ; '.'
000000000000165a         db  0x00 ; '.'
000000000000165b         db  0x00 ; '.'
000000000000165c         db  0x07 ; '.'
000000000000165d         db  0x00 ; '.'
000000000000165e         db  0x00 ; '.'
000000000000165f         db  0x00 ; '.'
0000000000001660         db  0x00 ; '.'
0000000000001661         db  0x00 ; '.'
0000000000001662         db  0x00 ; '.'
0000000000001663         db  0x00 ; '.'
0000000000001664         db  0x00 ; '.'
0000000000001665         db  0x00 ; '.'
0000000000001666         db  0x00 ; '.'
0000000000001667         db  0x00 ; '.'
0000000000001668         db  0x70 ; 'p'
0000000000001669         db  0xfd ; '.'
000000000000166a         db  0x20 ; ' '
000000000000166b         db  0x00 ; '.'
000000000000166c         db  0x00 ; '.'
000000000000166d         db  0x00 ; '.'
000000000000166e         db  0x00 ; '.'
000000000000166f         db  0x00 ; '.'
0000000000001670         db  0x07 ; '.'
0000000000001671         db  0x00 ; '.'
0000000000001672         db  0x00 ; '.'
0000000000001673         db  0x00 ; '.'
0000000000001674         db  0x08 ; '.'
0000000000001675         db  0x00 ; '.'
0000000000001676         db  0x00 ; '.'
0000000000001677         db  0x00 ; '.'
0000000000001678         db  0x00 ; '.'
0000000000001679         db  0x00 ; '.'
000000000000167a         db  0x00 ; '.'
000000000000167b         db  0x00 ; '.'
000000000000167c         db  0x00 ; '.'
000000000000167d         db  0x00 ; '.'
000000000000167e         db  0x00 ; '.'
000000000000167f         db  0x00 ; '.'
0000000000001680         db  0x78 ; 'x'
0000000000001681         db  0xfd ; '.'
0000000000001682         db  0x20 ; ' '
0000000000001683         db  0x00 ; '.'
0000000000001684         db  0x00 ; '.'
0000000000001685         db  0x00 ; '.'
0000000000001686         db  0x00 ; '.'
0000000000001687         db  0x00 ; '.'
0000000000001688         db  0x07 ; '.'
0000000000001689         db  0x00 ; '.'
000000000000168a         db  0x00 ; '.'
000000000000168b         db  0x00 ; '.'
000000000000168c         db  0x09 ; '.'
000000000000168d         db  0x00 ; '.'
000000000000168e         db  0x00 ; '.'
000000000000168f         db  0x00 ; '.'
0000000000001690         db  0x00 ; '.'
0000000000001691         db  0x00 ; '.'
0000000000001692         db  0x00 ; '.'
0000000000001693         db  0x00 ; '.'
0000000000001694         db  0x00 ; '.'
0000000000001695         db  0x00 ; '.'
0000000000001696         db  0x00 ; '.'
0000000000001697         db  0x00 ; '.'
0000000000001698         db  0x80 ; '.'
0000000000001699         db  0xfd ; '.'
000000000000169a         db  0x20 ; ' '
000000000000169b         db  0x00 ; '.'
000000000000169c         db  0x00 ; '.'
000000000000169d         db  0x00 ; '.'
000000000000169e         db  0x00 ; '.'
000000000000169f         db  0x00 ; '.'
00000000000016a0         db  0x07 ; '.'
00000000000016a1         db  0x00 ; '.'
00000000000016a2         db  0x00 ; '.'
00000000000016a3         db  0x00 ; '.'
00000000000016a4         db  0x0a ; '.'
00000000000016a5         db  0x00 ; '.'
00000000000016a6         db  0x00 ; '.'
00000000000016a7         db  0x00 ; '.'
00000000000016a8         db  0x00 ; '.'
00000000000016a9         db  0x00 ; '.'
00000000000016aa         db  0x00 ; '.'
00000000000016ab         db  0x00 ; '.'
00000000000016ac         db  0x00 ; '.'
00000000000016ad         db  0x00 ; '.'
00000000000016ae         db  0x00 ; '.'
00000000000016af         db  0x00 ; '.'
00000000000016b0         db  0x88 ; '.'
00000000000016b1         db  0xfd ; '.'
00000000000016b2         db  0x20 ; ' '
00000000000016b3         db  0x00 ; '.'
00000000000016b4         db  0x00 ; '.'
00000000000016b5         db  0x00 ; '.'
00000000000016b6         db  0x00 ; '.'
00000000000016b7         db  0x00 ; '.'
00000000000016b8         db  0x07 ; '.'
00000000000016b9         db  0x00 ; '.'
00000000000016ba         db  0x00 ; '.'
00000000000016bb         db  0x00 ; '.'
00000000000016bc         db  0x0b ; '.'
00000000000016bd         db  0x00 ; '.'
00000000000016be         db  0x00 ; '.'
00000000000016bf         db  0x00 ; '.'
00000000000016c0         db  0x00 ; '.'
00000000000016c1         db  0x00 ; '.'
00000000000016c2         db  0x00 ; '.'
00000000000016c3         db  0x00 ; '.'
00000000000016c4         db  0x00 ; '.'
00000000000016c5         db  0x00 ; '.'
00000000000016c6         db  0x00 ; '.'
00000000000016c7         db  0x00 ; '.'
00000000000016c8         db  0x90 ; '.'
00000000000016c9         db  0xfd ; '.'
00000000000016ca         db  0x20 ; ' '
00000000000016cb         db  0x00 ; '.'
00000000000016cc         db  0x00 ; '.'
00000000000016cd         db  0x00 ; '.'
00000000000016ce         db  0x00 ; '.'
00000000000016cf         db  0x00 ; '.'
00000000000016d0         db  0x07 ; '.'
00000000000016d1         db  0x00 ; '.'
00000000000016d2         db  0x00 ; '.'
00000000000016d3         db  0x00 ; '.'
00000000000016d4         db  0x0c ; '.'
00000000000016d5         db  0x00 ; '.'
00000000000016d6         db  0x00 ; '.'
00000000000016d7         db  0x00 ; '.'
00000000000016d8         db  0x00 ; '.'
00000000000016d9         db  0x00 ; '.'
00000000000016da         db  0x00 ; '.'
00000000000016db         db  0x00 ; '.'
00000000000016dc         db  0x00 ; '.'
00000000000016dd         db  0x00 ; '.'
00000000000016de         db  0x00 ; '.'
00000000000016df         db  0x00 ; '.'
00000000000016e0         db  0x98 ; '.'
00000000000016e1         db  0xfd ; '.'
00000000000016e2         db  0x20 ; ' '
00000000000016e3         db  0x00 ; '.'
00000000000016e4         db  0x00 ; '.'
00000000000016e5         db  0x00 ; '.'
00000000000016e6         db  0x00 ; '.'
00000000000016e7         db  0x00 ; '.'
00000000000016e8         db  0x07 ; '.'
00000000000016e9         db  0x00 ; '.'
00000000000016ea         db  0x00 ; '.'
00000000000016eb         db  0x00 ; '.'
00000000000016ec         db  0x0d ; '.'
00000000000016ed         db  0x00 ; '.'
00000000000016ee         db  0x00 ; '.'
00000000000016ef         db  0x00 ; '.'
00000000000016f0         db  0x00 ; '.'
00000000000016f1         db  0x00 ; '.'
00000000000016f2         db  0x00 ; '.'
00000000000016f3         db  0x00 ; '.'
00000000000016f4         db  0x00 ; '.'
00000000000016f5         db  0x00 ; '.'
00000000000016f6         db  0x00 ; '.'
00000000000016f7         db  0x00 ; '.'
00000000000016f8         db  0xa0 ; '.'
00000000000016f9         db  0xfd ; '.'
00000000000016fa         db  0x20 ; ' '
00000000000016fb         db  0x00 ; '.'
00000000000016fc         db  0x00 ; '.'
00000000000016fd         db  0x00 ; '.'
00000000000016fe         db  0x00 ; '.'
00000000000016ff         db  0x00 ; '.'
0000000000001700         db  0x07 ; '.'
0000000000001701         db  0x00 ; '.'
0000000000001702         db  0x00 ; '.'
0000000000001703         db  0x00 ; '.'
0000000000001704         db  0x0e ; '.'
0000000000001705         db  0x00 ; '.'
0000000000001706         db  0x00 ; '.'
0000000000001707         db  0x00 ; '.'
0000000000001708         db  0x00 ; '.'
0000000000001709         db  0x00 ; '.'
000000000000170a         db  0x00 ; '.'
000000000000170b         db  0x00 ; '.'
000000000000170c         db  0x00 ; '.'
000000000000170d         db  0x00 ; '.'
000000000000170e         db  0x00 ; '.'
000000000000170f         db  0x00 ; '.'
0000000000001710         db  0xa8 ; '.'
0000000000001711         db  0xfd ; '.'
0000000000001712         db  0x20 ; ' '
0000000000001713         db  0x00 ; '.'
0000000000001714         db  0x00 ; '.'
0000000000001715         db  0x00 ; '.'
0000000000001716         db  0x00 ; '.'
0000000000001717         db  0x00 ; '.'
0000000000001718         db  0x07 ; '.'
0000000000001719         db  0x00 ; '.'
000000000000171a         db  0x00 ; '.'
000000000000171b         db  0x00 ; '.'
000000000000171c         db  0x0f ; '.'
000000000000171d         db  0x00 ; '.'
000000000000171e         db  0x00 ; '.'
000000000000171f         db  0x00 ; '.'
0000000000001720         db  0x00 ; '.'
0000000000001721         db  0x00 ; '.'
0000000000001722         db  0x00 ; '.'
0000000000001723         db  0x00 ; '.'
0000000000001724         db  0x00 ; '.'
0000000000001725         db  0x00 ; '.'
0000000000001726         db  0x00 ; '.'
0000000000001727         db  0x00 ; '.'
0000000000001728         db  0xb0 ; '.'
0000000000001729         db  0xfd ; '.'
000000000000172a         db  0x20 ; ' '
000000000000172b         db  0x00 ; '.'
000000000000172c         db  0x00 ; '.'
000000000000172d         db  0x00 ; '.'
000000000000172e         db  0x00 ; '.'
000000000000172f         db  0x00 ; '.'
0000000000001730         db  0x07 ; '.'
0000000000001731         db  0x00 ; '.'
0000000000001732         db  0x00 ; '.'
0000000000001733         db  0x00 ; '.'
0000000000001734         db  0x10 ; '.'
0000000000001735         db  0x00 ; '.'
0000000000001736         db  0x00 ; '.'
0000000000001737         db  0x00 ; '.'
0000000000001738         db  0x00 ; '.'
0000000000001739         db  0x00 ; '.'
000000000000173a         db  0x00 ; '.'
000000000000173b         db  0x00 ; '.'
000000000000173c         db  0x00 ; '.'
000000000000173d         db  0x00 ; '.'
000000000000173e         db  0x00 ; '.'
000000000000173f         db  0x00 ; '.'
0000000000001740         db  0xb8 ; '.'
0000000000001741         db  0xfd ; '.'
0000000000001742         db  0x20 ; ' '
0000000000001743         db  0x00 ; '.'
0000000000001744         db  0x00 ; '.'
0000000000001745         db  0x00 ; '.'
0000000000001746         db  0x00 ; '.'
0000000000001747         db  0x00 ; '.'
0000000000001748         db  0x07 ; '.'
0000000000001749         db  0x00 ; '.'
000000000000174a         db  0x00 ; '.'
000000000000174b         db  0x00 ; '.'
000000000000174c         db  0x11 ; '.'
000000000000174d         db  0x00 ; '.'
000000000000174e         db  0x00 ; '.'
000000000000174f         db  0x00 ; '.'
0000000000001750         db  0x00 ; '.'
0000000000001751         db  0x00 ; '.'
0000000000001752         db  0x00 ; '.'
0000000000001753         db  0x00 ; '.'
0000000000001754         db  0x00 ; '.'
0000000000001755         db  0x00 ; '.'
0000000000001756         db  0x00 ; '.'
0000000000001757         db  0x00 ; '.'
0000000000001758         db  0xc0 ; '.'
0000000000001759         db  0xfd ; '.'
000000000000175a         db  0x20 ; ' '
000000000000175b         db  0x00 ; '.'
000000000000175c         db  0x00 ; '.'
000000000000175d         db  0x00 ; '.'
000000000000175e         db  0x00 ; '.'
000000000000175f         db  0x00 ; '.'
0000000000001760         db  0x07 ; '.'
0000000000001761         db  0x00 ; '.'
0000000000001762         db  0x00 ; '.'
0000000000001763         db  0x00 ; '.'
0000000000001764         db  0x12 ; '.'
0000000000001765         db  0x00 ; '.'
0000000000001766         db  0x00 ; '.'
0000000000001767         db  0x00 ; '.'
0000000000001768         db  0x00 ; '.'
0000000000001769         db  0x00 ; '.'
000000000000176a         db  0x00 ; '.'
000000000000176b         db  0x00 ; '.'
000000000000176c         db  0x00 ; '.'
000000000000176d         db  0x00 ; '.'
000000000000176e         db  0x00 ; '.'
000000000000176f         db  0x00 ; '.'
0000000000001770         db  0xc8 ; '.'
0000000000001771         db  0xfd ; '.'
0000000000001772         db  0x20 ; ' '
0000000000001773         db  0x00 ; '.'
0000000000001774         db  0x00 ; '.'
0000000000001775         db  0x00 ; '.'
0000000000001776         db  0x00 ; '.'
0000000000001777         db  0x00 ; '.'
0000000000001778         db  0x07 ; '.'
0000000000001779         db  0x00 ; '.'
000000000000177a         db  0x00 ; '.'
000000000000177b         db  0x00 ; '.'
000000000000177c         db  0x13 ; '.'
000000000000177d         db  0x00 ; '.'
000000000000177e         db  0x00 ; '.'
000000000000177f         db  0x00 ; '.'
0000000000001780         db  0x00 ; '.'
0000000000001781         db  0x00 ; '.'
0000000000001782         db  0x00 ; '.'
0000000000001783         db  0x00 ; '.'
0000000000001784         db  0x00 ; '.'
0000000000001785         db  0x00 ; '.'
0000000000001786         db  0x00 ; '.'
0000000000001787         db  0x00 ; '.'
0000000000001788         db  0xd0 ; '.'
0000000000001789         db  0xfd ; '.'
000000000000178a         db  0x20 ; ' '
000000000000178b         db  0x00 ; '.'
000000000000178c         db  0x00 ; '.'
000000000000178d         db  0x00 ; '.'
000000000000178e         db  0x00 ; '.'
000000000000178f         db  0x00 ; '.'
0000000000001790         db  0x07 ; '.'
0000000000001791         db  0x00 ; '.'
0000000000001792         db  0x00 ; '.'
0000000000001793         db  0x00 ; '.'
0000000000001794         db  0x14 ; '.'
0000000000001795         db  0x00 ; '.'
0000000000001796         db  0x00 ; '.'
0000000000001797         db  0x00 ; '.'
0000000000001798         db  0x00 ; '.'
0000000000001799         db  0x00 ; '.'
000000000000179a         db  0x00 ; '.'
000000000000179b         db  0x00 ; '.'
000000000000179c         db  0x00 ; '.'
000000000000179d         db  0x00 ; '.'
000000000000179e         db  0x00 ; '.'
000000000000179f         db  0x00 ; '.'
00000000000017a0         db  0xd8 ; '.'
00000000000017a1         db  0xfd ; '.'
00000000000017a2         db  0x20 ; ' '
00000000000017a3         db  0x00 ; '.'
00000000000017a4         db  0x00 ; '.'
00000000000017a5         db  0x00 ; '.'
00000000000017a6         db  0x00 ; '.'
00000000000017a7         db  0x00 ; '.'
00000000000017a8         db  0x07 ; '.'
00000000000017a9         db  0x00 ; '.'
00000000000017aa         db  0x00 ; '.'
00000000000017ab         db  0x00 ; '.'
00000000000017ac         db  0x15 ; '.'
00000000000017ad         db  0x00 ; '.'
00000000000017ae         db  0x00 ; '.'
00000000000017af         db  0x00 ; '.'
00000000000017b0         db  0x00 ; '.'
00000000000017b1         db  0x00 ; '.'
00000000000017b2         db  0x00 ; '.'
00000000000017b3         db  0x00 ; '.'
00000000000017b4         db  0x00 ; '.'
00000000000017b5         db  0x00 ; '.'
00000000000017b6         db  0x00 ; '.'
00000000000017b7         db  0x00 ; '.'
00000000000017b8         db  0xe0 ; '.'
00000000000017b9         db  0xfd ; '.'
00000000000017ba         db  0x20 ; ' '
00000000000017bb         db  0x00 ; '.'
00000000000017bc         db  0x00 ; '.'
00000000000017bd         db  0x00 ; '.'
00000000000017be         db  0x00 ; '.'
00000000000017bf         db  0x00 ; '.'
00000000000017c0         db  0x07 ; '.'
00000000000017c1         db  0x00 ; '.'
00000000000017c2         db  0x00 ; '.'
00000000000017c3         db  0x00 ; '.'
00000000000017c4         db  0x16 ; '.'
00000000000017c5         db  0x00 ; '.'
00000000000017c6         db  0x00 ; '.'
00000000000017c7         db  0x00 ; '.'
00000000000017c8         db  0x00 ; '.'
00000000000017c9         db  0x00 ; '.'
00000000000017ca         db  0x00 ; '.'
00000000000017cb         db  0x00 ; '.'
00000000000017cc         db  0x00 ; '.'
00000000000017cd         db  0x00 ; '.'
00000000000017ce         db  0x00 ; '.'
00000000000017cf         db  0x00 ; '.'
00000000000017d0         db  0xe8 ; '.'
00000000000017d1         db  0xfd ; '.'
00000000000017d2         db  0x20 ; ' '
00000000000017d3         db  0x00 ; '.'
00000000000017d4         db  0x00 ; '.'
00000000000017d5         db  0x00 ; '.'
00000000000017d6         db  0x00 ; '.'
00000000000017d7         db  0x00 ; '.'
00000000000017d8         db  0x07 ; '.'
00000000000017d9         db  0x00 ; '.'
00000000000017da         db  0x00 ; '.'
00000000000017db         db  0x00 ; '.'
00000000000017dc         db  0x17 ; '.'
00000000000017dd         db  0x00 ; '.'
00000000000017de         db  0x00 ; '.'
00000000000017df         db  0x00 ; '.'
00000000000017e0         db  0x00 ; '.'
00000000000017e1         db  0x00 ; '.'
00000000000017e2         db  0x00 ; '.'
00000000000017e3         db  0x00 ; '.'
00000000000017e4         db  0x00 ; '.'
00000000000017e5         db  0x00 ; '.'
00000000000017e6         db  0x00 ; '.'
00000000000017e7         db  0x00 ; '.'
00000000000017e8         db  0xf0 ; '.'
00000000000017e9         db  0xfd ; '.'
00000000000017ea         db  0x20 ; ' '
00000000000017eb         db  0x00 ; '.'
00000000000017ec         db  0x00 ; '.'
00000000000017ed         db  0x00 ; '.'
00000000000017ee         db  0x00 ; '.'
00000000000017ef         db  0x00 ; '.'
00000000000017f0         db  0x07 ; '.'
00000000000017f1         db  0x00 ; '.'
00000000000017f2         db  0x00 ; '.'
00000000000017f3         db  0x00 ; '.'
00000000000017f4         db  0x18 ; '.'
00000000000017f5         db  0x00 ; '.'
00000000000017f6         db  0x00 ; '.'
00000000000017f7         db  0x00 ; '.'
00000000000017f8         db  0x00 ; '.'
00000000000017f9         db  0x00 ; '.'
00000000000017fa         db  0x00 ; '.'
00000000000017fb         db  0x00 ; '.'
00000000000017fc         db  0x00 ; '.'
00000000000017fd         db  0x00 ; '.'
00000000000017fe         db  0x00 ; '.'
00000000000017ff         db  0x00 ; '.'
0000000000001800         db  0xf8 ; '.'
0000000000001801         db  0xfd ; '.'
0000000000001802         db  0x20 ; ' '
0000000000001803         db  0x00 ; '.'
0000000000001804         db  0x00 ; '.'
0000000000001805         db  0x00 ; '.'
0000000000001806         db  0x00 ; '.'
0000000000001807         db  0x00 ; '.'
0000000000001808         db  0x07 ; '.'
0000000000001809         db  0x00 ; '.'
000000000000180a         db  0x00 ; '.'
000000000000180b         db  0x00 ; '.'
000000000000180c         db  0x19 ; '.'
000000000000180d         db  0x00 ; '.'
000000000000180e         db  0x00 ; '.'
000000000000180f         db  0x00 ; '.'
0000000000001810         db  0x00 ; '.'
0000000000001811         db  0x00 ; '.'
0000000000001812         db  0x00 ; '.'
0000000000001813         db  0x00 ; '.'
0000000000001814         db  0x00 ; '.'
0000000000001815         db  0x00 ; '.'
0000000000001816         db  0x00 ; '.'
0000000000001817         db  0x00 ; '.'
0000000000001818         db  0x00 ; '.'
0000000000001819         db  0xfe ; '.'
000000000000181a         db  0x20 ; ' '
000000000000181b         db  0x00 ; '.'
000000000000181c         db  0x00 ; '.'
000000000000181d         db  0x00 ; '.'
000000000000181e         db  0x00 ; '.'
000000000000181f         db  0x00 ; '.'
0000000000001820         db  0x07 ; '.'
0000000000001821         db  0x00 ; '.'
0000000000001822         db  0x00 ; '.'
0000000000001823         db  0x00 ; '.'
0000000000001824         db  0x1a ; '.'
0000000000001825         db  0x00 ; '.'
0000000000001826         db  0x00 ; '.'
0000000000001827         db  0x00 ; '.'
0000000000001828         db  0x00 ; '.'
0000000000001829         db  0x00 ; '.'
000000000000182a         db  0x00 ; '.'
000000000000182b         db  0x00 ; '.'
000000000000182c         db  0x00 ; '.'
000000000000182d         db  0x00 ; '.'
000000000000182e         db  0x00 ; '.'
000000000000182f         db  0x00 ; '.'
0000000000001830         db  0x08 ; '.'
0000000000001831         db  0xfe ; '.'
0000000000001832         db  0x20 ; ' '
0000000000001833         db  0x00 ; '.'
0000000000001834         db  0x00 ; '.'
0000000000001835         db  0x00 ; '.'
0000000000001836         db  0x00 ; '.'
0000000000001837         db  0x00 ; '.'
0000000000001838         db  0x07 ; '.'
0000000000001839         db  0x00 ; '.'
000000000000183a         db  0x00 ; '.'
000000000000183b         db  0x00 ; '.'
000000000000183c         db  0x1b ; '.'
000000000000183d         db  0x00 ; '.'
000000000000183e         db  0x00 ; '.'
000000000000183f         db  0x00 ; '.'
0000000000001840         db  0x00 ; '.'
0000000000001841         db  0x00 ; '.'
0000000000001842         db  0x00 ; '.'
0000000000001843         db  0x00 ; '.'
0000000000001844         db  0x00 ; '.'
0000000000001845         db  0x00 ; '.'
0000000000001846         db  0x00 ; '.'
0000000000001847         db  0x00 ; '.'
0000000000001848         db  0x10 ; '.'
0000000000001849         db  0xfe ; '.'
000000000000184a         db  0x20 ; ' '
000000000000184b         db  0x00 ; '.'
000000000000184c         db  0x00 ; '.'
000000000000184d         db  0x00 ; '.'
000000000000184e         db  0x00 ; '.'
000000000000184f         db  0x00 ; '.'
0000000000001850         db  0x07 ; '.'
0000000000001851         db  0x00 ; '.'
0000000000001852         db  0x00 ; '.'
0000000000001853         db  0x00 ; '.'
0000000000001854         db  0x1c ; '.'
0000000000001855         db  0x00 ; '.'
0000000000001856         db  0x00 ; '.'
0000000000001857         db  0x00 ; '.'
0000000000001858         db  0x00 ; '.'
0000000000001859         db  0x00 ; '.'
000000000000185a         db  0x00 ; '.'
000000000000185b         db  0x00 ; '.'
000000000000185c         db  0x00 ; '.'
000000000000185d         db  0x00 ; '.'
000000000000185e         db  0x00 ; '.'
000000000000185f         db  0x00 ; '.'
0000000000001860         db  0x18 ; '.'
0000000000001861         db  0xfe ; '.'
0000000000001862         db  0x20 ; ' '
0000000000001863         db  0x00 ; '.'
0000000000001864         db  0x00 ; '.'
0000000000001865         db  0x00 ; '.'
0000000000001866         db  0x00 ; '.'
0000000000001867         db  0x00 ; '.'
0000000000001868         db  0x07 ; '.'
0000000000001869         db  0x00 ; '.'
000000000000186a         db  0x00 ; '.'
000000000000186b         db  0x00 ; '.'
000000000000186c         db  0x1d ; '.'
000000000000186d         db  0x00 ; '.'
000000000000186e         db  0x00 ; '.'
000000000000186f         db  0x00 ; '.'
0000000000001870         db  0x00 ; '.'
0000000000001871         db  0x00 ; '.'
0000000000001872         db  0x00 ; '.'
0000000000001873         db  0x00 ; '.'
0000000000001874         db  0x00 ; '.'
0000000000001875         db  0x00 ; '.'
0000000000001876         db  0x00 ; '.'
0000000000001877         db  0x00 ; '.'
0000000000001878         db  0x20 ; ' '
0000000000001879         db  0xfe ; '.'
000000000000187a         db  0x20 ; ' '
000000000000187b         db  0x00 ; '.'
000000000000187c         db  0x00 ; '.'
000000000000187d         db  0x00 ; '.'
000000000000187e         db  0x00 ; '.'
000000000000187f         db  0x00 ; '.'
0000000000001880         db  0x07 ; '.'
0000000000001881         db  0x00 ; '.'
0000000000001882         db  0x00 ; '.'
0000000000001883         db  0x00 ; '.'
0000000000001884         db  0x1e ; '.'
0000000000001885         db  0x00 ; '.'
0000000000001886         db  0x00 ; '.'
0000000000001887         db  0x00 ; '.'
0000000000001888         db  0x00 ; '.'
0000000000001889         db  0x00 ; '.'
000000000000188a         db  0x00 ; '.'
000000000000188b         db  0x00 ; '.'
000000000000188c         db  0x00 ; '.'
000000000000188d         db  0x00 ; '.'
000000000000188e         db  0x00 ; '.'
000000000000188f         db  0x00 ; '.'
0000000000001890         db  0x28 ; '('
0000000000001891         db  0xfe ; '.'
0000000000001892         db  0x20 ; ' '
0000000000001893         db  0x00 ; '.'
0000000000001894         db  0x00 ; '.'
0000000000001895         db  0x00 ; '.'
0000000000001896         db  0x00 ; '.'
0000000000001897         db  0x00 ; '.'
0000000000001898         db  0x07 ; '.'
0000000000001899         db  0x00 ; '.'
000000000000189a         db  0x00 ; '.'
000000000000189b         db  0x00 ; '.'
000000000000189c         db  0x1f ; '.'
000000000000189d         db  0x00 ; '.'
000000000000189e         db  0x00 ; '.'
000000000000189f         db  0x00 ; '.'
00000000000018a0         db  0x00 ; '.'
00000000000018a1         db  0x00 ; '.'
00000000000018a2         db  0x00 ; '.'
00000000000018a3         db  0x00 ; '.'
00000000000018a4         db  0x00 ; '.'
00000000000018a5         db  0x00 ; '.'
00000000000018a6         db  0x00 ; '.'
00000000000018a7         db  0x00 ; '.'
00000000000018a8         db  0x30 ; '0'
00000000000018a9         db  0xfe ; '.'
00000000000018aa         db  0x20 ; ' '
00000000000018ab         db  0x00 ; '.'
00000000000018ac         db  0x00 ; '.'
00000000000018ad         db  0x00 ; '.'
00000000000018ae         db  0x00 ; '.'
00000000000018af         db  0x00 ; '.'
00000000000018b0         db  0x07 ; '.'
00000000000018b1         db  0x00 ; '.'
00000000000018b2         db  0x00 ; '.'
00000000000018b3         db  0x00 ; '.'
00000000000018b4         db  0x20 ; ' '
00000000000018b5         db  0x00 ; '.'
00000000000018b6         db  0x00 ; '.'
00000000000018b7         db  0x00 ; '.'
00000000000018b8         db  0x00 ; '.'
00000000000018b9         db  0x00 ; '.'
00000000000018ba         db  0x00 ; '.'
00000000000018bb         db  0x00 ; '.'
00000000000018bc         db  0x00 ; '.'
00000000000018bd         db  0x00 ; '.'
00000000000018be         db  0x00 ; '.'
00000000000018bf         db  0x00 ; '.'
00000000000018c0         db  0x38 ; '8'
00000000000018c1         db  0xfe ; '.'
00000000000018c2         db  0x20 ; ' '
00000000000018c3         db  0x00 ; '.'
00000000000018c4         db  0x00 ; '.'
00000000000018c5         db  0x00 ; '.'
00000000000018c6         db  0x00 ; '.'
00000000000018c7         db  0x00 ; '.'
00000000000018c8         db  0x07 ; '.'
00000000000018c9         db  0x00 ; '.'
00000000000018ca         db  0x00 ; '.'
00000000000018cb         db  0x00 ; '.'
00000000000018cc         db  0x21 ; '!'
00000000000018cd         db  0x00 ; '.'
00000000000018ce         db  0x00 ; '.'
00000000000018cf         db  0x00 ; '.'
00000000000018d0         db  0x00 ; '.'
00000000000018d1         db  0x00 ; '.'
00000000000018d2         db  0x00 ; '.'
00000000000018d3         db  0x00 ; '.'
00000000000018d4         db  0x00 ; '.'
00000000000018d5         db  0x00 ; '.'
00000000000018d6         db  0x00 ; '.'
00000000000018d7         db  0x00 ; '.'
00000000000018d8         db  0x40 ; '@'
00000000000018d9         db  0xfe ; '.'
00000000000018da         db  0x20 ; ' '
00000000000018db         db  0x00 ; '.'
00000000000018dc         db  0x00 ; '.'
00000000000018dd         db  0x00 ; '.'
00000000000018de         db  0x00 ; '.'
00000000000018df         db  0x00 ; '.'
00000000000018e0         db  0x07 ; '.'
00000000000018e1         db  0x00 ; '.'
00000000000018e2         db  0x00 ; '.'
00000000000018e3         db  0x00 ; '.'
00000000000018e4         db  0x22 ; '"'
00000000000018e5         db  0x00 ; '.'
00000000000018e6         db  0x00 ; '.'
00000000000018e7         db  0x00 ; '.'
00000000000018e8         db  0x00 ; '.'
00000000000018e9         db  0x00 ; '.'
00000000000018ea         db  0x00 ; '.'
00000000000018eb         db  0x00 ; '.'
00000000000018ec         db  0x00 ; '.'
00000000000018ed         db  0x00 ; '.'
00000000000018ee         db  0x00 ; '.'
00000000000018ef         db  0x00 ; '.'
00000000000018f0         db  0x48 ; 'H'
00000000000018f1         db  0xfe ; '.'
00000000000018f2         db  0x20 ; ' '
00000000000018f3         db  0x00 ; '.'
00000000000018f4         db  0x00 ; '.'
00000000000018f5         db  0x00 ; '.'
00000000000018f6         db  0x00 ; '.'
00000000000018f7         db  0x00 ; '.'
00000000000018f8         db  0x07 ; '.'
00000000000018f9         db  0x00 ; '.'
00000000000018fa         db  0x00 ; '.'
00000000000018fb         db  0x00 ; '.'
00000000000018fc         db  0x23 ; '#'
00000000000018fd         db  0x00 ; '.'
00000000000018fe         db  0x00 ; '.'
00000000000018ff         db  0x00 ; '.'
0000000000001900         db  0x00 ; '.'
0000000000001901         db  0x00 ; '.'
0000000000001902         db  0x00 ; '.'
0000000000001903         db  0x00 ; '.'
0000000000001904         db  0x00 ; '.'
0000000000001905         db  0x00 ; '.'
0000000000001906         db  0x00 ; '.'
0000000000001907         db  0x00 ; '.'
0000000000001908         db  0x50 ; 'P'
0000000000001909         db  0xfe ; '.'
000000000000190a         db  0x20 ; ' '
000000000000190b         db  0x00 ; '.'
000000000000190c         db  0x00 ; '.'
000000000000190d         db  0x00 ; '.'
000000000000190e         db  0x00 ; '.'
000000000000190f         db  0x00 ; '.'
0000000000001910         db  0x07 ; '.'
0000000000001911         db  0x00 ; '.'
0000000000001912         db  0x00 ; '.'
0000000000001913         db  0x00 ; '.'
0000000000001914         db  0x24 ; '$'
0000000000001915         db  0x00 ; '.'
0000000000001916         db  0x00 ; '.'
0000000000001917         db  0x00 ; '.'
0000000000001918         db  0x00 ; '.'
0000000000001919         db  0x00 ; '.'
000000000000191a         db  0x00 ; '.'
000000000000191b         db  0x00 ; '.'
000000000000191c         db  0x00 ; '.'
000000000000191d         db  0x00 ; '.'
000000000000191e         db  0x00 ; '.'
000000000000191f         db  0x00 ; '.'
0000000000001920         db  0x58 ; 'X'
0000000000001921         db  0xfe ; '.'
0000000000001922         db  0x20 ; ' '
0000000000001923         db  0x00 ; '.'
0000000000001924         db  0x00 ; '.'
0000000000001925         db  0x00 ; '.'
0000000000001926         db  0x00 ; '.'
0000000000001927         db  0x00 ; '.'
0000000000001928         db  0x07 ; '.'
0000000000001929         db  0x00 ; '.'
000000000000192a         db  0x00 ; '.'
000000000000192b         db  0x00 ; '.'
000000000000192c         db  0x25 ; '%'
000000000000192d         db  0x00 ; '.'
000000000000192e         db  0x00 ; '.'
000000000000192f         db  0x00 ; '.'
0000000000001930         db  0x00 ; '.'
0000000000001931         db  0x00 ; '.'
0000000000001932         db  0x00 ; '.'
0000000000001933         db  0x00 ; '.'
0000000000001934         db  0x00 ; '.'
0000000000001935         db  0x00 ; '.'
0000000000001936         db  0x00 ; '.'
0000000000001937         db  0x00 ; '.'
0000000000001938         db  0x60 ; '`'
0000000000001939         db  0xfe ; '.'
000000000000193a         db  0x20 ; ' '
000000000000193b         db  0x00 ; '.'
000000000000193c         db  0x00 ; '.'
000000000000193d         db  0x00 ; '.'
000000000000193e         db  0x00 ; '.'
000000000000193f         db  0x00 ; '.'
0000000000001940         db  0x07 ; '.'
0000000000001941         db  0x00 ; '.'
0000000000001942         db  0x00 ; '.'
0000000000001943         db  0x00 ; '.'
0000000000001944         db  0x26 ; '&'
0000000000001945         db  0x00 ; '.'
0000000000001946         db  0x00 ; '.'
0000000000001947         db  0x00 ; '.'
0000000000001948         db  0x00 ; '.'
0000000000001949         db  0x00 ; '.'
000000000000194a         db  0x00 ; '.'
000000000000194b         db  0x00 ; '.'
000000000000194c         db  0x00 ; '.'
000000000000194d         db  0x00 ; '.'
000000000000194e         db  0x00 ; '.'
000000000000194f         db  0x00 ; '.'
0000000000001950         db  0x68 ; 'h'
0000000000001951         db  0xfe ; '.'
0000000000001952         db  0x20 ; ' '
0000000000001953         db  0x00 ; '.'
0000000000001954         db  0x00 ; '.'
0000000000001955         db  0x00 ; '.'
0000000000001956         db  0x00 ; '.'
0000000000001957         db  0x00 ; '.'
0000000000001958         db  0x07 ; '.'
0000000000001959         db  0x00 ; '.'
000000000000195a         db  0x00 ; '.'
000000000000195b         db  0x00 ; '.'
000000000000195c         db  0x27 ; '''
000000000000195d         db  0x00 ; '.'
000000000000195e         db  0x00 ; '.'
000000000000195f         db  0x00 ; '.'
0000000000001960         db  0x00 ; '.'
0000000000001961         db  0x00 ; '.'
0000000000001962         db  0x00 ; '.'
0000000000001963         db  0x00 ; '.'
0000000000001964         db  0x00 ; '.'
0000000000001965         db  0x00 ; '.'
0000000000001966         db  0x00 ; '.'
0000000000001967         db  0x00 ; '.'
0000000000001968         db  0x70 ; 'p'
0000000000001969         db  0xfe ; '.'
000000000000196a         db  0x20 ; ' '
000000000000196b         db  0x00 ; '.'
000000000000196c         db  0x00 ; '.'
000000000000196d         db  0x00 ; '.'
000000000000196e         db  0x00 ; '.'
000000000000196f         db  0x00 ; '.'
0000000000001970         db  0x07 ; '.'
0000000000001971         db  0x00 ; '.'
0000000000001972         db  0x00 ; '.'
0000000000001973         db  0x00 ; '.'
0000000000001974         db  0x28 ; '('
0000000000001975         db  0x00 ; '.'
0000000000001976         db  0x00 ; '.'
0000000000001977         db  0x00 ; '.'
0000000000001978         db  0x00 ; '.'
0000000000001979         db  0x00 ; '.'
000000000000197a         db  0x00 ; '.'
000000000000197b         db  0x00 ; '.'
000000000000197c         db  0x00 ; '.'
000000000000197d         db  0x00 ; '.'
000000000000197e         db  0x00 ; '.'
000000000000197f         db  0x00 ; '.'
0000000000001980         db  0x78 ; 'x'
0000000000001981         db  0xfe ; '.'
0000000000001982         db  0x20 ; ' '
0000000000001983         db  0x00 ; '.'
0000000000001984         db  0x00 ; '.'
0000000000001985         db  0x00 ; '.'
0000000000001986         db  0x00 ; '.'
0000000000001987         db  0x00 ; '.'
0000000000001988         db  0x07 ; '.'
0000000000001989         db  0x00 ; '.'
000000000000198a         db  0x00 ; '.'
000000000000198b         db  0x00 ; '.'
000000000000198c         db  0x29 ; ')'
000000000000198d         db  0x00 ; '.'
000000000000198e         db  0x00 ; '.'
000000000000198f         db  0x00 ; '.'
0000000000001990         db  0x00 ; '.'
0000000000001991         db  0x00 ; '.'
0000000000001992         db  0x00 ; '.'
0000000000001993         db  0x00 ; '.'
0000000000001994         db  0x00 ; '.'
0000000000001995         db  0x00 ; '.'
0000000000001996         db  0x00 ; '.'
0000000000001997         db  0x00 ; '.'
0000000000001998         db  0x80 ; '.'
0000000000001999         db  0xfe ; '.'
000000000000199a         db  0x20 ; ' '
000000000000199b         db  0x00 ; '.'
000000000000199c         db  0x00 ; '.'
000000000000199d         db  0x00 ; '.'
000000000000199e         db  0x00 ; '.'
000000000000199f         db  0x00 ; '.'
00000000000019a0         db  0x07 ; '.'
00000000000019a1         db  0x00 ; '.'
00000000000019a2         db  0x00 ; '.'
00000000000019a3         db  0x00 ; '.'
00000000000019a4         db  0x2b ; '+'
00000000000019a5         db  0x00 ; '.'
00000000000019a6         db  0x00 ; '.'
00000000000019a7         db  0x00 ; '.'
00000000000019a8         db  0x00 ; '.'
00000000000019a9         db  0x00 ; '.'
00000000000019aa         db  0x00 ; '.'
00000000000019ab         db  0x00 ; '.'
00000000000019ac         db  0x00 ; '.'
00000000000019ad         db  0x00 ; '.'
00000000000019ae         db  0x00 ; '.'
00000000000019af         db  0x00 ; '.'
00000000000019b0         db  0x88 ; '.'
00000000000019b1         db  0xfe ; '.'
00000000000019b2         db  0x20 ; ' '
00000000000019b3         db  0x00 ; '.'
00000000000019b4         db  0x00 ; '.'
00000000000019b5         db  0x00 ; '.'
00000000000019b6         db  0x00 ; '.'
00000000000019b7         db  0x00 ; '.'
00000000000019b8         db  0x07 ; '.'
00000000000019b9         db  0x00 ; '.'
00000000000019ba         db  0x00 ; '.'
00000000000019bb         db  0x00 ; '.'
00000000000019bc         db  0x2c ; ','
00000000000019bd         db  0x00 ; '.'
00000000000019be         db  0x00 ; '.'
00000000000019bf         db  0x00 ; '.'
00000000000019c0         db  0x00 ; '.'
00000000000019c1         db  0x00 ; '.'
00000000000019c2         db  0x00 ; '.'
00000000000019c3         db  0x00 ; '.'
00000000000019c4         db  0x00 ; '.'
00000000000019c5         db  0x00 ; '.'
00000000000019c6         db  0x00 ; '.'
00000000000019c7         db  0x00 ; '.'
00000000000019c8         db  0x90 ; '.'
00000000000019c9         db  0xfe ; '.'
00000000000019ca         db  0x20 ; ' '
00000000000019cb         db  0x00 ; '.'
00000000000019cc         db  0x00 ; '.'
00000000000019cd         db  0x00 ; '.'
00000000000019ce         db  0x00 ; '.'
00000000000019cf         db  0x00 ; '.'
00000000000019d0         db  0x07 ; '.'
00000000000019d1         db  0x00 ; '.'
00000000000019d2         db  0x00 ; '.'
00000000000019d3         db  0x00 ; '.'
00000000000019d4         db  0x2d ; '-'
00000000000019d5         db  0x00 ; '.'
00000000000019d6         db  0x00 ; '.'
00000000000019d7         db  0x00 ; '.'
00000000000019d8         db  0x00 ; '.'
00000000000019d9         db  0x00 ; '.'
00000000000019da         db  0x00 ; '.'
00000000000019db         db  0x00 ; '.'
00000000000019dc         db  0x00 ; '.'
00000000000019dd         db  0x00 ; '.'
00000000000019de         db  0x00 ; '.'
00000000000019df         db  0x00 ; '.'
00000000000019e0         db  0x98 ; '.'
00000000000019e1         db  0xfe ; '.'
00000000000019e2         db  0x20 ; ' '
00000000000019e3         db  0x00 ; '.'
00000000000019e4         db  0x00 ; '.'
00000000000019e5         db  0x00 ; '.'
00000000000019e6         db  0x00 ; '.'
00000000000019e7         db  0x00 ; '.'
00000000000019e8         db  0x07 ; '.'
00000000000019e9         db  0x00 ; '.'
00000000000019ea         db  0x00 ; '.'
00000000000019eb         db  0x00 ; '.'
00000000000019ec         db  0x2e ; '.'
00000000000019ed         db  0x00 ; '.'
00000000000019ee         db  0x00 ; '.'
00000000000019ef         db  0x00 ; '.'
00000000000019f0         db  0x00 ; '.'
00000000000019f1         db  0x00 ; '.'
00000000000019f2         db  0x00 ; '.'
00000000000019f3         db  0x00 ; '.'
00000000000019f4         db  0x00 ; '.'
00000000000019f5         db  0x00 ; '.'
00000000000019f6         db  0x00 ; '.'
00000000000019f7         db  0x00 ; '.'
00000000000019f8         db  0xa0 ; '.'
00000000000019f9         db  0xfe ; '.'
00000000000019fa         db  0x20 ; ' '
00000000000019fb         db  0x00 ; '.'
00000000000019fc         db  0x00 ; '.'
00000000000019fd         db  0x00 ; '.'
00000000000019fe         db  0x00 ; '.'
00000000000019ff         db  0x00 ; '.'
0000000000001a00         db  0x07 ; '.'
0000000000001a01         db  0x00 ; '.'
0000000000001a02         db  0x00 ; '.'
0000000000001a03         db  0x00 ; '.'
0000000000001a04         db  0x2f ; '/'
0000000000001a05         db  0x00 ; '.'
0000000000001a06         db  0x00 ; '.'
0000000000001a07         db  0x00 ; '.'
0000000000001a08         db  0x00 ; '.'
0000000000001a09         db  0x00 ; '.'
0000000000001a0a         db  0x00 ; '.'
0000000000001a0b         db  0x00 ; '.'
0000000000001a0c         db  0x00 ; '.'
0000000000001a0d         db  0x00 ; '.'
0000000000001a0e         db  0x00 ; '.'
0000000000001a0f         db  0x00 ; '.'
0000000000001a10         db  0xa8 ; '.'
0000000000001a11         db  0xfe ; '.'
0000000000001a12         db  0x20 ; ' '
0000000000001a13         db  0x00 ; '.'
0000000000001a14         db  0x00 ; '.'
0000000000001a15         db  0x00 ; '.'
0000000000001a16         db  0x00 ; '.'
0000000000001a17         db  0x00 ; '.'
0000000000001a18         db  0x07 ; '.'
0000000000001a19         db  0x00 ; '.'
0000000000001a1a         db  0x00 ; '.'
0000000000001a1b         db  0x00 ; '.'
0000000000001a1c         db  0x30 ; '0'
0000000000001a1d         db  0x00 ; '.'
0000000000001a1e         db  0x00 ; '.'
0000000000001a1f         db  0x00 ; '.'
0000000000001a20         db  0x00 ; '.'
0000000000001a21         db  0x00 ; '.'
0000000000001a22         db  0x00 ; '.'
0000000000001a23         db  0x00 ; '.'
0000000000001a24         db  0x00 ; '.'
0000000000001a25         db  0x00 ; '.'
0000000000001a26         db  0x00 ; '.'
0000000000001a27         db  0x00 ; '.'
0000000000001a28         db  0xb0 ; '.'
0000000000001a29         db  0xfe ; '.'
0000000000001a2a         db  0x20 ; ' '
0000000000001a2b         db  0x00 ; '.'
0000000000001a2c         db  0x00 ; '.'
0000000000001a2d         db  0x00 ; '.'
0000000000001a2e         db  0x00 ; '.'
0000000000001a2f         db  0x00 ; '.'
0000000000001a30         db  0x07 ; '.'
0000000000001a31         db  0x00 ; '.'
0000000000001a32         db  0x00 ; '.'
0000000000001a33         db  0x00 ; '.'
0000000000001a34         db  0x31 ; '1'
0000000000001a35         db  0x00 ; '.'
0000000000001a36         db  0x00 ; '.'
0000000000001a37         db  0x00 ; '.'
0000000000001a38         db  0x00 ; '.'
0000000000001a39         db  0x00 ; '.'
0000000000001a3a         db  0x00 ; '.'
0000000000001a3b         db  0x00 ; '.'
0000000000001a3c         db  0x00 ; '.'
0000000000001a3d         db  0x00 ; '.'
0000000000001a3e         db  0x00 ; '.'
0000000000001a3f         db  0x00 ; '.'
0000000000001a40         db  0xb8 ; '.'
0000000000001a41         db  0xfe ; '.'
0000000000001a42         db  0x20 ; ' '
0000000000001a43         db  0x00 ; '.'
0000000000001a44         db  0x00 ; '.'
0000000000001a45         db  0x00 ; '.'
0000000000001a46         db  0x00 ; '.'
0000000000001a47         db  0x00 ; '.'
0000000000001a48         db  0x07 ; '.'
0000000000001a49         db  0x00 ; '.'
0000000000001a4a         db  0x00 ; '.'
0000000000001a4b         db  0x00 ; '.'
0000000000001a4c         db  0x32 ; '2'
0000000000001a4d         db  0x00 ; '.'
0000000000001a4e         db  0x00 ; '.'
0000000000001a4f         db  0x00 ; '.'
0000000000001a50         db  0x00 ; '.'
0000000000001a51         db  0x00 ; '.'
0000000000001a52         db  0x00 ; '.'
0000000000001a53         db  0x00 ; '.'
0000000000001a54         db  0x00 ; '.'
0000000000001a55         db  0x00 ; '.'
0000000000001a56         db  0x00 ; '.'
0000000000001a57         db  0x00 ; '.'
0000000000001a58         db  0xc0 ; '.'
0000000000001a59         db  0xfe ; '.'
0000000000001a5a         db  0x20 ; ' '
0000000000001a5b         db  0x00 ; '.'
0000000000001a5c         db  0x00 ; '.'
0000000000001a5d         db  0x00 ; '.'
0000000000001a5e         db  0x00 ; '.'
0000000000001a5f         db  0x00 ; '.'
0000000000001a60         db  0x07 ; '.'
0000000000001a61         db  0x00 ; '.'
0000000000001a62         db  0x00 ; '.'
0000000000001a63         db  0x00 ; '.'
0000000000001a64         db  0x34 ; '4'
0000000000001a65         db  0x00 ; '.'
0000000000001a66         db  0x00 ; '.'
0000000000001a67         db  0x00 ; '.'
0000000000001a68         db  0x00 ; '.'
0000000000001a69         db  0x00 ; '.'
0000000000001a6a         db  0x00 ; '.'
0000000000001a6b         db  0x00 ; '.'
0000000000001a6c         db  0x00 ; '.'
0000000000001a6d         db  0x00 ; '.'
0000000000001a6e         db  0x00 ; '.'
0000000000001a6f         db  0x00 ; '.'
0000000000001a70         db  0xc8 ; '.'
0000000000001a71         db  0xfe ; '.'
0000000000001a72         db  0x20 ; ' '
0000000000001a73         db  0x00 ; '.'
0000000000001a74         db  0x00 ; '.'
0000000000001a75         db  0x00 ; '.'
0000000000001a76         db  0x00 ; '.'
0000000000001a77         db  0x00 ; '.'
0000000000001a78         db  0x07 ; '.'
0000000000001a79         db  0x00 ; '.'
0000000000001a7a         db  0x00 ; '.'
0000000000001a7b         db  0x00 ; '.'
0000000000001a7c         db  0x35 ; '5'
0000000000001a7d         db  0x00 ; '.'
0000000000001a7e         db  0x00 ; '.'
0000000000001a7f         db  0x00 ; '.'
0000000000001a80         db  0x00 ; '.'
0000000000001a81         db  0x00 ; '.'
0000000000001a82         db  0x00 ; '.'
0000000000001a83         db  0x00 ; '.'
0000000000001a84         db  0x00 ; '.'
0000000000001a85         db  0x00 ; '.'
0000000000001a86         db  0x00 ; '.'
0000000000001a87         db  0x00 ; '.'
0000000000001a88         db  0xd0 ; '.'
0000000000001a89         db  0xfe ; '.'
0000000000001a8a         db  0x20 ; ' '
0000000000001a8b         db  0x00 ; '.'
0000000000001a8c         db  0x00 ; '.'
0000000000001a8d         db  0x00 ; '.'
0000000000001a8e         db  0x00 ; '.'
0000000000001a8f         db  0x00 ; '.'
0000000000001a90         db  0x07 ; '.'
0000000000001a91         db  0x00 ; '.'
0000000000001a92         db  0x00 ; '.'
0000000000001a93         db  0x00 ; '.'
0000000000001a94         db  0x36 ; '6'
0000000000001a95         db  0x00 ; '.'
0000000000001a96         db  0x00 ; '.'
0000000000001a97         db  0x00 ; '.'
0000000000001a98         db  0x00 ; '.'
0000000000001a99         db  0x00 ; '.'
0000000000001a9a         db  0x00 ; '.'
0000000000001a9b         db  0x00 ; '.'
0000000000001a9c         db  0x00 ; '.'
0000000000001a9d         db  0x00 ; '.'
0000000000001a9e         db  0x00 ; '.'
0000000000001a9f         db  0x00 ; '.'
0000000000001aa0         db  0xd8 ; '.'
0000000000001aa1         db  0xfe ; '.'
0000000000001aa2         db  0x20 ; ' '
0000000000001aa3         db  0x00 ; '.'
0000000000001aa4         db  0x00 ; '.'
0000000000001aa5         db  0x00 ; '.'
0000000000001aa6         db  0x00 ; '.'
0000000000001aa7         db  0x00 ; '.'
0000000000001aa8         db  0x07 ; '.'
0000000000001aa9         db  0x00 ; '.'
0000000000001aaa         db  0x00 ; '.'
0000000000001aab         db  0x00 ; '.'
0000000000001aac         db  0x37 ; '7'
0000000000001aad         db  0x00 ; '.'
0000000000001aae         db  0x00 ; '.'
0000000000001aaf         db  0x00 ; '.'
0000000000001ab0         db  0x00 ; '.'
0000000000001ab1         db  0x00 ; '.'
0000000000001ab2         db  0x00 ; '.'
0000000000001ab3         db  0x00 ; '.'
0000000000001ab4         db  0x00 ; '.'
0000000000001ab5         db  0x00 ; '.'
0000000000001ab6         db  0x00 ; '.'
0000000000001ab7         db  0x00 ; '.'
0000000000001ab8         db  0xe0 ; '.'
0000000000001ab9         db  0xfe ; '.'
0000000000001aba         db  0x20 ; ' '
0000000000001abb         db  0x00 ; '.'
0000000000001abc         db  0x00 ; '.'
0000000000001abd         db  0x00 ; '.'
0000000000001abe         db  0x00 ; '.'
0000000000001abf         db  0x00 ; '.'
0000000000001ac0         db  0x07 ; '.'
0000000000001ac1         db  0x00 ; '.'
0000000000001ac2         db  0x00 ; '.'
0000000000001ac3         db  0x00 ; '.'
0000000000001ac4         db  0x38 ; '8'
0000000000001ac5         db  0x00 ; '.'
0000000000001ac6         db  0x00 ; '.'
0000000000001ac7         db  0x00 ; '.'
0000000000001ac8         db  0x00 ; '.'
0000000000001ac9         db  0x00 ; '.'
0000000000001aca         db  0x00 ; '.'
0000000000001acb         db  0x00 ; '.'
0000000000001acc         db  0x00 ; '.'
0000000000001acd         db  0x00 ; '.'
0000000000001ace         db  0x00 ; '.'
0000000000001acf         db  0x00 ; '.'
0000000000001ad0         db  0xe8 ; '.'
0000000000001ad1         db  0xfe ; '.'
0000000000001ad2         db  0x20 ; ' '
0000000000001ad3         db  0x00 ; '.'
0000000000001ad4         db  0x00 ; '.'
0000000000001ad5         db  0x00 ; '.'
0000000000001ad6         db  0x00 ; '.'
0000000000001ad7         db  0x00 ; '.'
0000000000001ad8         db  0x07 ; '.'
0000000000001ad9         db  0x00 ; '.'
0000000000001ada         db  0x00 ; '.'
0000000000001adb         db  0x00 ; '.'
0000000000001adc         db  0x39 ; '9'
0000000000001add         db  0x00 ; '.'
0000000000001ade         db  0x00 ; '.'
0000000000001adf         db  0x00 ; '.'
0000000000001ae0         db  0x00 ; '.'
0000000000001ae1         db  0x00 ; '.'
0000000000001ae2         db  0x00 ; '.'
0000000000001ae3         db  0x00 ; '.'
0000000000001ae4         db  0x00 ; '.'
0000000000001ae5         db  0x00 ; '.'
0000000000001ae6         db  0x00 ; '.'
0000000000001ae7         db  0x00 ; '.'
0000000000001ae8         db  0xf0 ; '.'
0000000000001ae9         db  0xfe ; '.'
0000000000001aea         db  0x20 ; ' '
0000000000001aeb         db  0x00 ; '.'
0000000000001aec         db  0x00 ; '.'
0000000000001aed         db  0x00 ; '.'
0000000000001aee         db  0x00 ; '.'
0000000000001aef         db  0x00 ; '.'
0000000000001af0         db  0x07 ; '.'
0000000000001af1         db  0x00 ; '.'
0000000000001af2         db  0x00 ; '.'
0000000000001af3         db  0x00 ; '.'
0000000000001af4         db  0x3a ; ':'
0000000000001af5         db  0x00 ; '.'
0000000000001af6         db  0x00 ; '.'
0000000000001af7         db  0x00 ; '.'
0000000000001af8         db  0x00 ; '.'
0000000000001af9         db  0x00 ; '.'
0000000000001afa         db  0x00 ; '.'
0000000000001afb         db  0x00 ; '.'
0000000000001afc         db  0x00 ; '.'
0000000000001afd         db  0x00 ; '.'
0000000000001afe         db  0x00 ; '.'
0000000000001aff         db  0x00 ; '.'
0000000000001b00         db  0xf8 ; '.'
0000000000001b01         db  0xfe ; '.'
0000000000001b02         db  0x20 ; ' '
0000000000001b03         db  0x00 ; '.'
0000000000001b04         db  0x00 ; '.'
0000000000001b05         db  0x00 ; '.'
0000000000001b06         db  0x00 ; '.'
0000000000001b07         db  0x00 ; '.'
0000000000001b08         db  0x07 ; '.'
0000000000001b09         db  0x00 ; '.'
0000000000001b0a         db  0x00 ; '.'
0000000000001b0b         db  0x00 ; '.'
0000000000001b0c         db  0x3b ; ';'
0000000000001b0d         db  0x00 ; '.'
0000000000001b0e         db  0x00 ; '.'
0000000000001b0f         db  0x00 ; '.'
0000000000001b10         db  0x00 ; '.'
0000000000001b11         db  0x00 ; '.'
0000000000001b12         db  0x00 ; '.'
0000000000001b13         db  0x00 ; '.'
0000000000001b14         db  0x00 ; '.'
0000000000001b15         db  0x00 ; '.'
0000000000001b16         db  0x00 ; '.'
0000000000001b17         db  0x00 ; '.'
0000000000001b18         db  0x00 ; '.'
0000000000001b19         db  0xff ; '.'
0000000000001b1a         db  0x20 ; ' '
0000000000001b1b         db  0x00 ; '.'
0000000000001b1c         db  0x00 ; '.'
0000000000001b1d         db  0x00 ; '.'
0000000000001b1e         db  0x00 ; '.'
0000000000001b1f         db  0x00 ; '.'
0000000000001b20         db  0x07 ; '.'
0000000000001b21         db  0x00 ; '.'
0000000000001b22         db  0x00 ; '.'
0000000000001b23         db  0x00 ; '.'
0000000000001b24         db  0x3c ; '<'
0000000000001b25         db  0x00 ; '.'
0000000000001b26         db  0x00 ; '.'
0000000000001b27         db  0x00 ; '.'
0000000000001b28         db  0x00 ; '.'
0000000000001b29         db  0x00 ; '.'
0000000000001b2a         db  0x00 ; '.'
0000000000001b2b         db  0x00 ; '.'
0000000000001b2c         db  0x00 ; '.'
0000000000001b2d         db  0x00 ; '.'
0000000000001b2e         db  0x00 ; '.'
0000000000001b2f         db  0x00 ; '.'
0000000000001b30         db  0x08 ; '.'
0000000000001b31         db  0xff ; '.'
0000000000001b32         db  0x20 ; ' '
0000000000001b33         db  0x00 ; '.'
0000000000001b34         db  0x00 ; '.'
0000000000001b35         db  0x00 ; '.'
0000000000001b36         db  0x00 ; '.'
0000000000001b37         db  0x00 ; '.'
0000000000001b38         db  0x07 ; '.'
0000000000001b39         db  0x00 ; '.'
0000000000001b3a         db  0x00 ; '.'
0000000000001b3b         db  0x00 ; '.'
0000000000001b3c         db  0x3d ; '='
0000000000001b3d         db  0x00 ; '.'
0000000000001b3e         db  0x00 ; '.'
0000000000001b3f         db  0x00 ; '.'
0000000000001b40         db  0x00 ; '.'
0000000000001b41         db  0x00 ; '.'
0000000000001b42         db  0x00 ; '.'
0000000000001b43         db  0x00 ; '.'
0000000000001b44         db  0x00 ; '.'
0000000000001b45         db  0x00 ; '.'
0000000000001b46         db  0x00 ; '.'
0000000000001b47         db  0x00 ; '.'
0000000000001b48         db  0x10 ; '.'
0000000000001b49         db  0xff ; '.'
0000000000001b4a         db  0x20 ; ' '
0000000000001b4b         db  0x00 ; '.'
0000000000001b4c         db  0x00 ; '.'
0000000000001b4d         db  0x00 ; '.'
0000000000001b4e         db  0x00 ; '.'
0000000000001b4f         db  0x00 ; '.'
0000000000001b50         db  0x07 ; '.'
0000000000001b51         db  0x00 ; '.'
0000000000001b52         db  0x00 ; '.'
0000000000001b53         db  0x00 ; '.'
0000000000001b54         db  0x3e ; '>'
0000000000001b55         db  0x00 ; '.'
0000000000001b56         db  0x00 ; '.'
0000000000001b57         db  0x00 ; '.'
0000000000001b58         db  0x00 ; '.'
0000000000001b59         db  0x00 ; '.'
0000000000001b5a         db  0x00 ; '.'
0000000000001b5b         db  0x00 ; '.'
0000000000001b5c         db  0x00 ; '.'
0000000000001b5d         db  0x00 ; '.'
0000000000001b5e         db  0x00 ; '.'
0000000000001b5f         db  0x00 ; '.'
0000000000001b60         db  0x18 ; '.'
0000000000001b61         db  0xff ; '.'
0000000000001b62         db  0x20 ; ' '
0000000000001b63         db  0x00 ; '.'
0000000000001b64         db  0x00 ; '.'
0000000000001b65         db  0x00 ; '.'
0000000000001b66         db  0x00 ; '.'
0000000000001b67         db  0x00 ; '.'
0000000000001b68         db  0x07 ; '.'
0000000000001b69         db  0x00 ; '.'
0000000000001b6a         db  0x00 ; '.'
0000000000001b6b         db  0x00 ; '.'
0000000000001b6c         db  0x3f ; '?'
0000000000001b6d         db  0x00 ; '.'
0000000000001b6e         db  0x00 ; '.'
0000000000001b6f         db  0x00 ; '.'
0000000000001b70         db  0x00 ; '.'
0000000000001b71         db  0x00 ; '.'
0000000000001b72         db  0x00 ; '.'
0000000000001b73         db  0x00 ; '.'
0000000000001b74         db  0x00 ; '.'
0000000000001b75         db  0x00 ; '.'
0000000000001b76         db  0x00 ; '.'
0000000000001b77         db  0x00 ; '.'
0000000000001b78         db  0x20 ; ' '
0000000000001b79         db  0xff ; '.'
0000000000001b7a         db  0x20 ; ' '
0000000000001b7b         db  0x00 ; '.'
0000000000001b7c         db  0x00 ; '.'
0000000000001b7d         db  0x00 ; '.'
0000000000001b7e         db  0x00 ; '.'
0000000000001b7f         db  0x00 ; '.'
0000000000001b80         db  0x07 ; '.'
0000000000001b81         db  0x00 ; '.'
0000000000001b82         db  0x00 ; '.'
0000000000001b83         db  0x00 ; '.'
0000000000001b84         db  0x40 ; '@'
0000000000001b85         db  0x00 ; '.'
0000000000001b86         db  0x00 ; '.'
0000000000001b87         db  0x00 ; '.'
0000000000001b88         db  0x00 ; '.'
0000000000001b89         db  0x00 ; '.'
0000000000001b8a         db  0x00 ; '.'
0000000000001b8b         db  0x00 ; '.'
0000000000001b8c         db  0x00 ; '.'
0000000000001b8d         db  0x00 ; '.'
0000000000001b8e         db  0x00 ; '.'
0000000000001b8f         db  0x00 ; '.'
0000000000001b90         db  0x28 ; '('
0000000000001b91         db  0xff ; '.'
0000000000001b92         db  0x20 ; ' '
0000000000001b93         db  0x00 ; '.'
0000000000001b94         db  0x00 ; '.'
0000000000001b95         db  0x00 ; '.'
0000000000001b96         db  0x00 ; '.'
0000000000001b97         db  0x00 ; '.'
0000000000001b98         db  0x07 ; '.'
0000000000001b99         db  0x00 ; '.'
0000000000001b9a         db  0x00 ; '.'
0000000000001b9b         db  0x00 ; '.'
0000000000001b9c         db  0x41 ; 'A'
0000000000001b9d         db  0x00 ; '.'
0000000000001b9e         db  0x00 ; '.'
0000000000001b9f         db  0x00 ; '.'
0000000000001ba0         db  0x00 ; '.'
0000000000001ba1         db  0x00 ; '.'
0000000000001ba2         db  0x00 ; '.'
0000000000001ba3         db  0x00 ; '.'
0000000000001ba4         db  0x00 ; '.'
0000000000001ba5         db  0x00 ; '.'
0000000000001ba6         db  0x00 ; '.'
0000000000001ba7         db  0x00 ; '.'
0000000000001ba8         db  0x30 ; '0'
0000000000001ba9         db  0xff ; '.'
0000000000001baa         db  0x20 ; ' '
0000000000001bab         db  0x00 ; '.'
0000000000001bac         db  0x00 ; '.'
0000000000001bad         db  0x00 ; '.'
0000000000001bae         db  0x00 ; '.'
0000000000001baf         db  0x00 ; '.'
0000000000001bb0         db  0x07 ; '.'
0000000000001bb1         db  0x00 ; '.'
0000000000001bb2         db  0x00 ; '.'
0000000000001bb3         db  0x00 ; '.'
0000000000001bb4         db  0x42 ; 'B'
0000000000001bb5         db  0x00 ; '.'
0000000000001bb6         db  0x00 ; '.'
0000000000001bb7         db  0x00 ; '.'
0000000000001bb8         db  0x00 ; '.'
0000000000001bb9         db  0x00 ; '.'
0000000000001bba         db  0x00 ; '.'
0000000000001bbb         db  0x00 ; '.'
0000000000001bbc         db  0x00 ; '.'
0000000000001bbd         db  0x00 ; '.'
0000000000001bbe         db  0x00 ; '.'
0000000000001bbf         db  0x00 ; '.'
0000000000001bc0         db  0x38 ; '8'
0000000000001bc1         db  0xff ; '.'
0000000000001bc2         db  0x20 ; ' '
0000000000001bc3         db  0x00 ; '.'
0000000000001bc4         db  0x00 ; '.'
0000000000001bc5         db  0x00 ; '.'
0000000000001bc6         db  0x00 ; '.'
0000000000001bc7         db  0x00 ; '.'
0000000000001bc8         db  0x07 ; '.'
0000000000001bc9         db  0x00 ; '.'
0000000000001bca         db  0x00 ; '.'
0000000000001bcb         db  0x00 ; '.'
0000000000001bcc         db  0x43 ; 'C'
0000000000001bcd         db  0x00 ; '.'
0000000000001bce         db  0x00 ; '.'
0000000000001bcf         db  0x00 ; '.'
0000000000001bd0         db  0x00 ; '.'
0000000000001bd1         db  0x00 ; '.'
0000000000001bd2         db  0x00 ; '.'
0000000000001bd3         db  0x00 ; '.'
0000000000001bd4         db  0x00 ; '.'
0000000000001bd5         db  0x00 ; '.'
0000000000001bd6         db  0x00 ; '.'
0000000000001bd7         db  0x00 ; '.'
0000000000001bd8         db  0x40 ; '@'
0000000000001bd9         db  0xff ; '.'
0000000000001bda         db  0x20 ; ' '
0000000000001bdb         db  0x00 ; '.'
0000000000001bdc         db  0x00 ; '.'
0000000000001bdd         db  0x00 ; '.'
0000000000001bde         db  0x00 ; '.'
0000000000001bdf         db  0x00 ; '.'
0000000000001be0         db  0x07 ; '.'
0000000000001be1         db  0x00 ; '.'
0000000000001be2         db  0x00 ; '.'
0000000000001be3         db  0x00 ; '.'
0000000000001be4         db  0x44 ; 'D'
0000000000001be5         db  0x00 ; '.'
0000000000001be6         db  0x00 ; '.'
0000000000001be7         db  0x00 ; '.'
0000000000001be8         db  0x00 ; '.'
0000000000001be9         db  0x00 ; '.'
0000000000001bea         db  0x00 ; '.'
0000000000001beb         db  0x00 ; '.'
0000000000001bec         db  0x00 ; '.'
0000000000001bed         db  0x00 ; '.'
0000000000001bee         db  0x00 ; '.'
0000000000001bef         db  0x00 ; '.'
0000000000001bf0         db  0x48 ; 'H'
0000000000001bf1         db  0xff ; '.'
0000000000001bf2         db  0x20 ; ' '
0000000000001bf3         db  0x00 ; '.'
0000000000001bf4         db  0x00 ; '.'
0000000000001bf5         db  0x00 ; '.'
0000000000001bf6         db  0x00 ; '.'
0000000000001bf7         db  0x00 ; '.'
0000000000001bf8         db  0x07 ; '.'
0000000000001bf9         db  0x00 ; '.'
0000000000001bfa         db  0x00 ; '.'
0000000000001bfb         db  0x00 ; '.'
0000000000001bfc         db  0x45 ; 'E'
0000000000001bfd         db  0x00 ; '.'
0000000000001bfe         db  0x00 ; '.'
0000000000001bff         db  0x00 ; '.'
0000000000001c00         db  0x00 ; '.'
0000000000001c01         db  0x00 ; '.'
0000000000001c02         db  0x00 ; '.'
0000000000001c03         db  0x00 ; '.'
0000000000001c04         db  0x00 ; '.'
0000000000001c05         db  0x00 ; '.'
0000000000001c06         db  0x00 ; '.'
0000000000001c07         db  0x00 ; '.'
0000000000001c08         db  0x50 ; 'P'
0000000000001c09         db  0xff ; '.'
0000000000001c0a         db  0x20 ; ' '
0000000000001c0b         db  0x00 ; '.'
0000000000001c0c         db  0x00 ; '.'
0000000000001c0d         db  0x00 ; '.'
0000000000001c0e         db  0x00 ; '.'
0000000000001c0f         db  0x00 ; '.'
0000000000001c10         db  0x07 ; '.'
0000000000001c11         db  0x00 ; '.'
0000000000001c12         db  0x00 ; '.'
0000000000001c13         db  0x00 ; '.'
0000000000001c14         db  0x46 ; 'F'
0000000000001c15         db  0x00 ; '.'
0000000000001c16         db  0x00 ; '.'
0000000000001c17         db  0x00 ; '.'
0000000000001c18         db  0x00 ; '.'
0000000000001c19         db  0x00 ; '.'
0000000000001c1a         db  0x00 ; '.'
0000000000001c1b         db  0x00 ; '.'
0000000000001c1c         db  0x00 ; '.'
0000000000001c1d         db  0x00 ; '.'
0000000000001c1e         db  0x00 ; '.'
0000000000001c1f         db  0x00 ; '.'
0000000000001c20         db  0x58 ; 'X'
0000000000001c21         db  0xff ; '.'
0000000000001c22         db  0x20 ; ' '
0000000000001c23         db  0x00 ; '.'
0000000000001c24         db  0x00 ; '.'
0000000000001c25         db  0x00 ; '.'
0000000000001c26         db  0x00 ; '.'
0000000000001c27         db  0x00 ; '.'
0000000000001c28         db  0x07 ; '.'
0000000000001c29         db  0x00 ; '.'
0000000000001c2a         db  0x00 ; '.'
0000000000001c2b         db  0x00 ; '.'
0000000000001c2c         db  0x47 ; 'G'
0000000000001c2d         db  0x00 ; '.'
0000000000001c2e         db  0x00 ; '.'
0000000000001c2f         db  0x00 ; '.'
0000000000001c30         db  0x00 ; '.'
0000000000001c31         db  0x00 ; '.'
0000000000001c32         db  0x00 ; '.'
0000000000001c33         db  0x00 ; '.'
0000000000001c34         db  0x00 ; '.'
0000000000001c35         db  0x00 ; '.'
0000000000001c36         db  0x00 ; '.'
0000000000001c37         db  0x00 ; '.'
0000000000001c38         db  0x60 ; '`'
0000000000001c39         db  0xff ; '.'
0000000000001c3a         db  0x20 ; ' '
0000000000001c3b         db  0x00 ; '.'
0000000000001c3c         db  0x00 ; '.'
0000000000001c3d         db  0x00 ; '.'
0000000000001c3e         db  0x00 ; '.'
0000000000001c3f         db  0x00 ; '.'
0000000000001c40         db  0x07 ; '.'
0000000000001c41         db  0x00 ; '.'
0000000000001c42         db  0x00 ; '.'
0000000000001c43         db  0x00 ; '.'
0000000000001c44         db  0x48 ; 'H'
0000000000001c45         db  0x00 ; '.'
0000000000001c46         db  0x00 ; '.'
0000000000001c47         db  0x00 ; '.'
0000000000001c48         db  0x00 ; '.'
0000000000001c49         db  0x00 ; '.'
0000000000001c4a         db  0x00 ; '.'
0000000000001c4b         db  0x00 ; '.'
0000000000001c4c         db  0x00 ; '.'
0000000000001c4d         db  0x00 ; '.'
0000000000001c4e         db  0x00 ; '.'
0000000000001c4f         db  0x00 ; '.'
0000000000001c50         db  0x68 ; 'h'
0000000000001c51         db  0xff ; '.'
0000000000001c52         db  0x20 ; ' '
0000000000001c53         db  0x00 ; '.'
0000000000001c54         db  0x00 ; '.'
0000000000001c55         db  0x00 ; '.'
0000000000001c56         db  0x00 ; '.'
0000000000001c57         db  0x00 ; '.'
0000000000001c58         db  0x07 ; '.'
0000000000001c59         db  0x00 ; '.'
0000000000001c5a         db  0x00 ; '.'
0000000000001c5b         db  0x00 ; '.'
0000000000001c5c         db  0x49 ; 'I'
0000000000001c5d         db  0x00 ; '.'
0000000000001c5e         db  0x00 ; '.'
0000000000001c5f         db  0x00 ; '.'
0000000000001c60         db  0x00 ; '.'
0000000000001c61         db  0x00 ; '.'
0000000000001c62         db  0x00 ; '.'
0000000000001c63         db  0x00 ; '.'
0000000000001c64         db  0x00 ; '.'
0000000000001c65         db  0x00 ; '.'
0000000000001c66         db  0x00 ; '.'
0000000000001c67         db  0x00 ; '.'
0000000000001c68         db  0x70 ; 'p'
0000000000001c69         db  0xff ; '.'
0000000000001c6a         db  0x20 ; ' '
0000000000001c6b         db  0x00 ; '.'
0000000000001c6c         db  0x00 ; '.'
0000000000001c6d         db  0x00 ; '.'
0000000000001c6e         db  0x00 ; '.'
0000000000001c6f         db  0x00 ; '.'
0000000000001c70         db  0x07 ; '.'
0000000000001c71         db  0x00 ; '.'
0000000000001c72         db  0x00 ; '.'
0000000000001c73         db  0x00 ; '.'
0000000000001c74         db  0x4a ; 'J'
0000000000001c75         db  0x00 ; '.'
0000000000001c76         db  0x00 ; '.'
0000000000001c77         db  0x00 ; '.'
0000000000001c78         db  0x00 ; '.'
0000000000001c79         db  0x00 ; '.'
0000000000001c7a         db  0x00 ; '.'
0000000000001c7b         db  0x00 ; '.'
0000000000001c7c         db  0x00 ; '.'
0000000000001c7d         db  0x00 ; '.'
0000000000001c7e         db  0x00 ; '.'
0000000000001c7f         db  0x00 ; '.'
0000000000001c80         db  0x78 ; 'x'
0000000000001c81         db  0xff ; '.'
0000000000001c82         db  0x20 ; ' '
0000000000001c83         db  0x00 ; '.'
0000000000001c84         db  0x00 ; '.'
0000000000001c85         db  0x00 ; '.'
0000000000001c86         db  0x00 ; '.'
0000000000001c87         db  0x00 ; '.'
0000000000001c88         db  0x07 ; '.'
0000000000001c89         db  0x00 ; '.'
0000000000001c8a         db  0x00 ; '.'
0000000000001c8b         db  0x00 ; '.'
0000000000001c8c         db  0x4b ; 'K'
0000000000001c8d         db  0x00 ; '.'
0000000000001c8e         db  0x00 ; '.'
0000000000001c8f         db  0x00 ; '.'
0000000000001c90         db  0x00 ; '.'
0000000000001c91         db  0x00 ; '.'
0000000000001c92         db  0x00 ; '.'
0000000000001c93         db  0x00 ; '.'
0000000000001c94         db  0x00 ; '.'
0000000000001c95         db  0x00 ; '.'
0000000000001c96         db  0x00 ; '.'
0000000000001c97         db  0x00 ; '.'
0000000000001c98         db  0x80 ; '.'
0000000000001c99         db  0xff ; '.'
0000000000001c9a         db  0x20 ; ' '
0000000000001c9b         db  0x00 ; '.'
0000000000001c9c         db  0x00 ; '.'
0000000000001c9d         db  0x00 ; '.'
0000000000001c9e         db  0x00 ; '.'
0000000000001c9f         db  0x00 ; '.'
0000000000001ca0         db  0x07 ; '.'
0000000000001ca1         db  0x00 ; '.'
0000000000001ca2         db  0x00 ; '.'
0000000000001ca3         db  0x00 ; '.'
0000000000001ca4         db  0x4c ; 'L'
0000000000001ca5         db  0x00 ; '.'
0000000000001ca6         db  0x00 ; '.'
0000000000001ca7         db  0x00 ; '.'
0000000000001ca8         db  0x00 ; '.'
0000000000001ca9         db  0x00 ; '.'
0000000000001caa         db  0x00 ; '.'
0000000000001cab         db  0x00 ; '.'
0000000000001cac         db  0x00 ; '.'
0000000000001cad         db  0x00 ; '.'
0000000000001cae         db  0x00 ; '.'
0000000000001caf         db  0x00 ; '.'
0000000000001cb0         db  0x88 ; '.'
0000000000001cb1         db  0xff ; '.'
0000000000001cb2         db  0x20 ; ' '
0000000000001cb3         db  0x00 ; '.'
0000000000001cb4         db  0x00 ; '.'
0000000000001cb5         db  0x00 ; '.'
0000000000001cb6         db  0x00 ; '.'
0000000000001cb7         db  0x00 ; '.'
0000000000001cb8         db  0x07 ; '.'
0000000000001cb9         db  0x00 ; '.'
0000000000001cba         db  0x00 ; '.'
0000000000001cbb         db  0x00 ; '.'
0000000000001cbc         db  0x4d ; 'M'
0000000000001cbd         db  0x00 ; '.'
0000000000001cbe         db  0x00 ; '.'
0000000000001cbf         db  0x00 ; '.'
0000000000001cc0         db  0x00 ; '.'
0000000000001cc1         db  0x00 ; '.'
0000000000001cc2         db  0x00 ; '.'
0000000000001cc3         db  0x00 ; '.'
0000000000001cc4         db  0x00 ; '.'
0000000000001cc5         db  0x00 ; '.'
0000000000001cc6         db  0x00 ; '.'
0000000000001cc7         db  0x00 ; '.'
0000000000001cc8         db  0x90 ; '.'
0000000000001cc9         db  0xff ; '.'
0000000000001cca         db  0x20 ; ' '
0000000000001ccb         db  0x00 ; '.'
0000000000001ccc         db  0x00 ; '.'
0000000000001ccd         db  0x00 ; '.'
0000000000001cce         db  0x00 ; '.'
0000000000001ccf         db  0x00 ; '.'
0000000000001cd0         db  0x07 ; '.'
0000000000001cd1         db  0x00 ; '.'
0000000000001cd2         db  0x00 ; '.'
0000000000001cd3         db  0x00 ; '.'
0000000000001cd4         db  0x4e ; 'N'
0000000000001cd5         db  0x00 ; '.'
0000000000001cd6         db  0x00 ; '.'
0000000000001cd7         db  0x00 ; '.'
0000000000001cd8         db  0x00 ; '.'
0000000000001cd9         db  0x00 ; '.'
0000000000001cda         db  0x00 ; '.'
0000000000001cdb         db  0x00 ; '.'
0000000000001cdc         db  0x00 ; '.'
0000000000001cdd         db  0x00 ; '.'
0000000000001cde         db  0x00 ; '.'
0000000000001cdf         db  0x00 ; '.'
0000000000001ce0         db  0x98 ; '.'
0000000000001ce1         db  0xff ; '.'
0000000000001ce2         db  0x20 ; ' '
0000000000001ce3         db  0x00 ; '.'
0000000000001ce4         db  0x00 ; '.'
0000000000001ce5         db  0x00 ; '.'
0000000000001ce6         db  0x00 ; '.'
0000000000001ce7         db  0x00 ; '.'
0000000000001ce8         db  0x07 ; '.'
0000000000001ce9         db  0x00 ; '.'
0000000000001cea         db  0x00 ; '.'
0000000000001ceb         db  0x00 ; '.'
0000000000001cec         db  0x4f ; 'O'
0000000000001ced         db  0x00 ; '.'
0000000000001cee         db  0x00 ; '.'
0000000000001cef         db  0x00 ; '.'
0000000000001cf0         db  0x00 ; '.'
0000000000001cf1         db  0x00 ; '.'
0000000000001cf2         db  0x00 ; '.'
0000000000001cf3         db  0x00 ; '.'
0000000000001cf4         db  0x00 ; '.'
0000000000001cf5         db  0x00 ; '.'
0000000000001cf6         db  0x00 ; '.'
0000000000001cf7         db  0x00 ; '.'
0000000000001cf8         db  0xa0 ; '.'
0000000000001cf9         db  0xff ; '.'
0000000000001cfa         db  0x20 ; ' '
0000000000001cfb         db  0x00 ; '.'
0000000000001cfc         db  0x00 ; '.'
0000000000001cfd         db  0x00 ; '.'
0000000000001cfe         db  0x00 ; '.'
0000000000001cff         db  0x00 ; '.'
0000000000001d00         db  0x07 ; '.'
0000000000001d01         db  0x00 ; '.'
0000000000001d02         db  0x00 ; '.'
0000000000001d03         db  0x00 ; '.'
0000000000001d04         db  0x50 ; 'P'
0000000000001d05         db  0x00 ; '.'
0000000000001d06         db  0x00 ; '.'
0000000000001d07         db  0x00 ; '.'
0000000000001d08         db  0x00 ; '.'
0000000000001d09         db  0x00 ; '.'
0000000000001d0a         db  0x00 ; '.'
0000000000001d0b         db  0x00 ; '.'
0000000000001d0c         db  0x00 ; '.'
0000000000001d0d         db  0x00 ; '.'
0000000000001d0e         db  0x00 ; '.'
0000000000001d0f         db  0x00 ; '.'
0000000000001d10         db  0xa8 ; '.'
0000000000001d11         db  0xff ; '.'
0000000000001d12         db  0x20 ; ' '
0000000000001d13         db  0x00 ; '.'
0000000000001d14         db  0x00 ; '.'
0000000000001d15         db  0x00 ; '.'
0000000000001d16         db  0x00 ; '.'
0000000000001d17         db  0x00 ; '.'
0000000000001d18         db  0x07 ; '.'
0000000000001d19         db  0x00 ; '.'
0000000000001d1a         db  0x00 ; '.'
0000000000001d1b         db  0x00 ; '.'
0000000000001d1c         db  0x52 ; 'R'
0000000000001d1d         db  0x00 ; '.'
0000000000001d1e         db  0x00 ; '.'
0000000000001d1f         db  0x00 ; '.'
0000000000001d20         db  0x00 ; '.'
0000000000001d21         db  0x00 ; '.'
0000000000001d22         db  0x00 ; '.'
0000000000001d23         db  0x00 ; '.'
0000000000001d24         db  0x00 ; '.'
0000000000001d25         db  0x00 ; '.'
0000000000001d26         db  0x00 ; '.'
0000000000001d27         db  0x00 ; '.'
0000000000001d28         db  0xb0 ; '.'
0000000000001d29         db  0xff ; '.'
0000000000001d2a         db  0x20 ; ' '
0000000000001d2b         db  0x00 ; '.'
0000000000001d2c         db  0x00 ; '.'
0000000000001d2d         db  0x00 ; '.'
0000000000001d2e         db  0x00 ; '.'
0000000000001d2f         db  0x00 ; '.'
0000000000001d30         db  0x07 ; '.'
0000000000001d31         db  0x00 ; '.'
0000000000001d32         db  0x00 ; '.'
0000000000001d33         db  0x00 ; '.'
0000000000001d34         db  0x53 ; 'S'
0000000000001d35         db  0x00 ; '.'
0000000000001d36         db  0x00 ; '.'
0000000000001d37         db  0x00 ; '.'
0000000000001d38         db  0x00 ; '.'
0000000000001d39         db  0x00 ; '.'
0000000000001d3a         db  0x00 ; '.'
0000000000001d3b         db  0x00 ; '.'
0000000000001d3c         db  0x00 ; '.'
0000000000001d3d         db  0x00 ; '.'
0000000000001d3e         db  0x00 ; '.'
0000000000001d3f         db  0x00 ; '.'
0000000000001d40         db  0xb8 ; '.'
0000000000001d41         db  0xff ; '.'
0000000000001d42         db  0x20 ; ' '
0000000000001d43         db  0x00 ; '.'
0000000000001d44         db  0x00 ; '.'
0000000000001d45         db  0x00 ; '.'
0000000000001d46         db  0x00 ; '.'
0000000000001d47         db  0x00 ; '.'
0000000000001d48         db  0x07 ; '.'
0000000000001d49         db  0x00 ; '.'
0000000000001d4a         db  0x00 ; '.'
0000000000001d4b         db  0x00 ; '.'
0000000000001d4c         db  0x54 ; 'T'
0000000000001d4d         db  0x00 ; '.'
0000000000001d4e         db  0x00 ; '.'
0000000000001d4f         db  0x00 ; '.'
0000000000001d50         db  0x00 ; '.'
0000000000001d51         db  0x00 ; '.'
0000000000001d52         db  0x00 ; '.'
0000000000001d53         db  0x00 ; '.'
0000000000001d54         db  0x00 ; '.'
0000000000001d55         db  0x00 ; '.'
0000000000001d56         db  0x00 ; '.'
0000000000001d57         db  0x00 ; '.'
0000000000001d58         db  0xc0 ; '.'
0000000000001d59         db  0xff ; '.'
0000000000001d5a         db  0x20 ; ' '
0000000000001d5b         db  0x00 ; '.'
0000000000001d5c         db  0x00 ; '.'
0000000000001d5d         db  0x00 ; '.'
0000000000001d5e         db  0x00 ; '.'
0000000000001d5f         db  0x00 ; '.'
0000000000001d60         db  0x07 ; '.'
0000000000001d61         db  0x00 ; '.'
0000000000001d62         db  0x00 ; '.'
0000000000001d63         db  0x00 ; '.'
0000000000001d64         db  0x56 ; 'V'
0000000000001d65         db  0x00 ; '.'
0000000000001d66         db  0x00 ; '.'
0000000000001d67         db  0x00 ; '.'
0000000000001d68         db  0x00 ; '.'
0000000000001d69         db  0x00 ; '.'
0000000000001d6a         db  0x00 ; '.'
0000000000001d6b         db  0x00 ; '.'
0000000000001d6c         db  0x00 ; '.'
0000000000001d6d         db  0x00 ; '.'
0000000000001d6e         db  0x00 ; '.'
0000000000001d6f         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x1d70; 0x1d87[ (23 bytes)
        ; File offset : [7536; 7559[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
0000000000001d70         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
0000000000001d74         mov        rax, qword [qword_20ffd8]                   ; qword_20ffd8
0000000000001d7b         test       rax, rax
0000000000001d7e         je         loc_1d82

0000000000001d80         call       rax

                     loc_1d82:
0000000000001d82         add        rsp, 0x8                                    ; CODE XREF=_init+14
0000000000001d86         ret
                        ; endp
0000000000001d87         db  0x00 ; '.'
0000000000001d88         db  0x00 ; '.'
0000000000001d89         db  0x00 ; '.'
0000000000001d8a         db  0x00 ; '.'
0000000000001d8b         db  0x00 ; '.'
0000000000001d8c         db  0x00 ; '.'
0000000000001d8d         db  0x00 ; '.'
0000000000001d8e         db  0x00 ; '.'
0000000000001d8f         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x1d90; 0x22b0[ (1312 bytes)
        ; File offset : [7568; 8880[ (1312 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_1d90:
0000000000001d90         push       qword [qword_20fd30]                        ; Begin of unwind block (FDE at 0xd074), qword_20fd30, CODE XREF=sub_1da6+5
0000000000001d96         jmp        qword [qword_20fd30+8]                      ; 0x20fd38
                        ; endp
0000000000001d9c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getenv:        // getenv
0000000000001da0         jmp        qword [getenv@GOT]                          ; getenv, getenv@GOT, CODE XREF=set_simple_backup_suffix+55, xget_version+21
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1da6:
0000000000001da6         push       0x0
0000000000001dab         jmp        loc_1d90


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
0000000000001db0         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=main+1280, do_link+261, do_link+365, do_link+374, do_link+1396, do_link+1404, do_link+1412, do_link+1717, do_link+1725, do_link+1733, do_link+2161
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1db6:
0000000000001db6         push       0x1
0000000000001dbb         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000001dc0         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=safe_hasher+29, hash_get_first+60, hash_rehash+569, hash_insert_if_absent+477, set_program_name+154, sub_7210+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1dc6:
0000000000001dc6         push       0x2
0000000000001dcb         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
0000000000001dd0         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+1620, main+1996, atomic_link+97, do_link+781, do_link+868, do_link+1209, do_link+2150, force_linkat+159, force_linkat+258, force_linkat+304, force_linkat+336
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1dd6:
0000000000001dd6         push       0x3
0000000000001ddb         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
0000000000001de0         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+788, usage+981, argmatch+162
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1de6:
0000000000001de6         push       0x4
0000000000001deb         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
0000000000001df0         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdin+174, close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1df6:
0000000000001df6         push       0x5
0000000000001dfb         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcpy:        // strcpy
0000000000001e00         jmp        qword [strcpy@GOT]                          ; strcpy, strcpy@GOT, CODE XREF=do_link+1597
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e06:
0000000000001e06         push       0x6
0000000000001e0b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000001e10         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e16:
0000000000001e16         push       0x7
0000000000001e1b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___read_chk:        // __read_chk
0000000000001e20         jmp        qword [__read_chk@GOT]                      ; __read_chk, __read_chk@GOT, CODE XREF=randread_new+280
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e26:
0000000000001e26         push       0x8
0000000000001e2b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mkdir:        // mkdir
0000000000001e30         jmp        qword [mkdir@GOT]                           ; mkdir, mkdir@GOT, CODE XREF=try_dir+5
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e36:
0000000000001e36         push       0x9
0000000000001e3b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_unlinkat:        // unlinkat
0000000000001e40         jmp        qword [unlinkat@GOT]                        ; unlinkat, unlinkat@GOT, CODE XREF=force_linkat+322, force_symlinkat+305
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e46:
0000000000001e46         push       0xa
0000000000001e4b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_readlink:        // readlink
0000000000001e50         jmp        qword [readlink@GOT]                        ; readlink, readlink@GOT, CODE XREF=areadlink_with_size+89
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e56:
0000000000001e56         push       0xb
0000000000001e5b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fcntl:        // fcntl
0000000000001e60         jmp        qword [fcntl@GOT]                           ; fcntl, fcntl@GOT, CODE XREF=rpl_fcntl+128, rpl_fcntl+212, rpl_fcntl+320, rpl_fcntl+407, rpl_fcntl+423, rpl_fcntl+460, rpl_fcntl+483, rpl_fcntl+559, rpl_fcntl+606
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e66:
0000000000001e66         push       0xc
0000000000001e6b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getpid:        // getpid
0000000000001e70         jmp        qword [getpid@GOT]                          ; getpid, getpid@GOT, CODE XREF=randread_new+407, randread_new+706
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e76:
0000000000001e76         push       0xd
0000000000001e7b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fread_unlocked:        // fread_unlocked
0000000000001e80         jmp        qword [fread_unlocked@GOT]                  ; fread_unlocked, fread_unlocked@GOT, CODE XREF=randread+97
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e86:
0000000000001e86         push       0xe
0000000000001e8b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001e90         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+104
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1e96:
0000000000001e96         push       0xf
0000000000001e9b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_pathconf:        // pathconf
0000000000001ea0         jmp        qword [pathconf@GOT]                        ; pathconf, pathconf@GOT, CODE XREF=backupfile_internal+1455
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ea6:
0000000000001ea6         push       0x10
0000000000001eab         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001eb0         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1eb6:
0000000000001eb6         push       0x11
0000000000001ebb         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001ec0         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+92
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ec6:
0000000000001ec6         push       0x12
0000000000001ecb         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001ed0         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+672, main+953, main+1612, main+1698, main+1736, main+1794, main+1835, main+1901, main+1988, do_link+676, do_link+773
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ed6:
0000000000001ed6         push       0x13
0000000000001edb         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001ee0         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ee6:
0000000000001ee6         push       0x14
0000000000001eeb         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001ef0         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=do_link+1555, buffer_or_output+25, backupfile_internal+67, backupfile_internal+99, backupfile_internal+328, canonicalize_filename_mode+119, canonicalize_filename_mode+1088, canonicalize_filename_mode+1104, base_len+4, mfile_name_concat+51, quotearg_buffer_restyled+343
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ef6:
0000000000001ef6         push       0x15
0000000000001efb         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___lxstat:        // __lxstat
0000000000001f00         jmp        qword [__lxstat@GOT]                        ; __lxstat, __lxstat@GOT, CODE XREF=canonicalize_filename_mode+800, try_nocreate+38
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f06:
0000000000001f06         push       0x16
0000000000001f0b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_openat:        // openat
0000000000001f10         jmp        qword [openat@GOT]                          ; openat, openat@GOT, CODE XREF=openat_safer+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f16:
0000000000001f16         push       0x17
0000000000001f1b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000001f20         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+1923, do_link+2657, force_linkat+348, force_symlinkat+333, backupfile_internal+1549, sub_4daa+279, seen_file+81, hash_rehash+554, hash_insert_if_absent+639, hash_insert+84, hash_delete+510
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f26:
0000000000001f26         push       0x18
0000000000001f2b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getuid:        // getuid
0000000000001f30         jmp        qword [getuid@GOT]                          ; getuid, getuid@GOT, CODE XREF=randread_new+452
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f36:
0000000000001f36         push       0x19
0000000000001f3b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000001f40         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+198
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f46:
0000000000001f46         push       0x1a
0000000000001f4b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000001f50         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f56:
0000000000001f56         push       0x1b
0000000000001f5b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fxstatat:        // __fxstatat
0000000000001f60         jmp        qword [__fxstatat@GOT]                      ; __fxstatat, __fxstatat@GOT, CODE XREF=do_link+142, do_link+849, do_link+1796, renameatu+316, renameatu+398, renameatu+488, same_nameat.part.0+71, same_nameat.part.0+127
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f66:
0000000000001f66         push       0x1c
0000000000001f6b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
0000000000001f70         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=argmatch_valid+283
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f76:
0000000000001f76         push       0x1d
0000000000001f7b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000001f80         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f86:
0000000000001f86         push       0x1e
0000000000001f8b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
0000000000001f90         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=j_j_fseeko+49, rpl_fclose+89
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1f96:
0000000000001f96         push       0x1f
0000000000001f9b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_gettimeofday:        // gettimeofday
0000000000001fa0         jmp        qword [gettimeofday@GOT]                    ; gettimeofday, gettimeofday@GOT, CODE XREF=randread_new+392, randread_new+632
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1fa6:
0000000000001fa6         push       0x20
0000000000001fab         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
0000000000001fb0         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=gen_tempname_len+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1fb6:
0000000000001fb6         push       0x21
0000000000001fbb         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000001fc0         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1fc6:
0000000000001fc6         push       0x22
0000000000001fcb         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getcwd:        // getcwd
0000000000001fd0         jmp        qword [getcwd@GOT]                          ; getcwd, getcwd@GOT, CODE XREF=xgetcwd+5
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1fd6:
0000000000001fd6         push       0x23
0000000000001fdb         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_close:        // close
0000000000001fe0         jmp        qword [close@GOT]                           ; close, close@GOT, CODE XREF=opendirat+85, fd_safer+38, randread_new+291, rpl_fcntl+510, fopen_safer+106
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1fe6:
0000000000001fe6         push       0x24
0000000000001feb         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_rewinddir:        // rewinddir
0000000000001ff0         jmp        qword [rewinddir@GOT]                       ; rewinddir, rewinddir@GOT, CODE XREF=backupfile_internal+257
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ff6:
0000000000001ff6         push       0x25
0000000000001ffb         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strspn:        // strspn
0000000000002000         jmp        qword [strspn@GOT]                          ; strspn, strspn@GOT, CODE XREF=canonicalize_filename_mode+676, try_tempname_len+104
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2006:
0000000000002006         push       0x26
000000000000200b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_closedir:        // closedir
0000000000002010         jmp        qword [closedir@GOT]                        ; closedir, closedir@GOT, CODE XREF=backupfile_internal+887, backupfile_internal+1498
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2016:
0000000000002016         push       0x27
000000000000201b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000002020         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=backupfile_internal+355, backupfile_internal+489, quotearg_buffer_restyled+410, same_nameat+105, argmatch+111, argmatch_valid+150, argmatch_to_argument+56
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2026:
0000000000002026         push       0x28
000000000000202b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000002030         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+166, usage+203, usage+240, usage+277, usage+314, usage+351, usage+388, usage+425, usage+469, usage+1096, buffer_or_output+103
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2036:
0000000000002036         push       0x29
000000000000203b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000002040         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=hash_initialize+177, hash_rehash+198, xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2046:
0000000000002046         push       0x2a
000000000000204b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___getdelim:        // __getdelim
0000000000002050         jmp        qword [__getdelim@GOT]                      ; __getdelim, __getdelim@GOT, CODE XREF=yesno+63
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2056:
0000000000002056         push       0x2b
000000000000205b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcmp:        // strcmp
0000000000002060         jmp        qword [strcmp@GOT]                          ; strcmp, strcmp@GOT, CODE XREF=triple_compare_ino_str+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2066:
0000000000002066         push       0x2c
000000000000206b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fpathconf:        // fpathconf
0000000000002070         jmp        qword [fpathconf@GOT]                       ; fpathconf, fpathconf@GOT, CODE XREF=backupfile_internal+1123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2076:
0000000000002076         push       0x2d
000000000000207b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_rpmatch:        // rpmatch
0000000000002080         jmp        qword [rpmatch@GOT]                         ; rpmatch, rpmatch@GOT, CODE XREF=yesno+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2086:
0000000000002086         push       0x2e
000000000000208b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_syscall:        // syscall
0000000000002090         jmp        qword [syscall@GOT]                         ; syscall, syscall@GOT, CODE XREF=renameatu+70
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2096:
0000000000002096         push       0x2f
000000000000209b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
00000000000020a0         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=do_link+1585, buffer_or_output+66, backupfile_internal+214, backupfile_internal+673, backupfile_internal+981, backupfile_internal+1020, canonicalize_filename_mode+387, canonicalize_filename_mode+1208, mdir_name+53, xmemdup+35, randread+190
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_20a6:
00000000000020a6         push       0x30
00000000000020ab         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
00000000000020b0         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=j_j_fseeko+36, rpl_fclose+7, rpl_fclose+75, fopen_safer+23
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_20b6:
00000000000020b6         push       0x31
00000000000020bb         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getgid:        // getgid
00000000000020c0         jmp        qword [getgid@GOT]                          ; getgid, getgid@GOT, CODE XREF=randread_new+508
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_20c6:
00000000000020c6         push       0x32
00000000000020cb         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___xstat:        // __xstat
00000000000020d0         jmp        qword [__xstat@GOT]                         ; __xstat, __xstat@GOT, CODE XREF=main+602, do_link+2402, canonicalize_filename_mode+617
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_20d6:
00000000000020d6         push       0x33
00000000000020db         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_readdir:        // readdir
00000000000020e0         jmp        qword [readdir@GOT]                         ; readdir, readdir@GOT, CODE XREF=backupfile_internal+307, backupfile_internal+730
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_20e6:
00000000000020e6         push       0x34
00000000000020eb         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
00000000000020f0         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=samedir_template+34, backupfile_internal+154, mdir_name+31, mfile_name_concat+151, transfer_entries+293, hash_initialize+62, hash_insert_if_absent+517, xmalloc+4, areadlink_with_size+67, areadlink_with_size+126
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_20f6:
00000000000020f6         push       0x35
00000000000020fb         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000002100         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2106:
0000000000002106         push       0x36
000000000000210b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000002110         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2116:
0000000000002116         push       0x37
000000000000211b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000002120         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fflush+9, rpl_fclose+19
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2126:
0000000000002126         push       0x38
000000000000212b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
0000000000002130         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=backupfile_internal+609, xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2136:
0000000000002136         push       0x39
000000000000213b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fdopen:        // fdopen
0000000000002140         jmp        qword [fdopen@GOT]                          ; fdopen, fdopen@GOT, CODE XREF=fopen_safer+80
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2146:
0000000000002146         push       0x3a
000000000000214b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_linkat:        // linkat
0000000000002150         jmp        qword [linkat@GOT]                          ; linkat, linkat@GOT, CODE XREF=atomic_link+88, try_link+19, force_linkat+247
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2156:
0000000000002156         push       0x3b
000000000000215b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000002160         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+73, usage+763, usage+956, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2166:
0000000000002166         push       0x3c
000000000000216b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000002170         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=do_link+355, usage+129, usage+510, usage+751, usage+844, usage+905, usage+944, usage+1047, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2176:
0000000000002176         push       0x3d
000000000000217b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setvbuf:        // setvbuf
0000000000002180         jmp        qword [setvbuf@GOT]                         ; setvbuf, setvbuf@GOT, CODE XREF=randread_new+130
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2186:
0000000000002186         push       0x3e
000000000000218b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mempcpy:        // mempcpy
0000000000002190         jmp        qword [mempcpy@GOT]                         ; mempcpy, mempcpy@GOT, CODE XREF=samedir_template+58, mfile_name_concat+173, mfile_name_concat+206
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2196:
0000000000002196         push       0x3f
000000000000219b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memmove:        // memmove
00000000000021a0         jmp        qword [memmove@GOT]                         ; memmove, memmove@GOT, CODE XREF=canonicalize_filename_mode+1192
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_21a6:
00000000000021a6         push       0x40
00000000000021ab         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
00000000000021b0         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+692, main+1640, main+1712, main+1753, main+1811, main+1852, main+1918, main+2016, do_link+704, do_link+798, do_link+942
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_21b6:
00000000000021b6         push       0x41
00000000000021bb         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___explicit_bzero_chk:        // __explicit_bzero_chk
00000000000021c0         jmp        qword [__explicit_bzero_chk@GOT]            ; __explicit_bzero_chk, __explicit_bzero_chk@GOT, CODE XREF=randint_free+16, randint_all_free+50, randread_free+24
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_21c6:
00000000000021c6         push       0x42
00000000000021cb         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_open:        // open
00000000000021d0         jmp        qword [open@GOT]                            ; open, open@GOT, CODE XREF=try_file+17, randread_new+234
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_21d6:
00000000000021d6         push       0x43
00000000000021db         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
00000000000021e0         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_21e6:
00000000000021e6         push       0x44
00000000000021eb         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fopen:        // fopen
00000000000021f0         jmp        qword [fopen@GOT]                           ; fopen, fopen@GOT, CODE XREF=fopen_safer+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_21f6:
00000000000021f6         push       0x45
00000000000021fb         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fdopendir:        // fdopendir
0000000000002200         jmp        qword [fdopendir@GOT]                       ; fdopendir, fdopendir@GOT, CODE XREF=opendirat+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2206:
0000000000002206         push       0x46
000000000000220b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000002210         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2216:
0000000000002216         push       0x47
000000000000221b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_renameat:        // renameat
0000000000002220         jmp        qword [renameat@GOT]                        ; renameat, renameat@GOT, CODE XREF=do_link+730, do_link+2126, force_linkat+290, force_symlinkat+266, renameatu+240
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2226:
0000000000002226         push       0x48
000000000000222b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getppid:        // getppid
0000000000002230         jmp        qword [getppid@GOT]                         ; getppid, getppid@GOT, CODE XREF=randread_new+419, randread_new+759
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2236:
0000000000002236         push       0x49
000000000000223b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000002240         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+493, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2246:
0000000000002246         push       0x4a
000000000000224b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000002250         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2256:
0000000000002256         push       0x4b
000000000000225b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000002260         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=do_link+2509, usage+81, hash_print_statistics+118, hash_print_statistics+143, hash_print_statistics+211, hash_print_statistics+246, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2266:
0000000000002266         push       0x4c
000000000000226b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000002270         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_7210+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2276:
0000000000002276         push       0x4d
000000000000227b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_symlinkat:        // symlinkat
0000000000002280         jmp        qword [symlinkat@GOT]                       ; symlinkat, symlinkat@GOT, CODE XREF=atomic_link+22, try_symlink+12, force_symlinkat+220
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2286:
0000000000002286         push       0x4e
000000000000228b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000002290         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_7210+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2296:
0000000000002296         push       0x4f
000000000000229b         jmp        0x1d90
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
00000000000022a0         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_6fb0+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_22a6:
00000000000022a6         push       0x50
00000000000022ab         jmp        0x1d90
                        ; endp


        ; Section .plt.got
        ; Range: [0x22b0; 0x22b8[ (8 bytes)
        ; File offset : [8880; 8888[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_20ffe8:        // qword_20ffe8
00000000000022b0         jmp        qword [qword_20ffe8]                        ; qword, End of unwind block (FDE at 0xd074), Begin of unwind block (FDE at 0xd09c), qword_20ffe8, CODE XREF=__do_global_dtors_aux+30
                        ; endp
00000000000022b6         align      8
00000000000022b8         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0xd09c)
00000000000022b9         db  0x00 ; '.'
00000000000022ba         db  0x00 ; '.'
00000000000022bb         db  0x00 ; '.'
00000000000022bc         db  0x00 ; '.'
00000000000022bd         db  0x00 ; '.'
00000000000022be         db  0x00 ; '.'
00000000000022bf         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x22c0; 0xaf7e[ (36030 bytes)
        ; File offset : [8896; 44926[ (36030 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_C0: int32_t, -192
        ;    var_D8: int8_t, -216
        ;    var_E0: int64_t, -224
        ;    var_EC: int32_t, -236
        ;    var_F0: int32_t, -240
        ;    var_F8: int64_t, -248
        ;    var_100: int64_t, -256


                     main:
00000000000022c0         push       r15                                         ; Begin of unwind block (FDE at 0xd170), DATA XREF=_start+29
00000000000022c2         push       r14
00000000000022c4         xor        r15d, r15d
00000000000022c7         push       r13
00000000000022c9         push       r12
00000000000022cb         xor        r14d, r14d
00000000000022ce         push       rbp
00000000000022cf         push       rbx
00000000000022d0         mov        ebx, edi
00000000000022d2         mov        rbp, rsi
00000000000022d5         xor        r12d, r12d
00000000000022d8         xor        r13d, r13d
00000000000022db         sub        rsp, 0xd8
00000000000022e2         mov        rdi, qword [rsi]
00000000000022e5         mov        rax, qword [fs:0x28]
00000000000022ee         mov        qword [rsp+0x108+var_40], rax
00000000000022f6         xor        eax, eax
00000000000022f8         call       set_program_name                            ; set_program_name
00000000000022fd         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0xc718
0000000000002304         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
0000000000002309         call       j_setlocale                                 ; setlocale
000000000000230e         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
0000000000002315         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
000000000000231c         call       j_bindtextdomain                            ; bindtextdomain
0000000000002321         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
0000000000002328         call       j_textdomain                                ; textdomain
000000000000232d         lea        rdi, qword [close_stdin]                    ; argument "__func" for method atexit, close_stdin
0000000000002334         call       atexit                                      ; atexit
0000000000002339         lea        rax, qword [rsp+0x108+var_D8]
000000000000233e         mov        byte [hard_dir_link], 0x0                   ; hard_dir_link
0000000000002345         mov        byte [verbose], 0x0                         ; verbose
000000000000234c         mov        byte [interactive], 0x0                     ; interactive
0000000000002353         mov        byte [remove_existing_files], 0x0           ; remove_existing_files
000000000000235a         mov        byte [symbolic_link], 0x0                   ; symbolic_link
0000000000002361         mov        qword [rsp+0x108+var_100], 0x0
000000000000236a         mov        qword [rsp+0x108+var_F8], rax
000000000000236f         nop

                     loc_2370:
0000000000002370         lea        rcx, qword [long_options]                   ; argument "__longopts" for method j_getopt_long, long_options, CODE XREF=main+282, main+337, main+386, main+521, main+535, main+564, main+636, main+711, main+734, main+750, main+778
0000000000002377         lea        rdx, qword [aBdfinrstvflpst]                ; argument "__shortopts" for method j_getopt_long, "bdfinrst:vFLPS:T"
000000000000237e         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000002381         mov        rsi, rbp                                    ; argument "___argv" for method j_getopt_long
0000000000002384         mov        edi, ebx                                    ; argument "___argc" for method j_getopt_long
0000000000002386         call       j_getopt_long                               ; getopt_long
000000000000238b         cmp        eax, 0xffffffff
000000000000238e         mov        r8d, eax
0000000000002391         je         loc_25fc

0000000000002397         cmp        r8d, 0x62
000000000000239b         je         loc_24e0

00000000000023a1         jle        loc_23e0

00000000000023a3         cmp        r8d, 0x6e
00000000000023a7         je         loc_24d0

00000000000023ad         jle        loc_2420

00000000000023af         cmp        r8d, 0x73
00000000000023b3         je         loc_25d0

00000000000023b9         jle        loc_24b8

00000000000023bf         cmp        r8d, 0x74
00000000000023c3         je         loc_2500

00000000000023c9         cmp        r8d, 0x76
00000000000023cd         jne        loc_25f2

00000000000023d3         mov        byte [verbose], 0x1                         ; verbose
00000000000023da         jmp        loc_2370
00000000000023dc         align      32

                     loc_23e0:
00000000000023e0         cmp        r8d, 0x4c                                   ; CODE XREF=main+225
00000000000023e4         je         loc_2580

00000000000023ea         jle        loc_2450

00000000000023ec         cmp        r8d, 0x53
00000000000023f0         je         loc_25b8

00000000000023f6         cmp        r8d, 0x54
00000000000023fa         je         loc_25a8

0000000000002400         cmp        r8d, 0x50
0000000000002404         jne        loc_25f2

000000000000240a         mov        byte [logical], 0x0                         ; logical
0000000000002411         jmp        loc_2370
0000000000002416         align      32

                     loc_2420:
0000000000002420         cmp        r8d, 0x66                                   ; CODE XREF=main+237
0000000000002424         je         loc_2590

000000000000242a         cmp        r8d, 0x69
000000000000242e         jne        loc_25ec

0000000000002434         mov        byte [remove_existing_files], 0x0           ; remove_existing_files
000000000000243b         mov        byte [interactive], 0x1                     ; interactive
0000000000002442         jmp        loc_2370
0000000000002447         align      16

                     loc_2450:
0000000000002450         cmp        r8d, 0xffffff7e                             ; CODE XREF=main+298
0000000000002457         je         loc_294d

000000000000245d         cmp        r8d, 0x46
0000000000002461         je         loc_25e0

0000000000002467         cmp        r8d, 0xffffff7d
000000000000246e         jne        loc_25f2

0000000000002474         sub        rsp, 0x8
0000000000002478         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000247f         mov        rcx, qword [Version]                        ; Version
0000000000002486         push       0x0
0000000000002488         lea        r9, qword [aDavidMackenzie]                 ; "David MacKenzie"
000000000000248f         lea        r8, qword [aMikeParker]                     ; "Mike Parker"
0000000000002496         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0xb0b7
000000000000249d         lea        rsi, qword [aCannotUnbackup+20]             ; 0xb03b
00000000000024a4         xor        eax, eax
00000000000024a6         call       version_etc                                 ; version_etc
00000000000024ab         xor        edi, edi                                    ; argument "__status" for method j_exit
00000000000024ad         call       j_exit                                      ; exit
                        ; endp
00000000000024b2         align      8

                     loc_24b8:
00000000000024b8         cmp        r8d, 0x72                                   ; CODE XREF=main+249
00000000000024bc         jne        loc_25f2

00000000000024c2         mov        byte [relative], 0x1                        ; relative
00000000000024c9         jmp        loc_2370
00000000000024ce         align      16

                     loc_24d0:
00000000000024d0         mov        byte [dereference_dest_dir_symlinks], 0x0   ; dereference_dest_dir_symlinks, CODE XREF=main+231
00000000000024d7         jmp        loc_2370
00000000000024dc         align      32

                     loc_24e0:
00000000000024e0         mov        rax, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+219
00000000000024e7         mov        r13d, 0x1
00000000000024ed         test       rax, rax
00000000000024f0         cmovne     r14, rax
00000000000024f4         jmp        loc_2370
00000000000024f9         align      256

                     loc_2500:
0000000000002500         test       r12, r12                                    ; CODE XREF=main+259
0000000000002503         jne        loc_29dd

0000000000002509         mov        rdx, qword [rsp+0x108+var_F8]               ; argument "__stat_buf" for method j___xstat
000000000000250e         mov        rsi, qword [optarg@@GLIBC_2.2.5]            ; argument "__filename" for method j___xstat, optarg@@GLIBC_2.2.5
0000000000002515         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
000000000000251a         call       j___xstat                                   ; __xstat
000000000000251f         test       eax, eax
0000000000002521         jne        loc_2a62

0000000000002527         mov        eax, dword [rsp+0x108+var_C0]
000000000000252b         mov        r12, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000002532         and        eax, 0xf000
0000000000002537         cmp        eax, 0x4000
000000000000253c         je         loc_2370

0000000000002542         mov        rsi, r12                                    ; argument #2 for method quotearg_style
0000000000002545         mov        edi, 0x4                                    ; argument #1 for method quotearg_style
000000000000254a         call       quotearg_style                              ; quotearg_style
000000000000254f         lea        rsi, qword [aTargetSIsNotAD]                ; argument "msgid" for method j_dcgettext, "target %s is not a directory"
0000000000002556         mov        rbx, rax
0000000000002559         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000255e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002560         call       j_dcgettext                                 ; dcgettext
0000000000002565         mov        rcx, rbx
0000000000002568         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000256b         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000256d         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002572         xor        eax, eax
0000000000002574         call       j_error                                     ; error
0000000000002579         nop        dword [rax]

                     loc_2580:
0000000000002580         mov        byte [logical], 0x1                         ; logical, CODE XREF=main+292
0000000000002587         jmp        loc_2370
000000000000258c         align      16

                     loc_2590:
0000000000002590         mov        byte [remove_existing_files], 0x1           ; remove_existing_files, CODE XREF=main+356
0000000000002597         mov        byte [interactive], 0x0                     ; interactive
000000000000259e         jmp        loc_2370
00000000000025a3         align      8

                     loc_25a8:
00000000000025a8         mov        r15d, 0x1                                   ; CODE XREF=main+314
00000000000025ae         jmp        loc_2370
00000000000025b3         align      8

                     loc_25b8:
00000000000025b8         mov        rax, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+304
00000000000025bf         mov        r13d, 0x1
00000000000025c5         mov        qword [rsp+0x108+var_100], rax
00000000000025ca         jmp        loc_2370
00000000000025cf         align      16

                     loc_25d0:
00000000000025d0         mov        byte [symbolic_link], 0x1                   ; symbolic_link, CODE XREF=main+243
00000000000025d7         jmp        loc_2370
00000000000025dc         align      32

                     loc_25e0:
00000000000025e0         mov        byte [hard_dir_link], 0x1                   ; hard_dir_link, CODE XREF=main+417, main+816
00000000000025e7         jmp        loc_2370

                     loc_25ec:
00000000000025ec         cmp        r8d, 0x64                                   ; CODE XREF=main+366
00000000000025f0         je         loc_25e0

                     loc_25f2:
00000000000025f2         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+269, main+324, main+430, main+508, main+1717, main+1816
00000000000025f7         call       usage                                       ; usage

                     loc_25fc:
00000000000025fc         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+209
0000000000002603         mov        ecx, ebx
0000000000002605         sub        ecx, eax
0000000000002607         lea        rbx, qword [rbp+rax*8]
000000000000260c         test       ecx, ecx
000000000000260e         jle        loc_2954

0000000000002614         cmp        byte [relative], 0x0                        ; relative
000000000000261b         je         loc_262a

000000000000261d         cmp        byte [symbolic_link], 0x0                   ; symbolic_link
0000000000002624         je         loc_297a

                     loc_262a:
000000000000262a         cmp        byte [hard_dir_link], 0x0                   ; hard_dir_link, CODE XREF=main+859
0000000000002631         jne        loc_263a

0000000000002633         mov        byte [beware_hard_dir_link], 0x0            ; beware_hard_dir_link

                     loc_263a:
000000000000263a         test       r15b, r15b                                  ; CODE XREF=main+881
000000000000263d         je         loc_2710

0000000000002643         test       r12, r12
0000000000002646         jne        loc_2a1f

000000000000264c         cmp        ecx, 0x2
000000000000264f         jne        loc_299e

                     loc_2655:
0000000000002655         test       r13b, r13b                                  ; CODE XREF=main+1576
0000000000002658         je         loc_28a7

000000000000265e         mov        r12d, 0x2
0000000000002664         xor        ebp, ebp

                     loc_2666:
0000000000002666         lea        rsi, qword [aBackupType]                    ; argument "msgid" for method j_dcgettext, "backup type", CODE XREF=main+1420, main+1949
000000000000266d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002672         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002674         mov        dword [rsp+0x108+var_F8], r8d
0000000000002679         call       j_dcgettext                                 ; dcgettext
000000000000267e         mov        rsi, r14
0000000000002681         mov        rdi, rax
0000000000002684         call       xget_version                                ; xget_version
0000000000002689         mov        r8d, dword [rsp+0x108+var_F8]

                     loc_268e:
000000000000268e         mov        rdi, qword [rsp+0x108+var_100]              ; argument #1 for method set_simple_backup_suffix, CODE XREF=main+1414
0000000000002693         mov        dword [rsp+0x108+var_F8], r8d
0000000000002698         mov        dword [backup_type], eax                    ; backup_type
000000000000269e         call       set_simple_backup_suffix                    ; set_simple_backup_suffix
00000000000026a3         test       rbp, rbp
00000000000026a6         mov        r8d, dword [rsp+0x108+var_F8]
00000000000026ab         je         loc_28c5

00000000000026b1         cmp        r12d, 0x1
00000000000026b5         jle        loc_293a

00000000000026bb         cmp        byte [remove_existing_files], 0x0           ; remove_existing_files
00000000000026c2         je         loc_275b

00000000000026c8         cmp        byte [symbolic_link], 0x0                   ; symbolic_link
00000000000026cf         jne        loc_275b

00000000000026d5         cmp        dword [backup_type], 0x3                    ; backup_type
00000000000026dc         je         loc_275b

00000000000026de         lea        r8, qword [triple_free]                     ; argument #5 for method hash_initialize, triple_free
00000000000026e5         lea        rcx, qword [triple_compare]                 ; argument #4 for method hash_initialize, triple_compare
00000000000026ec         xor        esi, esi                                    ; argument #2 for method hash_initialize
00000000000026ee         lea        rdx, qword [triple_hash]                    ; argument #3 for method hash_initialize, triple_hash
00000000000026f5         mov        edi, 0x3d                                   ; argument #1 for method hash_initialize
00000000000026fa         call       hash_initialize                             ; hash_initialize
00000000000026ff         test       rax, rax
0000000000002702         mov        qword [dest_set], rax                       ; dest_set
0000000000002709         jne        loc_275b

000000000000270b         call       xalloc_die                                  ; xalloc_die
                        ; endp

                     loc_2710:
0000000000002710         test       r12, r12                                    ; CODE XREF=main+893
0000000000002713         sete       r15b
0000000000002717         cmp        ecx, 0x1
000000000000271a         jg         loc_27f9

0000000000002720         test       r15b, r15b
0000000000002723         je         loc_27f9

0000000000002729         test       r13b, r13b
000000000000272c         jne        loc_2a48

0000000000002732         mov        rdi, qword [rsp+0x108+var_100]              ; argument #1 for method set_simple_backup_suffix
0000000000002737         lea        rbp, qword [aMissingDestina+44]             ; 0xbf54
000000000000273e         mov        dword [backup_type], 0x0                    ; backup_type
0000000000002748         mov        r12d, 0x1
000000000000274e         call       set_simple_backup_suffix                    ; set_simple_backup_suffix
0000000000002753         mov        dword [rsp+0x108+var_F0], 0xffffff9c

                     loc_275b:
000000000000275b         lea        eax, dword [r12-1]                          ; CODE XREF=main+1026, main+1039, main+1052, main+1097, main+1661
0000000000002760         lea        r14, qword [rsp+0x108+var_E0]
0000000000002765         mov        r13, rbx
0000000000002768         lea        r15, qword [rbx+rax*8+8]
000000000000276d         mov        ebx, 0x1
0000000000002772         nop        word [rax+rax]

                     loc_2778:
0000000000002778         mov        rdi, qword [r13]                            ; argument #1 for method last_component, CODE XREF=main+1288
000000000000277c         add        r13, 0x8
0000000000002780         call       last_component                              ; last_component
0000000000002785         mov        rdx, r14
0000000000002788         mov        rsi, rax
000000000000278b         mov        rdi, rbp
000000000000278e         call       file_name_concat                            ; file_name_concat
0000000000002793         mov        rdi, qword [rsp+0x108+var_E0]
0000000000002798         mov        r12, rax
000000000000279b         call       strip_trailing_slashes                      ; strip_trailing_slashes
00000000000027a0         mov        rdi, qword [r13-8]                          ; argument #1 for method do_link
00000000000027a4         mov        rdx, qword [rsp+0x108+var_E0]               ; argument #3 for method do_link
00000000000027a9         mov        r8d, 0xffffffff                             ; argument #5 for method do_link
00000000000027af         mov        esi, dword [rsp+0x108+var_F0]               ; argument #2 for method do_link
00000000000027b3         mov        rcx, r12                                    ; argument #4 for method do_link
00000000000027b6         call       do_link                                     ; do_link
00000000000027bb         mov        rdi, r12                                    ; argument "__ptr" for method j_free
00000000000027be         and        ebx, eax
00000000000027c0         call       j_free                                      ; free
00000000000027c5         cmp        r13, r15
00000000000027c8         jne        loc_2778

                     loc_27ca:
00000000000027ca         xor        ebx, 0x1                                    ; CODE XREF=main+1563, main+1672
00000000000027cd         mov        rcx, qword [rsp+0x108+var_40]
00000000000027d5         xor        rcx, qword [fs:0x28]
00000000000027de         movzx      eax, bl
00000000000027e1         jne        loc_2a43

00000000000027e7         add        rsp, 0xd8
00000000000027ee         pop        rbx
00000000000027ef         pop        rbp
00000000000027f0         pop        r12
00000000000027f2         pop        r13
00000000000027f4         pop        r14
00000000000027f6         pop        r15
00000000000027f8         ret
                        ; endp

                     loc_27f9:
00000000000027f9         cmp        ecx, 0x2                                    ; CODE XREF=main+1114, main+1123
00000000000027fc         jne        loc_2851

00000000000027fe         test       r15b, r15b
0000000000002801         je         loc_2851

0000000000002803         mov        rdx, qword [rbx+8]                          ; argument #3 for method atomic_link
0000000000002807         mov        rdi, qword [rbx]                            ; argument #1 for method atomic_link
000000000000280a         mov        esi, 0xffffff9c                             ; argument #2 for method atomic_link
000000000000280f         mov        dword [rsp+0x108+var_F8], ecx
0000000000002813         call       atomic_link                                 ; atomic_link
0000000000002818         test       eax, eax
000000000000281a         mov        r8d, eax
000000000000281d         mov        ecx, dword [rsp+0x108+var_F8]
0000000000002821         js         loc_292d

0000000000002827         cmp        eax, 0x11
000000000000282a         je         loc_292d

0000000000002830         cmp        eax, 0x14
0000000000002833         je         loc_292d

0000000000002839         mov        r12d, 0x2
000000000000283f         xor        ebp, ebp

                     loc_2841:
0000000000002841         xor        eax, eax                                    ; CODE XREF=main+1509
0000000000002843         test       r13b, r13b
0000000000002846         je         loc_268e

000000000000284c         jmp        loc_2666

                     loc_2851:
0000000000002851         test       r12, r12                                    ; CODE XREF=main+1340, main+1345
0000000000002854         mov        rbp, r12
0000000000002857         je         loc_292d

                     loc_285d:
000000000000285d         cmp        byte [dereference_dest_dir_symlinks], 0x1   ; dereference_dest_dir_symlinks, CODE XREF=main+1653
0000000000002864         mov        rsi, rbp                                    ; argument #2 for method openat_safer
0000000000002867         mov        edi, 0xffffff9c                             ; argument #1 for method openat_safer
000000000000286c         mov        dword [rsp+0x108+var_EC], r8d
0000000000002871         mov        dword [rsp+0x108+var_F8], ecx
0000000000002875         sbb        edx, edx
0000000000002877         xor        eax, eax
0000000000002879         and        edx, 0x20000
000000000000287f         add        edx, 0x210000                               ; argument #3 for method openat_safer
0000000000002885         call       openat_safer                                ; openat_safer
000000000000288a         test       eax, eax
000000000000288c         mov        dword [rsp+0x108+var_F0], eax
0000000000002890         mov        ecx, dword [rsp+0x108+var_F8]
0000000000002894         mov        r8d, dword [rsp+0x108+var_EC]
0000000000002899         js         loc_28e0

000000000000289b         movzx      r15d, r15b
000000000000289f         sub        ecx, r15d
00000000000028a2         mov        r12d, ecx
00000000000028a5         jmp        loc_2841

                     loc_28a7:
00000000000028a7         mov        rdi, qword [rsp+0x108+var_100]              ; argument #1 for method set_simple_backup_suffix, CODE XREF=main+920
00000000000028ac         mov        dword [rsp+0x108+var_F8], r8d
00000000000028b1         mov        dword [backup_type], 0x0                    ; backup_type
00000000000028bb         call       set_simple_backup_suffix                    ; set_simple_backup_suffix
00000000000028c0         mov        r8d, dword [rsp+0x108+var_F8]

                     loc_28c5:
00000000000028c5         mov        rdx, qword [rbx+8]                          ; argument #3 for method do_link, CODE XREF=main+1003
00000000000028c9         mov        rdi, qword [rbx]                            ; argument #1 for method do_link
00000000000028cc         mov        esi, 0xffffff9c                             ; argument #2 for method do_link
00000000000028d1         mov        rcx, rdx                                    ; argument #4 for method do_link
00000000000028d4         call       do_link                                     ; do_link
00000000000028d9         mov        ebx, eax
00000000000028db         jmp        loc_27ca

                     loc_28e0:
00000000000028e0         cmp        ecx, 0x2                                    ; CODE XREF=main+1497
00000000000028e3         jne        loc_28ee

00000000000028e5         test       r12, r12
00000000000028e8         je         loc_2655

                     loc_28ee:
00000000000028ee         mov        rsi, rbp                                    ; argument #2 for method quotearg_style, CODE XREF=main+1571
00000000000028f1         mov        edi, 0x4                                    ; argument #1 for method quotearg_style
00000000000028f6         call       quotearg_style                              ; quotearg_style
00000000000028fb         lea        rsi, qword [aTargetS]                       ; argument "msgid" for method j_dcgettext, "target %s"
0000000000002902         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002907         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002909         mov        rbp, rax
000000000000290c         call       j_dcgettext                                 ; dcgettext
0000000000002911         mov        rbx, rax
0000000000002914         call       j___errno_location                          ; __errno_location
0000000000002919         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000291b         mov        rcx, rbp
000000000000291e         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000002921         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002926         xor        eax, eax
0000000000002928         call       j_error                                     ; error

                     loc_292d:
000000000000292d         movsxd     rax, ecx                                    ; CODE XREF=main+1377, main+1386, main+1395, main+1431
0000000000002930         mov        rbp, qword [rbx+rax*8-8]
0000000000002935         jmp        loc_285d

                     loc_293a:
000000000000293a         test       r12d, r12d                                  ; CODE XREF=main+1013
000000000000293d         jne        loc_275b

0000000000002943         mov        ebx, 0x1
0000000000002948         jmp        loc_27ca

                     loc_294d:
000000000000294d         xor        edi, edi                                    ; argument #1 for method usage, CODE XREF=main+407
000000000000294f         call       usage                                       ; usage

                     loc_2954:
0000000000002954         lea        rsi, qword [aMissingFileOpe]                ; argument "msgid" for method j_dcgettext, "missing file operand", CODE XREF=main+846
000000000000295b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000295d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002962         call       j_dcgettext                                 ; dcgettext
0000000000002967         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002969         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000296c         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000296e         xor        eax, eax
0000000000002970         call       j_error                                     ; error
0000000000002975         jmp        loc_25f2

                     loc_297a:
000000000000297a         lea        rsi, qword [aCannotDoRelati]                ; argument "msgid" for method j_dcgettext, "cannot do --relative without --symbolic", CODE XREF=main+868
0000000000002981         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002986         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002988         call       j_dcgettext                                 ; dcgettext
000000000000298d         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000298f         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002992         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002997         xor        eax, eax
0000000000002999         call       j_error                                     ; error

                     loc_299e:
000000000000299e         sub        ecx, 0x1                                    ; CODE XREF=main+911
00000000000029a1         je         loc_2a01

00000000000029a3         mov        rsi, qword [rbx+0x10]                       ; argument #2 for method quotearg_style
00000000000029a7         mov        edi, 0x4                                    ; argument #1 for method quotearg_style
00000000000029ac         call       quotearg_style                              ; quotearg_style
00000000000029b1         lea        rsi, qword [aExtraOperandS]                 ; "extra operand %s"
00000000000029b8         mov        rbx, rax
00000000000029bb         mov        edx, 0x5

                     loc_29c0:
00000000000029c0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=main+1885
00000000000029c2         call       j_dcgettext                                 ; dcgettext
00000000000029c7         mov        rcx, rbx
00000000000029ca         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000029cd         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000029cf         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000029d1         xor        eax, eax
00000000000029d3         call       j_error                                     ; error
00000000000029d8         jmp        loc_25f2

                     loc_29dd:
00000000000029dd         lea        rsi, qword [aMultipleTarget]                ; argument "msgid" for method j_dcgettext, "multiple target directories specified", CODE XREF=main+579
00000000000029e4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000029e9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000029eb         call       j_dcgettext                                 ; dcgettext
00000000000029f0         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000029f2         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000029f5         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000029fa         xor        eax, eax
00000000000029fc         call       j_error                                     ; error

                     loc_2a01:
0000000000002a01         mov        rsi, qword [rbx]                            ; argument #2 for method quotearg_style, CODE XREF=main+1761
0000000000002a04         mov        edi, 0x4                                    ; argument #1 for method quotearg_style
0000000000002a09         call       quotearg_style                              ; quotearg_style
0000000000002a0e         mov        edx, 0x5
0000000000002a13         mov        rbx, rax
0000000000002a16         lea        rsi, qword [aMissingDestina]                ; "missing destination file operand after %s"
0000000000002a1d         jmp        loc_29c0

                     loc_2a1f:
0000000000002a1f         lea        rsi, qword [aCannotCombineT]                ; argument "msgid" for method j_dcgettext, "cannot combine --target-directory and --no-target-directory", CODE XREF=main+902
0000000000002a26         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002a2b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002a2d         call       j_dcgettext                                 ; dcgettext
0000000000002a32         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002a34         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002a37         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002a3c         xor        eax, eax
0000000000002a3e         call       j_error                                     ; error

                     loc_2a43:
0000000000002a43         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+1313
                        ; endp

                     loc_2a48:
0000000000002a48         mov        r12d, 0x1                                   ; CODE XREF=main+1132
0000000000002a4e         mov        dword [rsp+0x108+var_F0], 0xffffff9c
0000000000002a56         lea        rbp, qword [aMissingDestina+44]             ; 0xbf54
0000000000002a5d         jmp        loc_2666

                     loc_2a62:
0000000000002a62         mov        rsi, qword [optarg@@GLIBC_2.2.5]            ; argument #2 for method quotearg_style, optarg@@GLIBC_2.2.5, CODE XREF=main+609
0000000000002a69         mov        edi, 0x4                                    ; argument #1 for method quotearg_style
0000000000002a6e         call       quotearg_style                              ; quotearg_style
0000000000002a73         lea        rsi, qword [aFailedToAccess]                ; argument "msgid" for method j_dcgettext, "failed to access %s"
0000000000002a7a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002a7f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002a81         mov        rbp, rax
0000000000002a84         call       j_dcgettext                                 ; dcgettext
0000000000002a89         mov        rbx, rax
0000000000002a8c         call       j___errno_location                          ; __errno_location
0000000000002a91         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002a93         mov        rcx, rbp
0000000000002a96         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000002a99         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002a9e         xor        eax, eax
0000000000002aa0         call       j_error                                     ; error
0000000000002aa5         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0xd170)
0000000000002aaf         nop
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000002ab0         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0xd044)
0000000000002ab2         mov        r9, rdx
0000000000002ab5         pop        rsi
0000000000002ab6         mov        rdx, rsp
0000000000002ab9         and        rsp, 0xfffffffffffffff0
0000000000002abd         push       rax
0000000000002abe         push       rsp
0000000000002abf         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000002ac6         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
0000000000002acd         lea        rdi, qword [main]                           ; main
0000000000002ad4         call       qword [qword_20ffc8+8]                      ; 0x20ffd0
0000000000002ada         hlt
                        ; endp
0000000000002adb         align      32                                          ; End of unwind block (FDE at 0xd044)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000002ae0         lea        rdi, qword [__TMC_END__]                    ; __TMC_END__, CODE XREF=__do_global_dtors_aux+35
0000000000002ae7         push       rbp
0000000000002ae8         lea        rax, qword [__TMC_END__]                    ; __TMC_END__
0000000000002aef         cmp        rax, rdi
0000000000002af2         mov        rbp, rsp
0000000000002af5         je         loc_2b10

0000000000002af7         mov        rax, qword [qword_20ffc8]                   ; qword_20ffc8
0000000000002afe         test       rax, rax
0000000000002b01         je         loc_2b10

0000000000002b03         pop        rbp
0000000000002b04         jmp        rax
                        ; endp
0000000000002b06         align      16

                     loc_2b10:
0000000000002b10         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000002b11         ret
                        ; endp
0000000000002b12         align      32

                     register_tm_clones:
0000000000002b20         lea        rdi, qword [__TMC_END__]                    ; __TMC_END__, CODE XREF=frame_dummy+5
0000000000002b27         lea        rsi, qword [__TMC_END__]                    ; __TMC_END__
0000000000002b2e         push       rbp
0000000000002b2f         sub        rsi, rdi
0000000000002b32         mov        rbp, rsp
0000000000002b35         sar        rsi, 0x3
0000000000002b39         mov        rax, rsi
0000000000002b3c         shr        rax, 0x3f
0000000000002b40         add        rsi, rax
0000000000002b43         sar        rsi, 0x1
0000000000002b46         je         loc_2b60

0000000000002b48         mov        rax, qword [qword_20ffe0]                   ; qword_20ffe0
0000000000002b4f         test       rax, rax
0000000000002b52         je         loc_2b60

0000000000002b54         pop        rbp
0000000000002b55         jmp        rax
                        ; endp
0000000000002b57         align      32

                     loc_2b60:
0000000000002b60         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000002b61         ret
                        ; endp
0000000000002b62         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000002b70         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000002b77         jne        loc_2ba8

0000000000002b79         cmp        qword [qword_20ffe8], 0x0                   ; qword_20ffe8
0000000000002b81         push       rbp
0000000000002b82         mov        rbp, rsp
0000000000002b85         je         loc_2b93

0000000000002b87         mov        rdi, qword [__dso_handle]                   ; __dso_handle
0000000000002b8e         call       j_qword_20ffe8                              ; qword_20ffe8

                     loc_2b93:
0000000000002b93         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000002b98         mov        byte [completed.7697], 0x1                  ; completed.7697
0000000000002b9f         pop        rbp
0000000000002ba0         ret
                        ; endp
0000000000002ba1         align      8

                     loc_2ba8:
0000000000002ba8         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
0000000000002baa         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000002bb0         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000002bb1         mov        rbp, rsp
0000000000002bb4         pop        rbp
0000000000002bb5         jmp        register_tm_clones                          ; register_tm_clones
0000000000002bba         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atomic_link:
0000000000002bc0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xd0b4), CODE XREF=main+1363, do_link+960
0000000000002bc4         cmp        byte [symbolic_link], 0x0                   ; symbolic_link
0000000000002bcb         je         loc_2bf0

0000000000002bcd         cmp        byte [relative], 0x0                        ; relative
0000000000002bd4         jne        loc_2c30

0000000000002bd6         call       j_symlinkat                                 ; symlinkat
0000000000002bdb         test       eax, eax
0000000000002bdd         js         loc_2c21

                     loc_2bdf:
0000000000002bdf         xor        eax, eax                                    ; CODE XREF=atomic_link+95

                     loc_2be1:
0000000000002be1         add        rsp, 0x8                                    ; CODE XREF=atomic_link+117
0000000000002be5         ret
                        ; endp
0000000000002be6         align      16

                     loc_2bf0:
0000000000002bf0         cmp        byte [beware_hard_dir_link], 0x0            ; beware_hard_dir_link, CODE XREF=atomic_link+11
0000000000002bf7         jne        loc_2c30

0000000000002bf9         xor        r8d, r8d
0000000000002bfc         cmp        byte [logical], 0x0                         ; logical
0000000000002c03         mov        rcx, rdx                                    ; argument "__to" for method j_linkat
0000000000002c06         mov        edx, esi                                    ; argument "__tofd" for method j_linkat
0000000000002c08         mov        rsi, rdi                                    ; argument "__from" for method j_linkat
0000000000002c0b         mov        edi, 0xffffff9c                             ; argument "__fromfd" for method j_linkat
0000000000002c10         setne      r8b
0000000000002c14         shl        r8d, 0xa                                    ; argument "__flags" for method j_linkat
0000000000002c18         call       j_linkat                                    ; linkat
0000000000002c1d         test       eax, eax
0000000000002c1f         jns        loc_2bdf

                     loc_2c21:
0000000000002c21         call       j___errno_location                          ; __errno_location, CODE XREF=atomic_link+29
0000000000002c26         mov        eax, dword [rax]
0000000000002c28         add        rsp, 0x8
0000000000002c2c         ret
                        ; endp
0000000000002c2d         align      16

                     loc_2c30:
0000000000002c30         mov        eax, 0xffffffff                             ; CODE XREF=atomic_link+20, atomic_link+55
0000000000002c35         jmp        loc_2be1
0000000000002c37         align      64                                          ; End of unwind block (FDE at 0xd0b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_C0: int32_t, -192
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_150: int32_t, -336
        ;    var_158: int64_t, -344
        ;    var_160: int64_t, -352
        ;    var_168: int64_t, -360
        ;    var_16C: int32_t, -364
        ;    var_178: int64_t, -376
        ;    var_180: int64_t, -384
        ;    var_188: int64_t, -392


                     do_link:
0000000000002c40         push       r15                                         ; Begin of unwind block (FDE at 0xd0d4), CODE XREF=main+1270, main+1556
0000000000002c42         push       r14
0000000000002c44         mov        r10d, r8d
0000000000002c47         push       r13
0000000000002c49         push       r12
0000000000002c4b         xor        r13d, r13d
0000000000002c4e         push       rbp
0000000000002c4f         push       rbx
0000000000002c50         mov        r12d, esi
0000000000002c53         mov        rbx, rdi
0000000000002c56         mov        rbp, rdx
0000000000002c59         mov        r14, rcx
0000000000002c5c         sub        rsp, 0x158
0000000000002c63         mov        rax, qword [fs:0x28]
0000000000002c6c         mov        qword [rsp+0x188+var_40], rax
0000000000002c74         xor        eax, eax
0000000000002c76         cmp        byte [logical], 0x0                         ; logical
0000000000002c7d         sete       r13b
0000000000002c81         shl        r13d, 0x8
0000000000002c85         test       r8d, r8d
0000000000002c88         js         loc_3000

                     loc_2c8e:
0000000000002c8e         test       r10d, r10d                                  ; CODE XREF=do_link+968
0000000000002c91         movzx      r15d, byte [symbolic_link]                  ; symbolic_link
0000000000002c99         jne        loc_2df0

0000000000002c9f         cmp        qword [dest_set], 0x0                       ; dest_set
0000000000002ca7         je         loc_30b0

0000000000002cad         test       r15b, r15b
0000000000002cb0         jne        loc_3210

0000000000002cb6         lea        r15, qword [rsp+0x188+var_168]
0000000000002cbb         mov        r8d, r13d                                   ; argument "__flag" for method j___fxstatat
0000000000002cbe         mov        rdx, rbx                                    ; argument "__filename" for method j___fxstatat
0000000000002cc1         mov        esi, 0xffffff9c                             ; argument "__fildes" for method j___fxstatat
0000000000002cc6         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
0000000000002ccb         mov        rcx, r15                                    ; argument "__stat_buf" for method j___fxstatat
0000000000002cce         call       j___fxstatat                                ; __fxstatat
0000000000002cd3         test       eax, eax
0000000000002cd5         jne        loc_30d0

0000000000002cdb         mov        qword [rsp+0x188+var_188], 0x0
0000000000002ce3         xor        r13d, r13d

                     loc_2ce6:
0000000000002ce6         mov        rdi, qword [dest_set]                       ; dest_set, CODE XREF=do_link+1161
0000000000002ced         mov        rdx, r15
0000000000002cf0         mov        rsi, r14
0000000000002cf3         call       record_file                                 ; record_file

                     loc_2cf8:
0000000000002cf8         cmp        byte [verbose], 0x0                         ; verbose, CODE XREF=do_link+1150
0000000000002cff         mov        r15d, 0x1
0000000000002d05         je         loc_2daa

0000000000002d0b         test       r13, r13
0000000000002d0e         je         loc_323b

0000000000002d14         sub        rbp, r14
0000000000002d17         test       rbp, rbp
0000000000002d1a         jg         loc_3250

0000000000002d20         mov        r15, r13
0000000000002d23         xor        r12d, r12d

                     loc_2d26:
0000000000002d26         mov        rdx, r15                                    ; CODE XREF=do_link+1602
0000000000002d29         mov        esi, 0x4
0000000000002d2e         mov        edi, 0x2
0000000000002d33         call       quotearg_n_style                            ; quotearg_n_style
0000000000002d38         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000002d3b         lea        r12, qword [_IO_stdin_used+4]               ; 0xafa4
0000000000002d42         mov        rbp, rax
0000000000002d45         call       j_free                                      ; free

                     loc_2d4a:
0000000000002d4a         mov        rdx, rbx                                    ; CODE XREF=do_link+1541
0000000000002d4d         mov        esi, 0x4
0000000000002d52         mov        edi, 0x1
0000000000002d57         call       quotearg_n_style                            ; quotearg_n_style
0000000000002d5c         cmp        byte [symbolic_link], 0x1                   ; symbolic_link
0000000000002d63         mov        rdx, r14
0000000000002d66         mov        esi, 0x4
0000000000002d6b         mov        r15, rax
0000000000002d6e         sbb        ebx, ebx
0000000000002d70         xor        edi, edi
0000000000002d72         call       quotearg_n_style                            ; quotearg_n_style
0000000000002d77         and        ebx, 0x10
0000000000002d7a         sub        rsp, 0x8
0000000000002d7e         lea        rsi, qword [aSssCSn]                        ; "%s%s%s %c> %s\\n"
0000000000002d85         push       r15
0000000000002d87         add        ebx, 0x2d
0000000000002d8a         mov        r8, rax
0000000000002d8d         mov        rdx, rbp
0000000000002d90         mov        r9d, ebx
0000000000002d93         mov        rcx, r12
0000000000002d96         mov        edi, 0x1
0000000000002d9b         xor        eax, eax
0000000000002d9d         mov        r15d, 0x1
0000000000002da3         call       j___printf_chk                              ; __printf_chk
0000000000002da8         pop        rax
0000000000002da9         pop        rdx

                     loc_2daa:
0000000000002daa         mov        rdi, r13                                    ; argument "__ptr" for method j_free, CODE XREF=do_link+197, do_link+712, do_link+737, do_link+803, do_link+1508
0000000000002dad         call       j_free                                      ; free
0000000000002db2         mov        rdi, qword [rsp+0x188+var_188]              ; argument "__ptr" for method j_free
0000000000002db6         call       j_free                                      ; free

                     loc_2dbb:
0000000000002dbb         mov        rbx, qword [rsp+0x188+var_40]               ; CODE XREF=do_link+947, do_link+1231, do_link+1908, do_link+1977, do_link+2237, do_link+2329, do_link+2532
0000000000002dc3         xor        rbx, qword [fs:0x28]
0000000000002dcc         mov        eax, r15d
0000000000002dcf         jne        loc_36a1

0000000000002dd5         add        rsp, 0x158
0000000000002ddc         pop        rbx
0000000000002ddd         pop        rbp
0000000000002dde         pop        r12
0000000000002de0         pop        r13
0000000000002de2         pop        r14
0000000000002de4         pop        r15
0000000000002de6         ret
                        ; endp
0000000000002de7         align      16

                     loc_2df0:
0000000000002df0         test       r15b, r15b                                  ; CODE XREF=do_link+89
0000000000002df3         mov        dword [rsp+0x188+var_178], 0x1
0000000000002dfb         je         loc_3328

                     loc_2e01:
0000000000002e01         cmp        byte [relative], 0x0                        ; relative, CODE XREF=do_link+1828, do_link+1848
0000000000002e08         mov        qword [rsp+0x188+var_188], 0x0
0000000000002e10         jne        loc_3168

                     loc_2e16:
0000000000002e16         cmp        byte [remove_existing_files], 0x0           ; remove_existing_files, CODE XREF=do_link+1446, do_link+1758
0000000000002e1d         jne        loc_2f70

0000000000002e23         cmp        byte [interactive], 0x0                     ; interactive
0000000000002e2a         jne        loc_2f70

0000000000002e30         mov        r9d, dword [backup_type]                    ; backup_type
0000000000002e37         test       r9d, r9d
0000000000002e3a         jne        loc_2f70

                     loc_2e40:
0000000000002e40         xor        r9d, r9d                                    ; CODE XREF=do_link+884, do_link+2175
0000000000002e43         xor        r13d, r13d

                     loc_2e46:
0000000000002e46         cmp        byte [symbolic_link], 0x0                   ; symbolic_link, CODE XREF=do_link+1127, do_link+2144
0000000000002e4d         jne        loc_31f0

0000000000002e53         xor        r8d, r8d
0000000000002e56         cmp        byte [logical], 0x0                         ; logical
0000000000002e5d         mov        rcx, rbp
0000000000002e60         mov        rsi, rbx
0000000000002e63         mov        edx, r12d
0000000000002e66         mov        edi, 0xffffff9c
0000000000002e6b         setne      r8b
0000000000002e6f         sub        rsp, 0x8
0000000000002e73         push       r10
0000000000002e75         shl        r8d, 0xa
0000000000002e79         call       force_linkat                                ; force_linkat
0000000000002e7e         pop        rcx
0000000000002e7f         pop        rsi
0000000000002e80         mov        r15d, eax

                     loc_2e83:
0000000000002e83         test       r15d, r15d                                  ; CODE XREF=do_link+1479
0000000000002e86         jle        loc_36a6

0000000000002e8c         mov        rdx, rbx
0000000000002e8f         mov        esi, 0x4
0000000000002e94         mov        edi, 0x1
0000000000002e99         call       quotearg_n_style                            ; quotearg_n_style
0000000000002e9e         xor        edi, edi
0000000000002ea0         mov        rdx, r14
0000000000002ea3         mov        esi, 0x4
0000000000002ea8         mov        qword [rsp+0x188+var_180], rax
0000000000002ead         call       quotearg_n_style                            ; quotearg_n_style
0000000000002eb2         cmp        byte [symbolic_link], 0x0                   ; symbolic_link
0000000000002eb9         mov        rcx, rax
0000000000002ebc         je         loc_3118

0000000000002ec2         cmp        r15d, 0x24
0000000000002ec6         je         loc_2ed1

0000000000002ec8         cmp        byte [rbx], 0x0
0000000000002ecb         jne        loc_3290

                     loc_2ed1:
0000000000002ed1         lea        rsi, qword [aFailedToCreate]                ; argument "msgid" for method j_dcgettext, "failed to create symbolic link %s -> %s", CODE XREF=do_link+646
0000000000002ed8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002edd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002edf         mov        qword [rsp+0x188+var_178], rcx
0000000000002ee4         call       j_dcgettext                                 ; dcgettext
0000000000002ee9         mov        rcx, qword [rsp+0x188+var_178]
0000000000002eee         mov        rdx, rax

                     loc_2ef1:
0000000000002ef1         mov        r8, qword [rsp+0x188+var_180]               ; CODE XREF=do_link+1309, do_link+1648, do_link+2016, do_link+2056
0000000000002ef6         mov        esi, r15d                                   ; argument "__errnum" for method j_error
0000000000002ef9         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002efb         xor        eax, eax
0000000000002efd         xor        r15d, r15d
0000000000002f00         call       j_error                                     ; error
0000000000002f05         test       r13, r13
0000000000002f08         je         loc_2daa

0000000000002f0e         mov        rcx, rbp                                    ; argument "__new" for method j_renameat
0000000000002f11         mov        edx, r12d                                   ; argument "__newfd" for method j_renameat
0000000000002f14         mov        rsi, r13                                    ; argument "__old" for method j_renameat
0000000000002f17         mov        edi, r12d                                   ; argument "__oldfd" for method j_renameat
0000000000002f1a         call       j_renameat                                  ; renameat
0000000000002f1f         test       eax, eax
0000000000002f21         je         loc_2daa

0000000000002f27         mov        rsi, r14
0000000000002f2a         mov        edi, 0x4
0000000000002f2f         call       quotearg_style                              ; quotearg_style
0000000000002f34         lea        rsi, qword [aCannotUnbackup]                ; argument "msgid" for method j_dcgettext, "cannot un-backup %s"
0000000000002f3b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002f3d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002f42         mov        rbp, rax
0000000000002f45         call       j_dcgettext                                 ; dcgettext
0000000000002f4a         mov        rbx, rax
0000000000002f4d         call       j___errno_location                          ; __errno_location
0000000000002f52         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002f54         mov        rcx, rbp
0000000000002f57         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000002f5a         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002f5c         xor        eax, eax
0000000000002f5e         call       j_error                                     ; error
0000000000002f63         jmp        loc_2daa
0000000000002f68         align      16

                     loc_2f70:
0000000000002f70         lea        r13, qword [rsp+0x188+var_D8]               ; CODE XREF=do_link+477, do_link+490, do_link+506
0000000000002f78         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
0000000000002f7e         mov        rdx, rbp                                    ; argument "__filename" for method j___fxstatat
0000000000002f81         mov        esi, r12d                                   ; argument "__fildes" for method j___fxstatat
0000000000002f84         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
0000000000002f89         mov        dword [rsp+0x188+var_180], r10d
0000000000002f8e         mov        rcx, r13                                    ; argument "__stat_buf" for method j___fxstatat
0000000000002f91         call       j___fxstatat                                ; __fxstatat
0000000000002f96         test       eax, eax
0000000000002f98         mov        r10d, dword [rsp+0x188+var_180]
0000000000002f9d         je         loc_3010

0000000000002f9f         mov        dword [rsp+0x188+var_180], r10d
0000000000002fa4         call       j___errno_location                          ; __errno_location
0000000000002fa9         cmp        dword [rax], 0x2
0000000000002fac         mov        r13, rax
0000000000002faf         mov        r10d, dword [rsp+0x188+var_180]
0000000000002fb4         je         loc_2e40

0000000000002fba         mov        rsi, r14
0000000000002fbd         mov        edi, 0x4
0000000000002fc2         xor        r15d, r15d
0000000000002fc5         call       quotearg_style                              ; quotearg_style
0000000000002fca         lea        rsi, qword [aFailedToAccess]                ; argument "msgid" for method j_dcgettext, "failed to access %s"
0000000000002fd1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002fd6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002fd8         mov        rbx, rax
0000000000002fdb         call       j_dcgettext                                 ; dcgettext
0000000000002fe0         mov        esi, dword [r13]                            ; argument "__errnum" for method j_error
0000000000002fe4         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002fe7         mov        rcx, rbx
0000000000002fea         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002fec         xor        eax, eax
0000000000002fee         call       j_error                                     ; error
0000000000002ff3         jmp        loc_2dbb
0000000000002ff8         align      4096

                     loc_3000:
0000000000003000         call       atomic_link                                 ; atomic_link, CODE XREF=do_link+72
0000000000003005         mov        r10d, eax
0000000000003008         jmp        loc_2c8e
000000000000300d         align      16

                     loc_3010:
0000000000003010         mov        eax, dword [rsp+0x188+var_C0]               ; CODE XREF=do_link+861
0000000000003017         and        eax, 0xf000
000000000000301c         cmp        eax, 0x4000
0000000000003021         je         loc_33c0

0000000000003027         mov        rdi, qword [dest_set]                       ; dest_set
000000000000302e         mov        rdx, r13
0000000000003031         mov        rsi, r14
0000000000003034         mov        dword [rsp+0x188+var_180], r10d
0000000000003039         call       seen_file                                   ; seen_file
000000000000303e         test       al, al
0000000000003040         mov        r10d, dword [rsp+0x188+var_180]
0000000000003045         jne        loc_3508

000000000000304b         mov        r8d, dword [backup_type]                    ; backup_type
0000000000003052         movzx      eax, byte [remove_existing_files]           ; remove_existing_files
0000000000003059         test       r8d, r8d
000000000000305c         je         loc_3068

000000000000305e         movzx      eax, byte [symbolic_link]                   ; symbolic_link
0000000000003065         xor        eax, 0x1

                     loc_3068:
0000000000003068         test       al, al                                      ; CODE XREF=do_link+1052
000000000000306a         je         loc_308b

000000000000306c         mov        edi, dword [rsp+0x188+var_178]
0000000000003070         test       edi, edi
0000000000003072         jne        loc_358d

                     loc_3078:
0000000000003078         mov        rax, qword [rsp+0x188+var_D0]               ; CODE XREF=do_link+2420
0000000000003080         cmp        qword [rsp+0x188+var_160], rax
0000000000003085         je         loc_3629

                     loc_308b:
000000000000308b         test       r10d, r10d                                  ; CODE XREF=do_link+1066, do_link+2414, do_link+2550, do_link+2595
000000000000308e         js         loc_3450

0000000000003094         cmp        r10d, 0x11
0000000000003098         je         loc_3450

                     loc_309e:
000000000000309e         mov        r9d, 0x1                                    ; CODE XREF=do_link+2089
00000000000030a4         xor        r13d, r13d
00000000000030a7         jmp        loc_2e46
00000000000030ac         align      16

                     loc_30b0:
00000000000030b0         mov        qword [rsp+0x188+var_188], 0x0              ; CODE XREF=do_link+103
00000000000030b8         xor        r13d, r13d

                     loc_30bb:
00000000000030bb         test       r15b, r15b                                  ; CODE XREF=do_link+2670
00000000000030be         jne        loc_2cf8

00000000000030c4         lea        r15, qword [rsp+0x188+var_168]
00000000000030c9         jmp        loc_2ce6
00000000000030ce         align      16

                     loc_30d0:
00000000000030d0         mov        rsi, rbx                                    ; CODE XREF=do_link+149, do_link+1811
00000000000030d3         mov        edi, 0x4
00000000000030d8         xor        r15d, r15d
00000000000030db         call       quotearg_style                              ; quotearg_style
00000000000030e0         lea        rsi, qword [aFailedToAccess]                ; argument "msgid" for method j_dcgettext, "failed to access %s"
00000000000030e7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000030ec         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000030ee         mov        rbp, rax
00000000000030f1         call       j_dcgettext                                 ; dcgettext
00000000000030f6         mov        rbx, rax
00000000000030f9         call       j___errno_location                          ; __errno_location
00000000000030fe         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000003100         mov        rcx, rbp
0000000000003103         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000003106         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003108         xor        eax, eax
000000000000310a         call       j_error                                     ; error
000000000000310f         jmp        loc_2dbb
0000000000003114         align      8

                     loc_3118:
0000000000003118         cmp        r15d, 0x1f                                  ; CODE XREF=do_link+636
000000000000311c         je         loc_3400

0000000000003122         cmp        r15d, 0x7a
0000000000003126         je         loc_313d

0000000000003128         cmp        r15d, 0x11
000000000000312c         je         loc_313d

000000000000312e         mov        eax, r15d
0000000000003131         and        eax, 0xfffffffd
0000000000003134         cmp        eax, 0x1c
0000000000003137         jne        loc_3428

                     loc_313d:
000000000000313d         lea        rsi, qword [aFailedToCreate_b009]           ; argument "msgid" for method j_dcgettext, "failed to create hard link %s", CODE XREF=do_link+1254, do_link+1260
0000000000003144         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003149         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000314b         mov        qword [rsp+0x188+var_178], rcx
0000000000003150         call       j_dcgettext                                 ; dcgettext
0000000000003155         mov        rcx, qword [rsp+0x188+var_178]
000000000000315a         mov        rdx, rax
000000000000315d         jmp        loc_2ef1
0000000000003162         align      8

                     loc_3168:
0000000000003168         mov        rdi, r14                                    ; CODE XREF=do_link+464
000000000000316b         mov        dword [rsp+0x188+var_188], r10d
000000000000316f         call       dir_name                                    ; dir_name
0000000000003174         mov        esi, 0x2
0000000000003179         mov        rdi, rax
000000000000317c         mov        qword [rsp+0x188+var_180], rax
0000000000003181         call       canonicalize_filename_mode                  ; canonicalize_filename_mode
0000000000003186         mov        esi, 0x2
000000000000318b         mov        r13, rax
000000000000318e         mov        rdi, rbx
0000000000003191         call       canonicalize_filename_mode                  ; canonicalize_filename_mode
0000000000003196         test       r13, r13
0000000000003199         mov        r15, rax
000000000000319c         mov        r10d, dword [rsp+0x188+var_188]
00000000000031a0         je         loc_31ab

00000000000031a2         test       rax, rax
00000000000031a5         jne        loc_32b8

                     loc_31ab:
00000000000031ab         mov        rdi, qword [rsp+0x188+var_180]              ; argument "__ptr" for method j_free, CODE XREF=do_link+1376
00000000000031b0         mov        dword [rsp+0x188+var_188], r10d
00000000000031b4         call       j_free                                      ; free
00000000000031b9         mov        rdi, r13                                    ; argument "__ptr" for method j_free
00000000000031bc         call       j_free                                      ; free
00000000000031c1         mov        rdi, r15                                    ; argument "__ptr" for method j_free
00000000000031c4         call       j_free                                      ; free
00000000000031c9         mov        r10d, dword [rsp+0x188+var_188]

                     loc_31cd:
00000000000031cd         mov        rdi, rbx                                    ; CODE XREF=do_link+1748, do_link+2376
00000000000031d0         mov        dword [rsp+0x188+var_180], r10d
00000000000031d5         call       xstrdup                                     ; xstrdup
00000000000031da         mov        r10d, dword [rsp+0x188+var_180]
00000000000031df         mov        rbx, rax
00000000000031e2         mov        qword [rsp+0x188+var_188], rax
00000000000031e6         jmp        loc_2e16
00000000000031eb         align      16

                     loc_31f0:
00000000000031f0         mov        r8d, r10d                                   ; CODE XREF=do_link+525
00000000000031f3         mov        ecx, r9d
00000000000031f6         mov        rdx, rbp
00000000000031f9         mov        esi, r12d
00000000000031fc         mov        rdi, rbx
00000000000031ff         call       force_symlinkat                             ; force_symlinkat
0000000000003204         mov        r15d, eax
0000000000003207         jmp        loc_2e83
000000000000320c         align      16

                     loc_3210:
0000000000003210         cmp        byte [verbose], 0x0                         ; verbose, CODE XREF=do_link+112
0000000000003217         jne        loc_3230

0000000000003219         mov        qword [rsp+0x188+var_188], 0x0
0000000000003221         xor        r13d, r13d
0000000000003224         jmp        loc_2daa
0000000000003229         align      16

                     loc_3230:
0000000000003230         xor        r13d, r13d                                  ; CODE XREF=do_link+1495
0000000000003233         mov        qword [rsp+0x188+var_188], 0x0

                     loc_323b:
000000000000323b         lea        r12, qword [aWrittenBySSAnd+27]             ; 0xc718, CODE XREF=do_link+206
0000000000003242         mov        rbp, r12
0000000000003245         jmp        loc_2d4a
000000000000324a         align      16

                     loc_3250:
0000000000003250         mov        rdi, r13                                    ; argument "__s" for method j_strlen, CODE XREF=do_link+218
0000000000003253         call       j_strlen                                    ; strlen
0000000000003258         lea        rdi, qword [rbp+rax+1]
000000000000325d         call       xmalloc                                     ; xmalloc
0000000000003262         mov        rsi, r14                                    ; argument "__src" for method j_memcpy
0000000000003265         mov        r12, rax
0000000000003268         mov        rdx, rbp                                    ; argument "__n" for method j_memcpy
000000000000326b         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
000000000000326e         mov        r15, r12
0000000000003271         call       j_memcpy                                    ; memcpy
0000000000003276         lea        rdi, qword [r12+rbp]                        ; argument "__dest" for method j_strcpy
000000000000327a         mov        rsi, r13                                    ; argument "__src" for method j_strcpy
000000000000327d         call       j_strcpy                                    ; strcpy
0000000000003282         jmp        loc_2d26
0000000000003287         align      16

                     loc_3290:
0000000000003290         lea        rsi, qword [aFailedToCreate_b278]           ; argument "msgid" for method j_dcgettext, "failed to create symbolic link %s", CODE XREF=do_link+651
0000000000003297         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000329c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000329e         mov        qword [rsp+0x188+var_178], rax
00000000000032a3         call       j_dcgettext                                 ; dcgettext
00000000000032a8         mov        rcx, qword [rsp+0x188+var_178]
00000000000032ad         mov        rdx, rax
00000000000032b0         jmp        loc_2ef1
00000000000032b5         align      8

                     loc_32b8:
00000000000032b8         mov        edi, 0x1000                                 ; CODE XREF=do_link+1381
00000000000032bd         mov        dword [rsp+0x188+var_16C], r10d
00000000000032c2         call       xmalloc                                     ; xmalloc
00000000000032c7         mov        ecx, 0x1000
00000000000032cc         mov        rdx, rax
00000000000032cf         mov        rsi, r13
00000000000032d2         mov        rdi, r15
00000000000032d5         mov        qword [rsp+0x188+var_188], rax
00000000000032d9         call       relpath                                     ; relpath
00000000000032de         test       al, al
00000000000032e0         mov        r10d, dword [rsp+0x188+var_16C]
00000000000032e5         je         loc_3560

00000000000032eb         mov        rdi, qword [rsp+0x188+var_180]              ; argument "__ptr" for method j_free
00000000000032f0         mov        dword [rsp+0x188+var_16C], r10d
00000000000032f5         call       j_free                                      ; free
00000000000032fa         mov        rdi, r13                                    ; argument "__ptr" for method j_free
00000000000032fd         call       j_free                                      ; free
0000000000003302         mov        rdi, r15                                    ; argument "__ptr" for method j_free
0000000000003305         call       j_free                                      ; free
000000000000330a         cmp        qword [rsp+0x188+var_188], 0x0
000000000000330f         mov        r10d, dword [rsp+0x188+var_16C]
0000000000003314         je         loc_31cd

000000000000331a         mov        rbx, qword [rsp+0x188+var_188]
000000000000331e         jmp        loc_2e16
0000000000003323         align      8

                     loc_3328:
0000000000003328         lea        r15, qword [rsp+0x188+var_168]              ; CODE XREF=do_link+443
000000000000332d         mov        r8d, r13d                                   ; argument "__flag" for method j___fxstatat
0000000000003330         mov        rdx, rbx                                    ; argument "__filename" for method j___fxstatat
0000000000003333         mov        esi, 0xffffff9c                             ; argument "__fildes" for method j___fxstatat
0000000000003338         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
000000000000333d         mov        dword [rsp+0x188+var_188], r10d
0000000000003341         mov        rcx, r15                                    ; argument "__stat_buf" for method j___fxstatat
0000000000003344         call       j___fxstatat                                ; __fxstatat
0000000000003349         test       eax, eax
000000000000334b         mov        dword [rsp+0x188+var_178], eax
000000000000334f         mov        r10d, dword [rsp+0x188+var_188]
0000000000003353         jne        loc_30d0

0000000000003359         movzx      r15d, byte [hard_dir_link]                  ; hard_dir_link
0000000000003361         test       r15b, r15b
0000000000003364         jne        loc_2e01

000000000000336a         mov        eax, dword [rsp+0x188+var_150]
000000000000336e         and        eax, 0xf000
0000000000003373         cmp        eax, 0x4000
0000000000003378         jne        loc_2e01

000000000000337e         mov        rdx, rbx
0000000000003381         xor        edi, edi
0000000000003383         mov        esi, 0x3
0000000000003388         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000338d         lea        rsi, qword [aSHardLinkNotAl]                ; argument "msgid" for method j_dcgettext, "%s: hard link not allowed for directory"
0000000000003394         mov        rbx, rax
0000000000003397         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003399         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000339e         call       j_dcgettext                                 ; dcgettext
00000000000033a3         mov        rcx, rbx
00000000000033a6         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000033a9         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000033ab         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000033ad         xor        eax, eax
00000000000033af         call       j_error                                     ; error
00000000000033b4         jmp        loc_2dbb
00000000000033b9         align      64

                     loc_33c0:
00000000000033c0         mov        rdx, r14                                    ; CODE XREF=do_link+993
00000000000033c3         mov        esi, 0x3
00000000000033c8         xor        edi, edi
00000000000033ca         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000033cf         lea        rsi, qword [aSCannotOverwri]                ; argument "msgid" for method j_dcgettext, "%s: cannot overwrite directory"
00000000000033d6         mov        rbx, rax
00000000000033d9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000033de         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000033e0         xor        r15d, r15d
00000000000033e3         call       j_dcgettext                                 ; dcgettext
00000000000033e8         mov        rcx, rbx
00000000000033eb         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000033ee         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000033f0         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000033f2         xor        eax, eax
00000000000033f4         call       j_error                                     ; error
00000000000033f9         jmp        loc_2dbb
00000000000033fe         align      1024

                     loc_3400:
0000000000003400         lea        rsi, qword [aFailedToCreate_b2c8]           ; argument "msgid" for method j_dcgettext, "failed to create hard link to %.0s%s", CODE XREF=do_link+1244
0000000000003407         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000340c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000340e         mov        qword [rsp+0x188+var_178], rax
0000000000003413         call       j_dcgettext                                 ; dcgettext
0000000000003418         mov        rcx, qword [rsp+0x188+var_178]
000000000000341d         mov        rdx, rax
0000000000003420         jmp        loc_2ef1
0000000000003425         align      8

                     loc_3428:
0000000000003428         lea        rsi, qword [aFailedToCreate_b2f0]           ; argument "msgid" for method j_dcgettext, "failed to create hard link %s => %s", CODE XREF=do_link+1271
000000000000342f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003434         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003436         mov        qword [rsp+0x188+var_178], rcx
000000000000343b         call       j_dcgettext                                 ; dcgettext
0000000000003440         mov        rcx, qword [rsp+0x188+var_178]
0000000000003445         mov        rdx, rax
0000000000003448         jmp        loc_2ef1
000000000000344d         align      16

                     loc_3450:
0000000000003450         movzx      r15d, byte [interactive]                    ; interactive, CODE XREF=do_link+1102, do_link+1112
0000000000003458         test       r15b, r15b
000000000000345b         jne        loc_35c0

                     loc_3461:
0000000000003461         mov        edx, dword [backup_type]                    ; backup_type, CODE XREF=do_link+2526
0000000000003467         test       edx, edx
0000000000003469         je         loc_309e

000000000000346f         mov        rsi, rbp
0000000000003472         mov        edi, r12d
0000000000003475         mov        dword [rsp+0x188+var_180], r10d
000000000000347a         call       find_backup_file_name                       ; find_backup_file_name
000000000000347f         mov        edx, r12d                                   ; argument "__newfd" for method j_renameat
0000000000003482         mov        rcx, rax                                    ; argument "__new" for method j_renameat
0000000000003485         mov        rsi, rbp                                    ; argument "__old" for method j_renameat
0000000000003488         mov        edi, r12d                                   ; argument "__oldfd" for method j_renameat
000000000000348b         mov        r13, rax
000000000000348e         call       j_renameat                                  ; renameat
0000000000003493         test       eax, eax
0000000000003495         mov        r9d, 0x1
000000000000349b         mov        r10d, dword [rsp+0x188+var_180]
00000000000034a0         je         loc_2e46

00000000000034a6         call       j___errno_location                          ; __errno_location
00000000000034ab         mov        r15d, dword [rax]
00000000000034ae         mov        rdi, r13                                    ; argument "__ptr" for method j_free
00000000000034b1         call       j_free                                      ; free
00000000000034b6         mov        r10d, dword [rsp+0x188+var_180]
00000000000034bb         cmp        r15d, 0x2
00000000000034bf         je         loc_2e40

00000000000034c5         mov        rsi, r14
00000000000034c8         mov        edi, 0x4
00000000000034cd         call       quotearg_style                              ; quotearg_style
00000000000034d2         lea        rsi, qword [aCannotBackupS]                 ; argument "msgid" for method j_dcgettext, "cannot backup %s"
00000000000034d9         mov        rbx, rax
00000000000034dc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000034e1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000034e3         call       j_dcgettext                                 ; dcgettext
00000000000034e8         mov        esi, r15d                                   ; argument "__errnum" for method j_error
00000000000034eb         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000034ee         mov        rcx, rbx
00000000000034f1         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000034f3         xor        eax, eax
00000000000034f5         xor        r15d, r15d
00000000000034f8         call       j_error                                     ; error
00000000000034fd         jmp        loc_2dbb
0000000000003502         align      8

                     loc_3508:
0000000000003508         mov        rdx, rbx                                    ; CODE XREF=do_link+1029
000000000000350b         mov        esi, 0x4
0000000000003510         mov        edi, 0x1
0000000000003515         call       quotearg_n_style                            ; quotearg_n_style
000000000000351a         mov        rdx, r14
000000000000351d         mov        esi, 0x4
0000000000003522         xor        edi, edi
0000000000003524         mov        rbp, rax
0000000000003527         call       quotearg_n_style                            ; quotearg_n_style
000000000000352c         lea        rsi, qword [aWillNotOverwri]                ; "will not overwrite just-created %s with %s"
0000000000003533         mov        rbx, rax
0000000000003536         mov        edx, 0x5

                     loc_353b:
000000000000353b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=do_link+2652
000000000000353d         xor        r15d, r15d
0000000000003540         call       j_dcgettext                                 ; dcgettext
0000000000003545         mov        r8, rbp
0000000000003548         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000354b         mov        rcx, rbx
000000000000354e         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003550         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003552         xor        eax, eax
0000000000003554         call       j_error                                     ; error
0000000000003559         jmp        loc_2dbb
000000000000355e         align      32

                     loc_3560:
0000000000003560         mov        rdi, qword [rsp+0x188+var_188]              ; argument "__ptr" for method j_free, CODE XREF=do_link+1701
0000000000003564         call       j_free                                      ; free
0000000000003569         mov        rdi, qword [rsp+0x188+var_180]              ; argument "__ptr" for method j_free
000000000000356e         call       j_free                                      ; free
0000000000003573         mov        rdi, r13                                    ; argument "__ptr" for method j_free
0000000000003576         call       j_free                                      ; free
000000000000357b         mov        rdi, r15                                    ; argument "__ptr" for method j_free
000000000000357e         call       j_free                                      ; free
0000000000003583         mov        r10d, dword [rsp+0x188+var_16C]
0000000000003588         jmp        loc_31cd

                     loc_358d:
000000000000358d         lea        r15, qword [rsp+0x188+var_168]              ; CODE XREF=do_link+1074
0000000000003592         mov        rsi, rbx                                    ; argument "__filename" for method j___xstat
0000000000003595         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
000000000000359a         mov        dword [rsp+0x188+var_180], r10d
000000000000359f         mov        rdx, r15                                    ; argument "__stat_buf" for method j___xstat
00000000000035a2         call       j___xstat                                   ; __xstat
00000000000035a7         test       eax, eax
00000000000035a9         mov        r10d, dword [rsp+0x188+var_180]
00000000000035ae         jne        loc_308b

00000000000035b4         jmp        loc_3078
00000000000035b9         align      64

                     loc_35c0:
00000000000035c0         mov        rsi, r14                                    ; CODE XREF=do_link+2075
00000000000035c3         mov        edi, 0x4
00000000000035c8         mov        dword [rsp+0x188+var_178], r10d
00000000000035cd         call       quotearg_style                              ; quotearg_style
00000000000035d2         mov        rcx, qword [program_name]                   ; program_name
00000000000035d9         lea        rsi, qword [aSReplaceS]                     ; argument "msgid" for method j_dcgettext, "%s: replace %s? "
00000000000035e0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000035e2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000035e7         mov        r13, rax
00000000000035ea         mov        qword [rsp+0x188+var_180], rcx
00000000000035ef         call       j_dcgettext                                 ; dcgettext
00000000000035f4         mov        rcx, qword [rsp+0x188+var_180]
00000000000035f9         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000003600         mov        rdx, rax
0000000000003603         mov        r8, r13
0000000000003606         mov        esi, 0x1
000000000000360b         xor        eax, eax
000000000000360d         call       j___fprintf_chk                             ; __fprintf_chk
0000000000003612         call       yesno                                       ; yesno
0000000000003617         test       al, al
0000000000003619         mov        r10d, dword [rsp+0x188+var_178]
000000000000361e         jne        loc_3461

0000000000003624         jmp        loc_2dbb

                     loc_3629:
0000000000003629         mov        rax, qword [rsp+0x188+var_D8]               ; CODE XREF=do_link+1093
0000000000003631         cmp        qword [rsp+0x188+var_168], rax
0000000000003636         jne        loc_308b

000000000000363c         cmp        qword [rsp+0x188+var_158], 0x1
0000000000003642         je         loc_3669

0000000000003644         mov        rcx, rbp
0000000000003647         mov        edx, r12d
000000000000364a         mov        rsi, rbx
000000000000364d         mov        edi, 0xffffff9c
0000000000003652         mov        dword [rsp+0x188+var_180], r10d
0000000000003657         call       same_nameat                                 ; same_nameat
000000000000365c         test       al, al
000000000000365e         mov        r10d, dword [rsp+0x188+var_180]
0000000000003663         je         loc_308b

                     loc_3669:
0000000000003669         mov        rdx, r14                                    ; CODE XREF=do_link+2562
000000000000366c         mov        esi, 0x4
0000000000003671         mov        edi, 0x1
0000000000003676         call       quotearg_n_style                            ; quotearg_n_style
000000000000367b         mov        rdx, rbx
000000000000367e         mov        esi, 0x4
0000000000003683         xor        edi, edi
0000000000003685         mov        rbp, rax
0000000000003688         call       quotearg_n_style                            ; quotearg_n_style
000000000000368d         mov        edx, 0x5
0000000000003692         mov        rbx, rax
0000000000003695         lea        rsi, qword [aSAndSAreTheSam]                ; "%s and %s are the same file"
000000000000369c         jmp        loc_353b

                     loc_36a1:
00000000000036a1         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=do_link+399
                        ; endp

                     loc_36a6:
00000000000036a6         movzx      r15d, byte [symbolic_link]                  ; symbolic_link, CODE XREF=do_link+582
00000000000036ae         jmp        loc_30bb
00000000000036b3         align      64                                          ; End of unwind block (FDE at 0xd0d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
00000000000036c0         push       r13                                         ; Begin of unwind block (FDE at 0xd144), CODE XREF=main+823, main+1679, __argmatch_die+5
00000000000036c2         push       r12
00000000000036c4         mov        edx, 0x5
00000000000036c9         push       rbp
00000000000036ca         push       rbx
00000000000036cb         mov        ebp, edi
00000000000036cd         sub        rsp, 0x88
00000000000036d4         mov        rbx, qword [program_name]                   ; program_name
00000000000036db         mov        rax, qword [fs:0x28]
00000000000036e4         mov        qword [rsp+0xa8+var_30], rax
00000000000036e9         xor        eax, eax
00000000000036eb         test       edi, edi
00000000000036ed         je         loc_371d

00000000000036ef         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
00000000000036f6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000036f8         call       j_dcgettext                                 ; dcgettext
00000000000036fd         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000003704         mov        rdx, rax
0000000000003707         mov        rcx, rbx
000000000000370a         mov        esi, 0x1
000000000000370f         xor        eax, eax
0000000000003711         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_3716:
0000000000003716         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+910
0000000000003718         call       j_exit                                      ; exit
                        ; endp

                     loc_371d:
000000000000371d         lea        rsi, qword [aUsageSOptionTT]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... [-T] TARGET LINK_NAME\\n  or:  %s [OPTION]... TARGET\\n  or:  %s [OPTION]... TARGET... DIRECTORY\\n  or:  %s [OPTION]... -t DIRECTORY TARGET...\\n", CODE XREF=usage+45
0000000000003724         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003726         call       j_dcgettext                                 ; dcgettext
000000000000372b         mov        rcx, rbx
000000000000372e         mov        r9, rbx
0000000000003731         mov        r8, rbx
0000000000003734         mov        rdx, rbx
0000000000003737         mov        rsi, rax
000000000000373a         mov        edi, 0x1
000000000000373f         xor        eax, eax
0000000000003741         call       j___printf_chk                              ; __printf_chk
0000000000003746         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000374d         lea        rsi, qword [aInThe1stFormCr]                ; argument "msgid" for method j_dcgettext, "In the 1st form, create a link to TARGET with the name LINK_NAME.\\nIn the 2nd form, create a link to TARGET in the current directory.\\nIn the 3rd and 4th forms, create links to each TARGET in DIRECTORY.\\nCreate hard links by default, symbolic links with --sym…"
0000000000003754         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003759         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000375b         call       j_dcgettext                                 ; dcgettext
0000000000003760         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003763         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003766         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000376b         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003772         lea        rsi, qword [aNmandatoryArgu]                ; argument "msgid" for method j_dcgettext, "\\nMandatory arguments to long options are mandatory for short options too.\\n"
0000000000003779         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000377e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003780         call       j_dcgettext                                 ; dcgettext
0000000000003785         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003788         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000378b         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003790         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003797         lea        rsi, qword [aBackupcontrolM]                ; argument "msgid" for method j_dcgettext, "      --backup[=CONTROL]      make a backup of each existing destination file\\n  -b                          like --backup but does not accept an argument\\n  -d, -F, --directory         allow the superuser to attempt to hard link\\n                            …"
000000000000379e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000037a3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000037a5         call       j_dcgettext                                 ; dcgettext
00000000000037aa         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000037ad         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000037b0         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000037b5         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000037bc         lea        rsi, qword [aIInteractivePr]                ; argument "msgid" for method j_dcgettext, "  -i, --interactive           prompt whether to remove destinations\\n  -L, --logical               dereference TARGETs that are symbolic links\\n  -n, --no-dereference        treat LINK_NAME as a normal file if\\n                                it is a symbolic…"
00000000000037c3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000037c8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000037ca         call       j_dcgettext                                 ; dcgettext
00000000000037cf         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000037d2         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000037d5         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000037da         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000037e1         lea        rsi, qword [aSSuffixsuffixO]                ; argument "msgid" for method j_dcgettext, "  -S, --suffix=SUFFIX         override the usual backup suffix\\n  -t, --target-directory=DIRECTORY  specify the DIRECTORY in which to create\\n                                the links\\n  -T, --no-target-directory   treat LINK_NAME as a normal file always\\n  -v…"
00000000000037e8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000037ed         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000037ef         call       j_dcgettext                                 ; dcgettext
00000000000037f4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000037f7         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000037fa         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000037ff         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003806         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
000000000000380d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003812         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003814         call       j_dcgettext                                 ; dcgettext
0000000000003819         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000381c         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000381f         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003824         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000382b         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
0000000000003832         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003837         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003839         call       j_dcgettext                                 ; dcgettext
000000000000383e         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003841         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003844         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003849         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003850         lea        rsi, qword [aNtheBackupSuff]                ; argument "msgid" for method j_dcgettext, "\\nThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\\nThe version control method may be selected via the --backup option or through\\nthe VERSION_CONTROL environment variable.  Here are the values:\\n\\n"
0000000000003857         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000385c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000385e         call       j_dcgettext                                 ; dcgettext
0000000000003863         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003866         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003869         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000386e         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003875         lea        rsi, qword [aNoneOffNeverMa]                ; argument "msgid" for method j_dcgettext, "  none, off       never make backups (even if --backup is given)\\n  numbered, t     make numbered backups\\n  existing, nil   numbered if numbered backups exist, simple otherwise\\n  simple, never   always make simple backups\\n"
000000000000387c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003881         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003883         call       j_dcgettext                                 ; dcgettext
0000000000003888         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000388b         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000388e         lea        rbx, qword [aCannotUnbackup+20]             ; 0xb03b
0000000000003895         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000389a         lea        rsi, qword [aNusingSIgnores]                ; argument "msgid" for method j_dcgettext, "\\nUsing -s ignores -L and -P.  Otherwise, the last option specified controls\\nbehavior when a TARGET is a symbolic link, defaulting to %s.\\n"
00000000000038a1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000038a6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000038a8         call       j_dcgettext                                 ; dcgettext
00000000000038ad         lea        rdx, qword [aCannotUnbackup+23]             ; 0xb03e
00000000000038b4         mov        rsi, rax
00000000000038b7         mov        edi, 0x1
00000000000038bc         xor        eax, eax
00000000000038be         call       j___printf_chk                              ; __printf_chk
00000000000038c3         lea        rax, qword [aCannotUnbackup+26]             ; 0xb041
00000000000038ca         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
00000000000038d1         mov        qword [rsp+0xa8+var_48], 0x0
00000000000038da         mov        qword [rsp+0xa8+var_40], 0x0
00000000000038e3         mov        rdx, rsp
00000000000038e6         mov        qword [rsp+0xa8+var_A8], rax
00000000000038ea         lea        rax, qword [aTestInvocation]                ; "test invocation"
00000000000038f1         mov        qword [rsp+0xa8+var_78], rcx
00000000000038f6         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
00000000000038fd         mov        qword [rsp+0xa8+var_A0], rax
0000000000003902         lea        rax, qword [aCoreutils]                     ; "coreutils"
0000000000003909         mov        qword [rsp+0xa8+var_68], rcx
000000000000390e         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
0000000000003915         mov        qword [rsp+0xa8+var_98], rax
000000000000391a         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
0000000000003921         mov        qword [rsp+0xa8+var_58], rcx
0000000000003926         mov        qword [rsp+0xa8+var_90], rax
000000000000392b         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000003932         mov        qword [rsp+0xa8+var_88], rax
0000000000003937         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
000000000000393e         mov        qword [rsp+0xa8+var_80], rax
0000000000003943         mov        qword [rsp+0xa8+var_70], rax
0000000000003948         mov        qword [rsp+0xa8+var_60], rax
000000000000394d         mov        qword [rsp+0xa8+var_50], rax
0000000000003952         nop        word [rax+rax]

                     loc_3958:
0000000000003958         add        rdx, 0x10                                   ; CODE XREF=usage+693
000000000000395c         mov        rdi, qword [rdx]
000000000000395f         test       rdi, rdi
0000000000003962         je         loc_3977

0000000000003964         mov        ecx, 0x3
0000000000003969         mov        rsi, rbx
000000000000396c         rep  cmpsb byte [rsi], byte [rdi]
000000000000396e         seta       al
0000000000003971         sbb        al, 0x0
0000000000003973         test       al, al
0000000000003975         jne        loc_3958

                     loc_3977:
0000000000003977         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+674
000000000000397b         xor        edi, edi
000000000000397d         mov        edx, 0x5
0000000000003982         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000003989         test       r12, r12
000000000000398c         je         loc_3a53

0000000000003992         call       j_dcgettext                                 ; dcgettext
0000000000003997         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000399e         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0xb0b7
00000000000039a5         mov        rsi, rax
00000000000039a8         mov        edi, 0x1
00000000000039ad         xor        eax, eax
00000000000039af         call       j___printf_chk                              ; __printf_chk
00000000000039b4         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000039b6         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
00000000000039bb         call       j_setlocale                                 ; setlocale
00000000000039c0         test       rax, rax
00000000000039c3         je         loc_39e1

00000000000039c5         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0xb0c5
00000000000039cc         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
00000000000039d1         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
00000000000039d4         call       j_strncmp                                   ; strncmp
00000000000039d9         test       eax, eax
00000000000039db         jne        loc_3ae8

                     loc_39e1:
00000000000039e1         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+771, usage+1101
00000000000039e8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000039ea         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000039ef         call       j_dcgettext                                 ; dcgettext
00000000000039f4         lea        rcx, qword [aCannotUnbackup+20]             ; 0xb03b
00000000000039fb         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000003a02         mov        rsi, rax
0000000000003a05         mov        edi, 0x1
0000000000003a0a         xor        eax, eax
0000000000003a0c         call       j___printf_chk                              ; __printf_chk
0000000000003a11         cmp        r12, rbx
0000000000003a14         lea        rcx, qword [aMulticallInvoc+10]             ; 0xb05d
0000000000003a1b         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0xc718
0000000000003a22         cmove      rbx, rcx

                     loc_3a26:
0000000000003a26         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+1052
0000000000003a2d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003a2f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003a34         call       j_dcgettext                                 ; dcgettext
0000000000003a39         mov        rcx, rbx
0000000000003a3c         mov        rsi, rax
0000000000003a3f         mov        rdx, r12
0000000000003a42         mov        edi, 0x1
0000000000003a47         xor        eax, eax
0000000000003a49         call       j___printf_chk                              ; __printf_chk
0000000000003a4e         jmp        loc_3716

                     loc_3a53:
0000000000003a53         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+716
0000000000003a58         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000003a5f         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0xb0b7
0000000000003a66         mov        rsi, rax
0000000000003a69         mov        edi, 0x1
0000000000003a6e         xor        eax, eax
0000000000003a70         call       j___printf_chk                              ; __printf_chk
0000000000003a75         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000003a77         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000003a7c         call       j_setlocale                                 ; setlocale
0000000000003a81         test       rax, rax
0000000000003a84         je         loc_3a9e

0000000000003a86         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0xb0c5
0000000000003a8d         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000003a92         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000003a95         call       j_strncmp                                   ; strncmp
0000000000003a9a         test       eax, eax
0000000000003a9c         jne        loc_3ae1

                     loc_3a9e:
0000000000003a9e         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+964
0000000000003aa5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003aaa         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003aac         lea        r12, qword [aCannotUnbackup+20]             ; 0xb03b
0000000000003ab3         lea        rbx, qword [aMulticallInvoc+10]             ; 0xb05d
0000000000003aba         call       j_dcgettext                                 ; dcgettext
0000000000003abf         lea        rcx, qword [aCannotUnbackup+20]             ; 0xb03b
0000000000003ac6         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000003acd         mov        rsi, rax
0000000000003ad0         mov        edi, 0x1
0000000000003ad5         xor        eax, eax
0000000000003ad7         call       j___printf_chk                              ; __printf_chk
0000000000003adc         jmp        loc_3a26

                     loc_3ae1:
0000000000003ae1         lea        r12, qword [aCannotUnbackup+20]             ; 0xb03b, CODE XREF=usage+988

                     loc_3ae8:
0000000000003ae8         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+795
0000000000003aef         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
0000000000003af6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003af8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003afd         call       j_dcgettext                                 ; dcgettext
0000000000003b02         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003b05         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003b08         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003b0d         jmp        loc_39e1
0000000000003b12         align      32                                          ; End of unwind block (FDE at 0xd144)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     try_link:
0000000000003b20         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0xd1cc), DATA XREF=force_linkat+113
0000000000003b23         mov        rcx, rdi                                    ; argument "__to" for method j_linkat
0000000000003b26         mov        edx, dword [rsi+0x10]                       ; argument "__tofd" for method j_linkat
0000000000003b29         mov        r8d, dword [rax+0x14]                       ; argument "__flags" for method j_linkat
0000000000003b2d         mov        rsi, qword [rsi+8]                          ; argument "__from" for method j_linkat
0000000000003b31         mov        edi, dword [rax]                            ; argument "__fromfd" for method j_linkat
0000000000003b33         jmp        j_linkat                                    ; linkat
                        ; endp
0000000000003b38         align      64                                          ; End of unwind block (FDE at 0xd1cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     samedir_template:
0000000000003b40         push       r12                                         ; Begin of unwind block (FDE at 0xd1e0), CODE XREF=force_linkat+91, force_symlinkat+73
0000000000003b42         push       rbp
0000000000003b43         mov        rbp, rdi
0000000000003b46         push       rbx
0000000000003b47         mov        r12, rsi
0000000000003b4a         call       last_component                              ; last_component
0000000000003b4f         sub        rax, rbp
0000000000003b52         lea        rdi, qword [rax+9]
0000000000003b56         mov        rbx, rax
0000000000003b59         cmp        rdi, 0x100
0000000000003b60         jbe        loc_3b71

0000000000003b62         call       j_malloc                                    ; malloc
0000000000003b67         mov        r12, rax
0000000000003b6a         xor        eax, eax
0000000000003b6c         test       r12, r12
0000000000003b6f         je         loc_3b93

                     loc_3b71:
0000000000003b71         mov        rdx, rbx                                    ; argument "__n" for method j_mempcpy, CODE XREF=samedir_template+32
0000000000003b74         mov        rsi, rbp                                    ; argument "__src" for method j_mempcpy
0000000000003b77         mov        rdi, r12                                    ; argument "__dest" for method j_mempcpy
0000000000003b7a         call       j_mempcpy                                   ; mempcpy
0000000000003b7f         movabs     rcx, 0x5858585858587543
0000000000003b89         mov        byte [rax+8], 0x0
0000000000003b8d         mov        qword [rax], rcx
0000000000003b90         mov        rax, r12

                     loc_3b93:
0000000000003b93         pop        rbx                                         ; CODE XREF=samedir_template+47
0000000000003b94         pop        rbp
0000000000003b95         pop        r12
0000000000003b97         ret
                        ; endp
0000000000003b98         align      32                                          ; End of unwind block (FDE at 0xd1e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     try_symlink:
0000000000003ba0         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0xd20c), DATA XREF=force_symlinkat+95
0000000000003ba3         mov        rdx, rdi                                    ; argument "__to" for method j_symlinkat
0000000000003ba6         mov        esi, dword [rsi+8]                          ; argument "__tofd" for method j_symlinkat
0000000000003ba9         mov        rdi, qword [rax]                            ; argument "__from" for method j_symlinkat
0000000000003bac         jmp        j_symlinkat                                 ; symlinkat
                        ; endp
0000000000003bb1         align      64                                          ; End of unwind block (FDE at 0xd20c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_148: int8_t, -328
        ;    var_154: int32_t, -340
        ;    var_158: int32_t, -344
        ;    var_160: int64_t, -352
        ;    var_168: int32_t, -360
        ;    var_16C: int32_t, -364
        ;    var_178: int64_t, -376


                     force_linkat:
0000000000003bc0         push       r15                                         ; Begin of unwind block (FDE at 0xd220), CODE XREF=do_link+569
0000000000003bc2         push       r14
0000000000003bc4         mov        r14d, edi
0000000000003bc7         push       r13
0000000000003bc9         push       r12
0000000000003bcb         mov        r13, rsi
0000000000003bce         push       rbp
0000000000003bcf         push       rbx
0000000000003bd0         mov        rbx, rcx
0000000000003bd3         mov        ebp, edx
0000000000003bd5         mov        r12d, r8d
0000000000003bd8         sub        rsp, 0x148
0000000000003bdf         mov        ecx, dword [rsp+0x178+arg_0]
0000000000003be6         mov        rax, qword [fs:0x28]
0000000000003bef         mov        qword [rsp+0x178+var_40], rax
0000000000003bf7         xor        eax, eax
0000000000003bf9         test       ecx, ecx
0000000000003bfb         js         loc_3cb0

                     loc_3c01:
0000000000003c01         cmp        r9b, 0x1                                    ; CODE XREF=force_linkat+269
0000000000003c05         jne        loc_3c80

0000000000003c07         cmp        ecx, 0x11
0000000000003c0a         jne        loc_3c80

0000000000003c0c         lea        rax, qword [rsp+0x178+var_148]
0000000000003c11         mov        rdi, rbx
0000000000003c14         mov        rsi, rax
0000000000003c17         mov        qword [rsp+0x178+var_178], rax
0000000000003c1b         call       samedir_template                            ; samedir_template
0000000000003c20         test       rax, rax
0000000000003c23         mov        r15, rax
0000000000003c26         je         loc_3d10

0000000000003c2c         lea        rdx, qword [rsp+0x178+var_168]
0000000000003c31         lea        rcx, qword [try_link]                       ; try_link
0000000000003c38         xor        esi, esi
0000000000003c3a         mov        r8d, 0x6
0000000000003c40         mov        rdi, rax
0000000000003c43         mov        dword [rsp+0x178+var_168], r14d
0000000000003c48         mov        qword [rsp+0x178+var_160], r13
0000000000003c4d         mov        dword [rsp+0x178+var_158], ebp
0000000000003c51         mov        dword [rsp+0x178+var_154], r12d
0000000000003c56         call       try_tempname_len                            ; try_tempname_len
0000000000003c5b         test       eax, eax
0000000000003c5d         je         loc_3cd8

0000000000003c5f         call       j___errno_location                          ; __errno_location
0000000000003c64         mov        ecx, dword [rax]

                     loc_3c66:
0000000000003c66         cmp        r15, qword [rsp+0x178+var_178]              ; CODE XREF=force_linkat+331
0000000000003c6a         je         loc_3c80

0000000000003c6c         mov        rdi, r15                                    ; argument "__ptr" for method j_free
0000000000003c6f         mov        dword [rsp+0x178+var_178], ecx
0000000000003c72         call       j_free                                      ; free
0000000000003c77         mov        ecx, dword [rsp+0x178+var_178]
0000000000003c7a         nop        word [rax+rax]

                     loc_3c80:
0000000000003c80         mov        rbx, qword [rsp+0x178+var_40]               ; CODE XREF=force_linkat+69, force_linkat+74, force_linkat+170, force_linkat+256, force_linkat+343
0000000000003c88         xor        rbx, qword [fs:0x28]
0000000000003c91         mov        eax, ecx
0000000000003c93         jne        loc_3d1c

0000000000003c99         add        rsp, 0x148
0000000000003ca0         pop        rbx
0000000000003ca1         pop        rbp
0000000000003ca2         pop        r12
0000000000003ca4         pop        r13
0000000000003ca6         pop        r14
0000000000003ca8         pop        r15
0000000000003caa         ret
                        ; endp
0000000000003cab         align      16

                     loc_3cb0:
0000000000003cb0         mov        rcx, rbx                                    ; argument "__to" for method j_linkat, CODE XREF=force_linkat+59
0000000000003cb3         mov        dword [rsp+0x178+var_178], r9d
0000000000003cb7         call       j_linkat                                    ; linkat
0000000000003cbc         test       eax, eax
0000000000003cbe         mov        ecx, eax
0000000000003cc0         je         loc_3c80

0000000000003cc2         call       j___errno_location                          ; __errno_location
0000000000003cc7         mov        r9d, dword [rsp+0x178+var_178]
0000000000003ccb         mov        ecx, dword [rax]
0000000000003ccd         jmp        loc_3c01
0000000000003cd2         align      8

                     loc_3cd8:
0000000000003cd8         mov        rcx, rbx                                    ; argument "__new" for method j_renameat, CODE XREF=force_linkat+157
0000000000003cdb         mov        edx, ebp                                    ; argument "__newfd" for method j_renameat
0000000000003cdd         mov        rsi, r15                                    ; argument "__old" for method j_renameat
0000000000003ce0         mov        edi, ebp                                    ; argument "__oldfd" for method j_renameat
0000000000003ce2         call       j_renameat                                  ; renameat
0000000000003ce7         test       eax, eax
0000000000003ce9         mov        ecx, 0xffffffff
0000000000003cee         je         loc_3cf7

0000000000003cf0         call       j___errno_location                          ; __errno_location
0000000000003cf5         mov        ecx, dword [rax]

                     loc_3cf7:
0000000000003cf7         xor        edx, edx                                    ; argument "__flag" for method j_unlinkat, CODE XREF=force_linkat+302
0000000000003cf9         mov        rsi, r15                                    ; argument "__name" for method j_unlinkat
0000000000003cfc         mov        edi, ebp                                    ; argument "__fd" for method j_unlinkat
0000000000003cfe         mov        dword [rsp+0x178+var_16C], ecx
0000000000003d02         call       j_unlinkat                                  ; unlinkat
0000000000003d07         mov        ecx, dword [rsp+0x178+var_16C]
0000000000003d0b         jmp        loc_3c66

                     loc_3d10:
0000000000003d10         call       j___errno_location                          ; __errno_location, CODE XREF=force_linkat+102
0000000000003d15         mov        ecx, dword [rax]
0000000000003d17         jmp        loc_3c80

                     loc_3d1c:
0000000000003d1c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=force_linkat+211
                        ; endp
0000000000003d21         align      16                                          ; End of unwind block (FDE at 0xd220)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_138: int8_t, -312
        ;    var_140: int32_t, -320
        ;    var_148: int64_t, -328
        ;    var_14C: int32_t, -332


                     force_symlinkat:
0000000000003d30         push       r14                                         ; Begin of unwind block (FDE at 0xd26c), CODE XREF=do_link+1471
0000000000003d32         push       r13
0000000000003d34         push       r12
0000000000003d36         push       rbp
0000000000003d37         mov        r12, rdi
0000000000003d3a         push       rbx
0000000000003d3b         mov        ebp, esi
0000000000003d3d         mov        rbx, rdx
0000000000003d40         sub        rsp, 0x130
0000000000003d47         mov        rax, qword [fs:0x28]
0000000000003d50         mov        qword [rsp+0x158+var_30], rax
0000000000003d58         xor        eax, eax
0000000000003d5a         test       r8d, r8d
0000000000003d5d         js         loc_3e08

                     loc_3d63:
0000000000003d63         cmp        cl, 0x1                                     ; CODE XREF=force_symlinkat+244
0000000000003d66         jne        loc_3dd8

0000000000003d68         cmp        r8d, 0x11
0000000000003d6c         jne        loc_3dd8

0000000000003d6e         lea        r14, qword [rsp+0x158+var_138]
0000000000003d73         mov        rdi, rbx
0000000000003d76         mov        rsi, r14
0000000000003d79         call       samedir_template                            ; samedir_template
0000000000003d7e         test       rax, rax
0000000000003d81         mov        r13, rax
0000000000003d84         je         loc_3e70

0000000000003d8a         lea        rdx, qword [rsp+0x158+var_148]
0000000000003d8f         lea        rcx, qword [try_symlink]                    ; try_symlink
0000000000003d96         xor        esi, esi
0000000000003d98         mov        r8d, 0x6
0000000000003d9e         mov        rdi, rax
0000000000003da1         mov        qword [rsp+0x158+var_148], r12
0000000000003da6         mov        dword [rsp+0x158+var_140], ebp
0000000000003daa         call       try_tempname_len                            ; try_tempname_len
0000000000003daf         test       eax, eax
0000000000003db1         je         loc_3e30

0000000000003db3         call       j___errno_location                          ; __errno_location
0000000000003db8         mov        r8d, dword [rax]

                     loc_3dbb:
0000000000003dbb         cmp        r13, r14                                    ; CODE XREF=force_symlinkat+279, force_symlinkat+315
0000000000003dbe         je         loc_3dd8

0000000000003dc0         mov        rdi, r13                                    ; argument "__ptr" for method j_free
0000000000003dc3         mov        dword [rsp+0x158+var_14C], r8d
0000000000003dc8         call       j_free                                      ; free
0000000000003dcd         mov        r8d, dword [rsp+0x158+var_14C]
0000000000003dd2         nop        word [rax+rax]

                     loc_3dd8:
0000000000003dd8         mov        rbx, qword [rsp+0x158+var_30]               ; CODE XREF=force_symlinkat+54, force_symlinkat+60, force_symlinkat+142, force_symlinkat+230, force_symlinkat+328
0000000000003de0         xor        rbx, qword [fs:0x28]
0000000000003de9         mov        eax, r8d
0000000000003dec         jne        loc_3e7d

0000000000003df2         add        rsp, 0x130
0000000000003df9         pop        rbx
0000000000003dfa         pop        rbp
0000000000003dfb         pop        r12
0000000000003dfd         pop        r13
0000000000003dff         pop        r14
0000000000003e01         ret
                        ; endp
0000000000003e02         align      8

                     loc_3e08:
0000000000003e08         mov        dword [rsp+0x158+var_14C], ecx              ; CODE XREF=force_symlinkat+45
0000000000003e0c         call       j_symlinkat                                 ; symlinkat
0000000000003e11         test       eax, eax
0000000000003e13         mov        r8d, eax
0000000000003e16         je         loc_3dd8

0000000000003e18         call       j___errno_location                          ; __errno_location
0000000000003e1d         mov        ecx, dword [rsp+0x158+var_14C]
0000000000003e21         mov        r8d, dword [rax]
0000000000003e24         jmp        loc_3d63
0000000000003e29         align      16

                     loc_3e30:
0000000000003e30         mov        rcx, rbx                                    ; argument "__new" for method j_renameat, CODE XREF=force_symlinkat+129
0000000000003e33         mov        edx, ebp                                    ; argument "__newfd" for method j_renameat
0000000000003e35         mov        rsi, r13                                    ; argument "__old" for method j_renameat
0000000000003e38         mov        edi, ebp                                    ; argument "__oldfd" for method j_renameat
0000000000003e3a         call       j_renameat                                  ; renameat
0000000000003e3f         test       eax, eax
0000000000003e41         mov        r8d, 0xffffffff
0000000000003e47         je         loc_3dbb

0000000000003e4d         call       j___errno_location                          ; __errno_location
0000000000003e52         mov        r8d, dword [rax]
0000000000003e55         xor        edx, edx                                    ; argument "__flag" for method j_unlinkat
0000000000003e57         mov        rsi, r13                                    ; argument "__name" for method j_unlinkat
0000000000003e5a         mov        edi, ebp                                    ; argument "__fd" for method j_unlinkat
0000000000003e5c         mov        dword [rsp+0x158+var_14C], r8d
0000000000003e61         call       j_unlinkat                                  ; unlinkat
0000000000003e66         mov        r8d, dword [rsp+0x158+var_14C]
0000000000003e6b         jmp        loc_3dbb

                     loc_3e70:
0000000000003e70         call       j___errno_location                          ; __errno_location, CODE XREF=force_symlinkat+84
0000000000003e75         mov        r8d, dword [rax]
0000000000003e78         jmp        loc_3dd8

                     loc_3e7d:
0000000000003e7d         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=force_symlinkat+188
                        ; endp
0000000000003e82         align      16                                          ; End of unwind block (FDE at 0xd26c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     buffer_or_output:
0000000000003e90         push       r14                                         ; Begin of unwind block (FDE at 0xd2b4), CODE XREF=relpath+269, relpath+333, relpath+398, relpath+438, relpath+455
0000000000003e92         push       r13
0000000000003e94         mov        r14, rdi
0000000000003e97         push       r12
0000000000003e99         push       rbp
0000000000003e9a         push       rbx
0000000000003e9b         mov        r13, qword [rsi]
0000000000003e9e         test       r13, r13
0000000000003ea1         je         loc_3ef0

0000000000003ea3         mov        r12, rdx
0000000000003ea6         mov        rbx, rsi
0000000000003ea9         call       j_strlen                                    ; strlen
0000000000003eae         mov        rbp, rax
0000000000003eb1         cmp        qword [r12], rbp
0000000000003eb5         mov        eax, 0x1
0000000000003eba         ja         loc_3ec8

0000000000003ebc         pop        rbx
0000000000003ebd         pop        rbp
0000000000003ebe         pop        r12
0000000000003ec0         pop        r13
0000000000003ec2         pop        r14
0000000000003ec4         ret
                        ; endp
0000000000003ec5         align      8

                     loc_3ec8:
0000000000003ec8         lea        rdx, qword [rbp+1]                          ; argument "__n" for method j_memcpy, CODE XREF=buffer_or_output+42
0000000000003ecc         mov        rsi, r14                                    ; argument "__src" for method j_memcpy
0000000000003ecf         mov        rdi, r13                                    ; argument "__dest" for method j_memcpy
0000000000003ed2         call       j_memcpy                                    ; memcpy
0000000000003ed7         add        qword [rbx], rbp
0000000000003eda         sub        qword [r12], rbp
0000000000003ede         xor        eax, eax
0000000000003ee0         pop        rbx
0000000000003ee1         pop        rbp
0000000000003ee2         pop        r12
0000000000003ee4         pop        r13
0000000000003ee6         pop        r14
0000000000003ee8         ret
                        ; endp
0000000000003ee9         align      16

                     loc_3ef0:
0000000000003ef0         mov        rsi, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fputs_unlocked, stdout@@GLIBC_2.2.5, CODE XREF=buffer_or_output+17
0000000000003ef7         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003efc         pop        rbx
0000000000003efd         xor        eax, eax
0000000000003eff         pop        rbp
0000000000003f00         pop        r12
0000000000003f02         pop        r13
0000000000003f04         pop        r14
0000000000003f06         ret
                        ; endp
0000000000003f07         align      16                                          ; End of unwind block (FDE at 0xd2b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72


                     relpath:
0000000000003f10         push       r15                                         ; Begin of unwind block (FDE at 0xd314), CODE XREF=do_link+1689
0000000000003f12         push       r14
0000000000003f14         push       r13
0000000000003f16         push       r12
0000000000003f18         push       rbp
0000000000003f19         push       rbx
0000000000003f1a         sub        rsp, 0x18
0000000000003f1e         movzx      r8d, byte [rdi+1]
0000000000003f23         mov        qword [rsp+0x48+var_48], rcx
0000000000003f27         movzx      ecx, byte [rsi+1]
0000000000003f2b         mov        qword [rsp+0x48+var_40], rdx
0000000000003f30         cmp        cl, 0x2f
0000000000003f33         sete       r9b
0000000000003f37         cmp        r8b, 0x2f
0000000000003f3b         sete       dl
0000000000003f3e         xor        eax, eax
0000000000003f40         cmp        r9b, dl
0000000000003f43         je         loc_3f58

                     loc_3f45:
0000000000003f45         add        rsp, 0x18                                   ; CODE XREF=relpath+88, relpath+193, relpath+562
0000000000003f49         pop        rbx
0000000000003f4a         pop        rbp
0000000000003f4b         pop        r12
0000000000003f4d         pop        r13
0000000000003f4f         pop        r14
0000000000003f51         pop        r15
0000000000003f53         ret
                        ; endp
0000000000003f54         align      8

                     loc_3f58:
0000000000003f58         movzx      edx, byte [rdi]                             ; CODE XREF=relpath+51
0000000000003f5b         movzx      r10d, byte [rsi]
0000000000003f5f         test       dl, dl
0000000000003f61         sete       r9b
0000000000003f65         test       r10b, r10b
0000000000003f68         je         loc_3f45

0000000000003f6a         cmp        r10b, dl
0000000000003f6d         setne      al
0000000000003f70         or         al, r9b
0000000000003f73         jne        loc_4140

0000000000003f79         xor        edx, edx
0000000000003f7b         xor        r9d, r9d
0000000000003f7e         jmp        loc_3fa4

                     loc_3f80:
0000000000003f80         add        rdx, 0x1                                    ; CODE XREF=relpath+169
0000000000003f84         cmp        r8b, cl
0000000000003f87         jne        loc_4120

0000000000003f8d         test       r10b, r10b
0000000000003f90         jne        loc_4120

0000000000003f96         mov        r10d, ecx
0000000000003f99         movzx      r8d, byte [rdi+rdx+1]
0000000000003f9f         movzx      ecx, byte [rsi+rdx+1]

                     loc_3fa4:
0000000000003fa4         lea        r11d, dword [rdx+1]                         ; CODE XREF=relpath+110
0000000000003fa8         cmp        r10b, 0x2f
0000000000003fac         cmove      r9d, r11d
0000000000003fb0         test       r8b, r8b
0000000000003fb3         sete       r10b
0000000000003fb7         test       cl, cl
0000000000003fb9         jne        loc_3f80

0000000000003fbb         cmp        r8b, 0x2f
0000000000003fbf         je         loc_4130

                     loc_3fc5:
0000000000003fc5         test       r10b, r10b                                  ; CODE XREF=relpath+531
0000000000003fc8         jne        loc_4130

                     loc_3fce:
0000000000003fce         test       r9d, r9d                                    ; CODE XREF=relpath+537
0000000000003fd1         je         loc_3f45

                     loc_3fd7:
0000000000003fd7         movsxd     r9, r9d                                     ; CODE XREF=relpath+547
0000000000003fda         lea        r12, qword [rsi+r9]
0000000000003fde         lea        rbx, qword [rdi+r9]
0000000000003fe2         movzx      eax, byte [r12]
0000000000003fe7         cmp        al, 0x2f
0000000000003fe9         jne        loc_3ff5

0000000000003feb         movzx      eax, byte [r12+1]
0000000000003ff1         add        r12, 0x1

                     loc_3ff5:
0000000000003ff5         xor        edx, edx                                    ; CODE XREF=relpath+217
0000000000003ff7         cmp        byte [rbx], 0x2f
0000000000003ffa         sete       dl
0000000000003ffd         add        rbx, rdx
0000000000004000         test       al, al                                      ; DATA XREF=main+631, do_link+988, do_link+1843, canonicalize_filename_mode+784, sub_6fb0+88, renameatu+343, renameatu+517, renameatu+558, renameatu+586
0000000000004002         jne        loc_4048

0000000000004004         cmp        byte [rbx], 0x0
0000000000004007         lea        rax, qword [aMissingDestina+44]             ; 0xbf54
000000000000400e         lea        rsi, qword [rsp+0x48+var_40]
0000000000004013         mov        rdx, rsp
0000000000004016         cmove      rbx, rax
000000000000401a         mov        rdi, rbx
000000000000401d         call       buffer_or_output                            ; buffer_or_output
0000000000004022         mov        ebp, eax

                     loc_4024:
0000000000004024         test       bpl, bpl                                    ; CODE XREF=relpath+419, relpath+466
0000000000004027         jne        loc_40f0

                     loc_402d:
000000000000402d         add        rsp, 0x18                                   ; CODE XREF=relpath+523
0000000000004031         mov        eax, ebp
0000000000004033         pop        rbx
0000000000004034         xor        eax, 0x1
0000000000004037         pop        rbp
0000000000004038         pop        r12
000000000000403a         pop        r13
000000000000403c         pop        r14
000000000000403e         pop        r15
0000000000004040         ret
                        ; endp
0000000000004041         align      8

                     loc_4048:
0000000000004048         lea        r13, qword [rsp+0x48+var_40]                ; CODE XREF=relpath+242
000000000000404d         mov        r14, rsp
0000000000004050         lea        rdi, qword [aMissingDestina+43]             ; 0xbf53
0000000000004057         mov        rdx, r14
000000000000405a         mov        rsi, r13
000000000000405d         call       buffer_or_output                            ; buffer_or_output
0000000000004062         mov        ebp, eax
0000000000004064         movzx      eax, byte [r12]
0000000000004069         test       al, al
000000000000406b         je         loc_40b0

000000000000406d         lea        r15, qword [aMissingDestina+42]             ; 0xbf52
0000000000004074         jmp        loc_408d
0000000000004076         align      128

                     loc_4080:
0000000000004080         add        r12, 0x1                                    ; CODE XREF=relpath+383
0000000000004084         movzx      eax, byte [r12]
0000000000004089         test       al, al
000000000000408b         je         loc_40b0

                     loc_408d:
000000000000408d         cmp        al, 0x2f                                    ; CODE XREF=relpath+356, relpath+412
000000000000408f         jne        loc_4080

0000000000004091         add        r12, 0x1
0000000000004095         mov        rdx, r14
0000000000004098         mov        rsi, r13
000000000000409b         mov        rdi, r15
000000000000409e         call       buffer_or_output                            ; buffer_or_output
00000000000040a3         or         ebp, eax
00000000000040a5         movzx      eax, byte [r12]
00000000000040aa         test       al, al
00000000000040ac         jne        loc_408d

00000000000040ae         nop

                     loc_40b0:
00000000000040b0         cmp        byte [rbx], 0x0                             ; CODE XREF=relpath+347, relpath+379
00000000000040b3         je         loc_4024

00000000000040b9         lea        rdi, qword [aLibs+6]                        ; 0xc11e
00000000000040c0         mov        rdx, r14
00000000000040c3         mov        rsi, r13
00000000000040c6         call       buffer_or_output                            ; buffer_or_output
00000000000040cb         mov        rdx, r14
00000000000040ce         mov        r12d, eax
00000000000040d1         mov        rsi, r13
00000000000040d4         mov        rdi, rbx
00000000000040d7         call       buffer_or_output                            ; buffer_or_output
00000000000040dc         or         r12d, eax
00000000000040df         or         ebp, r12d
00000000000040e2         jmp        loc_4024
00000000000040e7         align      16

                     loc_40f0:
00000000000040f0         lea        rsi, qword [aGeneratingRela]                ; argument "msgid" for method j_dcgettext, "generating relative path", CODE XREF=relpath+279
00000000000040f7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000040f9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000040fe         call       j_dcgettext                                 ; dcgettext
0000000000004103         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0xca77
000000000000410a         mov        rcx, rax
000000000000410d         mov        esi, 0x24                                   ; argument "__errnum" for method j_error
0000000000004112         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000004114         xor        eax, eax
0000000000004116         call       j_error                                     ; error
000000000000411b         jmp        loc_402d

                     loc_4120:
0000000000004120         cmp        cl, 0x2f                                    ; CODE XREF=relpath+119, relpath+128
0000000000004123         je         loc_3fc5

0000000000004129         jmp        loc_3fce
000000000000412e         align      16

                     loc_4130:
0000000000004130         mov        r9d, r11d                                   ; CODE XREF=relpath+175, relpath+184
0000000000004133         jmp        loc_3fd7
0000000000004138         align      64

                     loc_4140:
0000000000004140         xor        eax, eax                                    ; CODE XREF=relpath+99
0000000000004142         jmp        loc_3f45
0000000000004147         align      16                                          ; End of unwind block (FDE at 0xd314)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_simple_backup_suffix:
0000000000004150         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xd37c), CODE XREF=main+990, main+1166, main+1531, backupfile_internal+1508
0000000000004153         push       rbx
0000000000004154         mov        rbx, rdi
0000000000004157         je         loc_4180

                     loc_4159:
0000000000004159         cmp        byte [rbx], 0x0                             ; CODE XREF=set_simple_backup_suffix+68
000000000000415c         jne        loc_4170

                     loc_415e:
000000000000415e         lea        rbx, qword [a831+5]                         ; 0xbf74, CODE XREF=set_simple_backup_suffix+43, set_simple_backup_suffix+66

                     loc_4165:
0000000000004165         mov        qword [simple_backup_suffix], rbx           ; simple_backup_suffix, CODE XREF=set_simple_backup_suffix+45
000000000000416c         pop        rbx
000000000000416d         ret
                        ; endp
000000000000416e         align      16

                     loc_4170:
0000000000004170         mov        rdi, rbx                                    ; CODE XREF=set_simple_backup_suffix+12
0000000000004173         call       last_component                              ; last_component
0000000000004178         cmp        rax, rbx
000000000000417b         jne        loc_415e

000000000000417d         jmp        loc_4165
000000000000417f         align      128

                     loc_4180:
0000000000004180         lea        rdi, qword [aSimplebackupsu]                ; argument "__name" for method j_getenv, "SIMPLE_BACKUP_SUFFIX", CODE XREF=set_simple_backup_suffix+7
0000000000004187         call       j_getenv                                    ; getenv
000000000000418c         test       rax, rax
000000000000418f         mov        rbx, rax
0000000000004192         je         loc_415e

0000000000004194         jmp        loc_4159
0000000000004196         align      32                                          ; End of unwind block (FDE at 0xd37c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_44: int32_t, -68
        ;    var_50: int64_t, -80
        ;    var_54: int32_t, -84
        ;    var_55: int8_t, -85
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_94: int32_t, -148
        ;    var_98: int32_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176


                     backupfile_internal:
00000000000041a0         push       r15                                         ; Begin of unwind block (FDE at 0xd398), CODE XREF=find_backup_file_name+6
00000000000041a2         push       r14
00000000000041a4         push       r13
00000000000041a6         push       r12
00000000000041a8         push       rbp
00000000000041a9         push       rbx
00000000000041aa         mov        rbx, rsi
00000000000041ad         sub        rsp, 0x88
00000000000041b4         mov        dword [rsp+0xb8+var_54], edi
00000000000041b8         mov        rdi, rsi
00000000000041bb         mov        qword [rsp+0xb8+var_A8], rsi
00000000000041c0         mov        dword [rsp+0xb8+var_98], edx
00000000000041c4         mov        byte [rsp+0xb8+var_55], cl
00000000000041c8         mov        rax, qword [fs:0x28]
00000000000041d1         mov        qword [rsp+0xb8+var_40], rax
00000000000041d6         xor        eax, eax
00000000000041d8         call       last_component                              ; last_component
00000000000041dd         mov        rdi, rax                                    ; argument "__s" for method j_strlen
00000000000041e0         mov        r14, rax
00000000000041e3         call       j_strlen                                    ; strlen
00000000000041e8         mov        rdi, qword [simple_backup_suffix]           ; simple_backup_suffix
00000000000041ef         sub        r14, rbx
00000000000041f2         add        rax, r14
00000000000041f5         mov        qword [rsp+0xb8+var_A0], rax
00000000000041fa         test       rdi, rdi
00000000000041fd         je         loc_4784

                     loc_4203:
0000000000004203         call       j_strlen                                    ; strlen, CODE XREF=backupfile_internal+1520
0000000000004208         mov        rsi, qword [rsp+0xb8+var_A0]
000000000000420d         add        rax, 0x1
0000000000004211         cmp        rax, 0x9
0000000000004215         mov        qword [rsp+0xb8+var_68], rax
000000000000421a         lea        rdx, qword [rsi+1]
000000000000421e         mov        rsi, rax
0000000000004221         mov        eax, 0x9
0000000000004226         cmovae     rax, rsi
000000000000422a         add        rax, rdx
000000000000422d         mov        qword [rsp+0xb8+var_80], rdx
0000000000004232         mov        rdi, rax                                    ; argument "__size" for method j_malloc
0000000000004235         mov        qword [rsp+0xb8+var_78], rax
000000000000423a         call       j_malloc                                    ; malloc
000000000000423f         test       rax, rax
0000000000004242         mov        r15, rax
0000000000004245         je         loc_4530

000000000000424b         lea        rax, qword [rsp+0xb8+var_44]
0000000000004250         mov        dword [rsp+0xb8+var_44], 0xffffffff
0000000000004258         mov        qword [rsp+0xb8+var_70], 0x0
0000000000004261         xor        r13d, r13d
0000000000004264         mov        qword [rsp+0xb8+var_50], rax

                     loc_4269:
0000000000004269         mov        rdx, qword [rsp+0xb8+var_80]                ; argument "__n" for method j_memcpy, CODE XREF=backupfile_internal+870
000000000000426e         mov        rsi, qword [rsp+0xb8+var_A8]                ; argument "__src" for method j_memcpy
0000000000004273         mov        rdi, r15                                    ; argument "__dest" for method j_memcpy
0000000000004276         call       j_memcpy                                    ; memcpy
000000000000427b         cmp        dword [rsp+0xb8+var_98], 0x1
0000000000004280         je         loc_4560

0000000000004286         lea        rbp, qword [r15+r14]
000000000000428a         mov        rdi, rbp
000000000000428d         call       base_len                                    ; base_len
0000000000004292         test       r13, r13
0000000000004295         mov        r12, rax
0000000000004298         je         loc_4640

000000000000429e         mov        rdi, r13                                    ; argument "__dirp" for method j_rewinddir
00000000000042a1         call       j_rewinddir                                 ; rewinddir

                     loc_42a6:
00000000000042a6         mov        rax, qword [rsp+0xb8+var_78]                ; CODE XREF=backupfile_internal+1249
00000000000042ab         mov        qword [rsp+0xb8+var_90], 0x1
00000000000042b4         mov        dword [rsp+0xb8+var_94], 0x2
00000000000042bc         mov        qword [rsp+0xb8+var_88], rax
00000000000042c1         lea        rax, qword [r12+4]
00000000000042c6         mov        qword [rsp+0xb8+var_B0], rax
00000000000042cb         nop        dword [rax+rax]

                     loc_42d0:
00000000000042d0         mov        rdi, r13                                    ; argument "__dirp" for method j_readdir, CODE XREF=backupfile_internal+338, backupfile_internal+362, backupfile_internal+376, backupfile_internal+438, backupfile_internal+449, backupfile_internal+470, backupfile_internal+502
00000000000042d3         call       j_readdir                                   ; readdir
00000000000042d8         test       rax, rax
00000000000042db         je         loc_4490

                     loc_42e1:
00000000000042e1         lea        rbx, qword [rax+0x13]                       ; CODE XREF=backupfile_internal+738
00000000000042e5         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
00000000000042e8         call       j_strlen                                    ; strlen
00000000000042ed         cmp        rax, qword [rsp+0xb8+var_B0]
00000000000042f2         jb         loc_42d0

00000000000042f4         lea        rbp, qword [r12+2]
00000000000042f9         lea        rdi, qword [r15+r14]                        ; argument "__s1" for method j_memcmp
00000000000042fd         mov        rsi, rbx                                    ; argument "__s2" for method j_memcmp
0000000000004300         mov        rdx, rbp                                    ; argument "__n" for method j_memcmp
0000000000004303         call       j_memcmp                                    ; memcmp
0000000000004308         test       eax, eax
000000000000430a         jne        loc_42d0

000000000000430c         add        rbx, rbp
000000000000430f         movzx      eax, byte [rbx]
0000000000004312         lea        edx, dword [rax-0x31]
0000000000004315         cmp        dl, 0x8
0000000000004318         ja         loc_42d0

000000000000431a         cmp        al, 0x39
000000000000431c         movsx      eax, byte [rbx+1]
0000000000004320         mov        ebp, 0x1
0000000000004325         sete       r8b
0000000000004329         mov        ecx, eax
000000000000432b         sub        eax, 0x30
000000000000432e         cmp        eax, 0x9
0000000000004331         ja         loc_4353

0000000000004333         nop        dword [rax+rax]

                     loc_4338:
0000000000004338         cmp        cl, 0x39                                    ; CODE XREF=backupfile_internal+433
000000000000433b         sete       al
000000000000433e         add        rbp, 0x1
0000000000004342         and        r8d, eax
0000000000004345         movsx      eax, byte [rbx+rbp]
0000000000004349         mov        ecx, eax
000000000000434b         sub        eax, 0x30
000000000000434e         cmp        eax, 0x9
0000000000004351         jbe        loc_4338

                     loc_4353:
0000000000004353         cmp        cl, 0x7e                                    ; CODE XREF=backupfile_internal+401
0000000000004356         jne        loc_42d0

000000000000435c         cmp        byte [rbx+rbp+1], 0x0
0000000000004361         jne        loc_42d0

0000000000004367         mov        rdx, qword [rsp+0xb8+var_90]
000000000000436c         cmp        rdx, rbp
000000000000436f         jb         loc_439c

0000000000004371         mov        byte [rsp+0xb8+var_60], r8b
0000000000004376         jne        loc_42d0

000000000000437c         mov        rax, qword [rsp+0xb8+var_A0]
0000000000004381         mov        rsi, rbx                                    ; argument "__s2" for method j_memcmp
0000000000004384         lea        rdi, qword [r15+rax+2]                      ; argument "__s1" for method j_memcmp
0000000000004389         call       j_memcmp                                    ; memcmp
000000000000438e         test       eax, eax
0000000000004390         movzx      r8d, byte [rsp+0xb8+var_60]
0000000000004396         jg         loc_42d0

                     loc_439c:
000000000000439c         movzx      esi, r8b                                    ; CODE XREF=backupfile_internal+463
00000000000043a0         movzx      r9d, r8b
00000000000043a4         mov        dword [rsp+0xb8+var_94], esi
00000000000043a8         mov        rsi, qword [rsp+0xb8+var_A0]
00000000000043ad         lea        rax, qword [r9+rbp]
00000000000043b1         mov        qword [rsp+0xb8+var_90], rax
00000000000043b6         lea        rcx, qword [rsi+rax+4]
00000000000043bb         cmp        rcx, qword [rsp+0xb8+var_88]
00000000000043c0         jbe        loc_46f8

00000000000043c6         mov        edx, 0x2
00000000000043cb         xor        esi, esi
00000000000043cd         mov        rax, rdx
00000000000043d0         mul        rcx
00000000000043d3         jo         loc_47a3

                     loc_43d9:
00000000000043d9         test       rax, rax                                    ; CODE XREF=backupfile_internal+1544
00000000000043dc         js         loc_4690

00000000000043e2         test       rsi, rsi
00000000000043e5         jne        loc_4690

00000000000043eb         lea        rax, qword [rcx+rcx]
00000000000043ef         mov        qword [rsp+0xb8+var_88], rax

                     loc_43f4:
00000000000043f4         mov        rsi, qword [rsp+0xb8+var_88]                ; argument "__size" for method j_realloc, CODE XREF=backupfile_internal+1269
00000000000043f9         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
00000000000043fc         mov        qword [rsp+0xb8+var_60], r9
0000000000004401         call       j_realloc                                   ; realloc
0000000000004406         test       rax, rax
0000000000004409         mov        r8, rax
000000000000440c         mov        r9, qword [rsp+0xb8+var_60]
0000000000004411         je         loc_46a0

                     loc_4417:
0000000000004417         mov        rax, qword [rsp+0xb8+var_A0]                ; CODE XREF=backupfile_internal+1371
000000000000441c         lea        rdx, qword [rbp+2]                          ; argument "__n" for method j_memcpy
0000000000004420         mov        qword [rsp+0xb8+var_60], r8
0000000000004425         mov        rsi, rbx                                    ; argument "__src" for method j_memcpy
0000000000004428         add        rax, r8
000000000000442b         mov        r8d, 0x7e2e
0000000000004431         lea        rcx, qword [rax+r9+2]
0000000000004436         mov        word [rax], r8w
000000000000443a         mov        byte [rax+2], 0x30
000000000000443e         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
0000000000004441         call       j_memcpy                                    ; memcpy
0000000000004446         add        rbp, rax
0000000000004449         mov        r8, qword [rsp+0xb8+var_60]
000000000000444e         movzx      edx, byte [rbp-1]
0000000000004452         lea        rax, qword [rbp-1]
0000000000004456         cmp        dl, 0x39
0000000000004459         jne        loc_446f

000000000000445b         nop        dword [rax+rax]

                     loc_4460:
0000000000004460         mov        byte [rax], 0x30                            ; CODE XREF=backupfile_internal+717
0000000000004463         sub        rax, 0x1
0000000000004467         movzx      edx, byte [rax]
000000000000446a         cmp        dl, 0x39
000000000000446d         je         loc_4460

                     loc_446f:
000000000000446f         add        edx, 0x1                                    ; CODE XREF=backupfile_internal+697
0000000000004472         mov        rdi, r13                                    ; argument "__dirp" for method j_readdir
0000000000004475         mov        r15, r8
0000000000004478         mov        byte [rax], dl
000000000000447a         call       j_readdir                                   ; readdir
000000000000447f         test       rax, rax
0000000000004482         jne        loc_42e1

0000000000004488         nop        dword [rax+rax]

                     loc_4490:
0000000000004490         mov        eax, dword [rsp+0xb8+var_94]                ; CODE XREF=backupfile_internal+315, backupfile_internal+1421
0000000000004494         cmp        eax, 0x2
0000000000004497         je         loc_4580

000000000000449d         cmp        eax, 0x3
00000000000044a0         je         loc_46a0

00000000000044a6         cmp        eax, 0x1
00000000000044a9         je         loc_45b0

                     loc_44af:
00000000000044af         cmp        byte [rsp+0xb8+var_55], 0x0                 ; CODE XREF=backupfile_internal+986, backupfile_internal+1066, backupfile_internal+1175, backupfile_internal+1317, backupfile_internal+1359
00000000000044b4         je         loc_476e

00000000000044ba         mov        edx, dword [rsp+0xb8+var_44]
00000000000044be         lea        rcx, qword [r15+r14]
00000000000044c2         test       edx, edx
00000000000044c4         jns        loc_44d9

00000000000044c6         mov        dword [rsp+0xb8+var_44], 0xffffff9c
00000000000044ce         mov        rcx, r15
00000000000044d1         mov        edx, 0xffffff9c
00000000000044d6         xor        r14d, r14d

                     loc_44d9:
00000000000044d9         xor        r8d, r8d                                    ; CODE XREF=backupfile_internal+804
00000000000044dc         cmp        dword [rsp+0xb8+var_98], 0x1
00000000000044e1         mov        rsi, qword [rsp+0xb8+var_A8]
00000000000044e6         mov        edi, 0xffffff9c
00000000000044eb         setne      r8b
00000000000044ef         call       renameatu                                   ; renameatu
00000000000044f4         test       eax, eax
00000000000044f6         je         loc_476e

00000000000044fc         call       j___errno_location                          ; __errno_location
0000000000004501         mov        ebp, dword [rax]
0000000000004503         cmp        ebp, 0x11
0000000000004506         je         loc_4269

000000000000450c         test       r13, r13
000000000000450f         mov        rbx, rax
0000000000004512         je         loc_451c

0000000000004514         mov        rdi, r13                                    ; argument "__dirp" for method j_closedir
0000000000004517         call       j_closedir                                  ; closedir

                     loc_451c:
000000000000451c         mov        rdi, r15                                    ; argument "__ptr" for method j_free, CODE XREF=backupfile_internal+882
000000000000451f         xor        r15d, r15d
0000000000004522         call       j_free                                      ; free
0000000000004527         mov        dword [rbx], ebp
0000000000004529         nop        dword [rax]

                     loc_4530:
0000000000004530         mov        rsi, qword [rsp+0xb8+var_40]                ; CODE XREF=backupfile_internal+165, backupfile_internal+1302, backupfile_internal+1489, backupfile_internal+1503
0000000000004535         xor        rsi, qword [fs:0x28]
000000000000453e         mov        rax, r15
0000000000004541         jne        loc_47ad

0000000000004547         add        rsp, 0x88
000000000000454e         pop        rbx
000000000000454f         pop        rbp
0000000000004550         pop        r12
0000000000004552         pop        r13
0000000000004554         pop        r14
0000000000004556         pop        r15
0000000000004558         ret
                        ; endp
0000000000004559         align      32

                     loc_4560:
0000000000004560         mov        rax, qword [rsp+0xb8+var_A0]                ; CODE XREF=backupfile_internal+224
0000000000004565         mov        rdx, qword [rsp+0xb8+var_68]                ; argument "__n" for method j_memcpy
000000000000456a         mov        rsi, qword [simple_backup_suffix]           ; argument "__src" for method j_memcpy, simple_backup_suffix
0000000000004571         lea        rdi, qword [r15+rax]                        ; argument "__dest" for method j_memcpy
0000000000004575         call       j_memcpy                                    ; memcpy
000000000000457a         jmp        loc_44af
000000000000457f         align      128

                     loc_4580:
0000000000004580         cmp        dword [rsp+0xb8+var_98], 0x2                ; CODE XREF=backupfile_internal+759
0000000000004585         jne        loc_45b0

0000000000004587         mov        rax, qword [rsp+0xb8+var_A0]
000000000000458c         mov        rdx, qword [rsp+0xb8+var_68]                ; argument "__n" for method j_memcpy
0000000000004591         mov        rsi, qword [simple_backup_suffix]           ; argument "__src" for method j_memcpy, simple_backup_suffix
0000000000004598         lea        rdi, qword [r15+rax]                        ; argument "__dest" for method j_memcpy
000000000000459c         call       j_memcpy                                    ; memcpy
00000000000045a1         mov        dword [rsp+0xb8+var_98], 0x1
00000000000045a9         nop        dword [rax]

                     loc_45b0:
00000000000045b0         mov        rdi, r15                                    ; CODE XREF=backupfile_internal+777, backupfile_internal+997
00000000000045b3         call       last_component                              ; last_component
00000000000045b8         mov        rdi, rax
00000000000045bb         mov        rbx, rax
00000000000045be         call       base_len                                    ; base_len
00000000000045c3         cmp        rax, 0xe
00000000000045c7         mov        rbp, rax
00000000000045ca         jbe        loc_44af

00000000000045d0         cmp        qword [rsp+0xb8+var_70], 0x0
00000000000045d6         jne        loc_46c0

00000000000045dc         mov        edi, dword [rsp+0xb8+var_44]
00000000000045e0         mov        dword [rsp+0xb8+var_B0], edi
00000000000045e4         call       j___errno_location                          ; __errno_location
00000000000045e9         mov        edi, dword [rsp+0xb8+var_B0]
00000000000045ed         mov        r12, rax
00000000000045f0         test       edi, edi
00000000000045f2         js         loc_4732

00000000000045f8         mov        dword [rax], 0x0
00000000000045fe         mov        esi, 0x3                                    ; argument "__name" for method j_fpathconf
0000000000004603         call       j_fpathconf                                 ; fpathconf
0000000000004608         mov        ecx, dword [r12]
000000000000460c         xor        edx, edx
000000000000460e         test       ecx, ecx
0000000000004610         sete       dl
0000000000004613         sub        rax, rdx

                     loc_4616:
0000000000004616         test       rax, rax                                    ; CODE XREF=backupfile_internal+1481
0000000000004619         mov        qword [rsp+0xb8+var_70], rax
000000000000461e         jns        loc_46c0

0000000000004624         cmp        rax, 0xffffffffffffffff
0000000000004628         jne        loc_4795

000000000000462e         mov        qword [rsp+0xb8+var_70], 0xffffffffffffffff
0000000000004637         jmp        loc_44af
000000000000463c         align      64

                     loc_4640:
0000000000004640         mov        rcx, qword [rsp+0xb8+var_50]                ; CODE XREF=backupfile_internal+248
0000000000004645         mov        edi, dword [rsp+0xb8+var_54]
0000000000004649         mov        r9d, 0x2e
000000000000464f         xor        edx, edx
0000000000004651         movzx      ebx, word [rbp]
0000000000004655         mov        rsi, r15
0000000000004658         mov        word [rbp], r9w
000000000000465d         call       opendirat                                   ; opendirat
0000000000004662         test       rax, rax
0000000000004665         mov        r13, rax
0000000000004668         lea        rdx, qword [rbp+r12]
000000000000466d         je         loc_4700

0000000000004673         mov        word [rbp], bx
0000000000004677         mov        dword [rdx], 0x7e317e2e
000000000000467d         mov        byte [rdx+4], 0x0
0000000000004681         jmp        loc_42a6
0000000000004686         align      16

                     loc_4690:
0000000000004690         mov        qword [rsp+0xb8+var_88], rcx                ; CODE XREF=backupfile_internal+572, backupfile_internal+581
0000000000004695         jmp        loc_43f4
000000000000469a         align      32

                     loc_46a0:
00000000000046a0         mov        rdi, r15                                    ; argument "__ptr" for method j_free, CODE XREF=backupfile_internal+625, backupfile_internal+768
00000000000046a3         xor        r15d, r15d
00000000000046a6         call       j_free                                      ; free
00000000000046ab         call       j___errno_location                          ; __errno_location
00000000000046b0         mov        dword [rax], 0xc
00000000000046b6         jmp        loc_4530
00000000000046bb         align      64

                     loc_46c0:
00000000000046c0         cmp        rbp, qword [rsp+0xb8+var_70]                ; CODE XREF=backupfile_internal+1078, backupfile_internal+1150
00000000000046c5         jbe        loc_44af

                     loc_46cb:
00000000000046cb         mov        rax, qword [rsp+0xb8+var_A0]                ; CODE XREF=backupfile_internal+1534
00000000000046d0         mov        rsi, qword [rsp+0xb8+var_70]
00000000000046d5         add        rax, r15
00000000000046d8         lea        rdx, qword [rsi-1]
00000000000046dc         sub        rax, rbx
00000000000046df         cmp        rax, rsi
00000000000046e2         cmovae     rax, rdx
00000000000046e6         mov        byte [rbx+rax], 0x7e
00000000000046ea         mov        byte [rbx+rax+1], 0x0
00000000000046ef         jmp        loc_44af
00000000000046f4         align      8

                     loc_46f8:
00000000000046f8         mov        r8, r15                                     ; CODE XREF=backupfile_internal+544
00000000000046fb         jmp        loc_4417

                     loc_4700:
0000000000004700         mov        qword [rsp+0xb8+var_B0], rdx                ; CODE XREF=backupfile_internal+1229
0000000000004705         call       j___errno_location                          ; __errno_location
000000000000470a         cmp        dword [rax], 0xc
000000000000470d         mov        rdx, qword [rsp+0xb8+var_B0]
0000000000004712         mov        word [rbp], bx
0000000000004716         mov        dword [rdx], 0x7e317e2e
000000000000471c         mov        byte [rdx+4], 0x0
0000000000004720         sete       al
0000000000004723         movzx      eax, al
0000000000004726         add        eax, 0x2
0000000000004729         mov        dword [rsp+0xb8+var_94], eax
000000000000472d         jmp        loc_4490

                     loc_4732:
0000000000004732         movzx      edx, word [rbx]                             ; CODE XREF=backupfile_internal+1106
0000000000004735         mov        esi, 0x2e
000000000000473a         mov        rdi, r15                                    ; argument "__path" for method j_pathconf
000000000000473d         mov        word [rbx], si
0000000000004740         mov        dword [rax], 0x0
0000000000004746         mov        esi, 0x3                                    ; argument "__name" for method j_pathconf
000000000000474b         mov        dword [rsp+0xb8+var_B0], edx
000000000000474f         call       j_pathconf                                  ; pathconf
0000000000004754         mov        edi, dword [r12]
0000000000004758         mov        edx, dword [rsp+0xb8+var_B0]
000000000000475c         xor        ecx, ecx
000000000000475e         test       edi, edi
0000000000004760         mov        word [rbx], dx
0000000000004763         sete       cl
0000000000004766         sub        rax, rcx
0000000000004769         jmp        loc_4616

                     loc_476e:
000000000000476e         test       r13, r13                                    ; CODE XREF=backupfile_internal+788, backupfile_internal+854
0000000000004771         je         loc_4530

0000000000004777         mov        rdi, r13                                    ; argument "__dirp" for method j_closedir
000000000000477a         call       j_closedir                                  ; closedir
000000000000477f         jmp        loc_4530

                     loc_4784:
0000000000004784         call       set_simple_backup_suffix                    ; set_simple_backup_suffix, CODE XREF=backupfile_internal+93
0000000000004789         mov        rdi, qword [simple_backup_suffix]           ; simple_backup_suffix
0000000000004790         jmp        loc_4203

                     loc_4795:
0000000000004795         mov        qword [rsp+0xb8+var_70], 0xe                ; CODE XREF=backupfile_internal+1160
000000000000479e         jmp        loc_46cb

                     loc_47a3:
00000000000047a3         mov        esi, 0x1                                    ; CODE XREF=backupfile_internal+563
00000000000047a8         jmp        loc_43d9

                     loc_47ad:
00000000000047ad         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=backupfile_internal+929
                        ; endp
00000000000047b2         align      64                                          ; End of unwind block (FDE at 0xd398)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_version.part.0:
00000000000047c0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xd3ec), CODE XREF=get_version+10, j_get_version.part.0
00000000000047c4         mov        r9, qword [argmatch_die]                    ; argmatch_die
00000000000047cb         lea        rdx, qword [backup_args]                    ; backup_args
00000000000047d2         lea        rcx, qword [backup_types]                   ; backup_types
00000000000047d9         mov        r8d, 0x4
00000000000047df         call       __xargmatch_internal                        ; __xargmatch_internal
00000000000047e4         lea        rdx, qword [backup_types]                   ; backup_types
00000000000047eb         mov        eax, dword [rdx+rax*4]
00000000000047ee         add        rsp, 0x8
00000000000047f2         ret
                        ; endp
00000000000047f3         align      2048                                        ; End of unwind block (FDE at 0xd3ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     find_backup_file_name:
0000000000004800         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xd404), CODE XREF=do_link+2106
0000000000004804         xor        ecx, ecx                                    ; argument #4 for method backupfile_internal
0000000000004806         call       backupfile_internal                         ; backupfile_internal
000000000000480b         test       rax, rax
000000000000480e         je         loc_4815

0000000000004810         add        rsp, 0x8
0000000000004814         ret
                        ; endp

                     loc_4815:
0000000000004815         call       xalloc_die                                  ; xalloc_die, CODE XREF=find_backup_file_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_481a:
000000000000481a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0xd404)
                     get_version:
0000000000004820         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0xd420)
0000000000004823         je         loc_4830

0000000000004825         cmp        byte [rsi], 0x0
0000000000004828         je         loc_4830

000000000000482a         jmp        get_version.part.0                          ; get_version.part.0
                        ; endp
000000000000482c         align      16

                     loc_4830:
0000000000004830         mov        eax, 0x2                                    ; CODE XREF=get_version+3, get_version+8
0000000000004835         ret
                        ; endp
0000000000004836         align      64                                          ; End of unwind block (FDE at 0xd420)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xget_version:
0000000000004840         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0xd434), CODE XREF=main+964
0000000000004843         je         loc_484a

0000000000004845         cmp        byte [rsi], 0x0
0000000000004848         jne        j_get_version.part.0                        ; get_version.part.0

                     loc_484a:
000000000000484a         lea        rdi, qword [aVersioncontrol]                ; argument "__name" for method j_getenv, "VERSION_CONTROL", CODE XREF=xget_version+3
0000000000004851         sub        rsp, 0x8
0000000000004855         call       j_getenv                                    ; getenv
000000000000485a         test       rax, rax
000000000000485d         je         loc_4880

000000000000485f         cmp        byte [rax], 0x0
0000000000004862         je         loc_4880

0000000000004864         lea        rdi, qword [aSimplebackupsu+21]             ; 0xbf8b
000000000000486b         mov        rsi, rax
000000000000486e         add        rsp, 0x8

                     j_get_version.part.0:        // get_version.part.0
0000000000004872         jmp        get_version.part.0                          ; get_version.part.0, CODE XREF=xget_version+8
                        ; endp
0000000000004877         align      128

                     loc_4880:
0000000000004880         mov        eax, 0x2                                    ; CODE XREF=xget_version+29, xget_version+34
0000000000004885         add        rsp, 0x8
0000000000004889         ret
                        ; endp
000000000000488a         align      16                                          ; End of unwind block (FDE at 0xd434)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_A8: int64_t, -168
        ;    var_C0: int32_t, -192
        ;    var_D8: int8_t, -216
        ;    var_E0: int64_t, -224
        ;    var_E8: int64_t, -232
        ;    var_F0: int64_t, -240
        ;    var_F8: int64_t, -248
        ;    var_FC: int32_t, -252
        ;    var_FD: int8_t, -253
        ;    var_108: int64_t, -264
        ;    var_110: int64_t, -272
        ;    var_114: int32_t, -276


                     canonicalize_filename_mode:
0000000000004890         push       r15                                         ; Begin of unwind block (FDE at 0xd454), CODE XREF=do_link+1345, do_link+1361
0000000000004892         push       r14
0000000000004894         push       r13
0000000000004896         push       r12
0000000000004898         push       rbp
0000000000004899         push       rbx
000000000000489a         sub        rsp, 0xe8
00000000000048a1         mov        rax, qword [fs:0x28]
00000000000048aa         mov        qword [rsp+0x118+var_40], rax
00000000000048b2         xor        eax, eax
00000000000048b4         mov        eax, esi
00000000000048b6         and        eax, 0x4
00000000000048b9         setne      byte [rsp+0x118+var_FD]
00000000000048be         and        esi, 0x3
00000000000048c1         mov        dword [rsp+0x118+var_FC], eax
00000000000048c5         lea        eax, dword [rsi-1]
00000000000048c8         mov        dword [rsp+0x118+var_114], esi
00000000000048cc         test       esi, eax
00000000000048ce         jne        loc_4e20

00000000000048d4         test       rdi, rdi
00000000000048d7         mov        r14, rdi
00000000000048da         je         loc_4e20

00000000000048e0         movzx      eax, byte [rdi]
00000000000048e3         test       al, al
00000000000048e5         je         loc_4e60

00000000000048eb         cmp        al, 0x2f
00000000000048ed         je         loc_4db0

00000000000048f3         call       xgetcwd                                     ; xgetcwd
00000000000048f8         test       rax, rax
00000000000048fb         mov        rbp, rax
00000000000048fe         je         loc_4ab0

0000000000004904         mov        rdi, rax                                    ; argument "__s" for method j_strlen
0000000000004907         call       j_strlen                                    ; strlen
000000000000490c         cmp        rax, 0xfff
0000000000004912         mov        r15, rax
0000000000004915         jbe        loc_4dd0

000000000000491b         add        r15, rbp
000000000000491e         mov        rbx, r15

                     loc_4921:
0000000000004921         lea        rax, qword [rsp+0x118+var_D8]               ; CODE XREF=sub_4daa+33, sub_4daa+64
0000000000004926         mov        qword [rsp+0x118+var_F8], r14
000000000000492b         mov        qword [rsp+0x118+var_108], 0x0
0000000000004934         mov        qword [rsp+0x118+var_E8], 0x0
000000000000493d         mov        qword [rsp+0x118+var_F0], 0x0
0000000000004946         mov        qword [rsp+0x118+var_110], rax

                     loc_494b:
000000000000494b         movzx      eax, byte [r14]                             ; CODE XREF=canonicalize_filename_mode+981, canonicalize_filename_mode+1008, sub_4daa+274
000000000000494f         test       al, al
0000000000004951         je         loc_4a5f

0000000000004957         nop        word [rax+rax]

                     loc_4960:
0000000000004960         cmp        al, 0x2f                                    ; CODE XREF=canonicalize_filename_mode+457
0000000000004962         jne        loc_497c

0000000000004964         nop        dword [rax]

                     loc_4968:
0000000000004968         add        r14, 0x1                                    ; CODE XREF=canonicalize_filename_mode+226
000000000000496c         movzx      eax, byte [r14]
0000000000004970         cmp        al, 0x2f
0000000000004972         je         loc_4968

0000000000004974         test       al, al
0000000000004976         je         loc_4c40

                     loc_497c:
000000000000497c         mov        r13, r14                                    ; CODE XREF=canonicalize_filename_mode+210
000000000000497f         jmp        loc_498d
0000000000004981         align      8

                     loc_4988:
0000000000004988         cmp        dl, 0x2f                                    ; CODE XREF=canonicalize_filename_mode+264
000000000000498b         je         loc_499a

                     loc_498d:
000000000000498d         add        r13, 0x1                                    ; CODE XREF=canonicalize_filename_mode+239
0000000000004991         movzx      edx, byte [r13]
0000000000004996         test       dl, dl
0000000000004998         jne        loc_4988

                     loc_499a:
000000000000499a         cmp        r13, r14                                    ; CODE XREF=canonicalize_filename_mode+251, canonicalize_filename_mode+947
000000000000499d         je         loc_4a5f

00000000000049a3         mov        r12, r13
00000000000049a6         sub        r12, r14
00000000000049a9         cmp        r12, 0x1
00000000000049ad         je         loc_4b80

00000000000049b3         cmp        r12, 0x2
00000000000049b7         jne        loc_49c1

00000000000049b9         cmp        al, 0x2e
00000000000049bb         je         loc_4c50

                     loc_49c1:
00000000000049c1         cmp        byte [r15-1], 0x2f                          ; CODE XREF=canonicalize_filename_mode+295, canonicalize_filename_mode+754, canonicalize_filename_mode+965
00000000000049c6         je         loc_49d0

00000000000049c8         mov        byte [r15], 0x2f
00000000000049cc         add        r15, 0x1

                     loc_49d0:
00000000000049d0         lea        rax, qword [r15+r12]                        ; CODE XREF=canonicalize_filename_mode+310
00000000000049d4         cmp        rbx, rax
00000000000049d7         ja         loc_4a0a

00000000000049d9         sub        rbx, rbp
00000000000049dc         sub        r15, rbp
00000000000049df         mov        rdi, rbp                                    ; argument #1 for method xrealloc
00000000000049e2         lea        rax, qword [r12+rbx+1]
00000000000049e7         add        rbx, 0x1000
00000000000049ee         cmp        r12, 0x1000
00000000000049f5         cmovge     rbx, rax
00000000000049f9         mov        rsi, rbx                                    ; argument #2 for method xrealloc
00000000000049fc         call       xrealloc                                    ; xrealloc
0000000000004a01         mov        rbp, rax
0000000000004a04         add        rbx, rax
0000000000004a07         add        r15, rax

                     loc_4a0a:
0000000000004a0a         mov        rdi, r15                                    ; argument "__dest" for method j_memcpy, CODE XREF=canonicalize_filename_mode+327
0000000000004a0d         mov        rdx, r12                                    ; argument "__n" for method j_memcpy
0000000000004a10         mov        rsi, r14                                    ; argument "__src" for method j_memcpy
0000000000004a13         call       j_memcpy                                    ; memcpy
0000000000004a18         cmp        dword [rsp+0x118+var_114], 0x2
0000000000004a1d         lea        r15, qword [r15+r12]
0000000000004a21         mov        byte [r15], 0x0
0000000000004a25         jne        loc_4ae0

0000000000004a2b         cmp        byte [rsp+0x118+var_FD], 0x0
0000000000004a30         je         loc_4ae0

                     loc_4a36:
0000000000004a36         mov        dword [rsp+0x118+var_C0], 0x0               ; CODE XREF=canonicalize_filename_mode+656

                     loc_4a3e:
0000000000004a3e         cmp        byte [r13], 0x0                             ; CODE XREF=canonicalize_filename_mode+795
0000000000004a43         je         loc_4a50

0000000000004a45         cmp        dword [rsp+0x118+var_114], 0x2
0000000000004a4a         jne        loc_4ea7

                     loc_4a50:
0000000000004a50         mov        r14, r13                                    ; CODE XREF=canonicalize_filename_mode+435, canonicalize_filename_mode+696, canonicalize_filename_mode+760, canonicalize_filename_mode+789, canonicalize_filename_mode+861, canonicalize_filename_mode+1021, canonicalize_filename_mode+1032, canonicalize_filename_mode+1249, sub_4daa+156
0000000000004a53         movzx      eax, byte [r14]
0000000000004a57         test       al, al
0000000000004a59         jne        loc_4960

                     loc_4a5f:
0000000000004a5f         lea        rax, qword [rbp+1]                          ; CODE XREF=canonicalize_filename_mode+193, canonicalize_filename_mode+269
0000000000004a63         cmp        r15, rax
0000000000004a66         jbe        loc_4a73

0000000000004a68         cmp        byte [r15-1], 0x2f
0000000000004a6d         jne        loc_4a73

0000000000004a6f         sub        r15, 0x1

                     loc_4a73:
0000000000004a73         lea        rax, qword [r15+1]                          ; CODE XREF=canonicalize_filename_mode+470, canonicalize_filename_mode+477
0000000000004a77         mov        byte [r15], 0x0
0000000000004a7b         cmp        rbx, rax
0000000000004a7e         je         loc_4a92

0000000000004a80         sub        r15, rbp
0000000000004a83         mov        rdi, rbp                                    ; argument #1 for method xrealloc
0000000000004a86         lea        rsi, qword [r15+1]                          ; argument #2 for method xrealloc
0000000000004a8a         call       xrealloc                                    ; xrealloc
0000000000004a8f         mov        rbp, rax

                     loc_4a92:
0000000000004a92         mov        rdi, qword [rsp+0x118+var_F0]               ; argument "__ptr" for method j_free, CODE XREF=canonicalize_filename_mode+494
0000000000004a97         call       j_free                                      ; free
0000000000004a9c         mov        rax, qword [rsp+0x118+var_108]
0000000000004aa1         test       rax, rax
0000000000004aa4         je         loc_4ab0

0000000000004aa6         mov        rdi, rax                                    ; argument #1 for method hash_free
0000000000004aa9         call       hash_free                                   ; hash_free
0000000000004aae         nop

                     loc_4ab0:
0000000000004ab0         mov        rcx, qword [rsp+0x118+var_40]               ; CODE XREF=canonicalize_filename_mode+110, canonicalize_filename_mode+532, canonicalize_filename_mode+930, sub_4daa+131, sub_4daa+195
0000000000004ab8         xor        rcx, qword [fs:0x28]
0000000000004ac1         mov        rax, rbp
0000000000004ac4         jne        loc_4ec1

0000000000004aca         add        rsp, 0xe8
0000000000004ad1         pop        rbx
0000000000004ad2         pop        rbp
0000000000004ad3         pop        r12
0000000000004ad5         pop        r13
0000000000004ad7         pop        r14
0000000000004ad9         pop        r15
0000000000004adb         ret
                        ; endp
0000000000004adc         align      32

                     loc_4ae0:
0000000000004ae0         mov        eax, dword [rsp+0x118+var_FC]               ; CODE XREF=canonicalize_filename_mode+405, canonicalize_filename_mode+416
0000000000004ae4         mov        rdx, qword [rsp+0x118+var_110]
0000000000004ae9         mov        rsi, rbp
0000000000004aec         mov        edi, 0x1
0000000000004af1         test       eax, eax
0000000000004af3         je         loc_4bb0

0000000000004af9         call       j___xstat                                   ; __xstat
0000000000004afe         test       eax, eax
0000000000004b00         setne      al

                     loc_4b03:
0000000000004b03         test       al, al                                      ; CODE XREF=canonicalize_filename_mode+810
0000000000004b05         je         loc_4b90

0000000000004b0b         call       j___errno_location                          ; __errno_location
0000000000004b10         mov        r14, rax
0000000000004b13         mov        edx, dword [rax]
0000000000004b15         mov        eax, dword [rsp+0x118+var_114]
0000000000004b19         test       eax, eax
0000000000004b1b         je         loc_4b4e

0000000000004b1d         cmp        eax, 0x1
0000000000004b20         jne        loc_4a36

0000000000004b26         lea        rsi, qword [aLibs+6]                        ; argument "__accept" for method j_strspn, 0xc11e
0000000000004b2d         mov        rdi, r13                                    ; argument "__s" for method j_strspn
0000000000004b30         mov        dword [rsp+0x118+var_E0], edx
0000000000004b34         call       j_strspn                                    ; strspn
0000000000004b39         cmp        byte [r13+rax], 0x0
0000000000004b3f         mov        edx, dword [rsp+0x118+var_E0]
0000000000004b43         jne        loc_4b4e

0000000000004b45         cmp        edx, 0x2
0000000000004b48         je         loc_4a50

                     loc_4b4e:
0000000000004b4e         mov        r12, r14                                    ; CODE XREF=canonicalize_filename_mode+651, canonicalize_filename_mode+691

                     loc_4b51:
0000000000004b51         mov        rdi, qword [rsp+0x118+var_F0]               ; argument "__ptr" for method j_free, CODE XREF=sub_4daa+266
0000000000004b56         mov        dword [rsp+0x118+var_114], edx
0000000000004b5a         call       j_free                                      ; free
0000000000004b5f         mov        rdi, rbp                                    ; argument "__ptr" for method j_free
0000000000004b62         call       j_free                                      ; free
0000000000004b67         cmp        qword [rsp+0x118+var_108], 0x0
0000000000004b6d         mov        edx, dword [rsp+0x118+var_114]
0000000000004b71         je         loc_4c2c

0000000000004b77         jmp        loc_4c1a
0000000000004b7c         align      128

                     loc_4b80:
0000000000004b80         cmp        al, 0x2e                                    ; CODE XREF=canonicalize_filename_mode+285
0000000000004b82         jne        loc_49c1

0000000000004b88         jmp        loc_4a50
0000000000004b8d         align      16

                     loc_4b90:
0000000000004b90         mov        eax, dword [rsp+0x118+var_C0]               ; CODE XREF=canonicalize_filename_mode+629
0000000000004b94         and        eax, 0xf000
0000000000004b99         cmp        eax, 0xa000
0000000000004b9e         je         loc_4bc0

0000000000004ba0         cmp        eax, 0x4000
0000000000004ba5         je         loc_4a50

0000000000004bab         jmp        loc_4a3e

                     loc_4bb0:
0000000000004bb0         call       j___lxstat                                  ; __lxstat, CODE XREF=canonicalize_filename_mode+611
0000000000004bb5         test       eax, eax
0000000000004bb7         setne      al
0000000000004bba         jmp        loc_4b03
0000000000004bbf         align      64

                     loc_4bc0:
0000000000004bc0         cmp        qword [rsp+0x118+var_108], 0x0              ; CODE XREF=canonicalize_filename_mode+782
0000000000004bc6         je         loc_4d76

                     loc_4bcc:
0000000000004bcc         mov        rdx, qword [rsp+0x118+var_110]              ; argument #3 for method seen_file, CODE XREF=canonicalize_filename_mode+1295
0000000000004bd1         mov        rsi, qword [rsp+0x118+var_F8]               ; argument #2 for method seen_file
0000000000004bd6         mov        rdi, qword [rsp+0x118+var_108]              ; argument #1 for method seen_file
0000000000004bdb         call       seen_file                                   ; seen_file
0000000000004be0         test       al, al
0000000000004be2         je         loc_4ca0

0000000000004be8         cmp        dword [rsp+0x118+var_114], 0x2
0000000000004bed         je         loc_4a50

0000000000004bf3         call       j___errno_location                          ; __errno_location
0000000000004bf8         mov        edx, 0x28
0000000000004bfd         mov        r12, rax

                     loc_4c00:
0000000000004c00         mov        rdi, qword [rsp+0x118+var_F0]               ; argument "__ptr" for method j_free, CODE XREF=sub_4daa+165
0000000000004c05         mov        dword [rsp+0x118+var_114], edx
0000000000004c09         call       j_free                                      ; free
0000000000004c0e         mov        rdi, rbp                                    ; argument "__ptr" for method j_free
0000000000004c11         call       j_free                                      ; free
0000000000004c16         mov        edx, dword [rsp+0x118+var_114]

                     loc_4c1a:
0000000000004c1a         mov        rdi, qword [rsp+0x118+var_108]              ; argument #1 for method hash_free, CODE XREF=canonicalize_filename_mode+743
0000000000004c1f         mov        dword [rsp+0x118+var_114], edx
0000000000004c23         call       hash_free                                   ; hash_free
0000000000004c28         mov        edx, dword [rsp+0x118+var_114]

                     loc_4c2c:
0000000000004c2c         mov        dword [r12], edx                            ; CODE XREF=canonicalize_filename_mode+737
0000000000004c30         xor        ebp, ebp
0000000000004c32         jmp        loc_4ab0
0000000000004c37         align      64

                     loc_4c40:
0000000000004c40         mov        r13, r14                                    ; CODE XREF=canonicalize_filename_mode+230
0000000000004c43         jmp        loc_499a
0000000000004c48         align      16

                     loc_4c50:
0000000000004c50         cmp        byte [r14+1], 0x2e                          ; CODE XREF=canonicalize_filename_mode+299
0000000000004c55         jne        loc_49c1

0000000000004c5b         lea        rax, qword [rbp+1]
0000000000004c5f         mov        r14, r13
0000000000004c62         cmp        r15, rax
0000000000004c65         jbe        loc_494b

0000000000004c6b         lea        rax, qword [r15-1]
0000000000004c6f         cmp        rbp, rax
0000000000004c72         jae        loc_4eb9

0000000000004c78         cmp        byte [r15-2], 0x2f
0000000000004c7d         mov        r15, rax
0000000000004c80         je         loc_494b

                     loc_4c86:
0000000000004c86         sub        r15, 0x1                                    ; CODE XREF=canonicalize_filename_mode+1038
0000000000004c8a         cmp        rbp, r15
0000000000004c8d         je         loc_4a50

0000000000004c93         cmp        byte [r15-1], 0x2f
0000000000004c98         je         loc_4a50

0000000000004c9e         jmp        loc_4c86

                     loc_4ca0:
0000000000004ca0         mov        rdx, qword [rsp+0x118+var_110]              ; argument #3 for method record_file, CODE XREF=canonicalize_filename_mode+850
0000000000004ca5         mov        rsi, qword [rsp+0x118+var_F8]               ; argument #2 for method record_file
0000000000004caa         mov        rdi, qword [rsp+0x118+var_108]              ; argument #1 for method record_file
0000000000004caf         call       record_file                                 ; record_file
0000000000004cb4         mov        rsi, qword [rsp+0x118+var_A8]
0000000000004cb9         mov        rdi, rbp
0000000000004cbc         call       areadlink_with_size                         ; areadlink_with_size
0000000000004cc1         test       rax, rax
0000000000004cc4         mov        r14, rax
0000000000004cc7         je         loc_4e32

0000000000004ccd         mov        rdi, rax                                    ; argument "__s" for method j_strlen
0000000000004cd0         call       j_strlen                                    ; strlen
0000000000004cd5         mov        rdi, r13                                    ; argument "__s" for method j_strlen
0000000000004cd8         mov        r12, rax
0000000000004cdb         mov        qword [rsp+0x118+var_F8], rax
0000000000004ce0         call       j_strlen                                    ; strlen
0000000000004ce5         cmp        qword [rsp+0x118+var_E8], 0x0
0000000000004ceb         mov        rdx, rax
0000000000004cee         lea        rcx, qword [r12+rdx+1]
0000000000004cf3         je         loc_4def

0000000000004cf9         cmp        qword [rsp+0x118+var_E8], rcx
0000000000004cfe         jae        loc_4d21

0000000000004d00         mov        rdi, qword [rsp+0x118+var_F0]               ; argument #1 for method xrealloc
0000000000004d05         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000004d08         mov        qword [rsp+0x118+var_E0], rdx
0000000000004d0d         mov        qword [rsp+0x118+var_E8], rcx
0000000000004d12         call       xrealloc                                    ; xrealloc
0000000000004d17         mov        rdx, qword [rsp+0x118+var_E0]
0000000000004d1c         mov        qword [rsp+0x118+var_F0], rax

                     loc_4d21:
0000000000004d21         mov        r12, qword [rsp+0x118+var_F0]               ; CODE XREF=canonicalize_filename_mode+1134, sub_4daa+113
0000000000004d26         mov        rdi, qword [rsp+0x118+var_F8]
0000000000004d2b         add        rdx, 0x1                                    ; argument "__n" for method j_memmove
0000000000004d2f         mov        rsi, r13                                    ; argument "__src" for method j_memmove
0000000000004d32         add        rdi, r12                                    ; argument "__dest" for method j_memmove
0000000000004d35         mov        r13, r12
0000000000004d38         call       j_memmove                                   ; memmove
0000000000004d3d         mov        rdx, qword [rsp+0x118+var_F8]               ; argument "__n" for method j_memcpy
0000000000004d42         mov        rsi, r14                                    ; argument "__src" for method j_memcpy
0000000000004d45         mov        rdi, r12                                    ; argument "__dest" for method j_memcpy
0000000000004d48         call       j_memcpy                                    ; memcpy
0000000000004d4d         cmp        byte [r14], 0x2f
0000000000004d51         mov        qword [rsp+0x118+var_F8], r12
0000000000004d56         lea        rax, qword [rbp+1]
0000000000004d5a         je         loc_4e54

0000000000004d60         cmp        r15, rax
0000000000004d63         ja         loc_4e72

                     loc_4d69:
0000000000004d69         mov        rdi, r14                                    ; argument "__ptr" for method j_free, CODE XREF=sub_4daa+177, sub_4daa+219, sub_4daa+234, sub_4daa+245
0000000000004d6c         call       j_free                                      ; free
0000000000004d71         jmp        loc_4a50

                     loc_4d76:
0000000000004d76         lea        r8, qword [triple_free]                     ; argument #5 for method hash_initialize, triple_free, CODE XREF=canonicalize_filename_mode+822
0000000000004d7d         lea        rcx, qword [triple_compare_ino_str]         ; argument #4 for method hash_initialize, triple_compare_ino_str
0000000000004d84         xor        esi, esi                                    ; argument #2 for method hash_initialize
0000000000004d86         lea        rdx, qword [triple_hash]                    ; argument #3 for method hash_initialize, triple_hash
0000000000004d8d         mov        edi, 0x7                                    ; argument #1 for method hash_initialize
0000000000004d92         call       hash_initialize                             ; hash_initialize
0000000000004d97         test       rax, rax
0000000000004d9a         mov        qword [rsp+0x118+var_108], rax
0000000000004d9f         jne        loc_4bcc

0000000000004da5         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4daa:
0000000000004daa         nop        word [rax+rax]
                        ; endp

                     loc_4db0:
0000000000004db0         mov        edi, 0x1000                                 ; argument #1 for method xmalloc, CODE XREF=canonicalize_filename_mode+93
0000000000004db5         call       xmalloc                                     ; xmalloc
0000000000004dba         mov        rbp, rax
0000000000004dbd         lea        rbx, qword [rax+0x1000]
0000000000004dc4         lea        r15, qword [rax+1]
0000000000004dc8         mov        byte [rax], 0x2f
0000000000004dcb         jmp        loc_4921

                     loc_4dd0:
0000000000004dd0         mov        rdi, rbp                                    ; argument #1 for method xrealloc, CODE XREF=canonicalize_filename_mode+133
0000000000004dd3         mov        esi, 0x1000                                 ; argument #2 for method xrealloc
0000000000004dd8         call       xrealloc                                    ; xrealloc
0000000000004ddd         mov        rbp, rax
0000000000004de0         add        r15, rax
0000000000004de3         lea        rbx, qword [rax+0x1000]
0000000000004dea         jmp        loc_4921

                     loc_4def:
0000000000004def         cmp        rcx, 0x1000                                 ; CODE XREF=canonicalize_filename_mode+1123
0000000000004df6         mov        eax, 0x1000
0000000000004dfb         mov        qword [rsp+0x118+var_E0], rdx
0000000000004e00         cmovae     rax, rcx
0000000000004e04         mov        rdi, rax                                    ; argument #1 for method xmalloc
0000000000004e07         mov        qword [rsp+0x118+var_E8], rax
0000000000004e0c         call       xmalloc                                     ; xmalloc
0000000000004e11         mov        rdx, qword [rsp+0x118+var_E0]
0000000000004e16         mov        qword [rsp+0x118+var_F0], rax
0000000000004e1b         jmp        loc_4d21

                     loc_4e20:
0000000000004e20         call       j___errno_location                          ; __errno_location, CODE XREF=canonicalize_filename_mode+62, canonicalize_filename_mode+74
0000000000004e25         xor        ebp, ebp
0000000000004e27         mov        dword [rax], 0x16
0000000000004e2d         jmp        loc_4ab0

                     loc_4e32:
0000000000004e32         call       j___errno_location                          ; __errno_location, CODE XREF=canonicalize_filename_mode+1079
0000000000004e37         cmp        dword [rsp+0x118+var_114], 0x2
0000000000004e3c         mov        r14, rax
0000000000004e3f         mov        edx, dword [rax]
0000000000004e41         jne        loc_4e4c

0000000000004e43         cmp        edx, 0xc
0000000000004e46         jne        loc_4a50

                     loc_4e4c:
0000000000004e4c         mov        r12, r14                                    ; CODE XREF=sub_4daa+151
0000000000004e4f         jmp        loc_4c00

                     loc_4e54:
0000000000004e54         mov        byte [rbp], 0x2f                            ; CODE XREF=canonicalize_filename_mode+1226
0000000000004e58         mov        r15, rax
0000000000004e5b         jmp        loc_4d69

                     loc_4e60:
0000000000004e60         call       j___errno_location                          ; __errno_location, CODE XREF=canonicalize_filename_mode+85
0000000000004e65         xor        ebp, ebp
0000000000004e67         mov        dword [rax], 0x2
0000000000004e6d         jmp        loc_4ab0

                     loc_4e72:
0000000000004e72         lea        rax, qword [r15-1]                          ; CODE XREF=canonicalize_filename_mode+1235
0000000000004e76         cmp        rbp, rax
0000000000004e79         jae        loc_4e82

0000000000004e7b         cmp        byte [r15-2], 0x2f
0000000000004e80         jne        loc_4e8d

                     loc_4e82:
0000000000004e82         mov        r15, rax                                    ; CODE XREF=sub_4daa+207
0000000000004e85         jmp        loc_4d69

                     loc_4e8a:
0000000000004e8a         mov        rax, r15                                    ; CODE XREF=sub_4daa+251

                     loc_4e8d:
0000000000004e8d         lea        r15, qword [rax-1]                          ; CODE XREF=sub_4daa+214
0000000000004e91         cmp        rbp, r15
0000000000004e94         je         loc_4d69

0000000000004e9a         cmp        byte [r15-1], 0x2f
0000000000004e9f         je         loc_4d69

0000000000004ea5         jmp        loc_4e8a

                     loc_4ea7:
0000000000004ea7         call       j___errno_location                          ; __errno_location, CODE XREF=canonicalize_filename_mode+442
0000000000004eac         mov        edx, 0x14
0000000000004eb1         mov        r12, rax
0000000000004eb4         jmp        loc_4b51

                     loc_4eb9:
0000000000004eb9         mov        r15, rax                                    ; CODE XREF=canonicalize_filename_mode+994
0000000000004ebc         jmp        loc_494b

                     loc_4ec1:
0000000000004ec1         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=canonicalize_filename_mode+564
                        ; endp
0000000000004ec6         align      16                                          ; End of unwind block (FDE at 0xd454)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdin_set_file_name:
0000000000004ed0         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0xd4a4), file_name
0000000000004ed7         ret
                        ; endp
0000000000004ed8         align      32                                          ; End of unwind block (FDE at 0xd4a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdin:
0000000000004ee0         push       r12                                         ; Begin of unwind block (FDE at 0xd4b8), DATA XREF=main+109
0000000000004ee2         push       rbp
0000000000004ee3         push       rbx
0000000000004ee4         mov        rbx, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5
0000000000004eeb         mov        rdi, rbx
0000000000004eee         call       freadahead                                  ; freadahead
0000000000004ef3         test       rax, rax
0000000000004ef6         jne        loc_4f98

0000000000004efc         mov        rdi, rbx
0000000000004eff         call       close_stream                                ; close_stream
0000000000004f04         test       eax, eax
0000000000004f06         jne        loc_4f38

0000000000004f08         pop        rbx
0000000000004f09         pop        rbp
0000000000004f0a         pop        r12
0000000000004f0c         jmp        close_stdout                                ; close_stdout
                        ; endp
0000000000004f11         align      8

                     loc_4f18:
0000000000004f18         call       rpl_fflush                                  ; rpl_fflush, CODE XREF=close_stdin+208
0000000000004f1d         test       eax, eax
0000000000004f1f         mov        rdi, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5
0000000000004f26         je         loc_4fb6

0000000000004f2c         call       close_stream                                ; close_stream
0000000000004f31         nop        dword [rax]

                     loc_4f38:
0000000000004f38         lea        rsi, qword [aErrorClosingFi]                ; argument "msgid" for method j_dcgettext, "error closing file", CODE XREF=close_stdin+38, close_stdin+221
0000000000004f3f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004f41         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004f46         call       j_dcgettext                                 ; dcgettext
0000000000004f4b         mov        rbx, qword [file_name]                      ; file_name
0000000000004f52         mov        r12, rax
0000000000004f55         call       j___errno_location                          ; __errno_location
0000000000004f5a         mov        rbp, rax
0000000000004f5d         test       rbx, rbx
0000000000004f60         je         loc_4fd0

0000000000004f62         mov        rdi, rbx
0000000000004f65         call       quotearg_colon                              ; quotearg_colon
0000000000004f6a         mov        esi, dword [rbp]                            ; argument "__errnum" for method j_error
0000000000004f6d         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000004f74         mov        rcx, rax
0000000000004f77         mov        r8, r12
0000000000004f7a         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000004f7c         xor        eax, eax
0000000000004f7e         call       j_error                                     ; error

                     loc_4f83:
0000000000004f83         call       close_stdout                                ; close_stdout, CODE XREF=close_stdin+261
0000000000004f88         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure
0000000000004f8e         call       j__exit                                     ; _exit
                        ; endp
0000000000004f93         align      8

                     loc_4f98:
0000000000004f98         xor        esi, esi                                    ; CODE XREF=close_stdin+22
0000000000004f9a         mov        rdi, rbx
0000000000004f9d         mov        edx, 0x1
0000000000004fa2         call       rpl_fseeko                                  ; rpl_fseeko
0000000000004fa7         test       eax, eax
0000000000004fa9         mov        rdi, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5
0000000000004fb0         je         loc_4f18

                     loc_4fb6:
0000000000004fb6         call       close_stream                                ; close_stream, CODE XREF=close_stdin+70
0000000000004fbb         test       eax, eax
0000000000004fbd         jne        loc_4f38

0000000000004fc3         pop        rbx
0000000000004fc4         pop        rbp
0000000000004fc5         pop        r12
0000000000004fc7         jmp        close_stdout                                ; close_stdout
                        ; endp
0000000000004fcc         align      16

                     loc_4fd0:
0000000000004fd0         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdin+128
0000000000004fd2         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0xca77
0000000000004fd9         mov        rcx, r12
0000000000004fdc         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000004fde         xor        eax, eax
0000000000004fe0         call       j_error                                     ; error
0000000000004fe5         jmp        loc_4f83
0000000000004fe7         align      16                                          ; End of unwind block (FDE at 0xd4b8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000004ff0         mov        qword [file_name_210140], rdi               ; Begin of unwind block (FDE at 0xd4f4), file_name_210140
0000000000004ff7         ret
                        ; endp
0000000000004ff8         align      4096                                        ; End of unwind block (FDE at 0xd4f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000005000         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0xd508), ignore_EPIPE
0000000000005007         ret
                        ; endp
0000000000005008         align      16                                          ; End of unwind block (FDE at 0xd508)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000005010         push       rbp                                         ; Begin of unwind block (FDE at 0xd51c), CODE XREF=close_stdin+44, close_stdin+163, close_stdin+231
0000000000005011         push       rbx
0000000000005012         sub        rsp, 0x8
0000000000005016         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000501d         call       close_stream                                ; close_stream
0000000000005022         test       eax, eax
0000000000005024         je         loc_503c

0000000000005026         call       j___errno_location                          ; __errno_location
000000000000502b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000005032         mov        rbx, rax
0000000000005035         je         loc_5053

0000000000005037         cmp        dword [rax], 0x20
000000000000503a         jne        loc_5053

                     loc_503c:
000000000000503c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000005043         call       close_stream                                ; close_stream
0000000000005048         test       eax, eax
000000000000504a         jne        loc_5092

000000000000504c         add        rsp, 0x8
0000000000005050         pop        rbx
0000000000005051         pop        rbp
0000000000005052         ret
                        ; endp

                     loc_5053:
0000000000005053         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
000000000000505a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000505c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005061         call       j_dcgettext                                 ; dcgettext
0000000000005066         mov        rdi, qword [file_name_210140]               ; file_name_210140
000000000000506d         mov        rbp, rax
0000000000005070         test       rdi, rdi
0000000000005073         je         loc_509d

0000000000005075         call       quotearg_colon                              ; quotearg_colon
000000000000507a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
000000000000507c         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000005083         mov        rcx, rax
0000000000005086         mov        r8, rbp
0000000000005089         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000508b         xor        eax, eax
000000000000508d         call       j_error                                     ; error

                     loc_5092:
0000000000005092         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000005098         call       j__exit                                     ; _exit
                        ; endp

                     loc_509d:
000000000000509d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
000000000000509f         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0xca77
00000000000050a6         mov        rcx, rax
00000000000050a9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000050ab         xor        eax, eax
00000000000050ad         call       j_error                                     ; error
00000000000050b2         jmp        loc_5092
00000000000050b4         align      64                                          ; End of unwind block (FDE at 0xd51c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dir_name:
00000000000050c0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xd54c), CODE XREF=do_link+1327, same_nameat.part.0+43, same_nameat.part.0+95
00000000000050c4         call       mdir_name                                   ; mdir_name
00000000000050c9         test       rax, rax
00000000000050cc         je         loc_50d3

00000000000050ce         add        rsp, 0x8
00000000000050d2         ret
                        ; endp

                     loc_50d3:
00000000000050d3         call       xalloc_die                                  ; xalloc_die, CODE XREF=dir_name+12
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_50d8:
00000000000050d8         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0xd54c)
                     dir_len:
00000000000050e0         push       rbp                                         ; Begin of unwind block (FDE at 0xd56c), CODE XREF=mdir_name+9
00000000000050e1         push       rbx
00000000000050e2         xor        ebp, ebp
00000000000050e4         mov        rbx, rdi
00000000000050e7         sub        rsp, 0x8
00000000000050eb         cmp        byte [rdi], 0x2f                            ; argument #1 for method last_component
00000000000050ee         sete       bpl
00000000000050f2         call       last_component                              ; last_component
00000000000050f7         mov        rcx, rax
00000000000050fa         sub        rcx, rbx
00000000000050fd         cmp        rcx, rbp
0000000000005100         jbe        loc_5130

0000000000005102         cmp        byte [rax-1], 0x2f
0000000000005106         lea        rdx, qword [rcx-1]
000000000000510a         je         loc_511e

000000000000510c         jmp        loc_5130
000000000000510e         align      16

                     loc_5110:
0000000000005110         cmp        byte [rbx+rdx-1], 0x2f                      ; CODE XREF=dir_len+65
0000000000005115         lea        rax, qword [rdx-1]
0000000000005119         jne        loc_5123

000000000000511b         mov        rdx, rax

                     loc_511e:
000000000000511e         cmp        rbp, rdx                                    ; CODE XREF=dir_len+42
0000000000005121         jne        loc_5110

                     loc_5123:
0000000000005123         add        rsp, 0x8                                    ; CODE XREF=dir_len+57
0000000000005127         mov        rax, rdx
000000000000512a         pop        rbx
000000000000512b         pop        rbp
000000000000512c         ret
                        ; endp
000000000000512d         align      16

                     loc_5130:
0000000000005130         add        rsp, 0x8                                    ; CODE XREF=dir_len+32, dir_len+44
0000000000005134         mov        rdx, rcx
0000000000005137         mov        rax, rdx
000000000000513a         pop        rbx
000000000000513b         pop        rbp
000000000000513c         ret
                        ; endp
000000000000513d         align      64                                          ; End of unwind block (FDE at 0xd56c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     mdir_name:
0000000000005140         push       rbp                                         ; Begin of unwind block (FDE at 0xd5a0), CODE XREF=dir_name+4
0000000000005141         push       rbx
0000000000005142         mov        rbp, rdi
0000000000005145         sub        rsp, 0x8
0000000000005149         call       dir_len                                     ; dir_len
000000000000514e         test       rax, rax
0000000000005151         mov        rbx, rax
0000000000005154         sete       al
0000000000005157         movzx      eax, al
000000000000515a         lea        rdi, qword [rbx+rax+1]                      ; argument "__size" for method j_malloc
000000000000515f         call       j_malloc                                    ; malloc
0000000000005164         test       rax, rax
0000000000005167         mov        rcx, rax
000000000000516a         je         loc_5186

000000000000516c         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
000000000000516f         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
0000000000005172         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000005175         call       j_memcpy                                    ; memcpy
000000000000517a         test       rbx, rbx
000000000000517d         mov        rcx, rax
0000000000005180         je         loc_5190

                     loc_5182:
0000000000005182         mov        byte [rcx+rbx], 0x0                         ; CODE XREF=mdir_name+88

                     loc_5186:
0000000000005186         add        rsp, 0x8                                    ; CODE XREF=mdir_name+42
000000000000518a         mov        rax, rcx
000000000000518d         pop        rbx
000000000000518e         pop        rbp
000000000000518f         ret
                        ; endp

                     loc_5190:
0000000000005190         mov        byte [rax], 0x2e                            ; CODE XREF=mdir_name+64
0000000000005193         mov        ebx, 0x1
0000000000005198         jmp        loc_5182
000000000000519a         align      32                                          ; End of unwind block (FDE at 0xd5a0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     last_component:
00000000000051a0         movzx      edx, byte [rdi]                             ; Begin of unwind block (FDE at 0xd5cc), CODE XREF=main+1216, samedir_template+10, set_simple_backup_suffix+35, backupfile_internal+56, backupfile_internal+1043, dir_len+18, strip_trailing_slashes+9, mfile_name_concat+23, same_nameat+30, same_nameat+41
00000000000051a3         mov        rax, rdi
00000000000051a6         cmp        dl, 0x2f
00000000000051a9         jne        loc_51bc

00000000000051ab         nop        dword [rax+rax]

                     loc_51b0:
00000000000051b0         add        rax, 0x1                                    ; CODE XREF=last_component+26
00000000000051b4         movzx      edx, byte [rax]
00000000000051b7         cmp        dl, 0x2f
00000000000051ba         je         loc_51b0

                     loc_51bc:
00000000000051bc         test       dl, dl                                      ; CODE XREF=last_component+9
00000000000051be         je         loc_51fa

00000000000051c0         mov        rcx, rax
00000000000051c3         xor        esi, esi
00000000000051c5         jmp        loc_51e5
00000000000051c7         align      16

                     loc_51d0:
00000000000051d0         test       sil, sil                                    ; CODE XREF=last_component+72
00000000000051d3         je         loc_51da

00000000000051d5         mov        rax, rcx
00000000000051d8         xor        esi, esi

                     loc_51da:
00000000000051da         add        rcx, 0x1                                    ; CODE XREF=last_component+51
00000000000051de         movzx      edx, byte [rcx]
00000000000051e1         test       dl, dl
00000000000051e3         je         loc_51fa

                     loc_51e5:
00000000000051e5         cmp        dl, 0x2f                                    ; CODE XREF=last_component+37, last_component+88
00000000000051e8         jne        loc_51d0

00000000000051ea         add        rcx, 0x1
00000000000051ee         movzx      edx, byte [rcx]
00000000000051f1         mov        esi, 0x1
00000000000051f6         test       dl, dl
00000000000051f8         jne        loc_51e5

                     loc_51fa:
00000000000051fa         ret                                                    ; CODE XREF=last_component+30, last_component+67
                        ; endp
00000000000051fc         align      512                                         ; End of unwind block (FDE at 0xd5cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base_len:
0000000000005200         push       rbx                                         ; Begin of unwind block (FDE at 0xd5e0), CODE XREF=backupfile_internal+237, backupfile_internal+1054, strip_trailing_slashes+27, mfile_name_concat+34, same_nameat+52, same_nameat+63
0000000000005201         mov        rbx, rdi
0000000000005204         call       j_strlen                                    ; strlen
0000000000005209         cmp        rax, 0x1
000000000000520d         jbe        loc_521a

000000000000520f         cmp        byte [rbx+rax-1], 0x2f
0000000000005214         lea        rdx, qword [rax-1]
0000000000005218         je         loc_5228

                     loc_521a:
000000000000521a         pop        rbx                                         ; CODE XREF=base_len+13
000000000000521b         ret
                        ; endp
000000000000521c         align      32

                     loc_5220:
0000000000005220         mov        rdx, rax                                    ; CODE XREF=base_len+55
0000000000005223         nop        dword [rax+rax]

                     loc_5228:
0000000000005228         cmp        rdx, 0x1                                    ; CODE XREF=base_len+24
000000000000522c         je         loc_5240

000000000000522e         cmp        byte [rbx+rdx-1], 0x2f
0000000000005233         lea        rax, qword [rdx-1]
0000000000005237         je         loc_5220

0000000000005239         mov        rax, rdx
000000000000523c         pop        rbx
000000000000523d         ret
                        ; endp
000000000000523e         align      64

                     loc_5240:
0000000000005240         mov        eax, 0x1                                    ; CODE XREF=base_len+44
0000000000005245         pop        rbx
0000000000005246         ret
                        ; endp
0000000000005247         align      16                                          ; End of unwind block (FDE at 0xd5e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     strip_trailing_slashes:
0000000000005250         push       rbp                                         ; Begin of unwind block (FDE at 0xd60c), CODE XREF=main+1243
0000000000005251         push       rbx
0000000000005252         mov        rbp, rdi
0000000000005255         sub        rsp, 0x8
0000000000005259         call       last_component                              ; last_component
000000000000525e         cmp        byte [rax], 0x0
0000000000005261         mov        rbx, rax
0000000000005264         cmove      rbx, rbp
0000000000005268         mov        rdi, rbx
000000000000526b         call       base_len                                    ; base_len
0000000000005270         add        rbx, rax
0000000000005273         cmp        byte [rbx], 0x0
0000000000005276         mov        byte [rbx], 0x0
0000000000005279         setne      al
000000000000527c         add        rsp, 0x8
0000000000005280         pop        rbx
0000000000005281         pop        rbp
0000000000005282         ret
                        ; endp
0000000000005283         align      16                                          ; End of unwind block (FDE at 0xd60c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_38: int64_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     record_file:
0000000000005290         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xd634), CODE XREF=do_link+179, canonicalize_filename_mode+1055
0000000000005293         je         loc_5310

0000000000005295         push       r13
0000000000005297         push       r12
0000000000005299         mov        r13, rdi
000000000000529c         push       rbp
000000000000529d         push       rbx
000000000000529e         mov        r12, rsi
00000000000052a1         mov        edi, 0x18                                   ; argument #1 for method xmalloc
00000000000052a6         mov        rbp, rdx
00000000000052a9         sub        rsp, 0x8
00000000000052ad         call       xmalloc                                     ; xmalloc
00000000000052b2         mov        rdi, r12
00000000000052b5         mov        rbx, rax
00000000000052b8         call       xstrdup                                     ; xstrdup
00000000000052bd         mov        qword [rbx], rax
00000000000052c0         mov        rax, qword [rbp+8]
00000000000052c4         mov        rsi, rbx                                    ; argument #2 for method hash_insert
00000000000052c7         mov        rdi, r13                                    ; argument #1 for method hash_insert
00000000000052ca         mov        qword [rbx+8], rax
00000000000052ce         mov        rax, qword [rbp]
00000000000052d2         mov        qword [rbx+0x10], rax
00000000000052d6         call       hash_insert                                 ; hash_insert
00000000000052db         test       rax, rax
00000000000052de         je         loc_5312

00000000000052e0         cmp        rbx, rax
00000000000052e3         je         loc_5300

00000000000052e5         add        rsp, 0x8
00000000000052e9         mov        rdi, rbx
00000000000052ec         pop        rbx
00000000000052ed         pop        rbp
00000000000052ee         pop        r12
00000000000052f0         pop        r13
00000000000052f2         jmp        triple_free                                 ; triple_free
                        ; endp
00000000000052f7         align      256

                     loc_5300:
0000000000005300         add        rsp, 0x8                                    ; CODE XREF=record_file+83
0000000000005304         pop        rbx
0000000000005305         pop        rbp
0000000000005306         pop        r12
0000000000005308         pop        r13
000000000000530a         ret
                        ; endp
000000000000530b         align      16

                     loc_5310:
0000000000005310         ret                                                    ; CODE XREF=record_file+3
                        ; endp

                     loc_5312:
0000000000005312         call       xalloc_die                                  ; xalloc_die, CODE XREF=record_file+78
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     sub_5317:
0000000000005317         nop        word [rax+rax]                              ; End of unwind block (FDE at 0xd634)
                     seen_file:
0000000000005320         sub        rsp, 0x28                                   ; Begin of unwind block (FDE at 0xd694), CODE XREF=do_link+1017, canonicalize_filename_mode+843
0000000000005324         mov        rax, qword [fs:0x28]
000000000000532d         mov        qword [rsp+0x28+var_10], rax
0000000000005332         xor        eax, eax
0000000000005334         test       rdi, rdi
0000000000005337         je         loc_535c

0000000000005339         mov        rax, qword [rdx+8]
000000000000533d         mov        qword [rsp+0x28+var_28], rsi
0000000000005341         mov        rsi, rsp                                    ; argument #2 for method hash_lookup
0000000000005344         mov        qword [rsp+0x28+var_20], rax
0000000000005349         mov        rax, qword [rdx]
000000000000534c         mov        qword [rsp+0x28+var_18], rax
0000000000005351         call       hash_lookup                                 ; hash_lookup
0000000000005356         test       rax, rax
0000000000005359         setne      al

                     loc_535c:
000000000000535c         mov        rcx, qword [rsp+0x28+var_10]                ; CODE XREF=seen_file+23
0000000000005361         xor        rcx, qword [fs:0x28]
000000000000536a         jne        loc_5371

000000000000536c         add        rsp, 0x28
0000000000005370         ret
                        ; endp

                     loc_5371:
0000000000005371         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=seen_file+74
                        ; endp
0000000000005376         align      128                                         ; End of unwind block (FDE at 0xd694)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     file_name_concat:
0000000000005380         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xd6b4), CODE XREF=main+1230
0000000000005384         call       mfile_name_concat                           ; mfile_name_concat
0000000000005389         test       rax, rax
000000000000538c         je         loc_5393

000000000000538e         add        rsp, 0x8
0000000000005392         ret
                        ; endp

                     loc_5393:
0000000000005393         call       xalloc_die                                  ; xalloc_die, CODE XREF=file_name_concat+12
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5398:
0000000000005398         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0xd6b4)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_39: int8_t, -57
        ;    var_48: int64_t, -72


                     mfile_name_concat:
00000000000053a0         push       r15                                         ; Begin of unwind block (FDE at 0xd6d4), CODE XREF=file_name_concat+4
00000000000053a2         push       r14
00000000000053a4         mov        r15, rdx
00000000000053a7         push       r13
00000000000053a9         push       r12
00000000000053ab         mov        r12, rdi
00000000000053ae         push       rbp
00000000000053af         push       rbx
00000000000053b0         mov        rbp, rsi
00000000000053b3         sub        rsp, 0x18
00000000000053b7         call       last_component                              ; last_component
00000000000053bc         mov        rbx, rax
00000000000053bf         mov        rdi, rax
00000000000053c2         call       base_len                                    ; base_len
00000000000053c7         sub        rbx, r12
00000000000053ca         mov        r13, rax
00000000000053cd         mov        rdi, rbp                                    ; argument "__s" for method j_strlen
00000000000053d0         add        rbx, rax
00000000000053d3         call       j_strlen                                    ; strlen
00000000000053d8         test       r13, r13
00000000000053db         mov        r14, rax
00000000000053de         je         loc_5410

00000000000053e0         cmp        byte [r12+rbx-1], 0x2f
00000000000053e6         je         loc_5490

00000000000053ec         xor        eax, eax
00000000000053ee         cmp        byte [rbp], 0x2f
00000000000053f2         mov        edx, 0x0
00000000000053f7         setne      al
00000000000053fa         mov        qword [rsp+0x48+var_48], rax
00000000000053fe         mov        eax, 0x2f
0000000000005403         cmove      eax, edx
0000000000005406         mov        byte [rsp+0x48+var_39], al
000000000000540a         jmp        loc_542e
000000000000540c         align      16

                     loc_5410:
0000000000005410         xor        eax, eax                                    ; CODE XREF=mfile_name_concat+62
0000000000005412         cmp        byte [rbp], 0x2f
0000000000005416         mov        edx, 0x0
000000000000541b         sete       al
000000000000541e         mov        qword [rsp+0x48+var_48], rax
0000000000005422         mov        eax, 0x2e
0000000000005427         cmovne     eax, edx
000000000000542a         mov        byte [rsp+0x48+var_39], al

                     loc_542e:
000000000000542e         lea        rdi, qword [rbx+r14+1]                      ; CODE XREF=mfile_name_concat+106, mfile_name_concat+253
0000000000005433         add        rdi, qword [rsp+0x48+var_48]                ; argument "__size" for method j_malloc
0000000000005437         call       j_malloc                                    ; malloc
000000000000543c         test       rax, rax
000000000000543f         mov        r13, rax
0000000000005442         je         loc_5476

0000000000005444         mov        rdi, rax                                    ; argument "__dest" for method j_mempcpy
0000000000005447         mov        rdx, rbx                                    ; argument "__n" for method j_mempcpy
000000000000544a         mov        rsi, r12                                    ; argument "__src" for method j_mempcpy
000000000000544d         call       j_mempcpy                                   ; mempcpy
0000000000005452         movzx      ecx, byte [rsp+0x48+var_39]
0000000000005457         mov        rdi, qword [rsp+0x48+var_48]
000000000000545b         add        rdi, rax
000000000000545e         test       r15, r15
0000000000005461         mov        byte [rax], cl
0000000000005463         je         loc_5468

0000000000005465         mov        qword [r15], rdi

                     loc_5468:
0000000000005468         mov        rdx, r14                                    ; argument "__n" for method j_mempcpy, CODE XREF=mfile_name_concat+195
000000000000546b         mov        rsi, rbp                                    ; argument "__src" for method j_mempcpy
000000000000546e         call       j_mempcpy                                   ; mempcpy
0000000000005473         mov        byte [rax], 0x0

                     loc_5476:
0000000000005476         add        rsp, 0x18                                   ; CODE XREF=mfile_name_concat+162
000000000000547a         mov        rax, r13
000000000000547d         pop        rbx
000000000000547e         pop        rbp
000000000000547f         pop        r12
0000000000005481         pop        r13
0000000000005483         pop        r14
0000000000005485         pop        r15
0000000000005487         ret
                        ; endp
0000000000005488         align      16

                     loc_5490:
0000000000005490         mov        qword [rsp+0x48+var_48], 0x0                ; CODE XREF=mfile_name_concat+70
0000000000005498         mov        byte [rsp+0x48+var_39], 0x0
000000000000549d         jmp        loc_542e
000000000000549f         align      32                                          ; End of unwind block (FDE at 0xd6d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     next_prime:
00000000000054a0         cmp        rdi, 0xa                                    ; Begin of unwind block (FDE at 0xd724), CODE XREF=hash_initialize+123, hash_rehash+123
00000000000054a4         mov        eax, 0xa
00000000000054a9         movabs     r9, 0xaaaaaaaaaaaaaaab
00000000000054b3         cmovb      rdi, rax
00000000000054b7         or         rdi, 0x1
00000000000054bb         cmp        rdi, 0xffffffffffffffff
00000000000054bf         je         loc_552f

00000000000054c1         nop        dword [rax]

                     loc_54c8:
00000000000054c8         mov        rax, rdi                                    ; CODE XREF=next_prime+141
00000000000054cb         mov        rcx, rdi
00000000000054ce         mul        r9
00000000000054d1         mov        rax, rdx
00000000000054d4         shr        rax, 0x1
00000000000054d7         lea        rax, qword [rax+rax*2]
00000000000054db         sub        rcx, rax
00000000000054de         cmp        rdi, 0x9
00000000000054e2         mov        rax, rcx
00000000000054e5         jbe        loc_5520

00000000000054e7         test       rcx, rcx
00000000000054ea         je         loc_5525

00000000000054ec         mov        r8d, 0x10
00000000000054f2         mov        esi, 0x9
00000000000054f7         mov        ecx, 0x3
00000000000054fc         jmp        loc_5509
00000000000054fe         align      256

                     loc_5500:
0000000000005500         add        r8, 0x8                                     ; CODE XREF=next_prime+126
0000000000005504         test       rdx, rdx
0000000000005507         je         loc_5525

                     loc_5509:
0000000000005509         add        rcx, 0x2                                    ; CODE XREF=next_prime+92
000000000000550d         xor        edx, edx
000000000000550f         mov        rax, rdi
0000000000005512         div        rcx
0000000000005515         add        rsi, r8
0000000000005518         cmp        rsi, rdi
000000000000551b         mov        rax, rdx
000000000000551e         jb         loc_5500

                     loc_5520:
0000000000005520         test       rax, rax                                    ; CODE XREF=next_prime+69
0000000000005523         jne        loc_552f

                     loc_5525:
0000000000005525         add        rdi, 0x2                                    ; CODE XREF=next_prime+74, next_prime+103
0000000000005529         cmp        rdi, 0xffffffffffffffff
000000000000552d         jne        loc_54c8

                     loc_552f:
000000000000552f         mov        rax, rdi                                    ; CODE XREF=next_prime+31, next_prime+131
0000000000005532         ret
                        ; endp
0000000000005533         align      64                                          ; End of unwind block (FDE at 0xd724)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     raw_hasher:
0000000000005540         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0xd738), DATA XREF=hash_initialize+4
0000000000005543         xor        edx, edx
0000000000005545         ror        rax, 0x3
0000000000005549         div        rsi
000000000000554c         mov        rax, rdx
000000000000554f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     raw_comparator:
0000000000005550         cmp        rdi, rsi                                    ; End of unwind block (FDE at 0xd738), Begin of unwind block (FDE at 0xd74c), DATA XREF=hash_initialize+48
0000000000005553         sete       al
0000000000005556         ret
                        ; endp
0000000000005557         align      32                                          ; End of unwind block (FDE at 0xd74c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     safe_hasher:
0000000000005560         push       rbx                                         ; Begin of unwind block (FDE at 0xd760), CODE XREF=hash_find_entry+20, transfer_entries+101, transfer_entries+175, hash_lookup+10, hash_get_next+12
0000000000005561         mov        rbx, rdi
0000000000005564         mov        rdi, rsi
0000000000005567         mov        rsi, qword [rbx+0x10]
000000000000556b         call       qword [rbx+0x30]
000000000000556e         cmp        qword [rbx+0x10], rax
0000000000005572         jbe        loc_557d

0000000000005574         shl        rax, 0x4
0000000000005578         add        rax, qword [rbx]
000000000000557b         pop        rbx
000000000000557c         ret
                        ; endp

                     loc_557d:
000000000000557d         call       j_abort                                     ; abort, CODE XREF=safe_hasher+18
                        ; endp
0000000000005582         align      16                                          ; End of unwind block (FDE at 0xd760)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_find_entry:
0000000000005590         push       r14                                         ; Begin of unwind block (FDE at 0xd77c), CODE XREF=hash_insert_if_absent+52, hash_insert_if_absent+463, hash_delete+35
0000000000005592         push       r13
0000000000005594         mov        r14, rdx
0000000000005597         push       r12
0000000000005599         push       rbp
000000000000559a         mov        r12, rdi
000000000000559d         push       rbx
000000000000559e         mov        rbp, rsi
00000000000055a1         mov        r13d, ecx
00000000000055a4         call       safe_hasher                                 ; safe_hasher
00000000000055a9         mov        qword [r14], rax
00000000000055ac         mov        rsi, qword [rax]
00000000000055af         test       rsi, rsi
00000000000055b2         je         loc_56a0

00000000000055b8         cmp        rsi, rbp
00000000000055bb         mov        rbx, rax
00000000000055be         je         loc_5653

00000000000055c4         mov        rdi, rbp
00000000000055c7         call       qword [r12+0x38]
00000000000055cc         test       al, al
00000000000055ce         jne        loc_5650

00000000000055d4         mov        rax, qword [rbx+8]
00000000000055d8         test       rax, rax
00000000000055db         je         loc_56a0

00000000000055e1         mov        rsi, qword [rax]
00000000000055e4         cmp        rbp, rsi
00000000000055e7         jne        loc_5609

00000000000055e9         jmp        loc_561c
00000000000055eb         align      16

                     loc_55f0:
00000000000055f0         mov        rbx, qword [rbx+8]                          ; CODE XREF=hash_find_entry+131
00000000000055f4         mov        rax, qword [rbx+8]
00000000000055f8         test       rax, rax
00000000000055fb         je         loc_56a0

0000000000005601         mov        rsi, qword [rax]
0000000000005604         cmp        rsi, rbp
0000000000005607         je         loc_561c

                     loc_5609:
0000000000005609         mov        rdi, rbp                                    ; CODE XREF=hash_find_entry+87
000000000000560c         call       qword [r12+0x38]
0000000000005611         test       al, al
0000000000005613         je         loc_55f0

0000000000005615         mov        rax, qword [rbx+8]
0000000000005619         mov        rsi, qword [rax]

                     loc_561c:
000000000000561c         test       r13b, r13b                                  ; CODE XREF=hash_find_entry+89, hash_find_entry+119
000000000000561f         je         loc_563e

0000000000005621         mov        rdx, qword [rax+8]
0000000000005625         mov        qword [rbx+8], rdx
0000000000005629         mov        qword [rax], 0x0
0000000000005630         mov        rdx, qword [r12+0x48]
0000000000005635         mov        qword [rax+8], rdx
0000000000005639         mov        qword [r12+0x48], rax

                     loc_563e:
000000000000563e         pop        rbx                                         ; CODE XREF=hash_find_entry+143, hash_find_entry+198, hash_find_entry+263
000000000000563f         mov        rax, rsi
0000000000005642         pop        rbp
0000000000005643         pop        r12
0000000000005645         pop        r13
0000000000005647         pop        r14
0000000000005649         ret
                        ; endp
000000000000564a         align      16

                     loc_5650:
0000000000005650         mov        rsi, qword [rbx]                            ; CODE XREF=hash_find_entry+62

                     loc_5653:
0000000000005653         test       r13b, r13b                                  ; CODE XREF=hash_find_entry+46
0000000000005656         je         loc_563e

0000000000005658         mov        rax, qword [rbx+8]
000000000000565c         test       rax, rax
000000000000565f         je         loc_5690

0000000000005661         movdqu     xmm0, xmmword [rax]
0000000000005665         movups     xmmword [rbx], xmm0
0000000000005668         mov        qword [rax], 0x0
000000000000566f         mov        rdx, qword [r12+0x48]
0000000000005674         mov        qword [rax+8], rdx
0000000000005678         mov        qword [r12+0x48], rax
000000000000567d         mov        rax, rsi
0000000000005680         pop        rbx
0000000000005681         pop        rbp
0000000000005682         pop        r12
0000000000005684         pop        r13
0000000000005686         pop        r14
0000000000005688         ret
                        ; endp
0000000000005689         align      16

                     loc_5690:
0000000000005690         mov        qword [rbx], 0x0                            ; CODE XREF=hash_find_entry+207
0000000000005697         jmp        loc_563e
0000000000005699         align      32

                     loc_56a0:
00000000000056a0         xor        esi, esi                                    ; CODE XREF=hash_find_entry+34, hash_find_entry+75, hash_find_entry+107
00000000000056a2         pop        rbx
00000000000056a3         mov        rax, rsi
00000000000056a6         pop        rbp
00000000000056a7         pop        r12
00000000000056a9         pop        r13
00000000000056ab         pop        r14
00000000000056ad         ret
                        ; endp
00000000000056ae         align      16                                          ; End of unwind block (FDE at 0xd77c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     check_tuning.isra.0:
00000000000056b0         mov        rdx, qword [rdi]                            ; Begin of unwind block (FDE at 0xd7dc), CODE XREF=hash_initialize+96, hash_initialize+283, hash_insert_if_absent+324, hash_delete+165
00000000000056b3         lea        rcx, qword [default_tuning]                 ; default_tuning
00000000000056ba         mov        eax, 0x1
00000000000056bf         cmp        rdx, rcx
00000000000056c2         je         loc_5725

00000000000056c4         movss      xmm0, dword [rdx+8]
00000000000056c9         ucomiss    xmm0, dword [float_c0b4]                    ; float_c0b4
00000000000056d0         jbe        loc_5720

00000000000056d2         movss      xmm1, dword [float_c0b8]                    ; float_c0b8
00000000000056da         ucomiss    xmm1, xmm0
00000000000056dd         jbe        loc_5720

00000000000056df         movss      xmm1, dword [rdx+0xc]
00000000000056e4         ucomiss    xmm1, dword [float_c0bc]                    ; float_c0bc
00000000000056eb         jbe        loc_5720

00000000000056ed         movss      xmm1, dword [rdx]
00000000000056f1         ucomiss    xmm1, dword [float_c0c0]                    ; float_c0c0
00000000000056f8         jb         loc_5720

00000000000056fa         addss      xmm1, dword [float_c0b4]                    ; float_c0b4
0000000000005702         movss      xmm2, dword [rdx+4]
0000000000005707         ucomiss    xmm2, xmm1
000000000000570a         jbe        loc_5720

000000000000570c         movss      xmm3, dword [float_c0c4]                    ; float_c0c4
0000000000005714         ucomiss    xmm3, xmm2
0000000000005717         jb         loc_5720

0000000000005719         ucomiss    xmm0, xmm1
000000000000571c         ja         loc_5725

000000000000571e         nop

                     loc_5720:
0000000000005720         mov        qword [rdi], rcx                            ; CODE XREF=check_tuning.isra.0+32, check_tuning.isra.0+45, check_tuning.isra.0+59, check_tuning.isra.0+72, check_tuning.isra.0+90, check_tuning.isra.0+103
0000000000005723         xor        eax, eax

                     loc_5725:
0000000000005725         ret                                                    ; CODE XREF=check_tuning.isra.0+18, check_tuning.isra.0+108
                        ; endp
0000000000005727         align      16                                          ; End of unwind block (FDE at 0xd7dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     transfer_entries:
0000000000005730         push       r15                                         ; Begin of unwind block (FDE at 0xd7f0), CODE XREF=hash_rehash+303, hash_rehash+338, hash_rehash+359
0000000000005732         push       r14
0000000000005734         push       r13
0000000000005736         push       r12
0000000000005738         push       rbp
0000000000005739         push       rbx
000000000000573a         sub        rsp, 0x8
000000000000573e         mov        r12, qword [rsi]
0000000000005741         cmp        r12, qword [rsi+8]
0000000000005745         jae        loc_5828

000000000000574b         mov        rbp, rdi
000000000000574e         mov        r13, rsi
0000000000005751         mov        r14d, edx
0000000000005754         nop        dword [rax]

                     loc_5758:
0000000000005758         mov        r15, qword [r12]                            ; CODE XREF=transfer_entries+242
000000000000575c         test       r15, r15
000000000000575f         je         loc_581a

0000000000005765         mov        rbx, qword [r12+8]
000000000000576a         test       rbx, rbx
000000000000576d         jne        loc_578c

000000000000576f         jmp        loc_57cb
0000000000005771         align      8

                     loc_5778:
0000000000005778         mov        rcx, qword [rax+8]                          ; CODE XREF=transfer_entries+114
000000000000577c         test       rdx, rdx
000000000000577f         mov        qword [rbx+8], rcx
0000000000005783         mov        qword [rax+8], rbx
0000000000005787         mov        rbx, rdx
000000000000578a         je         loc_57c7

                     loc_578c:
000000000000578c         mov        r15, qword [rbx]                            ; CODE XREF=transfer_entries+61, transfer_entries+149
000000000000578f         mov        rdi, rbp
0000000000005792         mov        rsi, r15
0000000000005795         call       safe_hasher                                 ; safe_hasher
000000000000579a         cmp        qword [rax], 0x0
000000000000579e         mov        rdx, qword [rbx+8]
00000000000057a2         jne        loc_5778

00000000000057a4         mov        qword [rax], r15
00000000000057a7         add        qword [rbp+0x18], 0x1
00000000000057ac         test       rdx, rdx
00000000000057af         mov        qword [rbx], 0x0
00000000000057b6         mov        rax, qword [rbp+0x48]
00000000000057ba         mov        qword [rbx+8], rax
00000000000057be         mov        qword [rbp+0x48], rbx
00000000000057c2         mov        rbx, rdx
00000000000057c5         jne        loc_578c

                     loc_57c7:
00000000000057c7         mov        r15, qword [r12]                            ; CODE XREF=transfer_entries+90

                     loc_57cb:
00000000000057cb         test       r14b, r14b                                  ; CODE XREF=transfer_entries+63
00000000000057ce         mov        qword [r12+8], 0x0
00000000000057d7         jne        loc_581a

00000000000057d9         mov        rsi, r15
00000000000057dc         mov        rdi, rbp
00000000000057df         call       safe_hasher                                 ; safe_hasher
00000000000057e4         cmp        qword [rax], 0x0
00000000000057e8         mov        rbx, rax
00000000000057eb         je         loc_5840

00000000000057ed         mov        rax, qword [rbp+0x48]
00000000000057f1         test       rax, rax
00000000000057f4         je         loc_5850

00000000000057f6         mov        rdx, qword [rax+8]
00000000000057fa         mov        qword [rbp+0x48], rdx

                     loc_57fe:
00000000000057fe         mov        rdx, qword [rbx+8]                          ; CODE XREF=transfer_entries+301
0000000000005802         mov        qword [rax], r15
0000000000005805         mov        qword [rax+8], rdx
0000000000005809         mov        qword [rbx+8], rax

                     loc_580d:
000000000000580d         mov        qword [r12], 0x0                            ; CODE XREF=transfer_entries+280
0000000000005815         sub        qword [r13+0x18], 0x1

                     loc_581a:
000000000000581a         add        r12, 0x10                                   ; CODE XREF=transfer_entries+47, transfer_entries+167
000000000000581e         cmp        qword [r13+8], r12
0000000000005822         ja         loc_5758

                     loc_5828:
0000000000005828         add        rsp, 0x8                                    ; CODE XREF=transfer_entries+21
000000000000582c         mov        eax, 0x1
0000000000005831         pop        rbx
0000000000005832         pop        rbp
0000000000005833         pop        r12
0000000000005835         pop        r13
0000000000005837         pop        r14
0000000000005839         pop        r15
000000000000583b         ret
                        ; endp
000000000000583c         align      64

                     loc_5840:
0000000000005840         mov        qword [rax], r15                            ; CODE XREF=transfer_entries+187
0000000000005843         add        qword [rbp+0x18], 0x1
0000000000005848         jmp        loc_580d
000000000000584a         align      16

                     loc_5850:
0000000000005850         mov        edi, 0x10                                   ; argument "__size" for method j_malloc, CODE XREF=transfer_entries+196
0000000000005855         call       j_malloc                                    ; malloc
000000000000585a         test       rax, rax
000000000000585d         jne        loc_57fe

000000000000585f         add        rsp, 0x8
0000000000005863         xor        eax, eax
0000000000005865         pop        rbx
0000000000005866         pop        rbp
0000000000005867         pop        r12
0000000000005869         pop        r13
000000000000586b         pop        r14
000000000000586d         pop        r15
000000000000586f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_buckets:
0000000000005870         mov        rax, qword [rdi+0x10]                       ; End of unwind block (FDE at 0xd7f0), Begin of unwind block (FDE at 0xd850)
0000000000005874         ret
                        ; endp
0000000000005875         align      128                                         ; End of unwind block (FDE at 0xd850)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_buckets_used:
0000000000005880         mov        rax, qword [rdi+0x18]                       ; Begin of unwind block (FDE at 0xd864)
0000000000005884         ret
                        ; endp
0000000000005885         align      16                                          ; End of unwind block (FDE at 0xd864)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_entries:
0000000000005890         mov        rax, qword [rdi+0x20]                       ; Begin of unwind block (FDE at 0xd878)
0000000000005894         ret
                        ; endp
0000000000005895         align      32                                          ; End of unwind block (FDE at 0xd878)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_max_bucket_length:
00000000000058a0         mov        rsi, qword [rdi]                            ; Begin of unwind block (FDE at 0xd88c)
00000000000058a3         mov        rdi, qword [rdi+8]
00000000000058a7         xor        eax, eax
00000000000058a9         cmp        rsi, rdi
00000000000058ac         jae        loc_58e7

00000000000058ae         nop

                     loc_58b0:
00000000000058b0         cmp        qword [rsi], 0x0                            ; CODE XREF=hash_get_max_bucket_length+67
00000000000058b4         je         loc_58dc

00000000000058b6         mov        rdx, qword [rsi+8]
00000000000058ba         mov        ecx, 0x1
00000000000058bf         test       rdx, rdx
00000000000058c2         je         loc_58d5

00000000000058c4         nop        dword [rax]

                     loc_58c8:
00000000000058c8         mov        rdx, qword [rdx+8]                          ; CODE XREF=hash_get_max_bucket_length+51
00000000000058cc         add        rcx, 0x1
00000000000058d0         test       rdx, rdx
00000000000058d3         jne        loc_58c8

                     loc_58d5:
00000000000058d5         cmp        rax, rcx                                    ; CODE XREF=hash_get_max_bucket_length+34
00000000000058d8         cmovb      rax, rcx

                     loc_58dc:
00000000000058dc         add        rsi, 0x10                                   ; CODE XREF=hash_get_max_bucket_length+20
00000000000058e0         cmp        rsi, rdi
00000000000058e3         jb         loc_58b0

00000000000058e5         ret
                        ; endp

                     loc_58e7:
00000000000058e7         ret                                                    ; CODE XREF=hash_get_max_bucket_length+12
                        ; endp
00000000000058e9         align      16                                          ; End of unwind block (FDE at 0xd88c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_table_ok:
00000000000058f0         mov        rcx, qword [rdi]                            ; Begin of unwind block (FDE at 0xd8a0)
00000000000058f3         mov        r8, qword [rdi+8]
00000000000058f7         xor        edx, edx
00000000000058f9         xor        esi, esi
00000000000058fb         cmp        rcx, r8
00000000000058fe         jae        loc_5936

                     loc_5900:
0000000000005900         cmp        qword [rcx], 0x0                            ; CODE XREF=hash_table_ok+68
0000000000005904         je         loc_592d

0000000000005906         mov        rax, qword [rcx+8]
000000000000590a         add        rsi, 0x1
000000000000590e         add        rdx, 0x1
0000000000005912         test       rax, rax
0000000000005915         je         loc_592d

0000000000005917         nop        word [rax+rax]

                     loc_5920:
0000000000005920         mov        rax, qword [rax+8]                          ; CODE XREF=hash_table_ok+59
0000000000005924         add        rdx, 0x1
0000000000005928         test       rax, rax
000000000000592b         jne        loc_5920

                     loc_592d:
000000000000592d         add        rcx, 0x10                                   ; CODE XREF=hash_table_ok+20, hash_table_ok+37
0000000000005931         cmp        rcx, r8
0000000000005934         jb         loc_5900

                     loc_5936:
0000000000005936         xor        eax, eax                                    ; CODE XREF=hash_table_ok+14
0000000000005938         cmp        qword [rdi+0x18], rsi
000000000000593c         je         loc_5940

000000000000593e         ret
                        ; endp

                     loc_5940:
0000000000005940         cmp        qword [rdi+0x20], rdx                       ; CODE XREF=hash_table_ok+76
0000000000005944         sete       al
0000000000005947         ret
                        ; endp
0000000000005948         align      16                                          ; End of unwind block (FDE at 0xd8a0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_print_statistics:
0000000000005950         push       r13                                         ; Begin of unwind block (FDE at 0xd8b4)
0000000000005952         push       r12
0000000000005954         mov        r12, rsi
0000000000005957         push       rbp
0000000000005958         push       rbx
0000000000005959         xor        ebx, ebx
000000000000595b         sub        rsp, 0x8
000000000000595f         mov        rsi, qword [rdi]
0000000000005962         mov        rcx, qword [rdi+0x20]
0000000000005966         mov        rbp, qword [rdi+0x10]
000000000000596a         mov        r13, qword [rdi+0x18]
000000000000596e         mov        rdi, qword [rdi+8]
0000000000005972         cmp        rsi, rdi
0000000000005975         jae        loc_59b5

0000000000005977         nop        word [rax+rax]

                     loc_5980:
0000000000005980         cmp        qword [rsi], 0x0                            ; CODE XREF=hash_print_statistics+99
0000000000005984         je         loc_59ac

0000000000005986         mov        rax, qword [rsi+8]
000000000000598a         mov        edx, 0x1
000000000000598f         test       rax, rax
0000000000005992         je         loc_59a5

0000000000005994         nop        dword [rax]

                     loc_5998:
0000000000005998         mov        rax, qword [rax+8]                          ; CODE XREF=hash_print_statistics+83
000000000000599c         add        rdx, 0x1
00000000000059a0         test       rax, rax
00000000000059a3         jne        loc_5998

                     loc_59a5:
00000000000059a5         cmp        rbx, rdx                                    ; CODE XREF=hash_print_statistics+66
00000000000059a8         cmovb      rbx, rdx

                     loc_59ac:
00000000000059ac         add        rsi, 0x10                                   ; CODE XREF=hash_print_statistics+52
00000000000059b0         cmp        rsi, rdi
00000000000059b3         jb         loc_5980

                     loc_59b5:
00000000000059b5         lea        rdx, qword [aEntriesLun]                    ; "# entries:         %lu\\n", CODE XREF=hash_print_statistics+37
00000000000059bc         mov        esi, 0x1
00000000000059c1         mov        rdi, r12
00000000000059c4         xor        eax, eax
00000000000059c6         call       j___fprintf_chk                             ; __fprintf_chk
00000000000059cb         lea        rdx, qword [aBucketsLun]                    ; "# buckets:         %lu\\n"
00000000000059d2         xor        eax, eax
00000000000059d4         mov        rcx, rbp
00000000000059d7         mov        esi, 0x1
00000000000059dc         mov        rdi, r12
00000000000059df         call       j___fprintf_chk                             ; __fprintf_chk
00000000000059e4         test       r13, r13
00000000000059e7         js         loc_5a50

00000000000059e9         pxor       xmm0, xmm0
00000000000059ed         test       rbp, rbp
00000000000059f0         cvtsi2sd   xmm0, r13
00000000000059f5         mulsd      xmm0, qword [float_c0d0+8]                  ; 0xc0d8
00000000000059fd         js         loc_5a79

                     loc_59ff:
00000000000059ff         pxor       xmm1, xmm1                                  ; CODE XREF=hash_print_statistics+295
0000000000005a03         cvtsi2sd   xmm1, rbp

                     loc_5a08:
0000000000005a08         divsd      xmm0, xmm1                                  ; CODE XREF=hash_print_statistics+322
0000000000005a0c         lea        rdx, qword [aBucketsUsedLu2]                ; "# buckets used:    %lu (%.2f%%)\\n"
0000000000005a13         mov        rcx, r13
0000000000005a16         mov        rdi, r12
0000000000005a19         mov        esi, 0x1
0000000000005a1e         mov        eax, 0x1
0000000000005a23         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005a28         add        rsp, 0x8
0000000000005a2c         mov        rcx, rbx
0000000000005a2f         mov        rdi, r12
0000000000005a32         pop        rbx
0000000000005a33         pop        rbp
0000000000005a34         pop        r12
0000000000005a36         pop        r13
0000000000005a38         lea        rdx, qword [aMaxBucketLengt]                ; "max bucket length: %lu\\n"
0000000000005a3f         mov        esi, 0x1
0000000000005a44         xor        eax, eax
0000000000005a46         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005a4b         align      16

                     loc_5a50:
0000000000005a50         mov        rax, r13                                    ; CODE XREF=hash_print_statistics+151
0000000000005a53         mov        rdx, r13
0000000000005a56         pxor       xmm0, xmm0
0000000000005a5a         shr        rax, 0x1
0000000000005a5d         and        edx, 0x1
0000000000005a60         or         rax, rdx
0000000000005a63         test       rbp, rbp
0000000000005a66         cvtsi2sd   xmm0, rax
0000000000005a6b         addsd      xmm0, xmm0
0000000000005a6f         mulsd      xmm0, qword [float_c0d0+8]                  ; 0xc0d8
0000000000005a77         jns        loc_59ff

                     loc_5a79:
0000000000005a79         mov        rax, rbp                                    ; CODE XREF=hash_print_statistics+173
0000000000005a7c         pxor       xmm1, xmm1
0000000000005a80         shr        rax, 0x1
0000000000005a83         and        ebp, 0x1
0000000000005a86         or         rax, rbp
0000000000005a89         cvtsi2sd   xmm1, rax
0000000000005a8e         addsd      xmm1, xmm1
0000000000005a92         jmp        loc_5a08
0000000000005a97         align      32                                          ; End of unwind block (FDE at 0xd8b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_lookup:
0000000000005aa0         push       r12                                         ; Begin of unwind block (FDE at 0xd8f0), CODE XREF=seen_file+49
0000000000005aa2         push       rbp
0000000000005aa3         mov        r12, rdi
0000000000005aa6         push       rbx
0000000000005aa7         mov        rbp, rsi
0000000000005aaa         call       safe_hasher                                 ; safe_hasher
0000000000005aaf         mov        rsi, qword [rax]
0000000000005ab2         test       rsi, rsi
0000000000005ab5         je         loc_5add

0000000000005ab7         mov        rbx, rax
0000000000005aba         jmp        loc_5ac3
0000000000005abc         align      64

                     loc_5ac0:
0000000000005ac0         mov        rsi, qword [rbx]                            ; CODE XREF=hash_lookup+59

                     loc_5ac3:
0000000000005ac3         cmp        rsi, rbp                                    ; CODE XREF=hash_lookup+26
0000000000005ac6         je         loc_5adf

0000000000005ac8         mov        rdi, rbp
0000000000005acb         call       qword [r12+0x38]
0000000000005ad0         test       al, al
0000000000005ad2         jne        loc_5af0

0000000000005ad4         mov        rbx, qword [rbx+8]
0000000000005ad8         test       rbx, rbx
0000000000005adb         jne        loc_5ac0

                     loc_5add:
0000000000005add         xor        esi, esi                                    ; CODE XREF=hash_lookup+21

                     loc_5adf:
0000000000005adf         pop        rbx                                         ; CODE XREF=hash_lookup+38
0000000000005ae0         mov        rax, rsi
0000000000005ae3         pop        rbp
0000000000005ae4         pop        r12
0000000000005ae6         ret
                        ; endp
0000000000005ae7         align      16

                     loc_5af0:
0000000000005af0         mov        rsi, qword [rbx]                            ; CODE XREF=hash_lookup+50
0000000000005af3         pop        rbx
0000000000005af4         pop        rbp
0000000000005af5         mov        rax, rsi
0000000000005af8         pop        r12
0000000000005afa         ret
                        ; endp
0000000000005afb         align      256                                         ; End of unwind block (FDE at 0xd8f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_first:
0000000000005b00         cmp        qword [rdi+0x20], 0x0                       ; Begin of unwind block (FDE at 0xd928)
0000000000005b05         je         loc_5b33

0000000000005b07         mov        rdx, qword [rdi]
0000000000005b0a         mov        rcx, qword [rdi+8]
0000000000005b0e         cmp        rdx, rcx
0000000000005b11         jae        loc_5b38

0000000000005b13         mov        rax, qword [rdx]
0000000000005b16         test       rax, rax
0000000000005b19         jne        loc_5b36

0000000000005b1b         nop        dword [rax+rax]

                     loc_5b20:
0000000000005b20         add        rdx, 0x10                                   ; CODE XREF=hash_get_first+47
0000000000005b24         cmp        rdx, rcx
0000000000005b27         jae        loc_5b38

0000000000005b29         mov        rax, qword [rdx]
0000000000005b2c         test       rax, rax
0000000000005b2f         je         loc_5b20

0000000000005b31         ret
                        ; endp

                     loc_5b33:
0000000000005b33         xor        eax, eax                                    ; CODE XREF=hash_get_first+5
0000000000005b35         ret
                        ; endp

                     loc_5b36:
0000000000005b36         ret                                                    ; CODE XREF=hash_get_first+25
                        ; endp

                     loc_5b38:
0000000000005b38         sub        rsp, 0x8                                    ; CODE XREF=hash_get_first+17, hash_get_first+39
0000000000005b3c         call       j_abort                                     ; abort
                        ; endp
0000000000005b41         align      16                                          ; End of unwind block (FDE at 0xd928)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_next:
0000000000005b50         push       rbp                                         ; Begin of unwind block (FDE at 0xd93c)
0000000000005b51         push       rbx
0000000000005b52         mov        rbp, rdi
0000000000005b55         mov        rbx, rsi
0000000000005b58         sub        rsp, 0x8
0000000000005b5c         call       safe_hasher                                 ; safe_hasher
0000000000005b61         mov        rdx, rax
0000000000005b64         mov        rcx, rax
0000000000005b67         mov        rax, qword [rdx]
0000000000005b6a         mov        rdx, qword [rdx+8]
0000000000005b6e         cmp        rax, rbx
0000000000005b71         je         loc_5b89

0000000000005b73         nop        dword [rax+rax]

                     loc_5b78:
0000000000005b78         test       rdx, rdx                                    ; CODE XREF=hash_get_next+55
0000000000005b7b         je         loc_5b8e

0000000000005b7d         mov        rax, qword [rdx]
0000000000005b80         mov        rdx, qword [rdx+8]
0000000000005b84         cmp        rax, rbx
0000000000005b87         jne        loc_5b78

                     loc_5b89:
0000000000005b89         test       rdx, rdx                                    ; CODE XREF=hash_get_next+33
0000000000005b8c         jne        loc_5bb8

                     loc_5b8e:
0000000000005b8e         mov        rdx, qword [rbp+8]                          ; CODE XREF=hash_get_next+43
0000000000005b92         jmp        loc_5ba0
0000000000005b94         align      8

                     loc_5b98:
0000000000005b98         mov        rax, qword [rcx]                            ; CODE XREF=hash_get_next+87
0000000000005b9b         test       rax, rax
0000000000005b9e         jne        loc_5bab

                     loc_5ba0:
0000000000005ba0         add        rcx, 0x10                                   ; CODE XREF=hash_get_next+66
0000000000005ba4         cmp        rdx, rcx
0000000000005ba7         ja         loc_5b98

0000000000005ba9         xor        eax, eax

                     loc_5bab:
0000000000005bab         add        rsp, 0x8                                    ; CODE XREF=hash_get_next+78
0000000000005baf         pop        rbx
0000000000005bb0         pop        rbp
0000000000005bb1         ret
                        ; endp
0000000000005bb2         align      8

                     loc_5bb8:
0000000000005bb8         mov        rax, qword [rdx]                            ; CODE XREF=hash_get_next+60
0000000000005bbb         add        rsp, 0x8
0000000000005bbf         pop        rbx
0000000000005bc0         pop        rbp
0000000000005bc1         ret
                        ; endp
0000000000005bc2         align      16                                          ; End of unwind block (FDE at 0xd93c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_entries:
0000000000005bd0         mov        r9, qword [rdi]                             ; Begin of unwind block (FDE at 0xd970)
0000000000005bd3         cmp        qword [rdi+8], r9
0000000000005bd7         jbe        loc_5c32

0000000000005bd9         xor        r8d, r8d

                     loc_5bdc:
0000000000005bdc         mov        rcx, qword [r9]                             ; CODE XREF=hash_get_entries+85
0000000000005bdf         test       rcx, rcx
0000000000005be2         je         loc_5c1d

0000000000005be4         cmp        rdx, r8
0000000000005be7         jbe        loc_5c27

0000000000005be9         mov        qword [rsi+r8*8], rcx
0000000000005bed         mov        rcx, qword [r9+8]
0000000000005bf1         lea        rax, qword [r8+1]
0000000000005bf5         test       rcx, rcx
0000000000005bf8         je         loc_5c1a

0000000000005bfa         nop        word [rax+rax]

                     loc_5c00:
0000000000005c00         cmp        rdx, rax                                    ; CODE XREF=hash_get_entries+72
0000000000005c03         je         loc_5c30

0000000000005c05         mov        r8, qword [rcx]
0000000000005c08         add        rax, 0x1
0000000000005c0c         mov        qword [rsi+rax*8-8], r8
0000000000005c11         mov        rcx, qword [rcx+8]
0000000000005c15         test       rcx, rcx
0000000000005c18         jne        loc_5c00

                     loc_5c1a:
0000000000005c1a         mov        r8, rax                                     ; CODE XREF=hash_get_entries+40

                     loc_5c1d:
0000000000005c1d         add        r9, 0x10                                    ; CODE XREF=hash_get_entries+18
0000000000005c21         cmp        qword [rdi+8], r9
0000000000005c25         ja         loc_5bdc

                     loc_5c27:
0000000000005c27         mov        rax, r8                                     ; CODE XREF=hash_get_entries+23
0000000000005c2a         ret
                        ; endp
0000000000005c2b         align      16

                     loc_5c30:
0000000000005c30         ret                                                    ; CODE XREF=hash_get_entries+51
                        ; endp

                     loc_5c32:
0000000000005c32         xor        eax, eax                                    ; CODE XREF=hash_get_entries+7
0000000000005c34         ret
                        ; endp
0000000000005c35         align      64                                          ; End of unwind block (FDE at 0xd970)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_do_for_each:
0000000000005c40         push       r15                                         ; Begin of unwind block (FDE at 0xd984)
0000000000005c42         push       r14
0000000000005c44         push       r13
0000000000005c46         push       r12
0000000000005c48         push       rbp
0000000000005c49         push       rbx
0000000000005c4a         sub        rsp, 0x8
0000000000005c4e         mov        r14, qword [rdi]
0000000000005c51         cmp        qword [rdi+8], r14
0000000000005c55         jbe        loc_5ca6

0000000000005c57         mov        r13, rdx
0000000000005c5a         mov        r12, rsi
0000000000005c5d         mov        r15, rdi
0000000000005c60         xor        ebp, ebp

                     loc_5c62:
0000000000005c62         mov        rdi, qword [r14]                            ; CODE XREF=hash_do_for_each+82
0000000000005c65         test       rdi, rdi
0000000000005c68         je         loc_5c8a

0000000000005c6a         mov        rbx, r14
0000000000005c6d         jmp        loc_5c73
0000000000005c6f         align      16

                     loc_5c70:
0000000000005c70         mov        rdi, qword [rbx]                            ; CODE XREF=hash_do_for_each+72

                     loc_5c73:
0000000000005c73         mov        rsi, r13                                    ; CODE XREF=hash_do_for_each+45
0000000000005c76         call       r12
0000000000005c79         test       al, al
0000000000005c7b         je         loc_5c94

0000000000005c7d         mov        rbx, qword [rbx+8]
0000000000005c81         add        rbp, 0x1
0000000000005c85         test       rbx, rbx
0000000000005c88         jne        loc_5c70

                     loc_5c8a:
0000000000005c8a         add        r14, 0x10                                   ; CODE XREF=hash_do_for_each+40
0000000000005c8e         cmp        qword [r15+8], r14
0000000000005c92         ja         loc_5c62

                     loc_5c94:
0000000000005c94         add        rsp, 0x8                                    ; CODE XREF=hash_do_for_each+59, hash_do_for_each+104
0000000000005c98         mov        rax, rbp
0000000000005c9b         pop        rbx
0000000000005c9c         pop        rbp
0000000000005c9d         pop        r12
0000000000005c9f         pop        r13
0000000000005ca1         pop        r14
0000000000005ca3         pop        r15
0000000000005ca5         ret
                        ; endp

                     loc_5ca6:
0000000000005ca6         xor        ebp, ebp                                    ; CODE XREF=hash_do_for_each+21
0000000000005ca8         jmp        loc_5c94
0000000000005caa         align      16                                          ; End of unwind block (FDE at 0xd984)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_string:
0000000000005cb0         movzx      ecx, byte [rdi]                             ; Begin of unwind block (FDE at 0xd9d0)
0000000000005cb3         xor        edx, edx
0000000000005cb5         test       cl, cl
0000000000005cb7         je         loc_5cdd

0000000000005cb9         nop        dword [rax]

                     loc_5cc0:
0000000000005cc0         mov        rax, rdx                                    ; CODE XREF=hash_string+43
0000000000005cc3         add        rdi, 0x1
0000000000005cc7         shl        rax, 0x5
0000000000005ccb         sub        rax, rdx
0000000000005cce         xor        edx, edx
0000000000005cd0         add        rax, rcx
0000000000005cd3         movzx      ecx, byte [rdi]
0000000000005cd6         div        rsi
0000000000005cd9         test       cl, cl
0000000000005cdb         jne        loc_5cc0

                     loc_5cdd:
0000000000005cdd         mov        rax, rdx                                    ; CODE XREF=hash_string+7
0000000000005ce0         ret
                        ; endp
0000000000005ce1         align      16                                          ; End of unwind block (FDE at 0xd9d0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_reset_tuning:
0000000000005cf0         movabs     rax, 0x3f80000000000000                     ; Begin of unwind block (FDE at 0xd9e4)
0000000000005cfa         mov        byte [rdi+0x10], 0x0
0000000000005cfe         mov        qword [rdi], rax
0000000000005d01         movabs     rax, 0x3fb4fdf43f4ccccd
0000000000005d0b         mov        qword [rdi+8], rax
0000000000005d0f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_initialize:
0000000000005d10         push       r15                                         ; End of unwind block (FDE at 0xd9e4), Begin of unwind block (FDE at 0xd9f8), CODE XREF=main+1082, canonicalize_filename_mode+1282
0000000000005d12         push       r14
0000000000005d14         lea        rax, qword [raw_hasher]                     ; raw_hasher
0000000000005d1b         push       r13
0000000000005d1d         push       r12
0000000000005d1f         mov        r12, rdx
0000000000005d22         push       rbp
0000000000005d23         push       rbx
0000000000005d24         mov        r13, rcx
0000000000005d27         mov        rbp, rdi
0000000000005d2a         mov        edi, 0x50                                   ; argument "__size" for method j_malloc
0000000000005d2f         mov        r15, rsi
0000000000005d32         sub        rsp, 0x8
0000000000005d36         test       rdx, rdx
0000000000005d39         mov        r14, r8
0000000000005d3c         cmove      r12, rax
0000000000005d40         lea        rax, qword [raw_comparator]                 ; raw_comparator
0000000000005d47         test       rcx, rcx
0000000000005d4a         cmove      r13, rax
0000000000005d4e         call       j_malloc                                    ; malloc
0000000000005d53         test       rax, rax
0000000000005d56         mov        rbx, rax
0000000000005d59         je         loc_5e0a

0000000000005d5f         test       r15, r15
0000000000005d62         lea        rdi, qword [rax+0x28]
0000000000005d66         je         loc_5e20

0000000000005d6c         mov        qword [rax+0x28], r15
0000000000005d70         call       check_tuning.isra.0                         ; check_tuning.isra.0
0000000000005d75         test       al, al
0000000000005d77         je         loc_5e00

0000000000005d7d         cmp        byte [r15+0x10], 0x0
0000000000005d82         je         loc_5e80

                     loc_5d88:
0000000000005d88         mov        rdi, rbp                                    ; CODE XREF=hash_initialize+362, hash_initialize+421
0000000000005d8b         call       next_prime                                  ; next_prime
0000000000005d90         mov        edx, 0x8
0000000000005d95         mov        rbp, rax
0000000000005d98         xor        ecx, ecx
0000000000005d9a         mov        rax, rdx
0000000000005d9d         mul        rbp
0000000000005da0         jo         loc_5eba

                     loc_5da6:
0000000000005da6         test       rax, rax                                    ; CODE XREF=hash_initialize+431
0000000000005da9         js         loc_5e00

0000000000005dab         test       rcx, rcx
0000000000005dae         jne        loc_5e00

0000000000005db0         test       rbp, rbp
0000000000005db3         mov        qword [rbx+0x10], rbp
0000000000005db7         je         loc_5e00

0000000000005db9         mov        esi, 0x10                                   ; argument "__size" for method j_calloc
0000000000005dbe         mov        rdi, rbp                                    ; argument "__nmemb" for method j_calloc
0000000000005dc1         call       j_calloc                                    ; calloc
0000000000005dc6         test       rax, rax
0000000000005dc9         mov        qword [rbx], rax
0000000000005dcc         je         loc_5e00

0000000000005dce         shl        rbp, 0x4
0000000000005dd2         mov        qword [rbx+0x18], 0x0
0000000000005dda         mov        qword [rbx+0x20], 0x0
0000000000005de2         add        rbp, rax
0000000000005de5         mov        qword [rbx+0x30], r12
0000000000005de9         mov        qword [rbx+0x38], r13
0000000000005ded         mov        qword [rbx+8], rbp
0000000000005df1         mov        qword [rbx+0x40], r14
0000000000005df5         mov        qword [rbx+0x48], 0x0
0000000000005dfd         jmp        loc_5e0a
0000000000005dff         align      512

                     loc_5e00:
0000000000005e00         mov        rdi, rbx                                    ; argument "__ptr" for method j_free, CODE XREF=hash_initialize+103, hash_initialize+153, hash_initialize+158, hash_initialize+167, hash_initialize+188, hash_initialize+298, hash_initialize+325
0000000000005e03         xor        ebx, ebx
0000000000005e05         call       j_free                                      ; free

                     loc_5e0a:
0000000000005e0a         add        rsp, 0x8                                    ; CODE XREF=hash_initialize+73, hash_initialize+237
0000000000005e0e         mov        rax, rbx
0000000000005e11         pop        rbx
0000000000005e12         pop        rbp
0000000000005e13         pop        r12
0000000000005e15         pop        r13
0000000000005e17         pop        r14
0000000000005e19         pop        r15
0000000000005e1b         ret
                        ; endp
0000000000005e1c         align      32

                     loc_5e20:
0000000000005e20         lea        rax, qword [default_tuning]                 ; default_tuning, CODE XREF=hash_initialize+86
0000000000005e27         mov        qword [rbx+0x28], rax
0000000000005e2b         call       check_tuning.isra.0                         ; check_tuning.isra.0
0000000000005e30         test       al, al
0000000000005e32         movss      xmm1, dword [float_c0c8]                    ; float_c0c8
0000000000005e3a         je         loc_5e00

0000000000005e3c         test       rbp, rbp
0000000000005e3f         js         loc_5e8b

                     loc_5e41:
0000000000005e41         pxor       xmm0, xmm0                                  ; CODE XREF=hash_initialize+377
0000000000005e45         cvtsi2ss   xmm0, rbp

                     loc_5e4a:
0000000000005e4a         divss      xmm0, xmm1                                  ; CODE XREF=hash_initialize+404
0000000000005e4e         ucomiss    xmm0, dword [float_c0cc]                    ; float_c0cc
0000000000005e55         jae        loc_5e00

0000000000005e57         ucomiss    xmm0, dword [float_c0d0]                    ; float_c0d0
0000000000005e5e         jb         loc_5eb0

0000000000005e60         subss      xmm0, dword [float_c0d0]                    ; float_c0d0
0000000000005e68         movabs     rax, 0x8000000000000000
0000000000005e72         cvttss2si  rbp, xmm0
0000000000005e77         xor        rbp, rax
0000000000005e7a         jmp        loc_5d88
0000000000005e7f         align      128

                     loc_5e80:
0000000000005e80         test       rbp, rbp                                    ; CODE XREF=hash_initialize+114
0000000000005e83         movss      xmm1, dword [r15+8]
0000000000005e89         jns        loc_5e41

                     loc_5e8b:
0000000000005e8b         mov        rax, rbp                                    ; CODE XREF=hash_initialize+303
0000000000005e8e         pxor       xmm0, xmm0
0000000000005e92         shr        rax, 0x1
0000000000005e95         and        ebp, 0x1
0000000000005e98         or         rax, rbp
0000000000005e9b         cvtsi2ss   xmm0, rax
0000000000005ea0         addss      xmm0, xmm0
0000000000005ea4         jmp        loc_5e4a
0000000000005ea6         align      16

                     loc_5eb0:
0000000000005eb0         cvttss2si  rbp, xmm0                                   ; CODE XREF=hash_initialize+334
0000000000005eb5         jmp        loc_5d88

                     loc_5eba:
0000000000005eba         mov        ecx, 0x1                                    ; CODE XREF=hash_initialize+144
0000000000005ebf         jmp        loc_5da6
0000000000005ec4         align      16                                          ; End of unwind block (FDE at 0xd9f8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_clear:
0000000000005ed0         push       r12                                         ; Begin of unwind block (FDE at 0xda44)
0000000000005ed2         push       rbp
0000000000005ed3         mov        rbp, rdi
0000000000005ed6         push       rbx
0000000000005ed7         mov        r12, qword [rdi]
0000000000005eda         cmp        r12, qword [rdi+8]
0000000000005ede         jae        loc_5f4b

                     loc_5ee0:
0000000000005ee0         cmp        qword [r12], 0x0                            ; CODE XREF=hash_clear+121
0000000000005ee5         je         loc_5f41

0000000000005ee7         mov        rbx, qword [r12+8]
0000000000005eec         mov        rax, qword [rbp+0x40]
0000000000005ef0         test       rbx, rbx
0000000000005ef3         je         loc_5f25

0000000000005ef5         nop        dword [rax]

                     loc_5ef8:
0000000000005ef8         test       rax, rax                                    ; CODE XREF=hash_clear+83
0000000000005efb         je         loc_5f06

0000000000005efd         mov        rdi, qword [rbx]
0000000000005f00         call       rax
0000000000005f02         mov        rax, qword [rbp+0x40]

                     loc_5f06:
0000000000005f06         mov        rdx, qword [rbx+8]                          ; CODE XREF=hash_clear+43
0000000000005f0a         mov        rcx, qword [rbp+0x48]
0000000000005f0e         mov        qword [rbx], 0x0
0000000000005f15         test       rdx, rdx
0000000000005f18         mov        qword [rbx+8], rcx
0000000000005f1c         mov        qword [rbp+0x48], rbx
0000000000005f20         mov        rbx, rdx
0000000000005f23         jne        loc_5ef8

                     loc_5f25:
0000000000005f25         test       rax, rax                                    ; CODE XREF=hash_clear+35
0000000000005f28         je         loc_5f30

0000000000005f2a         mov        rdi, qword [r12]
0000000000005f2e         call       rax

                     loc_5f30:
0000000000005f30         mov        qword [r12], 0x0                            ; CODE XREF=hash_clear+88
0000000000005f38         mov        qword [r12+8], 0x0

                     loc_5f41:
0000000000005f41         add        r12, 0x10                                   ; CODE XREF=hash_clear+21
0000000000005f45         cmp        qword [rbp+8], r12
0000000000005f49         ja         loc_5ee0

                     loc_5f4b:
0000000000005f4b         mov        qword [rbp+0x18], 0x0                       ; CODE XREF=hash_clear+14
0000000000005f53         mov        qword [rbp+0x20], 0x0
0000000000005f5b         pop        rbx
0000000000005f5c         pop        rbp
0000000000005f5d         pop        r12
0000000000005f5f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_free:
0000000000005f60         push       r12                                         ; End of unwind block (FDE at 0xda44), Begin of unwind block (FDE at 0xda70), CODE XREF=canonicalize_filename_mode+537, canonicalize_filename_mode+915
0000000000005f62         push       rbp
0000000000005f63         mov        r12, rdi
0000000000005f66         push       rbx
0000000000005f67         cmp        qword [rdi+0x40], 0x0
0000000000005f6c         mov        rbp, qword [rdi]
0000000000005f6f         mov        rax, qword [rdi+8]
0000000000005f73         je         loc_5fc3

0000000000005f75         cmp        qword [rdi+0x20], 0x0
0000000000005f7a         je         loc_5fc3

0000000000005f7c         cmp        rbp, rax
0000000000005f7f         jae        loc_5ffc

0000000000005f81         nop        dword [rax]

                     loc_5f88:
0000000000005f88         mov        rdi, qword [rbp]                            ; CODE XREF=hash_free+93
0000000000005f8c         test       rdi, rdi
0000000000005f8f         je         loc_5fb6

0000000000005f91         mov        rbx, rbp
0000000000005f94         jmp        loc_5fa3
0000000000005f96         align      32

                     loc_5fa0:
0000000000005fa0         mov        rdi, qword [rbx]                            ; CODE XREF=hash_free+79

                     loc_5fa3:
0000000000005fa3         call       qword [r12+0x40]                            ; CODE XREF=hash_free+52
0000000000005fa8         mov        rbx, qword [rbx+8]
0000000000005fac         test       rbx, rbx
0000000000005faf         jne        loc_5fa0

0000000000005fb1         mov        rax, qword [r12+8]

                     loc_5fb6:
0000000000005fb6         add        rbp, 0x10                                   ; CODE XREF=hash_free+47
0000000000005fba         cmp        rax, rbp
0000000000005fbd         ja         loc_5f88

0000000000005fbf         mov        rbp, qword [r12]

                     loc_5fc3:
0000000000005fc3         cmp        rbp, rax                                    ; CODE XREF=hash_free+19, hash_free+26
0000000000005fc6         jae        loc_5ffc

0000000000005fc8         nop        dword [rax+rax]

                     loc_5fd0:
0000000000005fd0         mov        rdi, qword [rbp+8]                          ; CODE XREF=hash_free+154
0000000000005fd4         test       rdi, rdi
0000000000005fd7         je         loc_5ff1

0000000000005fd9         nop        dword [rax]

                     loc_5fe0:
0000000000005fe0         mov        rbx, qword [rdi+8]                          ; CODE XREF=hash_free+143
0000000000005fe4         call       j_free                                      ; free
0000000000005fe9         test       rbx, rbx
0000000000005fec         mov        rdi, rbx
0000000000005fef         jne        loc_5fe0

                     loc_5ff1:
0000000000005ff1         add        rbp, 0x10                                   ; CODE XREF=hash_free+119
0000000000005ff5         cmp        qword [r12+8], rbp
0000000000005ffa         ja         loc_5fd0

                     loc_5ffc:
0000000000005ffc         mov        rdi, qword [r12+0x48]                       ; CODE XREF=hash_free+31, hash_free+102
0000000000006001         test       rdi, rdi
0000000000006004         je         loc_6021

0000000000006006         nop        word [cs:rax+rax]

                     loc_6010:
0000000000006010         mov        rbx, qword [rdi+8]                          ; CODE XREF=hash_free+191
0000000000006014         call       j_free                                      ; free
0000000000006019         test       rbx, rbx
000000000000601c         mov        rdi, rbx
000000000000601f         jne        loc_6010

                     loc_6021:
0000000000006021         mov        rdi, qword [r12]                            ; argument "__ptr" for method j_free, CODE XREF=hash_free+164
0000000000006025         call       j_free                                      ; free
000000000000602a         pop        rbx
000000000000602b         mov        rdi, r12                                    ; argument "__ptr" for method j_free
000000000000602e         pop        rbp
000000000000602f         pop        r12
0000000000006031         jmp        j_free                                      ; free
                        ; endp
0000000000006036         align      64                                          ; End of unwind block (FDE at 0xda70)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120


                     hash_rehash:
0000000000006040         push       r12                                         ; Begin of unwind block (FDE at 0xda9c), CODE XREF=hash_insert_if_absent+443, hash_delete+271
0000000000006042         push       rbp
0000000000006043         mov        rbp, rdi
0000000000006046         push       rbx
0000000000006047         sub        rsp, 0x60
000000000000604b         mov        r12, qword [rdi+0x28]
000000000000604f         mov        rax, qword [fs:0x28]
0000000000006058         mov        qword [rsp+0x78+var_20], rax
000000000000605d         xor        eax, eax
000000000000605f         cmp        byte [r12+0x10], 0x0
0000000000006065         jne        loc_60b8

0000000000006067         test       rsi, rsi
000000000000606a         js         loc_61e8

0000000000006070         pxor       xmm0, xmm0
0000000000006074         cvtsi2ss   xmm0, rsi

                     loc_6079:
0000000000006079         divss      xmm0, dword [r12+8]                         ; CODE XREF=hash_rehash+449
0000000000006080         ucomiss    xmm0, dword [float_c0cc]                    ; float_c0cc
0000000000006087         jae        loc_61c0

000000000000608d         ucomiss    xmm0, dword [float_c0d0]                    ; float_c0d0
0000000000006094         jb         loc_6210

000000000000609a         subss      xmm0, dword [float_c0d0]                    ; float_c0d0
00000000000060a2         movabs     rax, 0x8000000000000000
00000000000060ac         cvttss2si  rsi, xmm0
00000000000060b1         xor        rsi, rax
00000000000060b4         nop        dword [rax]

                     loc_60b8:
00000000000060b8         mov        rdi, rsi                                    ; CODE XREF=hash_rehash+37, hash_rehash+469
00000000000060bb         call       next_prime                                  ; next_prime
00000000000060c0         mov        edx, 0x8
00000000000060c5         mov        rbx, rax
00000000000060c8         xor        ecx, ecx
00000000000060ca         mov        rax, rdx
00000000000060cd         mul        rbx
00000000000060d0         jo         loc_626f

                     loc_60d6:
00000000000060d6         test       rax, rax                                    ; CODE XREF=hash_rehash+564
00000000000060d9         mov        eax, 0x1
00000000000060de         cmovs      rcx, rax
00000000000060e2         test       rbx, rbx
00000000000060e5         je         loc_61c0

00000000000060eb         and        ecx, 0x1
00000000000060ee         jne        loc_61c0

00000000000060f4         cmp        qword [rbp+0x10], rbx
00000000000060f8         je         loc_6220

00000000000060fe         mov        esi, 0x10                                   ; argument "__size" for method j_calloc
0000000000006103         mov        rdi, rbx                                    ; argument "__nmemb" for method j_calloc
0000000000006106         call       j_calloc                                    ; calloc
000000000000610b         test       rax, rax
000000000000610e         mov        qword [rsp+0x78+var_78], rax
0000000000006112         je         loc_61c0

0000000000006118         mov        qword [rsp+0x78+var_68], rbx
000000000000611d         shl        rbx, 0x4
0000000000006121         mov        qword [rsp+0x78+var_50], r12
0000000000006126         add        rbx, rax
0000000000006129         mov        rax, qword [rbp+0x30]
000000000000612d         mov        r12, rsp
0000000000006130         xor        edx, edx
0000000000006132         mov        rsi, rbp
0000000000006135         mov        rdi, r12
0000000000006138         mov        qword [rsp+0x78+var_70], rbx
000000000000613d         mov        qword [rsp+0x78+var_60], 0x0
0000000000006146         mov        qword [rsp+0x78+var_48], rax
000000000000614b         mov        rax, qword [rbp+0x38]
000000000000614f         mov        qword [rsp+0x78+var_58], 0x0
0000000000006158         mov        qword [rsp+0x78+var_40], rax
000000000000615d         mov        rax, qword [rbp+0x40]
0000000000006161         mov        qword [rsp+0x78+var_38], rax
0000000000006166         mov        rax, qword [rbp+0x48]
000000000000616a         mov        qword [rsp+0x78+var_30], rax
000000000000616f         call       transfer_entries                            ; transfer_entries
0000000000006174         test       al, al
0000000000006176         mov        ebx, eax
0000000000006178         jne        loc_6230

000000000000617e         mov        rax, qword [rsp+0x78+var_30]
0000000000006183         mov        edx, 0x1
0000000000006188         mov        rsi, r12
000000000000618b         mov        rdi, rbp
000000000000618e         mov        qword [rbp+0x48], rax
0000000000006192         call       transfer_entries                            ; transfer_entries
0000000000006197         test       al, al
0000000000006199         je         loc_6279

000000000000619f         xor        edx, edx
00000000000061a1         mov        rsi, r12
00000000000061a4         mov        rdi, rbp
00000000000061a7         call       transfer_entries                            ; transfer_entries
00000000000061ac         test       al, al
00000000000061ae         je         loc_6279

00000000000061b4         mov        rdi, qword [rsp+0x78+var_78]                ; argument "__ptr" for method j_free
00000000000061b8         call       j_free                                      ; free
00000000000061bd         jmp        loc_61c2
00000000000061bf         align      64

                     loc_61c0:
00000000000061c0         xor        ebx, ebx                                    ; CODE XREF=hash_rehash+71, hash_rehash+165, hash_rehash+174, hash_rehash+210

                     loc_61c2:
00000000000061c2         mov        rcx, qword [rsp+0x78+var_20]                ; CODE XREF=hash_rehash+381, hash_rehash+485, hash_rehash+549
00000000000061c7         xor        rcx, qword [fs:0x28]
00000000000061d0         mov        eax, ebx
00000000000061d2         jne        loc_626a

00000000000061d8         add        rsp, 0x60
00000000000061dc         pop        rbx
00000000000061dd         pop        rbp
00000000000061de         pop        r12
00000000000061e0         ret
                        ; endp
00000000000061e1         align      8

                     loc_61e8:
00000000000061e8         mov        rax, rsi                                    ; CODE XREF=hash_rehash+42
00000000000061eb         pxor       xmm0, xmm0
00000000000061ef         shr        rax, 0x1
00000000000061f2         and        esi, 0x1
00000000000061f5         or         rax, rsi
00000000000061f8         cvtsi2ss   xmm0, rax
00000000000061fd         addss      xmm0, xmm0
0000000000006201         jmp        loc_6079
0000000000006206         align      16

                     loc_6210:
0000000000006210         cvttss2si  rsi, xmm0                                   ; CODE XREF=hash_rehash+84
0000000000006215         jmp        loc_60b8
000000000000621a         align      32

                     loc_6220:
0000000000006220         mov        ebx, 0x1                                    ; CODE XREF=hash_rehash+184
0000000000006225         jmp        loc_61c2
0000000000006227         align      16

                     loc_6230:
0000000000006230         mov        rdi, qword [rbp]                            ; argument "__ptr" for method j_free, CODE XREF=hash_rehash+312
0000000000006234         call       j_free                                      ; free
0000000000006239         mov        rax, qword [rsp+0x78+var_78]
000000000000623d         mov        qword [rbp], rax
0000000000006241         mov        rax, qword [rsp+0x78+var_70]
0000000000006246         mov        qword [rbp+8], rax
000000000000624a         mov        rax, qword [rsp+0x78+var_68]
000000000000624f         mov        qword [rbp+0x10], rax
0000000000006253         mov        rax, qword [rsp+0x78+var_60]
0000000000006258         mov        qword [rbp+0x18], rax
000000000000625c         mov        rax, qword [rsp+0x78+var_30]
0000000000006261         mov        qword [rbp+0x48], rax
0000000000006265         jmp        loc_61c2

                     loc_626a:
000000000000626a         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_rehash+402
                        ; endp

                     loc_626f:
000000000000626f         mov        ecx, 0x1                                    ; CODE XREF=hash_rehash+144
0000000000006274         jmp        loc_60d6

                     loc_6279:
0000000000006279         call       j_abort                                     ; abort, CODE XREF=hash_rehash+345, hash_rehash+366
                        ; endp
000000000000627e         align      128                                         ; End of unwind block (FDE at 0xda9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56


                     hash_insert_if_absent:
0000000000006280         push       r13                                         ; Begin of unwind block (FDE at 0xdad4), CODE XREF=hash_insert+27
0000000000006282         push       r12
0000000000006284         push       rbp
0000000000006285         push       rbx
0000000000006286         sub        rsp, 0x18
000000000000628a         mov        rax, qword [fs:0x28]
0000000000006293         mov        qword [rsp+0x38+var_30], rax
0000000000006298         xor        eax, eax
000000000000629a         test       rsi, rsi
000000000000629d         je         loc_645d

00000000000062a3         mov        r12, rsp
00000000000062a6         xor        ecx, ecx
00000000000062a8         mov        r13, rdx
00000000000062ab         mov        rdx, r12
00000000000062ae         mov        rbx, rdi
00000000000062b1         mov        rbp, rsi
00000000000062b4         call       hash_find_entry                             ; hash_find_entry
00000000000062b9         test       rax, rax
00000000000062bc         mov        rdx, rax
00000000000062bf         je         loc_62f0

00000000000062c1         xor        eax, eax
00000000000062c3         test       r13, r13
00000000000062c6         je         loc_62cc

00000000000062c8         mov        qword [r13], rdx

                     loc_62cc:
00000000000062cc         mov        rcx, qword [rsp+0x38+var_30]                ; CODE XREF=hash_insert_if_absent+70, hash_insert_if_absent+233, hash_insert_if_absent+507, hash_insert_if_absent+536
00000000000062d1         xor        rcx, qword [fs:0x28]
00000000000062da         jne        loc_64ff

00000000000062e0         add        rsp, 0x18
00000000000062e4         pop        rbx
00000000000062e5         pop        rbp
00000000000062e6         pop        r12
00000000000062e8         pop        r13
00000000000062ea         ret
                        ; endp
00000000000062eb         align      16

                     loc_62f0:
00000000000062f0         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_insert_if_absent+63
00000000000062f4         test       rax, rax
00000000000062f7         js         loc_6370

00000000000062f9         pxor       xmm1, xmm1
00000000000062fd         mov        rdx, qword [rbx+0x28]
0000000000006301         cvtsi2ss   xmm1, rax
0000000000006306         mov        rax, qword [rbx+0x10]
000000000000630a         test       rax, rax
000000000000630d         js         loc_639a

                     loc_6313:
0000000000006313         pxor       xmm0, xmm0                                  ; CODE XREF=hash_insert_if_absent+276
0000000000006317         cvtsi2ss   xmm0, rax

                     loc_631c:
000000000000631c         mulss      xmm0, dword [rdx+8]                         ; CODE XREF=hash_insert_if_absent+307
0000000000006321         ucomiss    xmm1, xmm0
0000000000006324         ja         loc_63c0

                     loc_632a:
000000000000632a         mov        r12, qword [rsp+0x38+var_38]                ; CODE XREF=hash_insert_if_absent+392, hash_insert_if_absent+471
000000000000632e         cmp        qword [r12], 0x0
0000000000006333         je         loc_6468

0000000000006339         mov        rax, qword [rbx+0x48]
000000000000633d         test       rax, rax
0000000000006340         je         loc_6480

0000000000006346         mov        rdx, qword [rax+8]
000000000000634a         mov        qword [rbx+0x48], rdx

                     loc_634e:
000000000000634e         mov        rdx, qword [r12+8]                          ; CODE XREF=hash_insert_if_absent+525
0000000000006353         mov        qword [rax], rbp
0000000000006356         mov        qword [rax+8], rdx
000000000000635a         mov        qword [r12+8], rax
000000000000635f         mov        eax, 0x1
0000000000006364         add        qword [rbx+0x20], 0x1
0000000000006369         jmp        loc_62cc
000000000000636e         align      16

                     loc_6370:
0000000000006370         mov        rdx, rax                                    ; CODE XREF=hash_insert_if_absent+119
0000000000006373         pxor       xmm1, xmm1
0000000000006377         and        eax, 0x1
000000000000637a         shr        rdx, 0x1
000000000000637d         or         rdx, rax
0000000000006380         mov        rax, qword [rbx+0x10]
0000000000006384         cvtsi2ss   xmm1, rdx
0000000000006389         mov        rdx, qword [rbx+0x28]
000000000000638d         test       rax, rax
0000000000006390         addss      xmm1, xmm1
0000000000006394         jns        loc_6313

                     loc_639a:
000000000000639a         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+141
000000000000639d         pxor       xmm0, xmm0
00000000000063a1         shr        rcx, 0x1
00000000000063a4         and        eax, 0x1
00000000000063a7         or         rcx, rax
00000000000063aa         cvtsi2ss   xmm0, rcx
00000000000063af         addss      xmm0, xmm0
00000000000063b3         jmp        loc_631c
00000000000063b8         align      64

                     loc_63c0:
00000000000063c0         lea        rdi, qword [rbx+0x28]                       ; CODE XREF=hash_insert_if_absent+164
00000000000063c4         call       check_tuning.isra.0                         ; check_tuning.isra.0
00000000000063c9         mov        rax, qword [rbx+0x10]
00000000000063cd         mov        rdx, qword [rbx+0x28]
00000000000063d1         test       rax, rax
00000000000063d4         movss      xmm2, dword [rdx+8]
00000000000063d9         js         loc_64a0

00000000000063df         pxor       xmm0, xmm0
00000000000063e3         cvtsi2ss   xmm0, rax

                     loc_63e8:
00000000000063e8         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_insert_if_absent+569
00000000000063ec         test       rax, rax
00000000000063ef         js         loc_64c0

00000000000063f5         pxor       xmm1, xmm1
00000000000063f9         cvtsi2ss   xmm1, rax

                     loc_63fe:
00000000000063fe         movaps     xmm3, xmm2                                  ; CODE XREF=hash_insert_if_absent+601
0000000000006401         mulss      xmm3, xmm0
0000000000006405         ucomiss    xmm1, xmm3
0000000000006408         jbe        loc_632a

000000000000640e         cmp        byte [rdx+0x10], 0x0
0000000000006412         mulss      xmm0, dword [rdx+0xc]
0000000000006417         jne        loc_641d

0000000000006419         mulss      xmm0, xmm2

                     loc_641d:
000000000000641d         ucomiss    xmm0, dword [float_c0cc]                    ; float_c0cc, CODE XREF=hash_insert_if_absent+407
0000000000006424         jae        loc_6493

0000000000006426         ucomiss    xmm0, dword [float_c0d0]                    ; float_c0d0
000000000000642d         jae        loc_64e0

0000000000006433         cvttss2si  rsi, xmm0

                     loc_6438:
0000000000006438         mov        rdi, rbx                                    ; CODE XREF=hash_insert_if_absent+634
000000000000643b         call       hash_rehash                                 ; hash_rehash
0000000000006440         test       al, al
0000000000006442         je         loc_6493

0000000000006444         xor        ecx, ecx
0000000000006446         mov        rdx, r12
0000000000006449         mov        rsi, rbp
000000000000644c         mov        rdi, rbx
000000000000644f         call       hash_find_entry                             ; hash_find_entry
0000000000006454         test       rax, rax
0000000000006457         je         loc_632a

                     loc_645d:
000000000000645d         call       j_abort                                     ; abort, CODE XREF=hash_insert_if_absent+29
                        ; endp
0000000000006462         align      8

                     loc_6468:
0000000000006468         mov        qword [r12], rbp                            ; CODE XREF=hash_insert_if_absent+179
000000000000646c         mov        eax, 0x1
0000000000006471         add        qword [rbx+0x20], 0x1
0000000000006476         add        qword [rbx+0x18], 0x1
000000000000647b         jmp        loc_62cc

                     loc_6480:
0000000000006480         mov        edi, 0x10                                   ; argument "__size" for method j_malloc, CODE XREF=hash_insert_if_absent+192
0000000000006485         call       j_malloc                                    ; malloc
000000000000648a         test       rax, rax
000000000000648d         jne        loc_634e

                     loc_6493:
0000000000006493         mov        eax, 0xffffffff                             ; CODE XREF=hash_insert_if_absent+420, hash_insert_if_absent+450
0000000000006498         jmp        loc_62cc
000000000000649d         align      32

                     loc_64a0:
00000000000064a0         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+345
00000000000064a3         pxor       xmm0, xmm0
00000000000064a7         shr        rcx, 0x1
00000000000064aa         and        eax, 0x1
00000000000064ad         or         rcx, rax
00000000000064b0         cvtsi2ss   xmm0, rcx
00000000000064b5         addss      xmm0, xmm0
00000000000064b9         jmp        loc_63e8
00000000000064be         align      64

                     loc_64c0:
00000000000064c0         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+367
00000000000064c3         pxor       xmm1, xmm1
00000000000064c7         shr        rcx, 0x1
00000000000064ca         and        eax, 0x1
00000000000064cd         or         rcx, rax
00000000000064d0         cvtsi2ss   xmm1, rcx
00000000000064d5         addss      xmm1, xmm1
00000000000064d9         jmp        loc_63fe
00000000000064de         align      32

                     loc_64e0:
00000000000064e0         subss      xmm0, dword [float_c0d0]                    ; float_c0d0, CODE XREF=hash_insert_if_absent+429
00000000000064e8         movabs     rax, 0x8000000000000000
00000000000064f2         cvttss2si  rsi, xmm0
00000000000064f7         xor        rsi, rax
00000000000064fa         jmp        loc_6438

                     loc_64ff:
00000000000064ff         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_insert_if_absent+90
                        ; endp
0000000000006504         align      16                                          ; End of unwind block (FDE at 0xdad4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24


                     hash_insert:
0000000000006510         push       rbx                                         ; Begin of unwind block (FDE at 0xdb10), CODE XREF=record_file+70
0000000000006511         mov        rbx, rsi
0000000000006514         sub        rsp, 0x10
0000000000006518         mov        rdx, rsp
000000000000651b         mov        rax, qword [fs:0x28]
0000000000006524         mov        qword [rsp+0x18+var_10], rax
0000000000006529         xor        eax, eax
000000000000652b         call       hash_insert_if_absent                       ; hash_insert_if_absent
0000000000006530         cmp        eax, 0xffffffff
0000000000006533         je         loc_6560

0000000000006535         test       eax, eax
0000000000006537         jne        loc_653d

0000000000006539         mov        rbx, qword [rsp+0x18+var_18]

                     loc_653d:
000000000000653d         mov        rcx, qword [rsp+0x18+var_10]                ; CODE XREF=hash_insert+39, hash_insert+82
0000000000006542         xor        rcx, qword [fs:0x28]
000000000000654b         mov        rax, rbx
000000000000654e         jne        loc_6564

0000000000006550         add        rsp, 0x10
0000000000006554         pop        rbx
0000000000006555         ret
                        ; endp
0000000000006556         align      32

                     loc_6560:
0000000000006560         xor        ebx, ebx                                    ; CODE XREF=hash_insert+35
0000000000006562         jmp        loc_653d

                     loc_6564:
0000000000006564         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_insert+62
                        ; endp
0000000000006569         align      16                                          ; End of unwind block (FDE at 0xdb10)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     hash_delete:
0000000000006570         push       r12                                         ; Begin of unwind block (FDE at 0xdb34)
0000000000006572         push       rbp
0000000000006573         mov        ecx, 0x1
0000000000006578         push       rbx
0000000000006579         mov        rbx, rdi
000000000000657c         sub        rsp, 0x10
0000000000006580         mov        rdx, rsp
0000000000006583         mov        rax, qword [fs:0x28]
000000000000658c         mov        qword [rsp+0x28+var_20], rax
0000000000006591         xor        eax, eax
0000000000006593         call       hash_find_entry                             ; hash_find_entry
0000000000006598         test       rax, rax
000000000000659b         mov        rbp, rax
000000000000659e         je         loc_65af

00000000000065a0         mov        rax, qword [rsp+0x28+var_28]
00000000000065a4         sub        qword [rbx+0x20], 0x1
00000000000065a9         cmp        qword [rax], 0x0
00000000000065ad         je         loc_65d0

                     loc_65af:
00000000000065af         mov        rcx, qword [rsp+0x28+var_20]                ; CODE XREF=hash_delete+46, hash_delete+159, hash_delete+229, hash_delete+278, hash_delete+321
00000000000065b4         xor        rcx, qword [fs:0x28]
00000000000065bd         mov        rax, rbp
00000000000065c0         jne        loc_676e

00000000000065c6         add        rsp, 0x10
00000000000065ca         pop        rbx
00000000000065cb         pop        rbp
00000000000065cc         pop        r12
00000000000065ce         ret
                        ; endp
00000000000065cf         align      16

                     loc_65d0:
00000000000065d0         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_delete+61
00000000000065d4         sub        rax, 0x1
00000000000065d8         test       rax, rax
00000000000065db         mov        qword [rbx+0x18], rax
00000000000065df         js         loc_66e0

00000000000065e5         pxor       xmm0, xmm0
00000000000065e9         cvtsi2ss   xmm0, rax

                     loc_65ee:
00000000000065ee         mov        rax, qword [rbx+0x10]                       ; CODE XREF=hash_delete+393
00000000000065f2         mov        rdx, qword [rbx+0x28]
00000000000065f6         test       rax, rax
00000000000065f9         js         loc_66c0

00000000000065ff         pxor       xmm1, xmm1
0000000000006603         cvtsi2ss   xmm1, rax

                     loc_6608:
0000000000006608         mulss      xmm1, dword [rdx]                           ; CODE XREF=hash_delete+361
000000000000660c         ucomiss    xmm1, xmm0
000000000000660f         jbe        loc_65af

0000000000006611         lea        rdi, qword [rbx+0x28]
0000000000006615         call       check_tuning.isra.0                         ; check_tuning.isra.0
000000000000661a         mov        rax, qword [rbx+0x10]
000000000000661e         mov        rdx, qword [rbx+0x28]
0000000000006622         test       rax, rax
0000000000006625         js         loc_6750

000000000000662b         pxor       xmm0, xmm0
000000000000662f         cvtsi2ss   xmm0, rax

                     loc_6634:
0000000000006634         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_delete+505
0000000000006638         test       rax, rax
000000000000663b         js         loc_6730

0000000000006641         pxor       xmm1, xmm1
0000000000006645         cvtsi2ss   xmm1, rax

                     loc_664a:
000000000000664a         movss      xmm2, dword [rdx]                           ; CODE XREF=hash_delete+473
000000000000664e         mulss      xmm2, xmm0
0000000000006652         ucomiss    xmm2, xmm1
0000000000006655         jbe        loc_65af

000000000000665b         cmp        byte [rdx+0x10], 0x0
000000000000665f         mulss      xmm0, dword [rdx+4]
0000000000006664         je         loc_6720

                     loc_666a:
000000000000666a         ucomiss    xmm0, dword [float_c0d0]                    ; float_c0d0, CODE XREF=hash_delete+437
0000000000006671         jae        loc_6700

0000000000006677         cvttss2si  rsi, xmm0

                     loc_667c:
000000000000667c         mov        rdi, rbx                                    ; CODE XREF=hash_delete+426
000000000000667f         call       hash_rehash                                 ; hash_rehash
0000000000006684         test       al, al
0000000000006686         jne        loc_65af

000000000000668c         mov        rdi, qword [rbx+0x48]
0000000000006690         test       rdi, rdi
0000000000006693         je         loc_66a9

0000000000006695         nop        dword [rax]

                     loc_6698:
0000000000006698         mov        r12, qword [rdi+8]                          ; CODE XREF=hash_delete+311
000000000000669c         call       j_free                                      ; free
00000000000066a1         test       r12, r12
00000000000066a4         mov        rdi, r12
00000000000066a7         jne        loc_6698

                     loc_66a9:
00000000000066a9         mov        qword [rbx+0x48], 0x0                       ; CODE XREF=hash_delete+291
00000000000066b1         jmp        loc_65af
00000000000066b6         align      64

                     loc_66c0:
00000000000066c0         mov        rcx, rax                                    ; CODE XREF=hash_delete+137
00000000000066c3         pxor       xmm1, xmm1
00000000000066c7         shr        rcx, 0x1
00000000000066ca         and        eax, 0x1
00000000000066cd         or         rcx, rax
00000000000066d0         cvtsi2ss   xmm1, rcx
00000000000066d5         addss      xmm1, xmm1
00000000000066d9         jmp        loc_6608
00000000000066de         align      32

                     loc_66e0:
00000000000066e0         mov        rdx, rax                                    ; CODE XREF=hash_delete+111
00000000000066e3         pxor       xmm0, xmm0
00000000000066e7         shr        rdx, 0x1
00000000000066ea         and        eax, 0x1
00000000000066ed         or         rdx, rax
00000000000066f0         cvtsi2ss   xmm0, rdx
00000000000066f5         addss      xmm0, xmm0
00000000000066f9         jmp        loc_65ee
00000000000066fe         align      256

                     loc_6700:
0000000000006700         subss      xmm0, dword [float_c0d0]                    ; float_c0d0, CODE XREF=hash_delete+257
0000000000006708         movabs     rax, 0x8000000000000000
0000000000006712         cvttss2si  rsi, xmm0
0000000000006717         xor        rsi, rax
000000000000671a         jmp        loc_667c
000000000000671f         align      32

                     loc_6720:
0000000000006720         mulss      xmm0, dword [rdx+8]                         ; CODE XREF=hash_delete+244
0000000000006725         jmp        loc_666a
000000000000672a         align      16

                     loc_6730:
0000000000006730         mov        rcx, rax                                    ; CODE XREF=hash_delete+203
0000000000006733         pxor       xmm1, xmm1
0000000000006737         shr        rcx, 0x1
000000000000673a         and        eax, 0x1
000000000000673d         or         rcx, rax
0000000000006740         cvtsi2ss   xmm1, rcx
0000000000006745         addss      xmm1, xmm1
0000000000006749         jmp        loc_664a
000000000000674e         align      16

                     loc_6750:
0000000000006750         mov        rcx, rax                                    ; CODE XREF=hash_delete+181
0000000000006753         pxor       xmm0, xmm0
0000000000006757         shr        rcx, 0x1
000000000000675a         and        eax, 0x1
000000000000675d         or         rcx, rax
0000000000006760         cvtsi2ss   xmm0, rcx
0000000000006765         addss      xmm0, xmm0
0000000000006769         jmp        loc_6634

                     loc_676e:
000000000000676e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_delete+80
                        ; endp
0000000000006773         align      128                                         ; End of unwind block (FDE at 0xdb34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_hash:
0000000000006780         push       rbp                                         ; Begin of unwind block (FDE at 0xdb6c), DATA XREF=main+1070, canonicalize_filename_mode+1270
0000000000006781         push       rbx
0000000000006782         mov        rbp, rdi
0000000000006785         mov        rbx, rsi
0000000000006788         sub        rsp, 0x8
000000000000678c         mov        rdi, qword [rdi]
000000000000678f         call       hash_pjw                                    ; hash_pjw
0000000000006794         xor        rax, qword [rbp+8]
0000000000006798         xor        edx, edx
000000000000679a         add        rsp, 0x8
000000000000679e         div        rbx
00000000000067a1         pop        rbx
00000000000067a2         pop        rbp
00000000000067a3         mov        rax, rdx
00000000000067a6         ret
                        ; endp
00000000000067a7         align      16                                          ; End of unwind block (FDE at 0xdb6c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_hash_no_name:
00000000000067b0         mov        rax, qword [rdi+8]                          ; Begin of unwind block (FDE at 0xdb94)
00000000000067b4         xor        edx, edx
00000000000067b6         div        rsi
00000000000067b9         mov        rax, rdx
00000000000067bc         ret
                        ; endp
00000000000067bd         align      64                                          ; End of unwind block (FDE at 0xdb94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_compare:
00000000000067c0         xor        eax, eax                                    ; Begin of unwind block (FDE at 0xdba8), DATA XREF=main+1061
00000000000067c2         mov        rdx, qword [rsi+8]
00000000000067c6         cmp        qword [rdi+8], rdx
00000000000067ca         je         loc_67d0

                     loc_67cc:
00000000000067cc         ret                                                    ; CODE XREF=triple_compare+24
                        ; endp
00000000000067ce         align      16

                     loc_67d0:
00000000000067d0         mov        rcx, qword [rsi+0x10]                       ; CODE XREF=triple_compare+10
00000000000067d4         cmp        qword [rdi+0x10], rcx
00000000000067d8         jne        loc_67cc

00000000000067da         sub        rsp, 0x8
00000000000067de         mov        rsi, qword [rsi]
00000000000067e1         mov        rdi, qword [rdi]
00000000000067e4         call       same_name                                   ; same_name
00000000000067e9         add        rsp, 0x8
00000000000067ed         ret
                        ; endp
00000000000067ee         align      16                                          ; End of unwind block (FDE at 0xdba8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_compare_ino_str:
00000000000067f0         xor        eax, eax                                    ; Begin of unwind block (FDE at 0xdbc0), DATA XREF=canonicalize_filename_mode+1261
00000000000067f2         mov        rdx, qword [rsi+8]
00000000000067f6         cmp        qword [rdi+8], rdx
00000000000067fa         je         loc_6800

                     loc_67fc:
00000000000067fc         ret                                                    ; CODE XREF=triple_compare_ino_str+24
                        ; endp
00000000000067fe         align      2048

                     loc_6800:
0000000000006800         mov        rcx, qword [rsi+0x10]                       ; CODE XREF=triple_compare_ino_str+10
0000000000006804         cmp        qword [rdi+0x10], rcx
0000000000006808         jne        loc_67fc

000000000000680a         sub        rsp, 0x8
000000000000680e         mov        rsi, qword [rsi]                            ; argument "__s2" for method j_strcmp
0000000000006811         mov        rdi, qword [rdi]                            ; argument "__s1" for method j_strcmp
0000000000006814         call       j_strcmp                                    ; strcmp
0000000000006819         test       eax, eax
000000000000681b         sete       al
000000000000681e         add        rsp, 0x8
0000000000006822         ret
                        ; endp
0000000000006823         align      16                                          ; End of unwind block (FDE at 0xdbc0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_free:
0000000000006830         push       rbx                                         ; Begin of unwind block (FDE at 0xdbd8), CODE XREF=record_file+98, DATA XREF=main+1054, canonicalize_filename_mode+1254
0000000000006831         mov        rbx, rdi
0000000000006834         mov        rdi, qword [rdi]                            ; argument "__ptr" for method j_free
0000000000006837         call       j_free                                      ; free
000000000000683c         mov        rdi, rbx                                    ; argument "__ptr" for method j_free
000000000000683f         pop        rbx
0000000000006840         jmp        j_free                                      ; free
                        ; endp
0000000000006845         align      16                                          ; End of unwind block (FDE at 0xdbd8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_38: int8_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int32_t, -88


                     openat_safer:
0000000000006850         sub        rsp, 0x58                                   ; Begin of unwind block (FDE at 0xdbf4), CODE XREF=main+1477, opendirat+21
0000000000006854         mov        qword [rsp+0x58+var_20], rcx
0000000000006859         xor        ecx, ecx
000000000000685b         mov        rax, qword [fs:0x28]
0000000000006864         mov        qword [rsp+0x58+var_40], rax
0000000000006869         xor        eax, eax
000000000000686b         test       dl, 0x40
000000000000686e         jne        loc_6898

                     loc_6870:
0000000000006870         xor        eax, eax                                    ; CODE XREF=openat_safer+103
0000000000006872         call       j_openat                                    ; openat
0000000000006877         mov        edi, eax
0000000000006879         call       fd_safer                                    ; fd_safer
000000000000687e         mov        rsi, qword [rsp+0x58+var_40]
0000000000006883         xor        rsi, qword [fs:0x28]
000000000000688c         jne        loc_68b9

000000000000688e         add        rsp, 0x58
0000000000006892         ret
                        ; endp
0000000000006893         align      8

                     loc_6898:
0000000000006898         lea        rax, qword [rsp+0x58+arg_0]                 ; CODE XREF=openat_safer+30
000000000000689d         mov        dword [rsp+0x58+var_58], 0x18
00000000000068a4         mov        ecx, dword [rsp+0x58+var_20]
00000000000068a8         mov        qword [rsp+0x58+var_50], rax
00000000000068ad         lea        rax, qword [rsp+0x58+var_38]
00000000000068b2         mov        qword [rsp+0x58+var_48], rax
00000000000068b7         jmp        loc_6870

                     loc_68b9:
00000000000068b9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=openat_safer+60
                        ; endp
00000000000068be         align      64                                          ; End of unwind block (FDE at 0xdbf4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     opendirat:
00000000000068c0         push       r13                                         ; Begin of unwind block (FDE at 0xdc14), CODE XREF=backupfile_internal+1213
00000000000068c2         push       r12
00000000000068c4         or         edx, 0x90900
00000000000068ca         push       rbp
00000000000068cb         push       rbx
00000000000068cc         xor        eax, eax
00000000000068ce         mov        r12, rcx
00000000000068d1         sub        rsp, 0x8
00000000000068d5         call       openat_safer                                ; openat_safer
00000000000068da         test       eax, eax
00000000000068dc         js         loc_6930

00000000000068de         mov        edi, eax                                    ; argument "__fd" for method j_fdopendir
00000000000068e0         mov        ebx, eax
00000000000068e2         call       j_fdopendir                                 ; fdopendir
00000000000068e7         test       rax, rax
00000000000068ea         mov        rbp, rax
00000000000068ed         je         loc_6908

00000000000068ef         mov        dword [r12], ebx
00000000000068f3         add        rsp, 0x8
00000000000068f7         mov        rax, rbp
00000000000068fa         pop        rbx
00000000000068fb         pop        rbp
00000000000068fc         pop        r12
00000000000068fe         pop        r13
0000000000006900         ret
                        ; endp
0000000000006901         align      8

                     loc_6908:
0000000000006908         call       j___errno_location                          ; __errno_location, CODE XREF=opendirat+45
000000000000690d         mov        r13d, dword [rax]
0000000000006910         mov        r12, rax
0000000000006913         mov        edi, ebx                                    ; argument "__fd" for method j_close
0000000000006915         call       j_close                                     ; close
000000000000691a         mov        rax, rbp
000000000000691d         mov        dword [r12], r13d
0000000000006921         add        rsp, 0x8
0000000000006925         pop        rbx
0000000000006926         pop        rbp
0000000000006927         pop        r12
0000000000006929         pop        r13
000000000000692b         ret
                        ; endp
000000000000692c         align      16

                     loc_6930:
0000000000006930         add        rsp, 0x8                                    ; CODE XREF=opendirat+28
0000000000006934         xor        ebp, ebp
0000000000006936         pop        rbx
0000000000006937         mov        rax, rbp
000000000000693a         pop        rbp
000000000000693b         pop        r12
000000000000693d         pop        r13
000000000000693f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000006940         test       rdi, rdi                                    ; End of unwind block (FDE at 0xdc14), Begin of unwind block (FDE at 0xdc74), CODE XREF=main+56
0000000000006943         push       rbx
0000000000006944         je         loc_69bd

0000000000006946         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
000000000000694b         mov        rbx, rdi
000000000000694e         call       j_strrchr                                   ; strrchr
0000000000006953         test       rax, rax
0000000000006956         je         loc_69ad

0000000000006958         lea        r8, qword [rax+1]
000000000000695c         mov        rdx, r8
000000000000695f         sub        rdx, rbx
0000000000006962         cmp        rdx, 0x6
0000000000006966         jle        loc_69ad

0000000000006968         lea        rsi, qword [rax-6]
000000000000696c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000006973         mov        ecx, 0x7
0000000000006978         rep  cmpsb byte [rsi], byte [rdi]
000000000000697a         seta       dl
000000000000697d         sbb        dl, 0x0
0000000000006980         test       dl, dl
0000000000006982         jne        loc_69ad

0000000000006984         lea        rdi, qword [aLibs+8]                        ; 0xc120
000000000000698b         mov        ecx, 0x3
0000000000006990         mov        rsi, r8
0000000000006993         mov        rbx, r8
0000000000006996         rep  cmpsb byte [rsi], byte [rdi]
0000000000006998         seta       dl
000000000000699b         sbb        dl, 0x0
000000000000699e         test       dl, dl
00000000000069a0         jne        loc_69ad

00000000000069a2         lea        rbx, qword [rax+4]
00000000000069a6         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_69ad:
00000000000069ad         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
00000000000069b4         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
00000000000069bb         pop        rbx
00000000000069bc         ret
                        ; endp

                     loc_69bd:
00000000000069bd         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
00000000000069c4         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
00000000000069cb         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
00000000000069d0         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
00000000000069d5         call       j_fwrite                                    ; fwrite
00000000000069da         call       j_abort                                     ; abort
                        ; endp
00000000000069df         align      32                                          ; End of unwind block (FDE at 0xdc74)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
00000000000069e0         push       rbp                                         ; Begin of unwind block (FDE at 0xdc94), CODE XREF=sub_7210+2597, sub_7210+2619
00000000000069e1         push       rbx
00000000000069e2         mov        rbp, rdi
00000000000069e5         mov        ebx, esi
00000000000069e7         sub        rsp, 0x8
00000000000069eb         call       locale_charset                              ; locale_charset
00000000000069f0         movzx      edx, byte [rax]
00000000000069f3         and        edx, 0xffffffdf
00000000000069f6         cmp        dl, 0x55
00000000000069f9         je         loc_6a70

00000000000069fb         cmp        dl, 0x47
00000000000069fe         je         loc_6a20

                     loc_6a00:
0000000000006a00         lea        rax, qword [aLibs+27]                       ; 0xc133, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000006a07         lea        rdx, qword [aLibs+29]                       ; 0xc135
0000000000006a0e         cmp        ebx, 0x9
0000000000006a11         cmovne     rax, rdx
0000000000006a15         add        rsp, 0x8
0000000000006a19         pop        rbx
0000000000006a1a         pop        rbp
0000000000006a1b         ret
                        ; endp
0000000000006a1c         align      32

                     loc_6a20:
0000000000006a20         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000006a24         and        edx, 0xffffffdf
0000000000006a27         cmp        dl, 0x42
0000000000006a2a         jne        loc_6a00

0000000000006a2c         cmp        byte [rax+2], 0x31
0000000000006a30         jne        loc_6a00

0000000000006a32         cmp        byte [rax+3], 0x38
0000000000006a36         jne        loc_6a00

0000000000006a38         cmp        byte [rax+4], 0x30
0000000000006a3c         jne        loc_6a00

0000000000006a3e         cmp        byte [rax+5], 0x33
0000000000006a42         jne        loc_6a00

0000000000006a44         cmp        byte [rax+6], 0x30
0000000000006a48         jne        loc_6a00

0000000000006a4a         cmp        byte [rax+7], 0x0
0000000000006a4e         jne        loc_6a00

0000000000006a50         cmp        byte [rbp], 0x60
0000000000006a54         lea        rax, qword [aLibs+20]                       ; 0xc12c
0000000000006a5b         lea        rdx, qword [aLibs+24]                       ; 0xc130
0000000000006a62         cmovne     rax, rdx
0000000000006a66         add        rsp, 0x8
0000000000006a6a         pop        rbx
0000000000006a6b         pop        rbp
0000000000006a6c         ret
                        ; endp
0000000000006a6d         align      16

                     loc_6a70:
0000000000006a70         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000006a74         and        edx, 0xffffffdf
0000000000006a77         cmp        dl, 0x54
0000000000006a7a         jne        loc_6a00

0000000000006a7c         movzx      edx, byte [rax+2]
0000000000006a80         and        edx, 0xffffffdf
0000000000006a83         cmp        dl, 0x46
0000000000006a86         jne        loc_6a00

0000000000006a8c         cmp        byte [rax+3], 0x2d
0000000000006a90         jne        loc_6a00

0000000000006a96         cmp        byte [rax+4], 0x38
0000000000006a9a         jne        loc_6a00

0000000000006aa0         cmp        byte [rax+5], 0x0
0000000000006aa4         jne        loc_6a00

0000000000006aaa         cmp        byte [rbp], 0x60
0000000000006aae         lea        rax, qword [aLibs+12]                       ; 0xc124
0000000000006ab5         lea        rdx, qword [aLibs+16]                       ; 0xc128
0000000000006abc         cmovne     rax, rdx
0000000000006ac0         add        rsp, 0x8
0000000000006ac4         pop        rbx
0000000000006ac5         pop        rbp
0000000000006ac6         ret
                        ; endp
0000000000006ac7         align      16                                          ; End of unwind block (FDE at 0xdc94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000006ad0         push       r15                                         ; Begin of unwind block (FDE at 0xdcd8), CODE XREF=sub_7210+1165, sub_7210+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000006ad2         push       r14
0000000000006ad4         mov        r15d, r8d
0000000000006ad7         push       r13
0000000000006ad9         push       r12
0000000000006adb         mov        r14, rdi
0000000000006ade         push       rbp
0000000000006adf         push       rbx
0000000000006ae0         mov        ebx, r9d
0000000000006ae3         mov        r13, rsi
0000000000006ae6         mov        rbp, rcx
0000000000006ae9         and        ebx, 0x2
0000000000006aec         sub        rsp, 0xb8
0000000000006af3         mov        rax, qword [rsp+0xe8+arg_0]
0000000000006afb         mov        qword [rsp+0xe8+var_D8], rdx
0000000000006b00         mov        dword [rsp+0xe8+var_E0], r8d
0000000000006b05         mov        dword [rsp+0xe8+var_70], r9d
0000000000006b0a         mov        qword [rsp+0xe8+var_C8], rax
0000000000006b0f         mov        rax, qword [rsp+0xe8+arg_8]
0000000000006b17         mov        qword [rsp+0xe8+var_80], rax
0000000000006b1c         mov        rax, qword [rsp+0xe8+arg_10]
0000000000006b24         mov        qword [rsp+0xe8+var_88], rax
0000000000006b29         mov        rax, qword [fs:0x28]
0000000000006b32         mov        qword [rsp+0xe8+var_40], rax
0000000000006b3a         xor        eax, eax
0000000000006b3c         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000006b41         cmp        r15d, 0xa
0000000000006b45         mov        qword [rsp+0xe8+var_90], rax
0000000000006b4a         ja         loc_7cff

0000000000006b50         lea        rcx, qword [switch_table_c1a0]              ; switch_table_c1a0
0000000000006b57         mov        edx, r15d
0000000000006b5a         movsxd     rax, dword [rcx+rdx*4]
0000000000006b5e         add        rax, rcx
0000000000006b61         jmp        rax                                         ; switch statement using table at 0xc1a0, with 11 cases, 0x6b63,0x7734,0x7790,0x77e5,0x782a,0x7864,0x790a,0x7944,0x7b38

                     loc_6b63:
0000000000006b63         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_7210+1318
0000000000006b68         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000006b6d         xor        r12d, r12d
0000000000006b70         mov        qword [rsp+0xe8+var_98], 0x0
0000000000006b79         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000006b7e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_6b83:
0000000000006b83         lea        rax, qword [aLibs+29]                       ; 0xc135, CODE XREF=sub_7210+1876
0000000000006b8a         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000006b93         xor        r15d, r15d
0000000000006b96         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000006b9e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_6ba3:
0000000000006ba3         xor        r11d, r11d                                  ; CODE XREF=sub_7210+180, sub_7210+1400, sub_7210+1488, sub_7210+1557, sub_7210+1615, sub_7210+1781, sub_7210+1839, sub_7210+2408, sub_7210+2485
0000000000006ba6         mov        rax, rbp
0000000000006ba9         mov        r8d, r12d
0000000000006bac         mov        rbp, r11
0000000000006baf         mov        r11, rax
0000000000006bb2         nop        word [rax+rax]

                     loc_6bb8:
0000000000006bb8         cmp        r11, rbp                                    ; CODE XREF=sub_6cc0+194
0000000000006bbb         setne      r12b
0000000000006bbf         cmp        r11, 0xffffffffffffffff
0000000000006bc3         jne        loc_6bd2

0000000000006bc5         mov        rax, qword [rsp+0xe8+var_D8]
0000000000006bca         cmp        byte [rax+rbp], 0x0
0000000000006bce         setne      r12b

                     loc_6bd2:
0000000000006bd2         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000006bd5         je         loc_7230

0000000000006bdb         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000006be0         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000006be5         lea        r9, qword [rdi+rbp]
0000000000006be9         setne      al
0000000000006bec         and        al, byte [rsp+0xe8+var_DB]
0000000000006bf0         mov        r10d, eax
0000000000006bf3         je         loc_6ca0

0000000000006bf9         mov        rax, qword [rsp+0xe8+var_D0]
0000000000006bfe         test       rax, rax
0000000000006c01         je         loc_7030

0000000000006c07         cmp        r11, 0xffffffffffffffff
0000000000006c0b         lea        rbx, qword [rbp+rax]
0000000000006c10         jne        loc_6c40

0000000000006c12         cmp        rax, 0x1
0000000000006c16         jbe        loc_6c40

0000000000006c18         mov        byte [rsp+0xe8+var_B0], r8b
0000000000006c1d         mov        byte [rsp+0xe8+var_B8], r10b
0000000000006c22         mov        qword [rsp+0xe8+var_C0], r9
0000000000006c27         call       j_strlen                                    ; strlen
0000000000006c2c         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000006c32         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000006c38         mov        r11, rax
0000000000006c3b         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_6c40:
0000000000006c40         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000006c43         mov        byte [rsp+0xe8+var_C0], r10b
0000000000006c48         ja         loc_7200

0000000000006c4e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000006c53         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000006c58         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
0000000000006c5b         mov        qword [rsp+0xe8+var_A8], r11
0000000000006c60         mov        byte [rsp+0xe8+var_B0], r8b
0000000000006c65         mov        qword [rsp+0xe8+var_B8], r9
0000000000006c6a         call       j_memcmp                                    ; memcmp
0000000000006c6f         test       eax, eax
0000000000006c71         mov        r9, qword [rsp+0xe8+var_B8]
0000000000006c76         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000006c7c         mov        r11, qword [rsp+0xe8+var_A8]
0000000000006c81         jne        loc_7200

0000000000006c87         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000006c8c         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000006c92         jne        loc_7c15

0000000000006c98         nop        dword [rax+rax]

                     loc_6ca0:
0000000000006ca0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_71f0+19
0000000000006ca4         cmp        bl, 0x7e
0000000000006ca7         ja         loc_6fc8

0000000000006cad         lea        rcx, qword [switch_table_c1a0+44]           ; 0xc1cc
0000000000006cb4         movzx      edx, bl
0000000000006cb7         movsxd     rax, dword [rcx+rdx*4]
0000000000006cbb         add        rax, rcx
0000000000006cbe         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_6cc0:
0000000000006cc0         xor        r10d, r10d
0000000000006cc3         cmp        r11, 0x1
0000000000006cc7         setne      al
0000000000006cca         cmp        r11, 0xffffffffffffffff
0000000000006cce         jne        loc_6cdc

0000000000006cd0         mov        rax, qword [rsp+arg_8]
0000000000006cd5         cmp        byte [rax+1], 0x0
0000000000006cd9         setne      al

                     loc_6cdc:
0000000000006cdc         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_6cc0+14
0000000000006ce1         sete       dl
0000000000006ce4         test       al, al
0000000000006ce6         je         loc_6f38

                     loc_6cec:
0000000000006cec         xor        r12d, r12d                                  ; CODE XREF=sub_6f30+11
0000000000006cef         xor        eax, eax
0000000000006cf1         nop        dword [rax]
                        ; endp

                     loc_6cf8:
0000000000006cf8         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_6ee0+50, sub_6fb0+119
0000000000006cfd         jne        loc_6e12

0000000000006d03         test       dl, dl
0000000000006d05         jne        loc_6e12

                     loc_6d0b:
0000000000006d0b         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_6dc0+87
0000000000006d10         test       rsi, rsi
0000000000006d13         je         loc_6d29

0000000000006d15         mov        edx, ebx
0000000000006d17         shr        dl, 0x5
0000000000006d1a         movzx      edx, dl
0000000000006d1d         mov        edx, dword [rsi+rdx*4]
0000000000006d20         bt         edx, ebx
0000000000006d23         jb         loc_6e73

                     loc_6d29:
0000000000006d29         test       r10b, r10b                                  ; CODE XREF=sub_6cc0+83, sub_6dc0+93
0000000000006d2c         jne        loc_6e73

0000000000006d32         xor        eax, 0x1
0000000000006d35         add        rbp, 0x1
0000000000006d39         and        eax, r8d

                     loc_6d3c:
0000000000006d3c         test       al, al                                      ; CODE XREF=sub_7210+936
0000000000006d3e         je         loc_6d60

0000000000006d40         cmp        r13, r15
0000000000006d43         jbe        loc_6d4a

0000000000006d45         mov        byte [r14+r15], 0x27

                     loc_6d4a:
0000000000006d4a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_6cc0+131
0000000000006d4e         cmp        r13, rax
0000000000006d51         jbe        loc_6d59

0000000000006d53         mov        byte [r14+r15+1], 0x27

                     loc_6d59:
0000000000006d59         add        r15, 0x2                                    ; CODE XREF=sub_6cc0+145
0000000000006d5d         xor        r8d, r8d

                     loc_6d60:
0000000000006d60         cmp        r15, r13                                    ; CODE XREF=sub_6cc0+126, sub_6dc0+275, sub_7210+869
0000000000006d63         jae        loc_6d69

0000000000006d65         mov        byte [r14+r15], bl

                     loc_6d69:
0000000000006d69         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_6cc0+163
0000000000006d6e         add        r15, 0x1
0000000000006d72         mov        eax, 0x0
0000000000006d77         test       r12b, r12b
0000000000006d7a         cmove      edi, eax
0000000000006d7d         mov        byte [rsp+0xe8+var_DA], dil
0000000000006d82         jmp        loc_6bb8
0000000000006d87         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_6d90:
0000000000006d90         xor        r10d, r10d
0000000000006d93         mov        eax, dword [rsp+arg_0]
0000000000006d97         cmp        eax, 0x2
0000000000006d9a         je         loc_7358

0000000000006da0         cmp        eax, 0x5
0000000000006da3         je         loc_7318

0000000000006da9         cmp        eax, 0x2
0000000000006dac         mov        ebx, 0x3f
0000000000006db1         sete       dl
0000000000006db4         xor        r12d, r12d
0000000000006db7         xor        eax, eax
0000000000006db9         jmp        sub_6cc0+56
                        ; endp
0000000000006dbe         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_6dc0:
0000000000006dc0         xor        r10d, r10d
0000000000006dc3         cmp        dword [rsp+arg_0], 0x2
0000000000006dc8         je         loc_72d0

0000000000006dce         mov        byte [rsp+arg_74], r12b
0000000000006dd3         xor        edx, edx
0000000000006dd5         xor        eax, eax
0000000000006dd7         mov        ebx, 0x27
0000000000006ddc         jmp        sub_6cc0+56
                        ; endp
0000000000006de1         nop        dword [rax]
0000000000006de8         mov        edx, 0x9
0000000000006ded         mov        ebx, 0x74

                     loc_6df2:
0000000000006df2         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_6f80+10, sub_7070+37, sub_71b0+53
0000000000006df7         sete       al
0000000000006dfa         and        al, byte [rsp+arg_7]
0000000000006dfe         jne        sub_6f30+30

0000000000006e04         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_6dc0+114
0000000000006e09         jne        loc_6e70

                     loc_6e0b:
0000000000006e0b         mov        ebx, edx                                    ; CODE XREF=sub_6ee0+18
0000000000006e0d         xor        r12d, r12d
0000000000006e10         xor        eax, eax
                        ; endp

                     loc_6e12:
0000000000006e12         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_6cc0+61, sub_6cc0+69
0000000000006e17         jne        loc_6d0b

0000000000006e1d         jmp        loc_6d29
0000000000006e22         nop        word [rax+rax]
0000000000006e28         mov        edx, 0x8
0000000000006e2d         mov        ebx, 0x62
0000000000006e32         jmp        sub_6dc0+68
0000000000006e34         nop        dword [rax]
0000000000006e38         cmp        dword [rsp+8], 0x2
0000000000006e3d         je         sub_7210                                    ; sub_7210
0000000000006e43         cmp        byte [rsp+0xd], 0x0
0000000000006e48         je         sub_7050+16

                     loc_6e4e:
0000000000006e4e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_7050+8
0000000000006e53         je         loc_7060

0000000000006e59         cmp        qword [rsp+arg_10], 0x0
0000000000006e5f         jne        loc_721b

0000000000006e65         mov        ebx, 0x5c
0000000000006e6a         nop        word [rax+rax]
                        ; endp

                     loc_6e70:
0000000000006e70         xor        r12d, r12d                                  ; CODE XREF=sub_6dc0+73, sub_71b0+29
                        ; endp

                     loc_6e73:
0000000000006e73         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_6cc0+99, sub_6cc0+108
0000000000006e78         sete       dl
0000000000006e7b         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000006e80         mov        eax, edx
0000000000006e82         jne        loc_76d8

0000000000006e88         mov        eax, r8d
0000000000006e8b         xor        eax, 0x1
0000000000006e8e         and        al, dl
0000000000006e90         je         loc_6ec1

0000000000006e92         cmp        r13, r15
0000000000006e95         jbe        loc_6e9c

0000000000006e97         mov        byte [r14+r15], 0x27

                     loc_6e9c:
0000000000006e9c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_6dc0+213
0000000000006ea0         cmp        r13, rdx
0000000000006ea3         jbe        loc_6eab

0000000000006ea5         mov        byte [r14+r15+1], 0x24

                     loc_6eab:
0000000000006eab         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_6dc0+227
0000000000006eaf         cmp        r13, rdx
0000000000006eb2         jbe        loc_6eba

0000000000006eb4         mov        byte [r14+r15+2], 0x27

                     loc_6eba:
0000000000006eba         add        r15, 0x3                                    ; CODE XREF=sub_6dc0+242
0000000000006ebe         mov        r8d, eax

                     loc_6ec1:
0000000000006ec1         cmp        r13, r15                                    ; CODE XREF=sub_6dc0+208
0000000000006ec4         jbe        loc_6ecb

0000000000006ec6         mov        byte [r14+r15], 0x5c

                     loc_6ecb:
0000000000006ecb         add        r15, 0x1                                    ; CODE XREF=sub_6dc0+260
0000000000006ecf         add        rbp, 0x1
0000000000006ed3         jmp        loc_6d60
0000000000006ed8         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_6ee0:
0000000000006ee0         cmp        byte [rsp+arg_5], 0x0
0000000000006ee5         jne        loc_70b3

0000000000006eeb         xor        edx, edx
0000000000006eed         test       byte [rsp+arg_70], 0x1
0000000000006ef2         je         loc_6e0b

0000000000006ef8         add        rbp, 0x1
0000000000006efc         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000006f01         nop        dword [rax]
0000000000006f08         cmp        dword [rsp+8], 0x2
0000000000006f0d         sete       dl
0000000000006f10         xor        eax, eax
0000000000006f12         jmp        sub_6cc0+56
0000000000006f17         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6f20:
0000000000006f20         mov        edx, 0x7
0000000000006f25         mov        ebx, 0x61
0000000000006f2a         jmp        sub_6dc0+68
                        ; endp
0000000000006f2f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6f30:
0000000000006f30         cmp        dword [rsp+8], 0x2
0000000000006f35         sete       dl
                        ; endp

                     loc_6f38:
0000000000006f38         test       rbp, rbp                                    ; CODE XREF=sub_6cc0+38, sub_7150+35
0000000000006f3b         jne        loc_6cec

0000000000006f41         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_7180+43
0000000000006f46         and        al, dl
0000000000006f48         je         sub_6cc0+56

0000000000006f4e         mov        rbp, r11
0000000000006f51         mov        dword [rsp+arg_0], 0x2
0000000000006f59         jmp        sub_7210+1097
                        ; endp
0000000000006f5e         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_6f60:
0000000000006f60         cmp        dword [rsp+arg_0], 0x2
0000000000006f65         sete       dl
0000000000006f68         xor        r12d, r12d
0000000000006f6b         jmp        sub_6f30+17
                        ; endp
0000000000006f6d         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_6f70:
0000000000006f70         cmp        dword [rsp+arg_0], 0x2
0000000000006f75         mov        ebx, 0x20
0000000000006f7a         sete       dl
0000000000006f7d         jmp        sub_6f30+17
                        ; endp
0000000000006f7f         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_6f80:
0000000000006f80         mov        edx, 0xd
0000000000006f85         mov        ebx, 0x72
0000000000006f8a         jmp        loc_6df2
0000000000006f8f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6f90:
0000000000006f90         mov        edx, 0xc
0000000000006f95         mov        ebx, 0x66
0000000000006f9a         jmp        sub_6dc0+68
                        ; endp
0000000000006f9f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6fa0:
0000000000006fa0         mov        edx, 0xb
0000000000006fa5         mov        ebx, 0x76
0000000000006faa         jmp        sub_6dc0+68
                        ; endp
0000000000006faf         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6fb0:
0000000000006fb0         mov        edx, 0xa
0000000000006fb5         mov        ebx, 0x6e
0000000000006fba         jmp        sub_6dc0+50
                        ; endp
0000000000006fbf         align      64

                     loc_6fc0:
0000000000006fc0         xor        r10d, r10d                                  ; CODE XREF=sub_6fb0+135
0000000000006fc3         nop        dword [rax+rax]

                     loc_6fc8:
0000000000006fc8         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
0000000000006fce         jne        loc_7378

0000000000006fd4         mov        qword [rsp+0xe8+var_B0], r11
0000000000006fd9         mov        byte [rsp+0xe8+var_B8], r8b
0000000000006fde         mov        byte [rsp+0xe8+var_C0], r10b
0000000000006fe3         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000006fe8         mov        rcx, qword [rax]
0000000000006feb         movzx      edx, bl
0000000000006fee         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000006ff4         movzx      r8d, byte [rsp+0xe8+var_B8]
0000000000006ffa         mov        r11, qword [rsp+0xe8+var_B0]
0000000000006fff         mov        edi, 0x1
0000000000007004         movzx      eax, word [rcx+rdx*2]
0000000000007008         and        ax, 0x4000
000000000000700c         setne      r12b
0000000000007010         sete       al
0000000000007013         and        al, byte [rsp+0xe8+var_DB]

                     loc_7017:
0000000000007017         test       al, al                                      ; CODE XREF=sub_7210+2221
0000000000007019         jne        loc_79b1

000000000000701f         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000007024         sete       dl
0000000000007027         jmp        loc_6cf8
000000000000702c         align      16

                     loc_7030:
0000000000007030         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000007034         cmp        bl, 0x7e
0000000000007037         ja         loc_6fc0

0000000000007039         lea        rcx, qword [switch_table_c1a0+552]          ; 0xc3c8
0000000000007040         movzx      edx, bl
0000000000007043         movsxd     rax, dword [rcx+rdx*4]
0000000000007047         add        rax, rcx
000000000000704a         jmp        rax
                        ; endp
000000000000704c         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_7050:
0000000000007050         xor        r10d, r10d
0000000000007053         cmp        byte [rsp+arg_5], 0x0
0000000000007058         jne        loc_6e4e

000000000000705e         nop

                     loc_7060:
0000000000007060         mov        edx, 0x5c                                   ; CODE XREF=sub_6dc0+136, sub_6dc0+147
0000000000007065         mov        ebx, 0x5c
000000000000706a         jmp        sub_6dc0+68
                        ; endp
000000000000706f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_7070:
0000000000007070         mov        edx, 0xc
0000000000007075         xor        r10d, r10d
0000000000007078         mov        ebx, 0x66
000000000000707d         jmp        sub_6dc0+68
                        ; endp
0000000000007082         nop        word [rax+rax]
0000000000007088         mov        edx, 0xa
000000000000708d         xor        r10d, r10d
0000000000007090         mov        ebx, 0x6e
0000000000007095         jmp        sub_6dc0+50
000000000000709a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_70a0:
00000000000070a0         mov        ebx, 0x61
00000000000070a5         jmp        sub_6dc0+176
                        ; endp
00000000000070aa         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_70b0:
00000000000070b0         xor        r10d, r10d
                        ; endp

                     loc_70b3:
00000000000070b3         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_6ee0+5
00000000000070b8         sete       dl
00000000000070bb         cmp        byte [rsp+arg_7], 0x0
00000000000070c0         jne        loc_7c5a

00000000000070c6         mov        eax, r8d
00000000000070c9         mov        rcx, r15
00000000000070cc         xor        eax, 0x1
00000000000070cf         and        al, dl
00000000000070d1         je         loc_7100

00000000000070d3         cmp        r13, r15
00000000000070d6         jbe        loc_70dd

00000000000070d8         mov        byte [r14+r15], 0x27

                     loc_70dd:
00000000000070dd         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_70b0+38
00000000000070e1         cmp        r13, rcx
00000000000070e4         jbe        loc_70ec

00000000000070e6         mov        byte [r14+r15+1], 0x24

                     loc_70ec:
00000000000070ec         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_70b0+52
00000000000070f0         cmp        r13, rcx
00000000000070f3         ja         loc_7729

                     loc_70f9:
00000000000070f9         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_7210+1311
00000000000070fd         mov        r8d, eax

                     loc_7100:
0000000000007100         cmp        r13, rcx                                    ; CODE XREF=sub_70b0+33
0000000000007103         jbe        loc_710a

0000000000007105         mov        byte [r14+rcx], 0x5c

                     loc_710a:
000000000000710a         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_70b0+83
000000000000710f         lea        r15, qword [rcx+1]
0000000000007113         je         loc_7719

0000000000007119         lea        rax, qword [rbp+1]
000000000000711d         cmp        rax, r11
0000000000007120         jae        loc_713b

0000000000007122         mov        rax, qword [rsp+arg_8]
0000000000007127         movzx      eax, byte [rax+rbp+1]
000000000000712c         mov        byte [rsp+arg_20], al
0000000000007130         sub        eax, 0x30
0000000000007133         cmp        al, 0x9
0000000000007135         jbe        loc_7969

                     loc_713b:
000000000000713b         mov        eax, r12d                                   ; CODE XREF=sub_70b0+112
000000000000713e         mov        ebx, 0x30
0000000000007143         xor        r12d, r12d
0000000000007146         jmp        sub_6cc0+56
                        ; endp
000000000000714b         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_7150:
0000000000007150         cmp        dword [rsp+arg_0], 0x2
0000000000007155         mov        r12d, r10d
0000000000007158         sete       dl
000000000000715b         xor        r10d, r10d
000000000000715e         xor        eax, eax
0000000000007160         jmp        sub_6cc0+56
                        ; endp
0000000000007165         nop        dword [rax]
0000000000007168         cmp        dword [rsp+8], 0x2
000000000000716d         sete       dl
0000000000007170         xor        r10d, r10d
0000000000007173         jmp        sub_6f30+8
0000000000007178         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_7180:
0000000000007180         cmp        dword [rsp+8], 0x2
0000000000007185         sete       dl
0000000000007188         xor        r10d, r10d
000000000000718b         xor        r12d, r12d
000000000000718e         jmp        sub_6f30+17
                        ; endp
0000000000007193         nop        dword [rax+rax]
0000000000007198         cmp        dword [rsp+8], 0x2
000000000000719d         mov        r12d, r10d
00000000000071a0         mov        ebx, 0x20
00000000000071a5         sete       dl
00000000000071a8         xor        r10d, r10d
00000000000071ab         jmp        sub_6f30+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_71b0:
00000000000071b0         mov        edx, 0xd
00000000000071b5         xor        r10d, r10d
00000000000071b8         mov        ebx, 0x72
00000000000071bd         jmp        sub_6dc0+50
                        ; endp
00000000000071c2         nop        word [rax+rax]
00000000000071c8         mov        ebx, 0x76
00000000000071cd         jmp        sub_6dc0+176
00000000000071d2         nop        word [rax+rax]
00000000000071d8         mov        edx, 0x9
00000000000071dd         xor        r10d, r10d
00000000000071e0         mov        ebx, 0x74
00000000000071e5         jmp        sub_6dc0+50
00000000000071ea         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_71f0:
00000000000071f0         mov        ebx, 0x62
00000000000071f5         jmp        sub_6dc0+176
                        ; endp
00000000000071fa         nop        word [rax+rax]

                     loc_7200:
0000000000007200         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000007203         jmp        loc_6ca0
0000000000007208         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_7210:
0000000000007210         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_6dc0+125
0000000000007215         jne        sub_7210+2416
                        ; endp

                     loc_721b:
000000000000721b         add        rbp, 0x1                                    ; CODE XREF=sub_6dc0+159
000000000000721f         mov        eax, r8d
0000000000007222         xor        r12d, r12d
0000000000007225         mov        ebx, 0x5c
000000000000722a         jmp        sub_6cc0+124
                        ; endp
000000000000722f         align      16

                     loc_7230:
0000000000007230         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000007235         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000723a         mov        r12d, r8d
000000000000723d         mov        rbp, r11
0000000000007240         sete       dl
0000000000007243         mov        eax, ebx
0000000000007245         test       r15, r15
0000000000007248         sete       cl
000000000000724b         and        eax, edx
000000000000724d         and        al, cl
000000000000724f         jne        loc_7cb6

0000000000007255         mov        eax, ebx
0000000000007257         xor        eax, 0x1
000000000000725a         and        dl, al
000000000000725c         je         loc_7bcc

0000000000007262         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000007267         je         loc_7bca

000000000000726d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000007272         jne        loc_7c6d

0000000000007278         test       r13, r13
000000000000727b         sete       al
000000000000727e         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000007284         setne      dl
0000000000007287         and        al, dl
0000000000007289         je         loc_7cac

000000000000728f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_7294:
0000000000007294         lea        rbx, qword [aLibs+29]                       ; 0xc135, CODE XREF=sub_7210+2781
000000000000729b         mov        byte [r14], 0x27
000000000000729f         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000072a7         mov        r15d, 0x1
00000000000072ad         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000072b6         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000072bb         mov        qword [rsp+0xe8+var_A0], rbx
00000000000072c0         mov        byte [rsp+0xe8+var_6C], al
00000000000072c4         jmp        loc_6ba3
00000000000072c9         align      16

                     loc_72d0:
00000000000072d0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_6dc0+8
00000000000072d5         jne        sub_7210+2416

00000000000072db         test       r13, r13
00000000000072de         je         loc_76e0

00000000000072e4         xor        edx, edx
00000000000072e6         cmp        qword [rsp+arg_48], 0x0
00000000000072ec         jne        loc_76e0

                     loc_72f2:
00000000000072f2         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_7210+1284, sub_7210+2794
00000000000072f7         add        r15, 0x3
00000000000072fb         xor        eax, eax
00000000000072fd         mov        byte [rsp+arg_74], r12b
0000000000007302         xor        r8d, r8d
0000000000007305         mov        r13, rdx
0000000000007308         mov        ebx, 0x27
000000000000730d         jmp        sub_6cc0+105
                        ; endp
0000000000007312         align      8

                     loc_7318:
0000000000007318         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_6d90+19
000000000000731d         je         loc_7340

000000000000731f         lea        rcx, qword [rbp+2]
0000000000007323         cmp        rcx, r11
0000000000007326         jae        loc_7340

0000000000007328         mov        rax, qword [rsp+arg_8]
000000000000732d         cmp        byte [rax+rbp+1], 0x3f
0000000000007332         je         loc_7ac2

0000000000007338         nop        dword [rax+rax]

                     loc_7340:
0000000000007340         xor        edx, edx                                    ; CODE XREF=sub_7210+269, sub_7210+278, sub_7210+2233, sub_7210+2253
0000000000007342         xor        r12d, r12d
0000000000007345         xor        eax, eax
0000000000007347         mov        ebx, 0x3f
000000000000734c         jmp        sub_6cc0+56
                        ; endp
0000000000007351         align      8

                     loc_7358:
0000000000007358         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_6d90+10
000000000000735d         jne        loc_7b80

0000000000007363         xor        r12d, r12d
0000000000007366         xor        eax, eax
0000000000007368         mov        ebx, 0x3f
000000000000736d         jmp        sub_6cc0+105
                        ; endp
0000000000007372         align      8

                     loc_7378:
0000000000007378         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_6fb0+30
0000000000007380         cmp        r11, 0xffffffffffffffff
0000000000007384         mov        qword [rsp+0xe8+var_48], 0x0
0000000000007390         mov        qword [rsp+0xe8+var_C0], rax
0000000000007395         jne        loc_73c4

0000000000007397         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
000000000000739c         mov        byte [rsp+0xe8+var_A8], r8b
00000000000073a1         mov        byte [rsp+0xe8+var_B0], r10b
00000000000073a6         mov        qword [rsp+0xe8+var_B8], r9
00000000000073ab         call       j_strlen                                    ; strlen
00000000000073b0         movzx      r8d, byte [rsp+0xe8+var_A8]
00000000000073b6         movzx      r10d, byte [rsp+0xe8+var_B0]
00000000000073bc         mov        r11, rax
00000000000073bf         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_73c4:
00000000000073c4         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_7210+389
00000000000073cc         xor        ecx, ecx
00000000000073ce         mov        byte [rsp+0xe8+var_6A], bl
00000000000073d2         mov        byte [rsp+0xe8+var_6B], r8b
00000000000073d7         mov        rbx, rcx
00000000000073da         mov        qword [rsp+0xe8+var_60], r9
00000000000073e2         mov        qword [rsp+0xe8+var_B0], rax
00000000000073e7         mov        byte [rsp+0xe8+var_69], r10b
00000000000073ec         mov        qword [rsp+0xe8+var_68], r15
00000000000073f4         mov        qword [rsp+0xe8+var_A8], r14
00000000000073f9         mov        qword [rsp+0xe8+var_78], r13
00000000000073fe         mov        qword [rsp+0xe8+var_B8], r11

                     loc_7403:
0000000000007403         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_7210+623
0000000000007408         lea        r14, qword [rbp+rbx]
000000000000740d         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000007412         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000007417         mov        rdi, qword [rsp+0xe8+var_B0]
000000000000741c         lea        r13, qword [rax+r14]
0000000000007420         sub        rdx, r14
0000000000007423         mov        rsi, r13
0000000000007426         call       rpl_mbrtowc                                 ; rpl_mbrtowc
000000000000742b         test       rax, rax
000000000000742e         mov        r15, rax
0000000000007431         je         loc_7481

0000000000007433         cmp        rax, 0xffffffffffffffff
0000000000007437         je         loc_7a55

000000000000743d         cmp        rax, 0xfffffffffffffffe
0000000000007441         je         loc_79e1

0000000000007447         cmp        dword [rsp+0xe8+var_E0], 0x2
000000000000744c         sete       al
000000000000744f         and        al, byte [rsp+0xe8+var_D9]
0000000000007453         jne        loc_75f0

                     loc_7459:
0000000000007459         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_7210+996, sub_7210+1031
0000000000007460         call       j_iswprint                                  ; iswprint
0000000000007465         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
000000000000746a         test       eax, eax
000000000000746c         mov        eax, 0x0
0000000000007471         cmove      r12d, eax
0000000000007475         add        rbx, r15
0000000000007478         call       j_mbsinit                                   ; mbsinit
000000000000747d         test       eax, eax
000000000000747f         je         loc_7403

                     loc_7481:
0000000000007481         mov        edx, r12d                                   ; CODE XREF=sub_7210+545
0000000000007484         mov        rdi, rbx
0000000000007487         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000748d         xor        edx, 0x1
0000000000007490         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000007495         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000749b         and        dl, byte [rsp+0xe8+var_DB]
000000000000749f         mov        r15, qword [rsp+0xe8+var_68]
00000000000074a7         mov        r14, qword [rsp+0xe8+var_A8]
00000000000074ac         mov        r13, qword [rsp+0xe8+var_78]
00000000000074b1         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_74b6:
00000000000074b6         cmp        rdi, 0x1                                    ; CODE XREF=sub_7210+2112, sub_7210+2168
00000000000074ba         jbe        loc_7abb

                     loc_74c0:
00000000000074c0         mov        rcx, rdi                                    ; CODE XREF=sub_7210+1961
00000000000074c3         xor        esi, esi
00000000000074c5         movzx      r9d, byte [rsp+0xe8+var_D9]
00000000000074cb         add        rcx, rbp
00000000000074ce         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000074d3         jmp        loc_758e
00000000000074d8         align      32

                     loc_74e0:
00000000000074e0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_7210+896
00000000000074e5         sete       al
00000000000074e8         test       r9b, r9b
00000000000074eb         jne        loc_79a0

00000000000074f1         mov        esi, r8d
00000000000074f4         xor        esi, 0x1
00000000000074f7         and        al, sil
00000000000074fa         je         loc_752b

00000000000074fc         cmp        r13, r15
00000000000074ff         jbe        loc_7506

0000000000007501         mov        byte [r14+r15], 0x27

                     loc_7506:
0000000000007506         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_7210+751
000000000000750a         cmp        r13, rsi
000000000000750d         jbe        loc_7515

000000000000750f         mov        byte [r14+r15+1], 0x24

                     loc_7515:
0000000000007515         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_7210+765
0000000000007519         cmp        r13, rsi
000000000000751c         jbe        loc_7524

000000000000751e         mov        byte [r14+r15+2], 0x27

                     loc_7524:
0000000000007524         add        r15, 0x3                                    ; CODE XREF=sub_7210+780
0000000000007528         mov        r8d, eax

                     loc_752b:
000000000000752b         cmp        r13, r15                                    ; CODE XREF=sub_7210+746
000000000000752e         jbe        loc_7535

0000000000007530         mov        byte [r14+r15], 0x5c

                     loc_7535:
0000000000007535         lea        rax, qword [r15+1]                          ; CODE XREF=sub_7210+798
0000000000007539         cmp        r13, rax
000000000000753c         jbe        loc_754b

000000000000753e         mov        eax, ebx
0000000000007540         shr        al, 0x6
0000000000007543         add        eax, 0x30
0000000000007546         mov        byte [r14+r15+1], al

                     loc_754b:
000000000000754b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_7210+812
000000000000754f         cmp        r13, rax
0000000000007552         jbe        loc_7564

0000000000007554         mov        eax, ebx
0000000000007556         shr        al, 0x3
0000000000007559         and        eax, 0x7
000000000000755c         add        eax, 0x30
000000000000755f         mov        byte [r14+r15+2], al

                     loc_7564:
0000000000007564         and        ebx, 0x7                                    ; CODE XREF=sub_7210+834
0000000000007567         add        rbp, 0x1
000000000000756b         add        r15, 0x3
000000000000756f         add        ebx, 0x30
0000000000007572         cmp        rbp, rcx
0000000000007575         jae        loc_6d60

000000000000757b         mov        esi, edx

                     loc_757d:
000000000000757d         cmp        r13, r15                                    ; CODE XREF=sub_7210+985, sub_7210+1969
0000000000007580         jbe        loc_7586

0000000000007582         mov        byte [r14+r15], bl

                     loc_7586:
0000000000007586         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_7210+880
000000000000758a         add        r15, 0x1

                     loc_758e:
000000000000758e         test       dl, dl                                      ; CODE XREF=sub_7210+707
0000000000007590         jne        loc_74e0

0000000000007596         mov        eax, esi
0000000000007598         xor        eax, 0x1
000000000000759b         and        eax, r8d
000000000000759e         test       r10b, r10b
00000000000075a1         je         loc_75b1

00000000000075a3         cmp        r13, r15
00000000000075a6         jbe        loc_75ad

00000000000075a8         mov        byte [r14+r15], 0x5c

                     loc_75ad:
00000000000075ad         add        r15, 0x1                                    ; CODE XREF=sub_7210+918

                     loc_75b1:
00000000000075b1         add        rbp, 0x1                                    ; CODE XREF=sub_7210+913
00000000000075b5         cmp        rbp, rcx
00000000000075b8         jae        loc_6d3c

00000000000075be         test       al, al
00000000000075c0         je         loc_79be

00000000000075c6         cmp        r13, r15
00000000000075c9         jbe        loc_75d0

00000000000075cb         mov        byte [r14+r15], 0x27

                     loc_75d0:
00000000000075d0         lea        rax, qword [r15+1]                          ; CODE XREF=sub_7210+953
00000000000075d4         cmp        r13, rax
00000000000075d7         jbe        loc_75df

00000000000075d9         mov        byte [r14+r15+1], 0x27

                     loc_75df:
00000000000075df         add        r15, 0x2                                    ; CODE XREF=sub_7210+967
00000000000075e3         xor        r10d, r10d
00000000000075e6         xor        r8d, r8d
00000000000075e9         jmp        loc_757d
00000000000075eb         align      16

                     loc_75f0:
00000000000075f0         cmp        r15, 0x1                                    ; CODE XREF=sub_7210+579
00000000000075f4         je         loc_7459

00000000000075fa         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000075ff         lea        rcx, qword [rdi+r15]
0000000000007603         lea        rdx, qword [rdi+r14+1]
0000000000007608         lea        r8, qword [rcx+r14]
000000000000760c         jmp        loc_761d
000000000000760e         align      16

                     loc_7610:
0000000000007610         add        rdx, 0x1                                    ; CODE XREF=sub_7210+1046, sub_7210+1072
0000000000007614         cmp        r8, rdx
0000000000007617         je         loc_7459

                     loc_761d:
000000000000761d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_7210+1020
0000000000007620         sub        ecx, 0x5b
0000000000007623         cmp        cl, 0x21
0000000000007626         ja         loc_7610

0000000000007628         mov        esi, 0x1
000000000000762d         shl        rsi, cl
0000000000007630         mov        rcx, rsi
0000000000007633         movabs     rsi, 0x20000002b
000000000000763d         test       rcx, rsi
0000000000007640         je         loc_7610

0000000000007642         mov        r14, qword [rsp+0xe8+var_A8]
0000000000007647         mov        r13, qword [rsp+0xe8+var_78]
000000000000764c         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000007651         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_7659:
0000000000007659         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_7210+1227, sub_7210+1948, sub_7210+2585, sub_7210+2734
000000000000765e         je         loc_7670

0000000000007660         test       al, al
0000000000007662         mov        eax, 0x4
0000000000007667         cmove      eax, dword [rsp+0xe8+var_E0]
000000000000766c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_7670:
0000000000007670         sub        rsp, 0x8                                    ; CODE XREF=sub_7210+1102
0000000000007674         mov        rcx, rbp
0000000000007677         mov        rsi, r13
000000000000767a         push       qword [rsp+0xf0+var_88]
000000000000767e         push       qword [rsp+0xf8+var_80]
0000000000007682         mov        rdi, r14
0000000000007685         push       0x0
0000000000007687         mov        r9d, dword [rsp+0x108+var_70]
000000000000768f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000007694         mov        rdx, qword [rsp+0x108+var_D8]
0000000000007699         and        r9d, 0xfffffffd
000000000000769d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000076a2         add        rsp, 0x20
00000000000076a6         mov        r15, rax

                     loc_76a9:
00000000000076a9         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_7210+2549, sub_7210+2560, sub_7210+2711
00000000000076b1         xor        rbx, qword [fs:0x28]
00000000000076ba         mov        rax, r15
00000000000076bd         jne        loc_7cc3

00000000000076c3         add        rsp, 0xb8
00000000000076ca         pop        rbx
00000000000076cb         pop        rbp
00000000000076cc         pop        r12
00000000000076ce         pop        r13
00000000000076d0         pop        r14
00000000000076d2         pop        r15
00000000000076d4         ret
                        ; endp
00000000000076d5         align      8

                     loc_76d8:
00000000000076d8         mov        rbp, r11                                    ; CODE XREF=sub_6dc0+194
00000000000076db         jmp        loc_7659

                     loc_76e0:
00000000000076e0         cmp        r13, r15                                    ; CODE XREF=sub_7210+206, sub_7210+220
00000000000076e3         jbe        loc_76ea

00000000000076e5         mov        byte [r14+r15], 0x27

                     loc_76ea:
00000000000076ea         lea        rax, qword [r15+1]                          ; CODE XREF=sub_7210+1235
00000000000076ee         cmp        r13, rax
00000000000076f1         jbe        loc_76f9

00000000000076f3         mov        byte [r14+r15+1], 0x5c

                     loc_76f9:
00000000000076f9         lea        rax, qword [r15+2]                          ; CODE XREF=sub_7210+1249
00000000000076fd         cmp        r13, rax
0000000000007700         jbe        loc_7cf2

0000000000007706         mov        rdx, r13
0000000000007709         mov        byte [r14+r15+2], 0x27
000000000000770f         mov        r13, qword [rsp+arg_48]
0000000000007714         jmp        loc_72f2

                     loc_7719:
0000000000007719         mov        eax, r12d                                   ; CODE XREF=sub_70b0+99
000000000000771c         mov        ebx, 0x30
0000000000007721         xor        r12d, r12d
0000000000007724         jmp        sub_6cc0+105
                        ; endp

                     loc_7729:
0000000000007729         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_70b0+67
000000000000772f         jmp        loc_70f9

                     loc_7734:
0000000000007734         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000007736         jne        loc_6b63

000000000000773c         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_7741:
0000000000007741         test       r13, r13                                    ; CODE XREF=sub_7210+2749
0000000000007744         jne        loc_7cda

000000000000774a         lea        rax, qword [aLibs+29]                       ; 0xc135
0000000000007751         mov        qword [rsp+0xe8+var_98], 0x0
000000000000775a         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000775f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000007764         xor        r12d, r12d
0000000000007767         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000776c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000007775         mov        qword [rsp+0xe8+var_A0], rax
000000000000777a         mov        r15d, 0x1
0000000000007780         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000007788         jmp        loc_6ba3
000000000000778d         align      16

                     loc_7790:
0000000000007790         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000007792         jne        loc_7b8d

0000000000007798         test       r13, r13
000000000000779b         je         loc_79c6

00000000000077a1         mov        byte [r14], 0x22
00000000000077a5         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000077aa         xor        r12d, r12d
00000000000077ad         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000077b2         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_77bb:
00000000000077bb         lea        rax, qword [aLibs+27]                       ; 0xc133, CODE XREF=sub_7210+1996
00000000000077c2         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000077c7         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000077cc         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000077d5         mov        r15d, 0x1
00000000000077db         mov        qword [rsp+0xe8+var_A0], rax
00000000000077e0         jmp        loc_6ba3

                     loc_77e5:
00000000000077e5         lea        rax, qword [aLibs+27]                       ; case 6, 0xc133, CODE XREF=quotearg_buffer_restyled+145
00000000000077ec         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000077f1         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000077f6         xor        r12d, r12d
00000000000077f9         mov        qword [rsp+0xe8+var_98], 0x0
0000000000007802         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000007807         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000780c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000007815         xor        r15d, r15d
0000000000007818         mov        qword [rsp+0xe8+var_A0], rax
000000000000781d         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000007825         jmp        loc_6ba3

                     loc_782a:
000000000000782a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
000000000000782f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000007834         xor        r12d, r12d
0000000000007837         mov        qword [rsp+0xe8+var_98], 0x0
0000000000007840         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000007845         xor        r15d, r15d
0000000000007848         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000784d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000007856         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000785f         jmp        loc_6ba3

                     loc_7864:
0000000000007864         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000007869         je         loc_78c1

000000000000786b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0xc137
0000000000007872         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007874         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007879         call       j_dcgettext                                 ; dcgettext
000000000000787e         mov        rcx, rax
0000000000007881         mov        qword [rsp+0xe8+var_80], rax
0000000000007886         lea        rax, qword [aLibs+31]                       ; 0xc137
000000000000788d         cmp        rcx, rax
0000000000007890         je         loc_7c2e

                     loc_7896:
0000000000007896         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0xc135, CODE XREF=sub_7210+2607
000000000000789d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000789f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000078a4         call       j_dcgettext                                 ; dcgettext
00000000000078a9         mov        rcx, rax
00000000000078ac         mov        qword [rsp+0xe8+var_88], rax
00000000000078b1         lea        rax, qword [aLibs+29]                       ; 0xc135
00000000000078b8         cmp        rcx, rax
00000000000078bb         je         loc_7c44

                     loc_78c1:
00000000000078c1         xor        r15d, r15d                                  ; CODE XREF=sub_7210+1625, sub_7210+2629
00000000000078c4         test       ebx, ebx
00000000000078c6         je         loc_7a8d

                     loc_78cc:
00000000000078cc         test       ebx, ebx                                    ; CODE XREF=sub_7210+2183, sub_7210+2214
00000000000078ce         mov        rbx, qword [rsp+0xe8+var_88]
00000000000078d3         setne      byte [rsp+0xe8+var_D9]
00000000000078d8         xor        r12d, r12d
00000000000078db         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
00000000000078de         call       j_strlen                                    ; strlen
00000000000078e3         mov        qword [rsp+0xe8+var_A0], rbx
00000000000078e8         mov        qword [rsp+0xe8+var_D0], rax
00000000000078ed         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000078f2         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000078f7         mov        qword [rsp+0xe8+var_98], 0x0
0000000000007900         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000007905         jmp        loc_6ba3

                     loc_790a:
000000000000790a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
000000000000790f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000007914         xor        r12d, r12d
0000000000007917         mov        qword [rsp+0xe8+var_98], 0x0
0000000000007920         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000007925         xor        r15d, r15d
0000000000007928         mov        byte [rsp+0xe8+var_DB], 0x0
000000000000792d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000007936         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000793f         jmp        loc_6ba3

                     loc_7944:
0000000000007944         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000007949         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000794e         xor        r12d, r12d
0000000000007951         mov        qword [rsp+0xe8+var_98], 0x0
000000000000795a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000795f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000007964         jmp        loc_6b83

                     loc_7969:
0000000000007969         cmp        r13, r15                                    ; CODE XREF=sub_70b0+133
000000000000796c         jbe        loc_7973

000000000000796e         mov        byte [r14+r15], 0x30

                     loc_7973:
0000000000007973         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_7210+1884
0000000000007977         cmp        r13, rax
000000000000797a         jbe        loc_7982

000000000000797c         mov        byte [r14+rcx+2], 0x30

                     loc_7982:
0000000000007982         mov        eax, r12d                                   ; CODE XREF=sub_7210+1898
0000000000007985         lea        r15, qword [rcx+3]
0000000000007989         xor        r12d, r12d
000000000000798c         mov        ebx, 0x30
0000000000007991         jmp        sub_6cc0+56
                        ; endp
0000000000007996         align      32

                     loc_79a0:
00000000000079a0         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_7210+731
00000000000079a5         mov        rbp, r11
00000000000079a8         mov        byte [rsp+0xe8+var_DB], bl
00000000000079ac         jmp        loc_7659

                     loc_79b1:
00000000000079b1         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_6fb0+105
00000000000079b6         xor        r12d, r12d
00000000000079b9         jmp        loc_74c0

                     loc_79be:
00000000000079be         xor        r10d, r10d                                  ; CODE XREF=sub_7210+944
00000000000079c1         jmp        loc_757d

                     loc_79c6:
00000000000079c6         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_7210+1419
00000000000079cf         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000079d4         xor        r12d, r12d
00000000000079d7         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000079dc         jmp        loc_77bb

                     loc_79e1:
00000000000079e1         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_7210+561
00000000000079e6         mov        rsi, r14
00000000000079e9         mov        rcx, r13
00000000000079ec         mov        rax, rbx
00000000000079ef         mov        rdi, rbx
00000000000079f2         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000079f8         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000079fd         mov        r9, qword [rsp+0xe8+var_60]
0000000000007a05         cmp        rsi, r11
0000000000007a08         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000007a0e         mov        r15, qword [rsp+0xe8+var_68]
0000000000007a16         mov        r14, qword [rsp+0xe8+var_A8]
0000000000007a1b         mov        r13, qword [rsp+0xe8+var_78]
0000000000007a20         jae        loc_7a48

0000000000007a22         cmp        byte [rcx], 0x0
0000000000007a25         jne        loc_7a37

0000000000007a27         jmp        loc_7a48
0000000000007a29         align      16

                     loc_7a30:
0000000000007a30         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_7210+2099
0000000000007a35         je         loc_7a45

                     loc_7a37:
0000000000007a37         add        rax, 0x1                                    ; CODE XREF=sub_7210+2069
0000000000007a3b         lea        rdx, qword [rbp+rax]
0000000000007a40         cmp        r11, rdx
0000000000007a43         ja         loc_7a30

                     loc_7a45:
0000000000007a45         mov        rdi, rax                                    ; CODE XREF=sub_7210+2085

                     loc_7a48:
0000000000007a48         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_7210+2064, sub_7210+2071
0000000000007a4d         xor        r12d, r12d
0000000000007a50         jmp        loc_74b6

                     loc_7a55:
0000000000007a55         mov        rdi, rbx                                    ; CODE XREF=sub_7210+551
0000000000007a58         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000007a5e         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000007a63         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000007a69         mov        r15, qword [rsp+0xe8+var_68]
0000000000007a71         xor        r12d, r12d
0000000000007a74         mov        r14, qword [rsp+0xe8+var_A8]
0000000000007a79         mov        r13, qword [rsp+0xe8+var_78]
0000000000007a7e         mov        r11, qword [rsp+0xe8+var_B8]
0000000000007a83         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000007a88         jmp        loc_74b6

                     loc_7a8d:
0000000000007a8d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_7210+1718
0000000000007a92         movzx      eax, byte [rdx]
0000000000007a95         test       al, al
0000000000007a97         je         loc_78cc

0000000000007a9d         nop        dword [rax]

                     loc_7aa0:
0000000000007aa0         cmp        r13, r15                                    ; CODE XREF=sub_7210+2212
0000000000007aa3         jbe        loc_7aa9

0000000000007aa5         mov        byte [r14+r15], al

                     loc_7aa9:
0000000000007aa9         add        r15, 0x1                                    ; CODE XREF=sub_7210+2195
0000000000007aad         movzx      eax, byte [rdx+r15]
0000000000007ab2         test       al, al
0000000000007ab4         jne        loc_7aa0

0000000000007ab6         jmp        loc_78cc

                     loc_7abb:
0000000000007abb         mov        eax, edx                                    ; CODE XREF=sub_7210+682
0000000000007abd         jmp        loc_7017

                     loc_7ac2:
0000000000007ac2         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_7210+290
0000000000007ac6         cmp        bl, 0x3e
0000000000007ac9         ja         loc_7340

0000000000007acf         movabs     rax, 0x7000a38200000000
0000000000007ad9         bt         rax, rbx
0000000000007add         jae        loc_7340

0000000000007ae3         cmp        byte [rsp+arg_7], 0x0
0000000000007ae8         jne        loc_7cd2

0000000000007aee         cmp        r13, r15
0000000000007af1         jbe        loc_7af8

0000000000007af3         mov        byte [r14+r15], 0x3f

                     loc_7af8:
0000000000007af8         lea        rax, qword [r15+1]                          ; CODE XREF=sub_7210+2273
0000000000007afc         cmp        r13, rax
0000000000007aff         jbe        loc_7b07

0000000000007b01         mov        byte [r14+r15+1], 0x22

                     loc_7b07:
0000000000007b07         lea        rax, qword [r15+2]                          ; CODE XREF=sub_7210+2287
0000000000007b0b         cmp        r13, rax
0000000000007b0e         jbe        loc_7b16

0000000000007b10         mov        byte [r14+r15+2], 0x22

                     loc_7b16:
0000000000007b16         lea        rax, qword [r15+3]                          ; CODE XREF=sub_7210+2302
0000000000007b1a         cmp        r13, rax
0000000000007b1d         jbe        loc_7b25

0000000000007b1f         mov        byte [r14+r15+3], 0x3f

                     loc_7b25:
0000000000007b25         add        r15, 0x4                                    ; CODE XREF=sub_7210+2317
0000000000007b29         xor        edx, edx
0000000000007b2b         xor        r12d, r12d
0000000000007b2e         xor        eax, eax
0000000000007b30         mov        rbp, rcx
0000000000007b33         jmp        sub_6cc0+56
                        ; endp

                     loc_7b38:
0000000000007b38         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
0000000000007b3a         je         loc_7cc8

0000000000007b40         lea        rax, qword [aLibs+29]                       ; 0xc135
0000000000007b47         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000007b4c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000007b51         xor        r12d, r12d
0000000000007b54         mov        qword [rsp+0xe8+var_98], 0x0
0000000000007b5d         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000007b62         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000007b67         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000007b70         xor        r15d, r15d
0000000000007b73         mov        qword [rsp+0xe8+var_A0], rax
0000000000007b78         jmp        loc_6ba3
0000000000007b7d         align      128

                     loc_7b80:
0000000000007b80         mov        rbp, r11                                    ; CODE XREF=sub_7210+333
0000000000007b83         movzx      eax, byte [rsp+arg_7]
0000000000007b88         jmp        sub_7210+1097
                        ; endp

                     loc_7b8d:
0000000000007b8d         lea        rax, qword [aLibs+27]                       ; 0xc133, CODE XREF=sub_7210+1410
0000000000007b94         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000007b99         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000007b9e         xor        r12d, r12d
0000000000007ba1         mov        qword [rsp+0xe8+var_98], 0x0
0000000000007baa         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000007baf         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000007bb4         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000007bbd         xor        r15d, r15d
0000000000007bc0         mov        qword [rsp+0xe8+var_A0], rax
0000000000007bc5         jmp        loc_6ba3

                     loc_7bca:
0000000000007bca         mov        eax, edx                                    ; CODE XREF=sub_7210+87

                     loc_7bcc:
0000000000007bcc         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_7210+76, sub_7210+2721
0000000000007bd1         test       rbx, rbx
0000000000007bd4         je         loc_7c02

0000000000007bd6         test       al, al
0000000000007bd8         je         loc_7c02

0000000000007bda         movzx      ecx, byte [rbx]
0000000000007bdd         mov        rax, rbx
0000000000007be0         test       cl, cl
0000000000007be2         je         loc_7c02

0000000000007be4         mov        rdx, r15
0000000000007be7         sub        rax, r15

                     loc_7bea:
0000000000007bea         cmp        r13, rdx                                    ; CODE XREF=sub_7210+2541
0000000000007bed         jbe        loc_7bf3

0000000000007bef         mov        byte [r14+rdx], cl

                     loc_7bf3:
0000000000007bf3         add        rdx, 0x1                                    ; CODE XREF=sub_7210+2525
0000000000007bf7         movzx      ecx, byte [rax+rdx]
0000000000007bfb         test       cl, cl
0000000000007bfd         jne        loc_7bea

0000000000007bff         mov        r15, rdx

                     loc_7c02:
0000000000007c02         cmp        r13, r15                                    ; CODE XREF=sub_7210+2500, sub_7210+2504, sub_7210+2514
0000000000007c05         jbe        loc_76a9

0000000000007c0b         mov        byte [r14+r15], 0x0
0000000000007c10         jmp        loc_76a9

                     loc_7c15:
0000000000007c15         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
0000000000007c1a         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000007c1f         mov        rbp, r11
0000000000007c22         sete       al
0000000000007c25         mov        byte [rsp+0xe8+var_DB], bl
0000000000007c29         jmp        loc_7659

                     loc_7c2e:
0000000000007c2e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_7210+1664
0000000000007c32         mov        rdi, rcx
0000000000007c35         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000007c3a         mov        qword [rsp+0xe8+var_80], rax
0000000000007c3f         jmp        loc_7896

                     loc_7c44:
0000000000007c44         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_7210+1707
0000000000007c48         mov        rdi, rcx
0000000000007c4b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000007c50         mov        qword [rsp+0xe8+var_88], rax
0000000000007c55         jmp        loc_78c1

                     loc_7c5a:
0000000000007c5a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_70b0+16
0000000000007c5f         mov        rbp, r11
0000000000007c62         mov        eax, edx
0000000000007c64         mov        byte [rsp+arg_5], bl
0000000000007c68         jmp        sub_7210+1097
                        ; endp

                     loc_7c6d:
0000000000007c6d         sub        rsp, 0x8                                    ; CODE XREF=sub_7210+98
0000000000007c71         mov        r8d, 0x5
0000000000007c77         mov        rcx, r11
0000000000007c7a         push       qword [rsp+0xf0+var_88]
0000000000007c7e         push       qword [rsp+0xf8+var_80]
0000000000007c82         mov        rdi, r14
0000000000007c85         push       qword [rsp+0x100+var_C8]
0000000000007c89         mov        r9d, dword [rsp+0x108+var_70]
0000000000007c91         mov        rdx, qword [rsp+0x108+var_D8]
0000000000007c96         mov        rsi, qword [rsp+0x108+var_98]
0000000000007c9b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000007ca0         add        rsp, 0x20
0000000000007ca4         mov        r15, rax
0000000000007ca7         jmp        loc_76a9

                     loc_7cac:
0000000000007cac         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_7210+121
0000000000007cb1         jmp        loc_7bcc

                     loc_7cb6:
0000000000007cb6         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_7210+63
0000000000007cbe         jmp        loc_7659

                     loc_7cc3:
0000000000007cc3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_7210+1197
                        ; endp

                     loc_7cc8:
0000000000007cc8         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_7210+2346
0000000000007ccd         jmp        loc_7741

                     loc_7cd2:
0000000000007cd2         mov        rbp, r11                                    ; CODE XREF=sub_7210+2264
0000000000007cd5         jmp        sub_7210+1120
                        ; endp

                     loc_7cda:
0000000000007cda         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_7210+1332
0000000000007cdf         xor        eax, eax
0000000000007ce1         xor        r12d, r12d
0000000000007ce4         mov        qword [rsp+0xe8+var_98], 0x0
0000000000007ced         jmp        loc_7294

                     loc_7cf2:
0000000000007cf2         mov        rdx, r13                                    ; CODE XREF=sub_7210+1264
0000000000007cf5         mov        r13, qword [rsp+arg_48]
0000000000007cfa         jmp        loc_72f2

                     loc_7cff:
0000000000007cff         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000007d04         align      16                                          ; End of unwind block (FDE at 0xdcd8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000007d10         push       r15                                         ; Begin of unwind block (FDE at 0xdd50), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000007d12         push       r14
0000000000007d14         movsxd     r15, edi
0000000000007d17         push       r13
0000000000007d19         push       r12
0000000000007d1b         mov        r14, rdx
0000000000007d1e         push       rbp
0000000000007d1f         push       rbx
0000000000007d20         mov        rbp, rcx
0000000000007d23         sub        rsp, 0x28
0000000000007d27         mov        qword [rsp+0x58+var_50], rsi
0000000000007d2c         call       j___errno_location                          ; __errno_location
0000000000007d31         mov        r13, rax
0000000000007d34         mov        eax, dword [rax]
0000000000007d36         test       r15d, r15d
0000000000007d39         mov        rbx, qword [nslots+8]                       ; 0x210080
0000000000007d40         mov        dword [rsp+0x58+var_40], eax
0000000000007d44         js         loc_7eb1

0000000000007d4a         cmp        dword [nslots], r15d                        ; nslots
0000000000007d51         jg         loc_7db5

0000000000007d53         cmp        r15d, 0x7fffffff
0000000000007d5a         je         loc_7eb6

0000000000007d60         lea        r12d, dword [r15+1]
0000000000007d64         lea        rax, qword [slotvec0]                       ; slotvec0
0000000000007d6b         movsxd     rsi, r12d
0000000000007d6e         shl        rsi, 0x4
0000000000007d72         cmp        rbx, rax
0000000000007d75         je         loc_7e90

0000000000007d7b         mov        rdi, rbx                                    ; argument #1 for method xrealloc
0000000000007d7e         call       xrealloc                                    ; xrealloc
0000000000007d83         mov        rbx, rax
0000000000007d86         mov        qword [nslots+8], rax                       ; 0x210080

                     loc_7d8d:
0000000000007d8d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000007d94         mov        edx, r12d
0000000000007d97         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000007d99         sub        edx, edi
0000000000007d9b         shl        rdi, 0x4
0000000000007d9f         movsxd     rdx, edx
0000000000007da2         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000007da5         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000007da9         call       j_memset                                    ; memset
0000000000007dae         mov        dword [nslots], r12d                        ; nslots

                     loc_7db5:
0000000000007db5         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000007db8         shl        r15, 0x4
0000000000007dbc         sub        rsp, 0x8
0000000000007dc0         add        rbx, r15
0000000000007dc3         lea        r15, qword [rbp+8]
0000000000007dc7         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000007dcb         mov        r11, qword [rbx]
0000000000007dce         mov        r12, qword [rbx+8]
0000000000007dd2         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000007dd5         or         eax, 0x1
0000000000007dd8         mov        dword [rsp+0x60+var_3C], eax
0000000000007ddc         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000007ddf         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000007de2         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000007de5         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000007de7         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
0000000000007dea         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000007def         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000007df2         mov        qword [rsp+0x78+var_48], r11
0000000000007df7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000007dfc         add        rsp, 0x20
0000000000007e00         mov        r11, qword [rsp+0x58+var_48]
0000000000007e05         cmp        r11, rax
0000000000007e08         ja         loc_7e71

0000000000007e0a         lea        rsi, qword [rax+1]
0000000000007e0e         lea        rax, qword [slot0]                          ; slot0
0000000000007e15         cmp        r12, rax
0000000000007e18         mov        qword [rbx], rsi
0000000000007e1b         je         loc_7e2f

0000000000007e1d         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000007e20         mov        qword [rsp+0x58+var_48], rsi
0000000000007e25         call       j_free                                      ; free
0000000000007e2a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_7e2f:
0000000000007e2f         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000007e32         mov        qword [rsp+0x58+var_48], rsi
0000000000007e37         call       xmalloc                                     ; xmalloc
0000000000007e3c         sub        rsp, 0x8
0000000000007e40         mov        qword [rbx+8], rax
0000000000007e44         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000007e48         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000007e4b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000007e4e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000007e51         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000007e53         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000007e58         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
0000000000007e5b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000007e60         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000007e65         mov        r12, rax
0000000000007e68         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000007e6d         add        rsp, 0x20

                     loc_7e71:
0000000000007e71         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000007e75         mov        dword [r13], eax
0000000000007e79         add        rsp, 0x28
0000000000007e7d         mov        rax, r12
0000000000007e80         pop        rbx
0000000000007e81         pop        rbp
0000000000007e82         pop        r12
0000000000007e84         pop        r13
0000000000007e86         pop        r14
0000000000007e88         pop        r15
0000000000007e8a         ret
                        ; endp
0000000000007e8b         align      16

                     loc_7e90:
0000000000007e90         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000007e92         call       xrealloc                                    ; xrealloc
0000000000007e97         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
0000000000007e9f         mov        rbx, rax
0000000000007ea2         mov        qword [nslots+8], rax                       ; 0x210080
0000000000007ea9         movups     xmmword [rax], xmm0
0000000000007eac         jmp        loc_7d8d

                     loc_7eb1:
0000000000007eb1         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_7eb6:
0000000000007eb6         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_7ebb:
0000000000007ebb         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0xdd50)
                     clone_quoting_options:
0000000000007ec0         push       r12                                         ; Begin of unwind block (FDE at 0xddbc)
0000000000007ec2         push       rbp
0000000000007ec3         push       rbx
0000000000007ec4         mov        rbx, rdi
0000000000007ec7         call       j___errno_location                          ; __errno_location
0000000000007ecc         mov        r12d, dword [rax]
0000000000007ecf         mov        rbp, rax
0000000000007ed2         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000007ed9         test       rbx, rbx
0000000000007edc         mov        esi, 0x38                                   ; argument #2 for method xmemdup
0000000000007ee1         cmove      rbx, rax
0000000000007ee5         mov        rdi, rbx                                    ; argument #1 for method xmemdup
0000000000007ee8         call       xmemdup                                     ; xmemdup
0000000000007eed         mov        dword [rbp], r12d
0000000000007ef1         pop        rbx
0000000000007ef2         pop        rbp
0000000000007ef3         pop        r12
0000000000007ef5         ret
                        ; endp
0000000000007ef6         align      256                                         ; End of unwind block (FDE at 0xddbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000007f00         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xdde8), default_quoting_options
0000000000007f07         test       rdi, rdi
0000000000007f0a         cmove      rdi, rax
0000000000007f0e         mov        eax, dword [rdi]
0000000000007f10         ret
                        ; endp
0000000000007f11         align      32                                          ; End of unwind block (FDE at 0xdde8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000007f20         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xddfc), default_quoting_options
0000000000007f27         test       rdi, rdi
0000000000007f2a         cmove      rdi, rax
0000000000007f2e         mov        dword [rdi], esi
0000000000007f30         ret
                        ; endp
0000000000007f31         align      64                                          ; End of unwind block (FDE at 0xddfc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000007f40         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xde10), default_quoting_options
0000000000007f47         test       rdi, rdi
0000000000007f4a         mov        ecx, esi
0000000000007f4c         cmove      rdi, rax
0000000000007f50         mov        eax, esi
0000000000007f52         and        ecx, 0x1f
0000000000007f55         shr        al, 0x5
0000000000007f58         movzx      eax, al
0000000000007f5b         lea        rdi, qword [rdi+rax*4+8]
0000000000007f60         mov        esi, dword [rdi]
0000000000007f62         mov        eax, esi
0000000000007f64         shr        eax, cl
0000000000007f66         xor        edx, eax
0000000000007f68         and        eax, 0x1
0000000000007f6b         and        edx, 0x1
0000000000007f6e         shl        edx, cl
0000000000007f70         xor        edx, esi
0000000000007f72         mov        dword [rdi], edx
0000000000007f74         ret
                        ; endp
0000000000007f75         align      128                                         ; End of unwind block (FDE at 0xde10)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000007f80         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xde24), default_quoting_options
0000000000007f87         test       rdi, rdi
0000000000007f8a         cmove      rdi, rax
0000000000007f8e         mov        eax, dword [rdi+4]
0000000000007f91         mov        dword [rdi+4], esi
0000000000007f94         ret
                        ; endp
0000000000007f95         align      32                                          ; End of unwind block (FDE at 0xde24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000007fa0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xde38), default_quoting_options
0000000000007fa7         test       rdi, rdi
0000000000007faa         cmove      rdi, rax
0000000000007fae         test       rsi, rsi
0000000000007fb1         mov        dword [rdi], 0xa
0000000000007fb7         je         loc_7fc7

0000000000007fb9         test       rdx, rdx
0000000000007fbc         je         loc_7fc7

0000000000007fbe         mov        qword [rdi+0x28], rsi
0000000000007fc2         mov        qword [rdi+0x30], rdx
0000000000007fc6         ret
                        ; endp

                     loc_7fc7:
0000000000007fc7         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
0000000000007fcb         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000007fd0         push       r15                                         ; End of unwind block (FDE at 0xde38), Begin of unwind block (FDE at 0xde4c)
0000000000007fd2         push       r14
0000000000007fd4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000007fdb         push       r13
0000000000007fdd         push       r12
0000000000007fdf         mov        r13, rdi
0000000000007fe2         push       rbp
0000000000007fe3         push       rbx
0000000000007fe4         mov        rbx, r8
0000000000007fe7         mov        r14, rsi
0000000000007fea         mov        r15, rdx
0000000000007fed         sub        rsp, 0x18
0000000000007ff1         test       r8, r8
0000000000007ff4         cmove      rbx, rax
0000000000007ff8         mov        qword [rsp+0x48+var_40], rcx
0000000000007ffd         call       j___errno_location                          ; __errno_location
0000000000008002         mov        r12d, dword [rax]
0000000000008005         mov        rbp, rax
0000000000008008         lea        rax, qword [rbx+8]
000000000000800c         sub        rsp, 0x8
0000000000008010         mov        r9d, dword [rbx+4]
0000000000008014         push       qword [rbx+0x30]
0000000000008017         mov        r8d, dword [rbx]
000000000000801a         push       qword [rbx+0x28]
000000000000801d         mov        rdx, r15
0000000000008020         push       rax
0000000000008021         mov        rcx, qword [rsp+0x68+var_40]
0000000000008026         mov        rsi, r14
0000000000008029         mov        rdi, r13
000000000000802c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000008031         mov        dword [rbp], r12d
0000000000008035         add        rsp, 0x38
0000000000008039         pop        rbx
000000000000803a         pop        rbp
000000000000803b         pop        r12
000000000000803d         pop        r13
000000000000803f         pop        r14
0000000000008041         pop        r15
0000000000008043         ret
                        ; endp
0000000000008044         align      16                                          ; End of unwind block (FDE at 0xde4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000008050         push       r15                                         ; Begin of unwind block (FDE at 0xdea0), CODE XREF=quotearg_alloc+5
0000000000008052         push       r14
0000000000008054         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000805b         push       r13
000000000000805d         push       r12
000000000000805f         mov        r12, rdx
0000000000008062         push       rbp
0000000000008063         push       rbx
0000000000008064         mov        rbx, rcx
0000000000008067         mov        r14, rdi
000000000000806a         mov        r15, rsi
000000000000806d         sub        rsp, 0x38
0000000000008071         test       rcx, rcx
0000000000008074         cmove      rbx, rax
0000000000008078         xor        ebp, ebp
000000000000807a         call       j___errno_location                          ; __errno_location
000000000000807f         test       r12, r12
0000000000008082         mov        r13, rax
0000000000008085         mov        eax, dword [rax]
0000000000008087         sete       bpl
000000000000808b         or         ebp, dword [rbx+4]
000000000000808e         lea        r10, qword [rbx+8]
0000000000008092         sub        rsp, 0x8
0000000000008096         mov        r8d, dword [rbx]
0000000000008099         mov        rcx, r15
000000000000809c         mov        dword [rsp+0x70+var_5C], eax
00000000000080a0         push       qword [rbx+0x30]
00000000000080a3         mov        rdx, r14
00000000000080a6         push       qword [rbx+0x28]
00000000000080a9         push       r10
00000000000080ab         xor        esi, esi
00000000000080ad         mov        r9d, ebp
00000000000080b0         xor        edi, edi
00000000000080b2         mov        qword [rsp+0x88+var_48], r10
00000000000080b7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000080bc         lea        rsi, qword [rax+1]
00000000000080c0         mov        qword [rsp+0x88+var_40], rax
00000000000080c5         add        rsp, 0x20
00000000000080c9         mov        rdi, rsi
00000000000080cc         mov        qword [rsp+0x68+var_50], rsi
00000000000080d1         call       xmalloc                                     ; xmalloc
00000000000080d6         mov        qword [rsp+0x68+var_58], rax
00000000000080db         sub        rsp, 0x8
00000000000080df         push       qword [rbx+0x30]
00000000000080e2         push       qword [rbx+0x28]
00000000000080e5         mov        r10, qword [rsp+0x80+var_48]
00000000000080ea         mov        r9d, ebp
00000000000080ed         mov        r8d, dword [rbx]
00000000000080f0         mov        rcx, r15
00000000000080f3         mov        rdx, r14
00000000000080f6         mov        rdi, rax
00000000000080f9         push       r10
00000000000080fb         mov        rsi, qword [rsp+0x88+var_50]
0000000000008100         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000008105         mov        eax, dword [rsp+0x88+var_5C]
0000000000008109         add        rsp, 0x20
000000000000810d         test       r12, r12
0000000000008110         mov        dword [r13], eax
0000000000008114         je         loc_811f

0000000000008116         mov        r11, qword [rsp+0x68+var_40]
000000000000811b         mov        qword [r12], r11

                     loc_811f:
000000000000811f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000008124         add        rsp, 0x38
0000000000008128         pop        rbx
0000000000008129         pop        rbp
000000000000812a         pop        r12
000000000000812c         pop        r13
000000000000812e         pop        r14
0000000000008130         pop        r15
0000000000008132         ret
                        ; endp
0000000000008133         align      64                                          ; End of unwind block (FDE at 0xdea0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000008140         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xdf0c)
0000000000008143         xor        edx, edx
0000000000008145         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
000000000000814a         align      16                                          ; End of unwind block (FDE at 0xdf0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000008150         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0xdf20), nslots
0000000000008156         push       r12
0000000000008158         mov        r12, qword [nslots+8]                       ; 0x210080
000000000000815f         push       rbp
0000000000008160         push       rbx
0000000000008161         cmp        eax, 0x1
0000000000008164         jle        loc_8191

0000000000008166         sub        eax, 0x2
0000000000008169         lea        rbx, qword [r12+0x18]
000000000000816e         shl        rax, 0x4
0000000000008172         lea        rbp, qword [r12+rax+0x28]
0000000000008177         nop        word [rax+rax]

                     loc_8180:
0000000000008180         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
0000000000008183         add        rbx, 0x10
0000000000008187         call       j_free                                      ; free
000000000000818c         cmp        rbx, rbp
000000000000818f         jne        loc_8180

                     loc_8191:
0000000000008191         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000008196         lea        rbx, qword [slot0]                          ; slot0
000000000000819d         cmp        rdi, rbx
00000000000081a0         je         loc_81b9

00000000000081a2         call       j_free                                      ; free
00000000000081a7         mov        qword [slotvec0], 0x100                     ; slotvec0
00000000000081b2         mov        qword [slotvec0+8], rbx                     ; 0x210098

                     loc_81b9:
00000000000081b9         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
00000000000081c0         cmp        r12, rbx
00000000000081c3         je         loc_81d4

00000000000081c5         mov        rdi, r12                                    ; argument "__ptr" for method j_free
00000000000081c8         call       j_free                                      ; free
00000000000081cd         mov        qword [nslots+8], rbx                       ; 0x210080

                     loc_81d4:
00000000000081d4         pop        rbx                                         ; CODE XREF=quotearg_free+115
00000000000081d5         mov        dword [nslots], 0x1                         ; nslots
00000000000081df         pop        rbp
00000000000081e0         pop        r12
00000000000081e2         ret
                        ; endp
00000000000081e3         align      16                                          ; End of unwind block (FDE at 0xdf20)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
00000000000081f0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xdf4c), default_quoting_options
00000000000081f7         mov        rdx, 0xffffffffffffffff
00000000000081fe         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000008203         align      16                                          ; End of unwind block (FDE at 0xdf4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000008210         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xdf60), default_quoting_options
0000000000008217         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000821c         align      32                                          ; End of unwind block (FDE at 0xdf60)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000008220         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xdf74), default_quoting_options
0000000000008227         mov        rsi, rdi
000000000000822a         mov        rdx, 0xffffffffffffffff
0000000000008231         xor        edi, edi
0000000000008233         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000008238         align      64                                          ; End of unwind block (FDE at 0xdf74)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000008240         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xdf88), default_quoting_options
0000000000008247         mov        rdx, rsi
000000000000824a         mov        rsi, rdi
000000000000824d         xor        edi, edi
000000000000824f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000008254         align      32                                          ; End of unwind block (FDE at 0xdf88)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
0000000000008260         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xdf9c), CODE XREF=do_link+243, do_link+279, do_link+306, do_link+601, do_link+621, do_link+2261, do_link+2279, do_link+2614, do_link+2632, argmatch_invalid+64
0000000000008264         mov        rax, rdx
0000000000008267         mov        rdx, qword [fs:0x28]
0000000000008270         mov        qword [rsp+0x48+var_10], rdx
0000000000008275         xor        edx, edx
0000000000008277         cmp        esi, 0xa
000000000000827a         je         loc_82e4

000000000000827c         mov        dword [rsp+0x48+var_48], esi
000000000000827f         mov        rcx, rsp
0000000000008282         mov        rdx, 0xffffffffffffffff
0000000000008289         mov        rsi, rax
000000000000828c         mov        qword [rsp+0x48+var_44], 0x0
0000000000008295         mov        qword [rsp+0x48+var_3C], 0x0
000000000000829e         mov        qword [rsp+0x48+var_34], 0x0
00000000000082a7         mov        qword [rsp+0x48+var_2C], 0x0
00000000000082b0         mov        qword [rsp+0x48+var_24], 0x0
00000000000082b9         mov        qword [rsp+0x48+var_1C], 0x0
00000000000082c2         mov        dword [rsp+0x48+var_14], 0x0
00000000000082ca         call       quotearg_n_options                          ; quotearg_n_options
00000000000082cf         mov        rcx, qword [rsp+0x48+var_10]
00000000000082d4         xor        rcx, qword [fs:0x28]
00000000000082dd         jne        loc_82e9

00000000000082df         add        rsp, 0x48
00000000000082e3         ret
                        ; endp

                     loc_82e4:
00000000000082e4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_82e9:
00000000000082e9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
00000000000082ee         align      16                                          ; End of unwind block (FDE at 0xdf9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
00000000000082f0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xdfb8), CODE XREF=quotearg_style_mem+10
00000000000082f4         mov        rax, rdx
00000000000082f7         mov        rdx, rcx
00000000000082fa         mov        rcx, qword [fs:0x28]
0000000000008303         mov        qword [rsp+0x48+var_10], rcx
0000000000008308         xor        ecx, ecx
000000000000830a         cmp        esi, 0xa
000000000000830d         je         loc_8370

000000000000830f         mov        dword [rsp+0x48+var_48], esi
0000000000008312         mov        rcx, rsp
0000000000008315         mov        rsi, rax
0000000000008318         mov        qword [rsp+0x48+var_44], 0x0
0000000000008321         mov        qword [rsp+0x48+var_3C], 0x0
000000000000832a         mov        qword [rsp+0x48+var_34], 0x0
0000000000008333         mov        qword [rsp+0x48+var_2C], 0x0
000000000000833c         mov        qword [rsp+0x48+var_24], 0x0
0000000000008345         mov        qword [rsp+0x48+var_1C], 0x0
000000000000834e         mov        dword [rsp+0x48+var_14], 0x0
0000000000008356         call       quotearg_n_options                          ; quotearg_n_options
000000000000835b         mov        rdx, qword [rsp+0x48+var_10]
0000000000008360         xor        rdx, qword [fs:0x28]
0000000000008369         jne        loc_8375

000000000000836b         add        rsp, 0x48
000000000000836f         ret
                        ; endp

                     loc_8370:
0000000000008370         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_8375:
0000000000008375         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
000000000000837a         align      128                                         ; End of unwind block (FDE at 0xdfb8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
0000000000008380         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0xdfd4), CODE XREF=main+650, main+1590, main+1772, main+1865, main+1966, do_link+751, do_link+901, do_link+1179, do_link+2189, do_link+2445
0000000000008383         mov        esi, edi
0000000000008385         xor        edi, edi
0000000000008387         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
000000000000838c         align      16                                          ; End of unwind block (FDE at 0xdfd4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000008390         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xdfe8)
0000000000008393         mov        rdx, rsi
0000000000008396         mov        esi, edi
0000000000008398         xor        edi, edi
000000000000839a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
000000000000839f         align      32                                          ; End of unwind block (FDE at 0xdfe8)

                     quotearg_char_mem:
00000000000083a0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xdffc), CODE XREF=quotearg_char+11
00000000000083a4         mov        ecx, edx
00000000000083a6         mov        rax, qword [fs:0x28]
00000000000083af         mov        qword [rsp+0x48+var_10], rax
00000000000083b4         xor        eax, eax
00000000000083b6         mov        rax, qword [qword_210290]                   ; qword_210290
00000000000083bd         mov        r8, rsp
00000000000083c0         and        ecx, 0x1f
00000000000083c3         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
00000000000083cb         mov        qword [rsp+0x48+var_18], rax
00000000000083d0         mov        eax, edx
00000000000083d2         movaps     xmmword [rsp+0x48+var_48], xmm0
00000000000083d6         shr        al, 0x5
00000000000083d9         movzx      eax, al
00000000000083dc         lea        r9, qword [r8+rax*4+8]
00000000000083e1         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x210270
00000000000083e9         movaps     xmmword [rsp+0x48+var_38], xmm0
00000000000083ee         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x210280
00000000000083f6         movaps     xmmword [rsp+0x48+var_28], xmm0
00000000000083fb         mov        edx, dword [r9]
00000000000083fe         mov        eax, edx
0000000000008400         shr        eax, cl
0000000000008402         not        eax
0000000000008404         and        eax, 0x1
0000000000008407         shl        eax, cl
0000000000008409         mov        rcx, r8
000000000000840c         xor        eax, edx
000000000000840e         mov        rdx, rsi
0000000000008411         mov        rsi, rdi
0000000000008414         mov        dword [r9], eax
0000000000008417         xor        edi, edi
0000000000008419         call       quotearg_n_options                          ; quotearg_n_options
000000000000841e         mov        rsi, qword [rsp+0x48+var_10]
0000000000008423         xor        rsi, qword [fs:0x28]
000000000000842c         jne        loc_8433

000000000000842e         add        rsp, 0x48
0000000000008432         ret
                        ; endp

                     loc_8433:
0000000000008433         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000008438         align      64                                          ; End of unwind block (FDE at 0xdffc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000008440         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0xe018)
0000000000008444         mov        rsi, 0xffffffffffffffff
000000000000844b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000008450         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0xe018), Begin of unwind block (FDE at 0xe02c), CODE XREF=close_stdin+133, close_stdout+101
0000000000008455         mov        rsi, 0xffffffffffffffff
000000000000845c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000008461         align      16                                          ; End of unwind block (FDE at 0xe02c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000008470         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0xe040)
0000000000008475         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
000000000000847a         align      128                                         ; End of unwind block (FDE at 0xe040)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000008480         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xe054), CODE XREF=do_link+1864, do_link+1930
0000000000008484         mov        rax, rdx
0000000000008487         mov        rdx, qword [fs:0x28]
0000000000008490         mov        qword [rsp+0x48+var_10], rdx
0000000000008495         xor        edx, edx
0000000000008497         cmp        esi, 0xa
000000000000849a         je         loc_8504

000000000000849c         mov        dword [rsp+0x48+var_48], esi
000000000000849f         mov        rcx, rsp
00000000000084a2         mov        rdx, 0xffffffffffffffff
00000000000084a9         mov        rsi, rax
00000000000084ac         mov        qword [rsp+0x48+var_44], 0x0
00000000000084b5         mov        qword [rsp+0x48+var_3C], 0x4000000
00000000000084be         mov        qword [rsp+0x48+var_34], 0x0
00000000000084c7         mov        qword [rsp+0x48+var_2C], 0x0
00000000000084d0         mov        qword [rsp+0x48+var_24], 0x0
00000000000084d9         mov        qword [rsp+0x48+var_1C], 0x0
00000000000084e2         mov        dword [rsp+0x48+var_14], 0x0
00000000000084ea         call       quotearg_n_options                          ; quotearg_n_options
00000000000084ef         mov        rcx, qword [rsp+0x48+var_10]
00000000000084f4         xor        rcx, qword [fs:0x28]
00000000000084fd         jne        loc_8509

00000000000084ff         add        rsp, 0x48
0000000000008503         ret
                        ; endp

                     loc_8504:
0000000000008504         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_8509:
0000000000008509         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
000000000000850e         align      16                                          ; End of unwind block (FDE at 0xe054)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom_mem:
0000000000008510         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xe070), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000008514         mov        r9, rcx
0000000000008517         mov        rcx, qword [qword_210290]                   ; qword_210290
000000000000851e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000008526         mov        rax, qword [fs:0x28]
000000000000852f         mov        qword [rsp+0x48+var_10], rax
0000000000008534         xor        eax, eax
0000000000008536         movaps     xmmword [rsp+0x48+var_48], xmm0
000000000000853a         test       rsi, rsi
000000000000853d         mov        qword [rsp+0x48+var_18], rcx
0000000000008542         mov        dword [rsp+0x48+var_48], 0xa
0000000000008549         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x210270
0000000000008551         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000008556         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x210280
000000000000855e         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000008563         je         loc_8597

0000000000008565         test       rdx, rdx
0000000000008568         je         loc_8597

000000000000856a         mov        qword [rsp+0x48+var_20], rsi
000000000000856f         mov        qword [rsp+0x48+var_18], rdx
0000000000008574         mov        rcx, rsp
0000000000008577         mov        rdx, r8
000000000000857a         mov        rsi, r9
000000000000857d         call       quotearg_n_options                          ; quotearg_n_options
0000000000008582         mov        rdi, qword [rsp+0x48+var_10]
0000000000008587         xor        rdi, qword [fs:0x28]
0000000000008590         jne        loc_859c

0000000000008592         add        rsp, 0x48
0000000000008596         ret
                        ; endp

                     loc_8597:
0000000000008597         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_859c:
000000000000859c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
00000000000085a1         align      16                                          ; End of unwind block (FDE at 0xe070)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_custom:
00000000000085b0         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0xe08c)
00000000000085b7         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
00000000000085bc         align      64                                          ; End of unwind block (FDE at 0xe08c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
00000000000085c0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xe0a0)
00000000000085c3         mov        r8, 0xffffffffffffffff
00000000000085ca         mov        rdx, rsi
00000000000085cd         mov        rsi, rdi
00000000000085d0         xor        edi, edi
00000000000085d2         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
00000000000085d7         align      32                                          ; End of unwind block (FDE at 0xe0a0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
00000000000085e0         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0xe0b4)
00000000000085e3         mov        rcx, rdx
00000000000085e6         mov        rdx, rsi
00000000000085e9         mov        rsi, rdi
00000000000085ec         xor        edi, edi
00000000000085ee         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
00000000000085f3         align      512                                         ; End of unwind block (FDE at 0xe0b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000008600         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xe0c8), quote_quoting_options
0000000000008607         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000860c         align      16                                          ; End of unwind block (FDE at 0xe0c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000008610         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xe0dc), quote_quoting_options
0000000000008617         mov        rdx, rsi
000000000000861a         mov        rsi, rdi
000000000000861d         xor        edi, edi
000000000000861f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000008624         align      16                                          ; End of unwind block (FDE at 0xe0dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000008630         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xe0f0), quote_quoting_options, CODE XREF=argmatch_invalid+46
0000000000008637         mov        rdx, 0xffffffffffffffff
000000000000863e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000008643         align      16                                          ; End of unwind block (FDE at 0xe0f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000008650         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xe104), quote_quoting_options, CODE XREF=argmatch_valid+90, argmatch_valid+169, randread_error+11
0000000000008657         mov        rsi, rdi
000000000000865a         mov        rdx, 0xffffffffffffffff
0000000000008661         xor        edi, edi
0000000000008663         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000008668         align      16                                          ; End of unwind block (FDE at 0xe104)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_C0: int32_t, -192
        ;    var_D8: int8_t, -216
        ;    var_150: int32_t, -336
        ;    var_168: int8_t, -360
        ;    var_170: int64_t, -368
        ;    var_174: int32_t, -372


                     renameatu:
0000000000008670         push       r15                                         ; Begin of unwind block (FDE at 0xe11c), CODE XREF=backupfile_internal+847
0000000000008672         push       r14
0000000000008674         mov        r9d, r8d
0000000000008677         push       r13
0000000000008679         push       r12
000000000000867b         mov        r14d, edx
000000000000867e         push       rbp
000000000000867f         push       rbx
0000000000008680         mov        r12, rsi
0000000000008683         mov        r13, rcx
0000000000008686         mov        ebp, r8d
0000000000008689         mov        r8, rcx
000000000000868c         sub        rsp, 0x148
0000000000008693         mov        ecx, edx
0000000000008695         mov        rdx, rsi
0000000000008698         mov        rax, qword [fs:0x28]
00000000000086a1         mov        qword [rsp+0x178+var_40], rax
00000000000086a9         xor        eax, eax
00000000000086ab         mov        esi, edi
00000000000086ad         mov        dword [rsp+0x178+var_174], edi
00000000000086b1         mov        edi, 0x13c                                  ; argument "__sysno" for method j_syscall
00000000000086b6         call       j_syscall                                   ; syscall
00000000000086bb         mov        rbx, rax
00000000000086be         mov        r15d, eax
00000000000086c1         call       j___errno_location                          ; __errno_location
00000000000086c6         test       ebx, ebx
00000000000086c8         js         loc_8700

                     loc_86ca:
00000000000086ca         mov        rdx, qword [rsp+0x178+var_40]               ; CODE XREF=renameatu+166, renameatu+248, renameatu+274, renameatu+363, renameatu+431, renameatu+453, renameatu+608
00000000000086d2         xor        rdx, qword [fs:0x28]
00000000000086db         mov        eax, r15d
00000000000086de         jne        loc_88d5

00000000000086e4         add        rsp, 0x148
00000000000086eb         pop        rbx
00000000000086ec         pop        rbp
00000000000086ed         pop        r12
00000000000086ef         pop        r13
00000000000086f1         pop        r14
00000000000086f3         pop        r15
00000000000086f5         ret
                        ; endp
00000000000086f6         align      256

                     loc_8700:
0000000000008700         mov        r9, rax                                     ; CODE XREF=renameatu+88
0000000000008703         mov        eax, dword [rax]
0000000000008705         lea        ecx, dword [rax-0x16]
0000000000008708         and        ecx, 0xffffffef
000000000000870b         setne      bl
000000000000870e         cmp        eax, 0x5f
0000000000008711         setne      al
0000000000008714         and        bl, al
0000000000008716         jne        loc_86ca

0000000000008718         test       ebp, ebp
000000000000871a         jne        loc_8770

                     loc_871c:
000000000000871c         mov        rdi, r12                                    ; argument "__s" for method j_strlen, CODE XREF=renameatu+541
000000000000871f         mov        qword [rsp+0x178+var_170], r9
0000000000008724         call       j_strlen                                    ; strlen
0000000000008729         mov        rdi, r13                                    ; argument "__s" for method j_strlen
000000000000872c         mov        rbp, rax
000000000000872f         call       j_strlen                                    ; strlen
0000000000008734         test       rbp, rbp
0000000000008737         je         loc_8753

0000000000008739         test       rax, rax
000000000000873c         mov        r9, qword [rsp+0x178+var_170]
0000000000008741         je         loc_8753

0000000000008743         cmp        byte [r12+rbp-1], 0x2f
0000000000008749         je         loc_8790

000000000000874b         cmp        byte [r13+rax-1], 0x2f
0000000000008751         je         loc_8790

                     loc_8753:
0000000000008753         mov        edi, dword [rsp+0x178+var_174]              ; argument "__oldfd" for method j_renameat, CODE XREF=renameatu+199, renameatu+209, renameatu+348, renameatu+524, renameatu+591
0000000000008757         mov        rcx, r13                                    ; argument "__new" for method j_renameat
000000000000875a         mov        edx, r14d                                   ; argument "__newfd" for method j_renameat
000000000000875d         mov        rsi, r12                                    ; argument "__old" for method j_renameat
0000000000008760         call       j_renameat                                  ; renameat
0000000000008765         mov        r15d, eax
0000000000008768         jmp        loc_86ca
000000000000876d         align      16

                     loc_8770:
0000000000008770         and        ebp, 0xfffffffe                             ; CODE XREF=renameatu+170
0000000000008773         je         loc_87e0

0000000000008775         mov        dword [r9], 0x5f
000000000000877c         mov        r15d, 0xffffffff
0000000000008782         jmp        loc_86ca
0000000000008787         align      16

                     loc_8790:
0000000000008790         mov        esi, dword [rsp+0x178+var_174]              ; argument "__fildes" for method j___fxstatat, CODE XREF=renameatu+217, renameatu+225
0000000000008794         lea        rcx, qword [rsp+0x178+var_168]              ; argument "__stat_buf" for method j___fxstatat
0000000000008799         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
000000000000879f         mov        rdx, r12                                    ; argument "__filename" for method j___fxstatat
00000000000087a2         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
00000000000087a7         mov        qword [rsp+0x178+var_170], r9
00000000000087ac         call       j___fxstatat                                ; __fxstatat
00000000000087b1         test       eax, eax
00000000000087b3         jne        loc_8819

00000000000087b5         test       bl, bl
00000000000087b7         mov        r9, qword [rsp+0x178+var_170]
00000000000087bc         je         loc_883a

00000000000087be         mov        eax, dword [rsp+0x178+var_150]
00000000000087c2         and        eax, 0xf000
00000000000087c7         cmp        eax, 0x4000
00000000000087cc         je         loc_8753

00000000000087ce         mov        dword [r9], 0x2
00000000000087d5         mov        r15d, 0xffffffff
00000000000087db         jmp        loc_86ca

                     loc_87e0:
00000000000087e0         lea        rcx, qword [rsp+0x178+var_D8]               ; argument "__stat_buf" for method j___fxstatat, CODE XREF=renameatu+259
00000000000087e8         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
00000000000087ee         mov        rdx, r13                                    ; argument "__filename" for method j___fxstatat
00000000000087f1         mov        esi, r14d                                   ; argument "__fildes" for method j___fxstatat
00000000000087f4         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
00000000000087f9         mov        qword [rsp+0x178+var_170], r9
00000000000087fe         call       j___fxstatat                                ; __fxstatat
0000000000008803         test       eax, eax
0000000000008805         mov        r9, qword [rsp+0x178+var_170]
000000000000880a         je         loc_8828

000000000000880c         mov        eax, dword [r9]
000000000000880f         cmp        eax, 0x4b
0000000000008812         je         loc_8828

0000000000008814         cmp        eax, 0x2
0000000000008817         je         loc_8888

                     loc_8819:
0000000000008819         mov        r15d, 0xffffffff                            ; CODE XREF=renameatu+323, renameatu+506, renameatu+522, renameatu+572
000000000000881f         jmp        loc_86ca
0000000000008824         align      8

                     loc_8828:
0000000000008828         mov        dword [r9], 0x11                            ; CODE XREF=renameatu+410, renameatu+418
000000000000882f         mov        r15d, 0xffffffff
0000000000008835         jmp        loc_86ca

                     loc_883a:
000000000000883a         lea        rcx, qword [rsp+0x178+var_D8]               ; argument "__stat_buf" for method j___fxstatat, CODE XREF=renameatu+332
0000000000008842         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
0000000000008848         mov        rdx, r13                                    ; argument "__filename" for method j___fxstatat
000000000000884b         mov        esi, r14d                                   ; argument "__fildes" for method j___fxstatat
000000000000884e         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
0000000000008853         mov        qword [rsp+0x178+var_170], r9
0000000000008858         call       j___fxstatat                                ; __fxstatat
000000000000885d         test       eax, eax
000000000000885f         mov        r9, qword [rsp+0x178+var_170]
0000000000008864         je         loc_8892

0000000000008866         cmp        dword [r9], 0x2
000000000000886a         jne        loc_8819

000000000000886c         mov        eax, dword [rsp+0x178+var_150]
0000000000008870         and        eax, 0xf000
0000000000008875         cmp        eax, 0x4000
000000000000887a         jne        loc_8819

000000000000887c         jmp        loc_8753
0000000000008881         align      8

                     loc_8888:
0000000000008888         mov        ebx, 0x1                                    ; CODE XREF=renameatu+423
000000000000888d         jmp        loc_871c

                     loc_8892:
0000000000008892         mov        eax, dword [rsp+0x178+var_C0]               ; CODE XREF=renameatu+500
0000000000008899         and        eax, 0xf000
000000000000889e         cmp        eax, 0x4000
00000000000088a3         je         loc_88b1

00000000000088a5         mov        dword [r9], 0x14
00000000000088ac         jmp        loc_8819

                     loc_88b1:
00000000000088b1         mov        eax, dword [rsp+0x178+var_150]              ; CODE XREF=renameatu+563
00000000000088b5         and        eax, 0xf000
00000000000088ba         cmp        eax, 0x4000
00000000000088bf         je         loc_8753

00000000000088c5         mov        dword [r9], 0x15
00000000000088cc         or         r15d, 0xffffffff
00000000000088d0         jmp        loc_86ca

                     loc_88d5:
00000000000088d5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=renameatu+110
                        ; endp
00000000000088da         align      32                                          ; End of unwind block (FDE at 0xe11c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_150: int64_t, -336
        ;    var_158: int64_t, -344


                     same_nameat.part.0:
00000000000088e0         push       r13                                         ; Begin of unwind block (FDE at 0xe16c), CODE XREF=same_nameat+141
00000000000088e2         push       r12
00000000000088e4         mov        r13d, edi
00000000000088e7         push       rbp
00000000000088e8         push       rbx
00000000000088e9         mov        rdi, rsi
00000000000088ec         mov        ebp, edx
00000000000088ee         mov        r12, rcx
00000000000088f1         sub        rsp, 0x138
00000000000088f8         mov        rax, qword [fs:0x28]
0000000000008901         mov        qword [rsp+0x158+var_30], rax
0000000000008909         xor        eax, eax
000000000000890b         call       dir_name                                    ; dir_name
0000000000008910         mov        rcx, rsp                                    ; argument "__stat_buf" for method j___fxstatat
0000000000008913         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
0000000000008919         mov        rdx, rax                                    ; argument "__filename" for method j___fxstatat
000000000000891c         mov        esi, r13d                                   ; argument "__fildes" for method j___fxstatat
000000000000891f         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
0000000000008924         mov        rbx, rax
0000000000008927         call       j___fxstatat                                ; __fxstatat
000000000000892c         test       eax, eax
000000000000892e         jne        loc_89e0

                     loc_8934:
0000000000008934         mov        rdi, rbx                                    ; argument "__ptr" for method j_free, CODE XREF=same_nameat.part.0+285
0000000000008937         call       j_free                                      ; free
000000000000893c         mov        rdi, r12
000000000000893f         call       dir_name                                    ; dir_name
0000000000008944         lea        rcx, qword [rsp+0x158+var_C8]               ; argument "__stat_buf" for method j___fxstatat
000000000000894c         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
0000000000008952         mov        rdx, rax                                    ; argument "__filename" for method j___fxstatat
0000000000008955         mov        esi, ebp                                    ; argument "__fildes" for method j___fxstatat
0000000000008957         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
000000000000895c         mov        rbx, rax
000000000000895f         call       j___fxstatat                                ; __fxstatat
0000000000008964         test       eax, eax
0000000000008966         jne        loc_89b8

                     loc_8968:
0000000000008968         xor        ebp, ebp                                    ; CODE XREF=same_nameat.part.0+245
000000000000896a         mov        rax, qword [rsp+0x158+var_C0]
0000000000008972         cmp        qword [rsp+0x158+var_150], rax
0000000000008977         jne        loc_8989

0000000000008979         mov        rax, qword [rsp+0x158+var_C8]
0000000000008981         cmp        qword [rsp+0x158+var_158], rax
0000000000008985         sete       bpl

                     loc_8989:
0000000000008989         mov        rdi, rbx                                    ; argument "__ptr" for method j_free, CODE XREF=same_nameat.part.0+151
000000000000898c         call       j_free                                      ; free
0000000000008991         mov        rdx, qword [rsp+0x158+var_30]
0000000000008999         xor        rdx, qword [fs:0x28]
00000000000089a2         mov        eax, ebp
00000000000089a4         jne        loc_8a02

00000000000089a6         add        rsp, 0x138
00000000000089ad         pop        rbx
00000000000089ae         pop        rbp
00000000000089af         pop        r12
00000000000089b1         pop        r13
00000000000089b3         ret
                        ; endp
00000000000089b4         align      8

                     loc_89b8:
00000000000089b8         call       j___errno_location                          ; __errno_location, CODE XREF=same_nameat.part.0+134
00000000000089bd         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000089bf         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0xca77
00000000000089c6         mov        rcx, rbx
00000000000089c9         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000089ce         xor        eax, eax
00000000000089d0         call       j_error                                     ; error
00000000000089d5         jmp        loc_8968
00000000000089d7         align      32

                     loc_89e0:
00000000000089e0         call       j___errno_location                          ; __errno_location, CODE XREF=same_nameat.part.0+78
00000000000089e5         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000089e7         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0xca77
00000000000089ee         mov        rcx, rbx
00000000000089f1         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000089f6         xor        eax, eax
00000000000089f8         call       j_error                                     ; error
00000000000089fd         jmp        loc_8934

                     loc_8a02:
0000000000008a02         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=same_nameat.part.0+196
                        ; endp
0000000000008a07         align      16                                          ; End of unwind block (FDE at 0xe16c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60


                     same_nameat:
0000000000008a10         push       r15                                         ; Begin of unwind block (FDE at 0xe1a8), CODE XREF=do_link+2583, same_name+13
0000000000008a12         push       r14
0000000000008a14         mov        r15d, edx
0000000000008a17         push       r13
0000000000008a19         push       r12
0000000000008a1b         push       rbp
0000000000008a1c         push       rbx
0000000000008a1d         mov        rbp, rcx
0000000000008a20         mov        rbx, rsi
0000000000008a23         sub        rsp, 0x18
0000000000008a27         mov        dword [rsp+0x48+var_3C], edi
0000000000008a2b         mov        rdi, rsi
0000000000008a2e         call       last_component                              ; last_component
0000000000008a33         mov        rdi, rbp
0000000000008a36         mov        r12, rax
0000000000008a39         call       last_component                              ; last_component
0000000000008a3e         mov        rdi, r12
0000000000008a41         mov        r13, rax
0000000000008a44         call       base_len                                    ; base_len
0000000000008a49         mov        rdi, r13
0000000000008a4c         mov        r14, rax
0000000000008a4f         call       base_len                                    ; base_len
0000000000008a54         cmp        r14, rax
0000000000008a57         je         loc_8a70

                     loc_8a59:
0000000000008a59         add        rsp, 0x18                                   ; CODE XREF=same_nameat+112
0000000000008a5d         xor        eax, eax
0000000000008a5f         pop        rbx
0000000000008a60         pop        rbp
0000000000008a61         pop        r12
0000000000008a63         pop        r13
0000000000008a65         pop        r14
0000000000008a67         pop        r15
0000000000008a69         ret
                        ; endp
0000000000008a6a         align      16

                     loc_8a70:
0000000000008a70         mov        rdx, r14                                    ; argument "__n" for method j_memcmp, CODE XREF=same_nameat+71
0000000000008a73         mov        rsi, r13                                    ; argument "__s2" for method j_memcmp
0000000000008a76         mov        rdi, r12                                    ; argument "__s1" for method j_memcmp
0000000000008a79         call       j_memcmp                                    ; memcmp
0000000000008a7e         test       eax, eax
0000000000008a80         jne        loc_8a59

0000000000008a82         mov        edi, dword [rsp+0x48+var_3C]
0000000000008a86         add        rsp, 0x18
0000000000008a8a         mov        rcx, rbp
0000000000008a8d         mov        edx, r15d
0000000000008a90         mov        rsi, rbx
0000000000008a93         pop        rbx
0000000000008a94         pop        rbp
0000000000008a95         pop        r12
0000000000008a97         pop        r13
0000000000008a99         pop        r14
0000000000008a9b         pop        r15
0000000000008a9d         jmp        same_nameat.part.0                          ; same_nameat.part.0
                        ; endp
0000000000008aa2         align      16                                          ; End of unwind block (FDE at 0xe1a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     same_name:
0000000000008ab0         mov        edx, 0xffffff9c                             ; Begin of unwind block (FDE at 0xe208), CODE XREF=triple_compare+36
0000000000008ab5         mov        rcx, rsi
0000000000008ab8         mov        rsi, rdi
0000000000008abb         mov        edi, edx
0000000000008abd         jmp        same_nameat                                 ; same_nameat
                        ; endp
0000000000008ac2         align      16                                          ; End of unwind block (FDE at 0xe208)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     try_nocreate:
0000000000008ad0         push       rbx                                         ; Begin of unwind block (FDE at 0xe21c), DATA XREF=gen_tempname_len+61
0000000000008ad1         mov        rsi, rdi                                    ; argument "__filename" for method j___lxstat
0000000000008ad4         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
0000000000008ad9         sub        rsp, 0xa0
0000000000008ae0         mov        rdx, rsp                                    ; argument "__stat_buf" for method j___lxstat
0000000000008ae3         mov        rax, qword [fs:0x28]
0000000000008aec         mov        qword [rsp+0xa8+var_10], rax
0000000000008af4         xor        eax, eax
0000000000008af6         call       j___lxstat                                  ; __lxstat
0000000000008afb         mov        ebx, eax
0000000000008afd         call       j___errno_location                          ; __errno_location
0000000000008b02         test       ebx, ebx
0000000000008b04         je         loc_8b20

0000000000008b06         mov        edx, dword [rax]
0000000000008b08         cmp        edx, 0x4b
0000000000008b0b         je         loc_8b20

0000000000008b0d         xor        eax, eax
0000000000008b0f         cmp        edx, 0x2
0000000000008b12         setne      al
0000000000008b15         neg        eax
0000000000008b17         jmp        loc_8b2b
0000000000008b19         align      32

                     loc_8b20:
0000000000008b20         mov        dword [rax], 0x11                           ; CODE XREF=try_nocreate+52, try_nocreate+59
0000000000008b26         mov        eax, 0xffffffff

                     loc_8b2b:
0000000000008b2b         mov        rcx, qword [rsp+0xa8+var_10]                ; CODE XREF=try_nocreate+71
0000000000008b33         xor        rcx, qword [fs:0x28]
0000000000008b3c         jne        loc_8b47

0000000000008b3e         add        rsp, 0xa0
0000000000008b45         pop        rbx
0000000000008b46         ret
                        ; endp

                     loc_8b47:
0000000000008b47         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=try_nocreate+108
                        ; endp
0000000000008b4c         align      16                                          ; End of unwind block (FDE at 0xe21c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     try_dir:
0000000000008b50         mov        esi, 0x1c0                                  ; Begin of unwind block (FDE at 0xe240), argument "__mode" for method j_mkdir, DATA XREF=gen_tempname_len+117
0000000000008b55         jmp        j_mkdir                                     ; mkdir
                        ; endp
0000000000008b5a         align      32                                          ; End of unwind block (FDE at 0xe240)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     try_file:
0000000000008b60         mov        esi, dword [rsi]                            ; Begin of unwind block (FDE at 0xe254), DATA XREF=gen_tempname_len+85
0000000000008b62         mov        edx, 0x180
0000000000008b67         xor        eax, eax
0000000000008b69         and        sil, 0x3c
0000000000008b6d         or         sil, 0xc2                                   ; argument "__oflag" for method j_open
0000000000008b71         jmp        j_open                                      ; open
                        ; endp
0000000000008b76         align      128                                         ; End of unwind block (FDE at 0xe254)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104


                     try_tempname_len:
0000000000008b80         push       r15                                         ; Begin of unwind block (FDE at 0xe268), CODE XREF=force_linkat+150, force_symlinkat+122, gen_tempname_len+68, gen_tempname_len+92, gen_tempname_len+124, try_tempname+6
0000000000008b82         push       r14
0000000000008b84         mov        r15, rdi
0000000000008b87         push       r13
0000000000008b89         push       r12
0000000000008b8b         mov        r14, r8
0000000000008b8e         push       rbp
0000000000008b8f         push       rbx
0000000000008b90         mov        ebp, esi
0000000000008b92         sub        rsp, 0x38
0000000000008b96         mov        qword [rsp+0x68+var_50], rdx
0000000000008b9b         mov        qword [rsp+0x68+var_68], rdi
0000000000008b9f         mov        qword [rsp+0x68+var_48], rcx
0000000000008ba4         call       j___errno_location                          ; __errno_location
0000000000008ba9         mov        qword [rsp+0x68+var_60], rax
0000000000008bae         mov        eax, dword [rax]
0000000000008bb0         mov        rdi, r15                                    ; argument "__s" for method j_strlen
0000000000008bb3         mov        dword [rsp+0x68+var_3C], eax
0000000000008bb7         call       j_strlen                                    ; strlen
0000000000008bbc         movsxd     rsi, ebp
0000000000008bbf         lea        rdx, qword [rsi+r14]
0000000000008bc3         cmp        rdx, rax
0000000000008bc6         ja         loc_8cdb

0000000000008bcc         sub        rax, r14
0000000000008bcf         mov        rbx, rax
0000000000008bd2         sub        rbx, rsi
0000000000008bd5         lea        rsi, qword [aSimplebackupsu+19]             ; argument "__accept" for method j_strspn, 0xbf89
0000000000008bdc         lea        rax, qword [r15+rbx]
0000000000008be0         mov        rdi, rax                                    ; argument "__s" for method j_strspn
0000000000008be3         mov        qword [rsp+0x68+var_58], rax
0000000000008be8         call       j_strspn                                    ; strspn
0000000000008bed         cmp        r14, rax
0000000000008bf0         ja         loc_8cdb

0000000000008bf6         xor        edi, edi
0000000000008bf8         mov        rsi, r14
0000000000008bfb         call       randint_all_new                             ; randint_all_new
0000000000008c00         test       rax, rax
0000000000008c03         mov        rbp, rax
0000000000008c06         je         loc_8ced

0000000000008c0c         mov        rax, qword [rsp+0x68+var_68]
0000000000008c10         lea        r12, qword [letters]                        ; "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
0000000000008c17         mov        r13d, 0x3a2f8
0000000000008c1d         add        rax, r14
0000000000008c20         add        rbx, rax
0000000000008c23         nop        dword [rax+rax]

                     loc_8c28:
0000000000008c28         test       r14, r14                                    ; CODE XREF=try_tempname_len+253
0000000000008c2b         mov        r15, qword [rsp+0x68+var_58]
0000000000008c30         je         loc_8c57

0000000000008c32         nop        word [rax+rax]

                     loc_8c38:
0000000000008c38         mov        esi, 0x3d                                   ; CODE XREF=try_tempname_len+213
0000000000008c3d         mov        rdi, rbp
0000000000008c40         add        r15, 0x1
0000000000008c44         call       randint_genmax                              ; randint_genmax
0000000000008c49         movzx      eax, byte [r12+rax]
0000000000008c4e         mov        byte [r15-1], al
0000000000008c52         cmp        r15, rbx
0000000000008c55         jne        loc_8c38

                     loc_8c57:
0000000000008c57         mov        rsi, qword [rsp+0x68+var_50]                ; CODE XREF=try_tempname_len+176
0000000000008c5c         mov        rdi, qword [rsp+0x68+var_68]
0000000000008c60         mov        rax, qword [rsp+0x68+var_48]
0000000000008c65         call       rax
0000000000008c67         test       eax, eax
0000000000008c69         mov        edx, eax
0000000000008c6b         jns        loc_8c99

0000000000008c6d         mov        rax, qword [rsp+0x68+var_60]
0000000000008c72         mov        ecx, dword [rax]
0000000000008c74         cmp        ecx, 0x11
0000000000008c77         jne        loc_8cd4

0000000000008c79         sub        r13d, 0x1
0000000000008c7d         jne        loc_8c28

0000000000008c7f         mov        rdi, rbp
0000000000008c82         call       randint_all_free                            ; randint_all_free
0000000000008c87         mov        rax, qword [rsp+0x68+var_60]
0000000000008c8c         mov        edx, 0xffffffff
0000000000008c91         mov        dword [rax], 0x11
0000000000008c97         jmp        loc_8cc3

                     loc_8c99:
0000000000008c99         mov        rcx, qword [rsp+0x68+var_60]                ; CODE XREF=try_tempname_len+235
0000000000008c9e         mov        eax, dword [rsp+0x68+var_3C]
0000000000008ca2         mov        dword [rcx], eax
0000000000008ca4         mov        ecx, eax

                     loc_8ca6:
0000000000008ca6         mov        rdi, rbp                                    ; CODE XREF=try_tempname_len+345
0000000000008ca9         mov        dword [rsp+0x68+var_58], edx
0000000000008cad         mov        dword [rsp+0x68+var_68], ecx
0000000000008cb0         call       randint_all_free                            ; randint_all_free
0000000000008cb5         mov        rax, qword [rsp+0x68+var_60]
0000000000008cba         mov        ecx, dword [rsp+0x68+var_68]
0000000000008cbd         mov        edx, dword [rsp+0x68+var_58]
0000000000008cc1         mov        dword [rax], ecx

                     loc_8cc3:
0000000000008cc3         add        rsp, 0x38                                   ; CODE XREF=try_tempname_len+279, try_tempname_len+363, try_tempname_len+370
0000000000008cc7         mov        eax, edx
0000000000008cc9         pop        rbx
0000000000008cca         pop        rbp
0000000000008ccb         pop        r12
0000000000008ccd         pop        r13
0000000000008ccf         pop        r14
0000000000008cd1         pop        r15
0000000000008cd3         ret
                        ; endp

                     loc_8cd4:
0000000000008cd4         mov        edx, 0xffffffff                             ; CODE XREF=try_tempname_len+247
0000000000008cd9         jmp        loc_8ca6

                     loc_8cdb:
0000000000008cdb         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=try_tempname_len+70, try_tempname_len+112
0000000000008ce0         mov        edx, 0xffffffff
0000000000008ce5         mov        dword [rax], 0x16
0000000000008ceb         jmp        loc_8cc3

                     loc_8ced:
0000000000008ced         mov        edx, 0xffffffff                             ; CODE XREF=try_tempname_len+134
0000000000008cf2         jmp        loc_8cc3
0000000000008cf4         align      256                                         ; End of unwind block (FDE at 0xe268)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_C: int32_t, -12


                     gen_tempname_len:
0000000000008d00         sub        rsp, 0x18                                   ; Begin of unwind block (FDE at 0xe2b4), CODE XREF=gen_tempname+6
0000000000008d04         cmp        ecx, 0x1
0000000000008d07         mov        dword [rsp+0x18+var_C], edx
0000000000008d0b         je         loc_8d70

0000000000008d0d         cmp        ecx, 0x2
0000000000008d10         je         loc_8d38

0000000000008d12         test       ecx, ecx
0000000000008d14         je         loc_8d50

0000000000008d16         lea        rcx, qword [__PRETTY_FUNCTION__.5642]       ; argument "__function" for method j___assert_fail, "gen_tempname_len"
0000000000008d1d         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/tempname.c"
0000000000008d24         lea        rdi, qword [aInvalidKindInG]                ; argument "__assertion" for method j___assert_fail, "! \\\"invalid KIND in __gen_tempname\\\""
0000000000008d2b         mov        edx, 0x147                                  ; argument "__line" for method j___assert_fail
0000000000008d30         call       j___assert_fail                             ; __assert_fail
                        ; endp
0000000000008d35         align      8

                     loc_8d38:
0000000000008d38         lea        rdx, qword [rsp+0x18+var_C]                 ; CODE XREF=gen_tempname_len+16
0000000000008d3d         lea        rcx, qword [try_nocreate]                   ; try_nocreate
0000000000008d44         call       try_tempname_len                            ; try_tempname_len
0000000000008d49         add        rsp, 0x18
0000000000008d4d         ret
                        ; endp
0000000000008d4e         align      16

                     loc_8d50:
0000000000008d50         lea        rdx, qword [rsp+0x18+var_C]                 ; CODE XREF=gen_tempname_len+20
0000000000008d55         lea        rcx, qword [try_file]                       ; try_file
0000000000008d5c         call       try_tempname_len                            ; try_tempname_len
0000000000008d61         add        rsp, 0x18
0000000000008d65         ret
                        ; endp
0000000000008d66         align      16

                     loc_8d70:
0000000000008d70         lea        rdx, qword [rsp+0x18+var_C]                 ; CODE XREF=gen_tempname_len+11
0000000000008d75         lea        rcx, qword [try_dir]                        ; try_dir
0000000000008d7c         call       try_tempname_len                            ; try_tempname_len
0000000000008d81         add        rsp, 0x18
0000000000008d85         ret
                        ; endp
0000000000008d86         align      16                                          ; End of unwind block (FDE at 0xe2b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gen_tempname:
0000000000008d90         mov        r8d, 0x6                                    ; Begin of unwind block (FDE at 0xe2d8)
0000000000008d96         jmp        gen_tempname_len                            ; gen_tempname_len
                        ; endp
0000000000008d9b         align      32                                          ; End of unwind block (FDE at 0xe2d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     try_tempname:
0000000000008da0         mov        r8d, 0x6                                    ; Begin of unwind block (FDE at 0xe2ec)
0000000000008da6         jmp        try_tempname_len                            ; try_tempname_len
                        ; endp
0000000000008dab         align      16                                          ; End of unwind block (FDE at 0xe2ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fd_safer:
0000000000008db0         push       r13                                         ; Begin of unwind block (FDE at 0xe304), CODE XREF=openat_safer+41
0000000000008db2         push       r12
0000000000008db4         push       rbp
0000000000008db5         push       rbx
0000000000008db6         mov        ebx, edi
0000000000008db8         sub        rsp, 0x8
0000000000008dbc         cmp        edi, 0x2
0000000000008dbf         ja         loc_8de2

0000000000008dc1         call       dup_safer                                   ; dup_safer
0000000000008dc6         mov        r12d, eax
0000000000008dc9         call       j___errno_location                          ; __errno_location
0000000000008dce         mov        r13d, dword [rax]
0000000000008dd1         mov        rbp, rax
0000000000008dd4         mov        edi, ebx                                    ; argument "__fd" for method j_close
0000000000008dd6         call       j_close                                     ; close
0000000000008ddb         mov        ebx, r12d
0000000000008dde         mov        dword [rbp], r13d

                     loc_8de2:
0000000000008de2         add        rsp, 0x8                                    ; CODE XREF=fd_safer+15
0000000000008de6         mov        eax, ebx
0000000000008de8         pop        rbx
0000000000008de9         pop        rbp
0000000000008dea         pop        r12
0000000000008dec         pop        r13
0000000000008dee         ret
                        ; endp
0000000000008def         align      16                                          ; End of unwind block (FDE at 0xe304)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
0000000000008df0         push       r15                                         ; Begin of unwind block (FDE at 0xe33c), CODE XREF=j_version_etc_arn, version_etc_va+75, version_etc+161
0000000000008df2         push       r14
0000000000008df4         push       r13
0000000000008df6         push       r12
0000000000008df8         mov        r12, r9
0000000000008dfb         push       rbp
0000000000008dfc         push       rbx
0000000000008dfd         mov        rbp, rdi
0000000000008e00         mov        rbx, r8
0000000000008e03         sub        rsp, 0x28
0000000000008e07         test       rsi, rsi
0000000000008e0a         je         loc_8f28

0000000000008e10         mov        r8, rdx
0000000000008e13         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
0000000000008e1a         mov        r9, rcx
0000000000008e1d         xor        eax, eax
0000000000008e1f         mov        rcx, rsi
0000000000008e22         mov        esi, 0x1
0000000000008e27         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_8e2c:
0000000000008e2c         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0xc6d2, CODE XREF=version_etc_arn+337
0000000000008e33         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008e35         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008e3a         call       j_dcgettext                                 ; dcgettext
0000000000008e3f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000008e46         mov        rcx, rax
0000000000008e49         mov        r8d, 0x7e3
0000000000008e4f         mov        esi, 0x1
0000000000008e54         mov        rdi, rbp
0000000000008e57         xor        eax, eax
0000000000008e59         call       j___fprintf_chk                             ; __fprintf_chk
0000000000008e5e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000008e65         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008e67         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008e6c         call       j_dcgettext                                 ; dcgettext
0000000000008e71         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000008e74         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000008e77         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000008e7c         cmp        r12, 0x9
0000000000008e80         ja         loc_91c0

0000000000008e86         lea        rdx, qword [switch_table_c9b8]              ; switch_table_c9b8
0000000000008e8d         movsxd     rax, dword [rdx+r12*4]
0000000000008e91         add        rax, rdx
0000000000008e94         jmp        rax                                         ; switch statement using table at 0xc9b8, with 10 cases, 0x8ea0,0x8f16,0x8f50,0x8fa8,0x8fe8,0x9030,0x9080,0x90d8,0x9108,0x9170
0000000000008e96         align      32

                     loc_8ea0:
0000000000008ea0         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000008ea4         mov        rax, qword [rbx+0x10]
0000000000008ea8         lea        rsi, qword [aWrittenBySSSns_c8c8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
0000000000008eaf         mov        r8, qword [rbx+8]
0000000000008eb3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008eb8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008eba         mov        r13, qword [rbx+0x30]
0000000000008ebe         mov        r12, qword [rbx+0x28]
0000000000008ec2         mov        qword [rsp+0x58+var_48], r9
0000000000008ec7         mov        r15, qword [rbx+0x20]
0000000000008ecb         mov        r14, qword [rbx+0x18]
0000000000008ecf         mov        qword [rsp+0x58+var_58], rax
0000000000008ed3         mov        qword [rsp+0x58+var_50], r8
0000000000008ed8         mov        rbx, qword [rbx]
0000000000008edb         call       j_dcgettext                                 ; dcgettext
0000000000008ee0         sub        rsp, 0x8

                     loc_8ee4:
0000000000008ee4         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000008ee9         mov        rdx, rax
0000000000008eec         mov        rcx, rbx
0000000000008eef         mov        esi, 0x1
0000000000008ef4         mov        rdi, rbp
0000000000008ef7         xor        eax, eax
0000000000008ef9         push       r9
0000000000008efb         push       r13
0000000000008efd         push       r12
0000000000008eff         push       r15
0000000000008f01         push       r14
0000000000008f03         mov        r9, qword [rsp+0x88+var_58]
0000000000008f08         mov        r8, qword [rsp+0x88+var_50]
0000000000008f0d         call       j___fprintf_chk                             ; __fprintf_chk
0000000000008f12         add        rsp, 0x30

                     loc_8f16:
0000000000008f16         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
0000000000008f1a         pop        rbx
0000000000008f1b         pop        rbp
0000000000008f1c         pop        r12
0000000000008f1e         pop        r13
0000000000008f20         pop        r14
0000000000008f22         pop        r15
0000000000008f24         ret
                        ; endp
0000000000008f25         align      8

                     loc_8f28:
0000000000008f28         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
0000000000008f2b         mov        rcx, rdx
0000000000008f2e         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000008f35         mov        esi, 0x1
0000000000008f3a         xor        eax, eax
0000000000008f3c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000008f41         jmp        loc_8e2c
0000000000008f46         align      16

                     loc_8f50:
0000000000008f50         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000008f54         mov        r9, qword [rbx+0x38]
0000000000008f58         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
0000000000008f5f         mov        rax, qword [rbx+0x10]
0000000000008f63         mov        r8, qword [rbx+8]
0000000000008f67         mov        edx, 0x5
0000000000008f6c         mov        r13, qword [rbx+0x30]
0000000000008f70         mov        r12, qword [rbx+0x28]
0000000000008f74         mov        r15, qword [rbx+0x20]
0000000000008f78         mov        r14, qword [rbx+0x18]
0000000000008f7c         mov        rbx, qword [rbx]
0000000000008f7f         mov        qword [rsp+0x58+var_40], r10
0000000000008f84         mov        qword [rsp+0x58+var_48], r9
0000000000008f89         mov        qword [rsp+0x58+var_58], rax
0000000000008f8d         mov        qword [rsp+0x58+var_50], r8

                     loc_8f92:
0000000000008f92         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000008f94         call       j_dcgettext                                 ; dcgettext
0000000000008f99         mov        r10, qword [rsp+0x58+var_40]
0000000000008f9e         push       r10
0000000000008fa0         jmp        loc_8ee4
0000000000008fa5         align      8

                     loc_8fa8:
0000000000008fa8         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
0000000000008fab         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000008fb2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008fb7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008fb9         call       j_dcgettext                                 ; dcgettext
0000000000008fbe         add        rsp, 0x28
0000000000008fc2         mov        rcx, rbx
0000000000008fc5         mov        rdi, rbp
0000000000008fc8         pop        rbx
0000000000008fc9         pop        rbp
0000000000008fca         pop        r12
0000000000008fcc         pop        r13
0000000000008fce         pop        r14
0000000000008fd0         pop        r15
0000000000008fd2         mov        rdx, rax
0000000000008fd5         mov        esi, 0x1
0000000000008fda         xor        eax, eax
0000000000008fdc         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000008fe1         align      8

                     loc_8fe8:
0000000000008fe8         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
0000000000008fec         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000008ff3         mov        rbx, qword [rbx]
0000000000008ff6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008ffb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008ffd         call       j_dcgettext                                 ; dcgettext
0000000000009002         add        rsp, 0x28
0000000000009006         mov        r8, r12
0000000000009009         mov        rcx, rbx
000000000000900c         mov        rdi, rbp
000000000000900f         mov        rdx, rax
0000000000009012         mov        esi, 0x1
0000000000009017         pop        rbx
0000000000009018         pop        rbp
0000000000009019         pop        r12
000000000000901b         pop        r13
000000000000901d         pop        r14
000000000000901f         pop        r15
0000000000009021         xor        eax, eax
0000000000009023         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000009028         align      16

                     loc_9030:
0000000000009030         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000009034         mov        r12, qword [rbx+8]
0000000000009038         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
000000000000903f         mov        rbx, qword [rbx]
0000000000009042         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000009047         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000009049         call       j_dcgettext                                 ; dcgettext
000000000000904e         add        rsp, 0x28
0000000000009052         mov        r9, r13
0000000000009055         mov        r8, r12
0000000000009058         mov        rcx, rbx
000000000000905b         mov        rdi, rbp
000000000000905e         mov        rdx, rax
0000000000009061         pop        rbx
0000000000009062         pop        rbp
0000000000009063         pop        r12
0000000000009065         pop        r13
0000000000009067         pop        r14
0000000000009069         pop        r15
000000000000906b         mov        esi, 0x1
0000000000009070         xor        eax, eax
0000000000009072         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000009077         align      128

                     loc_9080:
0000000000009080         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000009087         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000908c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000908e         mov        r14, qword [rbx+0x18]
0000000000009092         mov        r13, qword [rbx+0x10]
0000000000009096         mov        r12, qword [rbx+8]
000000000000909a         mov        rbx, qword [rbx]
000000000000909d         call       j_dcgettext                                 ; dcgettext
00000000000090a2         sub        rsp, 0x8

                     loc_90a6:
00000000000090a6         push       r14                                         ; CODE XREF=version_etc_arn+784
00000000000090a8         mov        rdx, rax
00000000000090ab         mov        r9, r13
00000000000090ae         mov        r8, r12
00000000000090b1         mov        rcx, rbx
00000000000090b4         mov        rdi, rbp
00000000000090b7         mov        esi, 0x1
00000000000090bc         xor        eax, eax
00000000000090be         call       j___fprintf_chk                             ; __fprintf_chk
00000000000090c3         pop        rax
00000000000090c4         pop        rdx
00000000000090c5         add        rsp, 0x28
00000000000090c9         pop        rbx
00000000000090ca         pop        rbp
00000000000090cb         pop        r12
00000000000090cd         pop        r13
00000000000090cf         pop        r14
00000000000090d1         pop        r15
00000000000090d3         ret
                        ; endp
00000000000090d4         align      8

                     loc_90d8:
00000000000090d8         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
00000000000090dc         lea        rsi, qword [aWrittenBySSSns_c848]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
00000000000090e3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000090e8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000090ea         mov        r14, qword [rbx+0x18]
00000000000090ee         mov        r13, qword [rbx+0x10]
00000000000090f2         mov        r12, qword [rbx+8]
00000000000090f6         mov        rbx, qword [rbx]
00000000000090f9         call       j_dcgettext                                 ; dcgettext
00000000000090fe         push       r15
0000000000009100         jmp        loc_90a6
0000000000009102         align      8

                     loc_9108:
0000000000009108         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
000000000000910c         mov        r12, qword [rbx+0x28]
0000000000009110         lea        rsi, qword [aWrittenBySSSns_c870]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000009117         mov        r15, qword [rbx+0x20]
000000000000911b         mov        r14, qword [rbx+0x18]
000000000000911f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000009124         mov        r13, qword [rbx+0x10]
0000000000009128         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000912a         mov        rbx, qword [rbx]
000000000000912d         mov        qword [rsp+0x58+var_58], r8
0000000000009131         call       j_dcgettext                                 ; dcgettext
0000000000009136         sub        rsp, 0x8
000000000000913a         mov        r9, r13
000000000000913d         push       r12
000000000000913f         push       r15
0000000000009141         push       r14

                     loc_9143:
0000000000009143         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000009148         mov        rcx, rbx
000000000000914b         mov        rdx, rax
000000000000914e         mov        rdi, rbp
0000000000009151         mov        esi, 0x1
0000000000009156         xor        eax, eax
0000000000009158         call       j___fprintf_chk                             ; __fprintf_chk
000000000000915d         add        rsp, 0x20
0000000000009161         add        rsp, 0x28
0000000000009165         pop        rbx
0000000000009166         pop        rbp
0000000000009167         pop        r12
0000000000009169         pop        r13
000000000000916b         pop        r14
000000000000916d         pop        r15
000000000000916f         ret
                        ; endp

                     loc_9170:
0000000000009170         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000009174         mov        r13, qword [rbx+0x30]
0000000000009178         lea        rsi, qword [aWrittenBySSSns_c898]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
000000000000917f         mov        r12, qword [rbx+0x28]
0000000000009183         mov        r15, qword [rbx+0x20]
0000000000009187         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000918c         mov        r14, qword [rbx+0x18]
0000000000009190         mov        r8, qword [rbx+8]
0000000000009194         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000009196         mov        qword [rsp+0x58+var_50], r9
000000000000919b         mov        rbx, qword [rbx]
000000000000919e         mov        qword [rsp+0x58+var_58], r8
00000000000091a2         call       j_dcgettext                                 ; dcgettext
00000000000091a7         push       r13
00000000000091a9         push       r12
00000000000091ab         push       r15
00000000000091ad         push       r14
00000000000091af         mov        r9, qword [rsp+0x78+var_50]
00000000000091b4         jmp        loc_9143
00000000000091b6         align      64

                     loc_91c0:
00000000000091c0         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
00000000000091c4         mov        r9, qword [rbx+0x38]
00000000000091c8         mov        edx, 0x5
00000000000091cd         mov        rax, qword [rbx+0x10]
00000000000091d1         mov        r8, qword [rbx+8]
00000000000091d5         lea        rsi, qword [aWrittenBySSSns_c930]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
00000000000091dc         mov        r13, qword [rbx+0x30]
00000000000091e0         mov        r12, qword [rbx+0x28]
00000000000091e4         mov        r15, qword [rbx+0x20]
00000000000091e8         mov        r14, qword [rbx+0x18]
00000000000091ec         mov        qword [rsp+0x58+var_40], r10
00000000000091f1         mov        qword [rsp+0x58+var_48], r9
00000000000091f6         mov        qword [rsp+0x58+var_58], rax
00000000000091fa         mov        qword [rsp+0x58+var_50], r8
00000000000091ff         mov        rbx, qword [rbx]
0000000000009202         jmp        loc_8f92
0000000000009207         align      16                                          ; End of unwind block (FDE at 0xe33c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000009210         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0xe450)
0000000000009213         cmp        qword [r8], 0x0
0000000000009217         je         j_version_etc_arn                           ; version_etc_arn

0000000000009219         nop        dword [rax]

                     loc_9220:
0000000000009220         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000009224         cmp        qword [r8+r9*8], 0x0
0000000000009229         jne        loc_9220

                     j_version_etc_arn:        // version_etc_arn
000000000000922b         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000009230         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0xe450), Begin of unwind block (FDE at 0xe464)
0000000000009234         mov        r10, r8
0000000000009237         xor        r9d, r9d
000000000000923a         mov        rax, qword [fs:0x28]
0000000000009243         mov        qword [rsp+0x68+var_10], rax
0000000000009248         xor        eax, eax
000000000000924a         mov        r8, rsp
000000000000924d         nop        dword [rax]

                     loc_9250:
0000000000009250         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000009253         cmp        eax, 0x2f
0000000000009256         ja         loc_929a

0000000000009258         mov        r11d, eax
000000000000925b         add        r11, qword [r10+0x10]
000000000000925f         add        eax, 0x8
0000000000009262         mov        dword [r10], eax

                     loc_9265:
0000000000009265         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000009268         test       rax, rax
000000000000926b         mov        qword [r8+r9*8], rax
000000000000926f         je         loc_927b

0000000000009271         add        r9, 0x1
0000000000009275         cmp        r9, 0xa
0000000000009279         jne        loc_9250

                     loc_927b:
000000000000927b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000009280         mov        rax, qword [rsp+0x68+var_10]
0000000000009285         xor        rax, qword [fs:0x28]
000000000000928e         jne        loc_9295

0000000000009290         add        rsp, 0x68
0000000000009294         ret
                        ; endp

                     loc_9295:
0000000000009295         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_929a:
000000000000929a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
000000000000929e         lea        rax, qword [r11+8]
00000000000092a2         mov        qword [r10+8], rax
00000000000092a6         jmp        loc_9265
00000000000092a8         align      16                                          ; End of unwind block (FDE at 0xe464)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
00000000000092b0         push       rbp                                         ; Begin of unwind block (FDE at 0xe480), CODE XREF=main+486
00000000000092b1         push       rbx
00000000000092b2         mov        r10d, 0x20
00000000000092b8         xor        r11d, r11d
00000000000092bb         sub        rsp, 0xb8
00000000000092c2         mov        rax, qword [fs:0x28]
00000000000092cb         mov        qword [rsp+0xc8+var_50], rax
00000000000092d0         xor        eax, eax
00000000000092d2         lea        rax, qword [rsp+0xc8+arg_0]
00000000000092da         mov        qword [rsp+0xc8+var_28], r8
00000000000092e2         lea        rbx, qword [rsp+0xc8+arg_0]
00000000000092ea         lea        r8, qword [rsp+0xc8+var_A8]
00000000000092ef         mov        qword [rsp+0xc8+var_20], r9
00000000000092f7         mov        dword [rsp+0xc8+var_C0], 0x20
00000000000092ff         mov        qword [rsp+0xc8+var_B8], rax
0000000000009304         lea        rax, qword [rsp+0xc8+var_48]
000000000000930c         xor        r9d, r9d
000000000000930f         mov        qword [rsp+0xc8+var_B0], rax
0000000000009314         mov        rbp, rax
0000000000009317         nop        word [rax+rax]

                     loc_9320:
0000000000009320         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000009324         ja         loc_937c

0000000000009326         mov        eax, r10d
0000000000009329         mov        r11d, 0x1
000000000000932f         add        r10d, 0x8
0000000000009333         add        rax, rbp

                     loc_9336:
0000000000009336         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000009339         test       rax, rax
000000000000933c         mov        qword [r8+r9*8], rax
0000000000009340         je         loc_934c

0000000000009342         add        r9, 0x1
0000000000009346         cmp        r9, 0xa
000000000000934a         jne        loc_9320

                     loc_934c:
000000000000934c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
000000000000934f         jne        loc_9375

                     loc_9351:
0000000000009351         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000009356         mov        rax, qword [rsp+0xc8+var_50]
000000000000935b         xor        rax, qword [fs:0x28]
0000000000009364         jne        loc_9370

0000000000009366         add        rsp, 0xb8
000000000000936d         pop        rbx
000000000000936e         pop        rbp
000000000000936f         ret
                        ; endp

                     loc_9370:
0000000000009370         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_9375:
0000000000009375         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
000000000000937a         jmp        loc_9351

                     loc_937c:
000000000000937c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
000000000000937f         add        rbx, 0x8
0000000000009383         jmp        loc_9336
0000000000009385         align      16                                          ; End of unwind block (FDE at 0xe480)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000009390         push       rbx                                         ; Begin of unwind block (FDE at 0xe4ac)
0000000000009391         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000009398         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000939d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000939f         call       j_dcgettext                                 ; dcgettext
00000000000093a4         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
00000000000093ab         mov        rsi, rax
00000000000093ae         mov        edi, 0x1
00000000000093b3         xor        eax, eax
00000000000093b5         call       j___printf_chk                              ; __printf_chk
00000000000093ba         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
00000000000093c1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000093c6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000093c8         call       j_dcgettext                                 ; dcgettext
00000000000093cd         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000093d4         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0xb0b7
00000000000093db         mov        rsi, rax
00000000000093de         mov        edi, 0x1
00000000000093e3         xor        eax, eax
00000000000093e5         call       j___printf_chk                              ; __printf_chk
00000000000093ea         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000093f1         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
00000000000093f8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000093fa         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000093ff         call       j_dcgettext                                 ; dcgettext
0000000000009404         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000009407         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000940a         pop        rbx
000000000000940b         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000009410         push       rbx                                         ; End of unwind block (FDE at 0xe4ac), Begin of unwind block (FDE at 0xe4cc), CODE XREF=do_link+1565, do_link+1666, sub_4daa+11, sub_4daa+98, record_file+29, quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
0000000000009411         mov        rbx, rdi
0000000000009414         call       j_malloc                                    ; malloc
0000000000009419         test       rax, rax
000000000000941c         jne        loc_9423

000000000000941e         test       rbx, rbx
0000000000009421         jne        loc_9425

                     loc_9423:
0000000000009423         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000009424         ret
                        ; endp

                     loc_9425:
0000000000009425         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_942a:
000000000000942a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0xe4cc)
                     xnmalloc:
0000000000009430         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0xe4e8)
0000000000009433         mul        rsi
0000000000009436         mov        rdi, rax
0000000000009439         seto       al
000000000000943c         test       rdi, rdi
000000000000943f         js         loc_944b

0000000000009441         movzx      eax, al
0000000000009444         test       rax, rax
0000000000009447         jne        loc_944b

0000000000009449         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_944b:
000000000000944b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
000000000000944f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_9454:
0000000000009454         nop                                                    ; End of unwind block (FDE at 0xe4e8)
0000000000009456         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000009460         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0xe4fc)
                        ; endp
0000000000009462         align      16                                          ; End of unwind block (FDE at 0xe4fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000009470         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0xe510), CODE XREF=canonicalize_filename_mode+364, canonicalize_filename_mode+506, canonicalize_filename_mode+1154, sub_4daa+46, quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000009473         push       rbx
0000000000009474         mov        rbx, rsi
0000000000009477         jne        loc_947e

0000000000009479         test       rdi, rdi
000000000000947c         jne        loc_9498

                     loc_947e:
000000000000947e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000009481         call       j_realloc                                   ; realloc
0000000000009486         test       rax, rax
0000000000009489         jne        loc_9490

000000000000948b         test       rbx, rbx
000000000000948e         jne        loc_94a1

                     loc_9490:
0000000000009490         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000009491         ret
                        ; endp
0000000000009492         align      8

                     loc_9498:
0000000000009498         call       j_free                                      ; free, CODE XREF=xrealloc+12
000000000000949d         xor        eax, eax
000000000000949f         pop        rbx
00000000000094a0         ret
                        ; endp

                     loc_94a1:
00000000000094a1         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_94a6:
00000000000094a6         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0xe510)
                     xnrealloc:
00000000000094b0         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0xe534)
00000000000094b3         mul        rdx
00000000000094b6         mov        rsi, rax
00000000000094b9         seto       al
00000000000094bc         test       rsi, rsi
00000000000094bf         js         loc_94cb

00000000000094c1         movzx      eax, al
00000000000094c4         test       rax, rax
00000000000094c7         jne        loc_94cb

00000000000094c9         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_94cb:
00000000000094cb         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
00000000000094cf         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_94d4:
00000000000094d4         nop                                                    ; End of unwind block (FDE at 0xe534)
00000000000094d6         nop        word [cs:rax+rax]
                     x2nrealloc:
00000000000094e0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xe548)
00000000000094e3         mov        r9, rdx
00000000000094e6         mov        rcx, qword [rsi]
00000000000094e9         je         loc_9520

00000000000094eb         xor        edx, edx
00000000000094ed         movabs     rax, 0x5555555555555554
00000000000094f7         div        r9
00000000000094fa         cmp        rax, rcx
00000000000094fd         jbe        loc_953b

00000000000094ff         mov        rax, rcx
0000000000009502         shr        rax, 0x1
0000000000009505         lea        rcx, qword [rax+rcx+1]

                     loc_950a:
000000000000950a         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
000000000000950d         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000009511         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000009514         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000009519         align      32

                     loc_9520:
0000000000009520         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000009523         je         loc_9548

                     loc_9525:
0000000000009525         mov        rax, rcx                                    ; CODE XREF=sub_9544+28
0000000000009528         mul        r9
000000000000952b         seto       dl
000000000000952e         test       rax, rax
0000000000009531         movzx      edx, dl
0000000000009534         js         loc_953b

0000000000009536         test       rdx, rdx
0000000000009539         je         loc_950a

                     loc_953b:
000000000000953b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
000000000000953f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_9544:
0000000000009544         nop        dword [rax]
                        ; endp

                     loc_9548:
0000000000009548         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
000000000000954a         mov        eax, 0x80
000000000000954f         xor        r8d, r8d
0000000000009552         div        r9
0000000000009555         test       rax, rax
0000000000009558         sete       r8b
000000000000955c         lea        rcx, qword [r8+rax]
0000000000009560         jmp        loc_9525
0000000000009562         align      16                                          ; End of unwind block (FDE at 0xe548)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000009570         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xe560)
0000000000009573         mov        rax, qword [rsi]
0000000000009576         je         loc_95a0

0000000000009578         movabs     rdx, 0x5555555555555553
0000000000009582         cmp        rax, rdx
0000000000009585         ja         loc_95b1

0000000000009587         mov        rdx, rax
000000000000958a         shr        rdx, 0x1
000000000000958d         lea        rax, qword [rdx+rax+1]

                     loc_9592:
0000000000009592         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000009595         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000009598         jmp        xrealloc                                    ; xrealloc
                        ; endp
000000000000959d         align      32

                     loc_95a0:
00000000000095a0         test       rax, rax                                    ; CODE XREF=x2realloc+6
00000000000095a3         mov        edx, 0x80
00000000000095a8         cmove      rax, rdx
00000000000095ac         test       rax, rax
00000000000095af         jns        loc_9592

                     loc_95b1:
00000000000095b1         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
00000000000095b5         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_95ba:
00000000000095ba         nop        word [rax+rax]                              ; End of unwind block (FDE at 0xe560)
                     xzalloc:
00000000000095c0         push       rbx                                         ; Begin of unwind block (FDE at 0xe578)
00000000000095c1         mov        rbx, rdi
00000000000095c4         call       xmalloc                                     ; xmalloc
00000000000095c9         mov        rdx, rbx                                    ; argument "__n" for method j_memset
00000000000095cc         xor        esi, esi                                    ; argument "__c" for method j_memset
00000000000095ce         mov        rdi, rax                                    ; argument "__s" for method j_memset
00000000000095d1         pop        rbx
00000000000095d2         jmp        j_memset                                    ; memset
                        ; endp
00000000000095d7         align      32                                          ; End of unwind block (FDE at 0xe578)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
00000000000095e0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0xe594)
00000000000095e3         sub        rsp, 0x8
00000000000095e7         mul        rsi
00000000000095ea         seto       dl
00000000000095ed         test       rax, rax
00000000000095f0         js         loc_9609

00000000000095f2         movzx      edx, dl
00000000000095f5         test       rdx, rdx
00000000000095f8         jne        loc_9609

00000000000095fa         call       j_calloc                                    ; calloc
00000000000095ff         test       rax, rax
0000000000009602         je         loc_9609

0000000000009604         add        rsp, 0x8
0000000000009608         ret
                        ; endp

                     loc_9609:
0000000000009609         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_960e:
000000000000960e         nop                                                    ; End of unwind block (FDE at 0xe594)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemdup:
0000000000009610         push       rbp                                         ; Begin of unwind block (FDE at 0xe5b0), CODE XREF=clone_quoting_options+40
0000000000009611         push       rbx
0000000000009612         mov        rbp, rdi
0000000000009615         mov        rdi, rsi
0000000000009618         mov        rbx, rsi
000000000000961b         sub        rsp, 0x8
000000000000961f         call       xmalloc                                     ; xmalloc
0000000000009624         add        rsp, 0x8
0000000000009628         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
000000000000962b         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
000000000000962e         pop        rbx
000000000000962f         pop        rbp
0000000000009630         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000009633         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000009638         align      64                                          ; End of unwind block (FDE at 0xe5b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000009640         push       rbx                                         ; Begin of unwind block (FDE at 0xe5d8), CODE XREF=do_link+1429, record_file+40
0000000000009641         mov        rbx, rdi
0000000000009644         call       j_strlen                                    ; strlen
0000000000009649         mov        rdi, rbx
000000000000964c         lea        rsi, qword [rax+1]
0000000000009650         pop        rbx
0000000000009651         jmp        xmemdup                                     ; xmemdup
                        ; endp
0000000000009653         align      32                                          ; End of unwind block (FDE at 0xe5d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000009660         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0xe5f4), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=main+1099, find_backup_file_name+21, canonicalize_filename_mode+1301, dir_name+19, record_file+130, file_name_concat+19, quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31
0000000000009667         sub        rsp, 0x8
000000000000966b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000009670         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000009672         call       j_dcgettext                                 ; dcgettext
0000000000009677         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
000000000000967d         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0xca77
0000000000009684         mov        rcx, rax
0000000000009687         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000009689         xor        eax, eax
000000000000968b         call       j_error                                     ; error
0000000000009690         call       j_abort                                     ; abort
                        ; endp
0000000000009695         align      32                                          ; End of unwind block (FDE at 0xe5f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xgetcwd:
00000000000096a0         push       rbx                                         ; Begin of unwind block (FDE at 0xe60c), CODE XREF=canonicalize_filename_mode+99
00000000000096a1         xor        esi, esi                                    ; argument "__size" for method j_getcwd
00000000000096a3         xor        edi, edi                                    ; argument "__buf" for method j_getcwd
00000000000096a5         call       j_getcwd                                    ; getcwd
00000000000096aa         test       rax, rax
00000000000096ad         mov        rbx, rax
00000000000096b0         je         loc_96c0

                     loc_96b2:
00000000000096b2         mov        rax, rbx                                    ; CODE XREF=xgetcwd+40
00000000000096b5         pop        rbx
00000000000096b6         ret
                        ; endp
00000000000096b7         align      64

                     loc_96c0:
00000000000096c0         call       j___errno_location                          ; __errno_location, CODE XREF=xgetcwd+16
00000000000096c5         cmp        dword [rax], 0xc
00000000000096c8         jne        loc_96b2

00000000000096ca         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_96cf:
00000000000096cf         nop                                                    ; End of unwind block (FDE at 0xe60c)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32


                     yesno:
00000000000096d0         push       rbx                                         ; Begin of unwind block (FDE at 0xe62c), CODE XREF=do_link+2514
00000000000096d1         mov        edx, 0xa                                    ; argument "__delimiter" for method j___getdelim
00000000000096d6         xor        ebx, ebx
00000000000096d8         sub        rsp, 0x20
00000000000096dc         mov        rcx, qword [stdin@@GLIBC_2.2.5]             ; argument "__stream" for method j___getdelim, stdin@@GLIBC_2.2.5
00000000000096e3         lea        rsi, qword [rsp+0x28+var_18]                ; argument "__n" for method j___getdelim
00000000000096e8         lea        rdi, qword [rsp+0x28+var_20]                ; argument "__lineptr" for method j___getdelim
00000000000096ed         mov        qword [rsp+0x28+var_20], 0x0
00000000000096f6         mov        rax, qword [fs:0x28]
00000000000096ff         mov        qword [rsp+0x28+var_10], rax
0000000000009704         xor        eax, eax
0000000000009706         mov        qword [rsp+0x28+var_18], 0x0
000000000000970f         call       j___getdelim                                ; __getdelim
0000000000009714         test       rax, rax
0000000000009717         jle        loc_9732

0000000000009719         mov        rdi, qword [rsp+0x28+var_20]
000000000000971e         lea        rax, qword [rdi+rax-1]
0000000000009723         cmp        byte [rax], 0xa
0000000000009726         je         loc_9758

                     loc_9728:
0000000000009728         call       j_rpmatch                                   ; rpmatch, CODE XREF=yesno+144
000000000000972d         test       eax, eax
000000000000972f         setg       bl

                     loc_9732:
0000000000009732         mov        rdi, qword [rsp+0x28+var_20]                ; argument "__ptr" for method j_free, CODE XREF=yesno+71
0000000000009737         call       j_free                                      ; free
000000000000973c         mov        rdx, qword [rsp+0x28+var_10]
0000000000009741         xor        rdx, qword [fs:0x28]
000000000000974a         mov        eax, ebx
000000000000974c         jne        loc_9762

000000000000974e         add        rsp, 0x20
0000000000009752         pop        rbx
0000000000009753         ret
                        ; endp
0000000000009754         align      8

                     loc_9758:
0000000000009758         mov        byte [rax], 0x0                             ; CODE XREF=yesno+86
000000000000975b         mov        rdi, qword [rsp+0x28+var_20]
0000000000009760         jmp        loc_9728

                     loc_9762:
0000000000009762         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=yesno+124
                        ; endp
0000000000009767         align      16                                          ; End of unwind block (FDE at 0xe62c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000009770         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xe654), CODE XREF=close_stdin+56, rpl_fclose+31
0000000000009773         push       rbx
0000000000009774         mov        rbx, rdi
0000000000009777         je         loc_978a

0000000000009779         call       j___freading                                ; __freading
000000000000977e         test       eax, eax
0000000000009780         je         loc_978a

0000000000009782         test       dword [rbx], 0x100
0000000000009788         jne        loc_9798

                     loc_978a:
000000000000978a         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
000000000000978d         pop        rbx
000000000000978e         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000009793         align      8

                     loc_9798:
0000000000009798         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
000000000000979b         mov        edx, 0x1
00000000000097a0         xor        esi, esi
00000000000097a2         call       rpl_fseeko                                  ; rpl_fseeko
00000000000097a7         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
00000000000097aa         pop        rbx
00000000000097ab         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     freadahead:
00000000000097b0         xor        eax, eax                                    ; End of unwind block (FDE at 0xe654), Begin of unwind block (FDE at 0xe674), CODE XREF=close_stdin+14
00000000000097b2         mov        rcx, qword [rdi+0x20]
00000000000097b6         cmp        qword [rdi+0x28], rcx
00000000000097ba         ja         loc_97d7

00000000000097bc         mov        rax, qword [rdi+0x10]
00000000000097c0         sub        rax, qword [rdi+8]
00000000000097c4         test       dword [rdi], 0x100
00000000000097ca         je         loc_97d7

00000000000097cc         mov        rdx, qword [rdi+0x58]
00000000000097d0         sub        rdx, qword [rdi+0x48]
00000000000097d4         add        rax, rdx

                     loc_97d7:
00000000000097d7         ret                                                    ; CODE XREF=freadahead+10, freadahead+26
                        ; endp
00000000000097d9         align      32                                          ; End of unwind block (FDE at 0xe674)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
00000000000097e0         mov        rax, qword [rdi+8]                          ; Begin of unwind block (FDE at 0xe68c), CODE XREF=close_stdin+194, rpl_fflush+50
00000000000097e4         cmp        qword [rdi+0x10], rax
00000000000097e8         je         loc_97f0

                     j_j_fseeko:        // fseeko
00000000000097ea         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
00000000000097ef         align      16

                     loc_97f0:
00000000000097f0         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
00000000000097f4         cmp        qword [rdi+0x28], rax
00000000000097f8         jne        j_j_fseeko                                  ; fseeko

00000000000097fa         cmp        qword [rdi+0x48], 0x0
00000000000097ff         jne        j_j_fseeko                                  ; fseeko

0000000000009801         push       r12
0000000000009803         push       rbp
0000000000009804         mov        r12d, edx
0000000000009807         push       rbx
0000000000009808         mov        rbp, rsi
000000000000980b         mov        rbx, rdi
000000000000980e         call       j_fileno                                    ; fileno
0000000000009813         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000009816         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000009819         mov        edi, eax                                    ; argument "__fd" for method j_lseek
000000000000981b         call       j_lseek                                     ; lseek
0000000000009820         cmp        rax, 0xffffffffffffffff
0000000000009824         je         loc_9832

0000000000009826         and        dword [rbx], 0xffffffef
0000000000009829         mov        qword [rbx+0x90], rax
0000000000009830         xor        eax, eax

                     loc_9832:
0000000000009832         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000009833         pop        rbp
0000000000009834         pop        r12
0000000000009836         ret
                        ; endp
0000000000009837         align      64                                          ; End of unwind block (FDE at 0xe68c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000009840         push       r13                                         ; Begin of unwind block (FDE at 0xe6bc), CODE XREF=sub_7210+534
0000000000009842         push       r12
0000000000009844         mov        r13, rsi
0000000000009847         push       rbp
0000000000009848         push       rbx
0000000000009849         mov        rbx, rdi
000000000000984c         mov        r12, rdx
000000000000984f         sub        rsp, 0x18
0000000000009853         mov        rax, qword [fs:0x28]
000000000000985c         mov        qword [rsp+0x38+var_30], rax
0000000000009861         xor        eax, eax
0000000000009863         lea        rax, qword [rsp+0x38+var_34]
0000000000009868         test       rdi, rdi
000000000000986b         cmove      rbx, rax
000000000000986f         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000009872         call       j_mbrtowc                                   ; mbrtowc
0000000000009877         cmp        rax, 0xfffffffffffffffd
000000000000987b         mov        rbp, rax
000000000000987e         jbe        loc_98a0

0000000000009880         test       r12, r12
0000000000009883         je         loc_98a0

0000000000009885         xor        edi, edi
0000000000009887         call       hard_locale                                 ; hard_locale
000000000000988c         test       al, al
000000000000988e         jne        loc_98a0

0000000000009890         movzx      eax, byte [r13]
0000000000009895         mov        ebp, 0x1
000000000000989a         mov        dword [rbx], eax
000000000000989c         nop        dword [rax]

                     loc_98a0:
00000000000098a0         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
00000000000098a5         xor        rdx, qword [fs:0x28]
00000000000098ae         mov        rax, rbp
00000000000098b1         jne        loc_98be

00000000000098b3         add        rsp, 0x18
00000000000098b7         pop        rbx
00000000000098b8         pop        rbp
00000000000098b9         pop        r12
00000000000098bb         pop        r13
00000000000098bd         ret
                        ; endp

                     loc_98be:
00000000000098be         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
00000000000098c3         align      16                                          ; End of unwind block (FDE at 0xe6bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     areadlink_with_size:
00000000000098d0         push       r15                                         ; Begin of unwind block (FDE at 0xe6fc), CODE XREF=canonicalize_filename_mode+1068
00000000000098d2         push       r14
00000000000098d4         mov        eax, 0x401
00000000000098d9         push       r13
00000000000098db         push       r12
00000000000098dd         mov        r13, rdi
00000000000098e0         push       rbp
00000000000098e1         push       rbx
00000000000098e2         lea        rbx, qword [rsi+1]
00000000000098e6         movabs     r14, 0x3fffffffffffffff
00000000000098f0         movabs     r15, 0x7ffffffffffffffe
00000000000098fa         sub        rsp, 0x8
00000000000098fe         cmp        rsi, 0x401
0000000000009905         cmovae     rbx, rax
0000000000009909         nop        dword [rax]

                     loc_9910:
0000000000009910         mov        rdi, rbx                                    ; argument "__size" for method j_malloc, CODE XREF=areadlink_with_size+175
0000000000009913         call       j_malloc                                    ; malloc
0000000000009918         test       rax, rax
000000000000991b         mov        rbp, rax
000000000000991e         je         loc_995b

                     loc_9920:
0000000000009920         mov        rdx, rbx                                    ; argument "__len" for method j_readlink, CODE XREF=areadlink_with_size+137
0000000000009923         mov        rsi, rax                                    ; argument "__buf" for method j_readlink
0000000000009926         mov        rdi, r13                                    ; argument "__path" for method j_readlink
0000000000009929         call       j_readlink                                  ; readlink
000000000000992e         test       rax, rax
0000000000009931         mov        r12, rax
0000000000009934         js         loc_9988

                     loc_9936:
0000000000009936         cmp        rbx, r12                                    ; CODE XREF=areadlink_with_size+192
0000000000009939         ja         loc_99a0

000000000000993b         mov        rdi, rbp                                    ; argument "__ptr" for method j_free
000000000000993e         call       j_free                                      ; free
0000000000009943         cmp        rbx, r14
0000000000009946         ja         loc_9970

0000000000009948         add        rbx, rbx
000000000000994b         mov        rdi, rbx                                    ; argument "__size" for method j_malloc
000000000000994e         call       j_malloc                                    ; malloc
0000000000009953         test       rax, rax
0000000000009956         mov        rbp, rax
0000000000009959         jne        loc_9920

                     loc_995b:
000000000000995b         add        rsp, 0x8                                    ; CODE XREF=areadlink_with_size+78, areadlink_with_size+204, areadlink_with_size+214, areadlink_with_size+237
000000000000995f         mov        rax, rbp
0000000000009962         pop        rbx
0000000000009963         pop        rbp
0000000000009964         pop        r12
0000000000009966         pop        r13
0000000000009968         pop        r14
000000000000996a         pop        r15
000000000000996c         ret
                        ; endp
000000000000996d         align      16

                     loc_9970:
0000000000009970         cmp        rbx, r15                                    ; CODE XREF=areadlink_with_size+118
0000000000009973         ja         loc_99b0

0000000000009975         movabs     rbx, 0x7fffffffffffffff
000000000000997f         jmp        loc_9910
0000000000009981         align      8

                     loc_9988:
0000000000009988         call       j___errno_location                          ; __errno_location, CODE XREF=areadlink_with_size+100
000000000000998d         cmp        dword [rax], 0x22
0000000000009990         je         loc_9936

0000000000009992         mov        rdi, rbp                                    ; argument "__ptr" for method j_free
0000000000009995         xor        ebp, ebp
0000000000009997         call       j_free                                      ; free
000000000000999c         jmp        loc_995b
000000000000999e         align      32

                     loc_99a0:
00000000000099a0         mov        byte [rbp+r12], 0x0                         ; CODE XREF=areadlink_with_size+105
00000000000099a6         jmp        loc_995b
00000000000099a8         align      16

                     loc_99b0:
00000000000099b0         call       j___errno_location                          ; __errno_location, CODE XREF=areadlink_with_size+163
00000000000099b5         xor        ebp, ebp
00000000000099b7         mov        dword [rax], 0xc
00000000000099bd         jmp        loc_995b
00000000000099bf         align      64                                          ; End of unwind block (FDE at 0xe6fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __argmatch_die:
00000000000099c0         mov        edi, 0x1                                    ; Begin of unwind block (FDE at 0xe74c), argument #1 for method usage, DATA XREF=argmatch_die
00000000000099c5         jmp        usage                                       ; usage
                        ; endp
00000000000099ca         align      16                                          ; End of unwind block (FDE at 0xe74c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_41: int8_t, -65
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     argmatch:
00000000000099d0         push       r15                                         ; Begin of unwind block (FDE at 0xe760), CODE XREF=__xargmatch_internal+44
00000000000099d2         push       r14
00000000000099d4         mov        r15, rsi
00000000000099d7         push       r13
00000000000099d9         push       r12
00000000000099db         mov        r13, rcx
00000000000099de         push       rbp
00000000000099df         push       rbx
00000000000099e0         mov        rbp, rdx
00000000000099e3         sub        rsp, 0x28
00000000000099e7         mov        qword [rsp+0x58+var_50], rdi
00000000000099ec         mov        qword [rsp+0x58+var_40], rdx
00000000000099f1         call       j_strlen                                    ; strlen
00000000000099f6         mov        r14, qword [r15]
00000000000099f9         mov        qword [rsp+0x58+var_58], 0xffffffffffffffff
0000000000009a01         test       r14, r14
0000000000009a04         je         loc_9abd

0000000000009a0a         mov        r12, rax
0000000000009a0d         mov        byte [rsp+0x58+var_41], 0x0
0000000000009a12         xor        ebx, ebx
0000000000009a14         jmp        loc_9a67
0000000000009a16         align      32

                     loc_9a20:
0000000000009a20         mov        rax, qword [rsp+0x58+var_40]                ; CODE XREF=argmatch+189
0000000000009a25         test       rax, rax
0000000000009a28         je         loc_9ad0

0000000000009a2e         mov        rdi, qword [rsp+0x58+var_58]
0000000000009a32         mov        rdx, r13                                    ; argument "__n" for method j_memcmp
0000000000009a35         mov        rsi, rbp                                    ; argument "__s2" for method j_memcmp
0000000000009a38         imul       rdi, r13
0000000000009a3c         add        rdi, rax                                    ; argument "__s1" for method j_memcmp
0000000000009a3f         call       j_memcmp                                    ; memcmp
0000000000009a44         test       eax, eax
0000000000009a46         movzx      eax, byte [rsp+0x58+var_41]
0000000000009a4b         mov        ecx, 0x1
0000000000009a50         cmovne     eax, ecx
0000000000009a53         mov        byte [rsp+0x58+var_41], al

                     loc_9a57:
0000000000009a57         add        rbx, 0x1                                    ; CODE XREF=argmatch+169, argmatch+261
0000000000009a5b         add        rbp, r13
0000000000009a5e         mov        r14, qword [r15+rbx*8]
0000000000009a62         test       r14, r14
0000000000009a65         je         loc_9aa8

                     loc_9a67:
0000000000009a67         mov        rsi, qword [rsp+0x58+var_50]                ; argument "__s2" for method j_strncmp, CODE XREF=argmatch+68, argmatch+209
0000000000009a6c         mov        rdx, r12                                    ; argument "__n" for method j_strncmp
0000000000009a6f         mov        rdi, r14                                    ; argument "__s1" for method j_strncmp
0000000000009a72         call       j_strncmp                                   ; strncmp
0000000000009a77         test       eax, eax
0000000000009a79         jne        loc_9a57

0000000000009a7b         mov        rdi, r14                                    ; argument "__s" for method j_strlen
0000000000009a7e         call       j_strlen                                    ; strlen
0000000000009a83         cmp        rax, r12
0000000000009a86         je         loc_9ae0

0000000000009a88         cmp        qword [rsp+0x58+var_58], 0xffffffffffffffff
0000000000009a8d         jne        loc_9a20

0000000000009a8f         mov        qword [rsp+0x58+var_58], rbx
0000000000009a93         add        rbx, 0x1
0000000000009a97         add        rbp, r13
0000000000009a9a         mov        r14, qword [r15+rbx*8]
0000000000009a9e         test       r14, r14
0000000000009aa1         jne        loc_9a67

0000000000009aa3         nop        dword [rax+rax]

                     loc_9aa8:
0000000000009aa8         cmp        byte [rsp+0x58+var_41], 0x0                 ; CODE XREF=argmatch+149
0000000000009aad         mov        rax, 0xfffffffffffffffe
0000000000009ab4         cmove      rax, qword [rsp+0x58+var_58]
0000000000009ab9         mov        qword [rsp+0x58+var_58], rax

                     loc_9abd:
0000000000009abd         mov        rax, qword [rsp+0x58+var_58]                ; CODE XREF=argmatch+52, argmatch+276
0000000000009ac1         add        rsp, 0x28
0000000000009ac5         pop        rbx
0000000000009ac6         pop        rbp
0000000000009ac7         pop        r12
0000000000009ac9         pop        r13
0000000000009acb         pop        r14
0000000000009acd         pop        r15
0000000000009acf         ret
                        ; endp

                     loc_9ad0:
0000000000009ad0         mov        byte [rsp+0x58+var_41], 0x1                 ; CODE XREF=argmatch+88
0000000000009ad5         jmp        loc_9a57
0000000000009ad7         align      32

                     loc_9ae0:
0000000000009ae0         mov        qword [rsp+0x58+var_58], rbx                ; CODE XREF=argmatch+182
0000000000009ae4         jmp        loc_9abd
0000000000009ae6         align      16                                          ; End of unwind block (FDE at 0xe760)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argmatch_invalid:
0000000000009af0         cmp        rdx, 0xffffffffffffffff                     ; Begin of unwind block (FDE at 0xe7ac), CODE XREF=__xargmatch_internal+78
0000000000009af4         push       r12
0000000000009af6         mov        edx, 0x5
0000000000009afb         push       rbp
0000000000009afc         mov        r12, rsi
0000000000009aff         push       rbx
0000000000009b00         mov        rbp, rdi
0000000000009b03         je         loc_9b50

0000000000009b05         lea        rsi, qword [aAmbiguousArgum]                ; argument "msgid" for method j_dcgettext, "ambiguous argument %s for %s"
0000000000009b0c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000009b0e         call       j_dcgettext                                 ; dcgettext
0000000000009b13         mov        rbx, rax

                     loc_9b16:
0000000000009b16         mov        rsi, rbp                                    ; CODE XREF=argmatch_invalid+113
0000000000009b19         mov        edi, 0x1
0000000000009b1e         call       quote_n                                     ; quote_n
0000000000009b23         mov        rdx, r12
0000000000009b26         mov        rbp, rax
0000000000009b29         mov        esi, 0x8
0000000000009b2e         xor        edi, edi
0000000000009b30         call       quotearg_n_style                            ; quotearg_n_style
0000000000009b35         mov        r8, rbp
0000000000009b38         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000009b3b         mov        rcx, rax
0000000000009b3e         pop        rbx
0000000000009b3f         pop        rbp
0000000000009b40         pop        r12
0000000000009b42         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000009b44         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000009b46         xor        eax, eax
0000000000009b48         jmp        j_error                                     ; error
                        ; endp
0000000000009b4d         align      16

                     loc_9b50:
0000000000009b50         lea        rsi, qword [aInvalidArgumen]                ; argument "msgid" for method j_dcgettext, "invalid argument %s for %s", CODE XREF=argmatch_invalid+19
0000000000009b57         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000009b59         call       j_dcgettext                                 ; dcgettext
0000000000009b5e         mov        rbx, rax
0000000000009b61         jmp        loc_9b16
0000000000009b63         align      16                                          ; End of unwind block (FDE at 0xe7ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argmatch_valid:
0000000000009b70         push       r15                                         ; Begin of unwind block (FDE at 0xe7d8), CODE XREF=__xargmatch_internal+92
0000000000009b72         push       r14
0000000000009b74         mov        r14, rdi
0000000000009b77         push       r13
0000000000009b79         push       r12
0000000000009b7b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000009b7d         push       rbp
0000000000009b7e         push       rbx
0000000000009b7f         mov        rbp, rsi
0000000000009b82         lea        rsi, qword [aValidArguments]                ; argument "msgid" for method j_dcgettext, "Valid arguments are:"
0000000000009b89         mov        r12, rdx
0000000000009b8c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000009b91         sub        rsp, 0x8
0000000000009b95         mov        rbx, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000009b9c         call       j_dcgettext                                 ; dcgettext
0000000000009ba1         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000009ba4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000009ba7         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000009bac         mov        r15, qword [r14]
0000000000009baf         test       r15, r15
0000000000009bb2         je         loc_9c48

0000000000009bb8         xor        r13d, r13d
0000000000009bbb         xor        ebx, ebx
0000000000009bbd         jmp        loc_9bf8
0000000000009bbf         align      64

                     loc_9bc0:
0000000000009bc0         mov        rdi, r15                                    ; CODE XREF=argmatch_valid+139, argmatch_valid+157
0000000000009bc3         add        rbx, 0x1
0000000000009bc7         mov        r13, rbp
0000000000009bca         call       quote                                       ; quote
0000000000009bcf         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000009bd6         lea        rdx, qword [aNS]                            ; "\\n  - %s"
0000000000009bdd         mov        rcx, rax
0000000000009be0         mov        esi, 0x1
0000000000009be5         xor        eax, eax
0000000000009be7         add        rbp, r12
0000000000009bea         call       j___fprintf_chk                             ; __fprintf_chk
0000000000009bef         mov        r15, qword [r14+rbx*8]
0000000000009bf3         test       r15, r15
0000000000009bf6         je         loc_9c48

                     loc_9bf8:
0000000000009bf8         test       rbx, rbx                                    ; CODE XREF=argmatch_valid+77, argmatch_valid+210
0000000000009bfb         je         loc_9bc0

0000000000009bfd         mov        rdx, r12                                    ; argument "__n" for method j_memcmp
0000000000009c00         mov        rsi, rbp                                    ; argument "__s2" for method j_memcmp
0000000000009c03         mov        rdi, r13                                    ; argument "__s1" for method j_memcmp
0000000000009c06         call       j_memcmp                                    ; memcmp
0000000000009c0b         test       eax, eax
0000000000009c0d         jne        loc_9bc0

0000000000009c0f         mov        rdi, r15
0000000000009c12         add        rbx, 0x1
0000000000009c16         add        rbp, r12
0000000000009c19         call       quote                                       ; quote
0000000000009c1e         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000009c25         lea        rdx, qword [aNS+8]                          ; 0xca75
0000000000009c2c         mov        rcx, rax
0000000000009c2f         mov        esi, 0x1
0000000000009c34         xor        eax, eax
0000000000009c36         call       j___fprintf_chk                             ; __fprintf_chk
0000000000009c3b         mov        r15, qword [r14+rbx*8]
0000000000009c3f         test       r15, r15
0000000000009c42         jne        loc_9bf8

0000000000009c44         nop        dword [rax]

                     loc_9c48:
0000000000009c48         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=argmatch_valid+66, argmatch_valid+134
0000000000009c4f         mov        rax, qword [rdi+0x28]
0000000000009c53         cmp        rax, qword [rdi+0x30]
0000000000009c57         jae        loc_9c78

0000000000009c59         lea        rdx, qword [rax+1]
0000000000009c5d         mov        qword [rdi+0x28], rdx
0000000000009c61         mov        byte [rax], 0xa
0000000000009c64         add        rsp, 0x8
0000000000009c68         pop        rbx
0000000000009c69         pop        rbp
0000000000009c6a         pop        r12
0000000000009c6c         pop        r13
0000000000009c6e         pop        r14
0000000000009c70         pop        r15
0000000000009c72         ret
                        ; endp
0000000000009c73         align      8

                     loc_9c78:
0000000000009c78         add        rsp, 0x8                                    ; CODE XREF=argmatch_valid+231
0000000000009c7c         mov        esi, 0xa                                    ; argument #2 for method j___overflow
0000000000009c81         pop        rbx
0000000000009c82         pop        rbp
0000000000009c83         pop        r12
0000000000009c85         pop        r13
0000000000009c87         pop        r14
0000000000009c89         pop        r15
0000000000009c8b         jmp        j___overflow                                ; __overflow
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __xargmatch_internal:
0000000000009c90         push       r15                                         ; End of unwind block (FDE at 0xe7d8), Begin of unwind block (FDE at 0xe838), CODE XREF=get_version.part.0+31
0000000000009c92         push       r14
0000000000009c94         mov        r14, rdi
0000000000009c97         push       r13
0000000000009c99         push       r12
0000000000009c9b         mov        r12, rsi
0000000000009c9e         push       rbp
0000000000009c9f         push       rbx
0000000000009ca0         mov        rbp, rcx
0000000000009ca3         mov        rbx, rdx
0000000000009ca6         mov        rcx, r8
0000000000009ca9         mov        rdx, rbp
0000000000009cac         sub        rsp, 0x8
0000000000009cb0         mov        rsi, rbx
0000000000009cb3         mov        rdi, r12
0000000000009cb6         mov        r15, r8
0000000000009cb9         mov        r13, r9
0000000000009cbc         call       argmatch                                    ; argmatch
0000000000009cc1         test       rax, rax
0000000000009cc4         js         loc_9cd5

                     loc_9cc6:
0000000000009cc6         add        rsp, 0x8                                    ; CODE XREF=__xargmatch_internal+107
0000000000009cca         pop        rbx
0000000000009ccb         pop        rbp
0000000000009ccc         pop        r12
0000000000009cce         pop        r13
0000000000009cd0         pop        r14
0000000000009cd2         pop        r15
0000000000009cd4         ret
                        ; endp

                     loc_9cd5:
0000000000009cd5         mov        rdx, rax                                    ; CODE XREF=__xargmatch_internal+52
0000000000009cd8         mov        rsi, r12
0000000000009cdb         mov        rdi, r14
0000000000009cde         call       argmatch_invalid                            ; argmatch_invalid
0000000000009ce3         mov        rdx, r15
0000000000009ce6         mov        rsi, rbp
0000000000009ce9         mov        rdi, rbx
0000000000009cec         call       argmatch_valid                              ; argmatch_valid
0000000000009cf1         call       r13
0000000000009cf4         mov        rax, 0xffffffffffffffff
0000000000009cfb         jmp        loc_9cc6
0000000000009cfd         align      256                                         ; End of unwind block (FDE at 0xe838)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argmatch_to_argument:
0000000000009d00         push       r14                                         ; Begin of unwind block (FDE at 0xe884)
0000000000009d02         push       r13
0000000000009d04         push       r12
0000000000009d06         push       rbp
0000000000009d07         push       rbx
0000000000009d08         mov        r14, qword [rsi]
0000000000009d0b         test       r14, r14
0000000000009d0e         je         loc_9d41

0000000000009d10         mov        r12, rcx
0000000000009d13         mov        r13, rdi
0000000000009d16         mov        rbp, rdx
0000000000009d19         lea        rbx, qword [rsi+8]
0000000000009d1d         jmp        loc_9d2f
0000000000009d1f         align      32

                     loc_9d20:
0000000000009d20         mov        r14, qword [rbx]                            ; CODE XREF=argmatch_to_argument+63
0000000000009d23         add        rbp, r12
0000000000009d26         add        rbx, 0x8
0000000000009d2a         test       r14, r14
0000000000009d2d         je         loc_9d41

                     loc_9d2f:
0000000000009d2f         mov        rdx, r12                                    ; argument "__n" for method j_memcmp, CODE XREF=argmatch_to_argument+29
0000000000009d32         mov        rsi, rbp                                    ; argument "__s2" for method j_memcmp
0000000000009d35         mov        rdi, r13                                    ; argument "__s1" for method j_memcmp
0000000000009d38         call       j_memcmp                                    ; memcmp
0000000000009d3d         test       eax, eax
0000000000009d3f         jne        loc_9d20

                     loc_9d41:
0000000000009d41         pop        rbx                                         ; CODE XREF=argmatch_to_argument+14, argmatch_to_argument+45
0000000000009d42         mov        rax, r14
0000000000009d45         pop        rbp
0000000000009d46         pop        r12
0000000000009d48         pop        r13
0000000000009d4a         pop        r14
0000000000009d4c         ret
                        ; endp
0000000000009d4d         align      16                                          ; End of unwind block (FDE at 0xe884)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000009d50         push       r12                                         ; Begin of unwind block (FDE at 0xe8c4), CODE XREF=close_stdin+31, close_stdin+76, close_stdin+214, close_stdout+13, close_stdout+51
0000000000009d52         push       rbp
0000000000009d53         mov        rbp, rdi
0000000000009d56         push       rbx
0000000000009d57         call       j___fpending                                ; __fpending
0000000000009d5c         mov        ebx, dword [rbp]
0000000000009d5f         mov        rdi, rbp
0000000000009d62         mov        r12, rax
0000000000009d65         call       rpl_fclose                                  ; rpl_fclose
0000000000009d6a         and        ebx, 0x20
0000000000009d6d         test       ebx, ebx
0000000000009d6f         jne        loc_9d88

0000000000009d71         test       eax, eax
0000000000009d73         je         loc_9d7f

0000000000009d75         test       r12, r12
0000000000009d78         mov        eax, 0xffffffff
0000000000009d7d         je         loc_9db8

                     loc_9d7f:
0000000000009d7f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000009d80         pop        rbp
0000000000009d81         pop        r12
0000000000009d83         ret
                        ; endp
0000000000009d84         align      8

                     loc_9d88:
0000000000009d88         test       eax, eax                                    ; CODE XREF=close_stream+31
0000000000009d8a         jne        loc_9da8

0000000000009d8c         call       j___errno_location                          ; __errno_location
0000000000009d91         mov        dword [rax], 0x0
0000000000009d97         mov        eax, 0xffffffff
0000000000009d9c         pop        rbx
0000000000009d9d         pop        rbp
0000000000009d9e         pop        r12
0000000000009da0         ret
                        ; endp
0000000000009da1         align      8

                     loc_9da8:
0000000000009da8         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000009da9         mov        eax, 0xffffffff
0000000000009dae         pop        rbp
0000000000009daf         pop        r12
0000000000009db1         ret
                        ; endp
0000000000009db2         align      8

                     loc_9db8:
0000000000009db8         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
0000000000009dbd         cmp        dword [rax], 0x9
0000000000009dc0         pop        rbx
0000000000009dc1         pop        rbp
0000000000009dc2         pop        r12
0000000000009dc4         setne      al
0000000000009dc7         movzx      eax, al
0000000000009dca         neg        eax
0000000000009dcc         ret
                        ; endp
0000000000009dcd         align      16                                          ; End of unwind block (FDE at 0xe8c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000009dd0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xe914), CODE XREF=rpl_mbrtowc+71
0000000000009dd4         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000009dd6         call       j_setlocale                                 ; setlocale
0000000000009ddb         mov        rdx, rax
0000000000009dde         mov        eax, 0x1
0000000000009de3         test       rdx, rdx
0000000000009de6         je         loc_9e05

0000000000009de8         lea        rdi, qword [aNS+13]                         ; 0xca7a
0000000000009def         mov        ecx, 0x2
0000000000009df4         mov        rsi, rdx
0000000000009df7         rep  cmpsb byte [rsi], byte [rdi]
0000000000009df9         seta       cl
0000000000009dfc         sbb        cl, 0x0
0000000000009dff         xor        eax, eax
0000000000009e01         test       cl, cl
0000000000009e03         jne        loc_9e10

                     loc_9e05:
0000000000009e05         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000009e09         ret
                        ; endp
0000000000009e0a         align      16

                     loc_9e10:
0000000000009e10         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000009e17         mov        ecx, 0x6
0000000000009e1c         mov        rsi, rdx
0000000000009e1f         rep  cmpsb byte [rsi], byte [rdi]
0000000000009e21         seta       al
0000000000009e24         sbb        al, 0x0
0000000000009e26         test       al, al
0000000000009e28         setne      al
0000000000009e2b         add        rsp, 0x8
0000000000009e2f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_pjw:
0000000000009e30         movsx      rcx, byte [rdi]                             ; End of unwind block (FDE at 0xe914), Begin of unwind block (FDE at 0xe934), CODE XREF=triple_hash+15
0000000000009e34         test       cl, cl
0000000000009e36         je         loc_9e60

0000000000009e38         xor        eax, eax
0000000000009e3a         nop        word [rax+rax]

                     loc_9e40:
0000000000009e40         rol        rax, 0x9                                    ; CODE XREF=hash_pjw+33
0000000000009e44         add        rdi, 0x1
0000000000009e48         add        rax, rcx
0000000000009e4b         movsx      rcx, byte [rdi]
0000000000009e4f         test       cl, cl
0000000000009e51         jne        loc_9e40

0000000000009e53         xor        edx, edx
0000000000009e55         div        rsi
0000000000009e58         mov        rax, rdx
0000000000009e5b         ret
                        ; endp
0000000000009e5c         align      32

                     loc_9e60:
0000000000009e60         xor        edx, edx                                    ; CODE XREF=hash_pjw+6
0000000000009e62         mov        rax, rdx
0000000000009e65         ret
                        ; endp
0000000000009e66         align      16                                          ; End of unwind block (FDE at 0xe934)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000009e70         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xe94c), CODE XREF=gettext_quote.part.1+11
0000000000009e74         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000009e79         call       j_nl_langinfo                               ; nl_langinfo
0000000000009e7e         test       rax, rax
0000000000009e81         je         loc_9ea0

0000000000009e83         cmp        byte [rax], 0x0
0000000000009e86         lea        rdx, qword [aAscii]                         ; "ASCII"
0000000000009e8d         cmove      rax, rdx
0000000000009e91         add        rsp, 0x8
0000000000009e95         ret
                        ; endp
0000000000009e96         align      32

                     loc_9ea0:
0000000000009ea0         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000009ea7         add        rsp, 0x8
0000000000009eab         ret
                        ; endp
0000000000009eac         align      16                                          ; End of unwind block (FDE at 0xe94c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randint_new:
0000000000009eb0         push       rbx                                         ; Begin of unwind block (FDE at 0xe96c)
0000000000009eb1         mov        rbx, rdi
0000000000009eb4         mov        edi, 0x18
0000000000009eb9         call       xmalloc                                     ; xmalloc
0000000000009ebe         mov        qword [rax], rbx
0000000000009ec1         mov        qword [rax+0x10], 0x0
0000000000009ec9         mov        qword [rax+8], 0x0
0000000000009ed1         pop        rbx
0000000000009ed2         ret
                        ; endp
0000000000009ed3         align      32                                          ; End of unwind block (FDE at 0xe96c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randint_all_new:
0000000000009ee0         push       rbx                                         ; Begin of unwind block (FDE at 0xe988), CODE XREF=try_tempname_len+123
0000000000009ee1         call       randread_new                                ; randread_new
0000000000009ee6         test       rax, rax
0000000000009ee9         je         loc_9f10

0000000000009eeb         mov        rbx, rax
0000000000009eee         mov        edi, 0x18
0000000000009ef3         call       xmalloc                                     ; xmalloc
0000000000009ef8         mov        qword [rax], rbx
0000000000009efb         mov        qword [rax+0x10], 0x0
0000000000009f03         mov        qword [rax+8], 0x0
0000000000009f0b         pop        rbx
0000000000009f0c         ret
                        ; endp
0000000000009f0d         align      16

                     loc_9f10:
0000000000009f10         xor        eax, eax                                    ; CODE XREF=randint_all_new+9
0000000000009f12         pop        rbx
0000000000009f13         ret
                        ; endp
0000000000009f14         align      32                                          ; End of unwind block (FDE at 0xe988)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randint_get_source:
0000000000009f20         mov        rax, qword [rdi]                            ; Begin of unwind block (FDE at 0xe9a8)
0000000000009f23         ret
                        ; endp
0000000000009f24         align      16                                          ; End of unwind block (FDE at 0xe9a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     randint_genmax:
0000000000009f30         push       r15                                         ; Begin of unwind block (FDE at 0xe9bc), CODE XREF=try_tempname_len+196
0000000000009f32         push       r14
0000000000009f34         lea        r15, qword [rsi+1]
0000000000009f38         push       r13
0000000000009f3a         push       r12
0000000000009f3c         mov        r13, rdi
0000000000009f3f         push       rbp
0000000000009f40         push       rbx
0000000000009f41         mov        r14, rsi
0000000000009f44         sub        rsp, 0x28
0000000000009f48         mov        rbp, qword [rdi+8]
0000000000009f4c         mov        rbx, qword [rdi+0x10]
0000000000009f50         mov        rax, qword [fs:0x28]
0000000000009f59         mov        qword [rsp+0x58+var_40], rax
0000000000009f5e         xor        eax, eax
0000000000009f60         mov        rax, qword [rdi]
0000000000009f63         lea        r12, qword [rsp+0x58+var_48]
0000000000009f68         mov        qword [rsp+0x58+var_50], rax
0000000000009f6d         jmp        loc_9fa5
0000000000009f6f         align      16

                     loc_9f70:
0000000000009f70         cmp        rbx, r14                                    ; CODE XREF=randint_genmax+120
0000000000009f73         je         loc_9fff

                     loc_9f79:
0000000000009f79         mov        rax, rbx                                    ; CODE XREF=randint_genmax+201
0000000000009f7c         xor        edx, edx
0000000000009f7e         sub        rax, r14
0000000000009f81         div        r15
0000000000009f84         sub        rbx, rdx
0000000000009f87         mov        rdi, rdx
0000000000009f8a         mov        rsi, rax
0000000000009f8d         xor        edx, edx
0000000000009f8f         mov        rax, rbp
0000000000009f92         div        r15
0000000000009f95         cmp        rbp, rbx
0000000000009f98         jbe        loc_a038

0000000000009f9e         lea        rbx, qword [rdi-1]
0000000000009fa2         mov        rbp, rdx

                     loc_9fa5:
0000000000009fa5         cmp        rbx, r14                                    ; CODE XREF=randint_genmax+61
0000000000009fa8         jae        loc_9f70

0000000000009faa         mov        rax, rbx
0000000000009fad         xor        edx, edx
0000000000009faf         nop

                     loc_9fb0:
0000000000009fb0         shl        rax, 0x8                                    ; CODE XREF=randint_genmax+145
0000000000009fb4         add        rdx, 0x1
0000000000009fb8         add        rax, 0xff
0000000000009fbe         cmp        r14, rax
0000000000009fc1         ja         loc_9fb0

0000000000009fc3         mov        rdi, qword [rsp+0x58+var_50]
0000000000009fc8         mov        rsi, r12
0000000000009fcb         call       randread                                    ; randread
0000000000009fd0         mov        rax, r12
0000000000009fd3         nop        dword [rax+rax]

                     loc_9fd8:
0000000000009fd8         movzx      edx, byte [rax]                             ; CODE XREF=randint_genmax+196
0000000000009fdb         shl        rbx, 0x8
0000000000009fdf         shl        rbp, 0x8
0000000000009fe3         add        rbx, 0xff
0000000000009fea         add        rax, 0x1
0000000000009fee         add        rbp, rdx
0000000000009ff1         cmp        r14, rbx
0000000000009ff4         ja         loc_9fd8

0000000000009ff6         cmp        rbx, r14
0000000000009ff9         jne        loc_9f79

                     loc_9fff:
0000000000009fff         mov        qword [r13+0x10], 0x0                       ; CODE XREF=randint_genmax+67
000000000000a007         mov        qword [r13+8], 0x0

                     loc_a00f:
000000000000a00f         mov        rcx, qword [rsp+0x58+var_40]                ; CODE XREF=randint_genmax+275
000000000000a014         xor        rcx, qword [fs:0x28]
000000000000a01d         mov        rax, rbp
000000000000a020         jne        loc_a045

000000000000a022         add        rsp, 0x28
000000000000a026         pop        rbx
000000000000a027         pop        rbp
000000000000a028         pop        r12
000000000000a02a         pop        r13
000000000000a02c         pop        r14
000000000000a02e         pop        r15
000000000000a030         ret
                        ; endp
000000000000a031         align      8

                     loc_a038:
000000000000a038         mov        qword [r13+8], rax                          ; CODE XREF=randint_genmax+104
000000000000a03c         mov        qword [r13+0x10], rsi
000000000000a040         mov        rbp, rdx
000000000000a043         jmp        loc_a00f

                     loc_a045:
000000000000a045         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=randint_genmax+240
                        ; endp
000000000000a04a         align      16                                          ; End of unwind block (FDE at 0xe9bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randint_free:
000000000000a050         push       rbx                                         ; Begin of unwind block (FDE at 0xea08)
000000000000a051         mov        rdx, 0xffffffffffffffff
000000000000a058         mov        rbx, rdi
000000000000a05b         mov        esi, 0x18
000000000000a060         call       j___explicit_bzero_chk                      ; __explicit_bzero_chk
000000000000a065         mov        rdi, rbx                                    ; argument "__ptr" for method j_free
000000000000a068         pop        rbx
000000000000a069         jmp        j_free                                      ; free
                        ; endp
000000000000a06e         align      16                                          ; End of unwind block (FDE at 0xea08)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randint_all_free:
000000000000a070         push       r13                                         ; Begin of unwind block (FDE at 0xea24), CODE XREF=try_tempname_len+258, try_tempname_len+304
000000000000a072         push       r12
000000000000a074         push       rbp
000000000000a075         push       rbx
000000000000a076         mov        rbx, rdi
000000000000a079         sub        rsp, 0x8
000000000000a07d         mov        rdi, qword [rdi]
000000000000a080         call       randread_free                               ; randread_free
000000000000a085         mov        r12d, eax
000000000000a088         call       j___errno_location                          ; __errno_location
000000000000a08d         mov        r13d, dword [rax]
000000000000a090         mov        rdi, rbx
000000000000a093         mov        rdx, 0xffffffffffffffff
000000000000a09a         mov        esi, 0x18
000000000000a09f         mov        rbp, rax
000000000000a0a2         call       j___explicit_bzero_chk                      ; __explicit_bzero_chk
000000000000a0a7         mov        rdi, rbx                                    ; argument "__ptr" for method j_free
000000000000a0aa         call       j_free                                      ; free
000000000000a0af         mov        dword [rbp], r13d
000000000000a0b3         add        rsp, 0x8
000000000000a0b7         mov        eax, r12d
000000000000a0ba         pop        rbx
000000000000a0bb         pop        rbp
000000000000a0bc         pop        r12
000000000000a0be         pop        r13
000000000000a0c0         ret
                        ; endp
000000000000a0c1         align      16                                          ; End of unwind block (FDE at 0xea24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randread_error:
000000000000a0d0         push       rbp                                         ; Begin of unwind block (FDE at 0xea5c), DATA XREF=randread_new+90, randread_new+196, randread_new+348
000000000000a0d1         push       rbx
000000000000a0d2         sub        rsp, 0x8
000000000000a0d6         test       rdi, rdi
000000000000a0d9         je         loc_a118

000000000000a0db         call       quote                                       ; quote
000000000000a0e0         mov        rbp, rax
000000000000a0e3         call       j___errno_location                          ; __errno_location
000000000000a0e8         cmp        dword [rax], 0x0
000000000000a0eb         mov        rbx, rax
000000000000a0ee         mov        edx, 0x5
000000000000a0f3         je         loc_a11d

000000000000a0f5         lea        rsi, qword [aSReadError]                    ; argument "msgid" for method j_dcgettext, "%s: read error"
000000000000a0fc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000a0fe         call       j_dcgettext                                 ; dcgettext

                     loc_a103:
000000000000a103         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure, CODE XREF=randread_error+91
000000000000a109         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
000000000000a10b         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000a10e         mov        rcx, rbp
000000000000a111         xor        eax, eax
000000000000a113         call       j_error                                     ; error

                     loc_a118:
000000000000a118         call       j_abort                                     ; abort, CODE XREF=randread_error+9
                        ; endp

                     loc_a11d:
000000000000a11d         lea        rsi, qword [aSEndOfFile]                    ; argument "msgid" for method j_dcgettext, "%s: end of file", CODE XREF=randread_error+35
000000000000a124         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000a126         call       j_dcgettext                                 ; dcgettext
000000000000a12b         jmp        loc_a103
000000000000a12d         align      16                                          ; End of unwind block (FDE at 0xea5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_58: int32_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104


                     randread_new:
000000000000a130         push       r15                                         ; Begin of unwind block (FDE at 0xea7c), CODE XREF=randint_all_new+1
000000000000a132         push       r14
000000000000a134         push       r13
000000000000a136         push       r12
000000000000a138         push       rbp
000000000000a139         push       rbx
000000000000a13a         sub        rsp, 0x38
000000000000a13e         mov        rax, qword [fs:0x28]
000000000000a147         mov        qword [rsp+0x68+var_40], rax
000000000000a14c         xor        eax, eax
000000000000a14e         test       rsi, rsi
000000000000a151         je         loc_a278

000000000000a157         test       rdi, rdi
000000000000a15a         mov        r12, rdi
000000000000a15d         mov        rbp, rsi
000000000000a160         je         loc_a1e0

000000000000a162         lea        rsi, qword [aDevurandom+13]                 ; 0xcab4
000000000000a169         call       fopen_safer                                 ; fopen_safer
000000000000a16e         test       rax, rax
000000000000a171         mov        r13, rax
000000000000a174         je         loc_a378

000000000000a17a         mov        edi, 0x1038
000000000000a17f         call       xmalloc                                     ; xmalloc
000000000000a184         mov        rbx, rax
000000000000a187         mov        qword [rax], r13
000000000000a18a         lea        rax, qword [randread_error]                 ; randread_error
000000000000a191         cmp        rbp, 0x1000
000000000000a198         mov        ecx, 0x1000
000000000000a19d         lea        rsi, qword [rbx+0x18]                       ; argument "__buf" for method j_setvbuf
000000000000a1a1         cmovbe     rcx, rbp                                    ; argument "__n" for method j_setvbuf
000000000000a1a5         mov        qword [rbx+8], rax
000000000000a1a9         mov        qword [rbx+0x10], r12
000000000000a1ad         xor        edx, edx                                    ; argument "__modes" for method j_setvbuf
000000000000a1af         mov        rdi, r13                                    ; argument "__stream" for method j_setvbuf
000000000000a1b2         call       j_setvbuf                                   ; setvbuf

                     loc_a1b7:
000000000000a1b7         mov        rdx, qword [rsp+0x68+var_40]                ; CODE XREF=randread_new+317, randread_new+367, randread_new+586
000000000000a1bc         xor        rdx, qword [fs:0x28]
000000000000a1c5         mov        rax, rbx
000000000000a1c8         jne        loc_a37f

000000000000a1ce         add        rsp, 0x38
000000000000a1d2         pop        rbx
000000000000a1d3         pop        rbp
000000000000a1d4         pop        r12
000000000000a1d6         pop        r13
000000000000a1d8         pop        r14
000000000000a1da         pop        r15
000000000000a1dc         ret
                        ; endp
000000000000a1dd         align      32

                     loc_a1e0:
000000000000a1e0         mov        edi, 0x1038                                 ; CODE XREF=randread_new+48
000000000000a1e5         call       xmalloc                                     ; xmalloc
000000000000a1ea         mov        rbx, rax
000000000000a1ed         mov        qword [rax], 0x0
000000000000a1f4         lea        rax, qword [randread_error]                 ; randread_error
000000000000a1fb         lea        rdi, qword [aDevurandom]                    ; argument "__file" for method j_open, "/dev/urandom"
000000000000a202         xor        esi, esi                                    ; argument "__oflag" for method j_open
000000000000a204         mov        qword [rbx+0x10], 0x0
000000000000a20c         mov        qword [rbx+8], rax
000000000000a210         mov        qword [rbx+0x18], 0x0
000000000000a218         xor        eax, eax
000000000000a21a         call       j_open                                      ; open
000000000000a21f         test       eax, eax
000000000000a221         lea        r13, qword [rbx+0x20]
000000000000a225         mov        r15d, eax
000000000000a228         js         loc_a2a8

000000000000a22a         cmp        rbp, 0x800
000000000000a231         mov        rdx, rbp
000000000000a234         mov        r14d, 0x800
000000000000a23a         cmova      rdx, r14
000000000000a23e         mov        ecx, 0x1018
000000000000a243         mov        rsi, r13
000000000000a246         mov        edi, eax
000000000000a248         call       j___read_chk                                ; __read_chk
000000000000a24d         mov        edi, r15d                                   ; argument "__fd" for method j_close
000000000000a250         mov        rbp, rax
000000000000a253         call       j_close                                     ; close
000000000000a258         cmp        rbp, 0x7ff
000000000000a25f         jle        loc_a384

                     loc_a265:
000000000000a265         mov        rdi, r13                                    ; CODE XREF=randread_new+502, randread_new+547, randread_new+573, randread_new+663, randread_new+742, randread_new+798
000000000000a268         call       isaac_seed                                  ; isaac_seed
000000000000a26d         jmp        loc_a1b7
000000000000a272         align      8

                     loc_a278:
000000000000a278         mov        edi, 0x1038                                 ; CODE XREF=randread_new+33
000000000000a27d         call       xmalloc                                     ; xmalloc
000000000000a282         mov        rbx, rax
000000000000a285         mov        qword [rax], 0x0
000000000000a28c         lea        rax, qword [randread_error]                 ; randread_error
000000000000a293         mov        qword [rbx+0x10], 0x0
000000000000a29b         mov        qword [rbx+8], rax
000000000000a29f         jmp        loc_a1b7
000000000000a2a4         align      8

                     loc_a2a8:
000000000000a2a8         lea        r12, qword [rsp+0x68+var_58]                ; CODE XREF=randread_new+248
000000000000a2ad         xor        esi, esi                                    ; argument "__tz" for method j_gettimeofday
000000000000a2af         mov        r14d, 0x18
000000000000a2b5         mov        rdi, r12                                    ; argument "__tv" for method j_gettimeofday
000000000000a2b8         call       j_gettimeofday                              ; gettimeofday
000000000000a2bd         movdqa     xmm0, xmmword [rsp+0x68+var_58]
000000000000a2c3         movups     xmmword [rbx+0x20], xmm0
000000000000a2c7         call       j_getpid                                    ; getpid
000000000000a2cc         mov        dword [rbx+0x30], eax
000000000000a2cf         mov        dword [rsp+0x68+var_58], eax
000000000000a2d3         call       j_getppid                                   ; getppid
000000000000a2d8         mov        dword [rsp+0x68+var_58], eax
000000000000a2dc         mov        dword [rbx+0x34], eax

                     loc_a2df:
000000000000a2df         mov        ebp, 0x800                                  ; CODE XREF=randread_new+804
000000000000a2e4         mov        eax, 0x4
000000000000a2e9         sub        rbp, r14
000000000000a2ec         cmp        rbp, 0x4
000000000000a2f0         cmova      rbp, rax
000000000000a2f4         call       j_getuid                                    ; getuid
000000000000a2f9         test       ebp, ebp
000000000000a2fb         mov        dword [rsp+0x68+var_58], eax
000000000000a2ff         lea        rcx, qword [r13+r14]
000000000000a304         mov        esi, ebp
000000000000a306         je         loc_a31c

000000000000a308         xor        eax, eax

                     loc_a30a:
000000000000a30a         mov        edx, eax                                    ; CODE XREF=randread_new+490
000000000000a30c         add        eax, 0x1
000000000000a30f         movzx      edi, byte [r12+rdx]
000000000000a314         cmp        eax, esi
000000000000a316         mov        byte [rcx+rdx], dil
000000000000a31a         jb         loc_a30a

                     loc_a31c:
000000000000a31c         add        rbp, r14                                    ; CODE XREF=randread_new+470
000000000000a31f         cmp        rbp, 0x7ff
000000000000a326         ja         loc_a265

000000000000a32c         call       j_getgid                                    ; getgid
000000000000a331         mov        dword [rsp+0x68+var_58], eax
000000000000a335         mov        eax, 0x800
000000000000a33a         mov        edx, 0x4
000000000000a33f         sub        rax, rbp
000000000000a342         lea        rcx, qword [r13+rbp]
000000000000a347         cmp        rax, 0x4
000000000000a34b         cmova      rax, rdx
000000000000a34f         test       eax, eax
000000000000a351         mov        esi, eax
000000000000a353         je         loc_a265

000000000000a359         xor        eax, eax

                     loc_a35b:
000000000000a35b         mov        edx, eax                                    ; CODE XREF=randread_new+571
000000000000a35d         add        eax, 0x1
000000000000a360         movzx      edi, byte [r12+rdx]
000000000000a365         cmp        eax, esi
000000000000a367         mov        byte [rcx+rdx], dil
000000000000a36b         jb         loc_a35b

000000000000a36d         jmp        loc_a265
000000000000a372         align      8

                     loc_a378:
000000000000a378         xor        ebx, ebx                                    ; CODE XREF=randread_new+68
000000000000a37a         jmp        loc_a1b7

                     loc_a37f:
000000000000a37f         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=randread_new+152
                        ; endp

                     loc_a384:
000000000000a384         test       rbp, rbp                                    ; CODE XREF=randread_new+303
000000000000a387         mov        r15, r14
000000000000a38a         mov        eax, 0x10
000000000000a38f         cmovs      rbp, r12
000000000000a393         lea        r12, qword [rsp+0x68+var_58]
000000000000a398         sub        r15, rbp
000000000000a39b         cmp        r15, 0x10
000000000000a39f         mov        rdi, r12                                    ; argument "__tv" for method j_gettimeofday
000000000000a3a2         cmova      r15, rax
000000000000a3a6         xor        esi, esi                                    ; argument "__tz" for method j_gettimeofday
000000000000a3a8         call       j_gettimeofday                              ; gettimeofday
000000000000a3ad         lea        rax, qword [r13+rbp]
000000000000a3b2         add        rbp, r15
000000000000a3b5         mov        ecx, r15d
000000000000a3b8         cmp        rbp, 0x7ff
000000000000a3bf         mov        rsi, r12
000000000000a3c2         mov        rdi, rax
000000000000a3c5         rep movsb  byte [rdi], byte [rsi]
000000000000a3c7         ja         loc_a265

000000000000a3cd         mov        r15, r14
000000000000a3d0         mov        r8d, 0x4
000000000000a3d6         sub        r15, rbp
000000000000a3d9         mov        qword [rsp+0x68+var_60], r8
000000000000a3de         cmp        r15, 0x4
000000000000a3e2         cmova      r15, r8
000000000000a3e6         lea        rdx, qword [rbp+r15]
000000000000a3eb         add        rbp, r13
000000000000a3ee         mov        qword [rsp+0x68+var_68], rdx
000000000000a3f2         call       j_getpid                                    ; getpid
000000000000a3f7         mov        rdx, qword [rsp+0x68+var_68]
000000000000a3fb         mov        dword [rsp+0x68+var_58], eax
000000000000a3ff         mov        ecx, r15d
000000000000a402         mov        rdi, rbp
000000000000a405         mov        rsi, r12
000000000000a408         mov        r8, qword [rsp+0x68+var_60]
000000000000a40d         rep movsb  byte [rdi], byte [rsi]
000000000000a40f         cmp        rdx, 0x7ff
000000000000a416         jg         loc_a265

000000000000a41c         sub        r14, rdx
000000000000a41f         cmp        r14, 0x4
000000000000a423         cmova      r14, r8
000000000000a427         call       j_getppid                                   ; getppid
000000000000a42c         mov        rdx, qword [rsp+0x68+var_68]
000000000000a430         mov        dword [rsp+0x68+var_58], eax
000000000000a434         mov        ecx, r14d
000000000000a437         mov        rsi, r12
000000000000a43a         lea        rax, qword [r13+rdx]
000000000000a43f         add        r14, rdx
000000000000a442         cmp        r14, 0x7ff
000000000000a449         mov        rdi, rax
000000000000a44c         rep movsb  byte [rdi], byte [rsi]
000000000000a44e         ja         loc_a265

000000000000a454         jmp        loc_a2df
000000000000a459         align      32                                          ; End of unwind block (FDE at 0xea7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randread_set_handler:
000000000000a460         mov        qword [rdi+8], rsi                          ; Begin of unwind block (FDE at 0xeac8)
000000000000a464         ret
                        ; endp
000000000000a465         align      16                                          ; End of unwind block (FDE at 0xeac8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randread_set_handler_arg:
000000000000a470         mov        qword [rdi+0x10], rsi                       ; Begin of unwind block (FDE at 0xeadc)
000000000000a474         ret
                        ; endp
000000000000a475         align      128                                         ; End of unwind block (FDE at 0xeadc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     randread:
000000000000a480         push       r15                                         ; Begin of unwind block (FDE at 0xeaf0), CODE XREF=randint_genmax+155
000000000000a482         push       r14
000000000000a484         push       r13
000000000000a486         push       r12
000000000000a488         mov        r12, rdi
000000000000a48b         push       rbp
000000000000a48c         push       rbx
000000000000a48d         mov        rbp, rdx
000000000000a490         mov        rbx, rsi
000000000000a493         sub        rsp, 0x18
000000000000a497         mov        rcx, qword [rdi]
000000000000a49a         test       rcx, rcx
000000000000a49d         mov        qword [rsp+0x48+var_40], rcx
000000000000a4a2         je         loc_a508

000000000000a4a4         call       j___errno_location                          ; __errno_location
000000000000a4a9         mov        rcx, qword [rsp+0x48+var_40]
000000000000a4ae         mov        r13, rax
000000000000a4b1         jmp        loc_a4d6
000000000000a4b3         align      8

                     loc_a4b8:
000000000000a4b8         mov        rax, qword [r12]                            ; CODE XREF=randread+112
000000000000a4bc         mov        rdi, qword [r12+0x10]
000000000000a4c1         mov        eax, dword [rax]
000000000000a4c3         and        eax, 0x20
000000000000a4c6         cmovne     eax, edx
000000000000a4c9         mov        dword [r13], eax
000000000000a4cd         call       qword [r12+8]
000000000000a4d2         mov        rcx, qword [r12]

                     loc_a4d6:
000000000000a4d6         mov        rdx, rbp                                    ; argument "__n" for method j_fread_unlocked, CODE XREF=randread+49
000000000000a4d9         mov        rdi, rbx                                    ; argument "__ptr" for method j_fread_unlocked
000000000000a4dc         mov        esi, 0x1                                    ; argument "__size" for method j_fread_unlocked
000000000000a4e1         call       j_fread_unlocked                            ; fread_unlocked
000000000000a4e6         add        rbx, rax
000000000000a4e9         sub        rbp, rax
000000000000a4ec         mov        edx, dword [r13]
000000000000a4f0         jne        loc_a4b8

                     loc_a4f2:
000000000000a4f2         add        rsp, 0x18                                   ; CODE XREF=randread+366
000000000000a4f6         pop        rbx
000000000000a4f7         pop        rbp
000000000000a4f8         pop        r12
000000000000a4fa         pop        r13
000000000000a4fc         pop        r14
000000000000a4fe         pop        r15
000000000000a500         ret
                        ; endp
000000000000a501         align      8

                     loc_a508:
000000000000a508         mov        r14, qword [rdi+0x18]                       ; CODE XREF=randread+34
000000000000a50c         lea        rax, qword [rdi+0x838]
000000000000a513         lea        r13, qword [rdi+0x20]
000000000000a517         mov        qword [rsp+0x48+var_40], rax
000000000000a51c         cmp        rdx, r14
000000000000a51f         jbe        loc_a602

                     loc_a525:
000000000000a525         mov        esi, 0x800                                  ; CODE XREF=randread+330
000000000000a52a         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
000000000000a52d         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
000000000000a530         sub        rsi, r14
000000000000a533         add        rsi, qword [rsp+0x48+var_40]                ; argument "__src" for method j_memcpy
000000000000a538         add        rbx, r14
000000000000a53b         sub        rbp, r14
000000000000a53e         call       j_memcpy                                    ; memcpy
000000000000a543         test       bl, 0x7
000000000000a546         jne        loc_a5b0

000000000000a548         cmp        rbp, 0x7ff
000000000000a54f         jbe        loc_a5f3

000000000000a555         lea        r15, qword [rbp-0x800]
000000000000a55c         mov        r14, r15
000000000000a55f         and        r14d, 0x7ff
000000000000a566         jmp        loc_a57c
000000000000a568         align      16

                     loc_a570:
000000000000a570         cmp        r15, r14                                    ; CODE XREF=randread+276
000000000000a573         je         loc_a5b0

000000000000a575         sub        r15, 0x800

                     loc_a57c:
000000000000a57c         mov        rsi, rbx                                    ; CODE XREF=randread+230
000000000000a57f         mov        rdi, r13
000000000000a582         add        rbx, 0x800
000000000000a589         call       isaac_refill                                ; isaac_refill
000000000000a58e         test       r15, r15
000000000000a591         mov        rbp, r15
000000000000a594         jne        loc_a570

000000000000a596         mov        qword [r12+0x18], 0x0
000000000000a59f         add        rsp, 0x18
000000000000a5a3         pop        rbx
000000000000a5a4         pop        rbp
000000000000a5a5         pop        r12
000000000000a5a7         pop        r13
000000000000a5a9         pop        r14
000000000000a5ab         pop        r15
000000000000a5ad         ret
                        ; endp
000000000000a5ae         align      16

                     loc_a5b0:
000000000000a5b0         mov        rsi, qword [rsp+0x48+var_40]                ; CODE XREF=randread+198, randread+243
000000000000a5b5         mov        rdi, r13
000000000000a5b8         mov        r14d, 0x800
000000000000a5be         call       isaac_refill                                ; isaac_refill
000000000000a5c3         cmp        rbp, 0x800
000000000000a5ca         ja         loc_a525

                     loc_a5d0:
000000000000a5d0         mov        r14d, 0x800                                 ; CODE XREF=randread+384

                     loc_a5d6:
000000000000a5d6         mov        rsi, qword [rsp+0x48+var_40]                ; argument "__src" for method j_memcpy, CODE XREF=randread+404
000000000000a5db         mov        rdx, rbp                                    ; argument "__n" for method j_memcpy
000000000000a5de         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
000000000000a5e1         sub        r14, rbp
000000000000a5e4         call       j_memcpy                                    ; memcpy
000000000000a5e9         mov        qword [r12+0x18], r14
000000000000a5ee         jmp        loc_a4f2

                     loc_a5f3:
000000000000a5f3         mov        rsi, qword [rsp+0x48+var_40]                ; CODE XREF=randread+207
000000000000a5f8         mov        rdi, r13
000000000000a5fb         call       isaac_refill                                ; isaac_refill
000000000000a600         jmp        loc_a5d0

                     loc_a602:
000000000000a602         mov        r15, rax                                    ; CODE XREF=randread+159
000000000000a605         sub        r15, r14
000000000000a608         lea        rax, qword [r15+0x800]
000000000000a60f         mov        qword [rsp+0x48+var_40], rax
000000000000a614         jmp        loc_a5d6
000000000000a616         align      32                                          ; End of unwind block (FDE at 0xeaf0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     randread_free:
000000000000a620         push       rbp                                         ; Begin of unwind block (FDE at 0xeb54), CODE XREF=randint_all_free+16
000000000000a621         push       rbx
000000000000a622         mov        rdx, 0xffffffffffffffff
000000000000a629         mov        rbx, rdi
000000000000a62c         mov        esi, 0x1038
000000000000a631         sub        rsp, 0x8
000000000000a635         mov        rbp, qword [rdi]
000000000000a638         call       j___explicit_bzero_chk                      ; __explicit_bzero_chk
000000000000a63d         mov        rdi, rbx                                    ; argument "__ptr" for method j_free
000000000000a640         call       j_free                                      ; free
000000000000a645         test       rbp, rbp
000000000000a648         je         loc_a660

000000000000a64a         add        rsp, 0x8
000000000000a64e         mov        rdi, rbp
000000000000a651         pop        rbx
000000000000a652         pop        rbp
000000000000a653         jmp        rpl_fclose                                  ; rpl_fclose
                        ; endp
000000000000a658         align      32

                     loc_a660:
000000000000a660         add        rsp, 0x8                                    ; CODE XREF=randread_free+40
000000000000a664         xor        eax, eax
000000000000a666         pop        rbx
000000000000a667         pop        rbp
000000000000a668         ret
                        ; endp
000000000000a669         align      16                                          ; End of unwind block (FDE at 0xeb54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     isaac_refill:
000000000000a670         mov        rax, qword [rdi+0x810]                      ; Begin of unwind block (FDE at 0xeb8c), CODE XREF=randread+265, randread+318, randread+379
000000000000a677         mov        rdx, qword [rdi+0x800]
000000000000a67e         lea        r9, qword [rdi+0x400]
000000000000a685         lea        rcx, qword [rax+1]
000000000000a689         mov        rax, rdi
000000000000a68c         mov        qword [rdi+0x810], rcx
000000000000a693         add        rcx, qword [rdi+0x808]
000000000000a69a         nop        word [rax+rax]

                     loc_a6a0:
000000000000a6a0         mov        r8, rdx                                     ; CODE XREF=isaac_refill+329
000000000000a6a3         shl        r8, 0x15
000000000000a6a7         xor        rdx, r8
000000000000a6aa         mov        r8, qword [rax]
000000000000a6ad         not        rdx
000000000000a6b0         add        rdx, qword [rax+0x400]
000000000000a6b7         mov        r10, r8
000000000000a6ba         and        r10d, 0x7f8
000000000000a6c1         mov        r11, qword [rdi+r10]
000000000000a6c5         mov        r10, rdx
000000000000a6c8         shr        r10, 0x5
000000000000a6cc         add        r11, rdx
000000000000a6cf         xor        rdx, r10
000000000000a6d2         add        rcx, r11
000000000000a6d5         mov        qword [rax], rcx
000000000000a6d8         shr        rcx, 0x8
000000000000a6dc         and        ecx, 0x7f8
000000000000a6e2         mov        r11, qword [rdi+rcx]
000000000000a6e6         add        r11, r8
000000000000a6e9         mov        qword [rsi], r11
000000000000a6ec         add        rdx, qword [rax+0x408]
000000000000a6f3         mov        rcx, qword [rax+8]
000000000000a6f7         mov        r10, rdx
000000000000a6fa         mov        rdx, rcx
000000000000a6fd         and        edx, 0x7f8
000000000000a703         mov        r8, qword [rdi+rdx]
000000000000a707         mov        rdx, r10
000000000000a70a         shl        rdx, 0xc
000000000000a70e         xor        rdx, r10
000000000000a711         add        r8, r10
000000000000a714         add        r8, r11
000000000000a717         mov        qword [rax+8], r8
000000000000a71b         shr        r8, 0x8
000000000000a71f         and        r8d, 0x7f8
000000000000a726         add        rcx, qword [rdi+r8]
000000000000a72a         mov        qword [rsi+8], rcx
000000000000a72e         mov        r8, qword [rax+0x10]
000000000000a732         mov        r11, rcx
000000000000a735         add        rdx, qword [rax+0x410]
000000000000a73c         mov        rcx, r8
000000000000a73f         and        ecx, 0x7f8
000000000000a745         mov        r10, qword [rdi+rcx]
000000000000a749         add        r10, rdx
000000000000a74c         mov        rcx, r10
000000000000a74f         add        rcx, r11
000000000000a752         mov        qword [rax+0x10], rcx
000000000000a756         shr        rcx, 0x8
000000000000a75a         and        ecx, 0x7f8
000000000000a760         mov        r10, qword [rdi+rcx]
000000000000a764         mov        rcx, rdx
000000000000a767         shr        rcx, 0x21
000000000000a76b         xor        rdx, rcx
000000000000a76e         add        r10, r8
000000000000a771         mov        qword [rsi+0x10], r10
000000000000a775         mov        rcx, qword [rax+0x18]
000000000000a779         add        rdx, qword [rax+0x418]
000000000000a780         mov        r8, rcx
000000000000a783         and        r8d, 0x7f8
000000000000a78a         mov        r11, qword [rdi+r8]
000000000000a78e         add        r11, rdx
000000000000a791         mov        r8, r11
000000000000a794         add        r8, r10
000000000000a797         add        rax, 0x20
000000000000a79b         add        rsi, 0x20
000000000000a79f         mov        qword [rax-8], r8
000000000000a7a3         shr        r8, 0x8
000000000000a7a7         and        r8d, 0x7f8
000000000000a7ae         add        rcx, qword [rdi+r8]
000000000000a7b2         mov        qword [rsi-8], rcx
000000000000a7b6         cmp        rax, r9
000000000000a7b9         jb         loc_a6a0

000000000000a7bf         lea        r9, qword [rdi+0x800]
000000000000a7c6         nop        word [cs:rax+rax]

                     loc_a7d0:
000000000000a7d0         mov        r8, rdx                                     ; CODE XREF=isaac_refill+633
000000000000a7d3         shl        r8, 0x15
000000000000a7d7         xor        rdx, r8
000000000000a7da         mov        r8, qword [rax]
000000000000a7dd         not        rdx
000000000000a7e0         add        rdx, qword [rax-0x400]
000000000000a7e7         mov        r10, r8
000000000000a7ea         and        r10d, 0x7f8
000000000000a7f1         mov        r11, qword [rdi+r10]
000000000000a7f5         mov        r10, rdx
000000000000a7f8         shr        r10, 0x5
000000000000a7fc         add        r11, rdx
000000000000a7ff         xor        rdx, r10
000000000000a802         add        rcx, r11
000000000000a805         mov        qword [rax], rcx
000000000000a808         shr        rcx, 0x8
000000000000a80c         and        ecx, 0x7f8
000000000000a812         mov        r11, qword [rdi+rcx]
000000000000a816         add        r11, r8
000000000000a819         mov        qword [rsi], r11
000000000000a81c         add        rdx, qword [rax-0x3f8]
000000000000a823         mov        rcx, qword [rax+8]
000000000000a827         mov        r10, rdx
000000000000a82a         mov        rdx, rcx
000000000000a82d         and        edx, 0x7f8
000000000000a833         mov        r8, qword [rdi+rdx]
000000000000a837         mov        rdx, r10
000000000000a83a         shl        rdx, 0xc
000000000000a83e         xor        rdx, r10
000000000000a841         add        r8, r10
000000000000a844         add        r8, r11
000000000000a847         mov        qword [rax+8], r8
000000000000a84b         shr        r8, 0x8
000000000000a84f         and        r8d, 0x7f8
000000000000a856         add        rcx, qword [rdi+r8]
000000000000a85a         mov        qword [rsi+8], rcx
000000000000a85e         mov        r8, qword [rax+0x10]
000000000000a862         mov        r11, rcx
000000000000a865         add        rdx, qword [rax-0x3f0]
000000000000a86c         mov        rcx, r8
000000000000a86f         and        ecx, 0x7f8
000000000000a875         mov        r10, qword [rdi+rcx]
000000000000a879         add        r10, rdx
000000000000a87c         mov        rcx, r10
000000000000a87f         add        rcx, r11
000000000000a882         mov        qword [rax+0x10], rcx
000000000000a886         shr        rcx, 0x8
000000000000a88a         and        ecx, 0x7f8
000000000000a890         mov        r10, qword [rdi+rcx]
000000000000a894         mov        rcx, rdx
000000000000a897         shr        rcx, 0x21
000000000000a89b         xor        rdx, rcx
000000000000a89e         add        r10, r8
000000000000a8a1         mov        qword [rsi+0x10], r10
000000000000a8a5         mov        rcx, qword [rax+0x18]
000000000000a8a9         add        rdx, qword [rax-0x3e8]
000000000000a8b0         mov        r8, rcx
000000000000a8b3         and        r8d, 0x7f8
000000000000a8ba         mov        r11, qword [rdi+r8]
000000000000a8be         add        r11, rdx
000000000000a8c1         mov        r8, r11
000000000000a8c4         add        r8, r10
000000000000a8c7         add        rax, 0x20
000000000000a8cb         add        rsi, 0x20
000000000000a8cf         mov        qword [rax-8], r8
000000000000a8d3         shr        r8, 0x8
000000000000a8d7         and        r8d, 0x7f8
000000000000a8de         add        rcx, qword [rdi+r8]
000000000000a8e2         mov        qword [rsi-8], rcx
000000000000a8e6         cmp        rax, r9
000000000000a8e9         jb         loc_a7d0

000000000000a8ef         mov        qword [rdi+0x800], rdx
000000000000a8f6         mov        qword [rdi+0x808], rcx
000000000000a8fd         ret
                        ; endp
000000000000a8fe         align      256                                         ; End of unwind block (FDE at 0xeb8c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     isaac_seed:
000000000000a900         push       r13                                         ; Begin of unwind block (FDE at 0xeba0), CODE XREF=randread_new+312
000000000000a902         push       r12
000000000000a904         lea        r12, qword [rdi+0x800]
000000000000a90b         push       rbp
000000000000a90c         mov        rdx, rdi
000000000000a90f         push       rbx
000000000000a910         mov        rax, rdi
000000000000a913         movabs     rcx, 0x98f5704f6c44c0ab
000000000000a91d         movabs     r10, 0xae985bf2cbfc89ed
000000000000a927         movabs     rbp, 0x48fe4a0fa5a09315
000000000000a931         movabs     rsi, 0x82f053db8355e0ce
000000000000a93b         movabs     r8, 0xb29b2e824a595524
000000000000a945         movabs     rbx, 0x8c0ea5053d4712a0
000000000000a94f         movabs     r11, 0xb9f8b322c73ac862
000000000000a959         movabs     r9, 0x647c4677a2884b7c
000000000000a963         nop        dword [rax+rax]

                     loc_a968:
000000000000a968         add        rsi, qword [rax+0x20]                       ; CODE XREF=isaac_seed+314
000000000000a96c         add        rcx, qword [rax+0x38]
000000000000a970         mov        r13, qword [rax]
000000000000a973         add        rbp, qword [rax+0x28]
000000000000a977         add        r10, qword [rax+0x30]
000000000000a97b         sub        r13, rsi
000000000000a97e         add        r9, r13
000000000000a981         mov        r13, rcx
000000000000a984         shr        r13, 0x9
000000000000a988         add        rcx, r9
000000000000a98b         xor        rbp, r13
000000000000a98e         mov        r13, qword [rax+8]
000000000000a992         sub        r13, rbp
000000000000a995         add        r11, r13
000000000000a998         mov        r13, r9
000000000000a99b         shl        r13, 0x9
000000000000a99f         add        r9, r11
000000000000a9a2         xor        r10, r13
000000000000a9a5         mov        r13, qword [rax+0x10]
000000000000a9a9         sub        r13, r10
000000000000a9ac         add        rbx, r13
000000000000a9af         mov        r13, r11
000000000000a9b2         shr        r13, 0x17
000000000000a9b6         add        r11, rbx
000000000000a9b9         xor        rcx, r13
000000000000a9bc         mov        r13, qword [rax+0x18]
000000000000a9c0         sub        r13, rcx
000000000000a9c3         add        r8, r13
000000000000a9c6         mov        r13, rbx
000000000000a9c9         shl        r13, 0xf
000000000000a9cd         add        rbx, r8
000000000000a9d0         xor        r9, r13
000000000000a9d3         mov        r13, r8
000000000000a9d6         sub        rsi, r9
000000000000a9d9         shr        r13, 0xe
000000000000a9dd         mov        qword [rax], r9
000000000000a9e0         xor        r11, r13
000000000000a9e3         mov        r13, rsi
000000000000a9e6         add        r8, rsi
000000000000a9e9         sub        rbp, r11
000000000000a9ec         shl        r13, 0x14
000000000000a9f0         mov        qword [rax+8], r11
000000000000a9f4         xor        rbx, r13
000000000000a9f7         lea        r13, qword [rsi+rbp]
000000000000a9fb         mov        rsi, rbp
000000000000a9fe         sub        r10, rbx
000000000000aa01         shr        rsi, 0x11
000000000000aa05         mov        qword [rax+0x10], rbx
000000000000aa09         xor        r8, rsi
000000000000aa0c         mov        rsi, r10
000000000000aa0f         add        rbp, r10
000000000000aa12         sub        rcx, r8
000000000000aa15         shl        rsi, 0xe
000000000000aa19         mov        qword [rax+0x18], r8
000000000000aa1d         xor        rsi, r13
000000000000aa20         add        r10, rcx
000000000000aa23         mov        qword [rax+0x28], rbp
000000000000aa27         mov        qword [rax+0x20], rsi
000000000000aa2b         mov        qword [rax+0x30], r10
000000000000aa2f         add        rax, 0x40
000000000000aa33         mov        qword [rax-8], rcx
000000000000aa37         cmp        r12, rax
000000000000aa3a         jne        loc_a968

                     loc_aa40:
000000000000aa40         add        rsi, qword [rdx+0x20]                       ; CODE XREF=isaac_seed+530
000000000000aa44         add        rcx, qword [rdx+0x38]
000000000000aa48         mov        r12, qword [rdx]
000000000000aa4b         add        rbp, qword [rdx+0x28]
000000000000aa4f         add        r10, qword [rdx+0x30]
000000000000aa53         sub        r12, rsi
000000000000aa56         add        r9, r12
000000000000aa59         mov        r12, rcx
000000000000aa5c         shr        r12, 0x9
000000000000aa60         add        rcx, r9
000000000000aa63         xor        rbp, r12
000000000000aa66         mov        r12, qword [rdx+8]
000000000000aa6a         sub        r12, rbp
000000000000aa6d         add        r11, r12
000000000000aa70         mov        r12, r9
000000000000aa73         shl        r12, 0x9
000000000000aa77         add        r9, r11
000000000000aa7a         xor        r10, r12
000000000000aa7d         mov        r12, qword [rdx+0x10]
000000000000aa81         sub        r12, r10
000000000000aa84         add        rbx, r12
000000000000aa87         mov        r12, r11
000000000000aa8a         shr        r12, 0x17
000000000000aa8e         add        r11, rbx
000000000000aa91         xor        rcx, r12
000000000000aa94         mov        r12, qword [rdx+0x18]
000000000000aa98         sub        r12, rcx
000000000000aa9b         add        r8, r12
000000000000aa9e         mov        r12, rbx
000000000000aaa1         shl        r12, 0xf
000000000000aaa5         add        rbx, r8
000000000000aaa8         xor        r9, r12
000000000000aaab         mov        r12, r8
000000000000aaae         sub        rsi, r9
000000000000aab1         shr        r12, 0xe
000000000000aab5         mov        qword [rdx], r9
000000000000aab8         xor        r11, r12
000000000000aabb         mov        r12, rsi
000000000000aabe         add        r8, rsi
000000000000aac1         sub        rbp, r11
000000000000aac4         shl        r12, 0x14
000000000000aac8         mov        qword [rdx+8], r11
000000000000aacc         xor        rbx, r12
000000000000aacf         lea        r12, qword [rsi+rbp]
000000000000aad3         mov        rsi, rbp
000000000000aad6         sub        r10, rbx
000000000000aad9         shr        rsi, 0x11
000000000000aadd         mov        qword [rdx+0x10], rbx
000000000000aae1         xor        r8, rsi
000000000000aae4         mov        rsi, r10
000000000000aae7         add        rbp, r10
000000000000aaea         sub        rcx, r8
000000000000aaed         shl        rsi, 0xe
000000000000aaf1         mov        qword [rdx+0x18], r8
000000000000aaf5         xor        rsi, r12
000000000000aaf8         add        r10, rcx
000000000000aafb         mov        qword [rdx+0x28], rbp
000000000000aaff         mov        qword [rdx+0x20], rsi
000000000000ab03         mov        qword [rdx+0x30], r10
000000000000ab07         add        rdx, 0x40
000000000000ab0b         mov        qword [rdx-8], rcx
000000000000ab0f         cmp        rax, rdx
000000000000ab12         jne        loc_aa40

000000000000ab18         pop        rbx
000000000000ab19         mov        qword [rdi+0x810], 0x0
000000000000ab24         mov        qword [rdi+0x808], 0x0
000000000000ab2f         pop        rbp
000000000000ab30         mov        qword [rdi+0x800], 0x0
000000000000ab3b         pop        r12
000000000000ab3d         pop        r13
000000000000ab3f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int32_t, -104


                     dup_safer:
000000000000ab40         mov        edx, 0x3                                    ; End of unwind block (FDE at 0xeba0), Begin of unwind block (FDE at 0xebd4), CODE XREF=fd_safer+17, fopen_safer+50
000000000000ab45         xor        esi, esi
000000000000ab47         xor        eax, eax
000000000000ab49         jmp        rpl_fcntl                                   ; rpl_fcntl
000000000000ab4e         align      16                                          ; End of unwind block (FDE at 0xebd4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
000000000000ab50         push       r12                                         ; Begin of unwind block (FDE at 0xebec), CODE XREF=close_stream+21, randread_free+51, fopen_safer+65, fopen_safer+134
000000000000ab52         push       rbp
000000000000ab53         push       rbx
000000000000ab54         mov        rbx, rdi
000000000000ab57         call       j_fileno                                    ; fileno
000000000000ab5c         test       eax, eax
000000000000ab5e         mov        rdi, rbx
000000000000ab61         js         loc_abb7

000000000000ab63         call       j___freading                                ; __freading
000000000000ab68         test       eax, eax
000000000000ab6a         jne        loc_ab98

                     loc_ab6c:
000000000000ab6c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
000000000000ab6f         call       rpl_fflush                                  ; rpl_fflush
000000000000ab74         test       eax, eax
000000000000ab76         je         loc_abb4

000000000000ab78         call       j___errno_location                          ; __errno_location
000000000000ab7d         mov        r12d, dword [rax]
000000000000ab80         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
000000000000ab83         mov        rbp, rax
000000000000ab86         call       j_fclose                                    ; fclose
000000000000ab8b         test       r12d, r12d
000000000000ab8e         jne        loc_abc0

                     loc_ab90:
000000000000ab90         pop        rbx                                         ; CODE XREF=rpl_fclose+121
000000000000ab91         pop        rbp
000000000000ab92         pop        r12
000000000000ab94         ret
                        ; endp
000000000000ab95         align      8

                     loc_ab98:
000000000000ab98         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
000000000000ab9b         call       j_fileno                                    ; fileno
000000000000aba0         xor        esi, esi                                    ; argument "__offset" for method j_lseek
000000000000aba2         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
000000000000aba7         mov        edi, eax                                    ; argument "__fd" for method j_lseek
000000000000aba9         call       j_lseek                                     ; lseek
000000000000abae         cmp        rax, 0xffffffffffffffff
000000000000abb2         jne        loc_ab6c

                     loc_abb4:
000000000000abb4         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_abb7:
000000000000abb7         pop        rbx                                         ; CODE XREF=rpl_fclose+17
000000000000abb8         pop        rbp
000000000000abb9         pop        r12
000000000000abbb         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_abc0:
000000000000abc0         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
000000000000abc4         mov        eax, 0xffffffff
000000000000abc9         jmp        loc_ab90
000000000000abcb         align      16                                          ; End of unwind block (FDE at 0xebec)

                     rpl_fcntl:
000000000000abd0         push       r12                                         ; Begin of unwind block (FDE at 0xec24), CODE XREF=dup_safer+9
000000000000abd2         push       rbp
000000000000abd3         mov        ebp, edi
000000000000abd5         push       rbx
000000000000abd6         sub        rsp, 0x50
000000000000abda         mov        rax, qword [fs:0x28]
000000000000abe3         mov        qword [rsp+0x68+var_50], rax
000000000000abe8         xor        eax, eax
000000000000abea         lea        rax, qword [rsp+0x68+arg_0]
000000000000abef         test       esi, esi
000000000000abf1         mov        qword [rsp+0x68+var_38], rdx
000000000000abf6         mov        qword [rsp+0x68+var_30], rcx
000000000000abfb         mov        qword [rsp+0x68+var_28], r8
000000000000ac00         mov        qword [rsp+0x68+var_60], rax
000000000000ac05         lea        rax, qword [rsp+0x68+var_48]
000000000000ac0a         mov        qword [rsp+0x68+var_20], r9
000000000000ac0f         mov        dword [rsp+0x68+var_68], 0x10
000000000000ac16         mov        qword [rsp+0x68+var_58], rax
000000000000ac1b         je         loc_ae22

000000000000ac21         cmp        esi, 0x406
000000000000ac27         jne        loc_ac70

000000000000ac29         mov        rax, qword [rsp+0x68+var_58]
000000000000ac2e         cmp        dword [have_dupfd_cloexec.3326], 0x0        ; have_dupfd_cloexec.3326
000000000000ac35         mov        dword [rsp+0x68+var_68], 0x18
000000000000ac3c         mov        r12d, dword [rax+0x10]
000000000000ac40         mov        edx, r12d
000000000000ac43         js         loc_ad73

000000000000ac49         xor        eax, eax
000000000000ac4b         mov        esi, 0x406                                  ; argument "__cmd" for method j_fcntl
000000000000ac50         call       j_fcntl                                     ; fcntl
000000000000ac55         test       eax, eax
000000000000ac57         mov        ebx, eax
000000000000ac59         js         loc_ade8

                     loc_ac5f:
000000000000ac5f         mov        dword [have_dupfd_cloexec.3326], 0x1        ; have_dupfd_cloexec.3326, CODE XREF=rpl_fcntl+544
000000000000ac69         jmp        loc_acb0
000000000000ac6b         align      16

                     loc_ac70:
000000000000ac70         cmp        esi, 0xb                                    ; CODE XREF=rpl_fcntl+87
000000000000ac73         je         loc_aca0

000000000000ac75         jg         loc_acd0

000000000000ac77         cmp        esi, 0x4
000000000000ac7a         je         loc_ad50

000000000000ac80         jg         loc_ad40

000000000000ac86         cmp        esi, 0x2
000000000000ac89         je         loc_ad50

000000000000ac8f         jg         loc_aca0

000000000000ac91         cmp        esi, 0x1
000000000000ac94         jne        loc_acf8

000000000000ac96         nop        word [cs:rax+rax]

                     loc_aca0:
000000000000aca0         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl, CODE XREF=rpl_fcntl+163, rpl_fcntl+191, rpl_fcntl+278, rpl_fcntl+344, rpl_fcntl+358, rpl_fcntl+371
000000000000aca2         xor        eax, eax
000000000000aca4         call       j_fcntl                                     ; fcntl
000000000000aca9         mov        ebx, eax
000000000000acab         nop        dword [rax+rax]

                     loc_acb0:
000000000000acb0         mov        rcx, qword [rsp+0x68+var_50]                ; CODE XREF=rpl_fcntl+153, rpl_fcntl+327, rpl_fcntl+414, rpl_fcntl+432, rpl_fcntl+445, rpl_fcntl+491, rpl_fcntl+524, rpl_fcntl+568, rpl_fcntl+613
000000000000acb5         xor        rcx, qword [fs:0x28]
000000000000acbe         mov        eax, ebx
000000000000acc0         jne        loc_ae1d

000000000000acc6         add        rsp, 0x50
000000000000acca         pop        rbx
000000000000accb         pop        rbp
000000000000accc         pop        r12
000000000000acce         ret
                        ; endp
000000000000accf         align      16

                     loc_acd0:
000000000000acd0         cmp        esi, 0x407                                  ; CODE XREF=rpl_fcntl+165
000000000000acd6         jg         loc_ad20

000000000000acd8         cmp        esi, 0x406
000000000000acde         jge        loc_ad50

000000000000ace0         cmp        esi, 0x401
000000000000ace6         je         loc_aca0

000000000000ace8         cmp        esi, 0x402
000000000000acee         je         loc_ad50

000000000000acf0         cmp        esi, 0x400
000000000000acf6         je         loc_ad50

                     loc_acf8:
000000000000acf8         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+196, rpl_fcntl+356, rpl_fcntl+382
000000000000acfb         cmp        eax, 0x2f
000000000000acfe         ja         loc_ae3a

000000000000ad04         add        rax, qword [rsp+0x68+var_58]

                     loc_ad09:
000000000000ad09         mov        rdx, qword [rax]                            ; CODE XREF=rpl_fcntl+623
000000000000ad0c         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
000000000000ad0e         xor        eax, eax
000000000000ad10         call       j_fcntl                                     ; fcntl
000000000000ad15         mov        ebx, eax
000000000000ad17         jmp        loc_acb0
000000000000ad19         align      32

                     loc_ad20:
000000000000ad20         cmp        esi, 0x409                                  ; CODE XREF=rpl_fcntl+262
000000000000ad26         je         loc_ad50

000000000000ad28         jl         loc_aca0

000000000000ad2e         cmp        esi, 0x40a
000000000000ad34         jne        loc_acf8

000000000000ad36         jmp        loc_aca0
000000000000ad3b         align      64

                     loc_ad40:
000000000000ad40         cmp        esi, 0x9                                    ; CODE XREF=rpl_fcntl+176
000000000000ad43         je         loc_aca0

000000000000ad49         jg         loc_ad50

000000000000ad4b         cmp        esi, 0x8
000000000000ad4e         jne        loc_acf8

                     loc_ad50:
000000000000ad50         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+170, rpl_fcntl+185, rpl_fcntl+270, rpl_fcntl+286, rpl_fcntl+294, rpl_fcntl+342, rpl_fcntl+377
000000000000ad53         cmp        eax, 0x2f
000000000000ad56         ja         loc_ae44

000000000000ad5c         add        rax, qword [rsp+0x68+var_58]

                     loc_ad61:
000000000000ad61         mov        edx, dword [rax]                            ; CODE XREF=rpl_fcntl+633
000000000000ad63         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
000000000000ad65         xor        eax, eax
000000000000ad67         call       j_fcntl                                     ; fcntl
000000000000ad6c         mov        ebx, eax
000000000000ad6e         jmp        loc_acb0

                     loc_ad73:
000000000000ad73         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl, CODE XREF=rpl_fcntl+115
000000000000ad75         xor        eax, eax
000000000000ad77         call       j_fcntl                                     ; fcntl
000000000000ad7c         test       eax, eax
000000000000ad7e         mov        ebx, eax
000000000000ad80         js         loc_acb0

000000000000ad86         cmp        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
000000000000ad8d         jne        loc_acb0

                     loc_ad93:
000000000000ad93         xor        eax, eax                                    ; CODE XREF=rpl_fcntl+584
000000000000ad95         mov        esi, 0x1                                    ; argument "__cmd" for method j_fcntl
000000000000ad9a         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
000000000000ad9c         call       j_fcntl                                     ; fcntl
000000000000ada1         test       eax, eax
000000000000ada3         js         loc_adc1

000000000000ada5         or         eax, 0x1
000000000000ada8         mov        esi, 0x2                                    ; argument "__cmd" for method j_fcntl
000000000000adad         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
000000000000adaf         mov        edx, eax
000000000000adb1         xor        eax, eax
000000000000adb3         call       j_fcntl                                     ; fcntl
000000000000adb8         cmp        eax, 0xffffffff
000000000000adbb         jne        loc_acb0

                     loc_adc1:
000000000000adc1         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+467
000000000000adc6         mov        r12d, dword [rax]
000000000000adc9         mov        rbp, rax
000000000000adcc         mov        edi, ebx                                    ; argument "__fd" for method j_close
000000000000adce         call       j_close                                     ; close
000000000000add3         mov        ebx, 0xffffffff
000000000000add8         mov        dword [rbp], r12d
000000000000addc         jmp        loc_acb0
000000000000ade1         align      8

                     loc_ade8:
000000000000ade8         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+137
000000000000aded         cmp        dword [rax], 0x16
000000000000adf0         jne        loc_ac5f

000000000000adf6         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
000000000000adf8         xor        eax, eax
000000000000adfa         mov        edx, r12d
000000000000adfd         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
000000000000adff         call       j_fcntl                                     ; fcntl
000000000000ae04         test       eax, eax
000000000000ae06         mov        ebx, eax
000000000000ae08         js         loc_acb0

000000000000ae0e         mov        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
000000000000ae18         jmp        loc_ad93

                     loc_ae1d:
000000000000ae1d         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_fcntl+240
                        ; endp

                     loc_ae22:
000000000000ae22         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=rpl_fcntl+75
000000000000ae27         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
000000000000ae29         mov        edx, dword [rax+0x10]
000000000000ae2c         xor        eax, eax
000000000000ae2e         call       j_fcntl                                     ; fcntl
000000000000ae33         mov        ebx, eax
000000000000ae35         jmp        loc_acb0

                     loc_ae3a:
000000000000ae3a         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+302
000000000000ae3f         jmp        loc_ad09

                     loc_ae44:
000000000000ae44         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+390
000000000000ae49         jmp        loc_ad61
000000000000ae4e         align      16                                          ; End of unwind block (FDE at 0xec24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fopen_safer:
000000000000ae50         push       r12                                         ; Begin of unwind block (FDE at 0xec5c), CODE XREF=randread_new+57
000000000000ae52         push       rbp
000000000000ae53         mov        rbp, rsi
000000000000ae56         push       rbx
000000000000ae57         call       j_fopen                                     ; fopen
000000000000ae5c         test       rax, rax
000000000000ae5f         mov        rbx, rax
000000000000ae62         je         loc_ae71

000000000000ae64         mov        rdi, rax                                    ; argument "__stream" for method j_fileno
000000000000ae67         call       j_fileno                                    ; fileno
000000000000ae6c         cmp        eax, 0x2
000000000000ae6f         jbe        loc_ae80

                     loc_ae71:
000000000000ae71         mov        rax, rbx                                    ; CODE XREF=fopen_safer+18, fopen_safer+91, fopen_safer+115, fopen_safer+145
000000000000ae74         pop        rbx
000000000000ae75         pop        rbp
000000000000ae76         pop        r12
000000000000ae78         ret
                        ; endp
000000000000ae79         align      128

                     loc_ae80:
000000000000ae80         mov        edi, eax                                    ; CODE XREF=fopen_safer+31
000000000000ae82         call       dup_safer                                   ; dup_safer
000000000000ae87         test       eax, eax
000000000000ae89         mov        r12d, eax
000000000000ae8c         js         loc_aec8

000000000000ae8e         mov        rdi, rbx
000000000000ae91         call       rpl_fclose                                  ; rpl_fclose
000000000000ae96         test       eax, eax
000000000000ae98         jne        loc_aead

000000000000ae9a         mov        rsi, rbp                                    ; argument "__modes" for method j_fdopen
000000000000ae9d         mov        edi, r12d                                   ; argument "__fd" for method j_fdopen
000000000000aea0         call       j_fdopen                                    ; fdopen
000000000000aea5         test       rax, rax
000000000000aea8         mov        rbx, rax
000000000000aeab         jne        loc_ae71

                     loc_aead:
000000000000aead         call       j___errno_location                          ; __errno_location, CODE XREF=fopen_safer+72
000000000000aeb2         mov        ebp, dword [rax]
000000000000aeb4         mov        rbx, rax
000000000000aeb7         mov        edi, r12d                                   ; argument "__fd" for method j_close
000000000000aeba         call       j_close                                     ; close
000000000000aebf         mov        dword [rbx], ebp
000000000000aec1         xor        ebx, ebx
000000000000aec3         jmp        loc_ae71
000000000000aec5         align      8

                     loc_aec8:
000000000000aec8         call       j___errno_location                          ; __errno_location, CODE XREF=fopen_safer+60
000000000000aecd         mov        r12d, dword [rax]
000000000000aed0         mov        rbp, rax
000000000000aed3         mov        rdi, rbx
000000000000aed6         call       rpl_fclose                                  ; rpl_fclose
000000000000aedb         xor        ebx, ebx
000000000000aedd         mov        dword [rbp], r12d
000000000000aee1         jmp        loc_ae71
000000000000aee3         align      16                                          ; End of unwind block (FDE at 0xec5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
000000000000aef0         push       r15                                         ; Begin of unwind block (FDE at 0xec8c), DATA XREF=_start+22
000000000000aef2         push       r14
000000000000aef4         mov        r15, rdx
000000000000aef7         push       r13
000000000000aef9         push       r12
000000000000aefb         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
000000000000af02         push       rbp
000000000000af03         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
000000000000af0a         push       rbx
000000000000af0b         mov        r13d, edi
000000000000af0e         mov        r14, rsi
000000000000af11         sub        rbp, r12
000000000000af14         sub        rsp, 0x8
000000000000af18         sar        rbp, 0x3
000000000000af1c         call       _init                                       ; _init
000000000000af21         test       rbp, rbp
000000000000af24         je         loc_af46

000000000000af26         xor        ebx, ebx
000000000000af28         nop        dword [rax+rax]

                     loc_af30:
000000000000af30         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
000000000000af33         mov        rsi, r14
000000000000af36         mov        edi, r13d
000000000000af39         call       qword [r12+rbx*8]
000000000000af3d         add        rbx, 0x1
000000000000af41         cmp        rbp, rbx
000000000000af44         jne        loc_af30

                     loc_af46:
000000000000af46         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
000000000000af4a         pop        rbx
000000000000af4b         pop        rbp
000000000000af4c         pop        r12
000000000000af4e         pop        r13
000000000000af50         pop        r14
000000000000af52         pop        r15
000000000000af54         ret
                        ; endp
000000000000af55         align      32                                          ; End of unwind block (FDE at 0xec8c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
000000000000af60         ret                                                    ; Begin of unwind block (FDE at 0xecd4), DATA XREF=_start+15
                        ; endp
000000000000af62         align      16                                          ; End of unwind block (FDE at 0xecd4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
000000000000af70         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0xecec), __dso_handle, CODE XREF=main+116
000000000000af77         xor        esi, esi
000000000000af79         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
000000000000af7e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0xecec)
000000000000af7f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0xaf80; 0xaf89[ (9 bytes)
        ; File offset : [44928; 44937[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
000000000000af80         sub        rsp, 0x8
000000000000af84         add        rsp, 0x8
000000000000af88         ret
                        ; endp
000000000000af89         db  0x00 ; '.'
000000000000af8a         db  0x00 ; '.'
000000000000af8b         db  0x00 ; '.'
000000000000af8c         db  0x00 ; '.'
000000000000af8d         db  0x00 ; '.'
000000000000af8e         db  0x00 ; '.'
000000000000af8f         db  0x00 ; '.'
000000000000af90         db  0x00 ; '.'
000000000000af91         db  0x00 ; '.'
000000000000af92         db  0x00 ; '.'
000000000000af93         db  0x00 ; '.'
000000000000af94         db  0x00 ; '.'
000000000000af95         db  0x00 ; '.'
000000000000af96         db  0x00 ; '.'
000000000000af97         db  0x00 ; '.'
000000000000af98         db  0x00 ; '.'
000000000000af99         db  0x00 ; '.'
000000000000af9a         db  0x00 ; '.'
000000000000af9b         db  0x00 ; '.'
000000000000af9c         db  0x00 ; '.'
000000000000af9d         db  0x00 ; '.'
000000000000af9e         db  0x00 ; '.'
000000000000af9f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0xafa0; 0xcab7[ (6935 bytes)
        ; File offset : [44960; 51895[ (6935 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
000000000000afa0         db  0x01 ; '.'
000000000000afa1         db  0x00 ; '.'
000000000000afa2         db  0x02 ; '.'
000000000000afa3         db  0x00 ; '.'
000000000000afa4         db  0x20 ; ' '                                         ; DATA XREF=do_link+251
000000000000afa5         db  0x7e ; '~'
000000000000afa6         db  0x20 ; ' '
000000000000afa7         db  0x00 ; '.'
                     aFailedToAccess:
000000000000afa8         db         "failed to access %s", 0                    ; DATA XREF=main+1971, do_link+906, do_link+1184
                     aSAndSAreTheSam:
000000000000afbc         db         "%s and %s are the same file", 0            ; DATA XREF=do_link+2645
                     aSReplaceS:
000000000000afd8         db         "%s: replace %s? ", 0                       ; DATA XREF=do_link+2457
                     aCannotBackupS:
000000000000afe9         db         "cannot backup %s", 0                       ; DATA XREF=do_link+2194
                     aSssCSn:
000000000000affa         db         "%s%s%s %c> %s\n", 0                        ; DATA XREF=do_link+318
                     aFailedToCreate_b009:        // aFailedToCreate
000000000000b009         db         "failed to create hard link %s", 0          ; DATA XREF=do_link+1277
                     aCannotUnbackup:
000000000000b027         db         "cannot un-backup %s", 0                    ; DATA XREF=do_link+756
000000000000b03b         db  0x6c ; 'l'                                         ; DATA XREF=main+477, usage+462, usage+820, usage+1004, usage+1023, usage+1057
000000000000b03c         db  0x6e ; 'n'
000000000000b03d         db  0x00 ; '.'
000000000000b03e         db  0x2d ; '-'                                         ; DATA XREF=usage+493
000000000000b03f         db  0x50 ; 'P'
000000000000b040         db  0x00 ; '.'
000000000000b041         db  0x5b ; '['                                         ; DATA XREF=usage+515
000000000000b042         db  0x00 ; '.'
                     aTestInvocation:
000000000000b043         db         "test invocation", 0                        ; DATA XREF=usage+554
                     aMulticallInvoc:
000000000000b053         db         "Multi-call invocation", 0                  ; DATA XREF=usage+602
                     aSha224sum:
000000000000b069         db         "sha224sum", 0                              ; DATA XREF=usage+619
                     aSha2Utilities:
000000000000b073         db         "sha2 utilities", 0                         ; DATA XREF=usage+631
                     aSha256sum:
000000000000b082         db         "sha256sum", 0                              ; DATA XREF=usage+522
                     aSha384sum:
000000000000b08c         db         "sha384sum", 0                              ; DATA XREF=usage+566
                     aSha512sum:
000000000000b096         db         "sha512sum", 0                              ; DATA XREF=usage+590
                     aNsOnlineHelpSn:
000000000000b0a0         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+706
000000000000b0b7         db  0x47 ; 'G'                                         ; DATA XREF=main+470, usage+734, usage+927, emit_bug_reporting_address+68
000000000000b0b8         db  0x4e ; 'N'
000000000000b0b9         db  0x55 ; 'U'
000000000000b0ba         db  0x20 ; ' '
                     aCoreutils:
000000000000b0bb         db         "coreutils", 0                              ; DATA XREF=main+85, main+97, usage+578
000000000000b0c5         db  0x65 ; 'e'                                         ; DATA XREF=usage+773, usage+966
000000000000b0c6         db  0x6e ; 'n'
000000000000b0c7         db  0x5f ; '_'
000000000000b0c8         db  0x00 ; '.'
                     aFullDocumentat:
000000000000b0c9         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+801, usage+990
                     aUsrlocalsharel:
000000000000b0e4         db         "/usr/local/share/locale", 0                ; DATA XREF=main+78
                     aTargetSIsNotAD:
000000000000b0fc         db         "target %s is not a directory", 0           ; DATA XREF=main+655
                     aDavidMackenzie:
000000000000b119         db         "David MacKenzie", 0                        ; DATA XREF=main+456
                     aMikeParker:
000000000000b129         db         "Mike Parker", 0                            ; DATA XREF=main+463
                     aBdfinrstvflpst:
000000000000b135         db         "bdfinrst:vFLPS:T", 0                       ; DATA XREF=main+183
                     aMissingFileOpe:
000000000000b146         db         "missing file operand", 0                   ; DATA XREF=main+1684
                     aExtraOperandS:
000000000000b15b         db         "extra operand %s", 0                       ; DATA XREF=main+1777
                     aTargetS:
000000000000b16c         db         "target %s", 0                              ; DATA XREF=main+1595
                     aBackupType:
000000000000b176         db         "backup type", 0                            ; DATA XREF=main+934
                     aBackup:
000000000000b182         db         "backup", 0
                     aNodereference:
000000000000b189         db         "no-dereference", 0
000000000000b198         db  0x6e ; 'n'
000000000000b199         db  0x6f ; 'o'
000000000000b19a         db  0x2d ; '-'
                     aTargetdirector:
000000000000b19b         db         "target-directory", 0
                     aForce:
000000000000b1ac         db         "force", 0
                     aInteractive:
000000000000b1b2         db         "interactive", 0
                     aSuffix:
000000000000b1be         db         "suffix", 0
                     aLogical:
000000000000b1c5         db         "logical", 0
                     aPhysical:
000000000000b1cd         db         "physical", 0
                     aRelative:
000000000000b1d6         db         "relative", 0
                     aSymbolic:
000000000000b1df         db         "symbolic", 0
                     aVerbose:
000000000000b1e8         db         "verbose", 0
                     aHelp:
000000000000b1f0         db         "help", 0
                     aVersion:
000000000000b1f5         db         "version", 0
000000000000b1fd         align      512
                     aSHardLinkNotAl:
000000000000b200         db         "%s: hard link not allowed for directory", 0 ; DATA XREF=do_link+1869
                     aSCannotOverwri:
000000000000b228         db         "%s: cannot overwrite directory", 0         ; DATA XREF=do_link+1935
000000000000b247         align      8
                     aWillNotOverwri:
000000000000b248         db         "will not overwrite just-created %s with %s", 0 ; DATA XREF=do_link+2284
000000000000b273         align      8
                     aFailedToCreate_b278:        // aFailedToCreate
000000000000b278         db         "failed to create symbolic link %s", 0      ; DATA XREF=do_link+1616
000000000000b29a         align      32
                     aFailedToCreate:
000000000000b2a0         db         "failed to create symbolic link %s -> %s", 0 ; DATA XREF=do_link+657
                     aFailedToCreate_b2c8:        // aFailedToCreate
000000000000b2c8         db         "failed to create hard link to %.0s%s", 0   ; DATA XREF=do_link+1984
000000000000b2ed         align      16
                     aFailedToCreate_b2f0:        // aFailedToCreate
000000000000b2f0         db         "failed to create hard link %s => %s", 0    ; DATA XREF=do_link+2024
000000000000b314         align      8
                     aTrySHelpForMor:
000000000000b318         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
000000000000b33f         align      64
                     aUsageSOptionTT:
000000000000b340         db         "Usage: %s [OPTION]... [-T] TARGET LINK_NAME\n  or:  %s [OPTION]... TARGET\n  or:  %s [OPTION]... TARGET... DIRECTORY\n  or:  %s [OPTION]... -t DIRECTORY TARGET...\n", 0 ; DATA XREF=usage+93
000000000000b3e1         align      8
                     aInThe1stFormCr:
000000000000b3e8         db         "In the 1st form, create a link to TARGET with the name LINK_NAME.\nIn the 2nd form, create a link to TARGET in the current directory.\nIn the 3rd and 4th forms, create links to each TARGET in DIRECTORY.\nCreate hard links by default, symbolic links with --sym" ; DATA XREF=usage+141
000000000000b4e8         db         "bolic.\nBy default, each destination (name of new link) should not already exist.\nWhen creating hard links, each TARGET must exist.  Symbolic links\ncan hold arbitrary text; if later resolved, a relative link is\ninterpreted in relation to its parent director"
000000000000b5e8         db         "y.\n", 0
000000000000b5ec         align      16
                     aNmandatoryArgu:
000000000000b5f0         db         "\nMandatory arguments to long options are mandatory for short options too.\n", 0 ; DATA XREF=usage+178
000000000000b63b         align      64
                     aBackupcontrolM:
000000000000b640         db         "      --backup[=CONTROL]      make a backup of each existing destination file\n  -b                          like --backup but does not accept an argument\n  -d, -F, --directory         allow the superuser to attempt to hard link\n                            " ; DATA XREF=usage+215
000000000000b740         db         "    directories (note: will probably fail due to\n                                system restrictions, even for the superuser)\n  -f, --force                 remove existing destination files\n", 0
000000000000b7ff         align      2048
                     aIInteractivePr:
000000000000b800         db         "  -i, --interactive           prompt whether to remove destinations\n  -L, --logical               dereference TARGETs that are symbolic links\n  -n, --no-dereference        treat LINK_NAME as a normal file if\n                                it is a symbolic" ; DATA XREF=usage+252
000000000000b900         db         " link to a directory\n  -P, --physical              make hard links directly to symbolic links\n  -r, --relative              create symbolic links relative to link location\n  -s, --symbolic              make symbolic links instead of hard links\n", 0
000000000000b9f5         align      8
                     aSSuffixsuffixO:
000000000000b9f8         db         "  -S, --suffix=SUFFIX         override the usual backup suffix\n  -t, --target-directory=DIRECTORY  specify the DIRECTORY in which to create\n                                the links\n  -T, --no-target-directory   treat LINK_NAME as a normal file always\n  -v" ; DATA XREF=usage+289
000000000000baf8         db         ", --verbose               print name of each linked file\n", 0
000000000000bb32         align      8
                     aHelpDisplayThi:
000000000000bb38         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+326
000000000000bb65         align      8
                     aVersionOutputV:
000000000000bb68         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+363
000000000000bb9e         align      32
                     aNtheBackupSuff:
000000000000bba0         db         "\nThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\nThe version control method may be selected via the --backup option or through\nthe VERSION_CONTROL environment variable.  Here are the values:\n\n", 0 ; DATA XREF=usage+400
000000000000bc7d         align      128
                     aNoneOffNeverMa:
000000000000bc80         db         "  none, off       never make backups (even if --backup is given)\n  numbered, t     make numbered backups\n  existing, nil   numbered if numbered backups exist, simple otherwise\n  simple, never   always make simple backups\n", 0 ; DATA XREF=usage+437
000000000000bd5e         align      32
                     aNusingSIgnores:
000000000000bd60         db         "\nUsing -s ignores -L and -P.  Otherwise, the last option specified controls\nbehavior when a TARGET is a symbolic link, defaulting to %s.\n", 0 ; DATA XREF=usage+474
000000000000bdea         align      16
                     aHttpswwwgnuorg:
000000000000bdf0         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+727, usage+827, usage+920, usage+1030, emit_bug_reporting_address+61
                     aReportAnyTrans:
000000000000be18         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+1071
000000000000be5f         align      32
                     aOrAvailableLoc:
000000000000be60         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+870
000000000000be93         align      8
                     aMultipleTarget:
000000000000be98         db         "multiple target directories specified", 0  ; DATA XREF=main+1821
000000000000bebe         align      64
                     aCannotDoRelati:
000000000000bec0         db         "cannot do --relative without --symbolic", 0 ; DATA XREF=main+1722
                     aCannotCombineT:
000000000000bee8         db         "cannot combine --target-directory and --no-target-directory", 0 ; DATA XREF=main+1887
000000000000bf24         align      8
                     aMissingDestina:
000000000000bf28         db         "missing destination file operand after %s", 0 ; DATA XREF=main+1878
000000000000bf52         db  0x2f ; '/'                                         ; DATA XREF=relpath+349
000000000000bf53         db  0x2e ; '.'                                         ; DATA XREF=relpath+320
000000000000bf54         db  0x2e ; '.'                                         ; DATA XREF=main+1143, main+1942, relpath+247
000000000000bf55         db  0x00 ; '.'
                     aGeneratingRela:
000000000000bf56         db         "generating relative path", 0               ; DATA XREF=relpath+480
                     a831:
000000000000bf6f         db         "8.31", 0                                   ; DATA XREF=Version
000000000000bf74         db  0x7e ; '~'                                         ; DATA XREF=set_simple_backup_suffix+14
000000000000bf75         db  0x00 ; '.'
                     aSimplebackupsu:
000000000000bf76         db         "SIMPLE_BACKUP_SUFFIX", 0                   ; DATA XREF=set_simple_backup_suffix+48
000000000000bf8b         db  0x24 ; '$'                                         ; DATA XREF=xget_version+36
                     aVersioncontrol:
000000000000bf8c         db         "VERSION_CONTROL", 0                        ; DATA XREF=xget_version+10
                     aNone:
000000000000bf9c         db         "none", 0
000000000000bfa1         db  0x6f ; 'o'
000000000000bfa2         db  0x66 ; 'f'
000000000000bfa3         db  0x66 ; 'f'
000000000000bfa4         db  0x00 ; '.'
                     aSimple:
000000000000bfa5         db         "simple", 0
                     aNever:
000000000000bfac         db         "never", 0
                     aExisting:
000000000000bfb2         db         "existing", 0
000000000000bfbb         db  0x6e ; 'n'
000000000000bfbc         db  0x69 ; 'i'
000000000000bfbd         db  0x6c ; 'l'
000000000000bfbe         db  0x00 ; '.'
                     aNumbered:
000000000000bfbf         db         "numbered", 0
000000000000bfc8         db  0x74 ; 't'
000000000000bfc9         db  0x00 ; '.'
000000000000bfca         db  0x00 ; '.'
000000000000bfcb         db  0x00 ; '.'
000000000000bfcc         db  0x00 ; '.'
000000000000bfcd         db  0x00 ; '.'
000000000000bfce         db  0x00 ; '.'
000000000000bfcf         db  0x00 ; '.'
000000000000bfd0         db  0x00 ; '.'
000000000000bfd1         db  0x00 ; '.'
000000000000bfd2         db  0x00 ; '.'
000000000000bfd3         db  0x00 ; '.'
000000000000bfd4         db  0x00 ; '.'
000000000000bfd5         db  0x00 ; '.'
000000000000bfd6         db  0x00 ; '.'
000000000000bfd7         db  0x00 ; '.'
000000000000bfd8         db  0x00 ; '.'
000000000000bfd9         db  0x00 ; '.'
000000000000bfda         db  0x00 ; '.'
000000000000bfdb         db  0x00 ; '.'
000000000000bfdc         db  0x00 ; '.'
000000000000bfdd         db  0x00 ; '.'
000000000000bfde         db  0x00 ; '.'
000000000000bfdf         db  0x00 ; '.'
                     backup_types:
000000000000bfe0         db  0x00 ; '.'                                         ; DATA XREF=get_version.part.0+18, get_version.part.0+36
000000000000bfe1         db  0x00 ; '.'
000000000000bfe2         db  0x00 ; '.'
000000000000bfe3         db  0x00 ; '.'
000000000000bfe4         db  0x00 ; '.'
000000000000bfe5         db  0x00 ; '.'
000000000000bfe6         db  0x00 ; '.'
000000000000bfe7         db  0x00 ; '.'
000000000000bfe8         db  0x01 ; '.'
000000000000bfe9         db  0x00 ; '.'
000000000000bfea         db  0x00 ; '.'
000000000000bfeb         db  0x00 ; '.'
000000000000bfec         db  0x01 ; '.'
000000000000bfed         db  0x00 ; '.'
000000000000bfee         db  0x00 ; '.'
000000000000bfef         db  0x00 ; '.'
000000000000bff0         db  0x02 ; '.'
000000000000bff1         db  0x00 ; '.'
000000000000bff2         db  0x00 ; '.'
000000000000bff3         db  0x00 ; '.'
000000000000bff4         db  0x02 ; '.'
000000000000bff5         db  0x00 ; '.'
000000000000bff6         db  0x00 ; '.'
000000000000bff7         db  0x00 ; '.'
000000000000bff8         db  0x03 ; '.'
000000000000bff9         db  0x00 ; '.'
000000000000bffa         db  0x00 ; '.'
000000000000bffb         db  0x00 ; '.'
000000000000bffc         db  0x03 ; '.'
000000000000bffd         db  0x00 ; '.'
000000000000bffe         db  0x00 ; '.'
000000000000bfff         db  0x00 ; '.'
                     aErrorClosingFi:
000000000000c000         db         "error closing file", 0                     ; DATA XREF=close_stdin+88
                     aSS:
000000000000c013         db         "%s: %s", 0                                 ; DATA XREF=close_stdin+141, close_stdout+108
                     aWriteError:
000000000000c01a         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aEntriesLun:
000000000000c026         db         "# entries:         %lu\n", 0               ; DATA XREF=hash_print_statistics+101
                     aBucketsLun:
000000000000c03e         db         "# buckets:         %lu\n", 0               ; DATA XREF=hash_print_statistics+123
                     aMaxBucketLengt:
000000000000c056         db         "max bucket length: %lu\n", 0               ; DATA XREF=hash_print_statistics+232
000000000000c06e         align      16
                     aBucketsUsedLu2:
000000000000c070         db         "# buckets used:    %lu (%.2f%%)\n", 0      ; DATA XREF=hash_print_statistics+188
000000000000c091         db  0x00 ; '.'
000000000000c092         db  0x00 ; '.'
000000000000c093         db  0x00 ; '.'
000000000000c094         db  0x00 ; '.'
000000000000c095         db  0x00 ; '.'
000000000000c096         db  0x00 ; '.'
000000000000c097         db  0x00 ; '.'
000000000000c098         db  0x00 ; '.'
000000000000c099         db  0x00 ; '.'
000000000000c09a         db  0x00 ; '.'
000000000000c09b         db  0x00 ; '.'
000000000000c09c         db  0x00 ; '.'
000000000000c09d         db  0x00 ; '.'
000000000000c09e         db  0x00 ; '.'
000000000000c09f         db  0x00 ; '.'
                     default_tuning:
000000000000c0a0         db  0x00 ; '.'                                         ; DATA XREF=check_tuning.isra.0+3, hash_initialize+272
000000000000c0a1         db  0x00 ; '.'
000000000000c0a2         db  0x00 ; '.'
000000000000c0a3         db  0x00 ; '.'
000000000000c0a4         db  0x00 ; '.'
000000000000c0a5         db  0x00 ; '.'
000000000000c0a6         db  0x80 ; '.'
000000000000c0a7         db  0x3f ; '?'
000000000000c0a8         db  0xcd ; '.'
000000000000c0a9         db  0xcc ; '.'
000000000000c0aa         db  0x4c ; 'L'
000000000000c0ab         db  0x3f ; '?'
000000000000c0ac         db  0xf4 ; '.'
000000000000c0ad         db  0xfd ; '.'
000000000000c0ae         db  0xb4 ; '.'
000000000000c0af         db  0x3f ; '?'
000000000000c0b0         db  0x00 ; '.'
000000000000c0b1         db  0x00 ; '.'
000000000000c0b2         db  0x00 ; '.'
000000000000c0b3         db  0x00 ; '.'
                     float_c0b4:        // float
000000000000c0b4         dd         0.1f                                        ; DATA XREF=check_tuning.isra.0+25, check_tuning.isra.0+74
                     float_c0b8:        // float
000000000000c0b8         dd         0.9f                                        ; DATA XREF=check_tuning.isra.0+34
                     float_c0bc:        // float
000000000000c0bc         dd         1.1f                                        ; DATA XREF=check_tuning.isra.0+52
                     float_c0c0:        // float
000000000000c0c0         dd         0.0f                                        ; DATA XREF=check_tuning.isra.0+65
                     float_c0c4:        // float
000000000000c0c4         dd         1.0f                                        ; DATA XREF=check_tuning.isra.0+92
                     float_c0c8:        // float
000000000000c0c8         dd         0.8f                                        ; DATA XREF=hash_initialize+290
                     float_c0cc:        // float
000000000000c0cc         dd         1.84467e+19f                                ; DATA XREF=hash_initialize+318, hash_rehash+64, hash_insert_if_absent+413
                     float_c0d0:        // float
000000000000c0d0         dd         9.22337e+18f                                ; DATA XREF=hash_initialize+327, hash_initialize+336, hash_rehash+77, hash_rehash+90, hash_insert_if_absent+422, hash_insert_if_absent+608, hash_delete+250, hash_delete+400
000000000000c0d4         align      2
000000000000c0de         db  0x59 ; 'Y'
000000000000c0df         db  0x40 ; '@'
                     aANullArgv0WasP:
000000000000c0e0         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
000000000000c118         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
000000000000c120         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
000000000000c121         db  0x74 ; 't'
000000000000c122         db  0x2d ; '-'
000000000000c123         db  0x00 ; '.'
000000000000c124         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
000000000000c125         db  0x80 ; '.'
000000000000c126         db  0x98 ; '.'
000000000000c127         db  0x00 ; '.'
000000000000c128         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
000000000000c129         db  0x80 ; '.'
000000000000c12a         db  0x99 ; '.'
000000000000c12b         db  0x00 ; '.'
000000000000c12c         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
000000000000c12d         db  0x07 ; '.'
000000000000c12e         db  0x65 ; 'e'
000000000000c12f         db  0x00 ; '.'
000000000000c130         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
000000000000c131         db  0xaf ; '.'
000000000000c132         db  0x00 ; '.'
000000000000c133         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_7210+1451, sub_7210+1493, sub_7210+2429
000000000000c134         db  0x00 ; '.'
000000000000c135         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_7210+132, sub_7210+1338, sub_7210+1670, sub_7210+1697, sub_7210+2352
000000000000c136         db  0x00 ; '.'
000000000000c137         db  0x60 ; '`'                                         ; DATA XREF=sub_7210+1627, sub_7210+1654
000000000000c138         db  0x00 ; '.'
                     aLiteral:
000000000000c139         db         "literal", 0
                     aShell:
000000000000c141         db         "shell", 0
                     aShellalways:
000000000000c147         db         "shell-always", 0
000000000000c154         db  0x73 ; 's'
000000000000c155         db  0x68 ; 'h'
000000000000c156         db  0x65 ; 'e'
000000000000c157         db  0x6c ; 'l'
000000000000c158         db  0x6c ; 'l'
000000000000c159         db  0x2d ; '-'
                     aEscape:
000000000000c15a         db         "escape", 0
                     aShellescapealw:
000000000000c161         db         "shell-escape-always", 0
                     aCmaybe:
000000000000c175         db         "c-maybe", 0
                     aClocale:
000000000000c17d         db         "clocale", 0
000000000000c185         align      32
                     switch_table_c1a0:        // switch_table
000000000000c1a0         dd         quotearg_buffer_restyled.loc_790a-switch_table_c1a0, quotearg_buffer_restyled.loc_6b63-switch_table_c1a0, quotearg_buffer_restyled.loc_7b38-switch_table_c1a0, quotearg_buffer_restyled.loc_7944-switch_table_c1a0 ; switch table used at 0x6b61 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
000000000000c1b0         dd         quotearg_buffer_restyled.loc_7734-switch_table_c1a0, quotearg_buffer_restyled.loc_7790-switch_table_c1a0, quotearg_buffer_restyled.loc_77e5-switch_table_c1a0, quotearg_buffer_restyled.loc_782a-switch_table_c1a0
000000000000c1c0         dd         3 dup (quotearg_buffer_restyled.loc_7864-switch_table_c1a0)
000000000000c1cc         db  0x14 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000c1cd         db  0xad ; '.'
000000000000c1ce         db  0xff ; '.'
000000000000c1cf         db  0xff ; '.'
000000000000c1d0         db  0xfc ; '.'
000000000000c1d1         db  0xad ; '.'
000000000000c1d2         db  0xff ; '.'
000000000000c1d3         db  0xff ; '.'
000000000000c1d4         db  0xfc ; '.'
000000000000c1d5         db  0xad ; '.'
000000000000c1d6         db  0xff ; '.'
000000000000c1d7         db  0xff ; '.'
000000000000c1d8         db  0xfc ; '.'
000000000000c1d9         db  0xad ; '.'
000000000000c1da         db  0xff ; '.'
000000000000c1db         db  0xff ; '.'
000000000000c1dc         db  0xfc ; '.'
000000000000c1dd         db  0xad ; '.'
000000000000c1de         db  0xff ; '.'
000000000000c1df         db  0xff ; '.'
000000000000c1e0         db  0xfc ; '.'
000000000000c1e1         db  0xad ; '.'
000000000000c1e2         db  0xff ; '.'
000000000000c1e3         db  0xff ; '.'
000000000000c1e4         db  0xfc ; '.'
000000000000c1e5         db  0xad ; '.'
000000000000c1e6         db  0xff ; '.'
000000000000c1e7         db  0xff ; '.'
000000000000c1e8         db  0x54 ; 'T'
000000000000c1e9         db  0xad ; '.'
000000000000c1ea         db  0xff ; '.'
000000000000c1eb         db  0xff ; '.'
000000000000c1ec         db  0x5c ; '\'
000000000000c1ed         db  0xac ; '.'
000000000000c1ee         db  0xff ; '.'
000000000000c1ef         db  0xff ; '.'
000000000000c1f0         db  0x1c ; '.'
000000000000c1f1         db  0xac ; '.'
000000000000c1f2         db  0xff ; '.'
000000000000c1f3         db  0xff ; '.'
000000000000c1f4         db  0xe4 ; '.'
000000000000c1f5         db  0xad ; '.'
000000000000c1f6         db  0xff ; '.'
000000000000c1f7         db  0xff ; '.'
000000000000c1f8         db  0xd4 ; '.'
000000000000c1f9         db  0xad ; '.'
000000000000c1fa         db  0xff ; '.'
000000000000c1fb         db  0xff ; '.'
000000000000c1fc         db  0xc4 ; '.'
000000000000c1fd         db  0xad ; '.'
000000000000c1fe         db  0xff ; '.'
000000000000c1ff         db  0xff ; '.'
000000000000c200         db  0xb4 ; '.'
000000000000c201         db  0xad ; '.'
000000000000c202         db  0xff ; '.'
000000000000c203         db  0xff ; '.'
000000000000c204         db  0xfc ; '.'
000000000000c205         db  0xad ; '.'
000000000000c206         db  0xff ; '.'
000000000000c207         db  0xff ; '.'
000000000000c208         db  0xfc ; '.'
000000000000c209         db  0xad ; '.'
000000000000c20a         db  0xff ; '.'
000000000000c20b         db  0xff ; '.'
000000000000c20c         db  0xfc ; '.'
000000000000c20d         db  0xad ; '.'
000000000000c20e         db  0xff ; '.'
000000000000c20f         db  0xff ; '.'
000000000000c210         db  0xfc ; '.'
000000000000c211         db  0xad ; '.'
000000000000c212         db  0xff ; '.'
000000000000c213         db  0xff ; '.'
000000000000c214         db  0xfc ; '.'
000000000000c215         db  0xad ; '.'
000000000000c216         db  0xff ; '.'
000000000000c217         db  0xff ; '.'
000000000000c218         db  0xfc ; '.'
000000000000c219         db  0xad ; '.'
000000000000c21a         db  0xff ; '.'
000000000000c21b         db  0xff ; '.'
000000000000c21c         db  0xfc ; '.'
000000000000c21d         db  0xad ; '.'
000000000000c21e         db  0xff ; '.'
000000000000c21f         db  0xff ; '.'
000000000000c220         db  0xfc ; '.'
000000000000c221         db  0xad ; '.'
000000000000c222         db  0xff ; '.'
000000000000c223         db  0xff ; '.'
000000000000c224         db  0xfc ; '.'
000000000000c225         db  0xad ; '.'
000000000000c226         db  0xff ; '.'
000000000000c227         db  0xff ; '.'
000000000000c228         db  0xfc ; '.'
000000000000c229         db  0xad ; '.'
000000000000c22a         db  0xff ; '.'
000000000000c22b         db  0xff ; '.'
000000000000c22c         db  0xfc ; '.'
000000000000c22d         db  0xad ; '.'
000000000000c22e         db  0xff ; '.'
000000000000c22f         db  0xff ; '.'
000000000000c230         db  0xfc ; '.'
000000000000c231         db  0xad ; '.'
000000000000c232         db  0xff ; '.'
000000000000c233         db  0xff ; '.'
000000000000c234         db  0xfc ; '.'
000000000000c235         db  0xad ; '.'
000000000000c236         db  0xff ; '.'
000000000000c237         db  0xff ; '.'
000000000000c238         db  0xfc ; '.'
000000000000c239         db  0xad ; '.'
000000000000c23a         db  0xff ; '.'
000000000000c23b         db  0xff ; '.'
000000000000c23c         db  0xfc ; '.'
000000000000c23d         db  0xad ; '.'
000000000000c23e         db  0xff ; '.'
000000000000c23f         db  0xff ; '.'
000000000000c240         db  0xfc ; '.'
000000000000c241         db  0xad ; '.'
000000000000c242         db  0xff ; '.'
000000000000c243         db  0xff ; '.'
000000000000c244         db  0xfc ; '.'
000000000000c245         db  0xad ; '.'
000000000000c246         db  0xff ; '.'
000000000000c247         db  0xff ; '.'
000000000000c248         db  0xfc ; '.'
000000000000c249         db  0xad ; '.'
000000000000c24a         db  0xff ; '.'
000000000000c24b         db  0xff ; '.'
000000000000c24c         db  0xa4 ; '.'
000000000000c24d         db  0xad ; '.'
000000000000c24e         db  0xff ; '.'
000000000000c24f         db  0xff ; '.'
000000000000c250         db  0x94 ; '.'
000000000000c251         db  0xad ; '.'
000000000000c252         db  0xff ; '.'
000000000000c253         db  0xff ; '.'
000000000000c254         db  0x94 ; '.'
000000000000c255         db  0xad ; '.'
000000000000c256         db  0xff ; '.'
000000000000c257         db  0xff ; '.'
000000000000c258         db  0x64 ; 'd'
000000000000c259         db  0xad ; '.'
000000000000c25a         db  0xff ; '.'
000000000000c25b         db  0xff ; '.'
000000000000c25c         db  0x94 ; '.'
000000000000c25d         db  0xad ; '.'
000000000000c25e         db  0xff ; '.'
000000000000c25f         db  0xff ; '.'
000000000000c260         db  0x3c ; '<'
000000000000c261         db  0xad ; '.'
000000000000c262         db  0xff ; '.'
000000000000c263         db  0xff ; '.'
000000000000c264         db  0x94 ; '.'
000000000000c265         db  0xad ; '.'
000000000000c266         db  0xff ; '.'
000000000000c267         db  0xff ; '.'
000000000000c268         db  0xf7 ; '.'
000000000000c269         db  0xab ; '.'
000000000000c26a         db  0xff ; '.'
000000000000c26b         db  0xff ; '.'
000000000000c26c         db  0x94 ; '.'
000000000000c26d         db  0xad ; '.'
000000000000c26e         db  0xff ; '.'
000000000000c26f         db  0xff ; '.'
000000000000c270         db  0x94 ; '.'
000000000000c271         db  0xad ; '.'
000000000000c272         db  0xff ; '.'
000000000000c273         db  0xff ; '.'
000000000000c274         db  0x94 ; '.'
000000000000c275         db  0xad ; '.'
000000000000c276         db  0xff ; '.'
000000000000c277         db  0xff ; '.'
000000000000c278         db  0x3c ; '<'
000000000000c279         db  0xad ; '.'
000000000000c27a         db  0xff ; '.'
000000000000c27b         db  0xff ; '.'
000000000000c27c         db  0x3c ; '<'
000000000000c27d         db  0xad ; '.'
000000000000c27e         db  0xff ; '.'
000000000000c27f         db  0xff ; '.'
000000000000c280         db  0x3c ; '<'
000000000000c281         db  0xad ; '.'
000000000000c282         db  0xff ; '.'
000000000000c283         db  0xff ; '.'
000000000000c284         db  0x3c ; '<'
000000000000c285         db  0xad ; '.'
000000000000c286         db  0xff ; '.'
000000000000c287         db  0xff ; '.'
000000000000c288         db  0x3c ; '<'
000000000000c289         db  0xad ; '.'
000000000000c28a         db  0xff ; '.'
000000000000c28b         db  0xff ; '.'
000000000000c28c         db  0x3c ; '<'
000000000000c28d         db  0xad ; '.'
000000000000c28e         db  0xff ; '.'
000000000000c28f         db  0xff ; '.'
000000000000c290         db  0x3c ; '<'
000000000000c291         db  0xad ; '.'
000000000000c292         db  0xff ; '.'
000000000000c293         db  0xff ; '.'
000000000000c294         db  0x3c ; '<'
000000000000c295         db  0xad ; '.'
000000000000c296         db  0xff ; '.'
000000000000c297         db  0xff ; '.'
000000000000c298         db  0x3c ; '<'
000000000000c299         db  0xad ; '.'
000000000000c29a         db  0xff ; '.'
000000000000c29b         db  0xff ; '.'
000000000000c29c         db  0x3c ; '<'
000000000000c29d         db  0xad ; '.'
000000000000c29e         db  0xff ; '.'
000000000000c29f         db  0xff ; '.'
000000000000c2a0         db  0x3c ; '<'
000000000000c2a1         db  0xad ; '.'
000000000000c2a2         db  0xff ; '.'
000000000000c2a3         db  0xff ; '.'
000000000000c2a4         db  0x3c ; '<'
000000000000c2a5         db  0xad ; '.'
000000000000c2a6         db  0xff ; '.'
000000000000c2a7         db  0xff ; '.'
000000000000c2a8         db  0x3c ; '<'
000000000000c2a9         db  0xad ; '.'
000000000000c2aa         db  0xff ; '.'
000000000000c2ab         db  0xff ; '.'
000000000000c2ac         db  0x3c ; '<'
000000000000c2ad         db  0xad ; '.'
000000000000c2ae         db  0xff ; '.'
000000000000c2af         db  0xff ; '.'
000000000000c2b0         db  0x3c ; '<'
000000000000c2b1         db  0xad ; '.'
000000000000c2b2         db  0xff ; '.'
000000000000c2b3         db  0xff ; '.'
000000000000c2b4         db  0x3c ; '<'
000000000000c2b5         db  0xad ; '.'
000000000000c2b6         db  0xff ; '.'
000000000000c2b7         db  0xff ; '.'
000000000000c2b8         db  0x94 ; '.'
000000000000c2b9         db  0xad ; '.'
000000000000c2ba         db  0xff ; '.'
000000000000c2bb         db  0xff ; '.'
000000000000c2bc         db  0x94 ; '.'
000000000000c2bd         db  0xad ; '.'
000000000000c2be         db  0xff ; '.'
000000000000c2bf         db  0xff ; '.'
000000000000c2c0         db  0x94 ; '.'
000000000000c2c1         db  0xad ; '.'
000000000000c2c2         db  0xff ; '.'
000000000000c2c3         db  0xff ; '.'
000000000000c2c4         db  0x94 ; '.'
000000000000c2c5         db  0xad ; '.'
000000000000c2c6         db  0xff ; '.'
000000000000c2c7         db  0xff ; '.'
000000000000c2c8         db  0xc7 ; '.'
000000000000c2c9         db  0xab ; '.'
000000000000c2ca         db  0xff ; '.'
000000000000c2cb         db  0xff ; '.'
000000000000c2cc         db  0xfc ; '.'
000000000000c2cd         db  0xad ; '.'
000000000000c2ce         db  0xff ; '.'
000000000000c2cf         db  0xff ; '.'
000000000000c2d0         db  0x3c ; '<'
000000000000c2d1         db  0xad ; '.'
000000000000c2d2         db  0xff ; '.'
000000000000c2d3         db  0xff ; '.'
000000000000c2d4         db  0x3c ; '<'
000000000000c2d5         db  0xad ; '.'
000000000000c2d6         db  0xff ; '.'
000000000000c2d7         db  0xff ; '.'
000000000000c2d8         db  0x3c ; '<'
000000000000c2d9         db  0xad ; '.'
000000000000c2da         db  0xff ; '.'
000000000000c2db         db  0xff ; '.'
000000000000c2dc         db  0x3c ; '<'
000000000000c2dd         db  0xad ; '.'
000000000000c2de         db  0xff ; '.'
000000000000c2df         db  0xff ; '.'
000000000000c2e0         db  0x3c ; '<'
000000000000c2e1         db  0xad ; '.'
000000000000c2e2         db  0xff ; '.'
000000000000c2e3         db  0xff ; '.'
000000000000c2e4         db  0x3c ; '<'
000000000000c2e5         db  0xad ; '.'
000000000000c2e6         db  0xff ; '.'
000000000000c2e7         db  0xff ; '.'
000000000000c2e8         db  0x3c ; '<'
000000000000c2e9         db  0xad ; '.'
000000000000c2ea         db  0xff ; '.'
000000000000c2eb         db  0xff ; '.'
000000000000c2ec         db  0x3c ; '<'
000000000000c2ed         db  0xad ; '.'
000000000000c2ee         db  0xff ; '.'
000000000000c2ef         db  0xff ; '.'
000000000000c2f0         db  0x3c ; '<'
000000000000c2f1         db  0xad ; '.'
000000000000c2f2         db  0xff ; '.'
000000000000c2f3         db  0xff ; '.'
000000000000c2f4         db  0x3c ; '<'
000000000000c2f5         db  0xad ; '.'
000000000000c2f6         db  0xff ; '.'
000000000000c2f7         db  0xff ; '.'
000000000000c2f8         db  0x3c ; '<'
000000000000c2f9         db  0xad ; '.'
000000000000c2fa         db  0xff ; '.'
000000000000c2fb         db  0xff ; '.'
000000000000c2fc         db  0x3c ; '<'
000000000000c2fd         db  0xad ; '.'
000000000000c2fe         db  0xff ; '.'
000000000000c2ff         db  0xff ; '.'
000000000000c300         db  0x3c ; '<'
000000000000c301         db  0xad ; '.'
000000000000c302         db  0xff ; '.'
000000000000c303         db  0xff ; '.'
000000000000c304         db  0x3c ; '<'
000000000000c305         db  0xad ; '.'
000000000000c306         db  0xff ; '.'
000000000000c307         db  0xff ; '.'
000000000000c308         db  0x3c ; '<'
000000000000c309         db  0xad ; '.'
000000000000c30a         db  0xff ; '.'
000000000000c30b         db  0xff ; '.'
000000000000c30c         db  0x3c ; '<'
000000000000c30d         db  0xad ; '.'
000000000000c30e         db  0xff ; '.'
000000000000c30f         db  0xff ; '.'
000000000000c310         db  0x3c ; '<'
000000000000c311         db  0xad ; '.'
000000000000c312         db  0xff ; '.'
000000000000c313         db  0xff ; '.'
000000000000c314         db  0x3c ; '<'
000000000000c315         db  0xad ; '.'
000000000000c316         db  0xff ; '.'
000000000000c317         db  0xff ; '.'
000000000000c318         db  0x3c ; '<'
000000000000c319         db  0xad ; '.'
000000000000c31a         db  0xff ; '.'
000000000000c31b         db  0xff ; '.'
000000000000c31c         db  0x3c ; '<'
000000000000c31d         db  0xad ; '.'
000000000000c31e         db  0xff ; '.'
000000000000c31f         db  0xff ; '.'
000000000000c320         db  0x3c ; '<'
000000000000c321         db  0xad ; '.'
000000000000c322         db  0xff ; '.'
000000000000c323         db  0xff ; '.'
000000000000c324         db  0x3c ; '<'
000000000000c325         db  0xad ; '.'
000000000000c326         db  0xff ; '.'
000000000000c327         db  0xff ; '.'
000000000000c328         db  0x3c ; '<'
000000000000c329         db  0xad ; '.'
000000000000c32a         db  0xff ; '.'
000000000000c32b         db  0xff ; '.'
000000000000c32c         db  0x3c ; '<'
000000000000c32d         db  0xad ; '.'
000000000000c32e         db  0xff ; '.'
000000000000c32f         db  0xff ; '.'
000000000000c330         db  0x3c ; '<'
000000000000c331         db  0xad ; '.'
000000000000c332         db  0xff ; '.'
000000000000c333         db  0xff ; '.'
000000000000c334         db  0x3c ; '<'
000000000000c335         db  0xad ; '.'
000000000000c336         db  0xff ; '.'
000000000000c337         db  0xff ; '.'
000000000000c338         db  0x94 ; '.'
000000000000c339         db  0xad ; '.'
000000000000c33a         db  0xff ; '.'
000000000000c33b         db  0xff ; '.'
000000000000c33c         db  0x6c ; 'l'
000000000000c33d         db  0xac ; '.'
000000000000c33e         db  0xff ; '.'
000000000000c33f         db  0xff ; '.'
000000000000c340         db  0x3c ; '<'
000000000000c341         db  0xad ; '.'
000000000000c342         db  0xff ; '.'
000000000000c343         db  0xff ; '.'
000000000000c344         db  0x94 ; '.'
000000000000c345         db  0xad ; '.'
000000000000c346         db  0xff ; '.'
000000000000c347         db  0xff ; '.'
000000000000c348         db  0x3c ; '<'
000000000000c349         db  0xad ; '.'
000000000000c34a         db  0xff ; '.'
000000000000c34b         db  0xff ; '.'
000000000000c34c         db  0x94 ; '.'
000000000000c34d         db  0xad ; '.'
000000000000c34e         db  0xff ; '.'
000000000000c34f         db  0xff ; '.'
000000000000c350         db  0x3c ; '<'
000000000000c351         db  0xad ; '.'
000000000000c352         db  0xff ; '.'
000000000000c353         db  0xff ; '.'
000000000000c354         db  0x3c ; '<'
000000000000c355         db  0xad ; '.'
000000000000c356         db  0xff ; '.'
000000000000c357         db  0xff ; '.'
000000000000c358         db  0x3c ; '<'
000000000000c359         db  0xad ; '.'
000000000000c35a         db  0xff ; '.'
000000000000c35b         db  0xff ; '.'
000000000000c35c         db  0x3c ; '<'
000000000000c35d         db  0xad ; '.'
000000000000c35e         db  0xff ; '.'
000000000000c35f         db  0xff ; '.'
000000000000c360         db  0x3c ; '<'
000000000000c361         db  0xad ; '.'
000000000000c362         db  0xff ; '.'
000000000000c363         db  0xff ; '.'
000000000000c364         db  0x3c ; '<'
000000000000c365         db  0xad ; '.'
000000000000c366         db  0xff ; '.'
000000000000c367         db  0xff ; '.'
000000000000c368         db  0x3c ; '<'
000000000000c369         db  0xad ; '.'
000000000000c36a         db  0xff ; '.'
000000000000c36b         db  0xff ; '.'
000000000000c36c         db  0x3c ; '<'
000000000000c36d         db  0xad ; '.'
000000000000c36e         db  0xff ; '.'
000000000000c36f         db  0xff ; '.'
000000000000c370         db  0x3c ; '<'
000000000000c371         db  0xad ; '.'
000000000000c372         db  0xff ; '.'
000000000000c373         db  0xff ; '.'
000000000000c374         db  0x3c ; '<'
000000000000c375         db  0xad ; '.'
000000000000c376         db  0xff ; '.'
000000000000c377         db  0xff ; '.'
000000000000c378         db  0x3c ; '<'
000000000000c379         db  0xad ; '.'
000000000000c37a         db  0xff ; '.'
000000000000c37b         db  0xff ; '.'
000000000000c37c         db  0x3c ; '<'
000000000000c37d         db  0xad ; '.'
000000000000c37e         db  0xff ; '.'
000000000000c37f         db  0xff ; '.'
000000000000c380         db  0x3c ; '<'
000000000000c381         db  0xad ; '.'
000000000000c382         db  0xff ; '.'
000000000000c383         db  0xff ; '.'
000000000000c384         db  0x3c ; '<'
000000000000c385         db  0xad ; '.'
000000000000c386         db  0xff ; '.'
000000000000c387         db  0xff ; '.'
000000000000c388         db  0x3c ; '<'
000000000000c389         db  0xad ; '.'
000000000000c38a         db  0xff ; '.'
000000000000c38b         db  0xff ; '.'
000000000000c38c         db  0x3c ; '<'
000000000000c38d         db  0xad ; '.'
000000000000c38e         db  0xff ; '.'
000000000000c38f         db  0xff ; '.'
000000000000c390         db  0x3c ; '<'
000000000000c391         db  0xad ; '.'
000000000000c392         db  0xff ; '.'
000000000000c393         db  0xff ; '.'
000000000000c394         db  0x3c ; '<'
000000000000c395         db  0xad ; '.'
000000000000c396         db  0xff ; '.'
000000000000c397         db  0xff ; '.'
000000000000c398         db  0x3c ; '<'
000000000000c399         db  0xad ; '.'
000000000000c39a         db  0xff ; '.'
000000000000c39b         db  0xff ; '.'
000000000000c39c         db  0x3c ; '<'
000000000000c39d         db  0xad ; '.'
000000000000c39e         db  0xff ; '.'
000000000000c39f         db  0xff ; '.'
000000000000c3a0         db  0x3c ; '<'
000000000000c3a1         db  0xad ; '.'
000000000000c3a2         db  0xff ; '.'
000000000000c3a3         db  0xff ; '.'
000000000000c3a4         db  0x3c ; '<'
000000000000c3a5         db  0xad ; '.'
000000000000c3a6         db  0xff ; '.'
000000000000c3a7         db  0xff ; '.'
000000000000c3a8         db  0x3c ; '<'
000000000000c3a9         db  0xad ; '.'
000000000000c3aa         db  0xff ; '.'
000000000000c3ab         db  0xff ; '.'
000000000000c3ac         db  0x3c ; '<'
000000000000c3ad         db  0xad ; '.'
000000000000c3ae         db  0xff ; '.'
000000000000c3af         db  0xff ; '.'
000000000000c3b0         db  0x3c ; '<'
000000000000c3b1         db  0xad ; '.'
000000000000c3b2         db  0xff ; '.'
000000000000c3b3         db  0xff ; '.'
000000000000c3b4         db  0x3c ; '<'
000000000000c3b5         db  0xad ; '.'
000000000000c3b6         db  0xff ; '.'
000000000000c3b7         db  0xff ; '.'
000000000000c3b8         db  0xf7 ; '.'
000000000000c3b9         db  0xaa ; '.'
000000000000c3ba         db  0xff ; '.'
000000000000c3bb         db  0xff ; '.'
000000000000c3bc         db  0x94 ; '.'
000000000000c3bd         db  0xad ; '.'
000000000000c3be         db  0xff ; '.'
000000000000c3bf         db  0xff ; '.'
000000000000c3c0         db  0xf7 ; '.'
000000000000c3c1         db  0xaa ; '.'
000000000000c3c2         db  0xff ; '.'
000000000000c3c3         db  0xff ; '.'
000000000000c3c4         db  0x64 ; 'd'
000000000000c3c5         db  0xad ; '.'
000000000000c3c6         db  0xff ; '.'
000000000000c3c7         db  0xff ; '.'
000000000000c3c8         db  0xe8 ; '.'                                         ; DATA XREF=sub_6fb0+137
000000000000c3c9         db  0xac ; '.'
000000000000c3ca         db  0xff ; '.'
000000000000c3cb         db  0xff ; '.'
000000000000c3cc         db  0xf8 ; '.'
000000000000c3cd         db  0xab ; '.'
000000000000c3ce         db  0xff ; '.'
000000000000c3cf         db  0xff ; '.'
000000000000c3d0         db  0xf8 ; '.'
000000000000c3d1         db  0xab ; '.'
000000000000c3d2         db  0xff ; '.'
000000000000c3d3         db  0xff ; '.'
000000000000c3d4         db  0xf8 ; '.'
000000000000c3d5         db  0xab ; '.'
000000000000c3d6         db  0xff ; '.'
000000000000c3d7         db  0xff ; '.'
000000000000c3d8         db  0xf8 ; '.'
000000000000c3d9         db  0xab ; '.'
000000000000c3da         db  0xff ; '.'
000000000000c3db         db  0xff ; '.'
000000000000c3dc         db  0xf8 ; '.'
000000000000c3dd         db  0xab ; '.'
000000000000c3de         db  0xff ; '.'
000000000000c3df         db  0xff ; '.'
000000000000c3e0         db  0xf8 ; '.'
000000000000c3e1         db  0xab ; '.'
000000000000c3e2         db  0xff ; '.'
000000000000c3e3         db  0xff ; '.'
000000000000c3e4         db  0xd8 ; '.'
000000000000c3e5         db  0xac ; '.'
000000000000c3e6         db  0xff ; '.'
000000000000c3e7         db  0xff ; '.'
000000000000c3e8         db  0x28 ; '('
000000000000c3e9         db  0xae ; '.'
000000000000c3ea         db  0xff ; '.'
000000000000c3eb         db  0xff ; '.'
000000000000c3ec         db  0x10 ; '.'
000000000000c3ed         db  0xae ; '.'
000000000000c3ee         db  0xff ; '.'
000000000000c3ef         db  0xff ; '.'
000000000000c3f0         db  0xc0 ; '.'
000000000000c3f1         db  0xac ; '.'
000000000000c3f2         db  0xff ; '.'
000000000000c3f3         db  0xff ; '.'
000000000000c3f4         db  0x00 ; '.'
000000000000c3f5         db  0xae ; '.'
000000000000c3f6         db  0xff ; '.'
000000000000c3f7         db  0xff ; '.'
000000000000c3f8         db  0xa8 ; '.'
000000000000c3f9         db  0xac ; '.'
000000000000c3fa         db  0xff ; '.'
000000000000c3fb         db  0xff ; '.'
000000000000c3fc         db  0xe8 ; '.'
000000000000c3fd         db  0xad ; '.'
000000000000c3fe         db  0xff ; '.'
000000000000c3ff         db  0xff ; '.'
000000000000c400         db  0xf8 ; '.'
000000000000c401         db  0xab ; '.'
000000000000c402         db  0xff ; '.'
000000000000c403         db  0xff ; '.'
000000000000c404         db  0xf8 ; '.'
000000000000c405         db  0xab ; '.'
000000000000c406         db  0xff ; '.'
000000000000c407         db  0xff ; '.'
000000000000c408         db  0xf8 ; '.'
000000000000c409         db  0xab ; '.'
000000000000c40a         db  0xff ; '.'
000000000000c40b         db  0xff ; '.'
000000000000c40c         db  0xf8 ; '.'
000000000000c40d         db  0xab ; '.'
000000000000c40e         db  0xff ; '.'
000000000000c40f         db  0xff ; '.'
000000000000c410         db  0xf8 ; '.'
000000000000c411         db  0xab ; '.'
000000000000c412         db  0xff ; '.'
000000000000c413         db  0xff ; '.'
000000000000c414         db  0xf8 ; '.'
000000000000c415         db  0xab ; '.'
000000000000c416         db  0xff ; '.'
000000000000c417         db  0xff ; '.'
000000000000c418         db  0xf8 ; '.'
000000000000c419         db  0xab ; '.'
000000000000c41a         db  0xff ; '.'
000000000000c41b         db  0xff ; '.'
000000000000c41c         db  0xf8 ; '.'
000000000000c41d         db  0xab ; '.'
000000000000c41e         db  0xff ; '.'
000000000000c41f         db  0xff ; '.'
000000000000c420         db  0xf8 ; '.'
000000000000c421         db  0xab ; '.'
000000000000c422         db  0xff ; '.'
000000000000c423         db  0xff ; '.'
000000000000c424         db  0xf8 ; '.'
000000000000c425         db  0xab ; '.'
000000000000c426         db  0xff ; '.'
000000000000c427         db  0xff ; '.'
000000000000c428         db  0xf8 ; '.'
000000000000c429         db  0xab ; '.'
000000000000c42a         db  0xff ; '.'
000000000000c42b         db  0xff ; '.'
000000000000c42c         db  0xf8 ; '.'
000000000000c42d         db  0xab ; '.'
000000000000c42e         db  0xff ; '.'
000000000000c42f         db  0xff ; '.'
000000000000c430         db  0xf8 ; '.'
000000000000c431         db  0xab ; '.'
000000000000c432         db  0xff ; '.'
000000000000c433         db  0xff ; '.'
000000000000c434         db  0xf8 ; '.'
000000000000c435         db  0xab ; '.'
000000000000c436         db  0xff ; '.'
000000000000c437         db  0xff ; '.'
000000000000c438         db  0xf8 ; '.'
000000000000c439         db  0xab ; '.'
000000000000c43a         db  0xff ; '.'
000000000000c43b         db  0xff ; '.'
000000000000c43c         db  0xf8 ; '.'
000000000000c43d         db  0xab ; '.'
000000000000c43e         db  0xff ; '.'
000000000000c43f         db  0xff ; '.'
000000000000c440         db  0xf8 ; '.'
000000000000c441         db  0xab ; '.'
000000000000c442         db  0xff ; '.'
000000000000c443         db  0xff ; '.'
000000000000c444         db  0xf8 ; '.'
000000000000c445         db  0xab ; '.'
000000000000c446         db  0xff ; '.'
000000000000c447         db  0xff ; '.'
000000000000c448         db  0xd0 ; '.'
000000000000c449         db  0xad ; '.'
000000000000c44a         db  0xff ; '.'
000000000000c44b         db  0xff ; '.'
000000000000c44c         db  0xb8 ; '.'
000000000000c44d         db  0xad ; '.'
000000000000c44e         db  0xff ; '.'
000000000000c44f         db  0xff ; '.'
000000000000c450         db  0xb8 ; '.'
000000000000c451         db  0xad ; '.'
000000000000c452         db  0xff ; '.'
000000000000c453         db  0xff ; '.'
000000000000c454         db  0xa0 ; '.'
000000000000c455         db  0xad ; '.'
000000000000c456         db  0xff ; '.'
000000000000c457         db  0xff ; '.'
000000000000c458         db  0xb8 ; '.'
000000000000c459         db  0xad ; '.'
000000000000c45a         db  0xff ; '.'
000000000000c45b         db  0xff ; '.'
000000000000c45c         db  0x88 ; '.'
000000000000c45d         db  0xad ; '.'
000000000000c45e         db  0xff ; '.'
000000000000c45f         db  0xff ; '.'
000000000000c460         db  0xb8 ; '.'
000000000000c461         db  0xad ; '.'
000000000000c462         db  0xff ; '.'
000000000000c463         db  0xff ; '.'
000000000000c464         db  0xf8 ; '.'
000000000000c465         db  0xa9 ; '.'
000000000000c466         db  0xff ; '.'
000000000000c467         db  0xff ; '.'
000000000000c468         db  0xb8 ; '.'
000000000000c469         db  0xad ; '.'
000000000000c46a         db  0xff ; '.'
000000000000c46b         db  0xff ; '.'
000000000000c46c         db  0xb8 ; '.'
000000000000c46d         db  0xad ; '.'
000000000000c46e         db  0xff ; '.'
000000000000c46f         db  0xff ; '.'
000000000000c470         db  0xb8 ; '.'
000000000000c471         db  0xad ; '.'
000000000000c472         db  0xff ; '.'
000000000000c473         db  0xff ; '.'
000000000000c474         db  0x88 ; '.'
000000000000c475         db  0xad ; '.'
000000000000c476         db  0xff ; '.'
000000000000c477         db  0xff ; '.'
000000000000c478         db  0x88 ; '.'
000000000000c479         db  0xad ; '.'
000000000000c47a         db  0xff ; '.'
000000000000c47b         db  0xff ; '.'
000000000000c47c         db  0x88 ; '.'
000000000000c47d         db  0xad ; '.'
000000000000c47e         db  0xff ; '.'
000000000000c47f         db  0xff ; '.'
000000000000c480         db  0x88 ; '.'
000000000000c481         db  0xad ; '.'
000000000000c482         db  0xff ; '.'
000000000000c483         db  0xff ; '.'
000000000000c484         db  0x88 ; '.'
000000000000c485         db  0xad ; '.'
000000000000c486         db  0xff ; '.'
000000000000c487         db  0xff ; '.'
000000000000c488         db  0x88 ; '.'
000000000000c489         db  0xad ; '.'
000000000000c48a         db  0xff ; '.'
000000000000c48b         db  0xff ; '.'
000000000000c48c         db  0x88 ; '.'
000000000000c48d         db  0xad ; '.'
000000000000c48e         db  0xff ; '.'
000000000000c48f         db  0xff ; '.'
000000000000c490         db  0x88 ; '.'
000000000000c491         db  0xad ; '.'
000000000000c492         db  0xff ; '.'
000000000000c493         db  0xff ; '.'
000000000000c494         db  0x88 ; '.'
000000000000c495         db  0xad ; '.'
000000000000c496         db  0xff ; '.'
000000000000c497         db  0xff ; '.'
000000000000c498         db  0x88 ; '.'
000000000000c499         db  0xad ; '.'
000000000000c49a         db  0xff ; '.'
000000000000c49b         db  0xff ; '.'
000000000000c49c         db  0x88 ; '.'
000000000000c49d         db  0xad ; '.'
000000000000c49e         db  0xff ; '.'
000000000000c49f         db  0xff ; '.'
000000000000c4a0         db  0x88 ; '.'
000000000000c4a1         db  0xad ; '.'
000000000000c4a2         db  0xff ; '.'
000000000000c4a3         db  0xff ; '.'
000000000000c4a4         db  0x88 ; '.'
000000000000c4a5         db  0xad ; '.'
000000000000c4a6         db  0xff ; '.'
000000000000c4a7         db  0xff ; '.'
000000000000c4a8         db  0x88 ; '.'
000000000000c4a9         db  0xad ; '.'
000000000000c4aa         db  0xff ; '.'
000000000000c4ab         db  0xff ; '.'
000000000000c4ac         db  0x88 ; '.'
000000000000c4ad         db  0xad ; '.'
000000000000c4ae         db  0xff ; '.'
000000000000c4af         db  0xff ; '.'
000000000000c4b0         db  0x88 ; '.'
000000000000c4b1         db  0xad ; '.'
000000000000c4b2         db  0xff ; '.'
000000000000c4b3         db  0xff ; '.'
000000000000c4b4         db  0xb8 ; '.'
000000000000c4b5         db  0xad ; '.'
000000000000c4b6         db  0xff ; '.'
000000000000c4b7         db  0xff ; '.'
000000000000c4b8         db  0xb8 ; '.'
000000000000c4b9         db  0xad ; '.'
000000000000c4ba         db  0xff ; '.'
000000000000c4bb         db  0xff ; '.'
000000000000c4bc         db  0xb8 ; '.'
000000000000c4bd         db  0xad ; '.'
000000000000c4be         db  0xff ; '.'
000000000000c4bf         db  0xff ; '.'
000000000000c4c0         db  0xb8 ; '.'
000000000000c4c1         db  0xad ; '.'
000000000000c4c2         db  0xff ; '.'
000000000000c4c3         db  0xff ; '.'
000000000000c4c4         db  0xc8 ; '.'
000000000000c4c5         db  0xa9 ; '.'
000000000000c4c6         db  0xff ; '.'
000000000000c4c7         db  0xff ; '.'
000000000000c4c8         db  0xf8 ; '.'
000000000000c4c9         db  0xab ; '.'
000000000000c4ca         db  0xff ; '.'
000000000000c4cb         db  0xff ; '.'
000000000000c4cc         db  0x88 ; '.'
000000000000c4cd         db  0xad ; '.'
000000000000c4ce         db  0xff ; '.'
000000000000c4cf         db  0xff ; '.'
000000000000c4d0         db  0x88 ; '.'
000000000000c4d1         db  0xad ; '.'
000000000000c4d2         db  0xff ; '.'
000000000000c4d3         db  0xff ; '.'
000000000000c4d4         db  0x88 ; '.'
000000000000c4d5         db  0xad ; '.'
000000000000c4d6         db  0xff ; '.'
000000000000c4d7         db  0xff ; '.'
000000000000c4d8         db  0x88 ; '.'
000000000000c4d9         db  0xad ; '.'
000000000000c4da         db  0xff ; '.'
000000000000c4db         db  0xff ; '.'
000000000000c4dc         db  0x88 ; '.'
000000000000c4dd         db  0xad ; '.'
000000000000c4de         db  0xff ; '.'
000000000000c4df         db  0xff ; '.'
000000000000c4e0         db  0x88 ; '.'
000000000000c4e1         db  0xad ; '.'
000000000000c4e2         db  0xff ; '.'
000000000000c4e3         db  0xff ; '.'
000000000000c4e4         db  0x88 ; '.'
000000000000c4e5         db  0xad ; '.'
000000000000c4e6         db  0xff ; '.'
000000000000c4e7         db  0xff ; '.'
000000000000c4e8         db  0x88 ; '.'
000000000000c4e9         db  0xad ; '.'
000000000000c4ea         db  0xff ; '.'
000000000000c4eb         db  0xff ; '.'
000000000000c4ec         db  0x88 ; '.'
000000000000c4ed         db  0xad ; '.'
000000000000c4ee         db  0xff ; '.'
000000000000c4ef         db  0xff ; '.'
000000000000c4f0         db  0x88 ; '.'
000000000000c4f1         db  0xad ; '.'
000000000000c4f2         db  0xff ; '.'
000000000000c4f3         db  0xff ; '.'
000000000000c4f4         db  0x88 ; '.'
000000000000c4f5         db  0xad ; '.'
000000000000c4f6         db  0xff ; '.'
000000000000c4f7         db  0xff ; '.'
000000000000c4f8         db  0x88 ; '.'
000000000000c4f9         db  0xad ; '.'
000000000000c4fa         db  0xff ; '.'
000000000000c4fb         db  0xff ; '.'
000000000000c4fc         db  0x88 ; '.'
000000000000c4fd         db  0xad ; '.'
000000000000c4fe         db  0xff ; '.'
000000000000c4ff         db  0xff ; '.'
000000000000c500         db  0x88 ; '.'
000000000000c501         db  0xad ; '.'
000000000000c502         db  0xff ; '.'
000000000000c503         db  0xff ; '.'
000000000000c504         db  0x88 ; '.'
000000000000c505         db  0xad ; '.'
000000000000c506         db  0xff ; '.'
000000000000c507         db  0xff ; '.'
000000000000c508         db  0x88 ; '.'
000000000000c509         db  0xad ; '.'
000000000000c50a         db  0xff ; '.'
000000000000c50b         db  0xff ; '.'
000000000000c50c         db  0x88 ; '.'
000000000000c50d         db  0xad ; '.'
000000000000c50e         db  0xff ; '.'
000000000000c50f         db  0xff ; '.'
000000000000c510         db  0x88 ; '.'
000000000000c511         db  0xad ; '.'
000000000000c512         db  0xff ; '.'
000000000000c513         db  0xff ; '.'
000000000000c514         db  0x88 ; '.'
000000000000c515         db  0xad ; '.'
000000000000c516         db  0xff ; '.'
000000000000c517         db  0xff ; '.'
000000000000c518         db  0x88 ; '.'
000000000000c519         db  0xad ; '.'
000000000000c51a         db  0xff ; '.'
000000000000c51b         db  0xff ; '.'
000000000000c51c         db  0x88 ; '.'
000000000000c51d         db  0xad ; '.'
000000000000c51e         db  0xff ; '.'
000000000000c51f         db  0xff ; '.'
000000000000c520         db  0x88 ; '.'
000000000000c521         db  0xad ; '.'
000000000000c522         db  0xff ; '.'
000000000000c523         db  0xff ; '.'
000000000000c524         db  0x88 ; '.'
000000000000c525         db  0xad ; '.'
000000000000c526         db  0xff ; '.'
000000000000c527         db  0xff ; '.'
000000000000c528         db  0x88 ; '.'
000000000000c529         db  0xad ; '.'
000000000000c52a         db  0xff ; '.'
000000000000c52b         db  0xff ; '.'
000000000000c52c         db  0x88 ; '.'
000000000000c52d         db  0xad ; '.'
000000000000c52e         db  0xff ; '.'
000000000000c52f         db  0xff ; '.'
000000000000c530         db  0x88 ; '.'
000000000000c531         db  0xad ; '.'
000000000000c532         db  0xff ; '.'
000000000000c533         db  0xff ; '.'
000000000000c534         db  0xb8 ; '.'
000000000000c535         db  0xad ; '.'
000000000000c536         db  0xff ; '.'
000000000000c537         db  0xff ; '.'
000000000000c538         db  0x88 ; '.'
000000000000c539         db  0xac ; '.'
000000000000c53a         db  0xff ; '.'
000000000000c53b         db  0xff ; '.'
000000000000c53c         db  0x88 ; '.'
000000000000c53d         db  0xad ; '.'
000000000000c53e         db  0xff ; '.'
000000000000c53f         db  0xff ; '.'
000000000000c540         db  0xb8 ; '.'
000000000000c541         db  0xad ; '.'
000000000000c542         db  0xff ; '.'
000000000000c543         db  0xff ; '.'
000000000000c544         db  0x88 ; '.'
000000000000c545         db  0xad ; '.'
000000000000c546         db  0xff ; '.'
000000000000c547         db  0xff ; '.'
000000000000c548         db  0xb8 ; '.'
000000000000c549         db  0xad ; '.'
000000000000c54a         db  0xff ; '.'
000000000000c54b         db  0xff ; '.'
000000000000c54c         db  0x88 ; '.'
000000000000c54d         db  0xad ; '.'
000000000000c54e         db  0xff ; '.'
000000000000c54f         db  0xff ; '.'
000000000000c550         db  0x88 ; '.'
000000000000c551         db  0xad ; '.'
000000000000c552         db  0xff ; '.'
000000000000c553         db  0xff ; '.'
000000000000c554         db  0x88 ; '.'
000000000000c555         db  0xad ; '.'
000000000000c556         db  0xff ; '.'
000000000000c557         db  0xff ; '.'
000000000000c558         db  0x88 ; '.'
000000000000c559         db  0xad ; '.'
000000000000c55a         db  0xff ; '.'
000000000000c55b         db  0xff ; '.'
000000000000c55c         db  0x88 ; '.'
000000000000c55d         db  0xad ; '.'
000000000000c55e         db  0xff ; '.'
000000000000c55f         db  0xff ; '.'
000000000000c560         db  0x88 ; '.'
000000000000c561         db  0xad ; '.'
000000000000c562         db  0xff ; '.'
000000000000c563         db  0xff ; '.'
000000000000c564         db  0x88 ; '.'
000000000000c565         db  0xad ; '.'
000000000000c566         db  0xff ; '.'
000000000000c567         db  0xff ; '.'
000000000000c568         db  0x88 ; '.'
000000000000c569         db  0xad ; '.'
000000000000c56a         db  0xff ; '.'
000000000000c56b         db  0xff ; '.'
000000000000c56c         db  0x88 ; '.'
000000000000c56d         db  0xad ; '.'
000000000000c56e         db  0xff ; '.'
000000000000c56f         db  0xff ; '.'
000000000000c570         db  0x88 ; '.'
000000000000c571         db  0xad ; '.'
000000000000c572         db  0xff ; '.'
000000000000c573         db  0xff ; '.'
000000000000c574         db  0x88 ; '.'
000000000000c575         db  0xad ; '.'
000000000000c576         db  0xff ; '.'
000000000000c577         db  0xff ; '.'
000000000000c578         db  0x88 ; '.'
000000000000c579         db  0xad ; '.'
000000000000c57a         db  0xff ; '.'
000000000000c57b         db  0xff ; '.'
000000000000c57c         db  0x88 ; '.'
000000000000c57d         db  0xad ; '.'
000000000000c57e         db  0xff ; '.'
000000000000c57f         db  0xff ; '.'
000000000000c580         db  0x88 ; '.'
000000000000c581         db  0xad ; '.'
000000000000c582         db  0xff ; '.'
000000000000c583         db  0xff ; '.'
000000000000c584         db  0x88 ; '.'
000000000000c585         db  0xad ; '.'
000000000000c586         db  0xff ; '.'
000000000000c587         db  0xff ; '.'
000000000000c588         db  0x88 ; '.'
000000000000c589         db  0xad ; '.'
000000000000c58a         db  0xff ; '.'
000000000000c58b         db  0xff ; '.'
000000000000c58c         db  0x88 ; '.'
000000000000c58d         db  0xad ; '.'
000000000000c58e         db  0xff ; '.'
000000000000c58f         db  0xff ; '.'
000000000000c590         db  0x88 ; '.'
000000000000c591         db  0xad ; '.'
000000000000c592         db  0xff ; '.'
000000000000c593         db  0xff ; '.'
000000000000c594         db  0x88 ; '.'
000000000000c595         db  0xad ; '.'
000000000000c596         db  0xff ; '.'
000000000000c597         db  0xff ; '.'
000000000000c598         db  0x88 ; '.'
000000000000c599         db  0xad ; '.'
000000000000c59a         db  0xff ; '.'
000000000000c59b         db  0xff ; '.'
000000000000c59c         db  0x88 ; '.'
000000000000c59d         db  0xad ; '.'
000000000000c59e         db  0xff ; '.'
000000000000c59f         db  0xff ; '.'
000000000000c5a0         db  0x88 ; '.'
000000000000c5a1         db  0xad ; '.'
000000000000c5a2         db  0xff ; '.'
000000000000c5a3         db  0xff ; '.'
000000000000c5a4         db  0x88 ; '.'
000000000000c5a5         db  0xad ; '.'
000000000000c5a6         db  0xff ; '.'
000000000000c5a7         db  0xff ; '.'
000000000000c5a8         db  0x88 ; '.'
000000000000c5a9         db  0xad ; '.'
000000000000c5aa         db  0xff ; '.'
000000000000c5ab         db  0xff ; '.'
000000000000c5ac         db  0x88 ; '.'
000000000000c5ad         db  0xad ; '.'
000000000000c5ae         db  0xff ; '.'
000000000000c5af         db  0xff ; '.'
000000000000c5b0         db  0x88 ; '.'
000000000000c5b1         db  0xad ; '.'
000000000000c5b2         db  0xff ; '.'
000000000000c5b3         db  0xff ; '.'
000000000000c5b4         db  0xf8 ; '.'
000000000000c5b5         db  0xa8 ; '.'
000000000000c5b6         db  0xff ; '.'
000000000000c5b7         db  0xff ; '.'
000000000000c5b8         db  0xb8 ; '.'
000000000000c5b9         db  0xad ; '.'
000000000000c5ba         db  0xff ; '.'
000000000000c5bb         db  0xff ; '.'
000000000000c5bc         db  0xf8 ; '.'
000000000000c5bd         db  0xa8 ; '.'
000000000000c5be         db  0xff ; '.'
000000000000c5bf         db  0xff ; '.'
000000000000c5c0         db  0xa0 ; '.'
000000000000c5c1         db  0xad ; '.'
000000000000c5c2         db  0xff ; '.'
000000000000c5c3         db  0xff ; '.'
000000000000c5c4         db  0x00 ; '.'
000000000000c5c5         db  0x00 ; '.'
000000000000c5c6         db  0x00 ; '.'
000000000000c5c7         db  0x00 ; '.'
000000000000c5c8         db  0x00 ; '.'
000000000000c5c9         db  0x00 ; '.'
000000000000c5ca         db  0x00 ; '.'
000000000000c5cb         db  0x00 ; '.'
000000000000c5cc         db  0x00 ; '.'
000000000000c5cd         db  0x00 ; '.'
000000000000c5ce         db  0x00 ; '.'
000000000000c5cf         db  0x00 ; '.'
000000000000c5d0         db  0x00 ; '.'
000000000000c5d1         db  0x00 ; '.'
000000000000c5d2         db  0x00 ; '.'
000000000000c5d3         db  0x00 ; '.'
000000000000c5d4         db  0x00 ; '.'
000000000000c5d5         db  0x00 ; '.'
000000000000c5d6         db  0x00 ; '.'
000000000000c5d7         db  0x00 ; '.'
000000000000c5d8         db  0x00 ; '.'
000000000000c5d9         db  0x00 ; '.'
000000000000c5da         db  0x00 ; '.'
000000000000c5db         db  0x00 ; '.'
000000000000c5dc         db  0x00 ; '.'
000000000000c5dd         db  0x00 ; '.'
000000000000c5de         db  0x00 ; '.'
000000000000c5df         db  0x00 ; '.'
                     quoting_style_vals:
000000000000c5e0         db  0x00 ; '.'
000000000000c5e1         db  0x00 ; '.'
000000000000c5e2         db  0x00 ; '.'
000000000000c5e3         db  0x00 ; '.'
000000000000c5e4         db  0x01 ; '.'
000000000000c5e5         db  0x00 ; '.'
000000000000c5e6         db  0x00 ; '.'
000000000000c5e7         db  0x00 ; '.'
000000000000c5e8         db  0x02 ; '.'
000000000000c5e9         db  0x00 ; '.'
000000000000c5ea         db  0x00 ; '.'
000000000000c5eb         db  0x00 ; '.'
000000000000c5ec         db  0x03 ; '.'
000000000000c5ed         db  0x00 ; '.'
000000000000c5ee         db  0x00 ; '.'
000000000000c5ef         db  0x00 ; '.'
000000000000c5f0         db  0x04 ; '.'
000000000000c5f1         db  0x00 ; '.'
000000000000c5f2         db  0x00 ; '.'
000000000000c5f3         db  0x00 ; '.'
000000000000c5f4         db  0x05 ; '.'
000000000000c5f5         db  0x00 ; '.'
000000000000c5f6         db  0x00 ; '.'
000000000000c5f7         db  0x00 ; '.'
000000000000c5f8         db  0x06 ; '.'
000000000000c5f9         db  0x00 ; '.'
000000000000c5fa         db  0x00 ; '.'
000000000000c5fb         db  0x00 ; '.'
000000000000c5fc         db  0x07 ; '.'
000000000000c5fd         db  0x00 ; '.'
000000000000c5fe         db  0x00 ; '.'
000000000000c5ff         db  0x00 ; '.'
000000000000c600         db  0x08 ; '.'
000000000000c601         db  0x00 ; '.'
000000000000c602         db  0x00 ; '.'
000000000000c603         db  0x00 ; '.'
000000000000c604         db  0x09 ; '.'
000000000000c605         db  0x00 ; '.'
000000000000c606         db  0x00 ; '.'
000000000000c607         db  0x00 ; '.'
                     aCoreutils831li:
000000000000c608         db         "../coreutils-8.31/lib/tempname.c", 0       ; DATA XREF=gen_tempname_len+29
000000000000c629         align      16
                     aInvalidKindInG:
000000000000c630         db         "! \"invalid KIND in __gen_tempname\"", 0   ; DATA XREF=gen_tempname_len+36
000000000000c653         align      32
                     __PRETTY_FUNCTION__.5642:
000000000000c660         db         "gen_tempname_len", 0                       ; DATA XREF=gen_tempname_len+22
000000000000c671         align      128
                     letters:
000000000000c680         db         "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789", 0 ; DATA XREF=try_tempname_len+144
                     aSSSn:
000000000000c6bf         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
000000000000c6cb         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
000000000000c6d2         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
000000000000c6d3         db  0x43 ; 'C'
000000000000c6d4         db  0x29 ; ')'
000000000000c6d5         db  0x00 ; '.'
                     aWrittenBySn:
000000000000c6d6         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
000000000000c6e6         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
000000000000c6fd         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
000000000000c719         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
000000000000c72e         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
000000000000c744         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
                     aNlicenseGplv3G:
000000000000c758         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
000000000000c824         align      8
                     aWrittenBySSSna:
000000000000c828         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_c848:        // aWrittenBySSSns
000000000000c848         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
000000000000c86c         align      16
                     aWrittenBySSSns_c870:        // aWrittenBySSSns
000000000000c870         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_c898:        // aWrittenBySSSns
000000000000c898         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
000000000000c8c4         align      8
                     aWrittenBySSSns_c8c8:        // aWrittenBySSSns
000000000000c8c8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
000000000000c8f8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
000000000000c92c         align      16
                     aWrittenBySSSns_c930:        // aWrittenBySSSns
000000000000c930         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
000000000000c96c         align      16
                     aGeneralHelpUsi:
000000000000c970         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
000000000000c9b1         align      8
                     switch_table_c9b8:        // switch_table
000000000000c9b8         dd         version_etc_arn.loc_8f16-switch_table_c9b8, version_etc_arn.loc_8fa8-switch_table_c9b8, version_etc_arn.loc_8fe8-switch_table_c9b8, version_etc_arn.loc_9030-switch_table_c9b8 ; switch table used at 0x8e94 containing 10 entries, DATA XREF=version_etc_arn+150
000000000000c9c8         dd         version_etc_arn.loc_9080-switch_table_c9b8, version_etc_arn.loc_90d8-switch_table_c9b8, version_etc_arn.loc_9108-switch_table_c9b8, version_etc_arn.loc_9170-switch_table_c9b8
000000000000c9d8         dd         version_etc_arn.loc_8ea0-switch_table_c9b8, version_etc_arn.loc_8f50-switch_table_c9b8
                     version_etc_copyright:
000000000000c9e0         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
000000000000ca0f         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
                     aInvalidArgumen:
000000000000ca20         db         "invalid argument %s for %s", 0             ; DATA XREF=argmatch_invalid+96
                     aAmbiguousArgum:
000000000000ca3b         db         "ambiguous argument %s for %s", 0           ; DATA XREF=argmatch_invalid+21
                     aValidArguments:
000000000000ca58         db         "Valid arguments are:", 0                   ; DATA XREF=argmatch_valid+18
                     aNS:
000000000000ca6d         db         "\n  - %s", 0                               ; DATA XREF=argmatch_valid+102
000000000000ca75         db  0x2c ; ','                                         ; DATA XREF=argmatch_valid+181
000000000000ca76         db  0x20 ; ' '
000000000000ca77         db  0x25 ; '%'                                         ; DATA XREF=relpath+499, close_stdin+242, close_stdout+143, same_nameat.part.0+223, same_nameat.part.0+263, xalloc_die+29
000000000000ca78         db  0x73 ; 's'
000000000000ca79         db  0x00 ; '.'
000000000000ca7a         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
000000000000ca7b         db  0x00 ; '.'
                     aPosix:
000000000000ca7c         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
000000000000ca82         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
                     aSEndOfFile:
000000000000ca88         db         "%s: end of file", 0                        ; DATA XREF=randread_error+77
                     aSReadError:
000000000000ca98         db         "%s: read error", 0                         ; DATA XREF=randread_error+37
                     aDevurandom:
000000000000caa7         db         "/dev/urandom", 0                           ; DATA XREF=randread_new+203
000000000000cab4         db  0x72 ; 'r'                                         ; DATA XREF=randread_new+50
000000000000cab5         db  0x62 ; 'b'
000000000000cab6         db  0x00 ; '.'
000000000000cab7         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0xcab8; 0xd024[ (1388 bytes)
        ; File offset : [51896; 53284[ (1388 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

000000000000cab8         db  0x01 ; '.'
000000000000cab9         db  0x1b ; '.'
000000000000caba         db  0x03 ; '.'
000000000000cabb         db  0x3b ; ';'
000000000000cabc         db  0x6c ; 'l'
000000000000cabd         db  0x05 ; '.'
000000000000cabe         db  0x00 ; '.'
000000000000cabf         db  0x00 ; '.'
000000000000cac0         db  0xac ; '.'
000000000000cac1         db  0x00 ; '.'
000000000000cac2         db  0x00 ; '.'
000000000000cac3         db  0x00 ; '.'
000000000000cac4         db  0xd8 ; '.'
000000000000cac5         db  0x52 ; 'R'
000000000000cac6         db  0xff ; '.'
000000000000cac7         db  0xff ; '.'
000000000000cac8         db  0xb8 ; '.'
000000000000cac9         db  0x05 ; '.'
000000000000caca         db  0x00 ; '.'
000000000000cacb         db  0x00 ; '.'
000000000000cacc         db  0xf8 ; '.'
000000000000cacd         db  0x57 ; 'W'
000000000000cace         db  0xff ; '.'
000000000000cacf         db  0xff ; '.'
000000000000cad0         db  0xe0 ; '.'
000000000000cad1         db  0x05 ; '.'
000000000000cad2         db  0x00 ; '.'
000000000000cad3         db  0x00 ; '.'
000000000000cad4         db  0x08 ; '.'
000000000000cad5         db  0x58 ; 'X'
000000000000cad6         db  0xff ; '.'
000000000000cad7         db  0xff ; '.'
000000000000cad8         db  0xb4 ; '.'
000000000000cad9         db  0x06 ; '.'
000000000000cada         db  0x00 ; '.'
000000000000cadb         db  0x00 ; '.'
000000000000cadc         db  0xf8 ; '.'
000000000000cadd         db  0x5f ; '_'
000000000000cade         db  0xff ; '.'
000000000000cadf         db  0xff ; '.'
000000000000cae0         db  0x88 ; '.'
000000000000cae1         db  0x05 ; '.'
000000000000cae2         db  0x00 ; '.'
000000000000cae3         db  0x00 ; '.'
000000000000cae4         db  0x08 ; '.'
000000000000cae5         db  0x61 ; 'a'
000000000000cae6         db  0xff ; '.'
000000000000cae7         db  0xff ; '.'
000000000000cae8         db  0xf8 ; '.'
000000000000cae9         db  0x05 ; '.'
000000000000caea         db  0x00 ; '.'
000000000000caeb         db  0x00 ; '.'
000000000000caec         db  0x88 ; '.'
000000000000caed         db  0x61 ; 'a'
000000000000caee         db  0xff ; '.'
000000000000caef         db  0xff ; '.'
000000000000caf0         db  0x18 ; '.'
000000000000caf1         db  0x06 ; '.'
000000000000caf2         db  0x00 ; '.'
000000000000caf3         db  0x00 ; '.'
000000000000caf4         db  0x08 ; '.'
000000000000caf5         db  0x6c ; 'l'
000000000000caf6         db  0xff ; '.'
000000000000caf7         db  0xff ; '.'
000000000000caf8         db  0x88 ; '.'
000000000000caf9         db  0x06 ; '.'
000000000000cafa         db  0x00 ; '.'
000000000000cafb         db  0x00 ; '.'
000000000000cafc         db  0x68 ; 'h'
000000000000cafd         db  0x70 ; 'p'
000000000000cafe         db  0xff ; '.'
000000000000caff         db  0xff ; '.'
000000000000cb00         db  0x10 ; '.'
000000000000cb01         db  0x07 ; '.'
000000000000cb02         db  0x00 ; '.'
000000000000cb03         db  0x00 ; '.'
000000000000cb04         db  0x88 ; '.'
000000000000cb05         db  0x70 ; 'p'
000000000000cb06         db  0xff ; '.'
000000000000cb07         db  0xff ; '.'
000000000000cb08         db  0x24 ; '$'
000000000000cb09         db  0x07 ; '.'
000000000000cb0a         db  0x00 ; '.'
000000000000cb0b         db  0x00 ; '.'
000000000000cb0c         db  0xe8 ; '.'
000000000000cb0d         db  0x70 ; 'p'
000000000000cb0e         db  0xff ; '.'
000000000000cb0f         db  0xff ; '.'
000000000000cb10         db  0x50 ; 'P'
000000000000cb11         db  0x07 ; '.'
000000000000cb12         db  0x00 ; '.'
000000000000cb13         db  0x00 ; '.'
000000000000cb14         db  0x08 ; '.'
000000000000cb15         db  0x71 ; 'q'
000000000000cb16         db  0xff ; '.'
000000000000cb17         db  0xff ; '.'
000000000000cb18         db  0x64 ; 'd'
000000000000cb19         db  0x07 ; '.'
000000000000cb1a         db  0x00 ; '.'
000000000000cb1b         db  0x00 ; '.'
000000000000cb1c         db  0x78 ; 'x'
000000000000cb1d         db  0x72 ; 'r'
000000000000cb1e         db  0xff ; '.'
000000000000cb1f         db  0xff ; '.'
000000000000cb20         db  0xb0 ; '.'
000000000000cb21         db  0x07 ; '.'
000000000000cb22         db  0x00 ; '.'
000000000000cb23         db  0x00 ; '.'
000000000000cb24         db  0xd8 ; '.'
000000000000cb25         db  0x73 ; 's'
000000000000cb26         db  0xff ; '.'
000000000000cb27         db  0xff ; '.'
000000000000cb28         db  0xf8 ; '.'
000000000000cb29         db  0x07 ; '.'
000000000000cb2a         db  0x00 ; '.'
000000000000cb2b         db  0x00 ; '.'
000000000000cb2c         db  0x58 ; 'X'
000000000000cb2d         db  0x74 ; 't'
000000000000cb2e         db  0xff ; '.'
000000000000cb2f         db  0xff ; '.'
000000000000cb30         db  0x58 ; 'X'
000000000000cb31         db  0x08 ; '.'
000000000000cb32         db  0x00 ; '.'
000000000000cb33         db  0x00 ; '.'
000000000000cb34         db  0x98 ; '.'
000000000000cb35         db  0x76 ; 'v'
000000000000cb36         db  0xff ; '.'
000000000000cb37         db  0xff ; '.'
000000000000cb38         db  0xc0 ; '.'
000000000000cb39         db  0x08 ; '.'
000000000000cb3a         db  0x00 ; '.'
000000000000cb3b         db  0x00 ; '.'
000000000000cb3c         db  0xe8 ; '.'
000000000000cb3d         db  0x76 ; 'v'
000000000000cb3e         db  0xff ; '.'
000000000000cb3f         db  0xff ; '.'
000000000000cb40         db  0xdc ; '.'
000000000000cb41         db  0x08 ; '.'
000000000000cb42         db  0x00 ; '.'
000000000000cb43         db  0x00 ; '.'
000000000000cb44         db  0x08 ; '.'
000000000000cb45         db  0x7d ; '}'
000000000000cb46         db  0xff ; '.'
000000000000cb47         db  0xff ; '.'
000000000000cb48         db  0x30 ; '0'
000000000000cb49         db  0x09 ; '.'
000000000000cb4a         db  0x00 ; '.'
000000000000cb4b         db  0x00 ; '.'
000000000000cb4c         db  0x48 ; 'H'
000000000000cb4d         db  0x7d ; '}'
000000000000cb4e         db  0xff ; '.'
000000000000cb4f         db  0xff ; '.'
000000000000cb50         db  0x48 ; 'H'
000000000000cb51         db  0x09 ; '.'
000000000000cb52         db  0x00 ; '.'
000000000000cb53         db  0x00 ; '.'
000000000000cb54         db  0x68 ; 'h'
000000000000cb55         db  0x7d ; '}'
000000000000cb56         db  0xff ; '.'
000000000000cb57         db  0xff ; '.'
000000000000cb58         db  0x64 ; 'd'
000000000000cb59         db  0x09 ; '.'
000000000000cb5a         db  0x00 ; '.'
000000000000cb5b         db  0x00 ; '.'
000000000000cb5c         db  0x88 ; '.'
000000000000cb5d         db  0x7d ; '}'
000000000000cb5e         db  0xff ; '.'
000000000000cb5f         db  0xff ; '.'
000000000000cb60         db  0x78 ; 'x'
000000000000cb61         db  0x09 ; '.'
000000000000cb62         db  0x00 ; '.'
000000000000cb63         db  0x00 ; '.'
000000000000cb64         db  0xd8 ; '.'
000000000000cb65         db  0x7d ; '}'
000000000000cb66         db  0xff ; '.'
000000000000cb67         db  0xff ; '.'
000000000000cb68         db  0x98 ; '.'
000000000000cb69         db  0x09 ; '.'
000000000000cb6a         db  0x00 ; '.'
000000000000cb6b         db  0x00 ; '.'
000000000000cb6c         db  0x18 ; '.'
000000000000cb6d         db  0x84 ; '.'
000000000000cb6e         db  0xff ; '.'
000000000000cb6f         db  0xff ; '.'
000000000000cb70         db  0xe8 ; '.'
000000000000cb71         db  0x09 ; '.'
000000000000cb72         db  0x00 ; '.'
000000000000cb73         db  0x00 ; '.'
000000000000cb74         db  0x28 ; '('
000000000000cb75         db  0x84 ; '.'
000000000000cb76         db  0xff ; '.'
000000000000cb77         db  0xff ; '.'
000000000000cb78         db  0xfc ; '.'
000000000000cb79         db  0x09 ; '.'
000000000000cb7a         db  0x00 ; '.'
000000000000cb7b         db  0x00 ; '.'
000000000000cb7c         db  0x38 ; '8'
000000000000cb7d         db  0x85 ; '.'
000000000000cb7e         db  0xff ; '.'
000000000000cb7f         db  0xff ; '.'
000000000000cb80         db  0x38 ; '8'
000000000000cb81         db  0x0a ; '.'
000000000000cb82         db  0x00 ; '.'
000000000000cb83         db  0x00 ; '.'
000000000000cb84         db  0x48 ; 'H'
000000000000cb85         db  0x85 ; '.'
000000000000cb86         db  0xff ; '.'
000000000000cb87         db  0xff ; '.'
000000000000cb88         db  0x4c ; 'L'
000000000000cb89         db  0x0a ; '.'
000000000000cb8a         db  0x00 ; '.'
000000000000cb8b         db  0x00 ; '.'
000000000000cb8c         db  0x58 ; 'X'
000000000000cb8d         db  0x85 ; '.'
000000000000cb8e         db  0xff ; '.'
000000000000cb8f         db  0xff ; '.'
000000000000cb90         db  0x60 ; '`'
000000000000cb91         db  0x0a ; '.'
000000000000cb92         db  0x00 ; '.'
000000000000cb93         db  0x00 ; '.'
000000000000cb94         db  0x08 ; '.'
000000000000cb95         db  0x86 ; '.'
000000000000cb96         db  0xff ; '.'
000000000000cb97         db  0xff ; '.'
000000000000cb98         db  0x90 ; '.'
000000000000cb99         db  0x0a ; '.'
000000000000cb9a         db  0x00 ; '.'
000000000000cb9b         db  0x00 ; '.'
000000000000cb9c         db  0x28 ; '('
000000000000cb9d         db  0x86 ; '.'
000000000000cb9e         db  0xff ; '.'
000000000000cb9f         db  0xff ; '.'
000000000000cba0         db  0xb0 ; '.'
000000000000cba1         db  0x0a ; '.'
000000000000cba2         db  0x00 ; '.'
000000000000cba3         db  0x00 ; '.'
000000000000cba4         db  0x88 ; '.'
000000000000cba5         db  0x86 ; '.'
000000000000cba6         db  0xff ; '.'
000000000000cba7         db  0xff ; '.'
000000000000cba8         db  0xe4 ; '.'
000000000000cba9         db  0x0a ; '.'
000000000000cbaa         db  0x00 ; '.'
000000000000cbab         db  0x00 ; '.'
000000000000cbac         db  0xe8 ; '.'
000000000000cbad         db  0x86 ; '.'
000000000000cbae         db  0xff ; '.'
000000000000cbaf         db  0xff ; '.'
000000000000cbb0         db  0x10 ; '.'
000000000000cbb1         db  0x0b ; '.'
000000000000cbb2         db  0x00 ; '.'
000000000000cbb3         db  0x00 ; '.'
000000000000cbb4         db  0x48 ; 'H'
000000000000cbb5         db  0x87 ; '.'
000000000000cbb6         db  0xff ; '.'
000000000000cbb7         db  0xff ; '.'
000000000000cbb8         db  0x24 ; '$'
000000000000cbb9         db  0x0b ; '.'
000000000000cbba         db  0x00 ; '.'
000000000000cbbb         db  0x00 ; '.'
000000000000cbbc         db  0x98 ; '.'
000000000000cbbd         db  0x87 ; '.'
000000000000cbbe         db  0xff ; '.'
000000000000cbbf         db  0xff ; '.'
000000000000cbc0         db  0x50 ; 'P'
000000000000cbc1         db  0x0b ; '.'
000000000000cbc2         db  0x00 ; '.'
000000000000cbc3         db  0x00 ; '.'
000000000000cbc4         db  0xd8 ; '.'
000000000000cbc5         db  0x87 ; '.'
000000000000cbc6         db  0xff ; '.'
000000000000cbc7         db  0xff ; '.'
000000000000cbc8         db  0x78 ; 'x'
000000000000cbc9         db  0x0b ; '.'
000000000000cbca         db  0x00 ; '.'
000000000000cbcb         db  0x00 ; '.'
000000000000cbcc         db  0x68 ; 'h'
000000000000cbcd         db  0x88 ; '.'
000000000000cbce         db  0xff ; '.'
000000000000cbcf         db  0xff ; '.'
000000000000cbd0         db  0xd8 ; '.'
000000000000cbd1         db  0x0b ; '.'
000000000000cbd2         db  0x00 ; '.'
000000000000cbd3         db  0x00 ; '.'
000000000000cbd4         db  0xc8 ; '.'
000000000000cbd5         db  0x88 ; '.'
000000000000cbd6         db  0xff ; '.'
000000000000cbd7         db  0xff ; '.'
000000000000cbd8         db  0xf8 ; '.'
000000000000cbd9         db  0x0b ; '.'
000000000000cbda         db  0x00 ; '.'
000000000000cbdb         db  0x00 ; '.'
000000000000cbdc         db  0xe8 ; '.'
000000000000cbdd         db  0x88 ; '.'
000000000000cbde         db  0xff ; '.'
000000000000cbdf         db  0xff ; '.'
000000000000cbe0         db  0x18 ; '.'
000000000000cbe1         db  0x0c ; '.'
000000000000cbe2         db  0x00 ; '.'
000000000000cbe3         db  0x00 ; '.'
000000000000cbe4         db  0xe8 ; '.'
000000000000cbe5         db  0x89 ; '.'
000000000000cbe6         db  0xff ; '.'
000000000000cbe7         db  0xff ; '.'
000000000000cbe8         db  0x68 ; 'h'
000000000000cbe9         db  0x0c ; '.'
000000000000cbea         db  0x00 ; '.'
000000000000cbeb         db  0x00 ; '.'
000000000000cbec         db  0x88 ; '.'
000000000000cbed         db  0x8a ; '.'
000000000000cbee         db  0xff ; '.'
000000000000cbef         db  0xff ; '.'
000000000000cbf0         db  0x7c ; '|'
000000000000cbf1         db  0x0c ; '.'
000000000000cbf2         db  0x00 ; '.'
000000000000cbf3         db  0x00 ; '.'
000000000000cbf4         db  0x98 ; '.'
000000000000cbf5         db  0x8a ; '.'
000000000000cbf6         db  0xff ; '.'
000000000000cbf7         db  0xff ; '.'
000000000000cbf8         db  0x90 ; '.'
000000000000cbf9         db  0x0c ; '.'
000000000000cbfa         db  0x00 ; '.'
000000000000cbfb         db  0x00 ; '.'
000000000000cbfc         db  0xa8 ; '.'
000000000000cbfd         db  0x8a ; '.'
000000000000cbfe         db  0xff ; '.'
000000000000cbff         db  0xff ; '.'
000000000000cc00         db  0xa4 ; '.'
000000000000cc01         db  0x0c ; '.'
000000000000cc02         db  0x00 ; '.'
000000000000cc03         db  0x00 ; '.'
000000000000cc04         db  0xd8 ; '.'
000000000000cc05         db  0x8a ; '.'
000000000000cc06         db  0xff ; '.'
000000000000cc07         db  0xff ; '.'
000000000000cc08         db  0xc0 ; '.'
000000000000cc09         db  0x0c ; '.'
000000000000cc0a         db  0x00 ; '.'
000000000000cc0b         db  0x00 ; '.'
000000000000cc0c         db  0xf8 ; '.'
000000000000cc0d         db  0x8b ; '.'
000000000000cc0e         db  0xff ; '.'
000000000000cc0f         db  0xff ; '.'
000000000000cc10         db  0x20 ; ' '
000000000000cc11         db  0x0d ; '.'
000000000000cc12         db  0x00 ; '.'
000000000000cc13         db  0x00 ; '.'
000000000000cc14         db  0x78 ; 'x'
000000000000cc15         db  0x8c ; '.'
000000000000cc16         db  0xff ; '.'
000000000000cc17         db  0xff ; '.'
000000000000cc18         db  0x34 ; '4'
000000000000cc19         db  0x0d ; '.'
000000000000cc1a         db  0x00 ; '.'
000000000000cc1b         db  0x00 ; '.'
000000000000cc1c         db  0xb8 ; '.'
000000000000cc1d         db  0x8d ; '.'
000000000000cc1e         db  0xff ; '.'
000000000000cc1f         db  0xff ; '.'
000000000000cc20         db  0x94 ; '.'
000000000000cc21         db  0x0d ; '.'
000000000000cc22         db  0x00 ; '.'
000000000000cc23         db  0x00 ; '.'
000000000000cc24         db  0xc8 ; '.'
000000000000cc25         db  0x8d ; '.'
000000000000cc26         db  0xff ; '.'
000000000000cc27         db  0xff ; '.'
000000000000cc28         db  0xa8 ; '.'
000000000000cc29         db  0x0d ; '.'
000000000000cc2a         db  0x00 ; '.'
000000000000cc2b         db  0x00 ; '.'
000000000000cc2c         db  0xd8 ; '.'
000000000000cc2d         db  0x8d ; '.'
000000000000cc2e         db  0xff ; '.'
000000000000cc2f         db  0xff ; '.'
000000000000cc30         db  0xbc ; '.'
000000000000cc31         db  0x0d ; '.'
000000000000cc32         db  0x00 ; '.'
000000000000cc33         db  0x00 ; '.'
000000000000cc34         db  0xe8 ; '.'
000000000000cc35         db  0x8d ; '.'
000000000000cc36         db  0xff ; '.'
000000000000cc37         db  0xff ; '.'
000000000000cc38         db  0xd0 ; '.'
000000000000cc39         db  0x0d ; '.'
000000000000cc3a         db  0x00 ; '.'
000000000000cc3b         db  0x00 ; '.'
000000000000cc3c         db  0x38 ; '8'
000000000000cc3d         db  0x8e ; '.'
000000000000cc3e         db  0xff ; '.'
000000000000cc3f         db  0xff ; '.'
000000000000cc40         db  0xe4 ; '.'
000000000000cc41         db  0x0d ; '.'
000000000000cc42         db  0x00 ; '.'
000000000000cc43         db  0x00 ; '.'
000000000000cc44         db  0x98 ; '.'
000000000000cc45         db  0x8e ; '.'
000000000000cc46         db  0xff ; '.'
000000000000cc47         db  0xff ; '.'
000000000000cc48         db  0xf8 ; '.'
000000000000cc49         db  0x0d ; '.'
000000000000cc4a         db  0x00 ; '.'
000000000000cc4b         db  0x00 ; '.'
000000000000cc4c         db  0xe8 ; '.'
000000000000cc4d         db  0x8f ; '.'
000000000000cc4e         db  0xff ; '.'
000000000000cc4f         db  0xff ; '.'
000000000000cc50         db  0x34 ; '4'
000000000000cc51         db  0x0e ; '.'
000000000000cc52         db  0x00 ; '.'
000000000000cc53         db  0x00 ; '.'
000000000000cc54         db  0x48 ; 'H'
000000000000cc55         db  0x90 ; '.'
000000000000cc56         db  0xff ; '.'
000000000000cc57         db  0xff ; '.'
000000000000cc58         db  0x6c ; 'l'
000000000000cc59         db  0x0e ; '.'
000000000000cc5a         db  0x00 ; '.'
000000000000cc5b         db  0x00 ; '.'
000000000000cc5c         db  0x98 ; '.'
000000000000cc5d         db  0x90 ; '.'
000000000000cc5e         db  0xff ; '.'
000000000000cc5f         db  0xff ; '.'
000000000000cc60         db  0x80 ; '.'
000000000000cc61         db  0x0e ; '.'
000000000000cc62         db  0x00 ; '.'
000000000000cc63         db  0x00 ; '.'
000000000000cc64         db  0x18 ; '.'
000000000000cc65         db  0x91 ; '.'
000000000000cc66         db  0xff ; '.'
000000000000cc67         db  0xff ; '.'
000000000000cc68         db  0xb4 ; '.'
000000000000cc69         db  0x0e ; '.'
000000000000cc6a         db  0x00 ; '.'
000000000000cc6b         db  0x00 ; '.'
000000000000cc6c         db  0x88 ; '.'
000000000000cc6d         db  0x91 ; '.'
000000000000cc6e         db  0xff ; '.'
000000000000cc6f         db  0xff ; '.'
000000000000cc70         db  0xc8 ; '.'
000000000000cc71         db  0x0e ; '.'
000000000000cc72         db  0x00 ; '.'
000000000000cc73         db  0x00 ; '.'
000000000000cc74         db  0xf8 ; '.'
000000000000cc75         db  0x91 ; '.'
000000000000cc76         db  0xff ; '.'
000000000000cc77         db  0xff ; '.'
000000000000cc78         db  0x14 ; '.'
000000000000cc79         db  0x0f ; '.'
000000000000cc7a         db  0x00 ; '.'
000000000000cc7b         db  0x00 ; '.'
000000000000cc7c         db  0x38 ; '8'
000000000000cc7d         db  0x92 ; '.'
000000000000cc7e         db  0xff ; '.'
000000000000cc7f         db  0xff ; '.'
000000000000cc80         db  0x28 ; '('
000000000000cc81         db  0x0f ; '.'
000000000000cc82         db  0x00 ; '.'
000000000000cc83         db  0x00 ; '.'
000000000000cc84         db  0x58 ; 'X'
000000000000cc85         db  0x92 ; '.'
000000000000cc86         db  0xff ; '.'
000000000000cc87         db  0xff ; '.'
000000000000cc88         db  0x3c ; '<'
000000000000cc89         db  0x0f ; '.'
000000000000cc8a         db  0x00 ; '.'
000000000000cc8b         db  0x00 ; '.'
000000000000cc8c         db  0x18 ; '.'
000000000000cc8d         db  0x94 ; '.'
000000000000cc8e         db  0xff ; '.'
000000000000cc8f         db  0xff ; '.'
000000000000cc90         db  0x88 ; '.'
000000000000cc91         db  0x0f ; '.'
000000000000cc92         db  0x00 ; '.'
000000000000cc93         db  0x00 ; '.'
000000000000cc94         db  0xa8 ; '.'
000000000000cc95         db  0x94 ; '.'
000000000000cc96         db  0xff ; '.'
000000000000cc97         db  0xff ; '.'
000000000000cc98         db  0xb4 ; '.'
000000000000cc99         db  0x0f ; '.'
000000000000cc9a         db  0x00 ; '.'
000000000000cc9b         db  0x00 ; '.'
000000000000cc9c         db  0x88 ; '.'
000000000000cc9d         db  0x95 ; '.'
000000000000cc9e         db  0xff ; '.'
000000000000cc9f         db  0xff ; '.'
000000000000cca0         db  0xe0 ; '.'
000000000000cca1         db  0x0f ; '.'
000000000000cca2         db  0x00 ; '.'
000000000000cca3         db  0x00 ; '.'
000000000000cca4         db  0xc8 ; '.'
000000000000cca5         db  0x97 ; '.'
000000000000cca6         db  0xff ; '.'
000000000000cca7         db  0xff ; '.'
000000000000cca8         db  0x18 ; '.'
000000000000cca9         db  0x10 ; '.'
000000000000ccaa         db  0x00 ; '.'
000000000000ccab         db  0x00 ; '.'
000000000000ccac         db  0x58 ; 'X'
000000000000ccad         db  0x9a ; '.'
000000000000ccae         db  0xff ; '.'
000000000000ccaf         db  0xff ; '.'
000000000000ccb0         db  0x54 ; 'T'
000000000000ccb1         db  0x10 ; '.'
000000000000ccb2         db  0x00 ; '.'
000000000000ccb3         db  0x00 ; '.'
000000000000ccb4         db  0xb8 ; '.'
000000000000ccb5         db  0x9a ; '.'
000000000000ccb6         db  0xff ; '.'
000000000000ccb7         db  0xff ; '.'
000000000000ccb8         db  0x78 ; 'x'
000000000000ccb9         db  0x10 ; '.'
000000000000ccba         db  0x00 ; '.'
000000000000ccbb         db  0x00 ; '.'
000000000000ccbc         db  0xc8 ; '.'
000000000000ccbd         db  0x9c ; '.'
000000000000ccbe         db  0xff ; '.'
000000000000ccbf         db  0xff ; '.'
000000000000ccc0         db  0xb0 ; '.'
000000000000ccc1         db  0x10 ; '.'
000000000000ccc2         db  0x00 ; '.'
000000000000ccc3         db  0x00 ; '.'
000000000000ccc4         db  0xf8 ; '.'
000000000000ccc5         db  0x9c ; '.'
000000000000ccc6         db  0xff ; '.'
000000000000ccc7         db  0xff ; '.'
000000000000ccc8         db  0xd8 ; '.'
000000000000ccc9         db  0x10 ; '.'
000000000000ccca         db  0x00 ; '.'
000000000000cccb         db  0x00 ; '.'
000000000000cccc         db  0x08 ; '.'
000000000000cccd         db  0x9d ; '.'
000000000000ccce         db  0xff ; '.'
000000000000cccf         db  0xff ; '.'
000000000000ccd0         db  0xec ; '.'
000000000000ccd1         db  0x10 ; '.'
000000000000ccd2         db  0x00 ; '.'
000000000000ccd3         db  0x00 ; '.'
000000000000ccd4         db  0x38 ; '8'
000000000000ccd5         db  0x9d ; '.'
000000000000ccd6         db  0xff ; '.'
000000000000ccd7         db  0xff ; '.'
000000000000ccd8         db  0x04 ; '.'
000000000000ccd9         db  0x11 ; '.'
000000000000ccda         db  0x00 ; '.'
000000000000ccdb         db  0x00 ; '.'
000000000000ccdc         db  0x78 ; 'x'
000000000000ccdd         db  0x9d ; '.'
000000000000ccde         db  0xff ; '.'
000000000000ccdf         db  0xff ; '.'
000000000000cce0         db  0x1c ; '.'
000000000000cce1         db  0x11 ; '.'
000000000000cce2         db  0x00 ; '.'
000000000000cce3         db  0x00 ; '.'
000000000000cce4         db  0x98 ; '.'
000000000000cce5         db  0x9d ; '.'
000000000000cce6         db  0xff ; '.'
000000000000cce7         db  0xff ; '.'
000000000000cce8         db  0x38 ; '8'
000000000000cce9         db  0x11 ; '.'
000000000000ccea         db  0x00 ; '.'
000000000000cceb         db  0x00 ; '.'
000000000000ccec         db  0x08 ; '.'
000000000000cced         db  0x9e ; '.'
000000000000ccee         db  0xff ; '.'
000000000000ccef         db  0xff ; '.'
000000000000ccf0         db  0x58 ; 'X'
000000000000ccf1         db  0x11 ; '.'
000000000000ccf2         db  0x00 ; '.'
000000000000ccf3         db  0x00 ; '.'
000000000000ccf4         db  0x88 ; '.'
000000000000ccf5         db  0x9e ; '.'
000000000000ccf6         db  0xff ; '.'
000000000000ccf7         db  0xff ; '.'
000000000000ccf8         db  0xb8 ; '.'
000000000000ccf9         db  0x11 ; '.'
000000000000ccfa         db  0x00 ; '.'
000000000000ccfb         db  0x00 ; '.'
000000000000ccfc         db  0x28 ; '('
000000000000ccfd         db  0x9f ; '.'
000000000000ccfe         db  0xff ; '.'
000000000000ccff         db  0xff ; '.'
000000000000cd00         db  0xd8 ; '.'
000000000000cd01         db  0x11 ; '.'
000000000000cd02         db  0x00 ; '.'
000000000000cd03         db  0x00 ; '.'
000000000000cd04         db  0x18 ; '.'
000000000000cd05         db  0xa0 ; '.'
000000000000cd06         db  0xff ; '.'
000000000000cd07         db  0xff ; '.'
000000000000cd08         db  0x1c ; '.'
000000000000cd09         db  0x12 ; '.'
000000000000cd0a         db  0x00 ; '.'
000000000000cd0b         db  0x00 ; '.'
000000000000cd0c         db  0x58 ; 'X'
000000000000cd0d         db  0xb2 ; '.'
000000000000cd0e         db  0xff ; '.'
000000000000cd0f         db  0xff ; '.'
000000000000cd10         db  0x94 ; '.'
000000000000cd11         db  0x12 ; '.'
000000000000cd12         db  0x00 ; '.'
000000000000cd13         db  0x00 ; '.'
000000000000cd14         db  0x08 ; '.'
000000000000cd15         db  0xb4 ; '.'
000000000000cd16         db  0xff ; '.'
000000000000cd17         db  0xff ; '.'
000000000000cd18         db  0x00 ; '.'
000000000000cd19         db  0x13 ; '.'
000000000000cd1a         db  0x00 ; '.'
000000000000cd1b         db  0x00 ; '.'
000000000000cd1c         db  0x48 ; 'H'
000000000000cd1d         db  0xb4 ; '.'
000000000000cd1e         db  0xff ; '.'
000000000000cd1f         db  0xff ; '.'
000000000000cd20         db  0x2c ; ','
000000000000cd21         db  0x13 ; '.'
000000000000cd22         db  0x00 ; '.'
000000000000cd23         db  0x00 ; '.'
000000000000cd24         db  0x68 ; 'h'
000000000000cd25         db  0xb4 ; '.'
000000000000cd26         db  0xff ; '.'
000000000000cd27         db  0xff ; '.'
000000000000cd28         db  0x40 ; '@'
000000000000cd29         db  0x13 ; '.'
000000000000cd2a         db  0x00 ; '.'
000000000000cd2b         db  0x00 ; '.'
000000000000cd2c         db  0x88 ; '.'
000000000000cd2d         db  0xb4 ; '.'
000000000000cd2e         db  0xff ; '.'
000000000000cd2f         db  0xff ; '.'
000000000000cd30         db  0x54 ; 'T'
000000000000cd31         db  0x13 ; '.'
000000000000cd32         db  0x00 ; '.'
000000000000cd33         db  0x00 ; '.'
000000000000cd34         db  0xc8 ; '.'
000000000000cd35         db  0xb4 ; '.'
000000000000cd36         db  0xff ; '.'
000000000000cd37         db  0xff ; '.'
000000000000cd38         db  0x68 ; 'h'
000000000000cd39         db  0x13 ; '.'
000000000000cd3a         db  0x00 ; '.'
000000000000cd3b         db  0x00 ; '.'
000000000000cd3c         db  0xe8 ; '.'
000000000000cd3d         db  0xb4 ; '.'
000000000000cd3e         db  0xff ; '.'
000000000000cd3f         db  0xff ; '.'
000000000000cd40         db  0x7c ; '|'
000000000000cd41         db  0x13 ; '.'
000000000000cd42         db  0x00 ; '.'
000000000000cd43         db  0x00 ; '.'
000000000000cd44         db  0x18 ; '.'
000000000000cd45         db  0xb5 ; '.'
000000000000cd46         db  0xff ; '.'
000000000000cd47         db  0xff ; '.'
000000000000cd48         db  0x90 ; '.'
000000000000cd49         db  0x13 ; '.'
000000000000cd4a         db  0x00 ; '.'
000000000000cd4b         db  0x00 ; '.'
000000000000cd4c         db  0x98 ; '.'
000000000000cd4d         db  0xb5 ; '.'
000000000000cd4e         db  0xff ; '.'
000000000000cd4f         db  0xff ; '.'
000000000000cd50         db  0xe4 ; '.'
000000000000cd51         db  0x13 ; '.'
000000000000cd52         db  0x00 ; '.'
000000000000cd53         db  0x00 ; '.'
000000000000cd54         db  0x88 ; '.'
000000000000cd55         db  0xb6 ; '.'
000000000000cd56         db  0xff ; '.'
000000000000cd57         db  0xff ; '.'
000000000000cd58         db  0x50 ; 'P'
000000000000cd59         db  0x14 ; '.'
000000000000cd5a         db  0x00 ; '.'
000000000000cd5b         db  0x00 ; '.'
000000000000cd5c         db  0x98 ; '.'
000000000000cd5d         db  0xb6 ; '.'
000000000000cd5e         db  0xff ; '.'
000000000000cd5f         db  0xff ; '.'
000000000000cd60         db  0x64 ; 'd'
000000000000cd61         db  0x14 ; '.'
000000000000cd62         db  0x00 ; '.'
000000000000cd63         db  0x00 ; '.'
000000000000cd64         db  0x38 ; '8'
000000000000cd65         db  0xb7 ; '.'
000000000000cd66         db  0xff ; '.'
000000000000cd67         db  0xff ; '.'
000000000000cd68         db  0x90 ; '.'
000000000000cd69         db  0x14 ; '.'
000000000000cd6a         db  0x00 ; '.'
000000000000cd6b         db  0x00 ; '.'
000000000000cd6c         db  0x58 ; 'X'
000000000000cd6d         db  0xb7 ; '.'
000000000000cd6e         db  0xff ; '.'
000000000000cd6f         db  0xff ; '.'
000000000000cd70         db  0xa4 ; '.'
000000000000cd71         db  0x14 ; '.'
000000000000cd72         db  0x00 ; '.'
000000000000cd73         db  0x00 ; '.'
000000000000cd74         db  0x68 ; 'h'
000000000000cd75         db  0xb7 ; '.'
000000000000cd76         db  0xff ; '.'
000000000000cd77         db  0xff ; '.'
000000000000cd78         db  0xb8 ; '.'
000000000000cd79         db  0x14 ; '.'
000000000000cd7a         db  0x00 ; '.'
000000000000cd7b         db  0x00 ; '.'
000000000000cd7c         db  0x88 ; '.'
000000000000cd7d         db  0xb7 ; '.'
000000000000cd7e         db  0xff ; '.'
000000000000cd7f         db  0xff ; '.'
000000000000cd80         db  0xcc ; '.'
000000000000cd81         db  0x14 ; '.'
000000000000cd82         db  0x00 ; '.'
000000000000cd83         db  0x00 ; '.'
000000000000cd84         db  0xa8 ; '.'
000000000000cd85         db  0xb7 ; '.'
000000000000cd86         db  0xff ; '.'
000000000000cd87         db  0xff ; '.'
000000000000cd88         db  0xe0 ; '.'
000000000000cd89         db  0x14 ; '.'
000000000000cd8a         db  0x00 ; '.'
000000000000cd8b         db  0x00 ; '.'
000000000000cd8c         db  0x38 ; '8'
000000000000cd8d         db  0xb8 ; '.'
000000000000cd8e         db  0xff ; '.'
000000000000cd8f         db  0xff ; '.'
000000000000cd90         db  0xfc ; '.'
000000000000cd91         db  0x14 ; '.'
000000000000cd92         db  0x00 ; '.'
000000000000cd93         db  0x00 ; '.'
000000000000cd94         db  0xc8 ; '.'
000000000000cd95         db  0xb8 ; '.'
000000000000cd96         db  0xff ; '.'
000000000000cd97         db  0xff ; '.'
000000000000cd98         db  0x18 ; '.'
000000000000cd99         db  0x15 ; '.'
000000000000cd9a         db  0x00 ; '.'
000000000000cd9b         db  0x00 ; '.'
000000000000cd9c         db  0xd8 ; '.'
000000000000cd9d         db  0xb8 ; '.'
000000000000cd9e         db  0xff ; '.'
000000000000cd9f         db  0xff ; '.'
000000000000cda0         db  0x2c ; ','
000000000000cda1         db  0x15 ; '.'
000000000000cda2         db  0x00 ; '.'
000000000000cda3         db  0x00 ; '.'
000000000000cda4         db  0xe8 ; '.'
000000000000cda5         db  0xb8 ; '.'
000000000000cda6         db  0xff ; '.'
000000000000cda7         db  0xff ; '.'
000000000000cda8         db  0x40 ; '@'
000000000000cda9         db  0x15 ; '.'
000000000000cdaa         db  0x00 ; '.'
000000000000cdab         db  0x00 ; '.'
000000000000cdac         db  0x88 ; '.'
000000000000cdad         db  0xb9 ; '.'
000000000000cdae         db  0xff ; '.'
000000000000cdaf         db  0xff ; '.'
000000000000cdb0         db  0x5c ; '\'
000000000000cdb1         db  0x15 ; '.'
000000000000cdb2         db  0x00 ; '.'
000000000000cdb3         db  0x00 ; '.'
000000000000cdb4         db  0x98 ; '.'
000000000000cdb5         db  0xb9 ; '.'
000000000000cdb6         db  0xff ; '.'
000000000000cdb7         db  0xff ; '.'
000000000000cdb8         db  0x70 ; 'p'
000000000000cdb9         db  0x15 ; '.'
000000000000cdba         db  0x00 ; '.'
000000000000cdbb         db  0x00 ; '.'
000000000000cdbc         db  0xb8 ; '.'
000000000000cdbd         db  0xb9 ; '.'
000000000000cdbe         db  0xff ; '.'
000000000000cdbf         db  0xff ; '.'
000000000000cdc0         db  0x84 ; '.'
000000000000cdc1         db  0x15 ; '.'
000000000000cdc2         db  0x00 ; '.'
000000000000cdc3         db  0x00 ; '.'
000000000000cdc4         db  0xc8 ; '.'
000000000000cdc5         db  0xb9 ; '.'
000000000000cdc6         db  0xff ; '.'
000000000000cdc7         db  0xff ; '.'
000000000000cdc8         db  0x98 ; '.'
000000000000cdc9         db  0x15 ; '.'
000000000000cdca         db  0x00 ; '.'
000000000000cdcb         db  0x00 ; '.'
000000000000cdcc         db  0x58 ; 'X'
000000000000cdcd         db  0xba ; '.'
000000000000cdce         db  0xff ; '.'
000000000000cdcf         db  0xff ; '.'
000000000000cdd0         db  0xb4 ; '.'
000000000000cdd1         db  0x15 ; '.'
000000000000cdd2         db  0x00 ; '.'
000000000000cdd3         db  0x00 ; '.'
000000000000cdd4         db  0xf8 ; '.'
000000000000cdd5         db  0xba ; '.'
000000000000cdd6         db  0xff ; '.'
000000000000cdd7         db  0xff ; '.'
000000000000cdd8         db  0xd0 ; '.'
000000000000cdd9         db  0x15 ; '.'
000000000000cdda         db  0x00 ; '.'
000000000000cddb         db  0x00 ; '.'
000000000000cddc         db  0x08 ; '.'
000000000000cddd         db  0xbb ; '.'
000000000000cdde         db  0xff ; '.'
000000000000cddf         db  0xff ; '.'
000000000000cde0         db  0xe4 ; '.'
000000000000cde1         db  0x15 ; '.'
000000000000cde2         db  0x00 ; '.'
000000000000cde3         db  0x00 ; '.'
000000000000cde4         db  0x28 ; '('
000000000000cde5         db  0xbb ; '.'
000000000000cde6         db  0xff ; '.'
000000000000cde7         db  0xff ; '.'
000000000000cde8         db  0xf8 ; '.'
000000000000cde9         db  0x15 ; '.'
000000000000cdea         db  0x00 ; '.'
000000000000cdeb         db  0x00 ; '.'
000000000000cdec         db  0x48 ; 'H'
000000000000cded         db  0xbb ; '.'
000000000000cdee         db  0xff ; '.'
000000000000cdef         db  0xff ; '.'
000000000000cdf0         db  0x0c ; '.'
000000000000cdf1         db  0x16 ; '.'
000000000000cdf2         db  0x00 ; '.'
000000000000cdf3         db  0x00 ; '.'
000000000000cdf4         db  0x58 ; 'X'
000000000000cdf5         db  0xbb ; '.'
000000000000cdf6         db  0xff ; '.'
000000000000cdf7         db  0xff ; '.'
000000000000cdf8         db  0x20 ; ' '
000000000000cdf9         db  0x16 ; '.'
000000000000cdfa         db  0x00 ; '.'
000000000000cdfb         db  0x00 ; '.'
000000000000cdfc         db  0x78 ; 'x'
000000000000cdfd         db  0xbb ; '.'
000000000000cdfe         db  0xff ; '.'
000000000000cdff         db  0xff ; '.'
000000000000ce00         db  0x34 ; '4'
000000000000ce01         db  0x16 ; '.'
000000000000ce02         db  0x00 ; '.'
000000000000ce03         db  0x00 ; '.'
000000000000ce04         db  0x98 ; '.'
000000000000ce05         db  0xbb ; '.'
000000000000ce06         db  0xff ; '.'
000000000000ce07         db  0xff ; '.'
000000000000ce08         db  0x48 ; 'H'
000000000000ce09         db  0x16 ; '.'
000000000000ce0a         db  0x00 ; '.'
000000000000ce0b         db  0x00 ; '.'
000000000000ce0c         db  0xb8 ; '.'
000000000000ce0d         db  0xbb ; '.'
000000000000ce0e         db  0xff ; '.'
000000000000ce0f         db  0xff ; '.'
000000000000ce10         db  0x60 ; '`'
000000000000ce11         db  0x16 ; '.'
000000000000ce12         db  0x00 ; '.'
000000000000ce13         db  0x00 ; '.'
000000000000ce14         db  0x28 ; '('
000000000000ce15         db  0xbe ; '.'
000000000000ce16         db  0xff ; '.'
000000000000ce17         db  0xff ; '.'
000000000000ce18         db  0xb0 ; '.'
000000000000ce19         db  0x16 ; '.'
000000000000ce1a         db  0x00 ; '.'
000000000000ce1b         db  0x00 ; '.'
000000000000ce1c         db  0x58 ; 'X'
000000000000ce1d         db  0xbf ; '.'
000000000000ce1e         db  0xff ; '.'
000000000000ce1f         db  0xff ; '.'
000000000000ce20         db  0xec ; '.'
000000000000ce21         db  0x16 ; '.'
000000000000ce22         db  0x00 ; '.'
000000000000ce23         db  0x00 ; '.'
000000000000ce24         db  0xf8 ; '.'
000000000000ce25         db  0xbf ; '.'
000000000000ce26         db  0xff ; '.'
000000000000ce27         db  0xff ; '.'
000000000000ce28         db  0x4c ; 'L'
000000000000ce29         db  0x17 ; '.'
000000000000ce2a         db  0x00 ; '.'
000000000000ce2b         db  0x00 ; '.'
000000000000ce2c         db  0x18 ; '.'
000000000000ce2d         db  0xc0 ; '.'
000000000000ce2e         db  0xff ; '.'
000000000000ce2f         db  0xff ; '.'
000000000000ce30         db  0x60 ; '`'
000000000000ce31         db  0x17 ; '.'
000000000000ce32         db  0x00 ; '.'
000000000000ce33         db  0x00 ; '.'
000000000000ce34         db  0x98 ; '.'
000000000000ce35         db  0xc0 ; '.'
000000000000ce36         db  0xff ; '.'
000000000000ce37         db  0xff ; '.'
000000000000ce38         db  0x84 ; '.'
000000000000ce39         db  0x17 ; '.'
000000000000ce3a         db  0x00 ; '.'
000000000000ce3b         db  0x00 ; '.'
000000000000ce3c         db  0xa8 ; '.'
000000000000ce3d         db  0xc0 ; '.'
000000000000ce3e         db  0xff ; '.'
000000000000ce3f         db  0xff ; '.'
000000000000ce40         db  0x98 ; '.'
000000000000ce41         db  0x17 ; '.'
000000000000ce42         db  0x00 ; '.'
000000000000ce43         db  0x00 ; '.'
000000000000ce44         db  0xc8 ; '.'
000000000000ce45         db  0xc0 ; '.'
000000000000ce46         db  0xff ; '.'
000000000000ce47         db  0xff ; '.'
000000000000ce48         db  0xac ; '.'
000000000000ce49         db  0x17 ; '.'
000000000000ce4a         db  0x00 ; '.'
000000000000ce4b         db  0x00 ; '.'
000000000000ce4c         db  0x48 ; 'H'
000000000000ce4d         db  0xc2 ; '.'
000000000000ce4e         db  0xff ; '.'
000000000000ce4f         db  0xff ; '.'
000000000000ce50         db  0xf8 ; '.'
000000000000ce51         db  0x17 ; '.'
000000000000ce52         db  0x00 ; '.'
000000000000ce53         db  0x00 ; '.'
000000000000ce54         db  0xd8 ; '.'
000000000000ce55         db  0xc2 ; '.'
000000000000ce56         db  0xff ; '.'
000000000000ce57         db  0xff ; '.'
000000000000ce58         db  0x1c ; '.'
000000000000ce59         db  0x18 ; '.'
000000000000ce5a         db  0x00 ; '.'
000000000000ce5b         db  0x00 ; '.'
000000000000ce5c         db  0xe8 ; '.'
000000000000ce5d         db  0xc2 ; '.'
000000000000ce5e         db  0xff ; '.'
000000000000ce5f         db  0xff ; '.'
000000000000ce60         db  0x30 ; '0'
000000000000ce61         db  0x18 ; '.'
000000000000ce62         db  0x00 ; '.'
000000000000ce63         db  0x00 ; '.'
000000000000ce64         db  0xf8 ; '.'
000000000000ce65         db  0xc2 ; '.'
000000000000ce66         db  0xff ; '.'
000000000000ce67         db  0xff ; '.'
000000000000ce68         db  0x48 ; 'H'
000000000000ce69         db  0x18 ; '.'
000000000000ce6a         db  0x00 ; '.'
000000000000ce6b         db  0x00 ; '.'
000000000000ce6c         db  0x38 ; '8'
000000000000ce6d         db  0xc3 ; '.'
000000000000ce6e         db  0xff ; '.'
000000000000ce6f         db  0xff ; '.'
000000000000ce70         db  0x80 ; '.'
000000000000ce71         db  0x18 ; '.'
000000000000ce72         db  0x00 ; '.'
000000000000ce73         db  0x00 ; '.'
000000000000ce74         db  0x58 ; 'X'
000000000000ce75         db  0xc7 ; '.'
000000000000ce76         db  0xff ; '.'
000000000000ce77         db  0xff ; '.'
000000000000ce78         db  0x94 ; '.'
000000000000ce79         db  0x19 ; '.'
000000000000ce7a         db  0x00 ; '.'
000000000000ce7b         db  0x00 ; '.'
000000000000ce7c         db  0x78 ; 'x'
000000000000ce7d         db  0xc7 ; '.'
000000000000ce7e         db  0xff ; '.'
000000000000ce7f         db  0xff ; '.'
000000000000ce80         db  0xa8 ; '.'
000000000000ce81         db  0x19 ; '.'
000000000000ce82         db  0x00 ; '.'
000000000000ce83         db  0x00 ; '.'
000000000000ce84         db  0xf8 ; '.'
000000000000ce85         db  0xc7 ; '.'
000000000000ce86         db  0xff ; '.'
000000000000ce87         db  0xff ; '.'
000000000000ce88         db  0xc4 ; '.'
000000000000ce89         db  0x19 ; '.'
000000000000ce8a         db  0x00 ; '.'
000000000000ce8b         db  0x00 ; '.'
000000000000ce8c         db  0xd8 ; '.'
000000000000ce8d         db  0xc8 ; '.'
000000000000ce8e         db  0xff ; '.'
000000000000ce8f         db  0xff ; '.'
000000000000ce90         db  0xf0 ; '.'
000000000000ce91         db  0x19 ; '.'
000000000000ce92         db  0x00 ; '.'
000000000000ce93         db  0x00 ; '.'
000000000000ce94         db  0x58 ; 'X'
000000000000ce95         db  0xc9 ; '.'
000000000000ce96         db  0xff ; '.'
000000000000ce97         db  0xff ; '.'
000000000000ce98         db  0x10 ; '.'
000000000000ce99         db  0x1a ; '.'
000000000000ce9a         db  0x00 ; '.'
000000000000ce9b         db  0x00 ; '.'
000000000000ce9c         db  0x78 ; 'x'
000000000000ce9d         db  0xc9 ; '.'
000000000000ce9e         db  0xff ; '.'
000000000000ce9f         db  0xff ; '.'
000000000000cea0         db  0x2c ; ','
000000000000cea1         db  0x1a ; '.'
000000000000cea2         db  0x00 ; '.'
000000000000cea3         db  0x00 ; '.'
000000000000cea4         db  0xa8 ; '.'
000000000000cea5         db  0xc9 ; '.'
000000000000cea6         db  0xff ; '.'
000000000000cea7         db  0xff ; '.'
000000000000cea8         db  0x40 ; '@'
000000000000cea9         db  0x1a ; '.'
000000000000ceaa         db  0x00 ; '.'
000000000000ceab         db  0x00 ; '.'
000000000000ceac         db  0xb8 ; '.'
000000000000cead         db  0xc9 ; '.'
000000000000ceae         db  0xff ; '.'
000000000000ceaf         db  0xff ; '.'
000000000000ceb0         db  0x54 ; 'T'
000000000000ceb1         db  0x1a ; '.'
000000000000ceb2         db  0x00 ; '.'
000000000000ceb3         db  0x00 ; '.'
000000000000ceb4         db  0xf8 ; '.'
000000000000ceb5         db  0xc9 ; '.'
000000000000ceb6         db  0xff ; '.'
000000000000ceb7         db  0xff ; '.'
000000000000ceb8         db  0x78 ; 'x'
000000000000ceb9         db  0x1a ; '.'
000000000000ceba         db  0x00 ; '.'
000000000000cebb         db  0x00 ; '.'
000000000000cebc         db  0x28 ; '('
000000000000cebd         db  0xca ; '.'
000000000000cebe         db  0xff ; '.'
000000000000cebf         db  0xff ; '.'
000000000000cec0         db  0x8c ; '.'
000000000000cec1         db  0x1a ; '.'
000000000000cec2         db  0x00 ; '.'
000000000000cec3         db  0x00 ; '.'
000000000000cec4         db  0xb8 ; '.'
000000000000cec5         db  0xca ; '.'
000000000000cec6         db  0xff ; '.'
000000000000cec7         db  0xff ; '.'
000000000000cec8         db  0xa4 ; '.'
000000000000cec9         db  0x1a ; '.'
000000000000ceca         db  0x00 ; '.'
000000000000cecb         db  0x00 ; '.'
000000000000cecc         db  0x08 ; '.'
000000000000cecd         db  0xcb ; '.'
000000000000cece         db  0xff ; '.'
000000000000cecf         db  0xff ; '.'
000000000000ced0         db  0xbc ; '.'
000000000000ced1         db  0x1a ; '.'
000000000000ced2         db  0x00 ; '.'
000000000000ced3         db  0x00 ; '.'
000000000000ced4         db  0x28 ; '('
000000000000ced5         db  0xcb ; '.'
000000000000ced6         db  0xff ; '.'
000000000000ced7         db  0xff ; '.'
000000000000ced8         db  0xd8 ; '.'
000000000000ced9         db  0x1a ; '.'
000000000000ceda         db  0x00 ; '.'
000000000000cedb         db  0x00 ; '.'
000000000000cedc         db  0x58 ; 'X'
000000000000cedd         db  0xcb ; '.'
000000000000cede         db  0xff ; '.'
000000000000cedf         db  0xff ; '.'
000000000000cee0         db  0xf4 ; '.'
000000000000cee1         db  0x1a ; '.'
000000000000cee2         db  0x00 ; '.'
000000000000cee3         db  0x00 ; '.'
000000000000cee4         db  0x88 ; '.'
000000000000cee5         db  0xcb ; '.'
000000000000cee6         db  0xff ; '.'
000000000000cee7         db  0xff ; '.'
000000000000cee8         db  0x1c ; '.'
000000000000cee9         db  0x1b ; '.'
000000000000ceea         db  0x00 ; '.'
000000000000ceeb         db  0x00 ; '.'
000000000000ceec         db  0xa8 ; '.'
000000000000ceed         db  0xcb ; '.'
000000000000ceee         db  0xff ; '.'
000000000000ceef         db  0xff ; '.'
000000000000cef0         db  0x38 ; '8'
000000000000cef1         db  0x1b ; '.'
000000000000cef2         db  0x00 ; '.'
000000000000cef3         db  0x00 ; '.'
000000000000cef4         db  0xe8 ; '.'
000000000000cef5         db  0xcb ; '.'
000000000000cef6         db  0xff ; '.'
000000000000cef7         db  0xff ; '.'
000000000000cef8         db  0x50 ; 'P'
000000000000cef9         db  0x1b ; '.'
000000000000cefa         db  0x00 ; '.'
000000000000cefb         db  0x00 ; '.'
000000000000cefc         db  0x18 ; '.'
000000000000cefd         db  0xcc ; '.'
000000000000cefe         db  0xff ; '.'
000000000000ceff         db  0xff ; '.'
000000000000cf00         db  0x70 ; 'p'
000000000000cf01         db  0x1b ; '.'
000000000000cf02         db  0x00 ; '.'
000000000000cf03         db  0x00 ; '.'
000000000000cf04         db  0xb8 ; '.'
000000000000cf05         db  0xcc ; '.'
000000000000cf06         db  0xff ; '.'
000000000000cf07         db  0xff ; '.'
000000000000cf08         db  0x98 ; '.'
000000000000cf09         db  0x1b ; '.'
000000000000cf0a         db  0x00 ; '.'
000000000000cf0b         db  0x00 ; '.'
000000000000cf0c         db  0xf8 ; '.'
000000000000cf0d         db  0xcc ; '.'
000000000000cf0e         db  0xff ; '.'
000000000000cf0f         db  0xff ; '.'
000000000000cf10         db  0xb8 ; '.'
000000000000cf11         db  0x1b ; '.'
000000000000cf12         db  0x00 ; '.'
000000000000cf13         db  0x00 ; '.'
000000000000cf14         db  0x28 ; '('
000000000000cf15         db  0xcd ; '.'
000000000000cf16         db  0xff ; '.'
000000000000cf17         db  0xff ; '.'
000000000000cf18         db  0xd0 ; '.'
000000000000cf19         db  0x1b ; '.'
000000000000cf1a         db  0x00 ; '.'
000000000000cf1b         db  0x00 ; '.'
000000000000cf1c         db  0x88 ; '.'
000000000000cf1d         db  0xcd ; '.'
000000000000cf1e         db  0xff ; '.'
000000000000cf1f         db  0xff ; '.'
000000000000cf20         db  0x00 ; '.'
000000000000cf21         db  0x1c ; '.'
000000000000cf22         db  0x00 ; '.'
000000000000cf23         db  0x00 ; '.'
000000000000cf24         db  0x18 ; '.'
000000000000cf25         db  0xce ; '.'
000000000000cf26         db  0xff ; '.'
000000000000cf27         db  0xff ; '.'
000000000000cf28         db  0x40 ; '@'
000000000000cf29         db  0x1c ; '.'
000000000000cf2a         db  0x00 ; '.'
000000000000cf2b         db  0x00 ; '.'
000000000000cf2c         db  0x08 ; '.'
000000000000cf2d         db  0xcf ; '.'
000000000000cf2e         db  0xff ; '.'
000000000000cf2f         db  0xff ; '.'
000000000000cf30         db  0x90 ; '.'
000000000000cf31         db  0x1c ; '.'
000000000000cf32         db  0x00 ; '.'
000000000000cf33         db  0x00 ; '.'
000000000000cf34         db  0x18 ; '.'
000000000000cf35         db  0xcf ; '.'
000000000000cf36         db  0xff ; '.'
000000000000cf37         db  0xff ; '.'
000000000000cf38         db  0xa4 ; '.'
000000000000cf39         db  0x1c ; '.'
000000000000cf3a         db  0x00 ; '.'
000000000000cf3b         db  0x00 ; '.'
000000000000cf3c         db  0x38 ; '8'
000000000000cf3d         db  0xd0 ; '.'
000000000000cf3e         db  0xff ; '.'
000000000000cf3f         db  0xff ; '.'
000000000000cf40         db  0xf0 ; '.'
000000000000cf41         db  0x1c ; '.'
000000000000cf42         db  0x00 ; '.'
000000000000cf43         db  0x00 ; '.'
000000000000cf44         db  0xb8 ; '.'
000000000000cf45         db  0xd0 ; '.'
000000000000cf46         db  0xff ; '.'
000000000000cf47         db  0xff ; '.'
000000000000cf48         db  0x1c ; '.'
000000000000cf49         db  0x1d ; '.'
000000000000cf4a         db  0x00 ; '.'
000000000000cf4b         db  0x00 ; '.'
000000000000cf4c         db  0xd8 ; '.'
000000000000cf4d         db  0xd1 ; '.'
000000000000cf4e         db  0xff ; '.'
000000000000cf4f         db  0xff ; '.'
000000000000cf50         db  0x7c ; '|'
000000000000cf51         db  0x1d ; '.'
000000000000cf52         db  0x00 ; '.'
000000000000cf53         db  0x00 ; '.'
000000000000cf54         db  0x48 ; 'H'
000000000000cf55         db  0xd2 ; '.'
000000000000cf56         db  0xff ; '.'
000000000000cf57         db  0xff ; '.'
000000000000cf58         db  0xc8 ; '.'
000000000000cf59         db  0x1d ; '.'
000000000000cf5a         db  0x00 ; '.'
000000000000cf5b         db  0x00 ; '.'
000000000000cf5c         db  0x98 ; '.'
000000000000cf5d         db  0xd2 ; '.'
000000000000cf5e         db  0xff ; '.'
000000000000cf5f         db  0xff ; '.'
000000000000cf60         db  0x08 ; '.'
000000000000cf61         db  0x1e ; '.'
000000000000cf62         db  0x00 ; '.'
000000000000cf63         db  0x00 ; '.'
000000000000cf64         db  0x18 ; '.'
000000000000cf65         db  0xd3 ; '.'
000000000000cf66         db  0xff ; '.'
000000000000cf67         db  0xff ; '.'
000000000000cf68         db  0x58 ; 'X'
000000000000cf69         db  0x1e ; '.'
000000000000cf6a         db  0x00 ; '.'
000000000000cf6b         db  0x00 ; '.'
000000000000cf6c         db  0x78 ; 'x'
000000000000cf6d         db  0xd3 ; '.'
000000000000cf6e         db  0xff ; '.'
000000000000cf6f         db  0xff ; '.'
000000000000cf70         db  0x78 ; 'x'
000000000000cf71         db  0x1e ; '.'
000000000000cf72         db  0x00 ; '.'
000000000000cf73         db  0x00 ; '.'
000000000000cf74         db  0xb8 ; '.'
000000000000cf75         db  0xd3 ; '.'
000000000000cf76         db  0xff ; '.'
000000000000cf77         db  0xff ; '.'
000000000000cf78         db  0x90 ; '.'
000000000000cf79         db  0x1e ; '.'
000000000000cf7a         db  0x00 ; '.'
000000000000cf7b         db  0x00 ; '.'
000000000000cf7c         db  0xf8 ; '.'
000000000000cf7d         db  0xd3 ; '.'
000000000000cf7e         db  0xff ; '.'
000000000000cf7f         db  0xff ; '.'
000000000000cf80         db  0xb0 ; '.'
000000000000cf81         db  0x1e ; '.'
000000000000cf82         db  0x00 ; '.'
000000000000cf83         db  0x00 ; '.'
000000000000cf84         db  0x28 ; '('
000000000000cf85         db  0xd4 ; '.'
000000000000cf86         db  0xff ; '.'
000000000000cf87         db  0xff ; '.'
000000000000cf88         db  0xcc ; '.'
000000000000cf89         db  0x1e ; '.'
000000000000cf8a         db  0x00 ; '.'
000000000000cf8b         db  0x00 ; '.'
000000000000cf8c         db  0x68 ; 'h'
000000000000cf8d         db  0xd4 ; '.'
000000000000cf8e         db  0xff ; '.'
000000000000cf8f         db  0xff ; '.'
000000000000cf90         db  0xec ; '.'
000000000000cf91         db  0x1e ; '.'
000000000000cf92         db  0x00 ; '.'
000000000000cf93         db  0x00 ; '.'
000000000000cf94         db  0x78 ; 'x'
000000000000cf95         db  0xd4 ; '.'
000000000000cf96         db  0xff ; '.'
000000000000cf97         db  0xff ; '.'
000000000000cf98         db  0x00 ; '.'
000000000000cf99         db  0x1f ; '.'
000000000000cf9a         db  0x00 ; '.'
000000000000cf9b         db  0x00 ; '.'
000000000000cf9c         db  0x98 ; '.'
000000000000cf9d         db  0xd5 ; '.'
000000000000cf9e         db  0xff ; '.'
000000000000cf9f         db  0xff ; '.'
000000000000cfa0         db  0x4c ; 'L'
000000000000cfa1         db  0x1f ; '.'
000000000000cfa2         db  0x00 ; '.'
000000000000cfa3         db  0x00 ; '.'
000000000000cfa4         db  0xb8 ; '.'
000000000000cfa5         db  0xd5 ; '.'
000000000000cfa6         db  0xff ; '.'
000000000000cfa7         db  0xff ; '.'
000000000000cfa8         db  0x68 ; 'h'
000000000000cfa9         db  0x1f ; '.'
000000000000cfaa         db  0x00 ; '.'
000000000000cfab         db  0x00 ; '.'
000000000000cfac         db  0x18 ; '.'
000000000000cfad         db  0xd6 ; '.'
000000000000cfae         db  0xff ; '.'
000000000000cfaf         db  0xff ; '.'
000000000000cfb0         db  0xa0 ; '.'
000000000000cfb1         db  0x1f ; '.'
000000000000cfb2         db  0x00 ; '.'
000000000000cfb3         db  0x00 ; '.'
000000000000cfb4         db  0x78 ; 'x'
000000000000cfb5         db  0xd6 ; '.'
000000000000cfb6         db  0xff ; '.'
000000000000cfb7         db  0xff ; '.'
000000000000cfb8         db  0xc0 ; '.'
000000000000cfb9         db  0x1f ; '.'
000000000000cfba         db  0x00 ; '.'
000000000000cfbb         db  0x00 ; '.'
000000000000cfbc         db  0xa8 ; '.'
000000000000cfbd         db  0xd9 ; '.'
000000000000cfbe         db  0xff ; '.'
000000000000cfbf         db  0xff ; '.'
000000000000cfc0         db  0x0c ; '.'
000000000000cfc1         db  0x20 ; ' '
000000000000cfc2         db  0x00 ; '.'
000000000000cfc3         db  0x00 ; '.'
000000000000cfc4         db  0xb8 ; '.'
000000000000cfc5         db  0xd9 ; '.'
000000000000cfc6         db  0xff ; '.'
000000000000cfc7         db  0xff ; '.'
000000000000cfc8         db  0x20 ; ' '
000000000000cfc9         db  0x20 ; ' '
000000000000cfca         db  0x00 ; '.'
000000000000cfcb         db  0x00 ; '.'
000000000000cfcc         db  0xc8 ; '.'
000000000000cfcd         db  0xd9 ; '.'
000000000000cfce         db  0xff ; '.'
000000000000cfcf         db  0xff ; '.'
000000000000cfd0         db  0x34 ; '4'
000000000000cfd1         db  0x20 ; ' '
000000000000cfd2         db  0x00 ; '.'
000000000000cfd3         db  0x00 ; '.'
000000000000cfd4         db  0x68 ; 'h'
000000000000cfd5         db  0xdb ; '.'
000000000000cfd6         db  0xff ; '.'
000000000000cfd7         db  0xff ; '.'
000000000000cfd8         db  0x98 ; '.'
000000000000cfd9         db  0x20 ; ' '
000000000000cfda         db  0x00 ; '.'
000000000000cfdb         db  0x00 ; '.'
000000000000cfdc         db  0xb8 ; '.'
000000000000cfdd         db  0xdb ; '.'
000000000000cfde         db  0xff ; '.'
000000000000cfdf         db  0xff ; '.'
000000000000cfe0         db  0xd0 ; '.'
000000000000cfe1         db  0x20 ; ' '
000000000000cfe2         db  0x00 ; '.'
000000000000cfe3         db  0x00 ; '.'
000000000000cfe4         db  0x48 ; 'H'
000000000000cfe5         db  0xde ; '.'
000000000000cfe6         db  0xff ; '.'
000000000000cfe7         db  0xff ; '.'
000000000000cfe8         db  0xe4 ; '.'
000000000000cfe9         db  0x20 ; ' '
000000000000cfea         db  0x00 ; '.'
000000000000cfeb         db  0x00 ; '.'
000000000000cfec         db  0x88 ; '.'
000000000000cfed         db  0xe0 ; '.'
000000000000cfee         db  0xff ; '.'
000000000000cfef         db  0xff ; '.'
000000000000cff0         db  0x18 ; '.'
000000000000cff1         db  0x21 ; '!'
000000000000cff2         db  0x00 ; '.'
000000000000cff3         db  0x00 ; '.'
000000000000cff4         db  0x98 ; '.'
000000000000cff5         db  0xe0 ; '.'
000000000000cff6         db  0xff ; '.'
000000000000cff7         db  0xff ; '.'
000000000000cff8         db  0x30 ; '0'
000000000000cff9         db  0x21 ; '!'
000000000000cffa         db  0x00 ; '.'
000000000000cffb         db  0x00 ; '.'
000000000000cffc         db  0x18 ; '.'
000000000000cffd         db  0xe1 ; '.'
000000000000cffe         db  0xff ; '.'
000000000000cfff         db  0xff ; '.'
000000000000d000         db  0x68 ; 'h'
000000000000d001         db  0x21 ; '!'
000000000000d002         db  0x00 ; '.'
000000000000d003         db  0x00 ; '.'
000000000000d004         db  0x98 ; '.'
000000000000d005         db  0xe3 ; '.'
000000000000d006         db  0xff ; '.'
000000000000d007         db  0xff ; '.'
000000000000d008         db  0xa0 ; '.'
000000000000d009         db  0x21 ; '!'
000000000000d00a         db  0x00 ; '.'
000000000000d00b         db  0x00 ; '.'
000000000000d00c         db  0x38 ; '8'
000000000000d00d         db  0xe4 ; '.'
000000000000d00e         db  0xff ; '.'
000000000000d00f         db  0xff ; '.'
000000000000d010         db  0xd0 ; '.'
000000000000d011         db  0x21 ; '!'
000000000000d012         db  0x00 ; '.'
000000000000d013         db  0x00 ; '.'
000000000000d014         db  0xa8 ; '.'
000000000000d015         db  0xe4 ; '.'
000000000000d016         db  0xff ; '.'
000000000000d017         db  0xff ; '.'
000000000000d018         db  0x18 ; '.'
000000000000d019         db  0x22 ; '"'
000000000000d01a         db  0x00 ; '.'
000000000000d01b         db  0x00 ; '.'
000000000000d01c         db  0xb8 ; '.'
000000000000d01d         db  0xe4 ; '.'
000000000000d01e         db  0xff ; '.'
000000000000d01f         db  0xff ; '.'
000000000000d020         db  0x30 ; '0'
000000000000d021         db  0x22 ; '"'
000000000000d022         db  0x00 ; '.'
000000000000d023         db  0x00 ; '.'
000000000000d024         db  0x00 ; '.'
000000000000d025         db  0x00 ; '.'
000000000000d026         db  0x00 ; '.'
000000000000d027         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0xd028; 0xed00[ (7384 bytes)
        ; File offset : [53288; 60672[ (7384 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

000000000000d028         dd         0x00000014                                  ; Length of the record
000000000000d02c         dd         0x00000000                                  ; CIE ID
000000000000d030         db         0x01                                        ; Version
000000000000d031         db         "zR", 0                                     ; Augmentation String
000000000000d034         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
000000000000d035         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
000000000000d036         db         0x10                                        ; Return address register
000000000000d037         db         0x01                                        ; Augmentation data length
000000000000d038         db         0x1b                                        ; FDE encoding
000000000000d039         db  0x0c ; '.'
000000000000d03a         db  0x07 ; '.'
000000000000d03b         db  0x08 ; '.'
000000000000d03c         db  0x90 ; '.'
000000000000d03d         db  0x01 ; '.'
000000000000d03e         db  0x07 ; '.'
000000000000d03f         db  0x10 ; '.'
000000000000d040         dd         0x00000014                                  ; Length of the record
000000000000d044         dd         0x0000001c                                  ; FDE: parent CIE at 0xd028 (FDE encoding = 0x1B)
000000000000d048         db         0x68, 0x5a, 2 dup (0xff)                    ; begin 0x2ab0
000000000000d04c         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x2adb)
000000000000d050         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d051         align      8
000000000000d058         dd         0x00000014                                  ; Length of the record
000000000000d05c         dd         0x00000000                                  ; CIE ID
000000000000d060         db         0x01                                        ; Version
000000000000d061         db         "zR", 0                                     ; Augmentation String
000000000000d064         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
000000000000d065         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
000000000000d066         db         0x10                                        ; Return address register
000000000000d067         db         0x01                                        ; Augmentation data length
000000000000d068         db         0x1b                                        ; FDE encoding
000000000000d069         db  0x0c ; '.'
000000000000d06a         db  0x07 ; '.'
000000000000d06b         db  0x08 ; '.'
000000000000d06c         db  0x90 ; '.'
000000000000d06d         db  0x01 ; '.'
000000000000d06e         db  0x00 ; '.'
000000000000d06f         db  0x00 ; '.'
000000000000d070         dd         0x00000024                                  ; Length of the record
000000000000d074         dd         0x0000001c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d078         db         0x18, 0x4d, 2 dup (0xff)                    ; begin 0x1d90
000000000000d07c         db         0x20, 0x05, 2 dup (0x00)                    ; length 0x520 (end at 0x22b0)
000000000000d080         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d081         db  0x0e ; '.'
000000000000d082         db  0x10 ; '.'
000000000000d083         db  0x46 ; 'F'
000000000000d084         db  0x0e ; '.'
000000000000d085         db  0x18 ; '.'
000000000000d086         db  0x4a ; 'J'
000000000000d087         db  0x0f ; '.'
000000000000d088         db  0x0b ; '.'
000000000000d089         db  0x77 ; 'w'
000000000000d08a         db  0x08 ; '.'
000000000000d08b         db  0x80 ; '.'
000000000000d08c         db  0x00 ; '.'
000000000000d08d         db  0x3f ; '?'
000000000000d08e         db  0x1a ; '.'
000000000000d08f         db  0x3b ; ';'
000000000000d090         db  0x2a ; '*'
000000000000d091         db  0x33 ; '3'
000000000000d092         db  0x24 ; '$'
000000000000d093         db  0x22 ; '"'
000000000000d094         db  0x00 ; '.'
000000000000d095         db  0x00 ; '.'
000000000000d096         db  0x00 ; '.'
000000000000d097         db  0x00 ; '.'
000000000000d098         dd         0x00000014                                  ; Length of the record
000000000000d09c         dd         0x00000044                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d0a0         db         0x10, 0x52, 2 dup (0xff)                    ; begin 0x22b0
000000000000d0a4         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x22b8)
000000000000d0a8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d0a9         align      16
000000000000d0b0         dd         0x0000001c                                  ; Length of the record
000000000000d0b4         dd         0x0000005c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d0b8         db         0x08, 0x5b, 2 dup (0xff)                    ; begin 0x2bc0
000000000000d0bc         db         0x77, 3 dup (0x00)                          ; length 0x77 (end at 0x2c37)
000000000000d0c0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d0c1         db  0x44 ; 'D'
000000000000d0c2         db  0x0e ; '.'
000000000000d0c3         db  0x10 ; '.'
000000000000d0c4         db  0x61 ; 'a'
000000000000d0c5         db  0x0a ; '.'
000000000000d0c6         db  0x0e ; '.'
000000000000d0c7         db  0x08 ; '.'
000000000000d0c8         db  0x4b ; 'K'
000000000000d0c9         db  0x0b ; '.'
000000000000d0ca         db  0x7c ; '|'
000000000000d0cb         db  0x0a ; '.'
000000000000d0cc         db  0x0e ; '.'
000000000000d0cd         db  0x08 ; '.'
000000000000d0ce         db  0x44 ; 'D'
000000000000d0cf         db  0x0b ; '.'
000000000000d0d0         dd         0x0000006c                                  ; Length of the record
000000000000d0d4         dd         0x0000007c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d0d8         db         0x68, 0x5b, 2 dup (0xff)                    ; begin 0x2c40
000000000000d0dc         db         0x73, 0x0a, 2 dup (0x00)                    ; length 0xa73 (end at 0x36b3)
000000000000d0e0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d0e1         db  0x42 ; 'B'
000000000000d0e2         db  0x0e ; '.'
000000000000d0e3         db  0x10 ; '.'
000000000000d0e4         db  0x8f ; '.'
000000000000d0e5         db  0x02 ; '.'
000000000000d0e6         db  0x42 ; 'B'
000000000000d0e7         db  0x0e ; '.'
000000000000d0e8         db  0x18 ; '.'
000000000000d0e9         db  0x8e ; '.'
000000000000d0ea         db  0x03 ; '.'
000000000000d0eb         db  0x45 ; 'E'
000000000000d0ec         db  0x0e ; '.'
000000000000d0ed         db  0x20 ; ' '
000000000000d0ee         db  0x8d ; '.'
000000000000d0ef         db  0x04 ; '.'
000000000000d0f0         db  0x42 ; 'B'
000000000000d0f1         db  0x0e ; '.'
000000000000d0f2         db  0x28 ; '('
000000000000d0f3         db  0x8c ; '.'
000000000000d0f4         db  0x05 ; '.'
000000000000d0f5         db  0x44 ; 'D'
000000000000d0f6         db  0x0e ; '.'
000000000000d0f7         db  0x30 ; '0'
000000000000d0f8         db  0x86 ; '.'
000000000000d0f9         db  0x06 ; '.'
000000000000d0fa         db  0x41 ; 'A'
000000000000d0fb         db  0x0e ; '.'
000000000000d0fc         db  0x38 ; '8'
000000000000d0fd         db  0x83 ; '.'
000000000000d0fe         db  0x07 ; '.'
000000000000d0ff         db  0x53 ; 'S'
000000000000d100         db  0x0e ; '.'
000000000000d101         db  0x90 ; '.'
000000000000d102         db  0x03 ; '.'
000000000000d103         db  0x03 ; '.'
000000000000d104         db  0x1b ; '.'
000000000000d105         db  0x01 ; '.'
000000000000d106         db  0x0e ; '.'
000000000000d107         db  0x98 ; '.'
000000000000d108         db  0x03 ; '.'
000000000000d109         db  0x49 ; 'I'
000000000000d10a         db  0x0e ; '.'
000000000000d10b         db  0xa0 ; '.'
000000000000d10c         db  0x03 ; '.'
000000000000d10d         db  0x62 ; 'b'
000000000000d10e         db  0x0e ; '.'
000000000000d10f         db  0x98 ; '.'
000000000000d110         db  0x03 ; '.'
000000000000d111         db  0x41 ; 'A'
000000000000d112         db  0x0e ; '.'
000000000000d113         db  0x90 ; '.'
000000000000d114         db  0x03 ; '.'
000000000000d115         db  0x72 ; 'r'
000000000000d116         db  0x0a ; '.'
000000000000d117         db  0x0e ; '.'
000000000000d118         db  0x38 ; '8'
000000000000d119         db  0x41 ; 'A'
000000000000d11a         db  0x0e ; '.'
000000000000d11b         db  0x30 ; '0'
000000000000d11c         db  0x41 ; 'A'
000000000000d11d         db  0x0e ; '.'
000000000000d11e         db  0x28 ; '('
000000000000d11f         db  0x42 ; 'B'
000000000000d120         db  0x0e ; '.'
000000000000d121         db  0x20 ; ' '
000000000000d122         db  0x42 ; 'B'
000000000000d123         db  0x0e ; '.'
000000000000d124         db  0x18 ; '.'
000000000000d125         db  0x42 ; 'B'
000000000000d126         db  0x0e ; '.'
000000000000d127         db  0x10 ; '.'
000000000000d128         db  0x42 ; 'B'
000000000000d129         db  0x0e ; '.'
000000000000d12a         db  0x08 ; '.'
000000000000d12b         db  0x4a ; 'J'
000000000000d12c         db  0x0b ; '.'
000000000000d12d         db  0x02 ; '.'
000000000000d12e         db  0x83 ; '.'
000000000000d12f         db  0x0e ; '.'
000000000000d130         db  0x98 ; '.'
000000000000d131         db  0x03 ; '.'
000000000000d132         db  0x42 ; 'B'
000000000000d133         db  0x0e ; '.'
000000000000d134         db  0xa0 ; '.'
000000000000d135         db  0x03 ; '.'
000000000000d136         db  0x4a ; 'J'
000000000000d137         db  0x0e ; '.'
000000000000d138         db  0x98 ; '.'
000000000000d139         db  0x03 ; '.'
000000000000d13a         db  0x41 ; 'A'
000000000000d13b         db  0x0e ; '.'
000000000000d13c         db  0x90 ; '.'
000000000000d13d         db  0x03 ; '.'
000000000000d13e         db  0x00 ; '.'
000000000000d13f         db  0x00 ; '.'
000000000000d140         dd         0x00000028                                  ; Length of the record
000000000000d144         dd         0x000000ec                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d148         db         0x78, 0x65, 2 dup (0xff)                    ; begin 0x36c0
000000000000d14c         db         0x52, 0x04, 2 dup (0x00)                    ; length 0x452 (end at 0x3b12)
000000000000d150         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d151         db  0x42 ; 'B'
000000000000d152         db  0x0e ; '.'
000000000000d153         db  0x10 ; '.'
000000000000d154         db  0x8d ; '.'
000000000000d155         db  0x02 ; '.'
000000000000d156         db  0x42 ; 'B'
000000000000d157         db  0x0e ; '.'
000000000000d158         db  0x18 ; '.'
000000000000d159         db  0x8c ; '.'
000000000000d15a         db  0x03 ; '.'
000000000000d15b         db  0x46 ; 'F'
000000000000d15c         db  0x0e ; '.'
000000000000d15d         db  0x20 ; ' '
000000000000d15e         db  0x86 ; '.'
000000000000d15f         db  0x04 ; '.'
000000000000d160         db  0x41 ; 'A'
000000000000d161         db  0x0e ; '.'
000000000000d162         db  0x28 ; '('
000000000000d163         db  0x83 ; '.'
000000000000d164         db  0x05 ; '.'
000000000000d165         db  0x49 ; 'I'
000000000000d166         db  0x0e ; '.'
000000000000d167         db  0xb0 ; '.'
000000000000d168         db  0x01 ; '.'
000000000000d169         db  0x00 ; '.'
000000000000d16a         db  0x00 ; '.'
000000000000d16b         db  0x00 ; '.'
000000000000d16c         dd         0x00000058                                  ; Length of the record
000000000000d170         dd         0x00000118                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d174         db         0x4c, 0x51, 2 dup (0xff)                    ; begin 0x22c0
000000000000d178         db         0xe5, 0x07, 2 dup (0x00)                    ; length 0x7e5 (end at 0x2aa5)
000000000000d17c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d17d         db  0x42 ; 'B'
000000000000d17e         db  0x0e ; '.'
000000000000d17f         db  0x10 ; '.'
000000000000d180         db  0x8f ; '.'
000000000000d181         db  0x02 ; '.'
000000000000d182         db  0x42 ; 'B'
000000000000d183         db  0x0e ; '.'
000000000000d184         db  0x18 ; '.'
000000000000d185         db  0x8e ; '.'
000000000000d186         db  0x03 ; '.'
000000000000d187         db  0x45 ; 'E'
000000000000d188         db  0x0e ; '.'
000000000000d189         db  0x20 ; ' '
000000000000d18a         db  0x8d ; '.'
000000000000d18b         db  0x04 ; '.'
000000000000d18c         db  0x42 ; 'B'
000000000000d18d         db  0x0e ; '.'
000000000000d18e         db  0x28 ; '('
000000000000d18f         db  0x8c ; '.'
000000000000d190         db  0x05 ; '.'
000000000000d191         db  0x44 ; 'D'
000000000000d192         db  0x0e ; '.'
000000000000d193         db  0x30 ; '0'
000000000000d194         db  0x86 ; '.'
000000000000d195         db  0x06 ; '.'
000000000000d196         db  0x41 ; 'A'
000000000000d197         db  0x0e ; '.'
000000000000d198         db  0x38 ; '8'
000000000000d199         db  0x83 ; '.'
000000000000d19a         db  0x07 ; '.'
000000000000d19b         db  0x52 ; 'R'
000000000000d19c         db  0x0e ; '.'
000000000000d19d         db  0x90 ; '.'
000000000000d19e         db  0x02 ; '.'
000000000000d19f         db  0x03 ; '.'
000000000000d1a0         db  0x96 ; '.'
000000000000d1a1         db  0x01 ; '.'
000000000000d1a2         db  0x0a ; '.'
000000000000d1a3         db  0x0e ; '.'
000000000000d1a4         db  0x98 ; '.'
000000000000d1a5         db  0x02 ; '.'
000000000000d1a6         db  0x50 ; 'P'
000000000000d1a7         db  0x0e ; '.'
000000000000d1a8         db  0xa0 ; '.'
000000000000d1a9         db  0x02 ; '.'
000000000000d1aa         db  0x70 ; 'p'
000000000000d1ab         db  0x0b ; '.'
000000000000d1ac         db  0x03 ; '.'
000000000000d1ad         db  0x36 ; '6'
000000000000d1ae         db  0x03 ; '.'
000000000000d1af         db  0x0a ; '.'
000000000000d1b0         db  0x0e ; '.'
000000000000d1b1         db  0x38 ; '8'
000000000000d1b2         db  0x41 ; 'A'
000000000000d1b3         db  0x0e ; '.'
000000000000d1b4         db  0x30 ; '0'
000000000000d1b5         db  0x41 ; 'A'
000000000000d1b6         db  0x0e ; '.'
000000000000d1b7         db  0x28 ; '('
000000000000d1b8         db  0x42 ; 'B'
000000000000d1b9         db  0x0e ; '.'
000000000000d1ba         db  0x20 ; ' '
000000000000d1bb         db  0x42 ; 'B'
000000000000d1bc         db  0x0e ; '.'
000000000000d1bd         db  0x18 ; '.'
000000000000d1be         db  0x42 ; 'B'
000000000000d1bf         db  0x0e ; '.'
000000000000d1c0         db  0x10 ; '.'
000000000000d1c1         db  0x42 ; 'B'
000000000000d1c2         db  0x0e ; '.'
000000000000d1c3         db  0x08 ; '.'
000000000000d1c4         db  0x41 ; 'A'
000000000000d1c5         db  0x0b ; '.'
000000000000d1c6         db  0x00 ; '.'
000000000000d1c7         db  0x00 ; '.'
000000000000d1c8         dd         0x00000010                                  ; Length of the record
000000000000d1cc         dd         0x00000174                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d1d0         db         0x50, 0x69, 2 dup (0xff)                    ; begin 0x3b20
000000000000d1d4         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x3b38)
000000000000d1d8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d1d9         align      4
000000000000d1dc         dd         0x00000028                                  ; Length of the record
000000000000d1e0         dd         0x00000188                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d1e4         db         0x5c, 0x69, 2 dup (0xff)                    ; begin 0x3b40
000000000000d1e8         db         0x58, 3 dup (0x00)                          ; length 0x58 (end at 0x3b98)
000000000000d1ec         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d1ed         db  0x42 ; 'B'
000000000000d1ee         db  0x0e ; '.'
000000000000d1ef         db  0x10 ; '.'
000000000000d1f0         db  0x8c ; '.'
000000000000d1f1         db  0x02 ; '.'
000000000000d1f2         db  0x41 ; 'A'
000000000000d1f3         db  0x0e ; '.'
000000000000d1f4         db  0x18 ; '.'
000000000000d1f5         db  0x86 ; '.'
000000000000d1f6         db  0x03 ; '.'
000000000000d1f7         db  0x44 ; 'D'
000000000000d1f8         db  0x0e ; '.'
000000000000d1f9         db  0x20 ; ' '
000000000000d1fa         db  0x83 ; '.'
000000000000d1fb         db  0x04 ; '.'
000000000000d1fc         db  0x02 ; '.'
000000000000d1fd         db  0x4d ; 'M'
000000000000d1fe         db  0x0e ; '.'
000000000000d1ff         db  0x18 ; '.'
000000000000d200         db  0x41 ; 'A'
000000000000d201         db  0x0e ; '.'
000000000000d202         db  0x10 ; '.'
000000000000d203         db  0x42 ; 'B'
000000000000d204         db  0x0e ; '.'
000000000000d205         db  0x08 ; '.'
000000000000d206         db  0x00 ; '.'
000000000000d207         db  0x00 ; '.'
000000000000d208         dd         0x00000010                                  ; Length of the record
000000000000d20c         dd         0x000001b4                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d210         db         0x90, 0x69, 2 dup (0xff)                    ; begin 0x3ba0
000000000000d214         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x3bb1)
000000000000d218         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d219         align      4
000000000000d21c         dd         0x00000048                                  ; Length of the record
000000000000d220         dd         0x000001c8                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d224         db         0x9c, 0x69, 2 dup (0xff)                    ; begin 0x3bc0
000000000000d228         db         0x61, 0x01, 2 dup (0x00)                    ; length 0x161 (end at 0x3d21)
000000000000d22c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d22d         db  0x42 ; 'B'
000000000000d22e         db  0x0e ; '.'
000000000000d22f         db  0x10 ; '.'
000000000000d230         db  0x8f ; '.'
000000000000d231         db  0x02 ; '.'
000000000000d232         db  0x42 ; 'B'
000000000000d233         db  0x0e ; '.'
000000000000d234         db  0x18 ; '.'
000000000000d235         db  0x8e ; '.'
000000000000d236         db  0x03 ; '.'
000000000000d237         db  0x45 ; 'E'
000000000000d238         db  0x0e ; '.'
000000000000d239         db  0x20 ; ' '
000000000000d23a         db  0x8d ; '.'
000000000000d23b         db  0x04 ; '.'
000000000000d23c         db  0x42 ; 'B'
000000000000d23d         db  0x0e ; '.'
000000000000d23e         db  0x28 ; '('
000000000000d23f         db  0x8c ; '.'
000000000000d240         db  0x05 ; '.'
000000000000d241         db  0x44 ; 'D'
000000000000d242         db  0x0e ; '.'
000000000000d243         db  0x30 ; '0'
000000000000d244         db  0x86 ; '.'
000000000000d245         db  0x06 ; '.'
000000000000d246         db  0x41 ; 'A'
000000000000d247         db  0x0e ; '.'
000000000000d248         db  0x38 ; '8'
000000000000d249         db  0x83 ; '.'
000000000000d24a         db  0x07 ; '.'
000000000000d24b         db  0x4f ; 'O'
000000000000d24c         db  0x0e ; '.'
000000000000d24d         db  0x80 ; '.'
000000000000d24e         db  0x03 ; '.'
000000000000d24f         db  0x02 ; '.'
000000000000d250         db  0xc1 ; '.'
000000000000d251         db  0x0a ; '.'
000000000000d252         db  0x0e ; '.'
000000000000d253         db  0x38 ; '8'
000000000000d254         db  0x41 ; 'A'
000000000000d255         db  0x0e ; '.'
000000000000d256         db  0x30 ; '0'
000000000000d257         db  0x41 ; 'A'
000000000000d258         db  0x0e ; '.'
000000000000d259         db  0x28 ; '('
000000000000d25a         db  0x42 ; 'B'
000000000000d25b         db  0x0e ; '.'
000000000000d25c         db  0x20 ; ' '
000000000000d25d         db  0x42 ; 'B'
000000000000d25e         db  0x0e ; '.'
000000000000d25f         db  0x18 ; '.'
000000000000d260         db  0x42 ; 'B'
000000000000d261         db  0x0e ; '.'
000000000000d262         db  0x10 ; '.'
000000000000d263         db  0x42 ; 'B'
000000000000d264         db  0x0e ; '.'
000000000000d265         db  0x08 ; '.'
000000000000d266         db  0x46 ; 'F'
000000000000d267         db  0x0b ; '.'
000000000000d268         dd         0x00000044                                  ; Length of the record
000000000000d26c         dd         0x00000214                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d270         db         0xc0, 0x6a, 2 dup (0xff)                    ; begin 0x3d30
000000000000d274         db         0x52, 0x01, 2 dup (0x00)                    ; length 0x152 (end at 0x3e82)
000000000000d278         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d279         db  0x42 ; 'B'
000000000000d27a         db  0x0e ; '.'
000000000000d27b         db  0x10 ; '.'
000000000000d27c         db  0x8e ; '.'
000000000000d27d         db  0x02 ; '.'
000000000000d27e         db  0x42 ; 'B'
000000000000d27f         db  0x0e ; '.'
000000000000d280         db  0x18 ; '.'
000000000000d281         db  0x8d ; '.'
000000000000d282         db  0x03 ; '.'
000000000000d283         db  0x42 ; 'B'
000000000000d284         db  0x0e ; '.'
000000000000d285         db  0x20 ; ' '
000000000000d286         db  0x8c ; '.'
000000000000d287         db  0x04 ; '.'
000000000000d288         db  0x41 ; 'A'
000000000000d289         db  0x0e ; '.'
000000000000d28a         db  0x28 ; '('
000000000000d28b         db  0x86 ; '.'
000000000000d28c         db  0x05 ; '.'
000000000000d28d         db  0x44 ; 'D'
000000000000d28e         db  0x0e ; '.'
000000000000d28f         db  0x30 ; '0'
000000000000d290         db  0x83 ; '.'
000000000000d291         db  0x06 ; '.'
000000000000d292         db  0x4c ; 'L'
000000000000d293         db  0x0e ; '.'
000000000000d294         db  0xe0 ; '.'
000000000000d295         db  0x02 ; '.'
000000000000d296         db  0x02 ; '.'
000000000000d297         db  0xb2 ; '.'
000000000000d298         db  0x0a ; '.'
000000000000d299         db  0x0e ; '.'
000000000000d29a         db  0x30 ; '0'
000000000000d29b         db  0x41 ; 'A'
000000000000d29c         db  0x0e ; '.'
000000000000d29d         db  0x28 ; '('
000000000000d29e         db  0x41 ; 'A'
000000000000d29f         db  0x0e ; '.'
000000000000d2a0         db  0x20 ; ' '
000000000000d2a1         db  0x42 ; 'B'
000000000000d2a2         db  0x0e ; '.'
000000000000d2a3         db  0x18 ; '.'
000000000000d2a4         db  0x42 ; 'B'
000000000000d2a5         db  0x0e ; '.'
000000000000d2a6         db  0x10 ; '.'
000000000000d2a7         db  0x42 ; 'B'
000000000000d2a8         db  0x0e ; '.'
000000000000d2a9         db  0x08 ; '.'
000000000000d2aa         db  0x47 ; 'G'
000000000000d2ab         db  0x0b ; '.'
000000000000d2ac         db  0x00 ; '.'
000000000000d2ad         db  0x00 ; '.'
000000000000d2ae         db  0x00 ; '.'
000000000000d2af         db  0x00 ; '.'
000000000000d2b0         dd         0x0000005c                                  ; Length of the record
000000000000d2b4         dd         0x0000025c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d2b8         db         0xd8, 0x6b, 2 dup (0xff)                    ; begin 0x3e90
000000000000d2bc         db         0x77, 3 dup (0x00)                          ; length 0x77 (end at 0x3f07)
000000000000d2c0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d2c1         db  0x42 ; 'B'
000000000000d2c2         db  0x0e ; '.'
000000000000d2c3         db  0x10 ; '.'
000000000000d2c4         db  0x8e ; '.'
000000000000d2c5         db  0x02 ; '.'
000000000000d2c6         db  0x42 ; 'B'
000000000000d2c7         db  0x0e ; '.'
000000000000d2c8         db  0x18 ; '.'
000000000000d2c9         db  0x8d ; '.'
000000000000d2ca         db  0x03 ; '.'
000000000000d2cb         db  0x45 ; 'E'
000000000000d2cc         db  0x0e ; '.'
000000000000d2cd         db  0x20 ; ' '
000000000000d2ce         db  0x8c ; '.'
000000000000d2cf         db  0x04 ; '.'
000000000000d2d0         db  0x41 ; 'A'
000000000000d2d1         db  0x0e ; '.'
000000000000d2d2         db  0x28 ; '('
000000000000d2d3         db  0x86 ; '.'
000000000000d2d4         db  0x05 ; '.'
000000000000d2d5         db  0x41 ; 'A'
000000000000d2d6         db  0x0e ; '.'
000000000000d2d7         db  0x30 ; '0'
000000000000d2d8         db  0x83 ; '.'
000000000000d2d9         db  0x06 ; '.'
000000000000d2da         db  0x62 ; 'b'
000000000000d2db         db  0x0a ; '.'
000000000000d2dc         db  0x0e ; '.'
000000000000d2dd         db  0x28 ; '('
000000000000d2de         db  0x41 ; 'A'
000000000000d2df         db  0x0e ; '.'
000000000000d2e0         db  0x20 ; ' '
000000000000d2e1         db  0x42 ; 'B'
000000000000d2e2         db  0x0e ; '.'
000000000000d2e3         db  0x18 ; '.'
000000000000d2e4         db  0x42 ; 'B'
000000000000d2e5         db  0x0e ; '.'
000000000000d2e6         db  0x10 ; '.'
000000000000d2e7         db  0x42 ; 'B'
000000000000d2e8         db  0x0e ; '.'
000000000000d2e9         db  0x08 ; '.'
000000000000d2ea         db  0x44 ; 'D'
000000000000d2eb         db  0x0b ; '.'
000000000000d2ec         db  0x59 ; 'Y'
000000000000d2ed         db  0x0a ; '.'
000000000000d2ee         db  0x0e ; '.'
000000000000d2ef         db  0x28 ; '('
000000000000d2f0         db  0x41 ; 'A'
000000000000d2f1         db  0x0e ; '.'
000000000000d2f2         db  0x20 ; ' '
000000000000d2f3         db  0x42 ; 'B'
000000000000d2f4         db  0x0e ; '.'
000000000000d2f5         db  0x18 ; '.'
000000000000d2f6         db  0x42 ; 'B'
000000000000d2f7         db  0x0e ; '.'
000000000000d2f8         db  0x10 ; '.'
000000000000d2f9         db  0x42 ; 'B'
000000000000d2fa         db  0x0e ; '.'
000000000000d2fb         db  0x08 ; '.'
000000000000d2fc         db  0x48 ; 'H'
000000000000d2fd         db  0x0b ; '.'
000000000000d2fe         db  0x4d ; 'M'
000000000000d2ff         db  0x0e ; '.'
000000000000d300         db  0x28 ; '('
000000000000d301         db  0x43 ; 'C'
000000000000d302         db  0x0e ; '.'
000000000000d303         db  0x20 ; ' '
000000000000d304         db  0x42 ; 'B'
000000000000d305         db  0x0e ; '.'
000000000000d306         db  0x18 ; '.'
000000000000d307         db  0x42 ; 'B'
000000000000d308         db  0x0e ; '.'
000000000000d309         db  0x10 ; '.'
000000000000d30a         db  0x42 ; 'B'
000000000000d30b         db  0x0e ; '.'
000000000000d30c         db  0x08 ; '.'
000000000000d30d         db  0x00 ; '.'
000000000000d30e         db  0x00 ; '.'
000000000000d30f         db  0x00 ; '.'
000000000000d310         dd         0x00000064                                  ; Length of the record
000000000000d314         dd         0x000002bc                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d318         db         0xf8, 0x6b, 2 dup (0xff)                    ; begin 0x3f10
000000000000d31c         db         0x37, 0x02, 2 dup (0x00)                    ; length 0x237 (end at 0x4147)
000000000000d320         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d321         db  0x42 ; 'B'
000000000000d322         db  0x0e ; '.'
000000000000d323         db  0x10 ; '.'
000000000000d324         db  0x8f ; '.'
000000000000d325         db  0x02 ; '.'
000000000000d326         db  0x42 ; 'B'
000000000000d327         db  0x0e ; '.'
000000000000d328         db  0x18 ; '.'
000000000000d329         db  0x8e ; '.'
000000000000d32a         db  0x03 ; '.'
000000000000d32b         db  0x42 ; 'B'
000000000000d32c         db  0x0e ; '.'
000000000000d32d         db  0x20 ; ' '
000000000000d32e         db  0x8d ; '.'
000000000000d32f         db  0x04 ; '.'
000000000000d330         db  0x42 ; 'B'
000000000000d331         db  0x0e ; '.'
000000000000d332         db  0x28 ; '('
000000000000d333         db  0x8c ; '.'
000000000000d334         db  0x05 ; '.'
000000000000d335         db  0x41 ; 'A'
000000000000d336         db  0x0e ; '.'
000000000000d337         db  0x30 ; '0'
000000000000d338         db  0x86 ; '.'
000000000000d339         db  0x06 ; '.'
000000000000d33a         db  0x41 ; 'A'
000000000000d33b         db  0x0e ; '.'
000000000000d33c         db  0x38 ; '8'
000000000000d33d         db  0x83 ; '.'
000000000000d33e         db  0x07 ; '.'
000000000000d33f         db  0x44 ; 'D'
000000000000d340         db  0x0e ; '.'
000000000000d341         db  0x50 ; 'P'
000000000000d342         db  0x6b ; 'k'
000000000000d343         db  0x0a ; '.'
000000000000d344         db  0x0e ; '.'
000000000000d345         db  0x38 ; '8'
000000000000d346         db  0x41 ; 'A'
000000000000d347         db  0x0e ; '.'
000000000000d348         db  0x30 ; '0'
000000000000d349         db  0x41 ; 'A'
000000000000d34a         db  0x0e ; '.'
000000000000d34b         db  0x28 ; '('
000000000000d34c         db  0x42 ; 'B'
000000000000d34d         db  0x0e ; '.'
000000000000d34e         db  0x20 ; ' '
000000000000d34f         db  0x42 ; 'B'
000000000000d350         db  0x0e ; '.'
000000000000d351         db  0x18 ; '.'
000000000000d352         db  0x42 ; 'B'
000000000000d353         db  0x0e ; '.'
000000000000d354         db  0x10 ; '.'
000000000000d355         db  0x42 ; 'B'
000000000000d356         db  0x0e ; '.'
000000000000d357         db  0x08 ; '.'
000000000000d358         db  0x45 ; 'E'
000000000000d359         db  0x0b ; '.'
000000000000d35a         db  0x02 ; '.'
000000000000d35b         db  0xd9 ; '.'
000000000000d35c         db  0x0a ; '.'
000000000000d35d         db  0x0e ; '.'
000000000000d35e         db  0x38 ; '8'
000000000000d35f         db  0x43 ; 'C'
000000000000d360         db  0x0e ; '.'
000000000000d361         db  0x30 ; '0'
000000000000d362         db  0x44 ; 'D'
000000000000d363         db  0x0e ; '.'
000000000000d364         db  0x28 ; '('
000000000000d365         db  0x42 ; 'B'
000000000000d366         db  0x0e ; '.'
000000000000d367         db  0x20 ; ' '
000000000000d368         db  0x42 ; 'B'
000000000000d369         db  0x0e ; '.'
000000000000d36a         db  0x18 ; '.'
000000000000d36b         db  0x42 ; 'B'
000000000000d36c         db  0x0e ; '.'
000000000000d36d         db  0x10 ; '.'
000000000000d36e         db  0x42 ; 'B'
000000000000d36f         db  0x0e ; '.'
000000000000d370         db  0x08 ; '.'
000000000000d371         db  0x48 ; 'H'
000000000000d372         db  0x0b ; '.'
000000000000d373         db  0x00 ; '.'
000000000000d374         db  0x00 ; '.'
000000000000d375         db  0x00 ; '.'
000000000000d376         db  0x00 ; '.'
000000000000d377         db  0x00 ; '.'
000000000000d378         dd         0x00000018                                  ; Length of the record
000000000000d37c         dd         0x00000324                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d380         db         0xd0, 0x6d, 2 dup (0xff)                    ; begin 0x4150
000000000000d384         db         0x46, 3 dup (0x00)                          ; length 0x46 (end at 0x4196)
000000000000d388         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d389         db  0x44 ; 'D'
000000000000d38a         db  0x0e ; '.'
000000000000d38b         db  0x10 ; '.'
000000000000d38c         db  0x83 ; '.'
000000000000d38d         db  0x02 ; '.'
000000000000d38e         db  0x59 ; 'Y'
000000000000d38f         db  0x0a ; '.'
000000000000d390         db  0x0e ; '.'
000000000000d391         db  0x08 ; '.'
000000000000d392         db  0x43 ; 'C'
000000000000d393         db  0x0b ; '.'
000000000000d394         dd         0x00000050                                  ; Length of the record
000000000000d398         dd         0x00000340                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d39c         db         0x04, 0x6e, 2 dup (0xff)                    ; begin 0x41a0
000000000000d3a0         db         0x12, 0x06, 2 dup (0x00)                    ; length 0x612 (end at 0x47b2)
000000000000d3a4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d3a5         db  0x42 ; 'B'
000000000000d3a6         db  0x0e ; '.'
000000000000d3a7         db  0x10 ; '.'
000000000000d3a8         db  0x8f ; '.'
000000000000d3a9         db  0x02 ; '.'
000000000000d3aa         db  0x42 ; 'B'
000000000000d3ab         db  0x0e ; '.'
000000000000d3ac         db  0x18 ; '.'
000000000000d3ad         db  0x8e ; '.'
000000000000d3ae         db  0x03 ; '.'
000000000000d3af         db  0x42 ; 'B'
000000000000d3b0         db  0x0e ; '.'
000000000000d3b1         db  0x20 ; ' '
000000000000d3b2         db  0x8d ; '.'
000000000000d3b3         db  0x04 ; '.'
000000000000d3b4         db  0x42 ; 'B'
000000000000d3b5         db  0x0e ; '.'
000000000000d3b6         db  0x28 ; '('
000000000000d3b7         db  0x8c ; '.'
000000000000d3b8         db  0x05 ; '.'
000000000000d3b9         db  0x41 ; 'A'
000000000000d3ba         db  0x0e ; '.'
000000000000d3bb         db  0x30 ; '0'
000000000000d3bc         db  0x86 ; '.'
000000000000d3bd         db  0x06 ; '.'
000000000000d3be         db  0x41 ; 'A'
000000000000d3bf         db  0x0e ; '.'
000000000000d3c0         db  0x38 ; '8'
000000000000d3c1         db  0x83 ; '.'
000000000000d3c2         db  0x07 ; '.'
000000000000d3c3         db  0x4a ; 'J'
000000000000d3c4         db  0x0e ; '.'
000000000000d3c5         db  0xc0 ; '.'
000000000000d3c6         db  0x01 ; '.'
000000000000d3c7         db  0x03 ; '.'
000000000000d3c8         db  0x9a ; '.'
000000000000d3c9         db  0x03 ; '.'
000000000000d3ca         db  0x0a ; '.'
000000000000d3cb         db  0x0e ; '.'
000000000000d3cc         db  0x38 ; '8'
000000000000d3cd         db  0x41 ; 'A'
000000000000d3ce         db  0x0e ; '.'
000000000000d3cf         db  0x30 ; '0'
000000000000d3d0         db  0x41 ; 'A'
000000000000d3d1         db  0x0e ; '.'
000000000000d3d2         db  0x28 ; '('
000000000000d3d3         db  0x42 ; 'B'
000000000000d3d4         db  0x0e ; '.'
000000000000d3d5         db  0x20 ; ' '
000000000000d3d6         db  0x42 ; 'B'
000000000000d3d7         db  0x0e ; '.'
000000000000d3d8         db  0x18 ; '.'
000000000000d3d9         db  0x42 ; 'B'
000000000000d3da         db  0x0e ; '.'
000000000000d3db         db  0x10 ; '.'
000000000000d3dc         db  0x42 ; 'B'
000000000000d3dd         db  0x0e ; '.'
000000000000d3de         db  0x08 ; '.'
000000000000d3df         db  0x48 ; 'H'
000000000000d3e0         db  0x0b ; '.'
000000000000d3e1         db  0x00 ; '.'
000000000000d3e2         db  0x00 ; '.'
000000000000d3e3         db  0x00 ; '.'
000000000000d3e4         db  0x00 ; '.'
000000000000d3e5         db  0x00 ; '.'
000000000000d3e6         db  0x00 ; '.'
000000000000d3e7         db  0x00 ; '.'
000000000000d3e8         dd         0x00000014                                  ; Length of the record
000000000000d3ec         dd         0x00000394                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d3f0         db         0xd0, 0x73, 2 dup (0xff)                    ; begin 0x47c0
000000000000d3f4         db         0x33, 3 dup (0x00)                          ; length 0x33 (end at 0x47f3)
000000000000d3f8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d3f9         db  0x44 ; 'D'
000000000000d3fa         db  0x0e ; '.'
000000000000d3fb         db  0x10 ; '.'
000000000000d3fc         db  0x6e ; 'n'
000000000000d3fd         db  0x0e ; '.'
000000000000d3fe         db  0x08 ; '.'
000000000000d3ff         db  0x00 ; '.'
000000000000d400         dd         0x00000018                                  ; Length of the record
000000000000d404         dd         0x000003ac                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d408         db         0xf8, 0x73, 2 dup (0xff)                    ; begin 0x4800
000000000000d40c         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x481a)
000000000000d410         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d411         db  0x44 ; 'D'
000000000000d412         db  0x0e ; '.'
000000000000d413         db  0x10 ; '.'
000000000000d414         db  0x50 ; 'P'
000000000000d415         db  0x0a ; '.'
000000000000d416         db  0x0e ; '.'
000000000000d417         db  0x08 ; '.'
000000000000d418         db  0x41 ; 'A'
000000000000d419         db  0x0b ; '.'
000000000000d41a         db  0x00 ; '.'
000000000000d41b         db  0x00 ; '.'
000000000000d41c         dd         0x00000010                                  ; Length of the record
000000000000d420         dd         0x000003c8                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d424         db         0xfc, 0x73, 2 dup (0xff)                    ; begin 0x4820
000000000000d428         db         0x16, 3 dup (0x00)                          ; length 0x16 (end at 0x4836)
000000000000d42c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d42d         align      16
000000000000d430         dd         0x0000001c                                  ; Length of the record
000000000000d434         dd         0x000003dc                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d438         db         0x08, 0x74, 2 dup (0xff)                    ; begin 0x4840
000000000000d43c         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x488a)
000000000000d440         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d441         db  0x55 ; 'U'
000000000000d442         db  0x0e ; '.'
000000000000d443         db  0x10 ; '.'
000000000000d444         db  0x5d ; ']'
000000000000d445         db  0x0e ; '.'
000000000000d446         db  0x08 ; '.'
000000000000d447         db  0x4e ; 'N'
000000000000d448         db  0x0e ; '.'
000000000000d449         db  0x10 ; '.'
000000000000d44a         db  0x49 ; 'I'
000000000000d44b         db  0x0e ; '.'
000000000000d44c         db  0x08 ; '.'
000000000000d44d         db  0x00 ; '.'
000000000000d44e         db  0x00 ; '.'
000000000000d44f         db  0x00 ; '.'
000000000000d450         dd         0x0000004c                                  ; Length of the record
000000000000d454         dd         0x000003fc                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d458         db         0x38, 0x74, 2 dup (0xff)                    ; begin 0x4890
000000000000d45c         db         0x36, 0x06, 2 dup (0x00)                    ; length 0x636 (end at 0x4ec6)
000000000000d460         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d461         db  0x42 ; 'B'
000000000000d462         db  0x0e ; '.'
000000000000d463         db  0x10 ; '.'
000000000000d464         db  0x8f ; '.'
000000000000d465         db  0x02 ; '.'
000000000000d466         db  0x42 ; 'B'
000000000000d467         db  0x0e ; '.'
000000000000d468         db  0x18 ; '.'
000000000000d469         db  0x8e ; '.'
000000000000d46a         db  0x03 ; '.'
000000000000d46b         db  0x42 ; 'B'
000000000000d46c         db  0x0e ; '.'
000000000000d46d         db  0x20 ; ' '
000000000000d46e         db  0x8d ; '.'
000000000000d46f         db  0x04 ; '.'
000000000000d470         db  0x42 ; 'B'
000000000000d471         db  0x0e ; '.'
000000000000d472         db  0x28 ; '('
000000000000d473         db  0x8c ; '.'
000000000000d474         db  0x05 ; '.'
000000000000d475         db  0x41 ; 'A'
000000000000d476         db  0x0e ; '.'
000000000000d477         db  0x30 ; '0'
000000000000d478         db  0x86 ; '.'
000000000000d479         db  0x06 ; '.'
000000000000d47a         db  0x41 ; 'A'
000000000000d47b         db  0x0e ; '.'
000000000000d47c         db  0x38 ; '8'
000000000000d47d         db  0x83 ; '.'
000000000000d47e         db  0x07 ; '.'
000000000000d47f         db  0x47 ; 'G'
000000000000d480         db  0x0e ; '.'
000000000000d481         db  0xa0 ; '.'
000000000000d482         db  0x02 ; '.'
000000000000d483         db  0x03 ; '.'
000000000000d484         db  0x30 ; '0'
000000000000d485         db  0x02 ; '.'
000000000000d486         db  0x0a ; '.'
000000000000d487         db  0x0e ; '.'
000000000000d488         db  0x38 ; '8'
000000000000d489         db  0x41 ; 'A'
000000000000d48a         db  0x0e ; '.'
000000000000d48b         db  0x30 ; '0'
000000000000d48c         db  0x41 ; 'A'
000000000000d48d         db  0x0e ; '.'
000000000000d48e         db  0x28 ; '('
000000000000d48f         db  0x42 ; 'B'
000000000000d490         db  0x0e ; '.'
000000000000d491         db  0x20 ; ' '
000000000000d492         db  0x42 ; 'B'
000000000000d493         db  0x0e ; '.'
000000000000d494         db  0x18 ; '.'
000000000000d495         db  0x42 ; 'B'
000000000000d496         db  0x0e ; '.'
000000000000d497         db  0x10 ; '.'
000000000000d498         db  0x42 ; 'B'
000000000000d499         db  0x0e ; '.'
000000000000d49a         db  0x08 ; '.'
000000000000d49b         db  0x45 ; 'E'
000000000000d49c         db  0x0b ; '.'
000000000000d49d         db  0x00 ; '.'
000000000000d49e         db  0x00 ; '.'
000000000000d49f         db  0x00 ; '.'
000000000000d4a0         dd         0x00000010                                  ; Length of the record
000000000000d4a4         dd         0x0000044c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d4a8         db         0x28, 0x7a, 2 dup (0xff)                    ; begin 0x4ed0
000000000000d4ac         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x4ed8)
000000000000d4b0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d4b1         align      4
000000000000d4b4         dd         0x00000038                                  ; Length of the record
000000000000d4b8         dd         0x00000460                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d4bc         db         0x24, 0x7a, 2 dup (0xff)                    ; begin 0x4ee0
000000000000d4c0         db         0x07, 0x01, 2 dup (0x00)                    ; length 0x107 (end at 0x4fe7)
000000000000d4c4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d4c5         db  0x42 ; 'B'
000000000000d4c6         db  0x0e ; '.'
000000000000d4c7         db  0x10 ; '.'
000000000000d4c8         db  0x8c ; '.'
000000000000d4c9         db  0x02 ; '.'
000000000000d4ca         db  0x41 ; 'A'
000000000000d4cb         db  0x0e ; '.'
000000000000d4cc         db  0x18 ; '.'
000000000000d4cd         db  0x86 ; '.'
000000000000d4ce         db  0x03 ; '.'
000000000000d4cf         db  0x41 ; 'A'
000000000000d4d0         db  0x0e ; '.'
000000000000d4d1         db  0x20 ; ' '
000000000000d4d2         db  0x83 ; '.'
000000000000d4d3         db  0x04 ; '.'
000000000000d4d4         db  0x65 ; 'e'
000000000000d4d5         db  0x0a ; '.'
000000000000d4d6         db  0x0e ; '.'
000000000000d4d7         db  0x18 ; '.'
000000000000d4d8         db  0x41 ; 'A'
000000000000d4d9         db  0x0e ; '.'
000000000000d4da         db  0x10 ; '.'
000000000000d4db         db  0x42 ; 'B'
000000000000d4dc         db  0x0e ; '.'
000000000000d4dd         db  0x08 ; '.'
000000000000d4de         db  0x4c ; 'L'
000000000000d4df         db  0x0b ; '.'
000000000000d4e0         db  0x02 ; '.'
000000000000d4e1         db  0xac ; '.'
000000000000d4e2         db  0x0a ; '.'
000000000000d4e3         db  0x0e ; '.'
000000000000d4e4         db  0x18 ; '.'
000000000000d4e5         db  0x41 ; 'A'
000000000000d4e6         db  0x0e ; '.'
000000000000d4e7         db  0x10 ; '.'
000000000000d4e8         db  0x42 ; 'B'
000000000000d4e9         db  0x0e ; '.'
000000000000d4ea         db  0x08 ; '.'
000000000000d4eb         db  0x49 ; 'I'
000000000000d4ec         db  0x0b ; '.'
000000000000d4ed         db  0x00 ; '.'
000000000000d4ee         db  0x00 ; '.'
000000000000d4ef         db  0x00 ; '.'
000000000000d4f0         dd         0x00000010                                  ; Length of the record
000000000000d4f4         dd         0x0000049c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d4f8         db         0xf8, 0x7a, 2 dup (0xff)                    ; begin 0x4ff0
000000000000d4fc         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x4ff8)
000000000000d500         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d501         align      4
000000000000d504         dd         0x00000010                                  ; Length of the record
000000000000d508         dd         0x000004b0                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d50c         db         0xf4, 0x7a, 2 dup (0xff)                    ; begin 0x5000
000000000000d510         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x5008)
000000000000d514         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d515         align      8
000000000000d518         dd         0x0000002c                                  ; Length of the record
000000000000d51c         dd         0x000004c4                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d520         db         0xf0, 0x7a, 2 dup (0xff)                    ; begin 0x5010
000000000000d524         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x50b4)
000000000000d528         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d529         db  0x41 ; 'A'
000000000000d52a         db  0x0e ; '.'
000000000000d52b         db  0x10 ; '.'
000000000000d52c         db  0x86 ; '.'
000000000000d52d         db  0x02 ; '.'
000000000000d52e         db  0x41 ; 'A'
000000000000d52f         db  0x0e ; '.'
000000000000d530         db  0x18 ; '.'
000000000000d531         db  0x83 ; '.'
000000000000d532         db  0x03 ; '.'
000000000000d533         db  0x44 ; 'D'
000000000000d534         db  0x0e ; '.'
000000000000d535         db  0x20 ; ' '
000000000000d536         db  0x7a ; 'z'
000000000000d537         db  0x0a ; '.'
000000000000d538         db  0x0e ; '.'
000000000000d539         db  0x18 ; '.'
000000000000d53a         db  0x41 ; 'A'
000000000000d53b         db  0x0e ; '.'
000000000000d53c         db  0x10 ; '.'
000000000000d53d         db  0x41 ; 'A'
000000000000d53e         db  0x0e ; '.'
000000000000d53f         db  0x08 ; '.'
000000000000d540         db  0x41 ; 'A'
000000000000d541         db  0x0b ; '.'
000000000000d542         db  0x00 ; '.'
000000000000d543         db  0x00 ; '.'
000000000000d544         db  0x00 ; '.'
000000000000d545         db  0x00 ; '.'
000000000000d546         db  0x00 ; '.'
000000000000d547         db  0x00 ; '.'
000000000000d548         dd         0x0000001c                                  ; Length of the record
000000000000d54c         dd         0x000004f4                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d550         db         0x70, 0x7b, 2 dup (0xff)                    ; begin 0x50c0
000000000000d554         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x50d8)
000000000000d558         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d559         db  0x44 ; 'D'
000000000000d55a         db  0x0e ; '.'
000000000000d55b         db  0x10 ; '.'
000000000000d55c         db  0x4e ; 'N'
000000000000d55d         db  0x0a ; '.'
000000000000d55e         db  0x0e ; '.'
000000000000d55f         db  0x08 ; '.'
000000000000d560         db  0x41 ; 'A'
000000000000d561         db  0x0b ; '.'
000000000000d562         db  0x00 ; '.'
000000000000d563         db  0x00 ; '.'
000000000000d564         db  0x00 ; '.'
000000000000d565         db  0x00 ; '.'
000000000000d566         db  0x00 ; '.'
000000000000d567         db  0x00 ; '.'
000000000000d568         dd         0x00000030                                  ; Length of the record
000000000000d56c         dd         0x00000514                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d570         db         0x70, 0x7b, 2 dup (0xff)                    ; begin 0x50e0
000000000000d574         db         0x5d, 3 dup (0x00)                          ; length 0x5d (end at 0x513d)
000000000000d578         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d579         db  0x41 ; 'A'
000000000000d57a         db  0x0e ; '.'
000000000000d57b         db  0x10 ; '.'
000000000000d57c         db  0x86 ; '.'
000000000000d57d         db  0x02 ; '.'
000000000000d57e         db  0x41 ; 'A'
000000000000d57f         db  0x0e ; '.'
000000000000d580         db  0x18 ; '.'
000000000000d581         db  0x83 ; '.'
000000000000d582         db  0x03 ; '.'
000000000000d583         db  0x49 ; 'I'
000000000000d584         db  0x0e ; '.'
000000000000d585         db  0x20 ; ' '
000000000000d586         db  0x7c ; '|'
000000000000d587         db  0x0a ; '.'
000000000000d588         db  0x0e ; '.'
000000000000d589         db  0x18 ; '.'
000000000000d58a         db  0x44 ; 'D'
000000000000d58b         db  0x0e ; '.'
000000000000d58c         db  0x10 ; '.'
000000000000d58d         db  0x41 ; 'A'
000000000000d58e         db  0x0e ; '.'
000000000000d58f         db  0x08 ; '.'
000000000000d590         db  0x44 ; 'D'
000000000000d591         db  0x0b ; '.'
000000000000d592         db  0x44 ; 'D'
000000000000d593         db  0x0e ; '.'
000000000000d594         db  0x18 ; '.'
000000000000d595         db  0x47 ; 'G'
000000000000d596         db  0x0e ; '.'
000000000000d597         db  0x10 ; '.'
000000000000d598         db  0x41 ; 'A'
000000000000d599         db  0x0e ; '.'
000000000000d59a         db  0x08 ; '.'
000000000000d59b         db  0x00 ; '.'
000000000000d59c         dd         0x00000028                                  ; Length of the record
000000000000d5a0         dd         0x00000548                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d5a4         db         0x9c, 0x7b, 2 dup (0xff)                    ; begin 0x5140
000000000000d5a8         db         0x5a, 3 dup (0x00)                          ; length 0x5a (end at 0x519a)
000000000000d5ac         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d5ad         db  0x41 ; 'A'
000000000000d5ae         db  0x0e ; '.'
000000000000d5af         db  0x10 ; '.'
000000000000d5b0         db  0x86 ; '.'
000000000000d5b1         db  0x02 ; '.'
000000000000d5b2         db  0x41 ; 'A'
000000000000d5b3         db  0x0e ; '.'
000000000000d5b4         db  0x18 ; '.'
000000000000d5b5         db  0x83 ; '.'
000000000000d5b6         db  0x03 ; '.'
000000000000d5b7         db  0x47 ; 'G'
000000000000d5b8         db  0x0e ; '.'
000000000000d5b9         db  0x20 ; ' '
000000000000d5ba         db  0x02 ; '.'
000000000000d5bb         db  0x41 ; 'A'
000000000000d5bc         db  0x0a ; '.'
000000000000d5bd         db  0x0e ; '.'
000000000000d5be         db  0x18 ; '.'
000000000000d5bf         db  0x44 ; 'D'
000000000000d5c0         db  0x0e ; '.'
000000000000d5c1         db  0x10 ; '.'
000000000000d5c2         db  0x41 ; 'A'
000000000000d5c3         db  0x0e ; '.'
000000000000d5c4         db  0x08 ; '.'
000000000000d5c5         db  0x41 ; 'A'
000000000000d5c6         db  0x0b ; '.'
000000000000d5c7         db  0x00 ; '.'
000000000000d5c8         dd         0x00000010                                  ; Length of the record
000000000000d5cc         dd         0x00000574                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d5d0         db         0xd0, 0x7b, 2 dup (0xff)                    ; begin 0x51a0
000000000000d5d4         db         0x5c, 3 dup (0x00)                          ; length 0x5c (end at 0x51fc)
000000000000d5d8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d5d9         align      4
000000000000d5dc         dd         0x00000028                                  ; Length of the record
000000000000d5e0         dd         0x00000588                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d5e4         db         0x1c, 0x7c, 2 dup (0xff)                    ; begin 0x5200
000000000000d5e8         db         0x47, 3 dup (0x00)                          ; length 0x47 (end at 0x5247)
000000000000d5ec         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d5ed         db  0x41 ; 'A'
000000000000d5ee         db  0x0e ; '.'
000000000000d5ef         db  0x10 ; '.'
000000000000d5f0         db  0x83 ; '.'
000000000000d5f1         db  0x02 ; '.'
000000000000d5f2         db  0x5a ; 'Z'
000000000000d5f3         db  0x0a ; '.'
000000000000d5f4         db  0x0e ; '.'
000000000000d5f5         db  0x08 ; '.'
000000000000d5f6         db  0x45 ; 'E'
000000000000d5f7         db  0x0b ; '.'
000000000000d5f8         db  0x5d ; ']'
000000000000d5f9         db  0x0a ; '.'
000000000000d5fa         db  0x0e ; '.'
000000000000d5fb         db  0x08 ; '.'
000000000000d5fc         db  0x43 ; 'C'
000000000000d5fd         db  0x0b ; '.'
000000000000d5fe         db  0x46 ; 'F'
000000000000d5ff         db  0x0e ; '.'
000000000000d600         db  0x08 ; '.'
000000000000d601         db  0x00 ; '.'
000000000000d602         db  0x00 ; '.'
000000000000d603         db  0x00 ; '.'
000000000000d604         db  0x00 ; '.'
000000000000d605         db  0x00 ; '.'
000000000000d606         db  0x00 ; '.'
000000000000d607         db  0x00 ; '.'
000000000000d608         dd         0x00000024                                  ; Length of the record
000000000000d60c         dd         0x000005b4                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d610         db         0x40, 0x7c, 2 dup (0xff)                    ; begin 0x5250
000000000000d614         db         0x33, 3 dup (0x00)                          ; length 0x33 (end at 0x5283)
000000000000d618         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d619         db  0x41 ; 'A'
000000000000d61a         db  0x0e ; '.'
000000000000d61b         db  0x10 ; '.'
000000000000d61c         db  0x86 ; '.'
000000000000d61d         db  0x02 ; '.'
000000000000d61e         db  0x41 ; 'A'
000000000000d61f         db  0x0e ; '.'
000000000000d620         db  0x18 ; '.'
000000000000d621         db  0x83 ; '.'
000000000000d622         db  0x03 ; '.'
000000000000d623         db  0x47 ; 'G'
000000000000d624         db  0x0e ; '.'
000000000000d625         db  0x20 ; ' '
000000000000d626         db  0x67 ; 'g'
000000000000d627         db  0x0e ; '.'
000000000000d628         db  0x18 ; '.'
000000000000d629         db  0x41 ; 'A'
000000000000d62a         db  0x0e ; '.'
000000000000d62b         db  0x10 ; '.'
000000000000d62c         db  0x41 ; 'A'
000000000000d62d         db  0x0e ; '.'
000000000000d62e         db  0x08 ; '.'
000000000000d62f         db  0x00 ; '.'
000000000000d630         dd         0x0000005c                                  ; Length of the record
000000000000d634         dd         0x000005dc                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d638         db         0x58, 0x7c, 2 dup (0xff)                    ; begin 0x5290
000000000000d63c         db         0x87, 3 dup (0x00)                          ; length 0x87 (end at 0x5317)
000000000000d640         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d641         db  0x47 ; 'G'
000000000000d642         db  0x0e ; '.'
000000000000d643         db  0x10 ; '.'
000000000000d644         db  0x8d ; '.'
000000000000d645         db  0x02 ; '.'
000000000000d646         db  0x42 ; 'B'
000000000000d647         db  0x0e ; '.'
000000000000d648         db  0x18 ; '.'
000000000000d649         db  0x8c ; '.'
000000000000d64a         db  0x03 ; '.'
000000000000d64b         db  0x44 ; 'D'
000000000000d64c         db  0x0e ; '.'
000000000000d64d         db  0x20 ; ' '
000000000000d64e         db  0x86 ; '.'
000000000000d64f         db  0x04 ; '.'
000000000000d650         db  0x41 ; 'A'
000000000000d651         db  0x0e ; '.'
000000000000d652         db  0x28 ; '('
000000000000d653         db  0x83 ; '.'
000000000000d654         db  0x05 ; '.'
000000000000d655         db  0x4f ; 'O'
000000000000d656         db  0x0e ; '.'
000000000000d657         db  0x30 ; '0'
000000000000d658         db  0x7c ; '|'
000000000000d659         db  0x0a ; '.'
000000000000d65a         db  0x0e ; '.'
000000000000d65b         db  0x28 ; '('
000000000000d65c         db  0x44 ; 'D'
000000000000d65d         db  0xc3 ; '.'
000000000000d65e         db  0x0e ; '.'
000000000000d65f         db  0x20 ; ' '
000000000000d660         db  0x41 ; 'A'
000000000000d661         db  0xc6 ; '.'
000000000000d662         db  0x0e ; '.'
000000000000d663         db  0x18 ; '.'
000000000000d664         db  0x42 ; 'B'
000000000000d665         db  0xcc ; '.'
000000000000d666         db  0x0e ; '.'
000000000000d667         db  0x10 ; '.'
000000000000d668         db  0x42 ; 'B'
000000000000d669         db  0xcd ; '.'
000000000000d66a         db  0x0e ; '.'
000000000000d66b         db  0x08 ; '.'
000000000000d66c         db  0x4e ; 'N'
000000000000d66d         db  0x0b ; '.'
000000000000d66e         db  0x44 ; 'D'
000000000000d66f         db  0x0e ; '.'
000000000000d670         db  0x28 ; '('
000000000000d671         db  0x41 ; 'A'
000000000000d672         db  0x0e ; '.'
000000000000d673         db  0x20 ; ' '
000000000000d674         db  0x41 ; 'A'
000000000000d675         db  0x0e ; '.'
000000000000d676         db  0x18 ; '.'
000000000000d677         db  0x42 ; 'B'
000000000000d678         db  0x0e ; '.'
000000000000d679         db  0x10 ; '.'
000000000000d67a         db  0x42 ; 'B'
000000000000d67b         db  0x0e ; '.'
000000000000d67c         db  0x08 ; '.'
000000000000d67d         db  0x46 ; 'F'
000000000000d67e         db  0xc3 ; '.'
000000000000d67f         db  0xc6 ; '.'
000000000000d680         db  0xcc ; '.'
000000000000d681         db  0xcd ; '.'
000000000000d682         db  0x42 ; 'B'
000000000000d683         db  0x0e ; '.'
000000000000d684         db  0x30 ; '0'
000000000000d685         db  0x83 ; '.'
000000000000d686         db  0x05 ; '.'
000000000000d687         db  0x86 ; '.'
000000000000d688         db  0x04 ; '.'
000000000000d689         db  0x8c ; '.'
000000000000d68a         db  0x03 ; '.'
000000000000d68b         db  0x8d ; '.'
000000000000d68c         db  0x02 ; '.'
000000000000d68d         db  0x00 ; '.'
000000000000d68e         db  0x00 ; '.'
000000000000d68f         db  0x00 ; '.'
000000000000d690         dd         0x0000001c                                  ; Length of the record
000000000000d694         dd         0x0000063c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d698         db         0x88, 0x7c, 2 dup (0xff)                    ; begin 0x5320
000000000000d69c         db         0x56, 3 dup (0x00)                          ; length 0x56 (end at 0x5376)
000000000000d6a0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d6a1         db  0x44 ; 'D'
000000000000d6a2         db  0x0e ; '.'
000000000000d6a3         db  0x30 ; '0'
000000000000d6a4         db  0x02 ; '.'
000000000000d6a5         db  0x4c ; 'L'
000000000000d6a6         db  0x0a ; '.'
000000000000d6a7         db  0x0e ; '.'
000000000000d6a8         db  0x08 ; '.'
000000000000d6a9         db  0x41 ; 'A'
000000000000d6aa         db  0x0b ; '.'
000000000000d6ab         db  0x00 ; '.'
000000000000d6ac         db  0x00 ; '.'
000000000000d6ad         db  0x00 ; '.'
000000000000d6ae         db  0x00 ; '.'
000000000000d6af         db  0x00 ; '.'
000000000000d6b0         dd         0x0000001c                                  ; Length of the record
000000000000d6b4         dd         0x0000065c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d6b8         db         0xc8, 0x7c, 2 dup (0xff)                    ; begin 0x5380
000000000000d6bc         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5398)
000000000000d6c0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d6c1         db  0x44 ; 'D'
000000000000d6c2         db  0x0e ; '.'
000000000000d6c3         db  0x10 ; '.'
000000000000d6c4         db  0x4e ; 'N'
000000000000d6c5         db  0x0a ; '.'
000000000000d6c6         db  0x0e ; '.'
000000000000d6c7         db  0x08 ; '.'
000000000000d6c8         db  0x41 ; 'A'
000000000000d6c9         db  0x0b ; '.'
000000000000d6ca         db  0x00 ; '.'
000000000000d6cb         db  0x00 ; '.'
000000000000d6cc         db  0x00 ; '.'
000000000000d6cd         db  0x00 ; '.'
000000000000d6ce         db  0x00 ; '.'
000000000000d6cf         db  0x00 ; '.'
000000000000d6d0         dd         0x0000004c                                  ; Length of the record
000000000000d6d4         dd         0x0000067c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d6d8         db         0xc8, 0x7c, 2 dup (0xff)                    ; begin 0x53a0
000000000000d6dc         db         0xff, 3 dup (0x00)                          ; length 0xff (end at 0x549f)
000000000000d6e0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d6e1         db  0x42 ; 'B'
000000000000d6e2         db  0x0e ; '.'
000000000000d6e3         db  0x10 ; '.'
000000000000d6e4         db  0x8f ; '.'
000000000000d6e5         db  0x02 ; '.'
000000000000d6e6         db  0x42 ; 'B'
000000000000d6e7         db  0x0e ; '.'
000000000000d6e8         db  0x18 ; '.'
000000000000d6e9         db  0x8e ; '.'
000000000000d6ea         db  0x03 ; '.'
000000000000d6eb         db  0x45 ; 'E'
000000000000d6ec         db  0x0e ; '.'
000000000000d6ed         db  0x20 ; ' '
000000000000d6ee         db  0x8d ; '.'
000000000000d6ef         db  0x04 ; '.'
000000000000d6f0         db  0x42 ; 'B'
000000000000d6f1         db  0x0e ; '.'
000000000000d6f2         db  0x28 ; '('
000000000000d6f3         db  0x8c ; '.'
000000000000d6f4         db  0x05 ; '.'
000000000000d6f5         db  0x44 ; 'D'
000000000000d6f6         db  0x0e ; '.'
000000000000d6f7         db  0x30 ; '0'
000000000000d6f8         db  0x86 ; '.'
000000000000d6f9         db  0x06 ; '.'
000000000000d6fa         db  0x41 ; 'A'
000000000000d6fb         db  0x0e ; '.'
000000000000d6fc         db  0x38 ; '8'
000000000000d6fd         db  0x83 ; '.'
000000000000d6fe         db  0x07 ; '.'
000000000000d6ff         db  0x47 ; 'G'
000000000000d700         db  0x0e ; '.'
000000000000d701         db  0x50 ; 'P'
000000000000d702         db  0x02 ; '.'
000000000000d703         db  0xc3 ; '.'
000000000000d704         db  0x0a ; '.'
000000000000d705         db  0x0e ; '.'
000000000000d706         db  0x38 ; '8'
000000000000d707         db  0x44 ; 'D'
000000000000d708         db  0x0e ; '.'
000000000000d709         db  0x30 ; '0'
000000000000d70a         db  0x41 ; 'A'
000000000000d70b         db  0x0e ; '.'
000000000000d70c         db  0x28 ; '('
000000000000d70d         db  0x42 ; 'B'
000000000000d70e         db  0x0e ; '.'
000000000000d70f         db  0x20 ; ' '
000000000000d710         db  0x42 ; 'B'
000000000000d711         db  0x0e ; '.'
000000000000d712         db  0x18 ; '.'
000000000000d713         db  0x42 ; 'B'
000000000000d714         db  0x0e ; '.'
000000000000d715         db  0x10 ; '.'
000000000000d716         db  0x42 ; 'B'
000000000000d717         db  0x0e ; '.'
000000000000d718         db  0x08 ; '.'
000000000000d719         db  0x49 ; 'I'
000000000000d71a         db  0x0b ; '.'
000000000000d71b         db  0x00 ; '.'
000000000000d71c         db  0x00 ; '.'
000000000000d71d         db  0x00 ; '.'
000000000000d71e         db  0x00 ; '.'
000000000000d71f         db  0x00 ; '.'
000000000000d720         dd         0x00000010                                  ; Length of the record
000000000000d724         dd         0x000006cc                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d728         db         0x78, 0x7d, 2 dup (0xff)                    ; begin 0x54a0
000000000000d72c         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x5533)
000000000000d730         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d731         align      4
000000000000d734         dd         0x00000010                                  ; Length of the record
000000000000d738         dd         0x000006e0                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d73c         db         0x04, 0x7e, 2 dup (0xff)                    ; begin 0x5540
000000000000d740         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x5550)
000000000000d744         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d745         align      8
000000000000d748         dd         0x00000010                                  ; Length of the record
000000000000d74c         dd         0x000006f4                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d750         db         0x00, 0x7e, 2 dup (0xff)                    ; begin 0x5550
000000000000d754         db         0x07, 3 dup (0x00)                          ; length 0x7 (end at 0x5557)
000000000000d758         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d759         align      4
000000000000d75c         dd         0x00000018                                  ; Length of the record
000000000000d760         dd         0x00000708                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d764         db         0xfc, 0x7d, 2 dup (0xff)                    ; begin 0x5560
000000000000d768         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0x5582)
000000000000d76c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d76d         db  0x41 ; 'A'
000000000000d76e         db  0x0e ; '.'
000000000000d76f         db  0x10 ; '.'
000000000000d770         db  0x83 ; '.'
000000000000d771         db  0x02 ; '.'
000000000000d772         db  0x5b ; '['
000000000000d773         db  0x0a ; '.'
000000000000d774         db  0x0e ; '.'
000000000000d775         db  0x08 ; '.'
000000000000d776         db  0x41 ; 'A'
000000000000d777         db  0x0b ; '.'
000000000000d778         dd         0x0000005c                                  ; Length of the record
000000000000d77c         dd         0x00000724                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d780         db         0x10, 0x7e, 2 dup (0xff)                    ; begin 0x5590
000000000000d784         db         0x1e, 0x01, 2 dup (0x00)                    ; length 0x11e (end at 0x56ae)
000000000000d788         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d789         db  0x42 ; 'B'
000000000000d78a         db  0x0e ; '.'
000000000000d78b         db  0x10 ; '.'
000000000000d78c         db  0x8e ; '.'
000000000000d78d         db  0x02 ; '.'
000000000000d78e         db  0x42 ; 'B'
000000000000d78f         db  0x0e ; '.'
000000000000d790         db  0x18 ; '.'
000000000000d791         db  0x8d ; '.'
000000000000d792         db  0x03 ; '.'
000000000000d793         db  0x45 ; 'E'
000000000000d794         db  0x0e ; '.'
000000000000d795         db  0x20 ; ' '
000000000000d796         db  0x8c ; '.'
000000000000d797         db  0x04 ; '.'
000000000000d798         db  0x41 ; 'A'
000000000000d799         db  0x0e ; '.'
000000000000d79a         db  0x28 ; '('
000000000000d79b         db  0x86 ; '.'
000000000000d79c         db  0x05 ; '.'
000000000000d79d         db  0x44 ; 'D'
000000000000d79e         db  0x0e ; '.'
000000000000d79f         db  0x30 ; '0'
000000000000d7a0         db  0x83 ; '.'
000000000000d7a1         db  0x06 ; '.'
000000000000d7a2         db  0x02 ; '.'
000000000000d7a3         db  0xa1 ; '.'
000000000000d7a4         db  0x0a ; '.'
000000000000d7a5         db  0x0e ; '.'
000000000000d7a6         db  0x28 ; '('
000000000000d7a7         db  0x44 ; 'D'
000000000000d7a8         db  0x0e ; '.'
000000000000d7a9         db  0x20 ; ' '
000000000000d7aa         db  0x42 ; 'B'
000000000000d7ab         db  0x0e ; '.'
000000000000d7ac         db  0x18 ; '.'
000000000000d7ad         db  0x42 ; 'B'
000000000000d7ae         db  0x0e ; '.'
000000000000d7af         db  0x10 ; '.'
000000000000d7b0         db  0x42 ; 'B'
000000000000d7b1         db  0x0e ; '.'
000000000000d7b2         db  0x08 ; '.'
000000000000d7b3         db  0x47 ; 'G'
000000000000d7b4         db  0x0b ; '.'
000000000000d7b5         db  0x71 ; 'q'
000000000000d7b6         db  0x0a ; '.'
000000000000d7b7         db  0x0e ; '.'
000000000000d7b8         db  0x28 ; '('
000000000000d7b9         db  0x41 ; 'A'
000000000000d7ba         db  0x0e ; '.'
000000000000d7bb         db  0x20 ; ' '
000000000000d7bc         db  0x42 ; 'B'
000000000000d7bd         db  0x0e ; '.'
000000000000d7be         db  0x18 ; '.'
000000000000d7bf         db  0x42 ; 'B'
000000000000d7c0         db  0x0e ; '.'
000000000000d7c1         db  0x10 ; '.'
000000000000d7c2         db  0x42 ; 'B'
000000000000d7c3         db  0x0e ; '.'
000000000000d7c4         db  0x08 ; '.'
000000000000d7c5         db  0x48 ; 'H'
000000000000d7c6         db  0x0b ; '.'
000000000000d7c7         db  0x53 ; 'S'
000000000000d7c8         db  0x0e ; '.'
000000000000d7c9         db  0x28 ; '('
000000000000d7ca         db  0x44 ; 'D'
000000000000d7cb         db  0x0e ; '.'
000000000000d7cc         db  0x20 ; ' '
000000000000d7cd         db  0x42 ; 'B'
000000000000d7ce         db  0x0e ; '.'
000000000000d7cf         db  0x18 ; '.'
000000000000d7d0         db  0x42 ; 'B'
000000000000d7d1         db  0x0e ; '.'
000000000000d7d2         db  0x10 ; '.'
000000000000d7d3         db  0x42 ; 'B'
000000000000d7d4         db  0x0e ; '.'
000000000000d7d5         db  0x08 ; '.'
000000000000d7d6         db  0x00 ; '.'
000000000000d7d7         db  0x00 ; '.'
000000000000d7d8         dd         0x00000010                                  ; Length of the record
000000000000d7dc         dd         0x00000784                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d7e0         db         0xd0, 0x7e, 2 dup (0xff)                    ; begin 0x56b0
000000000000d7e4         db         0x77, 3 dup (0x00)                          ; length 0x77 (end at 0x5727)
000000000000d7e8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d7e9         align      4
000000000000d7ec         dd         0x0000005c                                  ; Length of the record
000000000000d7f0         dd         0x00000798                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d7f4         db         0x3c, 0x7f, 2 dup (0xff)                    ; begin 0x5730
000000000000d7f8         db         0x40, 0x01, 2 dup (0x00)                    ; length 0x140 (end at 0x5870)
000000000000d7fc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d7fd         db  0x42 ; 'B'
000000000000d7fe         db  0x0e ; '.'
000000000000d7ff         db  0x10 ; '.'
000000000000d800         db  0x8f ; '.'
000000000000d801         db  0x02 ; '.'
000000000000d802         db  0x42 ; 'B'
000000000000d803         db  0x0e ; '.'
000000000000d804         db  0x18 ; '.'
000000000000d805         db  0x8e ; '.'
000000000000d806         db  0x03 ; '.'
000000000000d807         db  0x42 ; 'B'
000000000000d808         db  0x0e ; '.'
000000000000d809         db  0x20 ; ' '
000000000000d80a         db  0x8d ; '.'
000000000000d80b         db  0x04 ; '.'
000000000000d80c         db  0x42 ; 'B'
000000000000d80d         db  0x0e ; '.'
000000000000d80e         db  0x28 ; '('
000000000000d80f         db  0x8c ; '.'
000000000000d810         db  0x05 ; '.'
000000000000d811         db  0x41 ; 'A'
000000000000d812         db  0x0e ; '.'
000000000000d813         db  0x30 ; '0'
000000000000d814         db  0x86 ; '.'
000000000000d815         db  0x06 ; '.'
000000000000d816         db  0x41 ; 'A'
000000000000d817         db  0x0e ; '.'
000000000000d818         db  0x38 ; '8'
000000000000d819         db  0x83 ; '.'
000000000000d81a         db  0x07 ; '.'
000000000000d81b         db  0x44 ; 'D'
000000000000d81c         db  0x0e ; '.'
000000000000d81d         db  0x40 ; '@'
000000000000d81e         db  0x02 ; '.'
000000000000d81f         db  0xee ; '.'
000000000000d820         db  0x0a ; '.'
000000000000d821         db  0x0e ; '.'
000000000000d822         db  0x38 ; '8'
000000000000d823         db  0x46 ; 'F'
000000000000d824         db  0x0e ; '.'
000000000000d825         db  0x30 ; '0'
000000000000d826         db  0x41 ; 'A'
000000000000d827         db  0x0e ; '.'
000000000000d828         db  0x28 ; '('
000000000000d829         db  0x42 ; 'B'
000000000000d82a         db  0x0e ; '.'
000000000000d82b         db  0x20 ; ' '
000000000000d82c         db  0x42 ; 'B'
000000000000d82d         db  0x0e ; '.'
000000000000d82e         db  0x18 ; '.'
000000000000d82f         db  0x42 ; 'B'
000000000000d830         db  0x0e ; '.'
000000000000d831         db  0x10 ; '.'
000000000000d832         db  0x42 ; 'B'
000000000000d833         db  0x0e ; '.'
000000000000d834         db  0x08 ; '.'
000000000000d835         db  0x45 ; 'E'
000000000000d836         db  0x0b ; '.'
000000000000d837         db  0x63 ; 'c'
000000000000d838         db  0x0e ; '.'
000000000000d839         db  0x38 ; '8'
000000000000d83a         db  0x43 ; 'C'
000000000000d83b         db  0x0e ; '.'
000000000000d83c         db  0x30 ; '0'
000000000000d83d         db  0x41 ; 'A'
000000000000d83e         db  0x0e ; '.'
000000000000d83f         db  0x28 ; '('
000000000000d840         db  0x42 ; 'B'
000000000000d841         db  0x0e ; '.'
000000000000d842         db  0x20 ; ' '
000000000000d843         db  0x42 ; 'B'
000000000000d844         db  0x0e ; '.'
000000000000d845         db  0x18 ; '.'
000000000000d846         db  0x42 ; 'B'
000000000000d847         db  0x0e ; '.'
000000000000d848         db  0x10 ; '.'
000000000000d849         db  0x42 ; 'B'
000000000000d84a         db  0x0e ; '.'
000000000000d84b         db  0x08 ; '.'
000000000000d84c         dd         0x00000010                                  ; Length of the record
000000000000d850         dd         0x000007f8                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d854         db         0x1c, 0x80, 2 dup (0xff)                    ; begin 0x5870
000000000000d858         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x5875)
000000000000d85c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d85d         align      32
000000000000d860         dd         0x00000010                                  ; Length of the record
000000000000d864         dd         0x0000080c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d868         db         0x18, 0x80, 2 dup (0xff)                    ; begin 0x5880
000000000000d86c         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x5885)
000000000000d870         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d871         align      4
000000000000d874         dd         0x00000010                                  ; Length of the record
000000000000d878         dd         0x00000820                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d87c         db         0x14, 0x80, 2 dup (0xff)                    ; begin 0x5890
000000000000d880         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x5895)
000000000000d884         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d885         align      8
000000000000d888         dd         0x00000010                                  ; Length of the record
000000000000d88c         dd         0x00000834                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d890         db         0x10, 0x80, 2 dup (0xff)                    ; begin 0x58a0
000000000000d894         db         0x49, 3 dup (0x00)                          ; length 0x49 (end at 0x58e9)
000000000000d898         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d899         align      4
000000000000d89c         dd         0x00000010                                  ; Length of the record
000000000000d8a0         dd         0x00000848                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d8a4         db         0x4c, 0x80, 2 dup (0xff)                    ; begin 0x58f0
000000000000d8a8         db         0x58, 3 dup (0x00)                          ; length 0x58 (end at 0x5948)
000000000000d8ac         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d8ad         align      16
000000000000d8b0         dd         0x00000038                                  ; Length of the record
000000000000d8b4         dd         0x0000085c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d8b8         db         0x98, 0x80, 2 dup (0xff)                    ; begin 0x5950
000000000000d8bc         db         0x47, 0x01, 2 dup (0x00)                    ; length 0x147 (end at 0x5a97)
000000000000d8c0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d8c1         db  0x42 ; 'B'
000000000000d8c2         db  0x0e ; '.'
000000000000d8c3         db  0x10 ; '.'
000000000000d8c4         db  0x8d ; '.'
000000000000d8c5         db  0x02 ; '.'
000000000000d8c6         db  0x42 ; 'B'
000000000000d8c7         db  0x0e ; '.'
000000000000d8c8         db  0x18 ; '.'
000000000000d8c9         db  0x8c ; '.'
000000000000d8ca         db  0x03 ; '.'
000000000000d8cb         db  0x44 ; 'D'
000000000000d8cc         db  0x0e ; '.'
000000000000d8cd         db  0x20 ; ' '
000000000000d8ce         db  0x86 ; '.'
000000000000d8cf         db  0x04 ; '.'
000000000000d8d0         db  0x41 ; 'A'
000000000000d8d1         db  0x0e ; '.'
000000000000d8d2         db  0x28 ; '('
000000000000d8d3         db  0x83 ; '.'
000000000000d8d4         db  0x05 ; '.'
000000000000d8d5         db  0x46 ; 'F'
000000000000d8d6         db  0x0e ; '.'
000000000000d8d7         db  0x30 ; '0'
000000000000d8d8         db  0x02 ; '.'
000000000000d8d9         db  0xcd ; '.'
000000000000d8da         db  0x0a ; '.'
000000000000d8db         db  0x0e ; '.'
000000000000d8dc         db  0x28 ; '('
000000000000d8dd         db  0x47 ; 'G'
000000000000d8de         db  0x0e ; '.'
000000000000d8df         db  0x20 ; ' '
000000000000d8e0         db  0x41 ; 'A'
000000000000d8e1         db  0x0e ; '.'
000000000000d8e2         db  0x18 ; '.'
000000000000d8e3         db  0x42 ; 'B'
000000000000d8e4         db  0x0e ; '.'
000000000000d8e5         db  0x10 ; '.'
000000000000d8e6         db  0x42 ; 'B'
000000000000d8e7         db  0x0e ; '.'
000000000000d8e8         db  0x08 ; '.'
000000000000d8e9         db  0x58 ; 'X'
000000000000d8ea         db  0x0b ; '.'
000000000000d8eb         db  0x00 ; '.'
000000000000d8ec         dd         0x00000034                                  ; Length of the record
000000000000d8f0         dd         0x00000898                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d8f4         db         0xac, 0x81, 2 dup (0xff)                    ; begin 0x5aa0
000000000000d8f8         db         0x5b, 3 dup (0x00)                          ; length 0x5b (end at 0x5afb)
000000000000d8fc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d8fd         db  0x42 ; 'B'
000000000000d8fe         db  0x0e ; '.'
000000000000d8ff         db  0x10 ; '.'
000000000000d900         db  0x8c ; '.'
000000000000d901         db  0x02 ; '.'
000000000000d902         db  0x41 ; 'A'
000000000000d903         db  0x0e ; '.'
000000000000d904         db  0x18 ; '.'
000000000000d905         db  0x86 ; '.'
000000000000d906         db  0x03 ; '.'
000000000000d907         db  0x44 ; 'D'
000000000000d908         db  0x0e ; '.'
000000000000d909         db  0x20 ; ' '
000000000000d90a         db  0x83 ; '.'
000000000000d90b         db  0x04 ; '.'
000000000000d90c         db  0x79 ; 'y'
000000000000d90d         db  0x0a ; '.'
000000000000d90e         db  0x0e ; '.'
000000000000d90f         db  0x18 ; '.'
000000000000d910         db  0x44 ; 'D'
000000000000d911         db  0x0e ; '.'
000000000000d912         db  0x10 ; '.'
000000000000d913         db  0x42 ; 'B'
000000000000d914         db  0x0e ; '.'
000000000000d915         db  0x08 ; '.'
000000000000d916         db  0x4a ; 'J'
000000000000d917         db  0x0b ; '.'
000000000000d918         db  0x44 ; 'D'
000000000000d919         db  0x0e ; '.'
000000000000d91a         db  0x18 ; '.'
000000000000d91b         db  0x41 ; 'A'
000000000000d91c         db  0x0e ; '.'
000000000000d91d         db  0x10 ; '.'
000000000000d91e         db  0x45 ; 'E'
000000000000d91f         db  0x0e ; '.'
000000000000d920         db  0x08 ; '.'
000000000000d921         db  0x00 ; '.'
000000000000d922         db  0x00 ; '.'
000000000000d923         db  0x00 ; '.'
000000000000d924         dd         0x00000010                                  ; Length of the record
000000000000d928         dd         0x000008d0                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d92c         db         0xd4, 0x81, 2 dup (0xff)                    ; begin 0x5b00
000000000000d930         db         0x41, 3 dup (0x00)                          ; length 0x41 (end at 0x5b41)
000000000000d934         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d935         db  0x7c ; '|'
000000000000d936         db  0x0e ; '.'
000000000000d937         db  0x10 ; '.'
000000000000d938         dd         0x00000030                                  ; Length of the record
000000000000d93c         dd         0x000008e4                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d940         db         0x10, 0x82, 2 dup (0xff)                    ; begin 0x5b50
000000000000d944         db         0x72, 3 dup (0x00)                          ; length 0x72 (end at 0x5bc2)
000000000000d948         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d949         db  0x41 ; 'A'
000000000000d94a         db  0x0e ; '.'
000000000000d94b         db  0x10 ; '.'
000000000000d94c         db  0x86 ; '.'
000000000000d94d         db  0x02 ; '.'
000000000000d94e         db  0x41 ; 'A'
000000000000d94f         db  0x0e ; '.'
000000000000d950         db  0x18 ; '.'
000000000000d951         db  0x83 ; '.'
000000000000d952         db  0x03 ; '.'
000000000000d953         db  0x4a ; 'J'
000000000000d954         db  0x0e ; '.'
000000000000d955         db  0x20 ; ' '
000000000000d956         db  0x02 ; '.'
000000000000d957         db  0x53 ; 'S'
000000000000d958         db  0x0a ; '.'
000000000000d959         db  0x0e ; '.'
000000000000d95a         db  0x18 ; '.'
000000000000d95b         db  0x41 ; 'A'
000000000000d95c         db  0x0e ; '.'
000000000000d95d         db  0x10 ; '.'
000000000000d95e         db  0x41 ; 'A'
000000000000d95f         db  0x0e ; '.'
000000000000d960         db  0x08 ; '.'
000000000000d961         db  0x47 ; 'G'
000000000000d962         db  0x0b ; '.'
000000000000d963         db  0x47 ; 'G'
000000000000d964         db  0x0e ; '.'
000000000000d965         db  0x18 ; '.'
000000000000d966         db  0x41 ; 'A'
000000000000d967         db  0x0e ; '.'
000000000000d968         db  0x10 ; '.'
000000000000d969         db  0x41 ; 'A'
000000000000d96a         db  0x0e ; '.'
000000000000d96b         db  0x08 ; '.'
000000000000d96c         dd         0x00000010                                  ; Length of the record
000000000000d970         dd         0x00000918                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d974         db         0x5c, 0x82, 2 dup (0xff)                    ; begin 0x5bd0
000000000000d978         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x5c35)
000000000000d97c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d97d         align      128
000000000000d980         dd         0x00000048                                  ; Length of the record
000000000000d984         dd         0x0000092c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d988         db         0xb8, 0x82, 2 dup (0xff)                    ; begin 0x5c40
000000000000d98c         db         0x6a, 3 dup (0x00)                          ; length 0x6a (end at 0x5caa)
000000000000d990         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d991         db  0x42 ; 'B'
000000000000d992         db  0x0e ; '.'
000000000000d993         db  0x10 ; '.'
000000000000d994         db  0x8f ; '.'
000000000000d995         db  0x02 ; '.'
000000000000d996         db  0x42 ; 'B'
000000000000d997         db  0x0e ; '.'
000000000000d998         db  0x18 ; '.'
000000000000d999         db  0x8e ; '.'
000000000000d99a         db  0x03 ; '.'
000000000000d99b         db  0x42 ; 'B'
000000000000d99c         db  0x0e ; '.'
000000000000d99d         db  0x20 ; ' '
000000000000d99e         db  0x8d ; '.'
000000000000d99f         db  0x04 ; '.'
000000000000d9a0         db  0x42 ; 'B'
000000000000d9a1         db  0x0e ; '.'
000000000000d9a2         db  0x28 ; '('
000000000000d9a3         db  0x8c ; '.'
000000000000d9a4         db  0x05 ; '.'
000000000000d9a5         db  0x41 ; 'A'
000000000000d9a6         db  0x0e ; '.'
000000000000d9a7         db  0x30 ; '0'
000000000000d9a8         db  0x86 ; '.'
000000000000d9a9         db  0x06 ; '.'
000000000000d9aa         db  0x41 ; 'A'
000000000000d9ab         db  0x0e ; '.'
000000000000d9ac         db  0x38 ; '8'
000000000000d9ad         db  0x83 ; '.'
000000000000d9ae         db  0x07 ; '.'
000000000000d9af         db  0x44 ; 'D'
000000000000d9b0         db  0x0e ; '.'
000000000000d9b1         db  0x40 ; '@'
000000000000d9b2         db  0x02 ; '.'
000000000000d9b3         db  0x4a ; 'J'
000000000000d9b4         db  0x0a ; '.'
000000000000d9b5         db  0x0e ; '.'
000000000000d9b6         db  0x38 ; '8'
000000000000d9b7         db  0x44 ; 'D'
000000000000d9b8         db  0x0e ; '.'
000000000000d9b9         db  0x30 ; '0'
000000000000d9ba         db  0x41 ; 'A'
000000000000d9bb         db  0x0e ; '.'
000000000000d9bc         db  0x28 ; '('
000000000000d9bd         db  0x42 ; 'B'
000000000000d9be         db  0x0e ; '.'
000000000000d9bf         db  0x20 ; ' '
000000000000d9c0         db  0x42 ; 'B'
000000000000d9c1         db  0x0e ; '.'
000000000000d9c2         db  0x18 ; '.'
000000000000d9c3         db  0x42 ; 'B'
000000000000d9c4         db  0x0e ; '.'
000000000000d9c5         db  0x10 ; '.'
000000000000d9c6         db  0x42 ; 'B'
000000000000d9c7         db  0x0e ; '.'
000000000000d9c8         db  0x08 ; '.'
000000000000d9c9         db  0x41 ; 'A'
000000000000d9ca         db  0x0b ; '.'
000000000000d9cb         db  0x00 ; '.'
000000000000d9cc         dd         0x00000010                                  ; Length of the record
000000000000d9d0         dd         0x00000978                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d9d4         db         0xdc, 0x82, 2 dup (0xff)                    ; begin 0x5cb0
000000000000d9d8         db         0x31, 3 dup (0x00)                          ; length 0x31 (end at 0x5ce1)
000000000000d9dc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d9dd         align      32
000000000000d9e0         dd         0x00000010                                  ; Length of the record
000000000000d9e4         dd         0x0000098c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d9e8         db         0x08, 0x83, 2 dup (0xff)                    ; begin 0x5cf0
000000000000d9ec         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x5d10)
000000000000d9f0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000d9f1         align      4
000000000000d9f4         dd         0x00000048                                  ; Length of the record
000000000000d9f8         dd         0x000009a0                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000d9fc         db         0x14, 0x83, 2 dup (0xff)                    ; begin 0x5d10
000000000000da00         db         0xb4, 0x01, 2 dup (0x00)                    ; length 0x1b4 (end at 0x5ec4)
000000000000da04         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000da05         db  0x42 ; 'B'
000000000000da06         db  0x0e ; '.'
000000000000da07         db  0x10 ; '.'
000000000000da08         db  0x8f ; '.'
000000000000da09         db  0x02 ; '.'
000000000000da0a         db  0x42 ; 'B'
000000000000da0b         db  0x0e ; '.'
000000000000da0c         db  0x18 ; '.'
000000000000da0d         db  0x8e ; '.'
000000000000da0e         db  0x03 ; '.'
000000000000da0f         db  0x49 ; 'I'
000000000000da10         db  0x0e ; '.'
000000000000da11         db  0x20 ; ' '
000000000000da12         db  0x8d ; '.'
000000000000da13         db  0x04 ; '.'
000000000000da14         db  0x42 ; 'B'
000000000000da15         db  0x0e ; '.'
000000000000da16         db  0x28 ; '('
000000000000da17         db  0x8c ; '.'
000000000000da18         db  0x05 ; '.'
000000000000da19         db  0x44 ; 'D'
000000000000da1a         db  0x0e ; '.'
000000000000da1b         db  0x30 ; '0'
000000000000da1c         db  0x86 ; '.'
000000000000da1d         db  0x06 ; '.'
000000000000da1e         db  0x41 ; 'A'
000000000000da1f         db  0x0e ; '.'
000000000000da20         db  0x38 ; '8'
000000000000da21         db  0x83 ; '.'
000000000000da22         db  0x07 ; '.'
000000000000da23         db  0x52 ; 'R'
000000000000da24         db  0x0e ; '.'
000000000000da25         db  0x40 ; '@'
000000000000da26         db  0x02 ; '.'
000000000000da27         db  0xd8 ; '.'
000000000000da28         db  0x0a ; '.'
000000000000da29         db  0x0e ; '.'
000000000000da2a         db  0x38 ; '8'
000000000000da2b         db  0x44 ; 'D'
000000000000da2c         db  0x0e ; '.'
000000000000da2d         db  0x30 ; '0'
000000000000da2e         db  0x41 ; 'A'
000000000000da2f         db  0x0e ; '.'
000000000000da30         db  0x28 ; '('
000000000000da31         db  0x42 ; 'B'
000000000000da32         db  0x0e ; '.'
000000000000da33         db  0x20 ; ' '
000000000000da34         db  0x42 ; 'B'
000000000000da35         db  0x0e ; '.'
000000000000da36         db  0x18 ; '.'
000000000000da37         db  0x42 ; 'B'
000000000000da38         db  0x0e ; '.'
000000000000da39         db  0x10 ; '.'
000000000000da3a         db  0x42 ; 'B'
000000000000da3b         db  0x0e ; '.'
000000000000da3c         db  0x08 ; '.'
000000000000da3d         db  0x45 ; 'E'
000000000000da3e         db  0x0b ; '.'
000000000000da3f         db  0x00 ; '.'
000000000000da40         dd         0x00000028                                  ; Length of the record
000000000000da44         dd         0x000009ec                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000da48         db         0x88, 0x84, 2 dup (0xff)                    ; begin 0x5ed0
000000000000da4c         db         0x90, 3 dup (0x00)                          ; length 0x90 (end at 0x5f60)
000000000000da50         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000da51         db  0x42 ; 'B'
000000000000da52         db  0x0e ; '.'
000000000000da53         db  0x10 ; '.'
000000000000da54         db  0x8c ; '.'
000000000000da55         db  0x02 ; '.'
000000000000da56         db  0x41 ; 'A'
000000000000da57         db  0x0e ; '.'
000000000000da58         db  0x18 ; '.'
000000000000da59         db  0x86 ; '.'
000000000000da5a         db  0x03 ; '.'
000000000000da5b         db  0x44 ; 'D'
000000000000da5c         db  0x0e ; '.'
000000000000da5d         db  0x20 ; ' '
000000000000da5e         db  0x83 ; '.'
000000000000da5f         db  0x04 ; '.'
000000000000da60         db  0x02 ; '.'
000000000000da61         db  0x85 ; '.'
000000000000da62         db  0x0e ; '.'
000000000000da63         db  0x18 ; '.'
000000000000da64         db  0x41 ; 'A'
000000000000da65         db  0x0e ; '.'
000000000000da66         db  0x10 ; '.'
000000000000da67         db  0x42 ; 'B'
000000000000da68         db  0x0e ; '.'
000000000000da69         db  0x08 ; '.'
000000000000da6a         db  0x00 ; '.'
000000000000da6b         db  0x00 ; '.'
000000000000da6c         dd         0x00000028                                  ; Length of the record
000000000000da70         dd         0x00000a18                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000da74         db         0xec, 0x84, 2 dup (0xff)                    ; begin 0x5f60
000000000000da78         db         0xd6, 3 dup (0x00)                          ; length 0xd6 (end at 0x6036)
000000000000da7c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000da7d         db  0x42 ; 'B'
000000000000da7e         db  0x0e ; '.'
000000000000da7f         db  0x10 ; '.'
000000000000da80         db  0x8c ; '.'
000000000000da81         db  0x02 ; '.'
000000000000da82         db  0x41 ; 'A'
000000000000da83         db  0x0e ; '.'
000000000000da84         db  0x18 ; '.'
000000000000da85         db  0x86 ; '.'
000000000000da86         db  0x03 ; '.'
000000000000da87         db  0x44 ; 'D'
000000000000da88         db  0x0e ; '.'
000000000000da89         db  0x20 ; ' '
000000000000da8a         db  0x83 ; '.'
000000000000da8b         db  0x04 ; '.'
000000000000da8c         db  0x02 ; '.'
000000000000da8d         db  0xc4 ; '.'
000000000000da8e         db  0x0e ; '.'
000000000000da8f         db  0x18 ; '.'
000000000000da90         db  0x44 ; 'D'
000000000000da91         db  0x0e ; '.'
000000000000da92         db  0x10 ; '.'
000000000000da93         db  0x42 ; 'B'
000000000000da94         db  0x0e ; '.'
000000000000da95         db  0x08 ; '.'
000000000000da96         db  0x00 ; '.'
000000000000da97         db  0x00 ; '.'
000000000000da98         dd         0x00000034                                  ; Length of the record
000000000000da9c         dd         0x00000a44                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000daa0         db         0xa0, 0x85, 2 dup (0xff)                    ; begin 0x6040
000000000000daa4         db         0x3e, 0x02, 2 dup (0x00)                    ; length 0x23e (end at 0x627e)
000000000000daa8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000daa9         db  0x42 ; 'B'
000000000000daaa         db  0x0e ; '.'
000000000000daab         db  0x10 ; '.'
000000000000daac         db  0x8c ; '.'
000000000000daad         db  0x02 ; '.'
000000000000daae         db  0x41 ; 'A'
000000000000daaf         db  0x0e ; '.'
000000000000dab0         db  0x18 ; '.'
000000000000dab1         db  0x86 ; '.'
000000000000dab2         db  0x03 ; '.'
000000000000dab3         db  0x44 ; 'D'
000000000000dab4         db  0x0e ; '.'
000000000000dab5         db  0x20 ; ' '
000000000000dab6         db  0x83 ; '.'
000000000000dab7         db  0x04 ; '.'
000000000000dab8         db  0x44 ; 'D'
000000000000dab9         db  0x0e ; '.'
000000000000daba         db  0x80 ; '.'
000000000000dabb         db  0x01 ; '.'
000000000000dabc         db  0x03 ; '.'
000000000000dabd         db  0x91 ; '.'
000000000000dabe         db  0x01 ; '.'
000000000000dabf         db  0x0a ; '.'
000000000000dac0         db  0x0e ; '.'
000000000000dac1         db  0x20 ; ' '
000000000000dac2         db  0x41 ; 'A'
000000000000dac3         db  0x0e ; '.'
000000000000dac4         db  0x18 ; '.'
000000000000dac5         db  0x41 ; 'A'
000000000000dac6         db  0x0e ; '.'
000000000000dac7         db  0x10 ; '.'
000000000000dac8         db  0x42 ; 'B'
000000000000dac9         db  0x0e ; '.'
000000000000daca         db  0x08 ; '.'
000000000000dacb         db  0x48 ; 'H'
000000000000dacc         db  0x0b ; '.'
000000000000dacd         db  0x00 ; '.'
000000000000dace         db  0x00 ; '.'
000000000000dacf         db  0x00 ; '.'
000000000000dad0         dd         0x00000038                                  ; Length of the record
000000000000dad4         dd         0x00000a7c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000dad8         db         0xa8, 0x87, 2 dup (0xff)                    ; begin 0x6280
000000000000dadc         db         0x84, 0x02, 2 dup (0x00)                    ; length 0x284 (end at 0x6504)
000000000000dae0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000dae1         db  0x42 ; 'B'
000000000000dae2         db  0x0e ; '.'
000000000000dae3         db  0x10 ; '.'
000000000000dae4         db  0x8d ; '.'
000000000000dae5         db  0x02 ; '.'
000000000000dae6         db  0x42 ; 'B'
000000000000dae7         db  0x0e ; '.'
000000000000dae8         db  0x18 ; '.'
000000000000dae9         db  0x8c ; '.'
000000000000daea         db  0x03 ; '.'
000000000000daeb         db  0x41 ; 'A'
000000000000daec         db  0x0e ; '.'
000000000000daed         db  0x20 ; ' '
000000000000daee         db  0x86 ; '.'
000000000000daef         db  0x04 ; '.'
000000000000daf0         db  0x41 ; 'A'
000000000000daf1         db  0x0e ; '.'
000000000000daf2         db  0x28 ; '('
000000000000daf3         db  0x83 ; '.'
000000000000daf4         db  0x05 ; '.'
000000000000daf5         db  0x44 ; 'D'
000000000000daf6         db  0x0e ; '.'
000000000000daf7         db  0x40 ; '@'
000000000000daf8         db  0x02 ; '.'
000000000000daf9         db  0x5a ; 'Z'
000000000000dafa         db  0x0a ; '.'
000000000000dafb         db  0x0e ; '.'
000000000000dafc         db  0x28 ; '('
000000000000dafd         db  0x41 ; 'A'
000000000000dafe         db  0x0e ; '.'
000000000000daff         db  0x20 ; ' '
000000000000db00         db  0x41 ; 'A'
000000000000db01         db  0x0e ; '.'
000000000000db02         db  0x18 ; '.'
000000000000db03         db  0x42 ; 'B'
000000000000db04         db  0x0e ; '.'
000000000000db05         db  0x10 ; '.'
000000000000db06         db  0x42 ; 'B'
000000000000db07         db  0x0e ; '.'
000000000000db08         db  0x08 ; '.'
000000000000db09         db  0x46 ; 'F'
000000000000db0a         db  0x0b ; '.'
000000000000db0b         db  0x00 ; '.'
000000000000db0c         dd         0x00000020                                  ; Length of the record
000000000000db10         dd         0x00000ab8                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000db14         db         0xfc, 0x89, 2 dup (0xff)                    ; begin 0x6510
000000000000db18         db         0x59, 3 dup (0x00)                          ; length 0x59 (end at 0x6569)
000000000000db1c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000db1d         db  0x41 ; 'A'
000000000000db1e         db  0x0e ; '.'
000000000000db1f         db  0x10 ; '.'
000000000000db20         db  0x83 ; '.'
000000000000db21         db  0x02 ; '.'
000000000000db22         db  0x47 ; 'G'
000000000000db23         db  0x0e ; '.'
000000000000db24         db  0x20 ; ' '
000000000000db25         db  0x7c ; '|'
000000000000db26         db  0x0a ; '.'
000000000000db27         db  0x0e ; '.'
000000000000db28         db  0x10 ; '.'
000000000000db29         db  0x41 ; 'A'
000000000000db2a         db  0x0e ; '.'
000000000000db2b         db  0x08 ; '.'
000000000000db2c         db  0x4b ; 'K'
000000000000db2d         db  0x0b ; '.'
000000000000db2e         db  0x00 ; '.'
000000000000db2f         db  0x00 ; '.'
000000000000db30         dd         0x00000034                                  ; Length of the record
000000000000db34         dd         0x00000adc                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000db38         db         0x38, 0x8a, 2 dup (0xff)                    ; begin 0x6570
000000000000db3c         db         0x03, 0x02, 2 dup (0x00)                    ; length 0x203 (end at 0x6773)
000000000000db40         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000db41         db  0x42 ; 'B'
000000000000db42         db  0x0e ; '.'
000000000000db43         db  0x10 ; '.'
000000000000db44         db  0x8c ; '.'
000000000000db45         db  0x02 ; '.'
000000000000db46         db  0x41 ; 'A'
000000000000db47         db  0x0e ; '.'
000000000000db48         db  0x18 ; '.'
000000000000db49         db  0x86 ; '.'
000000000000db4a         db  0x03 ; '.'
000000000000db4b         db  0x46 ; 'F'
000000000000db4c         db  0x0e ; '.'
000000000000db4d         db  0x20 ; ' '
000000000000db4e         db  0x83 ; '.'
000000000000db4f         db  0x04 ; '.'
000000000000db50         db  0x47 ; 'G'
000000000000db51         db  0x0e ; '.'
000000000000db52         db  0x30 ; '0'
000000000000db53         db  0x02 ; '.'
000000000000db54         db  0x4a ; 'J'
000000000000db55         db  0x0a ; '.'
000000000000db56         db  0x0e ; '.'
000000000000db57         db  0x20 ; ' '
000000000000db58         db  0x41 ; 'A'
000000000000db59         db  0x0e ; '.'
000000000000db5a         db  0x18 ; '.'
000000000000db5b         db  0x41 ; 'A'
000000000000db5c         db  0x0e ; '.'
000000000000db5d         db  0x10 ; '.'
000000000000db5e         db  0x42 ; 'B'
000000000000db5f         db  0x0e ; '.'
000000000000db60         db  0x08 ; '.'
000000000000db61         db  0x42 ; 'B'
000000000000db62         db  0x0b ; '.'
000000000000db63         db  0x00 ; '.'
000000000000db64         db  0x00 ; '.'
000000000000db65         db  0x00 ; '.'
000000000000db66         db  0x00 ; '.'
000000000000db67         db  0x00 ; '.'
000000000000db68         dd         0x00000024                                  ; Length of the record
000000000000db6c         dd         0x00000b14                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000db70         db         0x10, 0x8c, 2 dup (0xff)                    ; begin 0x6780
000000000000db74         db         0x27, 3 dup (0x00)                          ; length 0x27 (end at 0x67a7)
000000000000db78         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000db79         db  0x41 ; 'A'
000000000000db7a         db  0x0e ; '.'
000000000000db7b         db  0x10 ; '.'
000000000000db7c         db  0x86 ; '.'
000000000000db7d         db  0x02 ; '.'
000000000000db7e         db  0x41 ; 'A'
000000000000db7f         db  0x0e ; '.'
000000000000db80         db  0x18 ; '.'
000000000000db81         db  0x83 ; '.'
000000000000db82         db  0x03 ; '.'
000000000000db83         db  0x4a ; 'J'
000000000000db84         db  0x0e ; '.'
000000000000db85         db  0x20 ; ' '
000000000000db86         db  0x52 ; 'R'
000000000000db87         db  0x0e ; '.'
000000000000db88         db  0x18 ; '.'
000000000000db89         db  0x44 ; 'D'
000000000000db8a         db  0x0e ; '.'
000000000000db8b         db  0x10 ; '.'
000000000000db8c         db  0x41 ; 'A'
000000000000db8d         db  0x0e ; '.'
000000000000db8e         db  0x08 ; '.'
000000000000db8f         db  0x00 ; '.'
000000000000db90         dd         0x00000010                                  ; Length of the record
000000000000db94         dd         0x00000b3c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000db98         db         0x18, 0x8c, 2 dup (0xff)                    ; begin 0x67b0
000000000000db9c         db         0x0d, 3 dup (0x00)                          ; length 0xd (end at 0x67bd)
000000000000dba0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000dba1         align      4
000000000000dba4         dd         0x00000014                                  ; Length of the record
000000000000dba8         dd         0x00000b50                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000dbac         db         0x14, 0x8c, 2 dup (0xff)                    ; begin 0x67c0
000000000000dbb0         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x67ee)
000000000000dbb4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000dbb5         db  0x5e ; '^'
000000000000dbb6         db  0x0e ; '.'
000000000000dbb7         db  0x10 ; '.'
000000000000dbb8         db  0x4f ; 'O'
000000000000dbb9         db  0x0e ; '.'
000000000000dbba         db  0x08 ; '.'
000000000000dbbb         db  0x00 ; '.'
000000000000dbbc         dd         0x00000014                                  ; Length of the record
000000000000dbc0         dd         0x00000b68                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000dbc4         db         0x2c, 0x8c, 2 dup (0xff)                    ; begin 0x67f0
000000000000dbc8         db         0x33, 3 dup (0x00)                          ; length 0x33 (end at 0x6823)
000000000000dbcc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000dbcd         db  0x5e ; '^'
000000000000dbce         db  0x0e ; '.'
000000000000dbcf         db  0x10 ; '.'
000000000000dbd0         db  0x54 ; 'T'
000000000000dbd1         db  0x0e ; '.'
000000000000dbd2         db  0x08 ; '.'
000000000000dbd3         db  0x00 ; '.'
000000000000dbd4         dd         0x00000018                                  ; Length of the record
000000000000dbd8         dd         0x00000b80                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000dbdc         db         0x54, 0x8c, 2 dup (0xff)                    ; begin 0x6830
000000000000dbe0         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x6845)
000000000000dbe4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000dbe5         db  0x41 ; 'A'
000000000000dbe6         db  0x0e ; '.'
000000000000dbe7         db  0x10 ; '.'
000000000000dbe8         db  0x83 ; '.'
000000000000dbe9         db  0x02 ; '.'
000000000000dbea         db  0x4f ; 'O'
000000000000dbeb         db  0x0e ; '.'
000000000000dbec         db  0x08 ; '.'
000000000000dbed         db  0x00 ; '.'
000000000000dbee         db  0x00 ; '.'
000000000000dbef         db  0x00 ; '.'
000000000000dbf0         dd         0x0000001c                                  ; Length of the record
000000000000dbf4         dd         0x00000b9c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000dbf8         db         0x58, 0x8c, 2 dup (0xff)                    ; begin 0x6850
000000000000dbfc         db         0x6e, 3 dup (0x00)                          ; length 0x6e (end at 0x68be)
000000000000dc00         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000dc01         db  0x44 ; 'D'
000000000000dc02         db  0x0e ; '.'
000000000000dc03         db  0x60 ; '`'
000000000000dc04         db  0x7e ; '~'
000000000000dc05         db  0x0a ; '.'
000000000000dc06         db  0x0e ; '.'
000000000000dc07         db  0x08 ; '.'
000000000000dc08         db  0x46 ; 'F'
000000000000dc09         db  0x0b ; '.'
000000000000dc0a         db  0x00 ; '.'
000000000000dc0b         db  0x00 ; '.'
000000000000dc0c         db  0x00 ; '.'
000000000000dc0d         db  0x00 ; '.'
000000000000dc0e         db  0x00 ; '.'
000000000000dc0f         db  0x00 ; '.'
000000000000dc10         dd         0x0000005c                                  ; Length of the record
000000000000dc14         dd         0x00000bbc                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000dc18         db         0xa8, 0x8c, 2 dup (0xff)                    ; begin 0x68c0
000000000000dc1c         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x6940)
000000000000dc20         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000dc21         db  0x42 ; 'B'
000000000000dc22         db  0x0e ; '.'
000000000000dc23         db  0x10 ; '.'
000000000000dc24         db  0x8d ; '.'
000000000000dc25         db  0x02 ; '.'
000000000000dc26         db  0x42 ; 'B'
000000000000dc27         db  0x0e ; '.'
000000000000dc28         db  0x18 ; '.'
000000000000dc29         db  0x8c ; '.'
000000000000dc2a         db  0x03 ; '.'
000000000000dc2b         db  0x47 ; 'G'
000000000000dc2c         db  0x0e ; '.'
000000000000dc2d         db  0x20 ; ' '
000000000000dc2e         db  0x86 ; '.'
000000000000dc2f         db  0x04 ; '.'
000000000000dc30         db  0x41 ; 'A'
000000000000dc31         db  0x0e ; '.'
000000000000dc32         db  0x28 ; '('
000000000000dc33         db  0x83 ; '.'
000000000000dc34         db  0x05 ; '.'
000000000000dc35         db  0x49 ; 'I'
000000000000dc36         db  0x0e ; '.'
000000000000dc37         db  0x30 ; '0'
000000000000dc38         db  0x62 ; 'b'
000000000000dc39         db  0x0a ; '.'
000000000000dc3a         db  0x0e ; '.'
000000000000dc3b         db  0x28 ; '('
000000000000dc3c         db  0x44 ; 'D'
000000000000dc3d         db  0x0e ; '.'
000000000000dc3e         db  0x20 ; ' '
000000000000dc3f         db  0x41 ; 'A'
000000000000dc40         db  0x0e ; '.'
000000000000dc41         db  0x18 ; '.'
000000000000dc42         db  0x42 ; 'B'
000000000000dc43         db  0x0e ; '.'
000000000000dc44         db  0x10 ; '.'
000000000000dc45         db  0x42 ; 'B'
000000000000dc46         db  0x0e ; '.'
000000000000dc47         db  0x08 ; '.'
000000000000dc48         db  0x48 ; 'H'
000000000000dc49         db  0x0b ; '.'
000000000000dc4a         db  0x5d ; ']'
000000000000dc4b         db  0x0a ; '.'
000000000000dc4c         db  0x0e ; '.'
000000000000dc4d         db  0x28 ; '('
000000000000dc4e         db  0x41 ; 'A'
000000000000dc4f         db  0x0e ; '.'
000000000000dc50         db  0x20 ; ' '
000000000000dc51         db  0x41 ; 'A'
000000000000dc52         db  0x0e ; '.'
000000000000dc53         db  0x18 ; '.'
000000000000dc54         db  0x42 ; 'B'
000000000000dc55         db  0x0e ; '.'
000000000000dc56         db  0x10 ; '.'
000000000000dc57         db  0x42 ; 'B'
000000000000dc58         db  0x0e ; '.'
000000000000dc59         db  0x08 ; '.'
000000000000dc5a         db  0x45 ; 'E'
000000000000dc5b         db  0x0b ; '.'
000000000000dc5c         db  0x44 ; 'D'
000000000000dc5d         db  0x0e ; '.'
000000000000dc5e         db  0x28 ; '('
000000000000dc5f         db  0x43 ; 'C'
000000000000dc60         db  0x0e ; '.'
000000000000dc61         db  0x20 ; ' '
000000000000dc62         db  0x44 ; 'D'
000000000000dc63         db  0x0e ; '.'
000000000000dc64         db  0x18 ; '.'
000000000000dc65         db  0x42 ; 'B'
000000000000dc66         db  0x0e ; '.'
000000000000dc67         db  0x10 ; '.'
000000000000dc68         db  0x42 ; 'B'
000000000000dc69         db  0x0e ; '.'
000000000000dc6a         db  0x08 ; '.'
000000000000dc6b         db  0x00 ; '.'
000000000000dc6c         db  0x00 ; '.'
000000000000dc6d         db  0x00 ; '.'
000000000000dc6e         db  0x00 ; '.'
000000000000dc6f         db  0x00 ; '.'
000000000000dc70         dd         0x0000001c                                  ; Length of the record
000000000000dc74         dd         0x00000c1c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000dc78         db         0xc8, 0x8c, 2 dup (0xff)                    ; begin 0x6940
000000000000dc7c         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x69df)
000000000000dc80         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000dc81         db  0x44 ; 'D'
000000000000dc82         db  0x0e ; '.'
000000000000dc83         db  0x10 ; '.'
000000000000dc84         db  0x83 ; '.'
000000000000dc85         db  0x02 ; '.'
000000000000dc86         db  0x02 ; '.'
000000000000dc87         db  0x78 ; 'x'
000000000000dc88         db  0x0a ; '.'
000000000000dc89         db  0x0e ; '.'
000000000000dc8a         db  0x08 ; '.'
000000000000dc8b         db  0x41 ; 'A'
000000000000dc8c         db  0x0b ; '.'
000000000000dc8d         db  0x00 ; '.'
000000000000dc8e         db  0x00 ; '.'
000000000000dc8f         db  0x00 ; '.'
000000000000dc90         dd         0x00000040                                  ; Length of the record
000000000000dc94         dd         0x00000c3c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000dc98         db         0x48, 0x8d, 2 dup (0xff)                    ; begin 0x69e0
000000000000dc9c         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x6ac7)
000000000000dca0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000dca1         db  0x41 ; 'A'
000000000000dca2         db  0x0e ; '.'
000000000000dca3         db  0x10 ; '.'
000000000000dca4         db  0x86 ; '.'
000000000000dca5         db  0x02 ; '.'
000000000000dca6         db  0x41 ; 'A'
000000000000dca7         db  0x0e ; '.'
000000000000dca8         db  0x18 ; '.'
000000000000dca9         db  0x83 ; '.'
000000000000dcaa         db  0x03 ; '.'
000000000000dcab         db  0x49 ; 'I'
000000000000dcac         db  0x0e ; '.'
000000000000dcad         db  0x20 ; ' '
000000000000dcae         db  0x6e ; 'n'
000000000000dcaf         db  0x0a ; '.'
000000000000dcb0         db  0x0e ; '.'
000000000000dcb1         db  0x18 ; '.'
000000000000dcb2         db  0x41 ; 'A'
000000000000dcb3         db  0x0e ; '.'
000000000000dcb4         db  0x10 ; '.'
000000000000dcb5         db  0x41 ; 'A'
000000000000dcb6         db  0x0e ; '.'
000000000000dcb7         db  0x08 ; '.'
000000000000dcb8         db  0x45 ; 'E'
000000000000dcb9         db  0x0b ; '.'
000000000000dcba         db  0x02 ; '.'
000000000000dcbb         db  0x4a ; 'J'
000000000000dcbc         db  0x0a ; '.'
000000000000dcbd         db  0x0e ; '.'
000000000000dcbe         db  0x18 ; '.'
000000000000dcbf         db  0x41 ; 'A'
000000000000dcc0         db  0x0e ; '.'
000000000000dcc1         db  0x10 ; '.'
000000000000dcc2         db  0x41 ; 'A'
000000000000dcc3         db  0x0e ; '.'
000000000000dcc4         db  0x08 ; '.'
000000000000dcc5         db  0x44 ; 'D'
000000000000dcc6         db  0x0b ; '.'
000000000000dcc7         db  0x02 ; '.'
000000000000dcc8         db  0x54 ; 'T'
000000000000dcc9         db  0x0e ; '.'
000000000000dcca         db  0x18 ; '.'
000000000000dccb         db  0x41 ; 'A'
000000000000dccc         db  0x0e ; '.'
000000000000dccd         db  0x10 ; '.'
000000000000dcce         db  0x41 ; 'A'
000000000000dccf         db  0x0e ; '.'
000000000000dcd0         db  0x08 ; '.'
000000000000dcd1         db  0x00 ; '.'
000000000000dcd2         db  0x00 ; '.'
000000000000dcd3         db  0x00 ; '.'
000000000000dcd4         dd         0x00000074                                  ; Length of the record
000000000000dcd8         dd         0x00000c80                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000dcdc         db         0xf4, 0x8d, 2 dup (0xff)                    ; begin 0x6ad0
000000000000dce0         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x7d04)
000000000000dce4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000dce5         db  0x42 ; 'B'
000000000000dce6         db  0x0e ; '.'
000000000000dce7         db  0x10 ; '.'
000000000000dce8         db  0x8f ; '.'
000000000000dce9         db  0x02 ; '.'
000000000000dcea         db  0x42 ; 'B'
000000000000dceb         db  0x0e ; '.'
000000000000dcec         db  0x18 ; '.'
000000000000dced         db  0x8e ; '.'
000000000000dcee         db  0x03 ; '.'
000000000000dcef         db  0x45 ; 'E'
000000000000dcf0         db  0x0e ; '.'
000000000000dcf1         db  0x20 ; ' '
000000000000dcf2         db  0x8d ; '.'
000000000000dcf3         db  0x04 ; '.'
000000000000dcf4         db  0x42 ; 'B'
000000000000dcf5         db  0x0e ; '.'
000000000000dcf6         db  0x28 ; '('
000000000000dcf7         db  0x8c ; '.'
000000000000dcf8         db  0x05 ; '.'
000000000000dcf9         db  0x44 ; 'D'
000000000000dcfa         db  0x0e ; '.'
000000000000dcfb         db  0x30 ; '0'
000000000000dcfc         db  0x86 ; '.'
000000000000dcfd         db  0x06 ; '.'
000000000000dcfe         db  0x41 ; 'A'
000000000000dcff         db  0x0e ; '.'
000000000000dd00         db  0x38 ; '8'
000000000000dd01         db  0x83 ; '.'
000000000000dd02         db  0x07 ; '.'
000000000000dd03         db  0x53 ; 'S'
000000000000dd04         db  0x0e ; '.'
000000000000dd05         db  0xf0 ; '.'
000000000000dd06         db  0x01 ; '.'
000000000000dd07         db  0x03 ; '.'
000000000000dd08         db  0x81 ; '.'
000000000000dd09         db  0x0b ; '.'
000000000000dd0a         db  0x0e ; '.'
000000000000dd0b         db  0xf8 ; '.'
000000000000dd0c         db  0x01 ; '.'
000000000000dd0d         db  0x4a ; 'J'
000000000000dd0e         db  0x0e ; '.'
000000000000dd0f         db  0x80 ; '.'
000000000000dd10         db  0x02 ; '.'
000000000000dd11         db  0x44 ; 'D'
000000000000dd12         db  0x0e ; '.'
000000000000dd13         db  0x88 ; '.'
000000000000dd14         db  0x02 ; '.'
000000000000dd15         db  0x45 ; 'E'
000000000000dd16         db  0x0e ; '.'
000000000000dd17         db  0x90 ; '.'
000000000000dd18         db  0x02 ; '.'
000000000000dd19         db  0x5f ; '_'
000000000000dd1a         db  0x0e ; '.'
000000000000dd1b         db  0xf0 ; '.'
000000000000dd1c         db  0x01 ; '.'
000000000000dd1d         db  0x64 ; 'd'
000000000000dd1e         db  0x0a ; '.'
000000000000dd1f         db  0x0e ; '.'
000000000000dd20         db  0x38 ; '8'
000000000000dd21         db  0x41 ; 'A'
000000000000dd22         db  0x0e ; '.'
000000000000dd23         db  0x30 ; '0'
000000000000dd24         db  0x41 ; 'A'
000000000000dd25         db  0x0e ; '.'
000000000000dd26         db  0x28 ; '('
000000000000dd27         db  0x42 ; 'B'
000000000000dd28         db  0x0e ; '.'
000000000000dd29         db  0x20 ; ' '
000000000000dd2a         db  0x42 ; 'B'
000000000000dd2b         db  0x0e ; '.'
000000000000dd2c         db  0x18 ; '.'
000000000000dd2d         db  0x42 ; 'B'
000000000000dd2e         db  0x0e ; '.'
000000000000dd2f         db  0x10 ; '.'
000000000000dd30         db  0x42 ; 'B'
000000000000dd31         db  0x0e ; '.'
000000000000dd32         db  0x08 ; '.'
000000000000dd33         db  0x44 ; 'D'
000000000000dd34         db  0x0b ; '.'
000000000000dd35         db  0x03 ; '.'
000000000000dd36         db  0x99 ; '.'
000000000000dd37         db  0x05 ; '.'
000000000000dd38         db  0x0e ; '.'
000000000000dd39         db  0xf8 ; '.'
000000000000dd3a         db  0x01 ; '.'
000000000000dd3b         db  0x4d ; 'M'
000000000000dd3c         db  0x0e ; '.'
000000000000dd3d         db  0x80 ; '.'
000000000000dd3e         db  0x02 ; '.'
000000000000dd3f         db  0x44 ; 'D'
000000000000dd40         db  0x0e ; '.'
000000000000dd41         db  0x88 ; '.'
000000000000dd42         db  0x02 ; '.'
000000000000dd43         db  0x47 ; 'G'
000000000000dd44         db  0x0e ; '.'
000000000000dd45         db  0x90 ; '.'
000000000000dd46         db  0x02 ; '.'
000000000000dd47         db  0x5b ; '['
000000000000dd48         db  0x0e ; '.'
000000000000dd49         db  0xf0 ; '.'
000000000000dd4a         db  0x01 ; '.'
000000000000dd4b         db  0x00 ; '.'
000000000000dd4c         dd         0x00000068                                  ; Length of the record
000000000000dd50         dd         0x00000cf8                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000dd54         db         0xbc, 0x9f, 2 dup (0xff)                    ; begin 0x7d10
000000000000dd58         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x7ebb)
000000000000dd5c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000dd5d         db  0x42 ; 'B'
000000000000dd5e         db  0x0e ; '.'
000000000000dd5f         db  0x10 ; '.'
000000000000dd60         db  0x8f ; '.'
000000000000dd61         db  0x02 ; '.'
000000000000dd62         db  0x42 ; 'B'
000000000000dd63         db  0x0e ; '.'
000000000000dd64         db  0x18 ; '.'
000000000000dd65         db  0x8e ; '.'
000000000000dd66         db  0x03 ; '.'
000000000000dd67         db  0x45 ; 'E'
000000000000dd68         db  0x0e ; '.'
000000000000dd69         db  0x20 ; ' '
000000000000dd6a         db  0x8d ; '.'
000000000000dd6b         db  0x04 ; '.'
000000000000dd6c         db  0x42 ; 'B'
000000000000dd6d         db  0x0e ; '.'
000000000000dd6e         db  0x28 ; '('
000000000000dd6f         db  0x8c ; '.'
000000000000dd70         db  0x05 ; '.'
000000000000dd71         db  0x44 ; 'D'
000000000000dd72         db  0x0e ; '.'
000000000000dd73         db  0x30 ; '0'
000000000000dd74         db  0x86 ; '.'
000000000000dd75         db  0x06 ; '.'
000000000000dd76         db  0x41 ; 'A'
000000000000dd77         db  0x0e ; '.'
000000000000dd78         db  0x38 ; '8'
000000000000dd79         db  0x83 ; '.'
000000000000dd7a         db  0x07 ; '.'
000000000000dd7b         db  0x47 ; 'G'
000000000000dd7c         db  0x0e ; '.'
000000000000dd7d         db  0x60 ; '`'
000000000000dd7e         db  0x02 ; '.'
000000000000dd7f         db  0x99 ; '.'
000000000000dd80         db  0x0e ; '.'
000000000000dd81         db  0x68 ; 'h'
000000000000dd82         db  0x5f ; '_'
000000000000dd83         db  0x0e ; '.'
000000000000dd84         db  0x70 ; 'p'
000000000000dd85         db  0x46 ; 'F'
000000000000dd86         db  0x0e ; '.'
000000000000dd87         db  0x78 ; 'x'
000000000000dd88         db  0x42 ; 'B'
000000000000dd89         db  0x0e ; '.'
000000000000dd8a         db  0x80 ; '.'
000000000000dd8b         db  0x01 ; '.'
000000000000dd8c         db  0x59 ; 'Y'
000000000000dd8d         db  0x0e ; '.'
000000000000dd8e         db  0x60 ; '`'
000000000000dd8f         db  0x02 ; '.'
000000000000dd90         db  0x40 ; '@'
000000000000dd91         db  0x0e ; '.'
000000000000dd92         db  0x68 ; 'h'
000000000000dd93         db  0x4b ; 'K'
000000000000dd94         db  0x0e ; '.'
000000000000dd95         db  0x70 ; 'p'
000000000000dd96         db  0x43 ; 'C'
000000000000dd97         db  0x0e ; '.'
000000000000dd98         db  0x78 ; 'x'
000000000000dd99         db  0x45 ; 'E'
000000000000dd9a         db  0x0e ; '.'
000000000000dd9b         db  0x80 ; '.'
000000000000dd9c         db  0x01 ; '.'
000000000000dd9d         db  0x5e ; '^'
000000000000dd9e         db  0x0e ; '.'
000000000000dd9f         db  0x60 ; '`'
000000000000dda0         db  0x4c ; 'L'
000000000000dda1         db  0x0a ; '.'
000000000000dda2         db  0x0e ; '.'
000000000000dda3         db  0x38 ; '8'
000000000000dda4         db  0x44 ; 'D'
000000000000dda5         db  0x0e ; '.'
000000000000dda6         db  0x30 ; '0'
000000000000dda7         db  0x41 ; 'A'
000000000000dda8         db  0x0e ; '.'
000000000000dda9         db  0x28 ; '('
000000000000ddaa         db  0x42 ; 'B'
000000000000ddab         db  0x0e ; '.'
000000000000ddac         db  0x20 ; ' '
000000000000ddad         db  0x42 ; 'B'
000000000000ddae         db  0x0e ; '.'
000000000000ddaf         db  0x18 ; '.'
000000000000ddb0         db  0x42 ; 'B'
000000000000ddb1         db  0x0e ; '.'
000000000000ddb2         db  0x10 ; '.'
000000000000ddb3         db  0x42 ; 'B'
000000000000ddb4         db  0x0e ; '.'
000000000000ddb5         db  0x08 ; '.'
000000000000ddb6         db  0x46 ; 'F'
000000000000ddb7         db  0x0b ; '.'
000000000000ddb8         dd         0x00000028                                  ; Length of the record
000000000000ddbc         dd         0x00000d64                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000ddc0         db         0x00, 0xa1, 2 dup (0xff)                    ; begin 0x7ec0
000000000000ddc4         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x7ef6)
000000000000ddc8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ddc9         db  0x42 ; 'B'
000000000000ddca         db  0x0e ; '.'
000000000000ddcb         db  0x10 ; '.'
000000000000ddcc         db  0x8c ; '.'
000000000000ddcd         db  0x02 ; '.'
000000000000ddce         db  0x41 ; 'A'
000000000000ddcf         db  0x0e ; '.'
000000000000ddd0         db  0x18 ; '.'
000000000000ddd1         db  0x86 ; '.'
000000000000ddd2         db  0x03 ; '.'
000000000000ddd3         db  0x41 ; 'A'
000000000000ddd4         db  0x0e ; '.'
000000000000ddd5         db  0x20 ; ' '
000000000000ddd6         db  0x83 ; '.'
000000000000ddd7         db  0x04 ; '.'
000000000000ddd8         db  0x6e ; 'n'
000000000000ddd9         db  0x0e ; '.'
000000000000ddda         db  0x18 ; '.'
000000000000dddb         db  0x41 ; 'A'
000000000000dddc         db  0x0e ; '.'
000000000000dddd         db  0x10 ; '.'
000000000000ddde         db  0x42 ; 'B'
000000000000dddf         db  0x0e ; '.'
000000000000dde0         db  0x08 ; '.'
000000000000dde1         db  0x00 ; '.'
000000000000dde2         db  0x00 ; '.'
000000000000dde3         db  0x00 ; '.'
000000000000dde4         dd         0x00000010                                  ; Length of the record
000000000000dde8         dd         0x00000d90                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000ddec         db         0x14, 0xa1, 2 dup (0xff)                    ; begin 0x7f00
000000000000ddf0         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x7f11)
000000000000ddf4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ddf5         align      8
000000000000ddf8         dd         0x00000010                                  ; Length of the record
000000000000ddfc         dd         0x00000da4                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000de00         db         0x20, 0xa1, 2 dup (0xff)                    ; begin 0x7f20
000000000000de04         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x7f31)
000000000000de08         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000de09         align      4
000000000000de0c         dd         0x00000010                                  ; Length of the record
000000000000de10         dd         0x00000db8                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000de14         db         0x2c, 0xa1, 2 dup (0xff)                    ; begin 0x7f40
000000000000de18         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x7f75)
000000000000de1c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000de1d         align      32
000000000000de20         dd         0x00000010                                  ; Length of the record
000000000000de24         dd         0x00000dcc                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000de28         db         0x58, 0xa1, 2 dup (0xff)                    ; begin 0x7f80
000000000000de2c         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x7f95)
000000000000de30         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000de31         align      4
000000000000de34         dd         0x00000010                                  ; Length of the record
000000000000de38         dd         0x00000de0                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000de3c         db         0x64, 0xa1, 2 dup (0xff)                    ; begin 0x7fa0
000000000000de40         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x7fd0)
000000000000de44         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000de45         db  0x6b ; 'k'
000000000000de46         db  0x0e ; '.'
000000000000de47         db  0x10 ; '.'
000000000000de48         dd         0x00000050                                  ; Length of the record
000000000000de4c         dd         0x00000df4                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000de50         db         0x80, 0xa1, 2 dup (0xff)                    ; begin 0x7fd0
000000000000de54         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x8044)
000000000000de58         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000de59         db  0x42 ; 'B'
000000000000de5a         db  0x0e ; '.'
000000000000de5b         db  0x10 ; '.'
000000000000de5c         db  0x8f ; '.'
000000000000de5d         db  0x02 ; '.'
000000000000de5e         db  0x42 ; 'B'
000000000000de5f         db  0x0e ; '.'
000000000000de60         db  0x18 ; '.'
000000000000de61         db  0x8e ; '.'
000000000000de62         db  0x03 ; '.'
000000000000de63         db  0x49 ; 'I'
000000000000de64         db  0x0e ; '.'
000000000000de65         db  0x20 ; ' '
000000000000de66         db  0x8d ; '.'
000000000000de67         db  0x04 ; '.'
000000000000de68         db  0x42 ; 'B'
000000000000de69         db  0x0e ; '.'
000000000000de6a         db  0x28 ; '('
000000000000de6b         db  0x8c ; '.'
000000000000de6c         db  0x05 ; '.'
000000000000de6d         db  0x44 ; 'D'
000000000000de6e         db  0x0e ; '.'
000000000000de6f         db  0x30 ; '0'
000000000000de70         db  0x86 ; '.'
000000000000de71         db  0x06 ; '.'
000000000000de72         db  0x41 ; 'A'
000000000000de73         db  0x0e ; '.'
000000000000de74         db  0x38 ; '8'
000000000000de75         db  0x83 ; '.'
000000000000de76         db  0x07 ; '.'
000000000000de77         db  0x4d ; 'M'
000000000000de78         db  0x0e ; '.'
000000000000de79         db  0x50 ; 'P'
000000000000de7a         db  0x5f ; '_'
000000000000de7b         db  0x0e ; '.'
000000000000de7c         db  0x58 ; 'X'
000000000000de7d         db  0x47 ; 'G'
000000000000de7e         db  0x0e ; '.'
000000000000de7f         db  0x60 ; '`'
000000000000de80         db  0x46 ; 'F'
000000000000de81         db  0x0e ; '.'
000000000000de82         db  0x68 ; 'h'
000000000000de83         db  0x44 ; 'D'
000000000000de84         db  0x0e ; '.'
000000000000de85         db  0x70 ; 'p'
000000000000de86         db  0x58 ; 'X'
000000000000de87         db  0x0e ; '.'
000000000000de88         db  0x38 ; '8'
000000000000de89         db  0x41 ; 'A'
000000000000de8a         db  0x0e ; '.'
000000000000de8b         db  0x30 ; '0'
000000000000de8c         db  0x41 ; 'A'
000000000000de8d         db  0x0e ; '.'
000000000000de8e         db  0x28 ; '('
000000000000de8f         db  0x42 ; 'B'
000000000000de90         db  0x0e ; '.'
000000000000de91         db  0x20 ; ' '
000000000000de92         db  0x42 ; 'B'
000000000000de93         db  0x0e ; '.'
000000000000de94         db  0x18 ; '.'
000000000000de95         db  0x42 ; 'B'
000000000000de96         db  0x0e ; '.'
000000000000de97         db  0x10 ; '.'
000000000000de98         db  0x42 ; 'B'
000000000000de99         db  0x0e ; '.'
000000000000de9a         db  0x08 ; '.'
000000000000de9b         db  0x00 ; '.'
000000000000de9c         dd         0x00000068                                  ; Length of the record
000000000000dea0         dd         0x00000e48                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000dea4         db         0xac, 0xa1, 2 dup (0xff)                    ; begin 0x8050
000000000000dea8         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x8133)
000000000000deac         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000dead         db  0x42 ; 'B'
000000000000deae         db  0x0e ; '.'
000000000000deaf         db  0x10 ; '.'
000000000000deb0         db  0x8f ; '.'
000000000000deb1         db  0x02 ; '.'
000000000000deb2         db  0x42 ; 'B'
000000000000deb3         db  0x0e ; '.'
000000000000deb4         db  0x18 ; '.'
000000000000deb5         db  0x8e ; '.'
000000000000deb6         db  0x03 ; '.'
000000000000deb7         db  0x49 ; 'I'
000000000000deb8         db  0x0e ; '.'
000000000000deb9         db  0x20 ; ' '
000000000000deba         db  0x8d ; '.'
000000000000debb         db  0x04 ; '.'
000000000000debc         db  0x42 ; 'B'
000000000000debd         db  0x0e ; '.'
000000000000debe         db  0x28 ; '('
000000000000debf         db  0x8c ; '.'
000000000000dec0         db  0x05 ; '.'
000000000000dec1         db  0x44 ; 'D'
000000000000dec2         db  0x0e ; '.'
000000000000dec3         db  0x30 ; '0'
000000000000dec4         db  0x86 ; '.'
000000000000dec5         db  0x06 ; '.'
000000000000dec6         db  0x41 ; 'A'
000000000000dec7         db  0x0e ; '.'
000000000000dec8         db  0x38 ; '8'
000000000000dec9         db  0x83 ; '.'
000000000000deca         db  0x07 ; '.'
000000000000decb         db  0x4d ; 'M'
000000000000decc         db  0x0e ; '.'
000000000000decd         db  0x70 ; 'p'
000000000000dece         db  0x65 ; 'e'
000000000000decf         db  0x0e ; '.'
000000000000ded0         db  0x78 ; 'x'
000000000000ded1         db  0x4d ; 'M'
000000000000ded2         db  0x0e ; '.'
000000000000ded3         db  0x80 ; '.'
000000000000ded4         db  0x01 ; '.'
000000000000ded5         db  0x46 ; 'F'
000000000000ded6         db  0x0e ; '.'
000000000000ded7         db  0x88 ; '.'
000000000000ded8         db  0x01 ; '.'
000000000000ded9         db  0x42 ; 'B'
000000000000deda         db  0x0e ; '.'
000000000000dedb         db  0x90 ; '.'
000000000000dedc         db  0x01 ; '.'
000000000000dedd         db  0x5e ; '^'
000000000000dede         db  0x0e ; '.'
000000000000dedf         db  0x70 ; 'p'
000000000000dee0         db  0x56 ; 'V'
000000000000dee1         db  0x0e ; '.'
000000000000dee2         db  0x78 ; 'x'
000000000000dee3         db  0x43 ; 'C'
000000000000dee4         db  0x0e ; '.'
000000000000dee5         db  0x80 ; '.'
000000000000dee6         db  0x01 ; '.'
000000000000dee7         db  0x43 ; 'C'
000000000000dee8         db  0x0e ; '.'
000000000000dee9         db  0x88 ; '.'
000000000000deea         db  0x01 ; '.'
000000000000deeb         db  0x56 ; 'V'
000000000000deec         db  0x0e ; '.'
000000000000deed         db  0x90 ; '.'
000000000000deee         db  0x01 ; '.'
000000000000deef         db  0x52 ; 'R'
000000000000def0         db  0x0e ; '.'
000000000000def1         db  0x70 ; 'p'
000000000000def2         db  0x5b ; '['
000000000000def3         db  0x0e ; '.'
000000000000def4         db  0x38 ; '8'
000000000000def5         db  0x41 ; 'A'
000000000000def6         db  0x0e ; '.'
000000000000def7         db  0x30 ; '0'
000000000000def8         db  0x41 ; 'A'
000000000000def9         db  0x0e ; '.'
000000000000defa         db  0x28 ; '('
000000000000defb         db  0x42 ; 'B'
000000000000defc         db  0x0e ; '.'
000000000000defd         db  0x20 ; ' '
000000000000defe         db  0x42 ; 'B'
000000000000deff         db  0x0e ; '.'
000000000000df00         db  0x18 ; '.'
000000000000df01         db  0x42 ; 'B'
000000000000df02         db  0x0e ; '.'
000000000000df03         db  0x10 ; '.'
000000000000df04         db  0x42 ; 'B'
000000000000df05         db  0x0e ; '.'
000000000000df06         db  0x08 ; '.'
000000000000df07         db  0x00 ; '.'
000000000000df08         dd         0x00000010                                  ; Length of the record
000000000000df0c         dd         0x00000eb4                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000df10         db         0x30, 0xa2, 2 dup (0xff)                    ; begin 0x8140
000000000000df14         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x814a)
000000000000df18         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000df19         align      4
000000000000df1c         dd         0x00000028                                  ; Length of the record
000000000000df20         dd         0x00000ec8                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000df24         db         0x2c, 0xa2, 2 dup (0xff)                    ; begin 0x8150
000000000000df28         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x81e3)
000000000000df2c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000df2d         db  0x48 ; 'H'
000000000000df2e         db  0x0e ; '.'
000000000000df2f         db  0x10 ; '.'
000000000000df30         db  0x8c ; '.'
000000000000df31         db  0x02 ; '.'
000000000000df32         db  0x48 ; 'H'
000000000000df33         db  0x0e ; '.'
000000000000df34         db  0x18 ; '.'
000000000000df35         db  0x86 ; '.'
000000000000df36         db  0x03 ; '.'
000000000000df37         db  0x41 ; 'A'
000000000000df38         db  0x0e ; '.'
000000000000df39         db  0x20 ; ' '
000000000000df3a         db  0x83 ; '.'
000000000000df3b         db  0x04 ; '.'
000000000000df3c         db  0x02 ; '.'
000000000000df3d         db  0x74 ; 't'
000000000000df3e         db  0x0e ; '.'
000000000000df3f         db  0x18 ; '.'
000000000000df40         db  0x4b ; 'K'
000000000000df41         db  0x0e ; '.'
000000000000df42         db  0x10 ; '.'
000000000000df43         db  0x42 ; 'B'
000000000000df44         db  0x0e ; '.'
000000000000df45         db  0x08 ; '.'
000000000000df46         db  0x00 ; '.'
000000000000df47         db  0x00 ; '.'
000000000000df48         dd         0x00000010                                  ; Length of the record
000000000000df4c         dd         0x00000ef4                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000df50         db         0xa0, 0xa2, 2 dup (0xff)                    ; begin 0x81f0
000000000000df54         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x8203)
000000000000df58         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000df59         align      4
000000000000df5c         dd         0x00000010                                  ; Length of the record
000000000000df60         dd         0x00000f08                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000df64         db         0xac, 0xa2, 2 dup (0xff)                    ; begin 0x8210
000000000000df68         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x821c)
000000000000df6c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000df6d         align      16
000000000000df70         dd         0x00000010                                  ; Length of the record
000000000000df74         dd         0x00000f1c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000df78         db         0xa8, 0xa2, 2 dup (0xff)                    ; begin 0x8220
000000000000df7c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x8238)
000000000000df80         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000df81         align      4
000000000000df84         dd         0x00000010                                  ; Length of the record
000000000000df88         dd         0x00000f30                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000df8c         db         0xb4, 0xa2, 2 dup (0xff)                    ; begin 0x8240
000000000000df90         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x8254)
000000000000df94         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000df95         align      8
000000000000df98         dd         0x00000018                                  ; Length of the record
000000000000df9c         dd         0x00000f44                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000dfa0         db         0xc0, 0xa2, 2 dup (0xff)                    ; begin 0x8260
000000000000dfa4         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x82ee)
000000000000dfa8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000dfa9         db  0x44 ; 'D'
000000000000dfaa         db  0x0e ; '.'
000000000000dfab         db  0x50 ; 'P'
000000000000dfac         db  0x02 ; '.'
000000000000dfad         db  0x7f ; '.'
000000000000dfae         db  0x0a ; '.'
000000000000dfaf         db  0x0e ; '.'
000000000000dfb0         db  0x08 ; '.'
000000000000dfb1         db  0x41 ; 'A'
000000000000dfb2         db  0x0b ; '.'
000000000000dfb3         db  0x00 ; '.'
000000000000dfb4         dd         0x00000018                                  ; Length of the record
000000000000dfb8         dd         0x00000f60                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000dfbc         db         0x34, 0xa3, 2 dup (0xff)                    ; begin 0x82f0
000000000000dfc0         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x837a)
000000000000dfc4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000dfc5         db  0x44 ; 'D'
000000000000dfc6         db  0x0e ; '.'
000000000000dfc7         db  0x50 ; 'P'
000000000000dfc8         db  0x02 ; '.'
000000000000dfc9         db  0x7b ; '{'
000000000000dfca         db  0x0a ; '.'
000000000000dfcb         db  0x0e ; '.'
000000000000dfcc         db  0x08 ; '.'
000000000000dfcd         db  0x41 ; 'A'
000000000000dfce         db  0x0b ; '.'
000000000000dfcf         db  0x00 ; '.'
000000000000dfd0         dd         0x00000010                                  ; Length of the record
000000000000dfd4         dd         0x00000f7c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000dfd8         db         0xa8, 0xa3, 2 dup (0xff)                    ; begin 0x8380
000000000000dfdc         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x838c)
000000000000dfe0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000dfe1         align      4
000000000000dfe4         dd         0x00000010                                  ; Length of the record
000000000000dfe8         dd         0x00000f90                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000dfec         db         0xa4, 0xa3, 2 dup (0xff)                    ; begin 0x8390
000000000000dff0         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x839f)
000000000000dff4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000dff5         align      8
000000000000dff8         dd         0x00000018                                  ; Length of the record
000000000000dffc         dd         0x00000fa4                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e000         db         0xa0, 0xa3, 2 dup (0xff)                    ; begin 0x83a0
000000000000e004         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x8438)
000000000000e008         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e009         db  0x44 ; 'D'
000000000000e00a         db  0x0e ; '.'
000000000000e00b         db  0x50 ; 'P'
000000000000e00c         db  0x02 ; '.'
000000000000e00d         db  0x8e ; '.'
000000000000e00e         db  0x0a ; '.'
000000000000e00f         db  0x0e ; '.'
000000000000e010         db  0x08 ; '.'
000000000000e011         db  0x41 ; 'A'
000000000000e012         db  0x0b ; '.'
000000000000e013         db  0x00 ; '.'
000000000000e014         dd         0x00000010                                  ; Length of the record
000000000000e018         dd         0x00000fc0                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e01c         db         0x24, 0xa4, 2 dup (0xff)                    ; begin 0x8440
000000000000e020         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x8450)
000000000000e024         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e025         align      8
000000000000e028         dd         0x00000010                                  ; Length of the record
000000000000e02c         dd         0x00000fd4                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e030         db         0x20, 0xa4, 2 dup (0xff)                    ; begin 0x8450
000000000000e034         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x8461)
000000000000e038         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e039         align      4
000000000000e03c         dd         0x00000010                                  ; Length of the record
000000000000e040         dd         0x00000fe8                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e044         db         0x2c, 0xa4, 2 dup (0xff)                    ; begin 0x8470
000000000000e048         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x847a)
000000000000e04c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e04d         align      16
000000000000e050         dd         0x00000018                                  ; Length of the record
000000000000e054         dd         0x00000ffc                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e058         db         0x28, 0xa4, 2 dup (0xff)                    ; begin 0x8480
000000000000e05c         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x850e)
000000000000e060         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e061         db  0x44 ; 'D'
000000000000e062         db  0x0e ; '.'
000000000000e063         db  0x50 ; 'P'
000000000000e064         db  0x02 ; '.'
000000000000e065         db  0x7f ; '.'
000000000000e066         db  0x0a ; '.'
000000000000e067         db  0x0e ; '.'
000000000000e068         db  0x08 ; '.'
000000000000e069         db  0x41 ; 'A'
000000000000e06a         db  0x0b ; '.'
000000000000e06b         db  0x00 ; '.'
000000000000e06c         dd         0x00000018                                  ; Length of the record
000000000000e070         dd         0x00001018                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e074         db         0x9c, 0xa4, 2 dup (0xff)                    ; begin 0x8510
000000000000e078         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x85a1)
000000000000e07c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e07d         db  0x44 ; 'D'
000000000000e07e         db  0x0e ; '.'
000000000000e07f         db  0x50 ; 'P'
000000000000e080         db  0x02 ; '.'
000000000000e081         db  0x82 ; '.'
000000000000e082         db  0x0a ; '.'
000000000000e083         db  0x0e ; '.'
000000000000e084         db  0x08 ; '.'
000000000000e085         db  0x41 ; 'A'
000000000000e086         db  0x0b ; '.'
000000000000e087         db  0x00 ; '.'
000000000000e088         dd         0x00000010                                  ; Length of the record
000000000000e08c         dd         0x00001034                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e090         db         0x20, 0xa5, 2 dup (0xff)                    ; begin 0x85b0
000000000000e094         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x85bc)
000000000000e098         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e099         align      4
000000000000e09c         dd         0x00000010                                  ; Length of the record
000000000000e0a0         dd         0x00001048                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e0a4         db         0x1c, 0xa5, 2 dup (0xff)                    ; begin 0x85c0
000000000000e0a8         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x85d7)
000000000000e0ac         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e0ad         align      16
000000000000e0b0         dd         0x00000010                                  ; Length of the record
000000000000e0b4         dd         0x0000105c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e0b8         db         0x28, 0xa5, 2 dup (0xff)                    ; begin 0x85e0
000000000000e0bc         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x85f3)
000000000000e0c0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e0c1         align      4
000000000000e0c4         dd         0x00000010                                  ; Length of the record
000000000000e0c8         dd         0x00001070                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e0cc         db         0x34, 0xa5, 2 dup (0xff)                    ; begin 0x8600
000000000000e0d0         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x860c)
000000000000e0d4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e0d5         align      8
000000000000e0d8         dd         0x00000010                                  ; Length of the record
000000000000e0dc         dd         0x00001084                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e0e0         db         0x30, 0xa5, 2 dup (0xff)                    ; begin 0x8610
000000000000e0e4         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x8624)
000000000000e0e8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e0e9         align      4
000000000000e0ec         dd         0x00000010                                  ; Length of the record
000000000000e0f0         dd         0x00001098                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e0f4         db         0x3c, 0xa5, 2 dup (0xff)                    ; begin 0x8630
000000000000e0f8         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x8643)
000000000000e0fc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e0fd         align      256
000000000000e100         dd         0x00000014                                  ; Length of the record
000000000000e104         dd         0x000010ac                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e108         db         0x48, 0xa5, 2 dup (0xff)                    ; begin 0x8650
000000000000e10c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x8668)
000000000000e110         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e111         align      8
000000000000e118         dd         0x0000004c                                  ; Length of the record
000000000000e11c         dd         0x000010c4                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e120         db         0x50, 0xa5, 2 dup (0xff)                    ; begin 0x8670
000000000000e124         db         0x6a, 0x02, 2 dup (0x00)                    ; length 0x26a (end at 0x88da)
000000000000e128         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e129         db  0x42 ; 'B'
000000000000e12a         db  0x0e ; '.'
000000000000e12b         db  0x10 ; '.'
000000000000e12c         db  0x8f ; '.'
000000000000e12d         db  0x02 ; '.'
000000000000e12e         db  0x42 ; 'B'
000000000000e12f         db  0x0e ; '.'
000000000000e130         db  0x18 ; '.'
000000000000e131         db  0x8e ; '.'
000000000000e132         db  0x03 ; '.'
000000000000e133         db  0x45 ; 'E'
000000000000e134         db  0x0e ; '.'
000000000000e135         db  0x20 ; ' '
000000000000e136         db  0x8d ; '.'
000000000000e137         db  0x04 ; '.'
000000000000e138         db  0x42 ; 'B'
000000000000e139         db  0x0e ; '.'
000000000000e13a         db  0x28 ; '('
000000000000e13b         db  0x8c ; '.'
000000000000e13c         db  0x05 ; '.'
000000000000e13d         db  0x44 ; 'D'
000000000000e13e         db  0x0e ; '.'
000000000000e13f         db  0x30 ; '0'
000000000000e140         db  0x86 ; '.'
000000000000e141         db  0x06 ; '.'
000000000000e142         db  0x41 ; 'A'
000000000000e143         db  0x0e ; '.'
000000000000e144         db  0x38 ; '8'
000000000000e145         db  0x83 ; '.'
000000000000e146         db  0x07 ; '.'
000000000000e147         db  0x53 ; 'S'
000000000000e148         db  0x0e ; '.'
000000000000e149         db  0x80 ; '.'
000000000000e14a         db  0x03 ; '.'
000000000000e14b         db  0x02 ; '.'
000000000000e14c         db  0x58 ; 'X'
000000000000e14d         db  0x0a ; '.'
000000000000e14e         db  0x0e ; '.'
000000000000e14f         db  0x38 ; '8'
000000000000e150         db  0x41 ; 'A'
000000000000e151         db  0x0e ; '.'
000000000000e152         db  0x30 ; '0'
000000000000e153         db  0x41 ; 'A'
000000000000e154         db  0x0e ; '.'
000000000000e155         db  0x28 ; '('
000000000000e156         db  0x42 ; 'B'
000000000000e157         db  0x0e ; '.'
000000000000e158         db  0x20 ; ' '
000000000000e159         db  0x42 ; 'B'
000000000000e15a         db  0x0e ; '.'
000000000000e15b         db  0x18 ; '.'
000000000000e15c         db  0x42 ; 'B'
000000000000e15d         db  0x0e ; '.'
000000000000e15e         db  0x10 ; '.'
000000000000e15f         db  0x42 ; 'B'
000000000000e160         db  0x0e ; '.'
000000000000e161         db  0x08 ; '.'
000000000000e162         db  0x4b ; 'K'
000000000000e163         db  0x0b ; '.'
000000000000e164         db  0x00 ; '.'
000000000000e165         db  0x00 ; '.'
000000000000e166         db  0x00 ; '.'
000000000000e167         db  0x00 ; '.'
000000000000e168         dd         0x00000038                                  ; Length of the record
000000000000e16c         dd         0x00001114                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e170         db         0x70, 0xa7, 2 dup (0xff)                    ; begin 0x88e0
000000000000e174         db         0x27, 0x01, 2 dup (0x00)                    ; length 0x127 (end at 0x8a07)
000000000000e178         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e179         db  0x42 ; 'B'
000000000000e17a         db  0x0e ; '.'
000000000000e17b         db  0x10 ; '.'
000000000000e17c         db  0x8d ; '.'
000000000000e17d         db  0x02 ; '.'
000000000000e17e         db  0x42 ; 'B'
000000000000e17f         db  0x0e ; '.'
000000000000e180         db  0x18 ; '.'
000000000000e181         db  0x8c ; '.'
000000000000e182         db  0x03 ; '.'
000000000000e183         db  0x44 ; 'D'
000000000000e184         db  0x0e ; '.'
000000000000e185         db  0x20 ; ' '
000000000000e186         db  0x86 ; '.'
000000000000e187         db  0x04 ; '.'
000000000000e188         db  0x41 ; 'A'
000000000000e189         db  0x0e ; '.'
000000000000e18a         db  0x28 ; '('
000000000000e18b         db  0x83 ; '.'
000000000000e18c         db  0x05 ; '.'
000000000000e18d         db  0x4f ; 'O'
000000000000e18e         db  0x0e ; '.'
000000000000e18f         db  0xe0 ; '.'
000000000000e190         db  0x02 ; '.'
000000000000e191         db  0x02 ; '.'
000000000000e192         db  0xb5 ; '.'
000000000000e193         db  0x0a ; '.'
000000000000e194         db  0x0e ; '.'
000000000000e195         db  0x28 ; '('
000000000000e196         db  0x41 ; 'A'
000000000000e197         db  0x0e ; '.'
000000000000e198         db  0x20 ; ' '
000000000000e199         db  0x41 ; 'A'
000000000000e19a         db  0x0e ; '.'
000000000000e19b         db  0x18 ; '.'
000000000000e19c         db  0x42 ; 'B'
000000000000e19d         db  0x0e ; '.'
000000000000e19e         db  0x10 ; '.'
000000000000e19f         db  0x42 ; 'B'
000000000000e1a0         db  0x0e ; '.'
000000000000e1a1         db  0x08 ; '.'
000000000000e1a2         db  0x45 ; 'E'
000000000000e1a3         db  0x0b ; '.'
000000000000e1a4         dd         0x0000005c                                  ; Length of the record
000000000000e1a8         dd         0x00001150                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e1ac         db         0x64, 0xa8, 2 dup (0xff)                    ; begin 0x8a10
000000000000e1b0         db         0x92, 3 dup (0x00)                          ; length 0x92 (end at 0x8aa2)
000000000000e1b4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e1b5         db  0x42 ; 'B'
000000000000e1b6         db  0x0e ; '.'
000000000000e1b7         db  0x10 ; '.'
000000000000e1b8         db  0x8f ; '.'
000000000000e1b9         db  0x02 ; '.'
000000000000e1ba         db  0x42 ; 'B'
000000000000e1bb         db  0x0e ; '.'
000000000000e1bc         db  0x18 ; '.'
000000000000e1bd         db  0x8e ; '.'
000000000000e1be         db  0x03 ; '.'
000000000000e1bf         db  0x45 ; 'E'
000000000000e1c0         db  0x0e ; '.'
000000000000e1c1         db  0x20 ; ' '
000000000000e1c2         db  0x8d ; '.'
000000000000e1c3         db  0x04 ; '.'
000000000000e1c4         db  0x42 ; 'B'
000000000000e1c5         db  0x0e ; '.'
000000000000e1c6         db  0x28 ; '('
000000000000e1c7         db  0x8c ; '.'
000000000000e1c8         db  0x05 ; '.'
000000000000e1c9         db  0x41 ; 'A'
000000000000e1ca         db  0x0e ; '.'
000000000000e1cb         db  0x30 ; '0'
000000000000e1cc         db  0x86 ; '.'
000000000000e1cd         db  0x06 ; '.'
000000000000e1ce         db  0x41 ; 'A'
000000000000e1cf         db  0x0e ; '.'
000000000000e1d0         db  0x38 ; '8'
000000000000e1d1         db  0x83 ; '.'
000000000000e1d2         db  0x07 ; '.'
000000000000e1d3         db  0x4a ; 'J'
000000000000e1d4         db  0x0e ; '.'
000000000000e1d5         db  0x50 ; 'P'
000000000000e1d6         db  0x76 ; 'v'
000000000000e1d7         db  0x0a ; '.'
000000000000e1d8         db  0x0e ; '.'
000000000000e1d9         db  0x38 ; '8'
000000000000e1da         db  0x43 ; 'C'
000000000000e1db         db  0x0e ; '.'
000000000000e1dc         db  0x30 ; '0'
000000000000e1dd         db  0x41 ; 'A'
000000000000e1de         db  0x0e ; '.'
000000000000e1df         db  0x28 ; '('
000000000000e1e0         db  0x42 ; 'B'
000000000000e1e1         db  0x0e ; '.'
000000000000e1e2         db  0x20 ; ' '
000000000000e1e3         db  0x42 ; 'B'
000000000000e1e4         db  0x0e ; '.'
000000000000e1e5         db  0x18 ; '.'
000000000000e1e6         db  0x42 ; 'B'
000000000000e1e7         db  0x0e ; '.'
000000000000e1e8         db  0x10 ; '.'
000000000000e1e9         db  0x42 ; 'B'
000000000000e1ea         db  0x0e ; '.'
000000000000e1eb         db  0x08 ; '.'
000000000000e1ec         db  0x47 ; 'G'
000000000000e1ed         db  0x0b ; '.'
000000000000e1ee         db  0x5a ; 'Z'
000000000000e1ef         db  0x0e ; '.'
000000000000e1f0         db  0x38 ; '8'
000000000000e1f1         db  0x4a ; 'J'
000000000000e1f2         db  0x0e ; '.'
000000000000e1f3         db  0x30 ; '0'
000000000000e1f4         db  0x41 ; 'A'
000000000000e1f5         db  0x0e ; '.'
000000000000e1f6         db  0x28 ; '('
000000000000e1f7         db  0x42 ; 'B'
000000000000e1f8         db  0x0e ; '.'
000000000000e1f9         db  0x20 ; ' '
000000000000e1fa         db  0x42 ; 'B'
000000000000e1fb         db  0x0e ; '.'
000000000000e1fc         db  0x18 ; '.'
000000000000e1fd         db  0x42 ; 'B'
000000000000e1fe         db  0x0e ; '.'
000000000000e1ff         db  0x10 ; '.'
000000000000e200         db  0x42 ; 'B'
000000000000e201         db  0x0e ; '.'
000000000000e202         db  0x08 ; '.'
000000000000e203         db  0x00 ; '.'
000000000000e204         dd         0x00000010                                  ; Length of the record
000000000000e208         dd         0x000011b0                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e20c         db         0xa4, 0xa8, 2 dup (0xff)                    ; begin 0x8ab0
000000000000e210         db         0x12, 3 dup (0x00)                          ; length 0x12 (end at 0x8ac2)
000000000000e214         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e215         align      8
000000000000e218         dd         0x00000020                                  ; Length of the record
000000000000e21c         dd         0x000011c4                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e220         db         0xb0, 0xa8, 2 dup (0xff)                    ; begin 0x8ad0
000000000000e224         db         0x7c, 3 dup (0x00)                          ; length 0x7c (end at 0x8b4c)
000000000000e228         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e229         db  0x41 ; 'A'
000000000000e22a         db  0x0e ; '.'
000000000000e22b         db  0x10 ; '.'
000000000000e22c         db  0x83 ; '.'
000000000000e22d         db  0x02 ; '.'
000000000000e22e         db  0x4f ; 'O'
000000000000e22f         db  0x0e ; '.'
000000000000e230         db  0xb0 ; '.'
000000000000e231         db  0x01 ; '.'
000000000000e232         db  0x02 ; '.'
000000000000e233         db  0x65 ; 'e'
000000000000e234         db  0x0a ; '.'
000000000000e235         db  0x0e ; '.'
000000000000e236         db  0x10 ; '.'
000000000000e237         db  0x41 ; 'A'
000000000000e238         db  0x0e ; '.'
000000000000e239         db  0x08 ; '.'
000000000000e23a         db  0x41 ; 'A'
000000000000e23b         db  0x0b ; '.'
000000000000e23c         dd         0x00000010                                  ; Length of the record
000000000000e240         dd         0x000011e8                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e244         db         0x0c, 0xa9, 2 dup (0xff)                    ; begin 0x8b50
000000000000e248         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x8b5a)
000000000000e24c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e24d         align      16
000000000000e250         dd         0x00000010                                  ; Length of the record
000000000000e254         dd         0x000011fc                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e258         db         0x08, 0xa9, 2 dup (0xff)                    ; begin 0x8b60
000000000000e25c         db         0x16, 3 dup (0x00)                          ; length 0x16 (end at 0x8b76)
000000000000e260         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e261         align      4
000000000000e264         dd         0x00000048                                  ; Length of the record
000000000000e268         dd         0x00001210                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e26c         db         0x14, 0xa9, 2 dup (0xff)                    ; begin 0x8b80
000000000000e270         db         0x74, 0x01, 2 dup (0x00)                    ; length 0x174 (end at 0x8cf4)
000000000000e274         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e275         db  0x42 ; 'B'
000000000000e276         db  0x0e ; '.'
000000000000e277         db  0x10 ; '.'
000000000000e278         db  0x8f ; '.'
000000000000e279         db  0x02 ; '.'
000000000000e27a         db  0x42 ; 'B'
000000000000e27b         db  0x0e ; '.'
000000000000e27c         db  0x18 ; '.'
000000000000e27d         db  0x8e ; '.'
000000000000e27e         db  0x03 ; '.'
000000000000e27f         db  0x45 ; 'E'
000000000000e280         db  0x0e ; '.'
000000000000e281         db  0x20 ; ' '
000000000000e282         db  0x8d ; '.'
000000000000e283         db  0x04 ; '.'
000000000000e284         db  0x42 ; 'B'
000000000000e285         db  0x0e ; '.'
000000000000e286         db  0x28 ; '('
000000000000e287         db  0x8c ; '.'
000000000000e288         db  0x05 ; '.'
000000000000e289         db  0x44 ; 'D'
000000000000e28a         db  0x0e ; '.'
000000000000e28b         db  0x30 ; '0'
000000000000e28c         db  0x86 ; '.'
000000000000e28d         db  0x06 ; '.'
000000000000e28e         db  0x41 ; 'A'
000000000000e28f         db  0x0e ; '.'
000000000000e290         db  0x38 ; '8'
000000000000e291         db  0x83 ; '.'
000000000000e292         db  0x07 ; '.'
000000000000e293         db  0x46 ; 'F'
000000000000e294         db  0x0e ; '.'
000000000000e295         db  0x70 ; 'p'
000000000000e296         db  0x03 ; '.'
000000000000e297         db  0x31 ; '1'
000000000000e298         db  0x01 ; '.'
000000000000e299         db  0x0a ; '.'
000000000000e29a         db  0x0e ; '.'
000000000000e29b         db  0x38 ; '8'
000000000000e29c         db  0x43 ; 'C'
000000000000e29d         db  0x0e ; '.'
000000000000e29e         db  0x30 ; '0'
000000000000e29f         db  0x41 ; 'A'
000000000000e2a0         db  0x0e ; '.'
000000000000e2a1         db  0x28 ; '('
000000000000e2a2         db  0x42 ; 'B'
000000000000e2a3         db  0x0e ; '.'
000000000000e2a4         db  0x20 ; ' '
000000000000e2a5         db  0x42 ; 'B'
000000000000e2a6         db  0x0e ; '.'
000000000000e2a7         db  0x18 ; '.'
000000000000e2a8         db  0x42 ; 'B'
000000000000e2a9         db  0x0e ; '.'
000000000000e2aa         db  0x10 ; '.'
000000000000e2ab         db  0x42 ; 'B'
000000000000e2ac         db  0x0e ; '.'
000000000000e2ad         db  0x08 ; '.'
000000000000e2ae         db  0x41 ; 'A'
000000000000e2af         db  0x0b ; '.'
000000000000e2b0         dd         0x00000020                                  ; Length of the record
000000000000e2b4         dd         0x0000125c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e2b8         db         0x48, 0xaa, 2 dup (0xff)                    ; begin 0x8d00
000000000000e2bc         db         0x86, 3 dup (0x00)                          ; length 0x86 (end at 0x8d86)
000000000000e2c0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e2c1         db  0x44 ; 'D'
000000000000e2c2         db  0x0e ; '.'
000000000000e2c3         db  0x20 ; ' '
000000000000e2c4         db  0x02 ; '.'
000000000000e2c5         db  0x49 ; 'I'
000000000000e2c6         db  0x0a ; '.'
000000000000e2c7         db  0x0e ; '.'
000000000000e2c8         db  0x08 ; '.'
000000000000e2c9         db  0x43 ; 'C'
000000000000e2ca         db  0x0b ; '.'
000000000000e2cb         db  0x55 ; 'U'
000000000000e2cc         db  0x0a ; '.'
000000000000e2cd         db  0x0e ; '.'
000000000000e2ce         db  0x08 ; '.'
000000000000e2cf         db  0x4b ; 'K'
000000000000e2d0         db  0x0b ; '.'
000000000000e2d1         db  0x55 ; 'U'
000000000000e2d2         db  0x0e ; '.'
000000000000e2d3         db  0x08 ; '.'
000000000000e2d4         dd         0x00000010                                  ; Length of the record
000000000000e2d8         dd         0x00001280                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e2dc         db         0xb4, 0xaa, 2 dup (0xff)                    ; begin 0x8d90
000000000000e2e0         db         0x0b, 3 dup (0x00)                          ; length 0xb (end at 0x8d9b)
000000000000e2e4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e2e5         align      8
000000000000e2e8         dd         0x00000014                                  ; Length of the record
000000000000e2ec         dd         0x00001294                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e2f0         db         0xb0, 0xaa, 2 dup (0xff)                    ; begin 0x8da0
000000000000e2f4         db         0x0b, 3 dup (0x00)                          ; length 0xb (end at 0x8dab)
000000000000e2f8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e2f9         align      256
000000000000e300         dd         0x00000034                                  ; Length of the record
000000000000e304         dd         0x000012ac                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e308         db         0xa8, 0xaa, 2 dup (0xff)                    ; begin 0x8db0
000000000000e30c         db         0x3f, 3 dup (0x00)                          ; length 0x3f (end at 0x8def)
000000000000e310         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e311         db  0x42 ; 'B'
000000000000e312         db  0x0e ; '.'
000000000000e313         db  0x10 ; '.'
000000000000e314         db  0x8d ; '.'
000000000000e315         db  0x02 ; '.'
000000000000e316         db  0x42 ; 'B'
000000000000e317         db  0x0e ; '.'
000000000000e318         db  0x18 ; '.'
000000000000e319         db  0x8c ; '.'
000000000000e31a         db  0x03 ; '.'
000000000000e31b         db  0x41 ; 'A'
000000000000e31c         db  0x0e ; '.'
000000000000e31d         db  0x20 ; ' '
000000000000e31e         db  0x86 ; '.'
000000000000e31f         db  0x04 ; '.'
000000000000e320         db  0x41 ; 'A'
000000000000e321         db  0x0e ; '.'
000000000000e322         db  0x28 ; '('
000000000000e323         db  0x83 ; '.'
000000000000e324         db  0x05 ; '.'
000000000000e325         db  0x46 ; 'F'
000000000000e326         db  0x0e ; '.'
000000000000e327         db  0x30 ; '0'
000000000000e328         db  0x6a ; 'j'
000000000000e329         db  0x0e ; '.'
000000000000e32a         db  0x28 ; '('
000000000000e32b         db  0x43 ; 'C'
000000000000e32c         db  0x0e ; '.'
000000000000e32d         db  0x20 ; ' '
000000000000e32e         db  0x41 ; 'A'
000000000000e32f         db  0x0e ; '.'
000000000000e330         db  0x18 ; '.'
000000000000e331         db  0x42 ; 'B'
000000000000e332         db  0x0e ; '.'
000000000000e333         db  0x10 ; '.'
000000000000e334         db  0x42 ; 'B'
000000000000e335         db  0x0e ; '.'
000000000000e336         db  0x08 ; '.'
000000000000e337         db  0x00 ; '.'
000000000000e338         dd         0x00000110                                  ; Length of the record
000000000000e33c         dd         0x000012e4                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e340         db         0xb0, 0xaa, 2 dup (0xff)                    ; begin 0x8df0
000000000000e344         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x9207)
000000000000e348         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e349         db  0x42 ; 'B'
000000000000e34a         db  0x0e ; '.'
000000000000e34b         db  0x10 ; '.'
000000000000e34c         db  0x8f ; '.'
000000000000e34d         db  0x02 ; '.'
000000000000e34e         db  0x42 ; 'B'
000000000000e34f         db  0x0e ; '.'
000000000000e350         db  0x18 ; '.'
000000000000e351         db  0x8e ; '.'
000000000000e352         db  0x03 ; '.'
000000000000e353         db  0x42 ; 'B'
000000000000e354         db  0x0e ; '.'
000000000000e355         db  0x20 ; ' '
000000000000e356         db  0x8d ; '.'
000000000000e357         db  0x04 ; '.'
000000000000e358         db  0x42 ; 'B'
000000000000e359         db  0x0e ; '.'
000000000000e35a         db  0x28 ; '('
000000000000e35b         db  0x8c ; '.'
000000000000e35c         db  0x05 ; '.'
000000000000e35d         db  0x44 ; 'D'
000000000000e35e         db  0x0e ; '.'
000000000000e35f         db  0x30 ; '0'
000000000000e360         db  0x86 ; '.'
000000000000e361         db  0x06 ; '.'
000000000000e362         db  0x41 ; 'A'
000000000000e363         db  0x0e ; '.'
000000000000e364         db  0x38 ; '8'
000000000000e365         db  0x83 ; '.'
000000000000e366         db  0x07 ; '.'
000000000000e367         db  0x4a ; 'J'
000000000000e368         db  0x0e ; '.'
000000000000e369         db  0x60 ; '`'
000000000000e36a         db  0x02 ; '.'
000000000000e36b         db  0xdd ; '.'
000000000000e36c         db  0x0e ; '.'
000000000000e36d         db  0x68 ; 'h'
000000000000e36e         db  0x57 ; 'W'
000000000000e36f         db  0x0e ; '.'
000000000000e370         db  0x70 ; 'p'
000000000000e371         db  0x42 ; 'B'
000000000000e372         db  0x0e ; '.'
000000000000e373         db  0x78 ; 'x'
000000000000e374         db  0x42 ; 'B'
000000000000e375         db  0x0e ; '.'
000000000000e376         db  0x80 ; '.'
000000000000e377         db  0x01 ; '.'
000000000000e378         db  0x42 ; 'B'
000000000000e379         db  0x0e ; '.'
000000000000e37a         db  0x88 ; '.'
000000000000e37b         db  0x01 ; '.'
000000000000e37c         db  0x42 ; 'B'
000000000000e37d         db  0x0e ; '.'
000000000000e37e         db  0x90 ; '.'
000000000000e37f         db  0x01 ; '.'
000000000000e380         db  0x53 ; 'S'
000000000000e381         db  0x0e ; '.'
000000000000e382         db  0x60 ; '`'
000000000000e383         db  0x44 ; 'D'
000000000000e384         db  0x0a ; '.'
000000000000e385         db  0x0e ; '.'
000000000000e386         db  0x38 ; '8'
000000000000e387         db  0x41 ; 'A'
000000000000e388         db  0x0e ; '.'
000000000000e389         db  0x30 ; '0'
000000000000e38a         db  0x41 ; 'A'
000000000000e38b         db  0x0e ; '.'
000000000000e38c         db  0x28 ; '('
000000000000e38d         db  0x42 ; 'B'
000000000000e38e         db  0x0e ; '.'
000000000000e38f         db  0x20 ; ' '
000000000000e390         db  0x42 ; 'B'
000000000000e391         db  0x0e ; '.'
000000000000e392         db  0x18 ; '.'
000000000000e393         db  0x42 ; 'B'
000000000000e394         db  0x0e ; '.'
000000000000e395         db  0x10 ; '.'
000000000000e396         db  0x42 ; 'B'
000000000000e397         db  0x0e ; '.'
000000000000e398         db  0x08 ; '.'
000000000000e399         db  0x44 ; 'D'
000000000000e39a         db  0x0b ; '.'
000000000000e39b         db  0x02 ; '.'
000000000000e39c         db  0x78 ; 'x'
000000000000e39d         db  0x0a ; '.'
000000000000e39e         db  0x0e ; '.'
000000000000e39f         db  0x68 ; 'h'
000000000000e3a0         db  0x48 ; 'H'
000000000000e3a1         db  0x0b ; '.'
000000000000e3a2         db  0x5a ; 'Z'
000000000000e3a3         db  0x0a ; '.'
000000000000e3a4         db  0x0e ; '.'
000000000000e3a5         db  0x38 ; '8'
000000000000e3a6         db  0x47 ; 'G'
000000000000e3a7         db  0x0e ; '.'
000000000000e3a8         db  0x30 ; '0'
000000000000e3a9         db  0x41 ; 'A'
000000000000e3aa         db  0x0e ; '.'
000000000000e3ab         db  0x28 ; '('
000000000000e3ac         db  0x42 ; 'B'
000000000000e3ad         db  0x0e ; '.'
000000000000e3ae         db  0x20 ; ' '
000000000000e3af         db  0x42 ; 'B'
000000000000e3b0         db  0x0e ; '.'
000000000000e3b1         db  0x18 ; '.'
000000000000e3b2         db  0x42 ; 'B'
000000000000e3b3         db  0x0e ; '.'
000000000000e3b4         db  0x10 ; '.'
000000000000e3b5         db  0x42 ; 'B'
000000000000e3b6         db  0x0e ; '.'
000000000000e3b7         db  0x08 ; '.'
000000000000e3b8         db  0x56 ; 'V'
000000000000e3b9         db  0x0b ; '.'
000000000000e3ba         db  0x5e ; '^'
000000000000e3bb         db  0x0a ; '.'
000000000000e3bc         db  0x0e ; '.'
000000000000e3bd         db  0x38 ; '8'
000000000000e3be         db  0x52 ; 'R'
000000000000e3bf         db  0x0e ; '.'
000000000000e3c0         db  0x30 ; '0'
000000000000e3c1         db  0x41 ; 'A'
000000000000e3c2         db  0x0e ; '.'
000000000000e3c3         db  0x28 ; '('
000000000000e3c4         db  0x42 ; 'B'
000000000000e3c5         db  0x0e ; '.'
000000000000e3c6         db  0x20 ; ' '
000000000000e3c7         db  0x42 ; 'B'
000000000000e3c8         db  0x0e ; '.'
000000000000e3c9         db  0x18 ; '.'
000000000000e3ca         db  0x42 ; 'B'
000000000000e3cb         db  0x0e ; '.'
000000000000e3cc         db  0x10 ; '.'
000000000000e3cd         db  0x42 ; 'B'
000000000000e3ce         db  0x0e ; '.'
000000000000e3cf         db  0x08 ; '.'
000000000000e3d0         db  0x4f ; 'O'
000000000000e3d1         db  0x0b ; '.'
000000000000e3d2         db  0x62 ; 'b'
000000000000e3d3         db  0x0a ; '.'
000000000000e3d4         db  0x0e ; '.'
000000000000e3d5         db  0x38 ; '8'
000000000000e3d6         db  0x50 ; 'P'
000000000000e3d7         db  0x0e ; '.'
000000000000e3d8         db  0x30 ; '0'
000000000000e3d9         db  0x41 ; 'A'
000000000000e3da         db  0x0e ; '.'
000000000000e3db         db  0x28 ; '('
000000000000e3dc         db  0x42 ; 'B'
000000000000e3dd         db  0x0e ; '.'
000000000000e3de         db  0x20 ; ' '
000000000000e3df         db  0x42 ; 'B'
000000000000e3e0         db  0x0e ; '.'
000000000000e3e1         db  0x18 ; '.'
000000000000e3e2         db  0x42 ; 'B'
000000000000e3e3         db  0x0e ; '.'
000000000000e3e4         db  0x10 ; '.'
000000000000e3e5         db  0x42 ; 'B'
000000000000e3e6         db  0x0e ; '.'
000000000000e3e7         db  0x08 ; '.'
000000000000e3e8         db  0x55 ; 'U'
000000000000e3e9         db  0x0b ; '.'
000000000000e3ea         db  0x66 ; 'f'
000000000000e3eb         db  0x0e ; '.'
000000000000e3ec         db  0x68 ; 'h'
000000000000e3ed         db  0x42 ; 'B'
000000000000e3ee         db  0x0e ; '.'
000000000000e3ef         db  0x70 ; 'p'
000000000000e3f0         db  0x5c ; '\'
000000000000e3f1         db  0x0e ; '.'
000000000000e3f2         db  0x68 ; 'h'
000000000000e3f3         db  0x41 ; 'A'
000000000000e3f4         db  0x0e ; '.'
000000000000e3f5         db  0x60 ; '`'
000000000000e3f6         db  0x44 ; 'D'
000000000000e3f7         db  0x0a ; '.'
000000000000e3f8         db  0x0e ; '.'
000000000000e3f9         db  0x38 ; '8'
000000000000e3fa         db  0x41 ; 'A'
000000000000e3fb         db  0x0e ; '.'
000000000000e3fc         db  0x30 ; '0'
000000000000e3fd         db  0x41 ; 'A'
000000000000e3fe         db  0x0e ; '.'
000000000000e3ff         db  0x28 ; '('
000000000000e400         db  0x42 ; 'B'
000000000000e401         db  0x0e ; '.'
000000000000e402         db  0x20 ; ' '
000000000000e403         db  0x42 ; 'B'
000000000000e404         db  0x0e ; '.'
000000000000e405         db  0x18 ; '.'
000000000000e406         db  0x42 ; 'B'
000000000000e407         db  0x0e ; '.'
000000000000e408         db  0x10 ; '.'
000000000000e409         db  0x42 ; 'B'
000000000000e40a         db  0x0e ; '.'
000000000000e40b         db  0x08 ; '.'
000000000000e40c         db  0x45 ; 'E'
000000000000e40d         db  0x0b ; '.'
000000000000e40e         db  0x68 ; 'h'
000000000000e40f         db  0x0a ; '.'
000000000000e410         db  0x0e ; '.'
000000000000e411         db  0x68 ; 'h'
000000000000e412         db  0x48 ; 'H'
000000000000e413         db  0x0b ; '.'
000000000000e414         db  0x72 ; 'r'
000000000000e415         db  0x0e ; '.'
000000000000e416         db  0x68 ; 'h'
000000000000e417         db  0x45 ; 'E'
000000000000e418         db  0x0e ; '.'
000000000000e419         db  0x70 ; 'p'
000000000000e41a         db  0x42 ; 'B'
000000000000e41b         db  0x0e ; '.'
000000000000e41c         db  0x78 ; 'x'
000000000000e41d         db  0x42 ; 'B'
000000000000e41e         db  0x0e ; '.'
000000000000e41f         db  0x80 ; '.'
000000000000e420         db  0x01 ; '.'
000000000000e421         db  0x5e ; '^'
000000000000e422         db  0x0e ; '.'
000000000000e423         db  0x60 ; '`'
000000000000e424         db  0x44 ; 'D'
000000000000e425         db  0x0a ; '.'
000000000000e426         db  0x0e ; '.'
000000000000e427         db  0x38 ; '8'
000000000000e428         db  0x41 ; 'A'
000000000000e429         db  0x0e ; '.'
000000000000e42a         db  0x30 ; '0'
000000000000e42b         db  0x41 ; 'A'
000000000000e42c         db  0x0e ; '.'
000000000000e42d         db  0x28 ; '('
000000000000e42e         db  0x42 ; 'B'
000000000000e42f         db  0x0e ; '.'
000000000000e430         db  0x20 ; ' '
000000000000e431         db  0x42 ; 'B'
000000000000e432         db  0x0e ; '.'
000000000000e433         db  0x18 ; '.'
000000000000e434         db  0x42 ; 'B'
000000000000e435         db  0x0e ; '.'
000000000000e436         db  0x10 ; '.'
000000000000e437         db  0x42 ; 'B'
000000000000e438         db  0x0e ; '.'
000000000000e439         db  0x08 ; '.'
000000000000e43a         db  0x41 ; 'A'
000000000000e43b         db  0x0b ; '.'
000000000000e43c         db  0x79 ; 'y'
000000000000e43d         db  0x0a ; '.'
000000000000e43e         db  0x0e ; '.'
000000000000e43f         db  0x68 ; 'h'
000000000000e440         db  0x42 ; 'B'
000000000000e441         db  0x0e ; '.'
000000000000e442         db  0x70 ; 'p'
000000000000e443         db  0x42 ; 'B'
000000000000e444         db  0x0e ; '.'
000000000000e445         db  0x78 ; 'x'
000000000000e446         db  0x42 ; 'B'
000000000000e447         db  0x0e ; '.'
000000000000e448         db  0x80 ; '.'
000000000000e449         db  0x01 ; '.'
000000000000e44a         db  0x51 ; 'Q'
000000000000e44b         db  0x0b ; '.'
000000000000e44c         dd         0x00000010                                  ; Length of the record
000000000000e450         dd         0x000013f8                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e454         db         0xbc, 0xad, 2 dup (0xff)                    ; begin 0x9210
000000000000e458         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x9230)
000000000000e45c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e45d         align      32
000000000000e460         dd         0x00000018                                  ; Length of the record
000000000000e464         dd         0x0000140c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e468         db         0xc8, 0xad, 2 dup (0xff)                    ; begin 0x9230
000000000000e46c         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x92a8)
000000000000e470         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e471         db  0x44 ; 'D'
000000000000e472         db  0x0e ; '.'
000000000000e473         db  0x70 ; 'p'
000000000000e474         db  0x02 ; '.'
000000000000e475         db  0x60 ; '`'
000000000000e476         db  0x0a ; '.'
000000000000e477         db  0x0e ; '.'
000000000000e478         db  0x08 ; '.'
000000000000e479         db  0x41 ; 'A'
000000000000e47a         db  0x0b ; '.'
000000000000e47b         db  0x00 ; '.'
000000000000e47c         dd         0x00000028                                  ; Length of the record
000000000000e480         dd         0x00001428                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e484         db         0x2c, 0xae, 2 dup (0xff)                    ; begin 0x92b0
000000000000e488         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x9385)
000000000000e48c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e48d         db  0x41 ; 'A'
000000000000e48e         db  0x0e ; '.'
000000000000e48f         db  0x10 ; '.'
000000000000e490         db  0x86 ; '.'
000000000000e491         db  0x02 ; '.'
000000000000e492         db  0x41 ; 'A'
000000000000e493         db  0x0e ; '.'
000000000000e494         db  0x18 ; '.'
000000000000e495         db  0x83 ; '.'
000000000000e496         db  0x03 ; '.'
000000000000e497         db  0x50 ; 'P'
000000000000e498         db  0x0e ; '.'
000000000000e499         db  0xd0 ; '.'
000000000000e49a         db  0x01 ; '.'
000000000000e49b         db  0x02 ; '.'
000000000000e49c         db  0xab ; '.'
000000000000e49d         db  0x0a ; '.'
000000000000e49e         db  0x0e ; '.'
000000000000e49f         db  0x18 ; '.'
000000000000e4a0         db  0x41 ; 'A'
000000000000e4a1         db  0x0e ; '.'
000000000000e4a2         db  0x10 ; '.'
000000000000e4a3         db  0x41 ; 'A'
000000000000e4a4         db  0x0e ; '.'
000000000000e4a5         db  0x08 ; '.'
000000000000e4a6         db  0x41 ; 'A'
000000000000e4a7         db  0x0b ; '.'
000000000000e4a8         dd         0x0000001c                                  ; Length of the record
000000000000e4ac         dd         0x00001454                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e4b0         db         0xe0, 0xae, 2 dup (0xff)                    ; begin 0x9390
000000000000e4b4         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x9410)
000000000000e4b8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e4b9         db  0x41 ; 'A'
000000000000e4ba         db  0x0e ; '.'
000000000000e4bb         db  0x10 ; '.'
000000000000e4bc         db  0x83 ; '.'
000000000000e4bd         db  0x02 ; '.'
000000000000e4be         db  0x02 ; '.'
000000000000e4bf         db  0x7a ; 'z'
000000000000e4c0         db  0x0e ; '.'
000000000000e4c1         db  0x08 ; '.'
000000000000e4c2         db  0x00 ; '.'
000000000000e4c3         db  0x00 ; '.'
000000000000e4c4         db  0x00 ; '.'
000000000000e4c5         db  0x00 ; '.'
000000000000e4c6         db  0x00 ; '.'
000000000000e4c7         db  0x00 ; '.'
000000000000e4c8         dd         0x00000018                                  ; Length of the record
000000000000e4cc         dd         0x00001474                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e4d0         db         0x40, 0xaf, 2 dup (0xff)                    ; begin 0x9410
000000000000e4d4         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x942a)
000000000000e4d8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e4d9         db  0x41 ; 'A'
000000000000e4da         db  0x0e ; '.'
000000000000e4db         db  0x10 ; '.'
000000000000e4dc         db  0x83 ; '.'
000000000000e4dd         db  0x02 ; '.'
000000000000e4de         db  0x53 ; 'S'
000000000000e4df         db  0x0a ; '.'
000000000000e4e0         db  0x0e ; '.'
000000000000e4e1         db  0x08 ; '.'
000000000000e4e2         db  0x41 ; 'A'
000000000000e4e3         db  0x0b ; '.'
000000000000e4e4         dd         0x00000010                                  ; Length of the record
000000000000e4e8         dd         0x00001490                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e4ec         db         0x44, 0xaf, 2 dup (0xff)                    ; begin 0x9430
000000000000e4f0         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x9454)
000000000000e4f4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e4f5         db  0x5f ; '_'
000000000000e4f6         db  0x0e ; '.'
000000000000e4f7         db  0x10 ; '.'
000000000000e4f8         dd         0x00000010                                  ; Length of the record
000000000000e4fc         dd         0x000014a4                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e500         db         0x60, 0xaf, 2 dup (0xff)                    ; begin 0x9460
000000000000e504         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x9462)
000000000000e508         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e509         align      4
000000000000e50c         dd         0x00000020                                  ; Length of the record
000000000000e510         dd         0x000014b8                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e514         db         0x5c, 0xaf, 2 dup (0xff)                    ; begin 0x9470
000000000000e518         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x94a6)
000000000000e51c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e51d         db  0x44 ; 'D'
000000000000e51e         db  0x0e ; '.'
000000000000e51f         db  0x10 ; '.'
000000000000e520         db  0x83 ; '.'
000000000000e521         db  0x02 ; '.'
000000000000e522         db  0x5d ; ']'
000000000000e523         db  0x0a ; '.'
000000000000e524         db  0x0e ; '.'
000000000000e525         db  0x08 ; '.'
000000000000e526         db  0x47 ; 'G'
000000000000e527         db  0x0b ; '.'
000000000000e528         db  0x48 ; 'H'
000000000000e529         db  0x0a ; '.'
000000000000e52a         db  0x0e ; '.'
000000000000e52b         db  0x08 ; '.'
000000000000e52c         db  0x41 ; 'A'
000000000000e52d         db  0x0b ; '.'
000000000000e52e         db  0x00 ; '.'
000000000000e52f         db  0x00 ; '.'
000000000000e530         dd         0x00000010                                  ; Length of the record
000000000000e534         dd         0x000014dc                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e538         db         0x78, 0xaf, 2 dup (0xff)                    ; begin 0x94b0
000000000000e53c         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x94d4)
000000000000e540         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e541         db  0x5f ; '_'
000000000000e542         db  0x0e ; '.'
000000000000e543         db  0x10 ; '.'
000000000000e544         dd         0x00000014                                  ; Length of the record
000000000000e548         dd         0x000014f0                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e54c         db         0x94, 0xaf, 2 dup (0xff)                    ; begin 0x94e0
000000000000e550         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x9562)
000000000000e554         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e555         db  0x02 ; '.'
000000000000e556         db  0x5f ; '_'
000000000000e557         db  0x0e ; '.'
000000000000e558         db  0x10 ; '.'
000000000000e559         db  0x49 ; 'I'
000000000000e55a         db  0x0e ; '.'
000000000000e55b         db  0x08 ; '.'
000000000000e55c         dd         0x00000014                                  ; Length of the record
000000000000e560         dd         0x00001508                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e564         db         0x0c, 0xb0, 2 dup (0xff)                    ; begin 0x9570
000000000000e568         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x95ba)
000000000000e56c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e56d         db  0x02 ; '.'
000000000000e56e         db  0x45 ; 'E'
000000000000e56f         db  0x0e ; '.'
000000000000e570         db  0x10 ; '.'
000000000000e571         db  0x00 ; '.'
000000000000e572         db  0x00 ; '.'
000000000000e573         db  0x00 ; '.'
000000000000e574         dd         0x00000018                                  ; Length of the record
000000000000e578         dd         0x00001520                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e57c         db         0x44, 0xb0, 2 dup (0xff)                    ; begin 0x95c0
000000000000e580         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x95d7)
000000000000e584         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e585         db  0x41 ; 'A'
000000000000e586         db  0x0e ; '.'
000000000000e587         db  0x10 ; '.'
000000000000e588         db  0x83 ; '.'
000000000000e589         db  0x02 ; '.'
000000000000e58a         db  0x51 ; 'Q'
000000000000e58b         db  0x0e ; '.'
000000000000e58c         db  0x08 ; '.'
000000000000e58d         db  0x00 ; '.'
000000000000e58e         db  0x00 ; '.'
000000000000e58f         db  0x00 ; '.'
000000000000e590         dd         0x00000018                                  ; Length of the record
000000000000e594         dd         0x0000153c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e598         db         0x48, 0xb0, 2 dup (0xff)                    ; begin 0x95e0
000000000000e59c         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x960e)
000000000000e5a0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e5a1         db  0x47 ; 'G'
000000000000e5a2         db  0x0e ; '.'
000000000000e5a3         db  0x10 ; '.'
000000000000e5a4         db  0x61 ; 'a'
000000000000e5a5         db  0x0a ; '.'
000000000000e5a6         db  0x0e ; '.'
000000000000e5a7         db  0x08 ; '.'
000000000000e5a8         db  0x41 ; 'A'
000000000000e5a9         db  0x0b ; '.'
000000000000e5aa         db  0x00 ; '.'
000000000000e5ab         db  0x00 ; '.'
000000000000e5ac         dd         0x00000024                                  ; Length of the record
000000000000e5b0         dd         0x00001558                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e5b4         db         0x5c, 0xb0, 2 dup (0xff)                    ; begin 0x9610
000000000000e5b8         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x9638)
000000000000e5bc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e5bd         db  0x41 ; 'A'
000000000000e5be         db  0x0e ; '.'
000000000000e5bf         db  0x10 ; '.'
000000000000e5c0         db  0x86 ; '.'
000000000000e5c1         db  0x02 ; '.'
000000000000e5c2         db  0x41 ; 'A'
000000000000e5c3         db  0x0e ; '.'
000000000000e5c4         db  0x18 ; '.'
000000000000e5c5         db  0x83 ; '.'
000000000000e5c6         db  0x03 ; '.'
000000000000e5c7         db  0x4d ; 'M'
000000000000e5c8         db  0x0e ; '.'
000000000000e5c9         db  0x20 ; ' '
000000000000e5ca         db  0x49 ; 'I'
000000000000e5cb         db  0x0e ; '.'
000000000000e5cc         db  0x18 ; '.'
000000000000e5cd         db  0x47 ; 'G'
000000000000e5ce         db  0x0e ; '.'
000000000000e5cf         db  0x10 ; '.'
000000000000e5d0         db  0x41 ; 'A'
000000000000e5d1         db  0x0e ; '.'
000000000000e5d2         db  0x08 ; '.'
000000000000e5d3         db  0x00 ; '.'
000000000000e5d4         dd         0x00000018                                  ; Length of the record
000000000000e5d8         dd         0x00001580                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e5dc         db         0x64, 0xb0, 2 dup (0xff)                    ; begin 0x9640
000000000000e5e0         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x9653)
000000000000e5e4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e5e5         db  0x41 ; 'A'
000000000000e5e6         db  0x0e ; '.'
000000000000e5e7         db  0x10 ; '.'
000000000000e5e8         db  0x83 ; '.'
000000000000e5e9         db  0x02 ; '.'
000000000000e5ea         db  0x50 ; 'P'
000000000000e5eb         db  0x0e ; '.'
000000000000e5ec         db  0x08 ; '.'
000000000000e5ed         db  0x00 ; '.'
000000000000e5ee         db  0x00 ; '.'
000000000000e5ef         db  0x00 ; '.'
000000000000e5f0         dd         0x00000014                                  ; Length of the record
000000000000e5f4         dd         0x0000159c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e5f8         db         0x68, 0xb0, 2 dup (0xff)                    ; begin 0x9660
000000000000e5fc         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x9695)
000000000000e600         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e601         db  0x4b ; 'K'
000000000000e602         db  0x0e ; '.'
000000000000e603         db  0x10 ; '.'
000000000000e604         db  0x00 ; '.'
000000000000e605         db  0x00 ; '.'
000000000000e606         db  0x00 ; '.'
000000000000e607         db  0x00 ; '.'
000000000000e608         dd         0x0000001c                                  ; Length of the record
000000000000e60c         dd         0x000015b4                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e610         db         0x90, 0xb0, 2 dup (0xff)                    ; begin 0x96a0
000000000000e614         db         0x2f, 3 dup (0x00)                          ; length 0x2f (end at 0x96cf)
000000000000e618         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e619         db  0x41 ; 'A'
000000000000e61a         db  0x0e ; '.'
000000000000e61b         db  0x10 ; '.'
000000000000e61c         db  0x83 ; '.'
000000000000e61d         db  0x02 ; '.'
000000000000e61e         db  0x55 ; 'U'
000000000000e61f         db  0x0a ; '.'
000000000000e620         db  0x0e ; '.'
000000000000e621         db  0x08 ; '.'
000000000000e622         db  0x4a ; 'J'
000000000000e623         db  0x0b ; '.'
000000000000e624         db  0x00 ; '.'
000000000000e625         db  0x00 ; '.'
000000000000e626         db  0x00 ; '.'
000000000000e627         db  0x00 ; '.'
000000000000e628         dd         0x00000024                                  ; Length of the record
000000000000e62c         dd         0x000015d4                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e630         db         0xa0, 0xb0, 2 dup (0xff)                    ; begin 0x96d0
000000000000e634         db         0x97, 3 dup (0x00)                          ; length 0x97 (end at 0x9767)
000000000000e638         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e639         db  0x41 ; 'A'
000000000000e63a         db  0x0e ; '.'
000000000000e63b         db  0x10 ; '.'
000000000000e63c         db  0x83 ; '.'
000000000000e63d         db  0x02 ; '.'
000000000000e63e         db  0x4b ; 'K'
000000000000e63f         db  0x0e ; '.'
000000000000e640         db  0x30 ; '0'
000000000000e641         db  0x02 ; '.'
000000000000e642         db  0x76 ; 'v'
000000000000e643         db  0x0a ; '.'
000000000000e644         db  0x0e ; '.'
000000000000e645         db  0x10 ; '.'
000000000000e646         db  0x41 ; 'A'
000000000000e647         db  0x0e ; '.'
000000000000e648         db  0x08 ; '.'
000000000000e649         db  0x45 ; 'E'
000000000000e64a         db  0x0b ; '.'
000000000000e64b         db  0x00 ; '.'
000000000000e64c         db  0x00 ; '.'
000000000000e64d         db  0x00 ; '.'
000000000000e64e         db  0x00 ; '.'
000000000000e64f         db  0x00 ; '.'
000000000000e650         dd         0x0000001c                                  ; Length of the record
000000000000e654         dd         0x000015fc                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e658         db         0x18, 0xb1, 2 dup (0xff)                    ; begin 0x9770
000000000000e65c         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x97b0)
000000000000e660         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e661         db  0x44 ; 'D'
000000000000e662         db  0x0e ; '.'
000000000000e663         db  0x10 ; '.'
000000000000e664         db  0x83 ; '.'
000000000000e665         db  0x02 ; '.'
000000000000e666         db  0x5a ; 'Z'
000000000000e667         db  0x0a ; '.'
000000000000e668         db  0x0e ; '.'
000000000000e669         db  0x08 ; '.'
000000000000e66a         db  0x4a ; 'J'
000000000000e66b         db  0x0b ; '.'
000000000000e66c         db  0x53 ; 'S'
000000000000e66d         db  0x0e ; '.'
000000000000e66e         db  0x08 ; '.'
000000000000e66f         db  0x00 ; '.'
000000000000e670         dd         0x00000014                                  ; Length of the record
000000000000e674         dd         0x0000161c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e678         db         0x38, 0xb1, 2 dup (0xff)                    ; begin 0x97b0
000000000000e67c         db         0x29, 3 dup (0x00)                          ; length 0x29 (end at 0x97d9)
000000000000e680         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e681         align      8
000000000000e688         dd         0x0000002c                                  ; Length of the record
000000000000e68c         dd         0x00001634                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e690         db         0x50, 0xb1, 2 dup (0xff)                    ; begin 0x97e0
000000000000e694         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x9837)
000000000000e698         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e699         db  0x63 ; 'c'
000000000000e69a         db  0x0e ; '.'
000000000000e69b         db  0x10 ; '.'
000000000000e69c         db  0x8c ; '.'
000000000000e69d         db  0x02 ; '.'
000000000000e69e         db  0x41 ; 'A'
000000000000e69f         db  0x0e ; '.'
000000000000e6a0         db  0x18 ; '.'
000000000000e6a1         db  0x86 ; '.'
000000000000e6a2         db  0x03 ; '.'
000000000000e6a3         db  0x44 ; 'D'
000000000000e6a4         db  0x0e ; '.'
000000000000e6a5         db  0x20 ; ' '
000000000000e6a6         db  0x83 ; '.'
000000000000e6a7         db  0x04 ; '.'
000000000000e6a8         db  0x6b ; 'k'
000000000000e6a9         db  0x0e ; '.'
000000000000e6aa         db  0x18 ; '.'
000000000000e6ab         db  0x41 ; 'A'
000000000000e6ac         db  0x0e ; '.'
000000000000e6ad         db  0x10 ; '.'
000000000000e6ae         db  0x42 ; 'B'
000000000000e6af         db  0x0e ; '.'
000000000000e6b0         db  0x08 ; '.'
000000000000e6b1         db  0x00 ; '.'
000000000000e6b2         db  0x00 ; '.'
000000000000e6b3         db  0x00 ; '.'
000000000000e6b4         db  0x00 ; '.'
000000000000e6b5         db  0x00 ; '.'
000000000000e6b6         db  0x00 ; '.'
000000000000e6b7         db  0x00 ; '.'
000000000000e6b8         dd         0x0000003c                                  ; Length of the record
000000000000e6bc         dd         0x00001664                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e6c0         db         0x80, 0xb1, 2 dup (0xff)                    ; begin 0x9840
000000000000e6c4         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x98c3)
000000000000e6c8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e6c9         db  0x42 ; 'B'
000000000000e6ca         db  0x0e ; '.'
000000000000e6cb         db  0x10 ; '.'
000000000000e6cc         db  0x8d ; '.'
000000000000e6cd         db  0x02 ; '.'
000000000000e6ce         db  0x42 ; 'B'
000000000000e6cf         db  0x0e ; '.'
000000000000e6d0         db  0x18 ; '.'
000000000000e6d1         db  0x8c ; '.'
000000000000e6d2         db  0x03 ; '.'
000000000000e6d3         db  0x44 ; 'D'
000000000000e6d4         db  0x0e ; '.'
000000000000e6d5         db  0x20 ; ' '
000000000000e6d6         db  0x86 ; '.'
000000000000e6d7         db  0x04 ; '.'
000000000000e6d8         db  0x41 ; 'A'
000000000000e6d9         db  0x0e ; '.'
000000000000e6da         db  0x28 ; '('
000000000000e6db         db  0x83 ; '.'
000000000000e6dc         db  0x05 ; '.'
000000000000e6dd         db  0x4a ; 'J'
000000000000e6de         db  0x0e ; '.'
000000000000e6df         db  0x40 ; '@'
000000000000e6e0         db  0x02 ; '.'
000000000000e6e1         db  0x64 ; 'd'
000000000000e6e2         db  0x0a ; '.'
000000000000e6e3         db  0x0e ; '.'
000000000000e6e4         db  0x28 ; '('
000000000000e6e5         db  0x41 ; 'A'
000000000000e6e6         db  0x0e ; '.'
000000000000e6e7         db  0x20 ; ' '
000000000000e6e8         db  0x41 ; 'A'
000000000000e6e9         db  0x0e ; '.'
000000000000e6ea         db  0x18 ; '.'
000000000000e6eb         db  0x42 ; 'B'
000000000000e6ec         db  0x0e ; '.'
000000000000e6ed         db  0x10 ; '.'
000000000000e6ee         db  0x42 ; 'B'
000000000000e6ef         db  0x0e ; '.'
000000000000e6f0         db  0x08 ; '.'
000000000000e6f1         db  0x41 ; 'A'
000000000000e6f2         db  0x0b ; '.'
000000000000e6f3         db  0x00 ; '.'
000000000000e6f4         db  0x00 ; '.'
000000000000e6f5         db  0x00 ; '.'
000000000000e6f6         db  0x00 ; '.'
000000000000e6f7         db  0x00 ; '.'
000000000000e6f8         dd         0x0000004c                                  ; Length of the record
000000000000e6fc         dd         0x000016a4                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e700         db         0xd0, 0xb1, 2 dup (0xff)                    ; begin 0x98d0
000000000000e704         db         0xef, 3 dup (0x00)                          ; length 0xef (end at 0x99bf)
000000000000e708         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e709         db  0x42 ; 'B'
000000000000e70a         db  0x0e ; '.'
000000000000e70b         db  0x10 ; '.'
000000000000e70c         db  0x8f ; '.'
000000000000e70d         db  0x02 ; '.'
000000000000e70e         db  0x42 ; 'B'
000000000000e70f         db  0x0e ; '.'
000000000000e710         db  0x18 ; '.'
000000000000e711         db  0x8e ; '.'
000000000000e712         db  0x03 ; '.'
000000000000e713         db  0x47 ; 'G'
000000000000e714         db  0x0e ; '.'
000000000000e715         db  0x20 ; ' '
000000000000e716         db  0x8d ; '.'
000000000000e717         db  0x04 ; '.'
000000000000e718         db  0x42 ; 'B'
000000000000e719         db  0x0e ; '.'
000000000000e71a         db  0x28 ; '('
000000000000e71b         db  0x8c ; '.'
000000000000e71c         db  0x05 ; '.'
000000000000e71d         db  0x44 ; 'D'
000000000000e71e         db  0x0e ; '.'
000000000000e71f         db  0x30 ; '0'
000000000000e720         db  0x86 ; '.'
000000000000e721         db  0x06 ; '.'
000000000000e722         db  0x41 ; 'A'
000000000000e723         db  0x0e ; '.'
000000000000e724         db  0x38 ; '8'
000000000000e725         db  0x83 ; '.'
000000000000e726         db  0x07 ; '.'
000000000000e727         db  0x5c ; '\'
000000000000e728         db  0x0e ; '.'
000000000000e729         db  0x40 ; '@'
000000000000e72a         db  0x02 ; '.'
000000000000e72b         db  0x61 ; 'a'
000000000000e72c         db  0x0a ; '.'
000000000000e72d         db  0x0e ; '.'
000000000000e72e         db  0x38 ; '8'
000000000000e72f         db  0x44 ; 'D'
000000000000e730         db  0x0e ; '.'
000000000000e731         db  0x30 ; '0'
000000000000e732         db  0x41 ; 'A'
000000000000e733         db  0x0e ; '.'
000000000000e734         db  0x28 ; '('
000000000000e735         db  0x42 ; 'B'
000000000000e736         db  0x0e ; '.'
000000000000e737         db  0x20 ; ' '
000000000000e738         db  0x42 ; 'B'
000000000000e739         db  0x0e ; '.'
000000000000e73a         db  0x18 ; '.'
000000000000e73b         db  0x42 ; 'B'
000000000000e73c         db  0x0e ; '.'
000000000000e73d         db  0x10 ; '.'
000000000000e73e         db  0x42 ; 'B'
000000000000e73f         db  0x0e ; '.'
000000000000e740         db  0x08 ; '.'
000000000000e741         db  0x44 ; 'D'
000000000000e742         db  0x0b ; '.'
000000000000e743         db  0x00 ; '.'
000000000000e744         db  0x00 ; '.'
000000000000e745         db  0x00 ; '.'
000000000000e746         db  0x00 ; '.'
000000000000e747         db  0x00 ; '.'
000000000000e748         dd         0x00000010                                  ; Length of the record
000000000000e74c         dd         0x000016f4                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e750         db         0x70, 0xb2, 2 dup (0xff)                    ; begin 0x99c0
000000000000e754         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x99ca)
000000000000e758         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e759         align      4
000000000000e75c         dd         0x00000048                                  ; Length of the record
000000000000e760         dd         0x00001708                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e764         db         0x6c, 0xb2, 2 dup (0xff)                    ; begin 0x99d0
000000000000e768         db         0x16, 0x01, 2 dup (0x00)                    ; length 0x116 (end at 0x9ae6)
000000000000e76c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e76d         db  0x42 ; 'B'
000000000000e76e         db  0x0e ; '.'
000000000000e76f         db  0x10 ; '.'
000000000000e770         db  0x8f ; '.'
000000000000e771         db  0x02 ; '.'
000000000000e772         db  0x42 ; 'B'
000000000000e773         db  0x0e ; '.'
000000000000e774         db  0x18 ; '.'
000000000000e775         db  0x8e ; '.'
000000000000e776         db  0x03 ; '.'
000000000000e777         db  0x45 ; 'E'
000000000000e778         db  0x0e ; '.'
000000000000e779         db  0x20 ; ' '
000000000000e77a         db  0x8d ; '.'
000000000000e77b         db  0x04 ; '.'
000000000000e77c         db  0x42 ; 'B'
000000000000e77d         db  0x0e ; '.'
000000000000e77e         db  0x28 ; '('
000000000000e77f         db  0x8c ; '.'
000000000000e780         db  0x05 ; '.'
000000000000e781         db  0x44 ; 'D'
000000000000e782         db  0x0e ; '.'
000000000000e783         db  0x30 ; '0'
000000000000e784         db  0x86 ; '.'
000000000000e785         db  0x06 ; '.'
000000000000e786         db  0x41 ; 'A'
000000000000e787         db  0x0e ; '.'
000000000000e788         db  0x38 ; '8'
000000000000e789         db  0x83 ; '.'
000000000000e78a         db  0x07 ; '.'
000000000000e78b         db  0x47 ; 'G'
000000000000e78c         db  0x0e ; '.'
000000000000e78d         db  0x60 ; '`'
000000000000e78e         db  0x02 ; '.'
000000000000e78f         db  0xde ; '.'
000000000000e790         db  0x0a ; '.'
000000000000e791         db  0x0e ; '.'
000000000000e792         db  0x38 ; '8'
000000000000e793         db  0x41 ; 'A'
000000000000e794         db  0x0e ; '.'
000000000000e795         db  0x30 ; '0'
000000000000e796         db  0x41 ; 'A'
000000000000e797         db  0x0e ; '.'
000000000000e798         db  0x28 ; '('
000000000000e799         db  0x42 ; 'B'
000000000000e79a         db  0x0e ; '.'
000000000000e79b         db  0x20 ; ' '
000000000000e79c         db  0x42 ; 'B'
000000000000e79d         db  0x0e ; '.'
000000000000e79e         db  0x18 ; '.'
000000000000e79f         db  0x42 ; 'B'
000000000000e7a0         db  0x0e ; '.'
000000000000e7a1         db  0x10 ; '.'
000000000000e7a2         db  0x42 ; 'B'
000000000000e7a3         db  0x0e ; '.'
000000000000e7a4         db  0x08 ; '.'
000000000000e7a5         db  0x41 ; 'A'
000000000000e7a6         db  0x0b ; '.'
000000000000e7a7         db  0x00 ; '.'
000000000000e7a8         dd         0x00000028                                  ; Length of the record
000000000000e7ac         dd         0x00001754                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e7b0         db         0x40, 0xb3, 2 dup (0xff)                    ; begin 0x9af0
000000000000e7b4         db         0x73, 3 dup (0x00)                          ; length 0x73 (end at 0x9b63)
000000000000e7b8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e7b9         db  0x46 ; 'F'
000000000000e7ba         db  0x0e ; '.'
000000000000e7bb         db  0x10 ; '.'
000000000000e7bc         db  0x8c ; '.'
000000000000e7bd         db  0x02 ; '.'
000000000000e7be         db  0x46 ; 'F'
000000000000e7bf         db  0x0e ; '.'
000000000000e7c0         db  0x18 ; '.'
000000000000e7c1         db  0x86 ; '.'
000000000000e7c2         db  0x03 ; '.'
000000000000e7c3         db  0x44 ; 'D'
000000000000e7c4         db  0x0e ; '.'
000000000000e7c5         db  0x20 ; ' '
000000000000e7c6         db  0x83 ; '.'
000000000000e7c7         db  0x04 ; '.'
000000000000e7c8         db  0x7f ; '.'
000000000000e7c9         db  0x0a ; '.'
000000000000e7ca         db  0x0e ; '.'
000000000000e7cb         db  0x18 ; '.'
000000000000e7cc         db  0x41 ; 'A'
000000000000e7cd         db  0x0e ; '.'
000000000000e7ce         db  0x10 ; '.'
000000000000e7cf         db  0x42 ; 'B'
000000000000e7d0         db  0x0e ; '.'
000000000000e7d1         db  0x08 ; '.'
000000000000e7d2         db  0x4e ; 'N'
000000000000e7d3         db  0x0b ; '.'
000000000000e7d4         dd         0x0000005c                                  ; Length of the record
000000000000e7d8         dd         0x00001780                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e7dc         db         0x94, 0xb3, 2 dup (0xff)                    ; begin 0x9b70
000000000000e7e0         db         0x20, 0x01, 2 dup (0x00)                    ; length 0x120 (end at 0x9c90)
000000000000e7e4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e7e5         db  0x42 ; 'B'
000000000000e7e6         db  0x0e ; '.'
000000000000e7e7         db  0x10 ; '.'
000000000000e7e8         db  0x8f ; '.'
000000000000e7e9         db  0x02 ; '.'
000000000000e7ea         db  0x42 ; 'B'
000000000000e7eb         db  0x0e ; '.'
000000000000e7ec         db  0x18 ; '.'
000000000000e7ed         db  0x8e ; '.'
000000000000e7ee         db  0x03 ; '.'
000000000000e7ef         db  0x45 ; 'E'
000000000000e7f0         db  0x0e ; '.'
000000000000e7f1         db  0x20 ; ' '
000000000000e7f2         db  0x8d ; '.'
000000000000e7f3         db  0x04 ; '.'
000000000000e7f4         db  0x42 ; 'B'
000000000000e7f5         db  0x0e ; '.'
000000000000e7f6         db  0x28 ; '('
000000000000e7f7         db  0x8c ; '.'
000000000000e7f8         db  0x05 ; '.'
000000000000e7f9         db  0x43 ; 'C'
000000000000e7fa         db  0x0e ; '.'
000000000000e7fb         db  0x30 ; '0'
000000000000e7fc         db  0x86 ; '.'
000000000000e7fd         db  0x06 ; '.'
000000000000e7fe         db  0x41 ; 'A'
000000000000e7ff         db  0x0e ; '.'
000000000000e800         db  0x38 ; '8'
000000000000e801         db  0x83 ; '.'
000000000000e802         db  0x07 ; '.'
000000000000e803         db  0x56 ; 'V'
000000000000e804         db  0x0e ; '.'
000000000000e805         db  0x40 ; '@'
000000000000e806         db  0x02 ; '.'
000000000000e807         db  0xd3 ; '.'
000000000000e808         db  0x0a ; '.'
000000000000e809         db  0x0e ; '.'
000000000000e80a         db  0x38 ; '8'
000000000000e80b         db  0x41 ; 'A'
000000000000e80c         db  0x0e ; '.'
000000000000e80d         db  0x30 ; '0'
000000000000e80e         db  0x41 ; 'A'
000000000000e80f         db  0x0e ; '.'
000000000000e810         db  0x28 ; '('
000000000000e811         db  0x42 ; 'B'
000000000000e812         db  0x0e ; '.'
000000000000e813         db  0x20 ; ' '
000000000000e814         db  0x42 ; 'B'
000000000000e815         db  0x0e ; '.'
000000000000e816         db  0x18 ; '.'
000000000000e817         db  0x42 ; 'B'
000000000000e818         db  0x0e ; '.'
000000000000e819         db  0x10 ; '.'
000000000000e81a         db  0x42 ; 'B'
000000000000e81b         db  0x0e ; '.'
000000000000e81c         db  0x08 ; '.'
000000000000e81d         db  0x46 ; 'F'
000000000000e81e         db  0x0b ; '.'
000000000000e81f         db  0x44 ; 'D'
000000000000e820         db  0x0e ; '.'
000000000000e821         db  0x38 ; '8'
000000000000e822         db  0x46 ; 'F'
000000000000e823         db  0x0e ; '.'
000000000000e824         db  0x30 ; '0'
000000000000e825         db  0x41 ; 'A'
000000000000e826         db  0x0e ; '.'
000000000000e827         db  0x28 ; '('
000000000000e828         db  0x42 ; 'B'
000000000000e829         db  0x0e ; '.'
000000000000e82a         db  0x20 ; ' '
000000000000e82b         db  0x42 ; 'B'
000000000000e82c         db  0x0e ; '.'
000000000000e82d         db  0x18 ; '.'
000000000000e82e         db  0x42 ; 'B'
000000000000e82f         db  0x0e ; '.'
000000000000e830         db  0x10 ; '.'
000000000000e831         db  0x42 ; 'B'
000000000000e832         db  0x0e ; '.'
000000000000e833         db  0x08 ; '.'
000000000000e834         dd         0x00000048                                  ; Length of the record
000000000000e838         dd         0x000017e0                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e83c         db         0x54, 0xb4, 2 dup (0xff)                    ; begin 0x9c90
000000000000e840         db         0x6d, 3 dup (0x00)                          ; length 0x6d (end at 0x9cfd)
000000000000e844         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e845         db  0x42 ; 'B'
000000000000e846         db  0x0e ; '.'
000000000000e847         db  0x10 ; '.'
000000000000e848         db  0x8f ; '.'
000000000000e849         db  0x02 ; '.'
000000000000e84a         db  0x42 ; 'B'
000000000000e84b         db  0x0e ; '.'
000000000000e84c         db  0x18 ; '.'
000000000000e84d         db  0x8e ; '.'
000000000000e84e         db  0x03 ; '.'
000000000000e84f         db  0x45 ; 'E'
000000000000e850         db  0x0e ; '.'
000000000000e851         db  0x20 ; ' '
000000000000e852         db  0x8d ; '.'
000000000000e853         db  0x04 ; '.'
000000000000e854         db  0x42 ; 'B'
000000000000e855         db  0x0e ; '.'
000000000000e856         db  0x28 ; '('
000000000000e857         db  0x8c ; '.'
000000000000e858         db  0x05 ; '.'
000000000000e859         db  0x44 ; 'D'
000000000000e85a         db  0x0e ; '.'
000000000000e85b         db  0x30 ; '0'
000000000000e85c         db  0x86 ; '.'
000000000000e85d         db  0x06 ; '.'
000000000000e85e         db  0x41 ; 'A'
000000000000e85f         db  0x0e ; '.'
000000000000e860         db  0x38 ; '8'
000000000000e861         db  0x83 ; '.'
000000000000e862         db  0x07 ; '.'
000000000000e863         db  0x50 ; 'P'
000000000000e864         db  0x0e ; '.'
000000000000e865         db  0x40 ; '@'
000000000000e866         db  0x5a ; 'Z'
000000000000e867         db  0x0a ; '.'
000000000000e868         db  0x0e ; '.'
000000000000e869         db  0x38 ; '8'
000000000000e86a         db  0x41 ; 'A'
000000000000e86b         db  0x0e ; '.'
000000000000e86c         db  0x30 ; '0'
000000000000e86d         db  0x41 ; 'A'
000000000000e86e         db  0x0e ; '.'
000000000000e86f         db  0x28 ; '('
000000000000e870         db  0x42 ; 'B'
000000000000e871         db  0x0e ; '.'
000000000000e872         db  0x20 ; ' '
000000000000e873         db  0x42 ; 'B'
000000000000e874         db  0x0e ; '.'
000000000000e875         db  0x18 ; '.'
000000000000e876         db  0x42 ; 'B'
000000000000e877         db  0x0e ; '.'
000000000000e878         db  0x10 ; '.'
000000000000e879         db  0x42 ; 'B'
000000000000e87a         db  0x0e ; '.'
000000000000e87b         db  0x08 ; '.'
000000000000e87c         db  0x41 ; 'A'
000000000000e87d         db  0x0b ; '.'
000000000000e87e         db  0x00 ; '.'
000000000000e87f         db  0x00 ; '.'
000000000000e880         dd         0x0000003c                                  ; Length of the record
000000000000e884         dd         0x0000182c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e888         db         0x78, 0xb4, 2 dup (0xff)                    ; begin 0x9d00
000000000000e88c         db         0x4d, 3 dup (0x00)                          ; length 0x4d (end at 0x9d4d)
000000000000e890         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e891         db  0x42 ; 'B'
000000000000e892         db  0x0e ; '.'
000000000000e893         db  0x10 ; '.'
000000000000e894         db  0x8e ; '.'
000000000000e895         db  0x02 ; '.'
000000000000e896         db  0x42 ; 'B'
000000000000e897         db  0x0e ; '.'
000000000000e898         db  0x18 ; '.'
000000000000e899         db  0x8d ; '.'
000000000000e89a         db  0x03 ; '.'
000000000000e89b         db  0x42 ; 'B'
000000000000e89c         db  0x0e ; '.'
000000000000e89d         db  0x20 ; ' '
000000000000e89e         db  0x8c ; '.'
000000000000e89f         db  0x04 ; '.'
000000000000e8a0         db  0x41 ; 'A'
000000000000e8a1         db  0x0e ; '.'
000000000000e8a2         db  0x28 ; '('
000000000000e8a3         db  0x86 ; '.'
000000000000e8a4         db  0x05 ; '.'
000000000000e8a5         db  0x41 ; 'A'
000000000000e8a6         db  0x0e ; '.'
000000000000e8a7         db  0x30 ; '0'
000000000000e8a8         db  0x83 ; '.'
000000000000e8a9         db  0x06 ; '.'
000000000000e8aa         db  0x7a ; 'z'
000000000000e8ab         db  0x0e ; '.'
000000000000e8ac         db  0x28 ; '('
000000000000e8ad         db  0x44 ; 'D'
000000000000e8ae         db  0x0e ; '.'
000000000000e8af         db  0x20 ; ' '
000000000000e8b0         db  0x42 ; 'B'
000000000000e8b1         db  0x0e ; '.'
000000000000e8b2         db  0x18 ; '.'
000000000000e8b3         db  0x42 ; 'B'
000000000000e8b4         db  0x0e ; '.'
000000000000e8b5         db  0x10 ; '.'
000000000000e8b6         db  0x42 ; 'B'
000000000000e8b7         db  0x0e ; '.'
000000000000e8b8         db  0x08 ; '.'
000000000000e8b9         db  0x00 ; '.'
000000000000e8ba         db  0x00 ; '.'
000000000000e8bb         db  0x00 ; '.'
000000000000e8bc         db  0x00 ; '.'
000000000000e8bd         db  0x00 ; '.'
000000000000e8be         db  0x00 ; '.'
000000000000e8bf         db  0x00 ; '.'
000000000000e8c0         dd         0x0000004c                                  ; Length of the record
000000000000e8c4         dd         0x0000186c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e8c8         db         0x88, 0xb4, 2 dup (0xff)                    ; begin 0x9d50
000000000000e8cc         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x9dcd)
000000000000e8d0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e8d1         db  0x42 ; 'B'
000000000000e8d2         db  0x0e ; '.'
000000000000e8d3         db  0x10 ; '.'
000000000000e8d4         db  0x8c ; '.'
000000000000e8d5         db  0x02 ; '.'
000000000000e8d6         db  0x41 ; 'A'
000000000000e8d7         db  0x0e ; '.'
000000000000e8d8         db  0x18 ; '.'
000000000000e8d9         db  0x86 ; '.'
000000000000e8da         db  0x03 ; '.'
000000000000e8db         db  0x44 ; 'D'
000000000000e8dc         db  0x0e ; '.'
000000000000e8dd         db  0x20 ; ' '
000000000000e8de         db  0x83 ; '.'
000000000000e8df         db  0x04 ; '.'
000000000000e8e0         db  0x69 ; 'i'
000000000000e8e1         db  0x0a ; '.'
000000000000e8e2         db  0x0e ; '.'
000000000000e8e3         db  0x18 ; '.'
000000000000e8e4         db  0x41 ; 'A'
000000000000e8e5         db  0x0e ; '.'
000000000000e8e6         db  0x10 ; '.'
000000000000e8e7         db  0x42 ; 'B'
000000000000e8e8         db  0x0e ; '.'
000000000000e8e9         db  0x08 ; '.'
000000000000e8ea         db  0x45 ; 'E'
000000000000e8eb         db  0x0b ; '.'
000000000000e8ec         db  0x55 ; 'U'
000000000000e8ed         db  0x0a ; '.'
000000000000e8ee         db  0x0e ; '.'
000000000000e8ef         db  0x18 ; '.'
000000000000e8f0         db  0x41 ; 'A'
000000000000e8f1         db  0x0e ; '.'
000000000000e8f2         db  0x10 ; '.'
000000000000e8f3         db  0x42 ; 'B'
000000000000e8f4         db  0x0e ; '.'
000000000000e8f5         db  0x08 ; '.'
000000000000e8f6         db  0x48 ; 'H'
000000000000e8f7         db  0x0b ; '.'
000000000000e8f8         db  0x41 ; 'A'
000000000000e8f9         db  0x0a ; '.'
000000000000e8fa         db  0x0e ; '.'
000000000000e8fb         db  0x18 ; '.'
000000000000e8fc         db  0x46 ; 'F'
000000000000e8fd         db  0x0e ; '.'
000000000000e8fe         db  0x10 ; '.'
000000000000e8ff         db  0x42 ; 'B'
000000000000e900         db  0x0e ; '.'
000000000000e901         db  0x08 ; '.'
000000000000e902         db  0x47 ; 'G'
000000000000e903         db  0x0b ; '.'
000000000000e904         db  0x49 ; 'I'
000000000000e905         db  0x0e ; '.'
000000000000e906         db  0x18 ; '.'
000000000000e907         db  0x41 ; 'A'
000000000000e908         db  0x0e ; '.'
000000000000e909         db  0x10 ; '.'
000000000000e90a         db  0x42 ; 'B'
000000000000e90b         db  0x0e ; '.'
000000000000e90c         db  0x08 ; '.'
000000000000e90d         db  0x00 ; '.'
000000000000e90e         db  0x00 ; '.'
000000000000e90f         db  0x00 ; '.'
000000000000e910         dd         0x0000001c                                  ; Length of the record
000000000000e914         dd         0x000018bc                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e918         db         0xb8, 0xb4, 2 dup (0xff)                    ; begin 0x9dd0
000000000000e91c         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x9e30)
000000000000e920         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e921         db  0x44 ; 'D'
000000000000e922         db  0x0e ; '.'
000000000000e923         db  0x10 ; '.'
000000000000e924         db  0x75 ; 'u'
000000000000e925         db  0x0a ; '.'
000000000000e926         db  0x0e ; '.'
000000000000e927         db  0x08 ; '.'
000000000000e928         db  0x47 ; 'G'
000000000000e929         db  0x0b ; '.'
000000000000e92a         db  0x5f ; '_'
000000000000e92b         db  0x0e ; '.'
000000000000e92c         db  0x08 ; '.'
000000000000e92d         db  0x00 ; '.'
000000000000e92e         db  0x00 ; '.'
000000000000e92f         db  0x00 ; '.'
000000000000e930         dd         0x00000014                                  ; Length of the record
000000000000e934         dd         0x000018dc                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e938         db         0xf8, 0xb4, 2 dup (0xff)                    ; begin 0x9e30
000000000000e93c         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x9e66)
000000000000e940         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e941         align      8
000000000000e948         dd         0x0000001c                                  ; Length of the record
000000000000e94c         dd         0x000018f4                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e950         db         0x20, 0xb5, 2 dup (0xff)                    ; begin 0x9e70
000000000000e954         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x9eac)
000000000000e958         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e959         db  0x44 ; 'D'
000000000000e95a         db  0x0e ; '.'
000000000000e95b         db  0x10 ; '.'
000000000000e95c         db  0x61 ; 'a'
000000000000e95d         db  0x0a ; '.'
000000000000e95e         db  0x0e ; '.'
000000000000e95f         db  0x08 ; '.'
000000000000e960         db  0x4b ; 'K'
000000000000e961         db  0x0b ; '.'
000000000000e962         db  0x4b ; 'K'
000000000000e963         db  0x0e ; '.'
000000000000e964         db  0x08 ; '.'
000000000000e965         db  0x00 ; '.'
000000000000e966         db  0x00 ; '.'
000000000000e967         db  0x00 ; '.'
000000000000e968         dd         0x00000018                                  ; Length of the record
000000000000e96c         dd         0x00001914                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e970         db         0x40, 0xb5, 2 dup (0xff)                    ; begin 0x9eb0
000000000000e974         db         0x23, 3 dup (0x00)                          ; length 0x23 (end at 0x9ed3)
000000000000e978         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e979         db  0x41 ; 'A'
000000000000e97a         db  0x0e ; '.'
000000000000e97b         db  0x10 ; '.'
000000000000e97c         db  0x83 ; '.'
000000000000e97d         db  0x02 ; '.'
000000000000e97e         db  0x61 ; 'a'
000000000000e97f         db  0x0e ; '.'
000000000000e980         db  0x08 ; '.'
000000000000e981         db  0x00 ; '.'
000000000000e982         db  0x00 ; '.'
000000000000e983         db  0x00 ; '.'
000000000000e984         dd         0x0000001c                                  ; Length of the record
000000000000e988         dd         0x00001930                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e98c         db         0x54, 0xb5, 2 dup (0xff)                    ; begin 0x9ee0
000000000000e990         db         0x34, 3 dup (0x00)                          ; length 0x34 (end at 0x9f14)
000000000000e994         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e995         db  0x41 ; 'A'
000000000000e996         db  0x0e ; '.'
000000000000e997         db  0x10 ; '.'
000000000000e998         db  0x83 ; '.'
000000000000e999         db  0x02 ; '.'
000000000000e99a         db  0x6b ; 'k'
000000000000e99b         db  0x0a ; '.'
000000000000e99c         db  0x0e ; '.'
000000000000e99d         db  0x08 ; '.'
000000000000e99e         db  0x44 ; 'D'
000000000000e99f         db  0x0b ; '.'
000000000000e9a0         db  0x43 ; 'C'
000000000000e9a1         db  0x0e ; '.'
000000000000e9a2         db  0x08 ; '.'
000000000000e9a3         db  0x00 ; '.'
000000000000e9a4         dd         0x00000010                                  ; Length of the record
000000000000e9a8         dd         0x00001950                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e9ac         db         0x74, 0xb5, 2 dup (0xff)                    ; begin 0x9f20
000000000000e9b0         db         0x04, 3 dup (0x00)                          ; length 0x4 (end at 0x9f24)
000000000000e9b4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e9b5         align      8
000000000000e9b8         dd         0x00000048                                  ; Length of the record
000000000000e9bc         dd         0x00001964                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000e9c0         db         0x70, 0xb5, 2 dup (0xff)                    ; begin 0x9f30
000000000000e9c4         db         0x1a, 0x01, 2 dup (0x00)                    ; length 0x11a (end at 0xa04a)
000000000000e9c8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000e9c9         db  0x42 ; 'B'
000000000000e9ca         db  0x0e ; '.'
000000000000e9cb         db  0x10 ; '.'
000000000000e9cc         db  0x8f ; '.'
000000000000e9cd         db  0x02 ; '.'
000000000000e9ce         db  0x42 ; 'B'
000000000000e9cf         db  0x0e ; '.'
000000000000e9d0         db  0x18 ; '.'
000000000000e9d1         db  0x8e ; '.'
000000000000e9d2         db  0x03 ; '.'
000000000000e9d3         db  0x46 ; 'F'
000000000000e9d4         db  0x0e ; '.'
000000000000e9d5         db  0x20 ; ' '
000000000000e9d6         db  0x8d ; '.'
000000000000e9d7         db  0x04 ; '.'
000000000000e9d8         db  0x42 ; 'B'
000000000000e9d9         db  0x0e ; '.'
000000000000e9da         db  0x28 ; '('
000000000000e9db         db  0x8c ; '.'
000000000000e9dc         db  0x05 ; '.'
000000000000e9dd         db  0x44 ; 'D'
000000000000e9de         db  0x0e ; '.'
000000000000e9df         db  0x30 ; '0'
000000000000e9e0         db  0x86 ; '.'
000000000000e9e1         db  0x06 ; '.'
000000000000e9e2         db  0x41 ; 'A'
000000000000e9e3         db  0x0e ; '.'
000000000000e9e4         db  0x38 ; '8'
000000000000e9e5         db  0x83 ; '.'
000000000000e9e6         db  0x07 ; '.'
000000000000e9e7         db  0x47 ; 'G'
000000000000e9e8         db  0x0e ; '.'
000000000000e9e9         db  0x60 ; '`'
000000000000e9ea         db  0x02 ; '.'
000000000000e9eb         db  0xde ; '.'
000000000000e9ec         db  0x0a ; '.'
000000000000e9ed         db  0x0e ; '.'
000000000000e9ee         db  0x38 ; '8'
000000000000e9ef         db  0x41 ; 'A'
000000000000e9f0         db  0x0e ; '.'
000000000000e9f1         db  0x30 ; '0'
000000000000e9f2         db  0x41 ; 'A'
000000000000e9f3         db  0x0e ; '.'
000000000000e9f4         db  0x28 ; '('
000000000000e9f5         db  0x42 ; 'B'
000000000000e9f6         db  0x0e ; '.'
000000000000e9f7         db  0x20 ; ' '
000000000000e9f8         db  0x42 ; 'B'
000000000000e9f9         db  0x0e ; '.'
000000000000e9fa         db  0x18 ; '.'
000000000000e9fb         db  0x42 ; 'B'
000000000000e9fc         db  0x0e ; '.'
000000000000e9fd         db  0x10 ; '.'
000000000000e9fe         db  0x42 ; 'B'
000000000000e9ff         db  0x0e ; '.'
000000000000ea00         db  0x08 ; '.'
000000000000ea01         db  0x48 ; 'H'
000000000000ea02         db  0x0b ; '.'
000000000000ea03         db  0x00 ; '.'
000000000000ea04         dd         0x00000018                                  ; Length of the record
000000000000ea08         dd         0x000019b0                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000ea0c         db         0x44, 0xb6, 2 dup (0xff)                    ; begin 0xa050
000000000000ea10         db         0x1e, 3 dup (0x00)                          ; length 0x1e (end at 0xa06e)
000000000000ea14         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ea15         db  0x41 ; 'A'
000000000000ea16         db  0x0e ; '.'
000000000000ea17         db  0x10 ; '.'
000000000000ea18         db  0x83 ; '.'
000000000000ea19         db  0x02 ; '.'
000000000000ea1a         db  0x58 ; 'X'
000000000000ea1b         db  0x0e ; '.'
000000000000ea1c         db  0x08 ; '.'
000000000000ea1d         db  0x00 ; '.'
000000000000ea1e         db  0x00 ; '.'
000000000000ea1f         db  0x00 ; '.'
000000000000ea20         dd         0x00000034                                  ; Length of the record
000000000000ea24         dd         0x000019cc                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000ea28         db         0x48, 0xb6, 2 dup (0xff)                    ; begin 0xa070
000000000000ea2c         db         0x51, 3 dup (0x00)                          ; length 0x51 (end at 0xa0c1)
000000000000ea30         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ea31         db  0x42 ; 'B'
000000000000ea32         db  0x0e ; '.'
000000000000ea33         db  0x10 ; '.'
000000000000ea34         db  0x8d ; '.'
000000000000ea35         db  0x02 ; '.'
000000000000ea36         db  0x42 ; 'B'
000000000000ea37         db  0x0e ; '.'
000000000000ea38         db  0x18 ; '.'
000000000000ea39         db  0x8c ; '.'
000000000000ea3a         db  0x03 ; '.'
000000000000ea3b         db  0x41 ; 'A'
000000000000ea3c         db  0x0e ; '.'
000000000000ea3d         db  0x20 ; ' '
000000000000ea3e         db  0x86 ; '.'
000000000000ea3f         db  0x04 ; '.'
000000000000ea40         db  0x41 ; 'A'
000000000000ea41         db  0x0e ; '.'
000000000000ea42         db  0x28 ; '('
000000000000ea43         db  0x83 ; '.'
000000000000ea44         db  0x05 ; '.'
000000000000ea45         db  0x47 ; 'G'
000000000000ea46         db  0x0e ; '.'
000000000000ea47         db  0x30 ; '0'
000000000000ea48         db  0x7a ; 'z'
000000000000ea49         db  0x0e ; '.'
000000000000ea4a         db  0x28 ; '('
000000000000ea4b         db  0x44 ; 'D'
000000000000ea4c         db  0x0e ; '.'
000000000000ea4d         db  0x20 ; ' '
000000000000ea4e         db  0x41 ; 'A'
000000000000ea4f         db  0x0e ; '.'
000000000000ea50         db  0x18 ; '.'
000000000000ea51         db  0x42 ; 'B'
000000000000ea52         db  0x0e ; '.'
000000000000ea53         db  0x10 ; '.'
000000000000ea54         db  0x42 ; 'B'
000000000000ea55         db  0x0e ; '.'
000000000000ea56         db  0x08 ; '.'
000000000000ea57         db  0x00 ; '.'
000000000000ea58         dd         0x0000001c                                  ; Length of the record
000000000000ea5c         dd         0x00001a04                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000ea60         db         0x70, 0xb6, 2 dup (0xff)                    ; begin 0xa0d0
000000000000ea64         db         0x5d, 3 dup (0x00)                          ; length 0x5d (end at 0xa12d)
000000000000ea68         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ea69         db  0x41 ; 'A'
000000000000ea6a         db  0x0e ; '.'
000000000000ea6b         db  0x10 ; '.'
000000000000ea6c         db  0x86 ; '.'
000000000000ea6d         db  0x02 ; '.'
000000000000ea6e         db  0x41 ; 'A'
000000000000ea6f         db  0x0e ; '.'
000000000000ea70         db  0x18 ; '.'
000000000000ea71         db  0x83 ; '.'
000000000000ea72         db  0x03 ; '.'
000000000000ea73         db  0x44 ; 'D'
000000000000ea74         db  0x0e ; '.'
000000000000ea75         db  0x20 ; ' '
000000000000ea76         db  0x00 ; '.'
000000000000ea77         db  0x00 ; '.'
000000000000ea78         dd         0x00000048                                  ; Length of the record
000000000000ea7c         dd         0x00001a24                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000ea80         db         0xb0, 0xb6, 2 dup (0xff)                    ; begin 0xa130
000000000000ea84         db         0x29, 0x03, 2 dup (0x00)                    ; length 0x329 (end at 0xa459)
000000000000ea88         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ea89         db  0x42 ; 'B'
000000000000ea8a         db  0x0e ; '.'
000000000000ea8b         db  0x10 ; '.'
000000000000ea8c         db  0x8f ; '.'
000000000000ea8d         db  0x02 ; '.'
000000000000ea8e         db  0x42 ; 'B'
000000000000ea8f         db  0x0e ; '.'
000000000000ea90         db  0x18 ; '.'
000000000000ea91         db  0x8e ; '.'
000000000000ea92         db  0x03 ; '.'
000000000000ea93         db  0x42 ; 'B'
000000000000ea94         db  0x0e ; '.'
000000000000ea95         db  0x20 ; ' '
000000000000ea96         db  0x8d ; '.'
000000000000ea97         db  0x04 ; '.'
000000000000ea98         db  0x42 ; 'B'
000000000000ea99         db  0x0e ; '.'
000000000000ea9a         db  0x28 ; '('
000000000000ea9b         db  0x8c ; '.'
000000000000ea9c         db  0x05 ; '.'
000000000000ea9d         db  0x41 ; 'A'
000000000000ea9e         db  0x0e ; '.'
000000000000ea9f         db  0x30 ; '0'
000000000000eaa0         db  0x86 ; '.'
000000000000eaa1         db  0x06 ; '.'
000000000000eaa2         db  0x41 ; 'A'
000000000000eaa3         db  0x0e ; '.'
000000000000eaa4         db  0x38 ; '8'
000000000000eaa5         db  0x83 ; '.'
000000000000eaa6         db  0x07 ; '.'
000000000000eaa7         db  0x44 ; 'D'
000000000000eaa8         db  0x0e ; '.'
000000000000eaa9         db  0x70 ; 'p'
000000000000eaaa         db  0x02 ; '.'
000000000000eaab         db  0x94 ; '.'
000000000000eaac         db  0x0a ; '.'
000000000000eaad         db  0x0e ; '.'
000000000000eaae         db  0x38 ; '8'
000000000000eaaf         db  0x41 ; 'A'
000000000000eab0         db  0x0e ; '.'
000000000000eab1         db  0x30 ; '0'
000000000000eab2         db  0x41 ; 'A'
000000000000eab3         db  0x0e ; '.'
000000000000eab4         db  0x28 ; '('
000000000000eab5         db  0x42 ; 'B'
000000000000eab6         db  0x0e ; '.'
000000000000eab7         db  0x20 ; ' '
000000000000eab8         db  0x42 ; 'B'
000000000000eab9         db  0x0e ; '.'
000000000000eaba         db  0x18 ; '.'
000000000000eabb         db  0x42 ; 'B'
000000000000eabc         db  0x0e ; '.'
000000000000eabd         db  0x10 ; '.'
000000000000eabe         db  0x42 ; 'B'
000000000000eabf         db  0x0e ; '.'
000000000000eac0         db  0x08 ; '.'
000000000000eac1         db  0x44 ; 'D'
000000000000eac2         db  0x0b ; '.'
000000000000eac3         db  0x00 ; '.'
000000000000eac4         dd         0x00000010                                  ; Length of the record
000000000000eac8         dd         0x00001a70                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000eacc         db         0x94, 0xb9, 2 dup (0xff)                    ; begin 0xa460
000000000000ead0         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0xa465)
000000000000ead4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ead5         align      8
000000000000ead8         dd         0x00000010                                  ; Length of the record
000000000000eadc         dd         0x00001a84                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000eae0         db         0x90, 0xb9, 2 dup (0xff)                    ; begin 0xa470
000000000000eae4         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0xa475)
000000000000eae8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000eae9         align      4
000000000000eaec         dd         0x00000060                                  ; Length of the record
000000000000eaf0         dd         0x00001a98                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000eaf4         db         0x8c, 0xb9, 2 dup (0xff)                    ; begin 0xa480
000000000000eaf8         db         0x96, 0x01, 2 dup (0x00)                    ; length 0x196 (end at 0xa616)
000000000000eafc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000eafd         db  0x42 ; 'B'
000000000000eafe         db  0x0e ; '.'
000000000000eaff         db  0x10 ; '.'
000000000000eb00         db  0x8f ; '.'
000000000000eb01         db  0x02 ; '.'
000000000000eb02         db  0x42 ; 'B'
000000000000eb03         db  0x0e ; '.'
000000000000eb04         db  0x18 ; '.'
000000000000eb05         db  0x8e ; '.'
000000000000eb06         db  0x03 ; '.'
000000000000eb07         db  0x42 ; 'B'
000000000000eb08         db  0x0e ; '.'
000000000000eb09         db  0x20 ; ' '
000000000000eb0a         db  0x8d ; '.'
000000000000eb0b         db  0x04 ; '.'
000000000000eb0c         db  0x42 ; 'B'
000000000000eb0d         db  0x0e ; '.'
000000000000eb0e         db  0x28 ; '('
000000000000eb0f         db  0x8c ; '.'
000000000000eb10         db  0x05 ; '.'
000000000000eb11         db  0x44 ; 'D'
000000000000eb12         db  0x0e ; '.'
000000000000eb13         db  0x30 ; '0'
000000000000eb14         db  0x86 ; '.'
000000000000eb15         db  0x06 ; '.'
000000000000eb16         db  0x41 ; 'A'
000000000000eb17         db  0x0e ; '.'
000000000000eb18         db  0x38 ; '8'
000000000000eb19         db  0x83 ; '.'
000000000000eb1a         db  0x07 ; '.'
000000000000eb1b         db  0x4a ; 'J'
000000000000eb1c         db  0x0e ; '.'
000000000000eb1d         db  0x50 ; 'P'
000000000000eb1e         db  0x02 ; '.'
000000000000eb1f         db  0x5f ; '_'
000000000000eb20         db  0x0a ; '.'
000000000000eb21         db  0x0e ; '.'
000000000000eb22         db  0x38 ; '8'
000000000000eb23         db  0x41 ; 'A'
000000000000eb24         db  0x0e ; '.'
000000000000eb25         db  0x30 ; '0'
000000000000eb26         db  0x41 ; 'A'
000000000000eb27         db  0x0e ; '.'
000000000000eb28         db  0x28 ; '('
000000000000eb29         db  0x42 ; 'B'
000000000000eb2a         db  0x0e ; '.'
000000000000eb2b         db  0x20 ; ' '
000000000000eb2c         db  0x42 ; 'B'
000000000000eb2d         db  0x0e ; '.'
000000000000eb2e         db  0x18 ; '.'
000000000000eb2f         db  0x42 ; 'B'
000000000000eb30         db  0x0e ; '.'
000000000000eb31         db  0x10 ; '.'
000000000000eb32         db  0x42 ; 'B'
000000000000eb33         db  0x0e ; '.'
000000000000eb34         db  0x08 ; '.'
000000000000eb35         db  0x48 ; 'H'
000000000000eb36         db  0x0b ; '.'
000000000000eb37         db  0x02 ; '.'
000000000000eb38         db  0x9b ; '.'
000000000000eb39         db  0x0a ; '.'
000000000000eb3a         db  0x0e ; '.'
000000000000eb3b         db  0x38 ; '8'
000000000000eb3c         db  0x41 ; 'A'
000000000000eb3d         db  0x0e ; '.'
000000000000eb3e         db  0x30 ; '0'
000000000000eb3f         db  0x41 ; 'A'
000000000000eb40         db  0x0e ; '.'
000000000000eb41         db  0x28 ; '('
000000000000eb42         db  0x42 ; 'B'
000000000000eb43         db  0x0e ; '.'
000000000000eb44         db  0x20 ; ' '
000000000000eb45         db  0x42 ; 'B'
000000000000eb46         db  0x0e ; '.'
000000000000eb47         db  0x18 ; '.'
000000000000eb48         db  0x42 ; 'B'
000000000000eb49         db  0x0e ; '.'
000000000000eb4a         db  0x10 ; '.'
000000000000eb4b         db  0x42 ; 'B'
000000000000eb4c         db  0x0e ; '.'
000000000000eb4d         db  0x08 ; '.'
000000000000eb4e         db  0x43 ; 'C'
000000000000eb4f         db  0x0b ; '.'
000000000000eb50         dd         0x00000034                                  ; Length of the record
000000000000eb54         dd         0x00001afc                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000eb58         db         0xc8, 0xba, 2 dup (0xff)                    ; begin 0xa620
000000000000eb5c         db         0x49, 3 dup (0x00)                          ; length 0x49 (end at 0xa669)
000000000000eb60         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000eb61         db  0x41 ; 'A'
000000000000eb62         db  0x0e ; '.'
000000000000eb63         db  0x10 ; '.'
000000000000eb64         db  0x86 ; '.'
000000000000eb65         db  0x02 ; '.'
000000000000eb66         db  0x41 ; 'A'
000000000000eb67         db  0x0e ; '.'
000000000000eb68         db  0x18 ; '.'
000000000000eb69         db  0x83 ; '.'
000000000000eb6a         db  0x03 ; '.'
000000000000eb6b         db  0x53 ; 'S'
000000000000eb6c         db  0x0e ; '.'
000000000000eb6d         db  0x20 ; ' '
000000000000eb6e         db  0x59 ; 'Y'
000000000000eb6f         db  0x0a ; '.'
000000000000eb70         db  0x0e ; '.'
000000000000eb71         db  0x18 ; '.'
000000000000eb72         db  0x44 ; 'D'
000000000000eb73         db  0x0e ; '.'
000000000000eb74         db  0x10 ; '.'
000000000000eb75         db  0x41 ; 'A'
000000000000eb76         db  0x0e ; '.'
000000000000eb77         db  0x08 ; '.'
000000000000eb78         db  0x4d ; 'M'
000000000000eb79         db  0x0b ; '.'
000000000000eb7a         db  0x44 ; 'D'
000000000000eb7b         db  0x0e ; '.'
000000000000eb7c         db  0x18 ; '.'
000000000000eb7d         db  0x43 ; 'C'
000000000000eb7e         db  0x0e ; '.'
000000000000eb7f         db  0x10 ; '.'
000000000000eb80         db  0x41 ; 'A'
000000000000eb81         db  0x0e ; '.'
000000000000eb82         db  0x08 ; '.'
000000000000eb83         db  0x00 ; '.'
000000000000eb84         db  0x00 ; '.'
000000000000eb85         db  0x00 ; '.'
000000000000eb86         db  0x00 ; '.'
000000000000eb87         db  0x00 ; '.'
000000000000eb88         dd         0x00000010                                  ; Length of the record
000000000000eb8c         dd         0x00001b34                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000eb90         db         0xe0, 0xba, 2 dup (0xff)                    ; begin 0xa670
000000000000eb94         db         0x8e, 0x02, 2 dup (0x00)                    ; length 0x28e (end at 0xa8fe)
000000000000eb98         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000eb99         align      4
000000000000eb9c         dd         0x00000030                                  ; Length of the record
000000000000eba0         dd         0x00001b48                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000eba4         db         0x5c, 0xbd, 2 dup (0xff)                    ; begin 0xa900
000000000000eba8         db         0x40, 0x02, 2 dup (0x00)                    ; length 0x240 (end at 0xab40)
000000000000ebac         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ebad         db  0x42 ; 'B'
000000000000ebae         db  0x0e ; '.'
000000000000ebaf         db  0x10 ; '.'
000000000000ebb0         db  0x8d ; '.'
000000000000ebb1         db  0x02 ; '.'
000000000000ebb2         db  0x42 ; 'B'
000000000000ebb3         db  0x0e ; '.'
000000000000ebb4         db  0x18 ; '.'
000000000000ebb5         db  0x8c ; '.'
000000000000ebb6         db  0x03 ; '.'
000000000000ebb7         db  0x48 ; 'H'
000000000000ebb8         db  0x0e ; '.'
000000000000ebb9         db  0x20 ; ' '
000000000000ebba         db  0x86 ; '.'
000000000000ebbb         db  0x04 ; '.'
000000000000ebbc         db  0x44 ; 'D'
000000000000ebbd         db  0x0e ; '.'
000000000000ebbe         db  0x28 ; '('
000000000000ebbf         db  0x83 ; '.'
000000000000ebc0         db  0x05 ; '.'
000000000000ebc1         db  0x03 ; '.'
000000000000ebc2         db  0x09 ; '.'
000000000000ebc3         db  0x02 ; '.'
000000000000ebc4         db  0x0e ; '.'
000000000000ebc5         db  0x20 ; ' '
000000000000ebc6         db  0x57 ; 'W'
000000000000ebc7         db  0x0e ; '.'
000000000000ebc8         db  0x18 ; '.'
000000000000ebc9         db  0x4d ; 'M'
000000000000ebca         db  0x0e ; '.'
000000000000ebcb         db  0x10 ; '.'
000000000000ebcc         db  0x42 ; 'B'
000000000000ebcd         db  0x0e ; '.'
000000000000ebce         db  0x08 ; '.'
000000000000ebcf         db  0x00 ; '.'
000000000000ebd0         dd         0x00000014                                  ; Length of the record
000000000000ebd4         dd         0x00001b7c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000ebd8         db         0x68, 0xbf, 2 dup (0xff)                    ; begin 0xab40
000000000000ebdc         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0xab4e)
000000000000ebe0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ebe1         align      8
000000000000ebe8         dd         0x00000034                                  ; Length of the record
000000000000ebec         dd         0x00001b94                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000ebf0         db         0x60, 0xbf, 2 dup (0xff)                    ; begin 0xab50
000000000000ebf4         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0xabcb)
000000000000ebf8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ebf9         db  0x42 ; 'B'
000000000000ebfa         db  0x0e ; '.'
000000000000ebfb         db  0x10 ; '.'
000000000000ebfc         db  0x8c ; '.'
000000000000ebfd         db  0x02 ; '.'
000000000000ebfe         db  0x41 ; 'A'
000000000000ebff         db  0x0e ; '.'
000000000000ec00         db  0x18 ; '.'
000000000000ec01         db  0x86 ; '.'
000000000000ec02         db  0x03 ; '.'
000000000000ec03         db  0x41 ; 'A'
000000000000ec04         db  0x0e ; '.'
000000000000ec05         db  0x20 ; ' '
000000000000ec06         db  0x83 ; '.'
000000000000ec07         db  0x04 ; '.'
000000000000ec08         db  0x7d ; '}'
000000000000ec09         db  0x0a ; '.'
000000000000ec0a         db  0x0e ; '.'
000000000000ec0b         db  0x18 ; '.'
000000000000ec0c         db  0x41 ; 'A'
000000000000ec0d         db  0x0e ; '.'
000000000000ec0e         db  0x10 ; '.'
000000000000ec0f         db  0x42 ; 'B'
000000000000ec10         db  0x0e ; '.'
000000000000ec11         db  0x08 ; '.'
000000000000ec12         db  0x44 ; 'D'
000000000000ec13         db  0x0b ; '.'
000000000000ec14         db  0x60 ; '`'
000000000000ec15         db  0x0a ; '.'
000000000000ec16         db  0x0e ; '.'
000000000000ec17         db  0x18 ; '.'
000000000000ec18         db  0x41 ; 'A'
000000000000ec19         db  0x0e ; '.'
000000000000ec1a         db  0x10 ; '.'
000000000000ec1b         db  0x42 ; 'B'
000000000000ec1c         db  0x0e ; '.'
000000000000ec1d         db  0x08 ; '.'
000000000000ec1e         db  0x45 ; 'E'
000000000000ec1f         db  0x0b ; '.'
000000000000ec20         dd         0x00000034                                  ; Length of the record
000000000000ec24         dd         0x00001bcc                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000ec28         db         0xa8, 0xbf, 2 dup (0xff)                    ; begin 0xabd0
000000000000ec2c         db         0x7e, 0x02, 2 dup (0x00)                    ; length 0x27e (end at 0xae4e)
000000000000ec30         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ec31         db  0x42 ; 'B'
000000000000ec32         db  0x0e ; '.'
000000000000ec33         db  0x10 ; '.'
000000000000ec34         db  0x8c ; '.'
000000000000ec35         db  0x02 ; '.'
000000000000ec36         db  0x41 ; 'A'
000000000000ec37         db  0x0e ; '.'
000000000000ec38         db  0x18 ; '.'
000000000000ec39         db  0x86 ; '.'
000000000000ec3a         db  0x03 ; '.'
000000000000ec3b         db  0x43 ; 'C'
000000000000ec3c         db  0x0e ; '.'
000000000000ec3d         db  0x20 ; ' '
000000000000ec3e         db  0x83 ; '.'
000000000000ec3f         db  0x04 ; '.'
000000000000ec40         db  0x44 ; 'D'
000000000000ec41         db  0x0e ; '.'
000000000000ec42         db  0x70 ; 'p'
000000000000ec43         db  0x02 ; '.'
000000000000ec44         db  0xf0 ; '.'
000000000000ec45         db  0x0a ; '.'
000000000000ec46         db  0x0e ; '.'
000000000000ec47         db  0x20 ; ' '
000000000000ec48         db  0x41 ; 'A'
000000000000ec49         db  0x0e ; '.'
000000000000ec4a         db  0x18 ; '.'
000000000000ec4b         db  0x41 ; 'A'
000000000000ec4c         db  0x0e ; '.'
000000000000ec4d         db  0x10 ; '.'
000000000000ec4e         db  0x42 ; 'B'
000000000000ec4f         db  0x0e ; '.'
000000000000ec50         db  0x08 ; '.'
000000000000ec51         db  0x42 ; 'B'
000000000000ec52         db  0x0b ; '.'
000000000000ec53         db  0x00 ; '.'
000000000000ec54         db  0x00 ; '.'
000000000000ec55         db  0x00 ; '.'
000000000000ec56         db  0x00 ; '.'
000000000000ec57         db  0x00 ; '.'
000000000000ec58         dd         0x0000002c                                  ; Length of the record
000000000000ec5c         dd         0x00001c04                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000ec60         db         0xf0, 0xc1, 2 dup (0xff)                    ; begin 0xae50
000000000000ec64         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0xaee3)
000000000000ec68         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ec69         db  0x42 ; 'B'
000000000000ec6a         db  0x0e ; '.'
000000000000ec6b         db  0x10 ; '.'
000000000000ec6c         db  0x8c ; '.'
000000000000ec6d         db  0x02 ; '.'
000000000000ec6e         db  0x41 ; 'A'
000000000000ec6f         db  0x0e ; '.'
000000000000ec70         db  0x18 ; '.'
000000000000ec71         db  0x86 ; '.'
000000000000ec72         db  0x03 ; '.'
000000000000ec73         db  0x44 ; 'D'
000000000000ec74         db  0x0e ; '.'
000000000000ec75         db  0x20 ; ' '
000000000000ec76         db  0x83 ; '.'
000000000000ec77         db  0x04 ; '.'
000000000000ec78         db  0x5e ; '^'
000000000000ec79         db  0x0a ; '.'
000000000000ec7a         db  0x0e ; '.'
000000000000ec7b         db  0x18 ; '.'
000000000000ec7c         db  0x41 ; 'A'
000000000000ec7d         db  0x0e ; '.'
000000000000ec7e         db  0x10 ; '.'
000000000000ec7f         db  0x42 ; 'B'
000000000000ec80         db  0x0e ; '.'
000000000000ec81         db  0x08 ; '.'
000000000000ec82         db  0x48 ; 'H'
000000000000ec83         db  0x0b ; '.'
000000000000ec84         db  0x00 ; '.'
000000000000ec85         db  0x00 ; '.'
000000000000ec86         db  0x00 ; '.'
000000000000ec87         db  0x00 ; '.'
000000000000ec88         dd         0x00000044                                  ; Length of the record
000000000000ec8c         dd         0x00001c34                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000ec90         db         0x60, 0xc2, 2 dup (0xff)                    ; begin 0xaef0
000000000000ec94         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0xaf55)
000000000000ec98         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ec99         db  0x42 ; 'B'
000000000000ec9a         db  0x0e ; '.'
000000000000ec9b         db  0x10 ; '.'
000000000000ec9c         db  0x8f ; '.'
000000000000ec9d         db  0x02 ; '.'
000000000000ec9e         db  0x42 ; 'B'
000000000000ec9f         db  0x0e ; '.'
000000000000eca0         db  0x18 ; '.'
000000000000eca1         db  0x8e ; '.'
000000000000eca2         db  0x03 ; '.'
000000000000eca3         db  0x45 ; 'E'
000000000000eca4         db  0x0e ; '.'
000000000000eca5         db  0x20 ; ' '
000000000000eca6         db  0x8d ; '.'
000000000000eca7         db  0x04 ; '.'
000000000000eca8         db  0x42 ; 'B'
000000000000eca9         db  0x0e ; '.'
000000000000ecaa         db  0x28 ; '('
000000000000ecab         db  0x8c ; '.'
000000000000ecac         db  0x05 ; '.'
000000000000ecad         db  0x48 ; 'H'
000000000000ecae         db  0x0e ; '.'
000000000000ecaf         db  0x30 ; '0'
000000000000ecb0         db  0x86 ; '.'
000000000000ecb1         db  0x06 ; '.'
000000000000ecb2         db  0x48 ; 'H'
000000000000ecb3         db  0x0e ; '.'
000000000000ecb4         db  0x38 ; '8'
000000000000ecb5         db  0x83 ; '.'
000000000000ecb6         db  0x07 ; '.'
000000000000ecb7         db  0x4d ; 'M'
000000000000ecb8         db  0x0e ; '.'
000000000000ecb9         db  0x40 ; '@'
000000000000ecba         db  0x72 ; 'r'
000000000000ecbb         db  0x0e ; '.'
000000000000ecbc         db  0x38 ; '8'
000000000000ecbd         db  0x41 ; 'A'
000000000000ecbe         db  0x0e ; '.'
000000000000ecbf         db  0x30 ; '0'
000000000000ecc0         db  0x41 ; 'A'
000000000000ecc1         db  0x0e ; '.'
000000000000ecc2         db  0x28 ; '('
000000000000ecc3         db  0x42 ; 'B'
000000000000ecc4         db  0x0e ; '.'
000000000000ecc5         db  0x20 ; ' '
000000000000ecc6         db  0x42 ; 'B'
000000000000ecc7         db  0x0e ; '.'
000000000000ecc8         db  0x18 ; '.'
000000000000ecc9         db  0x42 ; 'B'
000000000000ecca         db  0x0e ; '.'
000000000000eccb         db  0x10 ; '.'
000000000000eccc         db  0x42 ; 'B'
000000000000eccd         db  0x0e ; '.'
000000000000ecce         db  0x08 ; '.'
000000000000eccf         db  0x00 ; '.'
000000000000ecd0         dd         0x00000014                                  ; Length of the record
000000000000ecd4         dd         0x00001c7c                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000ecd8         db         0x88, 0xc2, 2 dup (0xff)                    ; begin 0xaf60
000000000000ecdc         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0xaf62)
000000000000ece0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ece1         align      8
000000000000ece8         dd         0x00000010                                  ; Length of the record
000000000000ecec         dd         0x00001c94                                  ; FDE: parent CIE at 0xd058 (FDE encoding = 0x1B)
000000000000ecf0         db         0x80, 0xc2, 2 dup (0xff)                    ; begin 0xaf70
000000000000ecf4         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0xaf7e)
000000000000ecf8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ecf9         align      256


        ; Segment Segment 3
        ; Range: [0x20f870; 0x2102a0[ (2608 bytes)
        ; File offset : [63600; 65704[ (2104 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x20f870; 0x20f878[ (8 bytes)
        ; File offset : [63600; 63608[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
000000000020f870         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x20f878; 0x20f880[ (8 bytes)
        ; File offset : [63608; 63616[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
000000000020f878         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x20f880; 0x20fb38[ (696 bytes)
        ; File offset : [63616; 64312[ (696 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     long_options:
000000000020f880         db  0x82 ; '.'                                         ; DATA XREF=main+176
000000000020f881         db  0xb1 ; '.'
000000000020f882         db  0x00 ; '.'
000000000020f883         db  0x00 ; '.'
000000000020f884         db  0x00 ; '.'
000000000020f885         db  0x00 ; '.'
000000000020f886         db  0x00 ; '.'
000000000020f887         db  0x00 ; '.'
000000000020f888         db  0x02 ; '.'
000000000020f889         db  0x00 ; '.'
000000000020f88a         db  0x00 ; '.'
000000000020f88b         db  0x00 ; '.'
000000000020f88c         db  0x00 ; '.'
000000000020f88d         db  0x00 ; '.'
000000000020f88e         db  0x00 ; '.'
000000000020f88f         db  0x00 ; '.'
000000000020f890         db  0x00 ; '.'
000000000020f891         db  0x00 ; '.'
000000000020f892         db  0x00 ; '.'
000000000020f893         db  0x00 ; '.'
000000000020f894         db  0x00 ; '.'
000000000020f895         db  0x00 ; '.'
000000000020f896         db  0x00 ; '.'
000000000020f897         db  0x00 ; '.'
000000000020f898         db  0x62 ; 'b'
000000000020f899         db  0x00 ; '.'
000000000020f89a         db  0x00 ; '.'
000000000020f89b         db  0x00 ; '.'
000000000020f89c         db  0x00 ; '.'
000000000020f89d         db  0x00 ; '.'
000000000020f89e         db  0x00 ; '.'
000000000020f89f         db  0x00 ; '.'
000000000020f8a0         db  0x0f ; '.'
000000000020f8a1         db  0xb1 ; '.'
000000000020f8a2         db  0x00 ; '.'
000000000020f8a3         db  0x00 ; '.'
000000000020f8a4         db  0x00 ; '.'
000000000020f8a5         db  0x00 ; '.'
000000000020f8a6         db  0x00 ; '.'
000000000020f8a7         db  0x00 ; '.'
000000000020f8a8         db  0x00 ; '.'
000000000020f8a9         db  0x00 ; '.'
000000000020f8aa         db  0x00 ; '.'
000000000020f8ab         db  0x00 ; '.'
000000000020f8ac         db  0x00 ; '.'
000000000020f8ad         db  0x00 ; '.'
000000000020f8ae         db  0x00 ; '.'
000000000020f8af         db  0x00 ; '.'
000000000020f8b0         db  0x00 ; '.'
000000000020f8b1         db  0x00 ; '.'
000000000020f8b2         db  0x00 ; '.'
000000000020f8b3         db  0x00 ; '.'
000000000020f8b4         db  0x00 ; '.'
000000000020f8b5         db  0x00 ; '.'
000000000020f8b6         db  0x00 ; '.'
000000000020f8b7         db  0x00 ; '.'
000000000020f8b8         db  0x46 ; 'F'
000000000020f8b9         db  0x00 ; '.'
000000000020f8ba         db  0x00 ; '.'
000000000020f8bb         db  0x00 ; '.'
000000000020f8bc         db  0x00 ; '.'
000000000020f8bd         db  0x00 ; '.'
000000000020f8be         db  0x00 ; '.'
000000000020f8bf         db  0x00 ; '.'
000000000020f8c0         db  0x89 ; '.'
000000000020f8c1         db  0xb1 ; '.'
000000000020f8c2         db  0x00 ; '.'
000000000020f8c3         db  0x00 ; '.'
000000000020f8c4         db  0x00 ; '.'
000000000020f8c5         db  0x00 ; '.'
000000000020f8c6         db  0x00 ; '.'
000000000020f8c7         db  0x00 ; '.'
000000000020f8c8         db  0x00 ; '.'
000000000020f8c9         db  0x00 ; '.'
000000000020f8ca         db  0x00 ; '.'
000000000020f8cb         db  0x00 ; '.'
000000000020f8cc         db  0x00 ; '.'
000000000020f8cd         db  0x00 ; '.'
000000000020f8ce         db  0x00 ; '.'
000000000020f8cf         db  0x00 ; '.'
000000000020f8d0         db  0x00 ; '.'
000000000020f8d1         db  0x00 ; '.'
000000000020f8d2         db  0x00 ; '.'
000000000020f8d3         db  0x00 ; '.'
000000000020f8d4         db  0x00 ; '.'
000000000020f8d5         db  0x00 ; '.'
000000000020f8d6         db  0x00 ; '.'
000000000020f8d7         db  0x00 ; '.'
000000000020f8d8         db  0x6e ; 'n'
000000000020f8d9         db  0x00 ; '.'
000000000020f8da         db  0x00 ; '.'
000000000020f8db         db  0x00 ; '.'
000000000020f8dc         db  0x00 ; '.'
000000000020f8dd         db  0x00 ; '.'
000000000020f8de         db  0x00 ; '.'
000000000020f8df         db  0x00 ; '.'
000000000020f8e0         db  0x98 ; '.'
000000000020f8e1         db  0xb1 ; '.'
000000000020f8e2         db  0x00 ; '.'
000000000020f8e3         db  0x00 ; '.'
000000000020f8e4         db  0x00 ; '.'
000000000020f8e5         db  0x00 ; '.'
000000000020f8e6         db  0x00 ; '.'
000000000020f8e7         db  0x00 ; '.'
000000000020f8e8         db  0x00 ; '.'
000000000020f8e9         db  0x00 ; '.'
000000000020f8ea         db  0x00 ; '.'
000000000020f8eb         db  0x00 ; '.'
000000000020f8ec         db  0x00 ; '.'
000000000020f8ed         db  0x00 ; '.'
000000000020f8ee         db  0x00 ; '.'
000000000020f8ef         db  0x00 ; '.'
000000000020f8f0         db  0x00 ; '.'
000000000020f8f1         db  0x00 ; '.'
000000000020f8f2         db  0x00 ; '.'
000000000020f8f3         db  0x00 ; '.'
000000000020f8f4         db  0x00 ; '.'
000000000020f8f5         db  0x00 ; '.'
000000000020f8f6         db  0x00 ; '.'
000000000020f8f7         db  0x00 ; '.'
000000000020f8f8         db  0x54 ; 'T'
000000000020f8f9         db  0x00 ; '.'
000000000020f8fa         db  0x00 ; '.'
000000000020f8fb         db  0x00 ; '.'
000000000020f8fc         db  0x00 ; '.'
000000000020f8fd         db  0x00 ; '.'
000000000020f8fe         db  0x00 ; '.'
000000000020f8ff         db  0x00 ; '.'
000000000020f900         db  0xac ; '.'
000000000020f901         db  0xb1 ; '.'
000000000020f902         db  0x00 ; '.'
000000000020f903         db  0x00 ; '.'
000000000020f904         db  0x00 ; '.'
000000000020f905         db  0x00 ; '.'
000000000020f906         db  0x00 ; '.'
000000000020f907         db  0x00 ; '.'
000000000020f908         db  0x00 ; '.'
000000000020f909         db  0x00 ; '.'
000000000020f90a         db  0x00 ; '.'
000000000020f90b         db  0x00 ; '.'
000000000020f90c         db  0x00 ; '.'
000000000020f90d         db  0x00 ; '.'
000000000020f90e         db  0x00 ; '.'
000000000020f90f         db  0x00 ; '.'
000000000020f910         db  0x00 ; '.'
000000000020f911         db  0x00 ; '.'
000000000020f912         db  0x00 ; '.'
000000000020f913         db  0x00 ; '.'
000000000020f914         db  0x00 ; '.'
000000000020f915         db  0x00 ; '.'
000000000020f916         db  0x00 ; '.'
000000000020f917         db  0x00 ; '.'
000000000020f918         db  0x66 ; 'f'
000000000020f919         db  0x00 ; '.'
000000000020f91a         db  0x00 ; '.'
000000000020f91b         db  0x00 ; '.'
000000000020f91c         db  0x00 ; '.'
000000000020f91d         db  0x00 ; '.'
000000000020f91e         db  0x00 ; '.'
000000000020f91f         db  0x00 ; '.'
000000000020f920         db  0xb2 ; '.'
000000000020f921         db  0xb1 ; '.'
000000000020f922         db  0x00 ; '.'
000000000020f923         db  0x00 ; '.'
000000000020f924         db  0x00 ; '.'
000000000020f925         db  0x00 ; '.'
000000000020f926         db  0x00 ; '.'
000000000020f927         db  0x00 ; '.'
000000000020f928         db  0x00 ; '.'
000000000020f929         db  0x00 ; '.'
000000000020f92a         db  0x00 ; '.'
000000000020f92b         db  0x00 ; '.'
000000000020f92c         db  0x00 ; '.'
000000000020f92d         db  0x00 ; '.'
000000000020f92e         db  0x00 ; '.'
000000000020f92f         db  0x00 ; '.'
000000000020f930         db  0x00 ; '.'
000000000020f931         db  0x00 ; '.'
000000000020f932         db  0x00 ; '.'
000000000020f933         db  0x00 ; '.'
000000000020f934         db  0x00 ; '.'
000000000020f935         db  0x00 ; '.'
000000000020f936         db  0x00 ; '.'
000000000020f937         db  0x00 ; '.'
000000000020f938         db  0x69 ; 'i'
000000000020f939         db  0x00 ; '.'
000000000020f93a         db  0x00 ; '.'
000000000020f93b         db  0x00 ; '.'
000000000020f93c         db  0x00 ; '.'
000000000020f93d         db  0x00 ; '.'
000000000020f93e         db  0x00 ; '.'
000000000020f93f         db  0x00 ; '.'
000000000020f940         db  0xbe ; '.'
000000000020f941         db  0xb1 ; '.'
000000000020f942         db  0x00 ; '.'
000000000020f943         db  0x00 ; '.'
000000000020f944         db  0x00 ; '.'
000000000020f945         db  0x00 ; '.'
000000000020f946         db  0x00 ; '.'
000000000020f947         db  0x00 ; '.'
000000000020f948         db  0x01 ; '.'
000000000020f949         db  0x00 ; '.'
000000000020f94a         db  0x00 ; '.'
000000000020f94b         db  0x00 ; '.'
000000000020f94c         db  0x00 ; '.'
000000000020f94d         db  0x00 ; '.'
000000000020f94e         db  0x00 ; '.'
000000000020f94f         db  0x00 ; '.'
000000000020f950         db  0x00 ; '.'
000000000020f951         db  0x00 ; '.'
000000000020f952         db  0x00 ; '.'
000000000020f953         db  0x00 ; '.'
000000000020f954         db  0x00 ; '.'
000000000020f955         db  0x00 ; '.'
000000000020f956         db  0x00 ; '.'
000000000020f957         db  0x00 ; '.'
000000000020f958         db  0x53 ; 'S'
000000000020f959         db  0x00 ; '.'
000000000020f95a         db  0x00 ; '.'
000000000020f95b         db  0x00 ; '.'
000000000020f95c         db  0x00 ; '.'
000000000020f95d         db  0x00 ; '.'
000000000020f95e         db  0x00 ; '.'
000000000020f95f         db  0x00 ; '.'
000000000020f960         db  0x9b ; '.'
000000000020f961         db  0xb1 ; '.'
000000000020f962         db  0x00 ; '.'
000000000020f963         db  0x00 ; '.'
000000000020f964         db  0x00 ; '.'
000000000020f965         db  0x00 ; '.'
000000000020f966         db  0x00 ; '.'
000000000020f967         db  0x00 ; '.'
000000000020f968         db  0x01 ; '.'
000000000020f969         db  0x00 ; '.'
000000000020f96a         db  0x00 ; '.'
000000000020f96b         db  0x00 ; '.'
000000000020f96c         db  0x00 ; '.'
000000000020f96d         db  0x00 ; '.'
000000000020f96e         db  0x00 ; '.'
000000000020f96f         db  0x00 ; '.'
000000000020f970         db  0x00 ; '.'
000000000020f971         db  0x00 ; '.'
000000000020f972         db  0x00 ; '.'
000000000020f973         db  0x00 ; '.'
000000000020f974         db  0x00 ; '.'
000000000020f975         db  0x00 ; '.'
000000000020f976         db  0x00 ; '.'
000000000020f977         db  0x00 ; '.'
000000000020f978         db  0x74 ; 't'
000000000020f979         db  0x00 ; '.'
000000000020f97a         db  0x00 ; '.'
000000000020f97b         db  0x00 ; '.'
000000000020f97c         db  0x00 ; '.'
000000000020f97d         db  0x00 ; '.'
000000000020f97e         db  0x00 ; '.'
000000000020f97f         db  0x00 ; '.'
000000000020f980         db  0xc5 ; '.'
000000000020f981         db  0xb1 ; '.'
000000000020f982         db  0x00 ; '.'
000000000020f983         db  0x00 ; '.'
000000000020f984         db  0x00 ; '.'
000000000020f985         db  0x00 ; '.'
000000000020f986         db  0x00 ; '.'
000000000020f987         db  0x00 ; '.'
000000000020f988         db  0x00 ; '.'
000000000020f989         db  0x00 ; '.'
000000000020f98a         db  0x00 ; '.'
000000000020f98b         db  0x00 ; '.'
000000000020f98c         db  0x00 ; '.'
000000000020f98d         db  0x00 ; '.'
000000000020f98e         db  0x00 ; '.'
000000000020f98f         db  0x00 ; '.'
000000000020f990         db  0x00 ; '.'
000000000020f991         db  0x00 ; '.'
000000000020f992         db  0x00 ; '.'
000000000020f993         db  0x00 ; '.'
000000000020f994         db  0x00 ; '.'
000000000020f995         db  0x00 ; '.'
000000000020f996         db  0x00 ; '.'
000000000020f997         db  0x00 ; '.'
000000000020f998         db  0x4c ; 'L'
000000000020f999         db  0x00 ; '.'
000000000020f99a         db  0x00 ; '.'
000000000020f99b         db  0x00 ; '.'
000000000020f99c         db  0x00 ; '.'
000000000020f99d         db  0x00 ; '.'
000000000020f99e         db  0x00 ; '.'
000000000020f99f         db  0x00 ; '.'
000000000020f9a0         db  0xcd ; '.'
000000000020f9a1         db  0xb1 ; '.'
000000000020f9a2         db  0x00 ; '.'
000000000020f9a3         db  0x00 ; '.'
000000000020f9a4         db  0x00 ; '.'
000000000020f9a5         db  0x00 ; '.'
000000000020f9a6         db  0x00 ; '.'
000000000020f9a7         db  0x00 ; '.'
000000000020f9a8         db  0x00 ; '.'
000000000020f9a9         db  0x00 ; '.'
000000000020f9aa         db  0x00 ; '.'
000000000020f9ab         db  0x00 ; '.'
000000000020f9ac         db  0x00 ; '.'
000000000020f9ad         db  0x00 ; '.'
000000000020f9ae         db  0x00 ; '.'
000000000020f9af         db  0x00 ; '.'
000000000020f9b0         db  0x00 ; '.'
000000000020f9b1         db  0x00 ; '.'
000000000020f9b2         db  0x00 ; '.'
000000000020f9b3         db  0x00 ; '.'
000000000020f9b4         db  0x00 ; '.'
000000000020f9b5         db  0x00 ; '.'
000000000020f9b6         db  0x00 ; '.'
000000000020f9b7         db  0x00 ; '.'
000000000020f9b8         db  0x50 ; 'P'
000000000020f9b9         db  0x00 ; '.'
000000000020f9ba         db  0x00 ; '.'
000000000020f9bb         db  0x00 ; '.'
000000000020f9bc         db  0x00 ; '.'
000000000020f9bd         db  0x00 ; '.'
000000000020f9be         db  0x00 ; '.'
000000000020f9bf         db  0x00 ; '.'
000000000020f9c0         db  0xd6 ; '.'
000000000020f9c1         db  0xb1 ; '.'
000000000020f9c2         db  0x00 ; '.'
000000000020f9c3         db  0x00 ; '.'
000000000020f9c4         db  0x00 ; '.'
000000000020f9c5         db  0x00 ; '.'
000000000020f9c6         db  0x00 ; '.'
000000000020f9c7         db  0x00 ; '.'
000000000020f9c8         db  0x00 ; '.'
000000000020f9c9         db  0x00 ; '.'
000000000020f9ca         db  0x00 ; '.'
000000000020f9cb         db  0x00 ; '.'
000000000020f9cc         db  0x00 ; '.'
000000000020f9cd         db  0x00 ; '.'
000000000020f9ce         db  0x00 ; '.'
000000000020f9cf         db  0x00 ; '.'
000000000020f9d0         db  0x00 ; '.'
000000000020f9d1         db  0x00 ; '.'
000000000020f9d2         db  0x00 ; '.'
000000000020f9d3         db  0x00 ; '.'
000000000020f9d4         db  0x00 ; '.'
000000000020f9d5         db  0x00 ; '.'
000000000020f9d6         db  0x00 ; '.'
000000000020f9d7         db  0x00 ; '.'
000000000020f9d8         db  0x72 ; 'r'
000000000020f9d9         db  0x00 ; '.'
000000000020f9da         db  0x00 ; '.'
000000000020f9db         db  0x00 ; '.'
000000000020f9dc         db  0x00 ; '.'
000000000020f9dd         db  0x00 ; '.'
000000000020f9de         db  0x00 ; '.'
000000000020f9df         db  0x00 ; '.'
000000000020f9e0         db  0xdf ; '.'
000000000020f9e1         db  0xb1 ; '.'
000000000020f9e2         db  0x00 ; '.'
000000000020f9e3         db  0x00 ; '.'
000000000020f9e4         db  0x00 ; '.'
000000000020f9e5         db  0x00 ; '.'
000000000020f9e6         db  0x00 ; '.'
000000000020f9e7         db  0x00 ; '.'
000000000020f9e8         db  0x00 ; '.'
000000000020f9e9         db  0x00 ; '.'
000000000020f9ea         db  0x00 ; '.'
000000000020f9eb         db  0x00 ; '.'
000000000020f9ec         db  0x00 ; '.'
000000000020f9ed         db  0x00 ; '.'
000000000020f9ee         db  0x00 ; '.'
000000000020f9ef         db  0x00 ; '.'
000000000020f9f0         db  0x00 ; '.'
000000000020f9f1         db  0x00 ; '.'
000000000020f9f2         db  0x00 ; '.'
000000000020f9f3         db  0x00 ; '.'
000000000020f9f4         db  0x00 ; '.'
000000000020f9f5         db  0x00 ; '.'
000000000020f9f6         db  0x00 ; '.'
000000000020f9f7         db  0x00 ; '.'
000000000020f9f8         db  0x73 ; 's'
000000000020f9f9         db  0x00 ; '.'
000000000020f9fa         db  0x00 ; '.'
000000000020f9fb         db  0x00 ; '.'
000000000020f9fc         db  0x00 ; '.'
000000000020f9fd         db  0x00 ; '.'
000000000020f9fe         db  0x00 ; '.'
000000000020f9ff         db  0x00 ; '.'
000000000020fa00         db  0xe8 ; '.'
000000000020fa01         db  0xb1 ; '.'
000000000020fa02         db  0x00 ; '.'
000000000020fa03         db  0x00 ; '.'
000000000020fa04         db  0x00 ; '.'
000000000020fa05         db  0x00 ; '.'
000000000020fa06         db  0x00 ; '.'
000000000020fa07         db  0x00 ; '.'
000000000020fa08         db  0x00 ; '.'
000000000020fa09         db  0x00 ; '.'
000000000020fa0a         db  0x00 ; '.'
000000000020fa0b         db  0x00 ; '.'
000000000020fa0c         db  0x00 ; '.'
000000000020fa0d         db  0x00 ; '.'
000000000020fa0e         db  0x00 ; '.'
000000000020fa0f         db  0x00 ; '.'
000000000020fa10         db  0x00 ; '.'
000000000020fa11         db  0x00 ; '.'
000000000020fa12         db  0x00 ; '.'
000000000020fa13         db  0x00 ; '.'
000000000020fa14         db  0x00 ; '.'
000000000020fa15         db  0x00 ; '.'
000000000020fa16         db  0x00 ; '.'
000000000020fa17         db  0x00 ; '.'
000000000020fa18         db  0x76 ; 'v'
000000000020fa19         db  0x00 ; '.'
000000000020fa1a         db  0x00 ; '.'
000000000020fa1b         db  0x00 ; '.'
000000000020fa1c         db  0x00 ; '.'
000000000020fa1d         db  0x00 ; '.'
000000000020fa1e         db  0x00 ; '.'
000000000020fa1f         db  0x00 ; '.'
000000000020fa20         db  0xf0 ; '.'
000000000020fa21         db  0xb1 ; '.'
000000000020fa22         db  0x00 ; '.'
000000000020fa23         db  0x00 ; '.'
000000000020fa24         db  0x00 ; '.'
000000000020fa25         db  0x00 ; '.'
000000000020fa26         db  0x00 ; '.'
000000000020fa27         db  0x00 ; '.'
000000000020fa28         db  0x00 ; '.'
000000000020fa29         db  0x00 ; '.'
000000000020fa2a         db  0x00 ; '.'
000000000020fa2b         db  0x00 ; '.'
000000000020fa2c         db  0x00 ; '.'
000000000020fa2d         db  0x00 ; '.'
000000000020fa2e         db  0x00 ; '.'
000000000020fa2f         db  0x00 ; '.'
000000000020fa30         db  0x00 ; '.'
000000000020fa31         db  0x00 ; '.'
000000000020fa32         db  0x00 ; '.'
000000000020fa33         db  0x00 ; '.'
000000000020fa34         db  0x00 ; '.'
000000000020fa35         db  0x00 ; '.'
000000000020fa36         db  0x00 ; '.'
000000000020fa37         db  0x00 ; '.'
000000000020fa38         db  0x7e ; '~'
000000000020fa39         db  0xff ; '.'
000000000020fa3a         db  0xff ; '.'
000000000020fa3b         db  0xff ; '.'
000000000020fa3c         db  0x00 ; '.'
000000000020fa3d         db  0x00 ; '.'
000000000020fa3e         db  0x00 ; '.'
000000000020fa3f         db  0x00 ; '.'
000000000020fa40         db  0xf5 ; '.'
000000000020fa41         db  0xb1 ; '.'
000000000020fa42         db  0x00 ; '.'
000000000020fa43         db  0x00 ; '.'
000000000020fa44         db  0x00 ; '.'
000000000020fa45         db  0x00 ; '.'
000000000020fa46         db  0x00 ; '.'
000000000020fa47         db  0x00 ; '.'
000000000020fa48         db  0x00 ; '.'
000000000020fa49         db  0x00 ; '.'
000000000020fa4a         db  0x00 ; '.'
000000000020fa4b         db  0x00 ; '.'
000000000020fa4c         db  0x00 ; '.'
000000000020fa4d         db  0x00 ; '.'
000000000020fa4e         db  0x00 ; '.'
000000000020fa4f         db  0x00 ; '.'
000000000020fa50         db  0x00 ; '.'
000000000020fa51         db  0x00 ; '.'
000000000020fa52         db  0x00 ; '.'
000000000020fa53         db  0x00 ; '.'
000000000020fa54         db  0x00 ; '.'
000000000020fa55         db  0x00 ; '.'
000000000020fa56         db  0x00 ; '.'
000000000020fa57         db  0x00 ; '.'
000000000020fa58         db  0x7d ; '}'
000000000020fa59         db  0xff ; '.'
000000000020fa5a         db  0xff ; '.'
000000000020fa5b         db  0xff ; '.'
000000000020fa5c         db  0x00 ; '.'
000000000020fa5d         db  0x00 ; '.'
000000000020fa5e         db  0x00 ; '.'
000000000020fa5f         db  0x00 ; '.'
000000000020fa60         db  0x00 ; '.'
000000000020fa61         db  0x00 ; '.'
000000000020fa62         db  0x00 ; '.'
000000000020fa63         db  0x00 ; '.'
000000000020fa64         db  0x00 ; '.'
000000000020fa65         db  0x00 ; '.'
000000000020fa66         db  0x00 ; '.'
000000000020fa67         db  0x00 ; '.'
000000000020fa68         db  0x00 ; '.'
000000000020fa69         db  0x00 ; '.'
000000000020fa6a         db  0x00 ; '.'
000000000020fa6b         db  0x00 ; '.'
000000000020fa6c         db  0x00 ; '.'
000000000020fa6d         db  0x00 ; '.'
000000000020fa6e         db  0x00 ; '.'
000000000020fa6f         db  0x00 ; '.'
000000000020fa70         db  0x00 ; '.'
000000000020fa71         db  0x00 ; '.'
000000000020fa72         db  0x00 ; '.'
000000000020fa73         db  0x00 ; '.'
000000000020fa74         db  0x00 ; '.'
000000000020fa75         db  0x00 ; '.'
000000000020fa76         db  0x00 ; '.'
000000000020fa77         db  0x00 ; '.'
000000000020fa78         db  0x00 ; '.'
000000000020fa79         db  0x00 ; '.'
000000000020fa7a         db  0x00 ; '.'
000000000020fa7b         db  0x00 ; '.'
000000000020fa7c         db  0x00 ; '.'
000000000020fa7d         db  0x00 ; '.'
000000000020fa7e         db  0x00 ; '.'
000000000020fa7f         db  0x00 ; '.'
                     backup_args:
000000000020fa80         db  0x9c ; '.'                                         ; DATA XREF=get_version.part.0+11
000000000020fa81         db  0xbf ; '.'
000000000020fa82         db  0x00 ; '.'
000000000020fa83         db  0x00 ; '.'
000000000020fa84         db  0x00 ; '.'
000000000020fa85         db  0x00 ; '.'
000000000020fa86         db  0x00 ; '.'
000000000020fa87         db  0x00 ; '.'
000000000020fa88         db  0xa1 ; '.'
000000000020fa89         db  0xbf ; '.'
000000000020fa8a         db  0x00 ; '.'
000000000020fa8b         db  0x00 ; '.'
000000000020fa8c         db  0x00 ; '.'
000000000020fa8d         db  0x00 ; '.'
000000000020fa8e         db  0x00 ; '.'
000000000020fa8f         db  0x00 ; '.'
000000000020fa90         db  0xa5 ; '.'
000000000020fa91         db  0xbf ; '.'
000000000020fa92         db  0x00 ; '.'
000000000020fa93         db  0x00 ; '.'
000000000020fa94         db  0x00 ; '.'
000000000020fa95         db  0x00 ; '.'
000000000020fa96         db  0x00 ; '.'
000000000020fa97         db  0x00 ; '.'
000000000020fa98         db  0xac ; '.'
000000000020fa99         db  0xbf ; '.'
000000000020fa9a         db  0x00 ; '.'
000000000020fa9b         db  0x00 ; '.'
000000000020fa9c         db  0x00 ; '.'
000000000020fa9d         db  0x00 ; '.'
000000000020fa9e         db  0x00 ; '.'
000000000020fa9f         db  0x00 ; '.'
000000000020faa0         db  0xb2 ; '.'
000000000020faa1         db  0xbf ; '.'
000000000020faa2         db  0x00 ; '.'
000000000020faa3         db  0x00 ; '.'
000000000020faa4         db  0x00 ; '.'
000000000020faa5         db  0x00 ; '.'
000000000020faa6         db  0x00 ; '.'
000000000020faa7         db  0x00 ; '.'
000000000020faa8         db  0xbb ; '.'
000000000020faa9         db  0xbf ; '.'
000000000020faaa         db  0x00 ; '.'
000000000020faab         db  0x00 ; '.'
000000000020faac         db  0x00 ; '.'
000000000020faad         db  0x00 ; '.'
000000000020faae         db  0x00 ; '.'
000000000020faaf         db  0x00 ; '.'
000000000020fab0         db  0xbf ; '.'
000000000020fab1         db  0xbf ; '.'
000000000020fab2         db  0x00 ; '.'
000000000020fab3         db  0x00 ; '.'
000000000020fab4         db  0x00 ; '.'
000000000020fab5         db  0x00 ; '.'
000000000020fab6         db  0x00 ; '.'
000000000020fab7         db  0x00 ; '.'
000000000020fab8         db  0xc8 ; '.'
000000000020fab9         db  0xbf ; '.'
000000000020faba         db  0x00 ; '.'
000000000020fabb         db  0x00 ; '.'
000000000020fabc         db  0x00 ; '.'
000000000020fabd         db  0x00 ; '.'
000000000020fabe         db  0x00 ; '.'
000000000020fabf         db  0x00 ; '.'
000000000020fac0         db  0x00 ; '.'
000000000020fac1         db  0x00 ; '.'
000000000020fac2         db  0x00 ; '.'
000000000020fac3         db  0x00 ; '.'
000000000020fac4         db  0x00 ; '.'
000000000020fac5         db  0x00 ; '.'
000000000020fac6         db  0x00 ; '.'
000000000020fac7         db  0x00 ; '.'
000000000020fac8         db  0x00 ; '.'
000000000020fac9         db  0x00 ; '.'
000000000020faca         db  0x00 ; '.'
000000000020facb         db  0x00 ; '.'
000000000020facc         db  0x00 ; '.'
000000000020facd         db  0x00 ; '.'
000000000020face         db  0x00 ; '.'
000000000020facf         db  0x00 ; '.'
000000000020fad0         db  0x00 ; '.'
000000000020fad1         db  0x00 ; '.'
000000000020fad2         db  0x00 ; '.'
000000000020fad3         db  0x00 ; '.'
000000000020fad4         db  0x00 ; '.'
000000000020fad5         db  0x00 ; '.'
000000000020fad6         db  0x00 ; '.'
000000000020fad7         db  0x00 ; '.'
000000000020fad8         db  0x00 ; '.'
000000000020fad9         db  0x00 ; '.'
000000000020fada         db  0x00 ; '.'
000000000020fadb         db  0x00 ; '.'
000000000020fadc         db  0x00 ; '.'
000000000020fadd         db  0x00 ; '.'
000000000020fade         db  0x00 ; '.'
000000000020fadf         db  0x00 ; '.'
                     quoting_style_args:
000000000020fae0         db  0x39 ; '9'
000000000020fae1         db  0xc1 ; '.'
000000000020fae2         db  0x00 ; '.'
000000000020fae3         db  0x00 ; '.'
000000000020fae4         db  0x00 ; '.'
000000000020fae5         db  0x00 ; '.'
000000000020fae6         db  0x00 ; '.'
000000000020fae7         db  0x00 ; '.'
000000000020fae8         db  0x41 ; 'A'
000000000020fae9         db  0xc1 ; '.'
000000000020faea         db  0x00 ; '.'
000000000020faeb         db  0x00 ; '.'
000000000020faec         db  0x00 ; '.'
000000000020faed         db  0x00 ; '.'
000000000020faee         db  0x00 ; '.'
000000000020faef         db  0x00 ; '.'
000000000020faf0         db  0x47 ; 'G'
000000000020faf1         db  0xc1 ; '.'
000000000020faf2         db  0x00 ; '.'
000000000020faf3         db  0x00 ; '.'
000000000020faf4         db  0x00 ; '.'
000000000020faf5         db  0x00 ; '.'
000000000020faf6         db  0x00 ; '.'
000000000020faf7         db  0x00 ; '.'
000000000020faf8         db  0x54 ; 'T'
000000000020faf9         db  0xc1 ; '.'
000000000020fafa         db  0x00 ; '.'
000000000020fafb         db  0x00 ; '.'
000000000020fafc         db  0x00 ; '.'
000000000020fafd         db  0x00 ; '.'
000000000020fafe         db  0x00 ; '.'
000000000020faff         db  0x00 ; '.'
000000000020fb00         db  0x61 ; 'a'
000000000020fb01         db  0xc1 ; '.'
000000000020fb02         db  0x00 ; '.'
000000000020fb03         db  0x00 ; '.'
000000000020fb04         db  0x00 ; '.'
000000000020fb05         db  0x00 ; '.'
000000000020fb06         db  0x00 ; '.'
000000000020fb07         db  0x00 ; '.'
000000000020fb08         db  0xe6 ; '.'
000000000020fb09         db  0xb1 ; '.'
000000000020fb0a         db  0x00 ; '.'
000000000020fb0b         db  0x00 ; '.'
000000000020fb0c         db  0x00 ; '.'
000000000020fb0d         db  0x00 ; '.'
000000000020fb0e         db  0x00 ; '.'
000000000020fb0f         db  0x00 ; '.'
000000000020fb10         db  0x75 ; 'u'
000000000020fb11         db  0xc1 ; '.'
000000000020fb12         db  0x00 ; '.'
000000000020fb13         db  0x00 ; '.'
000000000020fb14         db  0x00 ; '.'
000000000020fb15         db  0x00 ; '.'
000000000020fb16         db  0x00 ; '.'
000000000020fb17         db  0x00 ; '.'
000000000020fb18         db  0x5a ; 'Z'
000000000020fb19         db  0xc1 ; '.'
000000000020fb1a         db  0x00 ; '.'
000000000020fb1b         db  0x00 ; '.'
000000000020fb1c         db  0x00 ; '.'
000000000020fb1d         db  0x00 ; '.'
000000000020fb1e         db  0x00 ; '.'
000000000020fb1f         db  0x00 ; '.'
000000000020fb20         db  0xf5 ; '.'
000000000020fb21         db  0xb0 ; '.'
000000000020fb22         db  0x00 ; '.'
000000000020fb23         db  0x00 ; '.'
000000000020fb24         db  0x00 ; '.'
000000000020fb25         db  0x00 ; '.'
000000000020fb26         db  0x00 ; '.'
000000000020fb27         db  0x00 ; '.'
000000000020fb28         db  0x7d ; '}'
000000000020fb29         db  0xc1 ; '.'
000000000020fb2a         db  0x00 ; '.'
000000000020fb2b         db  0x00 ; '.'
000000000020fb2c         db  0x00 ; '.'
000000000020fb2d         db  0x00 ; '.'
000000000020fb2e         db  0x00 ; '.'
000000000020fb2f         db  0x00 ; '.'
000000000020fb30         db  0x00 ; '.'
000000000020fb31         db  0x00 ; '.'
000000000020fb32         db  0x00 ; '.'
000000000020fb33         db  0x00 ; '.'
000000000020fb34         db  0x00 ; '.'
000000000020fb35         db  0x00 ; '.'
000000000020fb36         db  0x00 ; '.'
000000000020fb37         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x20fb38; 0x20fd28[ (496 bytes)
        ; File offset : [64312; 64808[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
000000000020fb38         db  0x01 ; '.'
000000000020fb39         db  0x00 ; '.'
000000000020fb3a         db  0x00 ; '.'
000000000020fb3b         db  0x00 ; '.'
000000000020fb3c         db  0x00 ; '.'
000000000020fb3d         db  0x00 ; '.'
000000000020fb3e         db  0x00 ; '.'
000000000020fb3f         db  0x00 ; '.'
000000000020fb40         db  0x01 ; '.'
000000000020fb41         db  0x00 ; '.'
000000000020fb42         db  0x00 ; '.'
000000000020fb43         db  0x00 ; '.'
000000000020fb44         db  0x00 ; '.'
000000000020fb45         db  0x00 ; '.'
000000000020fb46         db  0x00 ; '.'
000000000020fb47         db  0x00 ; '.'
000000000020fb48         db  0x0c ; '.'
000000000020fb49         db  0x00 ; '.'
000000000020fb4a         db  0x00 ; '.'
000000000020fb4b         db  0x00 ; '.'
000000000020fb4c         db  0x00 ; '.'
000000000020fb4d         db  0x00 ; '.'
000000000020fb4e         db  0x00 ; '.'
000000000020fb4f         db  0x00 ; '.'
000000000020fb50         db  0x70 ; 'p'
000000000020fb51         db  0x1d ; '.'
000000000020fb52         db  0x00 ; '.'
000000000020fb53         db  0x00 ; '.'
000000000020fb54         db  0x00 ; '.'
000000000020fb55         db  0x00 ; '.'
000000000020fb56         db  0x00 ; '.'
000000000020fb57         db  0x00 ; '.'
000000000020fb58         db  0x0d ; '.'
000000000020fb59         db  0x00 ; '.'
000000000020fb5a         db  0x00 ; '.'
000000000020fb5b         db  0x00 ; '.'
000000000020fb5c         db  0x00 ; '.'
000000000020fb5d         db  0x00 ; '.'
000000000020fb5e         db  0x00 ; '.'
000000000020fb5f         db  0x00 ; '.'
000000000020fb60         db  0x80 ; '.'
000000000020fb61         db  0xaf ; '.'
000000000020fb62         db  0x00 ; '.'
000000000020fb63         db  0x00 ; '.'
000000000020fb64         db  0x00 ; '.'
000000000020fb65         db  0x00 ; '.'
000000000020fb66         db  0x00 ; '.'
000000000020fb67         db  0x00 ; '.'
000000000020fb68         db  0x19 ; '.'
000000000020fb69         db  0x00 ; '.'
000000000020fb6a         db  0x00 ; '.'
000000000020fb6b         db  0x00 ; '.'
000000000020fb6c         db  0x00 ; '.'
000000000020fb6d         db  0x00 ; '.'
000000000020fb6e         db  0x00 ; '.'
000000000020fb6f         db  0x00 ; '.'
000000000020fb70         db  0x70 ; 'p'
000000000020fb71         db  0xf8 ; '.'
000000000020fb72         db  0x20 ; ' '
000000000020fb73         db  0x00 ; '.'
000000000020fb74         db  0x00 ; '.'
000000000020fb75         db  0x00 ; '.'
000000000020fb76         db  0x00 ; '.'
000000000020fb77         db  0x00 ; '.'
000000000020fb78         db  0x1b ; '.'
000000000020fb79         db  0x00 ; '.'
000000000020fb7a         db  0x00 ; '.'
000000000020fb7b         db  0x00 ; '.'
000000000020fb7c         db  0x00 ; '.'
000000000020fb7d         db  0x00 ; '.'
000000000020fb7e         db  0x00 ; '.'
000000000020fb7f         db  0x00 ; '.'
000000000020fb80         db  0x08 ; '.'
000000000020fb81         db  0x00 ; '.'
000000000020fb82         db  0x00 ; '.'
000000000020fb83         db  0x00 ; '.'
000000000020fb84         db  0x00 ; '.'
000000000020fb85         db  0x00 ; '.'
000000000020fb86         db  0x00 ; '.'
000000000020fb87         db  0x00 ; '.'
000000000020fb88         db  0x1a ; '.'
000000000020fb89         db  0x00 ; '.'
000000000020fb8a         db  0x00 ; '.'
000000000020fb8b         db  0x00 ; '.'
000000000020fb8c         db  0x00 ; '.'
000000000020fb8d         db  0x00 ; '.'
000000000020fb8e         db  0x00 ; '.'
000000000020fb8f         db  0x00 ; '.'
000000000020fb90         db  0x78 ; 'x'
000000000020fb91         db  0xf8 ; '.'
000000000020fb92         db  0x20 ; ' '
000000000020fb93         db  0x00 ; '.'
000000000020fb94         db  0x00 ; '.'
000000000020fb95         db  0x00 ; '.'
000000000020fb96         db  0x00 ; '.'
000000000020fb97         db  0x00 ; '.'
000000000020fb98         db  0x1c ; '.'
000000000020fb99         db  0x00 ; '.'
000000000020fb9a         db  0x00 ; '.'
000000000020fb9b         db  0x00 ; '.'
000000000020fb9c         db  0x00 ; '.'
000000000020fb9d         db  0x00 ; '.'
000000000020fb9e         db  0x00 ; '.'
000000000020fb9f         db  0x00 ; '.'
000000000020fba0         db  0x08 ; '.'
000000000020fba1         db  0x00 ; '.'
000000000020fba2         db  0x00 ; '.'
000000000020fba3         db  0x00 ; '.'
000000000020fba4         db  0x00 ; '.'
000000000020fba5         db  0x00 ; '.'
000000000020fba6         db  0x00 ; '.'
000000000020fba7         db  0x00 ; '.'
000000000020fba8         db  0xf5 ; '.'
000000000020fba9         db  0xfe ; '.'
000000000020fbaa         db  0xff ; '.'
000000000020fbab         db  0x6f ; 'o'
000000000020fbac         db  0x00 ; '.'
000000000020fbad         db  0x00 ; '.'
000000000020fbae         db  0x00 ; '.'
000000000020fbaf         db  0x00 ; '.'
000000000020fbb0         db  0x98 ; '.'
000000000020fbb1         db  0x02 ; '.'
000000000020fbb2         db  0x00 ; '.'
000000000020fbb3         db  0x00 ; '.'
000000000020fbb4         db  0x00 ; '.'
000000000020fbb5         db  0x00 ; '.'
000000000020fbb6         db  0x00 ; '.'
000000000020fbb7         db  0x00 ; '.'
000000000020fbb8         db  0x05 ; '.'
000000000020fbb9         db  0x00 ; '.'
000000000020fbba         db  0x00 ; '.'
000000000020fbbb         db  0x00 ; '.'
000000000020fbbc         db  0x00 ; '.'
000000000020fbbd         db  0x00 ; '.'
000000000020fbbe         db  0x00 ; '.'
000000000020fbbf         db  0x00 ; '.'
000000000020fbc0         db  0xe0 ; '.'
000000000020fbc1         db  0x0b ; '.'
000000000020fbc2         db  0x00 ; '.'
000000000020fbc3         db  0x00 ; '.'
000000000020fbc4         db  0x00 ; '.'
000000000020fbc5         db  0x00 ; '.'
000000000020fbc6         db  0x00 ; '.'
000000000020fbc7         db  0x00 ; '.'
000000000020fbc8         db  0x06 ; '.'
000000000020fbc9         db  0x00 ; '.'
000000000020fbca         db  0x00 ; '.'
000000000020fbcb         db  0x00 ; '.'
000000000020fbcc         db  0x00 ; '.'
000000000020fbcd         db  0x00 ; '.'
000000000020fbce         db  0x00 ; '.'
000000000020fbcf         db  0x00 ; '.'
000000000020fbd0         db  0xe0 ; '.'
000000000020fbd1         db  0x02 ; '.'
000000000020fbd2         db  0x00 ; '.'
000000000020fbd3         db  0x00 ; '.'
000000000020fbd4         db  0x00 ; '.'
000000000020fbd5         db  0x00 ; '.'
000000000020fbd6         db  0x00 ; '.'
000000000020fbd7         db  0x00 ; '.'
000000000020fbd8         db  0x0a ; '.'
000000000020fbd9         db  0x00 ; '.'
000000000020fbda         db  0x00 ; '.'
000000000020fbdb         db  0x00 ; '.'
000000000020fbdc         db  0x00 ; '.'
000000000020fbdd         db  0x00 ; '.'
000000000020fbde         db  0x00 ; '.'
000000000020fbdf         db  0x00 ; '.'
000000000020fbe0         db  0xe8 ; '.'
000000000020fbe1         db  0x03 ; '.'
000000000020fbe2         db  0x00 ; '.'
000000000020fbe3         db  0x00 ; '.'
000000000020fbe4         db  0x00 ; '.'
000000000020fbe5         db  0x00 ; '.'
000000000020fbe6         db  0x00 ; '.'
000000000020fbe7         db  0x00 ; '.'
000000000020fbe8         db  0x0b ; '.'
000000000020fbe9         db  0x00 ; '.'
000000000020fbea         db  0x00 ; '.'
000000000020fbeb         db  0x00 ; '.'
000000000020fbec         db  0x00 ; '.'
000000000020fbed         db  0x00 ; '.'
000000000020fbee         db  0x00 ; '.'
000000000020fbef         db  0x00 ; '.'
000000000020fbf0         db  0x18 ; '.'
000000000020fbf1         db  0x00 ; '.'
000000000020fbf2         db  0x00 ; '.'
000000000020fbf3         db  0x00 ; '.'
000000000020fbf4         db  0x00 ; '.'
000000000020fbf5         db  0x00 ; '.'
000000000020fbf6         db  0x00 ; '.'
000000000020fbf7         db  0x00 ; '.'
000000000020fbf8         db  0x15 ; '.'
000000000020fbf9         db  0x00 ; '.'
000000000020fbfa         db  0x00 ; '.'
000000000020fbfb         db  0x00 ; '.'
000000000020fbfc         db  0x00 ; '.'
000000000020fbfd         db  0x00 ; '.'
000000000020fbfe         db  0x00 ; '.'
000000000020fbff         db  0x00 ; '.'
000000000020fc00         db  0x00 ; '.'
000000000020fc01         db  0x00 ; '.'
000000000020fc02         db  0x00 ; '.'
000000000020fc03         db  0x00 ; '.'
000000000020fc04         db  0x00 ; '.'
000000000020fc05         db  0x00 ; '.'
000000000020fc06         db  0x00 ; '.'
000000000020fc07         db  0x00 ; '.'
000000000020fc08         db  0x03 ; '.'
000000000020fc09         db  0x00 ; '.'
000000000020fc0a         db  0x00 ; '.'
000000000020fc0b         db  0x00 ; '.'
000000000020fc0c         db  0x00 ; '.'
000000000020fc0d         db  0x00 ; '.'
000000000020fc0e         db  0x00 ; '.'
000000000020fc0f         db  0x00 ; '.'
000000000020fc10         db  0x28 ; '('
000000000020fc11         db  0xfd ; '.'
000000000020fc12         db  0x20 ; ' '
000000000020fc13         db  0x00 ; '.'
000000000020fc14         db  0x00 ; '.'
000000000020fc15         db  0x00 ; '.'
000000000020fc16         db  0x00 ; '.'
000000000020fc17         db  0x00 ; '.'
000000000020fc18         db  0x02 ; '.'
000000000020fc19         db  0x00 ; '.'
000000000020fc1a         db  0x00 ; '.'
000000000020fc1b         db  0x00 ; '.'
000000000020fc1c         db  0x00 ; '.'
000000000020fc1d         db  0x00 ; '.'
000000000020fc1e         db  0x00 ; '.'
000000000020fc1f         db  0x00 ; '.'
000000000020fc20         db  0x98 ; '.'
000000000020fc21         db  0x07 ; '.'
000000000020fc22         db  0x00 ; '.'
000000000020fc23         db  0x00 ; '.'
000000000020fc24         db  0x00 ; '.'
000000000020fc25         db  0x00 ; '.'
000000000020fc26         db  0x00 ; '.'
000000000020fc27         db  0x00 ; '.'
000000000020fc28         db  0x14 ; '.'
000000000020fc29         db  0x00 ; '.'
000000000020fc2a         db  0x00 ; '.'
000000000020fc2b         db  0x00 ; '.'
000000000020fc2c         db  0x00 ; '.'
000000000020fc2d         db  0x00 ; '.'
000000000020fc2e         db  0x00 ; '.'
000000000020fc2f         db  0x00 ; '.'
000000000020fc30         db  0x07 ; '.'
000000000020fc31         db  0x00 ; '.'
000000000020fc32         db  0x00 ; '.'
000000000020fc33         db  0x00 ; '.'
000000000020fc34         db  0x00 ; '.'
000000000020fc35         db  0x00 ; '.'
000000000020fc36         db  0x00 ; '.'
000000000020fc37         db  0x00 ; '.'
000000000020fc38         db  0x17 ; '.'
000000000020fc39         db  0x00 ; '.'
000000000020fc3a         db  0x00 ; '.'
000000000020fc3b         db  0x00 ; '.'
000000000020fc3c         db  0x00 ; '.'
000000000020fc3d         db  0x00 ; '.'
000000000020fc3e         db  0x00 ; '.'
000000000020fc3f         db  0x00 ; '.'
000000000020fc40         db  0xd8 ; '.'
000000000020fc41         db  0x15 ; '.'
000000000020fc42         db  0x00 ; '.'
000000000020fc43         db  0x00 ; '.'
000000000020fc44         db  0x00 ; '.'
000000000020fc45         db  0x00 ; '.'
000000000020fc46         db  0x00 ; '.'
000000000020fc47         db  0x00 ; '.'
000000000020fc48         db  0x07 ; '.'
000000000020fc49         db  0x00 ; '.'
000000000020fc4a         db  0x00 ; '.'
000000000020fc4b         db  0x00 ; '.'
000000000020fc4c         db  0x00 ; '.'
000000000020fc4d         db  0x00 ; '.'
000000000020fc4e         db  0x00 ; '.'
000000000020fc4f         db  0x00 ; '.'
000000000020fc50         db  0xf8 ; '.'
000000000020fc51         db  0x10 ; '.'
000000000020fc52         db  0x00 ; '.'
000000000020fc53         db  0x00 ; '.'
000000000020fc54         db  0x00 ; '.'
000000000020fc55         db  0x00 ; '.'
000000000020fc56         db  0x00 ; '.'
000000000020fc57         db  0x00 ; '.'
000000000020fc58         db  0x08 ; '.'
000000000020fc59         db  0x00 ; '.'
000000000020fc5a         db  0x00 ; '.'
000000000020fc5b         db  0x00 ; '.'
000000000020fc5c         db  0x00 ; '.'
000000000020fc5d         db  0x00 ; '.'
000000000020fc5e         db  0x00 ; '.'
000000000020fc5f         db  0x00 ; '.'
000000000020fc60         db  0xe0 ; '.'
000000000020fc61         db  0x04 ; '.'
000000000020fc62         db  0x00 ; '.'
000000000020fc63         db  0x00 ; '.'
000000000020fc64         db  0x00 ; '.'
000000000020fc65         db  0x00 ; '.'
000000000020fc66         db  0x00 ; '.'
000000000020fc67         db  0x00 ; '.'
000000000020fc68         db  0x09 ; '.'
000000000020fc69         db  0x00 ; '.'
000000000020fc6a         db  0x00 ; '.'
000000000020fc6b         db  0x00 ; '.'
000000000020fc6c         db  0x00 ; '.'
000000000020fc6d         db  0x00 ; '.'
000000000020fc6e         db  0x00 ; '.'
000000000020fc6f         db  0x00 ; '.'
000000000020fc70         db  0x18 ; '.'
000000000020fc71         db  0x00 ; '.'
000000000020fc72         db  0x00 ; '.'
000000000020fc73         db  0x00 ; '.'
000000000020fc74         db  0x00 ; '.'
000000000020fc75         db  0x00 ; '.'
000000000020fc76         db  0x00 ; '.'
000000000020fc77         db  0x00 ; '.'
000000000020fc78         db  0x1e ; '.'
000000000020fc79         db  0x00 ; '.'
000000000020fc7a         db  0x00 ; '.'
000000000020fc7b         db  0x00 ; '.'
000000000020fc7c         db  0x00 ; '.'
000000000020fc7d         db  0x00 ; '.'
000000000020fc7e         db  0x00 ; '.'
000000000020fc7f         db  0x00 ; '.'
000000000020fc80         db  0x08 ; '.'
000000000020fc81         db  0x00 ; '.'
000000000020fc82         db  0x00 ; '.'
000000000020fc83         db  0x00 ; '.'
000000000020fc84         db  0x00 ; '.'
000000000020fc85         db  0x00 ; '.'
000000000020fc86         db  0x00 ; '.'
000000000020fc87         db  0x00 ; '.'
000000000020fc88         db  0xfb ; '.'
000000000020fc89         db  0xff ; '.'
000000000020fc8a         db  0xff ; '.'
000000000020fc8b         db  0x6f ; 'o'
000000000020fc8c         db  0x00 ; '.'
000000000020fc8d         db  0x00 ; '.'
000000000020fc8e         db  0x00 ; '.'
000000000020fc8f         db  0x00 ; '.'
000000000020fc90         db  0x01 ; '.'
000000000020fc91         db  0x00 ; '.'
000000000020fc92         db  0x00 ; '.'
000000000020fc93         db  0x08 ; '.'
000000000020fc94         db  0x00 ; '.'
000000000020fc95         db  0x00 ; '.'
000000000020fc96         db  0x00 ; '.'
000000000020fc97         db  0x00 ; '.'
000000000020fc98         db  0xfe ; '.'
000000000020fc99         db  0xff ; '.'
000000000020fc9a         db  0xff ; '.'
000000000020fc9b         db  0x6f ; 'o'
000000000020fc9c         db  0x00 ; '.'
000000000020fc9d         db  0x00 ; '.'
000000000020fc9e         db  0x00 ; '.'
000000000020fc9f         db  0x00 ; '.'
000000000020fca0         db  0x88 ; '.'
000000000020fca1         db  0x10 ; '.'
000000000020fca2         db  0x00 ; '.'
000000000020fca3         db  0x00 ; '.'
000000000020fca4         db  0x00 ; '.'
000000000020fca5         db  0x00 ; '.'
000000000020fca6         db  0x00 ; '.'
000000000020fca7         db  0x00 ; '.'
000000000020fca8         db  0xff ; '.'
000000000020fca9         db  0xff ; '.'
000000000020fcaa         db  0xff ; '.'
000000000020fcab         db  0x6f ; 'o'
000000000020fcac         db  0x00 ; '.'
000000000020fcad         db  0x00 ; '.'
000000000020fcae         db  0x00 ; '.'
000000000020fcaf         db  0x00 ; '.'
000000000020fcb0         db  0x01 ; '.'
000000000020fcb1         db  0x00 ; '.'
000000000020fcb2         db  0x00 ; '.'
000000000020fcb3         db  0x00 ; '.'
000000000020fcb4         db  0x00 ; '.'
000000000020fcb5         db  0x00 ; '.'
000000000020fcb6         db  0x00 ; '.'
000000000020fcb7         db  0x00 ; '.'
000000000020fcb8         db  0xf0 ; '.'
000000000020fcb9         db  0xff ; '.'
000000000020fcba         db  0xff ; '.'
000000000020fcbb         db  0x6f ; 'o'
000000000020fcbc         db  0x00 ; '.'
000000000020fcbd         db  0x00 ; '.'
000000000020fcbe         db  0x00 ; '.'
000000000020fcbf         db  0x00 ; '.'
000000000020fcc0         db  0xc8 ; '.'
000000000020fcc1         db  0x0f ; '.'
000000000020fcc2         db  0x00 ; '.'
000000000020fcc3         db  0x00 ; '.'
000000000020fcc4         db  0x00 ; '.'
000000000020fcc5         db  0x00 ; '.'
000000000020fcc6         db  0x00 ; '.'
000000000020fcc7         db  0x00 ; '.'
000000000020fcc8         db  0xf9 ; '.'
000000000020fcc9         db  0xff ; '.'
000000000020fcca         db  0xff ; '.'
000000000020fccb         db  0x6f ; 'o'
000000000020fccc         db  0x00 ; '.'
000000000020fccd         db  0x00 ; '.'
000000000020fcce         db  0x00 ; '.'
000000000020fccf         db  0x00 ; '.'
000000000020fcd0         db  0x28 ; '('
000000000020fcd1         db  0x00 ; '.'
000000000020fcd2         db  0x00 ; '.'
000000000020fcd3         db  0x00 ; '.'
000000000020fcd4         db  0x00 ; '.'
000000000020fcd5         db  0x00 ; '.'
000000000020fcd6         db  0x00 ; '.'
000000000020fcd7         db  0x00 ; '.'
000000000020fcd8         db  0x00 ; '.'
000000000020fcd9         db  0x00 ; '.'
000000000020fcda         db  0x00 ; '.'
000000000020fcdb         db  0x00 ; '.'
000000000020fcdc         db  0x00 ; '.'
000000000020fcdd         db  0x00 ; '.'
000000000020fcde         db  0x00 ; '.'
000000000020fcdf         db  0x00 ; '.'
000000000020fce0         db  0x00 ; '.'
000000000020fce1         db  0x00 ; '.'
000000000020fce2         db  0x00 ; '.'
000000000020fce3         db  0x00 ; '.'
000000000020fce4         db  0x00 ; '.'
000000000020fce5         db  0x00 ; '.'
000000000020fce6         db  0x00 ; '.'
000000000020fce7         db  0x00 ; '.'
000000000020fce8         db  0x00 ; '.'
000000000020fce9         db  0x00 ; '.'
000000000020fcea         db  0x00 ; '.'
000000000020fceb         db  0x00 ; '.'
000000000020fcec         db  0x00 ; '.'
000000000020fced         db  0x00 ; '.'
000000000020fcee         db  0x00 ; '.'
000000000020fcef         db  0x00 ; '.'
000000000020fcf0         db  0x00 ; '.'
000000000020fcf1         db  0x00 ; '.'
000000000020fcf2         db  0x00 ; '.'
000000000020fcf3         db  0x00 ; '.'
000000000020fcf4         db  0x00 ; '.'
000000000020fcf5         db  0x00 ; '.'
000000000020fcf6         db  0x00 ; '.'
000000000020fcf7         db  0x00 ; '.'
000000000020fcf8         db  0x00 ; '.'
000000000020fcf9         db  0x00 ; '.'
000000000020fcfa         db  0x00 ; '.'
000000000020fcfb         db  0x00 ; '.'
000000000020fcfc         db  0x00 ; '.'
000000000020fcfd         db  0x00 ; '.'
000000000020fcfe         db  0x00 ; '.'
000000000020fcff         db  0x00 ; '.'
000000000020fd00         db  0x00 ; '.'
000000000020fd01         db  0x00 ; '.'
000000000020fd02         db  0x00 ; '.'
000000000020fd03         db  0x00 ; '.'
000000000020fd04         db  0x00 ; '.'
000000000020fd05         db  0x00 ; '.'
000000000020fd06         db  0x00 ; '.'
000000000020fd07         db  0x00 ; '.'
000000000020fd08         db  0x00 ; '.'
000000000020fd09         db  0x00 ; '.'
000000000020fd0a         db  0x00 ; '.'
000000000020fd0b         db  0x00 ; '.'
000000000020fd0c         db  0x00 ; '.'
000000000020fd0d         db  0x00 ; '.'
000000000020fd0e         db  0x00 ; '.'
000000000020fd0f         db  0x00 ; '.'
000000000020fd10         db  0x00 ; '.'
000000000020fd11         db  0x00 ; '.'
000000000020fd12         db  0x00 ; '.'
000000000020fd13         db  0x00 ; '.'
000000000020fd14         db  0x00 ; '.'
000000000020fd15         db  0x00 ; '.'
000000000020fd16         db  0x00 ; '.'
000000000020fd17         db  0x00 ; '.'
000000000020fd18         db  0x00 ; '.'
000000000020fd19         db  0x00 ; '.'
000000000020fd1a         db  0x00 ; '.'
000000000020fd1b         db  0x00 ; '.'
000000000020fd1c         db  0x00 ; '.'
000000000020fd1d         db  0x00 ; '.'
000000000020fd1e         db  0x00 ; '.'
000000000020fd1f         db  0x00 ; '.'
000000000020fd20         db  0x00 ; '.'
000000000020fd21         db  0x00 ; '.'
000000000020fd22         db  0x00 ; '.'
000000000020fd23         db  0x00 ; '.'
000000000020fd24         db  0x00 ; '.'
000000000020fd25         db  0x00 ; '.'
000000000020fd26         db  0x00 ; '.'
000000000020fd27         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x20fd28; 0x20fff0[ (712 bytes)
        ; File offset : [64808; 65520[ (712 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
000000000020fd28         db  0x38 ; '8'
000000000020fd29         db  0xfb ; '.'
000000000020fd2a         db  0x20 ; ' '
000000000020fd2b         db  0x00 ; '.'
000000000020fd2c         db  0x00 ; '.'
000000000020fd2d         db  0x00 ; '.'
000000000020fd2e         db  0x00 ; '.'
000000000020fd2f         db  0x00 ; '.'
                     qword_20fd30:
000000000020fd30         dq         0x0000000000000000                          ; DATA XREF=0x1d90
000000000020fd38         db  0x00 ; '.'                                         ; DATA XREF=0x1d96
000000000020fd39         db  0x00 ; '.'
000000000020fd3a         db  0x00 ; '.'
000000000020fd3b         db  0x00 ; '.'
000000000020fd3c         db  0x00 ; '.'
000000000020fd3d         db  0x00 ; '.'
000000000020fd3e         db  0x00 ; '.'
000000000020fd3f         db  0x00 ; '.'
                     getenv@GOT:        // getenv
000000000020fd40         dq         0x00000000002102b0                          ; DATA XREF=j_getenv
                     free@GOT:        // free
000000000020fd48         dq         0x00000000002102b8                          ; DATA XREF=j_free
                     abort@GOT:        // abort
000000000020fd50         dq         0x00000000002102c0                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
000000000020fd58         dq         0x00000000002102c8                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
000000000020fd60         dq         0x00000000002102d0                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
000000000020fd68         dq         0x00000000002102e0                          ; DATA XREF=j__exit
                     strcpy@GOT:        // strcpy
000000000020fd70         dq         0x00000000002102e8                          ; DATA XREF=j_strcpy
                     __fpending@GOT:        // __fpending
000000000020fd78         dq         0x00000000002102f0                          ; DATA XREF=j___fpending
                     __read_chk@GOT:        // __read_chk
000000000020fd80         dq         0x00000000002102f8                          ; DATA XREF=j___read_chk
                     mkdir@GOT:        // mkdir
000000000020fd88         dq         0x0000000000210300                          ; DATA XREF=j_mkdir
                     unlinkat@GOT:        // unlinkat
000000000020fd90         dq         0x0000000000210308                          ; DATA XREF=j_unlinkat
                     readlink@GOT:        // readlink
000000000020fd98         dq         0x0000000000210310                          ; DATA XREF=j_readlink
                     fcntl@GOT:        // fcntl
000000000020fda0         dq         0x0000000000210318                          ; DATA XREF=j_fcntl
                     getpid@GOT:        // getpid
000000000020fda8         dq         0x0000000000210320                          ; DATA XREF=j_getpid
                     fread_unlocked@GOT:        // fread_unlocked
000000000020fdb0         dq         0x0000000000210328                          ; DATA XREF=j_fread_unlocked
                     textdomain@GOT:        // textdomain
000000000020fdb8         dq         0x0000000000210330                          ; DATA XREF=j_textdomain
                     pathconf@GOT:        // pathconf
000000000020fdc0         dq         0x0000000000210338                          ; DATA XREF=j_pathconf
                     fclose@GOT:        // fclose
000000000020fdc8         dq         0x0000000000210340                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
000000000020fdd0         dq         0x0000000000210348                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
000000000020fdd8         dq         0x0000000000210350                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
000000000020fde0         dq         0x0000000000210358                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
000000000020fde8         dq         0x0000000000210360                          ; DATA XREF=j_strlen
                     __lxstat@GOT:        // __lxstat
000000000020fdf0         dq         0x0000000000210368                          ; DATA XREF=j___lxstat
                     openat@GOT:        // openat
000000000020fdf8         dq         0x0000000000210370                          ; DATA XREF=j_openat
                     __stack_chk_fail@GOT:        // __stack_chk_fail
000000000020fe00         dq         0x0000000000210378                          ; DATA XREF=j___stack_chk_fail
                     getuid@GOT:        // getuid
000000000020fe08         dq         0x0000000000210380                          ; DATA XREF=j_getuid
                     getopt_long@GOT:        // getopt_long
000000000020fe10         dq         0x0000000000210388                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
000000000020fe18         dq         0x0000000000210390                          ; DATA XREF=j_mbrtowc
                     __fxstatat@GOT:        // __fxstatat
000000000020fe20         dq         0x0000000000210398                          ; DATA XREF=j___fxstatat
                     __overflow@GOT:        // __overflow
000000000020fe28         dq         0x00000000002103a0                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
000000000020fe30         dq         0x00000000002103a8                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
000000000020fe38         dq         0x00000000002103b0                          ; DATA XREF=j_lseek
                     gettimeofday@GOT:        // gettimeofday
000000000020fe40         dq         0x00000000002103b8                          ; DATA XREF=j_gettimeofday
                     __assert_fail@GOT:        // __assert_fail
000000000020fe48         dq         0x00000000002103c0                          ; DATA XREF=j___assert_fail
                     memset@GOT:        // memset
000000000020fe50         dq         0x00000000002103c8                          ; DATA XREF=j_memset
                     getcwd@GOT:        // getcwd
000000000020fe58         dq         0x00000000002103d0                          ; DATA XREF=j_getcwd
                     close@GOT:        // close
000000000020fe60         dq         0x00000000002103d8                          ; DATA XREF=j_close
                     rewinddir@GOT:        // rewinddir
000000000020fe68         dq         0x00000000002103e0                          ; DATA XREF=j_rewinddir
                     strspn@GOT:        // strspn
000000000020fe70         dq         0x00000000002103e8                          ; DATA XREF=j_strspn
                     closedir@GOT:        // closedir
000000000020fe78         dq         0x00000000002103f0                          ; DATA XREF=j_closedir
                     memcmp@GOT:        // memcmp
000000000020fe80         dq         0x0000000000210400                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
000000000020fe88         dq         0x0000000000210408                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
000000000020fe90         dq         0x0000000000210410                          ; DATA XREF=j_calloc
                     __getdelim@GOT:        // __getdelim
000000000020fe98         dq         0x0000000000210418                          ; DATA XREF=j___getdelim
                     strcmp@GOT:        // strcmp
000000000020fea0         dq         0x0000000000210420                          ; DATA XREF=j_strcmp
                     fpathconf@GOT:        // fpathconf
000000000020fea8         dq         0x0000000000210428                          ; DATA XREF=j_fpathconf
                     rpmatch@GOT:        // rpmatch
000000000020feb0         dq         0x0000000000210430                          ; DATA XREF=j_rpmatch
                     syscall@GOT:        // syscall
000000000020feb8         dq         0x0000000000210438                          ; DATA XREF=j_syscall
                     memcpy@GOT:        // memcpy
000000000020fec0         dq         0x0000000000210448                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
000000000020fec8         dq         0x0000000000210450                          ; DATA XREF=j_fileno
                     getgid@GOT:        // getgid
000000000020fed0         dq         0x0000000000210458                          ; DATA XREF=j_getgid
                     __xstat@GOT:        // __xstat
000000000020fed8         dq         0x0000000000210460                          ; DATA XREF=j___xstat
                     readdir@GOT:        // readdir
000000000020fee0         dq         0x0000000000210468                          ; DATA XREF=j_readdir
                     malloc@GOT:        // malloc
000000000020fee8         dq         0x0000000000210470                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
000000000020fef0         dq         0x0000000000210478                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
000000000020fef8         dq         0x0000000000210480                          ; DATA XREF=j_nl_langinfo
                     __freading@GOT:        // __freading
000000000020ff00         dq         0x0000000000210488                          ; DATA XREF=j___freading
                     realloc@GOT:        // realloc
000000000020ff08         dq         0x0000000000210490                          ; DATA XREF=j_realloc
                     fdopen@GOT:        // fdopen
000000000020ff10         dq         0x0000000000210498                          ; DATA XREF=j_fdopen
                     linkat@GOT:        // linkat
000000000020ff18         dq         0x00000000002104a0                          ; DATA XREF=j_linkat
                     setlocale@GOT:        // setlocale
000000000020ff20         dq         0x00000000002104a8                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
000000000020ff28         dq         0x00000000002104b0                          ; DATA XREF=j___printf_chk
                     setvbuf@GOT:        // setvbuf
000000000020ff30         dq         0x00000000002104b8                          ; DATA XREF=j_setvbuf
                     mempcpy@GOT:        // mempcpy
000000000020ff38         dq         0x00000000002104c0                          ; DATA XREF=j_mempcpy
                     memmove@GOT:        // memmove
000000000020ff40         dq         0x00000000002104c8                          ; DATA XREF=j_memmove
                     error@GOT:        // error
000000000020ff48         dq         0x00000000002104d0                          ; DATA XREF=j_error
                     __explicit_bzero_chk@GOT:        // __explicit_bzero_chk
000000000020ff50         dq         0x00000000002104d8                          ; DATA XREF=j___explicit_bzero_chk
                     open@GOT:        // open
000000000020ff58         dq         0x00000000002104e0                          ; DATA XREF=j_open
                     fseeko@GOT:        // fseeko
000000000020ff60         dq         0x00000000002104e8                          ; DATA XREF=j_fseeko
                     fopen@GOT:        // fopen
000000000020ff68         dq         0x00000000002104f0                          ; DATA XREF=j_fopen
                     fdopendir@GOT:        // fdopendir
000000000020ff70         dq         0x00000000002104f8                          ; DATA XREF=j_fdopendir
                     __cxa_atexit@GOT:        // __cxa_atexit
000000000020ff78         dq         0x0000000000210500                          ; DATA XREF=j___cxa_atexit
                     renameat@GOT:        // renameat
000000000020ff80         dq         0x0000000000210508                          ; DATA XREF=j_renameat
                     getppid@GOT:        // getppid
000000000020ff88         dq         0x0000000000210510                          ; DATA XREF=j_getppid
                     exit@GOT:        // exit
000000000020ff90         dq         0x0000000000210518                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
000000000020ff98         dq         0x0000000000210520                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
000000000020ffa0         dq         0x0000000000210528                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
000000000020ffa8         dq         0x0000000000210538                          ; DATA XREF=j_mbsinit
                     symlinkat@GOT:        // symlinkat
000000000020ffb0         dq         0x0000000000210540                          ; DATA XREF=j_symlinkat
                     iswprint@GOT:        // iswprint
000000000020ffb8         dq         0x0000000000210548                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
000000000020ffc0         dq         0x0000000000210558                          ; DATA XREF=j___ctype_b_loc
                     qword_20ffc8:
000000000020ffc8         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
000000000020ffd0         db  0x00 ; '.'                                         ; DATA XREF=_start+36
000000000020ffd1         db  0x00 ; '.'
000000000020ffd2         db  0x00 ; '.'
000000000020ffd3         db  0x00 ; '.'
000000000020ffd4         db  0x00 ; '.'
000000000020ffd5         db  0x00 ; '.'
000000000020ffd6         db  0x00 ; '.'
000000000020ffd7         db  0x00 ; '.'
                     qword_20ffd8:
000000000020ffd8         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_20ffe0:
000000000020ffe0         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_20ffe8:
000000000020ffe8         dq         0x0000000000000000                          ; DATA XREF=j_qword_20ffe8, __do_global_dtors_aux+9
000000000020fff0         db  0x00 ; '.'
000000000020fff1         db  0x00 ; '.'
000000000020fff2         db  0x00 ; '.'
000000000020fff3         db  0x00 ; '.'
000000000020fff4         db  0x00 ; '.'
000000000020fff5         db  0x00 ; '.'
000000000020fff6         db  0x00 ; '.'
000000000020fff7         db  0x00 ; '.'
000000000020fff8         db  0x00 ; '.'
000000000020fff9         db  0x00 ; '.'
000000000020fffa         db  0x00 ; '.'
000000000020fffb         db  0x00 ; '.'
000000000020fffc         db  0x00 ; '.'
000000000020fffd         db  0x00 ; '.'
000000000020fffe         db  0x00 ; '.'
000000000020ffff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x210000; 0x2100a8[ (168 bytes)
        ; File offset : [65536; 65704[ (168 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

0000000000210000         db  0x00 ; '.'                                         ; DATA XREF=main+1471
0000000000210001         db  0x00 ; '.'
0000000000210002         db  0x00 ; '.'
0000000000210003         db  0x00 ; '.'
0000000000210004         db  0x00 ; '.'
0000000000210005         db  0x00 ; '.'
0000000000210006         db  0x00 ; '.'
0000000000210007         db  0x00 ; '.'
                     __dso_handle:
0000000000210008         dq         0x0000000000210008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     dereference_dest_dir_symlinks:
0000000000210010         db         0x01                                        ; DATA XREF=main+528, main+1437
0000000000210011         align      8
                     Version:
0000000000210018         dq         0x000000000000bf6f                          ; "8.31", DATA XREF=main+447
                     exit_failure:
0000000000210020         dd         0x00000001                                  ; DATA XREF=close_stdin+168, close_stdout+130, xalloc_die+23, randread_error+51
0000000000210024         db  0x00 ; '.'
0000000000210025         db  0x00 ; '.'
0000000000210026         db  0x00 ; '.'
0000000000210027         db  0x00 ; '.'
0000000000210028         db  0x00 ; '.'
0000000000210029         db  0x00 ; '.'
000000000021002a         db  0x00 ; '.'
000000000021002b         db  0x00 ; '.'
000000000021002c         db  0x00 ; '.'
000000000021002d         db  0x00 ; '.'
000000000021002e         db  0x00 ; '.'
000000000021002f         db  0x00 ; '.'
0000000000210030         db  0x00 ; '.'
0000000000210031         db  0x00 ; '.'
0000000000210032         db  0x00 ; '.'
0000000000210033         db  0x00 ; '.'
0000000000210034         db  0x00 ; '.'
0000000000210035         db  0x00 ; '.'
0000000000210036         db  0x00 ; '.'
0000000000210037         db  0x00 ; '.'
0000000000210038         db  0x00 ; '.'
0000000000210039         db  0x00 ; '.'
000000000021003a         db  0x00 ; '.'
000000000021003b         db  0x00 ; '.'
000000000021003c         db  0x00 ; '.'
000000000021003d         db  0x00 ; '.'
000000000021003e         db  0x00 ; '.'
000000000021003f         db  0x00 ; '.'
                     quote_quoting_options:
0000000000210040         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
0000000000210041         db  0x00 ; '.'
0000000000210042         db  0x00 ; '.'
0000000000210043         db  0x00 ; '.'
0000000000210044         db  0x00 ; '.'
0000000000210045         db  0x00 ; '.'
0000000000210046         db  0x00 ; '.'
0000000000210047         db  0x00 ; '.'
0000000000210048         db  0x00 ; '.'
0000000000210049         db  0x00 ; '.'
000000000021004a         db  0x00 ; '.'
000000000021004b         db  0x00 ; '.'
000000000021004c         db  0x00 ; '.'
000000000021004d         db  0x00 ; '.'
000000000021004e         db  0x00 ; '.'
000000000021004f         db  0x00 ; '.'
0000000000210050         db  0x00 ; '.'
0000000000210051         db  0x00 ; '.'
0000000000210052         db  0x00 ; '.'
0000000000210053         db  0x00 ; '.'
0000000000210054         db  0x00 ; '.'
0000000000210055         db  0x00 ; '.'
0000000000210056         db  0x00 ; '.'
0000000000210057         db  0x00 ; '.'
0000000000210058         db  0x00 ; '.'
0000000000210059         db  0x00 ; '.'
000000000021005a         db  0x00 ; '.'
000000000021005b         db  0x00 ; '.'
000000000021005c         db  0x00 ; '.'
000000000021005d         db  0x00 ; '.'
000000000021005e         db  0x00 ; '.'
000000000021005f         db  0x00 ; '.'
0000000000210060         db  0x00 ; '.'
0000000000210061         db  0x00 ; '.'
0000000000210062         db  0x00 ; '.'
0000000000210063         db  0x00 ; '.'
0000000000210064         db  0x00 ; '.'
0000000000210065         db  0x00 ; '.'
0000000000210066         db  0x00 ; '.'
0000000000210067         db  0x00 ; '.'
0000000000210068         db  0x00 ; '.'
0000000000210069         db  0x00 ; '.'
000000000021006a         db  0x00 ; '.'
000000000021006b         db  0x00 ; '.'
000000000021006c         db  0x00 ; '.'
000000000021006d         db  0x00 ; '.'
000000000021006e         db  0x00 ; '.'
000000000021006f         db  0x00 ; '.'
0000000000210070         db  0x00 ; '.'
0000000000210071         db  0x00 ; '.'
0000000000210072         db  0x00 ; '.'
0000000000210073         db  0x00 ; '.'
0000000000210074         db  0x00 ; '.'
0000000000210075         db  0x00 ; '.'
0000000000210076         db  0x00 ; '.'
0000000000210077         db  0x00 ; '.'
                     nslots:
0000000000210078         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000021007c         align      2
0000000000210082         db  0x21 ; '!'
0000000000210083         db  0x00 ; '.'
0000000000210084         db  0x00 ; '.'
0000000000210085         db  0x00 ; '.'
0000000000210086         db  0x00 ; '.'
0000000000210087         db  0x00 ; '.'
0000000000210088         db  0x00 ; '.'
0000000000210089         db  0x00 ; '.'
000000000021008a         db  0x00 ; '.'
000000000021008b         db  0x00 ; '.'
000000000021008c         db  0x00 ; '.'
000000000021008d         db  0x00 ; '.'
000000000021008e         db  0x00 ; '.'
000000000021008f         db  0x00 ; '.'
                     slotvec0:
0000000000210090         dq         1.26481e-321, 1.06868e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105
                     argmatch_die:
00000000002100a0         dq         0x00000000000099c0                          ; DATA XREF=get_version.part.0+4
                     __TMC_END__:
00000000002100a8         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7
00000000002100a9         db  0x00 ; '.'
00000000002100aa         db  0x00 ; '.'
00000000002100ab         db  0x00 ; '.'
00000000002100ac         db  0x00 ; '.'
00000000002100ad         db  0x00 ; '.'
00000000002100ae         db  0x00 ; '.'
00000000002100af         db  0x00 ; '.'
00000000002100b0         db  0x00 ; '.'
00000000002100b1         db  0x00 ; '.'
00000000002100b2         db  0x00 ; '.'
00000000002100b3         db  0x00 ; '.'
00000000002100b4         db  0x00 ; '.'
00000000002100b5         db  0x00 ; '.'
00000000002100b6         db  0x00 ; '.'
00000000002100b7         db  0x00 ; '.'
00000000002100b8         db  0x00 ; '.'
00000000002100b9         db  0x00 ; '.'
00000000002100ba         db  0x00 ; '.'
00000000002100bb         db  0x00 ; '.'
00000000002100bc         db  0x00 ; '.'
00000000002100bd         db  0x00 ; '.'
00000000002100be         db  0x00 ; '.'
00000000002100bf         db  0x00 ; '.'


        ; Section .bss
        ; Range: [0x2100c0; 0x2102a0[ (480 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
00000000002100c0         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+102
00000000002100c1         db  0x00 ; '.'
00000000002100c2         db  0x00 ; '.'
00000000002100c3         db  0x00 ; '.'
00000000002100c4         db  0x00 ; '.'
00000000002100c5         db  0x00 ; '.'
00000000002100c6         db  0x00 ; '.'
00000000002100c7         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
00000000002100c8         db  0x00 ; '.'                                         ; DATA XREF=main+440, usage+134, usage+171, usage+208, usage+245, usage+282, usage+319, usage+356, usage+393, usage+430, usage+1064
00000000002100c9         db  0x00 ; '.'
00000000002100ca         db  0x00 ; '.'
00000000002100cb         db  0x00 ; '.'
00000000002100cc         db  0x00 ; '.'
00000000002100cd         db  0x00 ; '.'
00000000002100ce         db  0x00 ; '.'
00000000002100cf         db  0x00 ; '.'
                     stdin@@GLIBC_2.2.5:
00000000002100d0         db  0x00 ; '.'                                         ; DATA XREF=close_stdin+4, close_stdin+63, close_stdin+201, yesno+12
00000000002100d1         db  0x00 ; '.'
00000000002100d2         db  0x00 ; '.'
00000000002100d3         db  0x00 ; '.'
00000000002100d4         db  0x00 ; '.'
00000000002100d5         db  0x00 ; '.'
00000000002100d6         db  0x00 ; '.'
00000000002100d7         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
00000000002100d8         db  0x00 ; '.'                                         ; DATA XREF=main+828
00000000002100d9         db  0x00 ; '.'
00000000002100da         db  0x00 ; '.'
00000000002100db         db  0x00 ; '.'
00000000002100dc         db  0x00 ; '.'
00000000002100dd         db  0x00 ; '.'
00000000002100de         db  0x00 ; '.'
00000000002100df         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
00000000002100e0         db  0x00 ; '.'                                         ; DATA XREF=main+544, main+590, main+619, main+760, main+1954
00000000002100e1         db  0x00 ; '.'
00000000002100e2         db  0x00 ; '.'
00000000002100e3         db  0x00 ; '.'
00000000002100e4         db  0x00 ; '.'
00000000002100e5         db  0x00 ; '.'
00000000002100e6         db  0x00 ; '.'
00000000002100e7         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
00000000002100e8         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
00000000002100e9         db  0x00 ; '.'
00000000002100ea         db  0x00 ; '.'
00000000002100eb         db  0x00 ; '.'
00000000002100ec         db  0x00 ; '.'
00000000002100ed         db  0x00 ; '.'
00000000002100ee         db  0x00 ; '.'
00000000002100ef         db  0x00 ; '.'
00000000002100f0         db  0x00 ; '.'
00000000002100f1         db  0x00 ; '.'
00000000002100f2         db  0x00 ; '.'
00000000002100f3         db  0x00 ; '.'
00000000002100f4         db  0x00 ; '.'
00000000002100f5         db  0x00 ; '.'
00000000002100f6         db  0x00 ; '.'
00000000002100f7         db  0x00 ; '.'
00000000002100f8         db  0x00 ; '.'
00000000002100f9         db  0x00 ; '.'
00000000002100fa         db  0x00 ; '.'
00000000002100fb         db  0x00 ; '.'
00000000002100fc         db  0x00 ; '.'
00000000002100fd         db  0x00 ; '.'
00000000002100fe         db  0x00 ; '.'
00000000002100ff         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
0000000000210100         db  0x00 ; '.'                                         ; DATA XREF=do_link+2489, usage+61, close_stdout+44, set_program_name+125, argmatch_valid+37, argmatch_valid+95, argmatch_valid+174, argmatch_valid+216
0000000000210101         db  0x00 ; '.'
0000000000210102         db  0x00 ; '.'
0000000000210103         db  0x00 ; '.'
0000000000210104         db  0x00 ; '.'
0000000000210105         db  0x00 ; '.'
0000000000210106         db  0x00 ; '.'
0000000000210107         db  0x00 ; '.'
                     completed.7697:
0000000000210108         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
0000000000210109         db  0x00 ; '.'
000000000021010a         db  0x00 ; '.'
000000000021010b         db  0x00 ; '.'
000000000021010c         db  0x00 ; '.'
000000000021010d         db  0x00 ; '.'
000000000021010e         db  0x00 ; '.'
000000000021010f         db  0x00 ; '.'
                     dest_set:
0000000000210110         db  0x00 ; '.'                                         ; DATA XREF=main+1090, do_link+95, do_link+166, do_link+999
0000000000210111         db  0x00 ; '.'
0000000000210112         db  0x00 ; '.'
0000000000210113         db  0x00 ; '.'
0000000000210114         db  0x00 ; '.'
0000000000210115         db  0x00 ; '.'
0000000000210116         db  0x00 ; '.'
0000000000210117         db  0x00 ; '.'
                     beware_hard_dir_link:
0000000000210118         db  0x00 ; '.'                                         ; DATA XREF=main+883, atomic_link+48
                     hard_dir_link:
0000000000210119         db  0x00 ; '.'                                         ; DATA XREF=main+126, main+800, main+874, do_link+1817
                     verbose:
000000000021011a         db  0x00 ; '.'                                         ; DATA XREF=main+133, main+275, do_link+184, do_link+1488
                     remove_existing_files:
000000000021011b         db  0x00 ; '.'                                         ; DATA XREF=main+147, main+372, main+720, main+1019, do_link+470, do_link+1042
                     interactive:
000000000021011c         db  0x00 ; '.'                                         ; DATA XREF=main+140, main+379, main+727, do_link+483, do_link+2064
                     logical:
000000000021011d         db  0x00 ; '.'                                         ; DATA XREF=main+330, main+704, atomic_link+60, do_link+54, do_link+534
                     relative:
000000000021011e         db  0x00 ; '.'                                         ; DATA XREF=main+514, main+852, atomic_link+13, do_link+449
                     symbolic_link:
000000000021011f         db  0x00 ; '.'                                         ; DATA XREF=main+154, main+784, main+861, main+1032, atomic_link+4, do_link+81, do_link+284, do_link+518, do_link+626, do_link+1054, do_link+2662
                     backup_type:
0000000000210120         db  0x00 ; '.'                                         ; DATA XREF=main+984, main+1045, main+1150, main+1521, do_link+496, do_link+1035, do_link+2081
0000000000210121         db  0x00 ; '.'
0000000000210122         db  0x00 ; '.'
0000000000210123         db  0x00 ; '.'
0000000000210124         db  0x00 ; '.'
0000000000210125         db  0x00 ; '.'
0000000000210126         db  0x00 ; '.'
0000000000210127         db  0x00 ; '.'
                     simple_backup_suffix:
0000000000210128         db  0x00 ; '.'                                         ; DATA XREF=set_simple_backup_suffix+21, backupfile_internal+72, backupfile_internal+970, backupfile_internal+1009, backupfile_internal+1513
0000000000210129         db  0x00 ; '.'
000000000021012a         db  0x00 ; '.'
000000000021012b         db  0x00 ; '.'
000000000021012c         db  0x00 ; '.'
000000000021012d         db  0x00 ; '.'
000000000021012e         db  0x00 ; '.'
000000000021012f         db  0x00 ; '.'
                     file_name:
0000000000210130         db  0x00 ; '.'                                         ; DATA XREF=close_stdin_set_file_name, close_stdin+107
0000000000210131         db  0x00 ; '.'
0000000000210132         db  0x00 ; '.'
0000000000210133         db  0x00 ; '.'
0000000000210134         db  0x00 ; '.'
0000000000210135         db  0x00 ; '.'
0000000000210136         db  0x00 ; '.'
0000000000210137         db  0x00 ; '.'
                     ignore_EPIPE:
0000000000210138         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
0000000000210139         db  0x00 ; '.'
000000000021013a         db  0x00 ; '.'
000000000021013b         db  0x00 ; '.'
000000000021013c         db  0x00 ; '.'
000000000021013d         db  0x00 ; '.'
000000000021013e         db  0x00 ; '.'
000000000021013f         db  0x00 ; '.'
                     file_name_210140:        // file_name
0000000000210140         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
0000000000210141         db  0x00 ; '.'
0000000000210142         db  0x00 ; '.'
0000000000210143         db  0x00 ; '.'
0000000000210144         db  0x00 ; '.'
0000000000210145         db  0x00 ; '.'
0000000000210146         db  0x00 ; '.'
0000000000210147         db  0x00 ; '.'
                     program_name:
0000000000210148         db  0x00 ; '.'                                         ; DATA XREF=do_link+2450, usage+20, set_program_name+109
0000000000210149         db  0x00 ; '.'
000000000021014a         db  0x00 ; '.'
000000000021014b         db  0x00 ; '.'
000000000021014c         db  0x00 ; '.'
000000000021014d         db  0x00 ; '.'
000000000021014e         db  0x00 ; '.'
000000000021014f         db  0x00 ; '.'
0000000000210150         db  0x00 ; '.'
0000000000210151         db  0x00 ; '.'
0000000000210152         db  0x00 ; '.'
0000000000210153         db  0x00 ; '.'
0000000000210154         db  0x00 ; '.'
0000000000210155         db  0x00 ; '.'
0000000000210156         db  0x00 ; '.'
0000000000210157         db  0x00 ; '.'
0000000000210158         db  0x00 ; '.'
0000000000210159         db  0x00 ; '.'
000000000021015a         db  0x00 ; '.'
000000000021015b         db  0x00 ; '.'
000000000021015c         db  0x00 ; '.'
000000000021015d         db  0x00 ; '.'
000000000021015e         db  0x00 ; '.'
000000000021015f         db  0x00 ; '.'
                     slot0:
0000000000210160         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
0000000000210161         db  0x00 ; '.'
0000000000210162         db  0x00 ; '.'
0000000000210163         db  0x00 ; '.'
0000000000210164         db  0x00 ; '.'
0000000000210165         db  0x00 ; '.'
0000000000210166         db  0x00 ; '.'
0000000000210167         db  0x00 ; '.'
0000000000210168         db  0x00 ; '.'
0000000000210169         db  0x00 ; '.'
000000000021016a         db  0x00 ; '.'
000000000021016b         db  0x00 ; '.'
000000000021016c         db  0x00 ; '.'
000000000021016d         db  0x00 ; '.'
000000000021016e         db  0x00 ; '.'
000000000021016f         db  0x00 ; '.'
0000000000210170         db  0x00 ; '.'
0000000000210171         db  0x00 ; '.'
0000000000210172         db  0x00 ; '.'
0000000000210173         db  0x00 ; '.'
0000000000210174         db  0x00 ; '.'
0000000000210175         db  0x00 ; '.'
0000000000210176         db  0x00 ; '.'
0000000000210177         db  0x00 ; '.'
0000000000210178         db  0x00 ; '.'
0000000000210179         db  0x00 ; '.'
000000000021017a         db  0x00 ; '.'
000000000021017b         db  0x00 ; '.'
000000000021017c         db  0x00 ; '.'
000000000021017d         db  0x00 ; '.'
000000000021017e         db  0x00 ; '.'
000000000021017f         db  0x00 ; '.'
0000000000210180         db  0x00 ; '.'
0000000000210181         db  0x00 ; '.'
0000000000210182         db  0x00 ; '.'
0000000000210183         db  0x00 ; '.'
0000000000210184         db  0x00 ; '.'
0000000000210185         db  0x00 ; '.'
0000000000210186         db  0x00 ; '.'
0000000000210187         db  0x00 ; '.'
0000000000210188         db  0x00 ; '.'
0000000000210189         db  0x00 ; '.'
000000000021018a         db  0x00 ; '.'
000000000021018b         db  0x00 ; '.'
000000000021018c         db  0x00 ; '.'
000000000021018d         db  0x00 ; '.'
000000000021018e         db  0x00 ; '.'
000000000021018f         db  0x00 ; '.'
0000000000210190         db  0x00 ; '.'
0000000000210191         db  0x00 ; '.'
0000000000210192         db  0x00 ; '.'
0000000000210193         db  0x00 ; '.'
0000000000210194         db  0x00 ; '.'
0000000000210195         db  0x00 ; '.'
0000000000210196         db  0x00 ; '.'
0000000000210197         db  0x00 ; '.'
0000000000210198         db  0x00 ; '.'
0000000000210199         db  0x00 ; '.'
000000000021019a         db  0x00 ; '.'
000000000021019b         db  0x00 ; '.'
000000000021019c         db  0x00 ; '.'
000000000021019d         db  0x00 ; '.'
000000000021019e         db  0x00 ; '.'
000000000021019f         db  0x00 ; '.'
00000000002101a0         db  0x00 ; '.'
00000000002101a1         db  0x00 ; '.'
00000000002101a2         db  0x00 ; '.'
00000000002101a3         db  0x00 ; '.'
00000000002101a4         db  0x00 ; '.'
00000000002101a5         db  0x00 ; '.'
00000000002101a6         db  0x00 ; '.'
00000000002101a7         db  0x00 ; '.'
00000000002101a8         db  0x00 ; '.'
00000000002101a9         db  0x00 ; '.'
00000000002101aa         db  0x00 ; '.'
00000000002101ab         db  0x00 ; '.'
00000000002101ac         db  0x00 ; '.'
00000000002101ad         db  0x00 ; '.'
00000000002101ae         db  0x00 ; '.'
00000000002101af         db  0x00 ; '.'
00000000002101b0         db  0x00 ; '.'
00000000002101b1         db  0x00 ; '.'
00000000002101b2         db  0x00 ; '.'
00000000002101b3         db  0x00 ; '.'
00000000002101b4         db  0x00 ; '.'
00000000002101b5         db  0x00 ; '.'
00000000002101b6         db  0x00 ; '.'
00000000002101b7         db  0x00 ; '.'
00000000002101b8         db  0x00 ; '.'
00000000002101b9         db  0x00 ; '.'
00000000002101ba         db  0x00 ; '.'
00000000002101bb         db  0x00 ; '.'
00000000002101bc         db  0x00 ; '.'
00000000002101bd         db  0x00 ; '.'
00000000002101be         db  0x00 ; '.'
00000000002101bf         db  0x00 ; '.'
00000000002101c0         db  0x00 ; '.'
00000000002101c1         db  0x00 ; '.'
00000000002101c2         db  0x00 ; '.'
00000000002101c3         db  0x00 ; '.'
00000000002101c4         db  0x00 ; '.'
00000000002101c5         db  0x00 ; '.'
00000000002101c6         db  0x00 ; '.'
00000000002101c7         db  0x00 ; '.'
00000000002101c8         db  0x00 ; '.'
00000000002101c9         db  0x00 ; '.'
00000000002101ca         db  0x00 ; '.'
00000000002101cb         db  0x00 ; '.'
00000000002101cc         db  0x00 ; '.'
00000000002101cd         db  0x00 ; '.'
00000000002101ce         db  0x00 ; '.'
00000000002101cf         db  0x00 ; '.'
00000000002101d0         db  0x00 ; '.'
00000000002101d1         db  0x00 ; '.'
00000000002101d2         db  0x00 ; '.'
00000000002101d3         db  0x00 ; '.'
00000000002101d4         db  0x00 ; '.'
00000000002101d5         db  0x00 ; '.'
00000000002101d6         db  0x00 ; '.'
00000000002101d7         db  0x00 ; '.'
00000000002101d8         db  0x00 ; '.'
00000000002101d9         db  0x00 ; '.'
00000000002101da         db  0x00 ; '.'
00000000002101db         db  0x00 ; '.'
00000000002101dc         db  0x00 ; '.'
00000000002101dd         db  0x00 ; '.'
00000000002101de         db  0x00 ; '.'
00000000002101df         db  0x00 ; '.'
00000000002101e0         db  0x00 ; '.'
00000000002101e1         db  0x00 ; '.'
00000000002101e2         db  0x00 ; '.'
00000000002101e3         db  0x00 ; '.'
00000000002101e4         db  0x00 ; '.'
00000000002101e5         db  0x00 ; '.'
00000000002101e6         db  0x00 ; '.'
00000000002101e7         db  0x00 ; '.'
00000000002101e8         db  0x00 ; '.'
00000000002101e9         db  0x00 ; '.'
00000000002101ea         db  0x00 ; '.'
00000000002101eb         db  0x00 ; '.'
00000000002101ec         db  0x00 ; '.'
00000000002101ed         db  0x00 ; '.'
00000000002101ee         db  0x00 ; '.'
00000000002101ef         db  0x00 ; '.'
00000000002101f0         db  0x00 ; '.'
00000000002101f1         db  0x00 ; '.'
00000000002101f2         db  0x00 ; '.'
00000000002101f3         db  0x00 ; '.'
00000000002101f4         db  0x00 ; '.'
00000000002101f5         db  0x00 ; '.'
00000000002101f6         db  0x00 ; '.'
00000000002101f7         db  0x00 ; '.'
00000000002101f8         db  0x00 ; '.'
00000000002101f9         db  0x00 ; '.'
00000000002101fa         db  0x00 ; '.'
00000000002101fb         db  0x00 ; '.'
00000000002101fc         db  0x00 ; '.'
00000000002101fd         db  0x00 ; '.'
00000000002101fe         db  0x00 ; '.'
00000000002101ff         db  0x00 ; '.'
0000000000210200         db  0x00 ; '.'
0000000000210201         db  0x00 ; '.'
0000000000210202         db  0x00 ; '.'
0000000000210203         db  0x00 ; '.'
0000000000210204         db  0x00 ; '.'
0000000000210205         db  0x00 ; '.'
0000000000210206         db  0x00 ; '.'
0000000000210207         db  0x00 ; '.'
0000000000210208         db  0x00 ; '.'
0000000000210209         db  0x00 ; '.'
000000000021020a         db  0x00 ; '.'
000000000021020b         db  0x00 ; '.'
000000000021020c         db  0x00 ; '.'
000000000021020d         db  0x00 ; '.'
000000000021020e         db  0x00 ; '.'
000000000021020f         db  0x00 ; '.'
0000000000210210         db  0x00 ; '.'
0000000000210211         db  0x00 ; '.'
0000000000210212         db  0x00 ; '.'
0000000000210213         db  0x00 ; '.'
0000000000210214         db  0x00 ; '.'
0000000000210215         db  0x00 ; '.'
0000000000210216         db  0x00 ; '.'
0000000000210217         db  0x00 ; '.'
0000000000210218         db  0x00 ; '.'
0000000000210219         db  0x00 ; '.'
000000000021021a         db  0x00 ; '.'
000000000021021b         db  0x00 ; '.'
000000000021021c         db  0x00 ; '.'
000000000021021d         db  0x00 ; '.'
000000000021021e         db  0x00 ; '.'
000000000021021f         db  0x00 ; '.'
0000000000210220         db  0x00 ; '.'
0000000000210221         db  0x00 ; '.'
0000000000210222         db  0x00 ; '.'
0000000000210223         db  0x00 ; '.'
0000000000210224         db  0x00 ; '.'
0000000000210225         db  0x00 ; '.'
0000000000210226         db  0x00 ; '.'
0000000000210227         db  0x00 ; '.'
0000000000210228         db  0x00 ; '.'
0000000000210229         db  0x00 ; '.'
000000000021022a         db  0x00 ; '.'
000000000021022b         db  0x00 ; '.'
000000000021022c         db  0x00 ; '.'
000000000021022d         db  0x00 ; '.'
000000000021022e         db  0x00 ; '.'
000000000021022f         db  0x00 ; '.'
0000000000210230         db  0x00 ; '.'
0000000000210231         db  0x00 ; '.'
0000000000210232         db  0x00 ; '.'
0000000000210233         db  0x00 ; '.'
0000000000210234         db  0x00 ; '.'
0000000000210235         db  0x00 ; '.'
0000000000210236         db  0x00 ; '.'
0000000000210237         db  0x00 ; '.'
0000000000210238         db  0x00 ; '.'
0000000000210239         db  0x00 ; '.'
000000000021023a         db  0x00 ; '.'
000000000021023b         db  0x00 ; '.'
000000000021023c         db  0x00 ; '.'
000000000021023d         db  0x00 ; '.'
000000000021023e         db  0x00 ; '.'
000000000021023f         db  0x00 ; '.'
0000000000210240         db  0x00 ; '.'
0000000000210241         db  0x00 ; '.'
0000000000210242         db  0x00 ; '.'
0000000000210243         db  0x00 ; '.'
0000000000210244         db  0x00 ; '.'
0000000000210245         db  0x00 ; '.'
0000000000210246         db  0x00 ; '.'
0000000000210247         db  0x00 ; '.'
0000000000210248         db  0x00 ; '.'
0000000000210249         db  0x00 ; '.'
000000000021024a         db  0x00 ; '.'
000000000021024b         db  0x00 ; '.'
000000000021024c         db  0x00 ; '.'
000000000021024d         db  0x00 ; '.'
000000000021024e         db  0x00 ; '.'
000000000021024f         db  0x00 ; '.'
0000000000210250         db  0x00 ; '.'
0000000000210251         db  0x00 ; '.'
0000000000210252         db  0x00 ; '.'
0000000000210253         db  0x00 ; '.'
0000000000210254         db  0x00 ; '.'
0000000000210255         db  0x00 ; '.'
0000000000210256         db  0x00 ; '.'
0000000000210257         db  0x00 ; '.'
0000000000210258         db  0x00 ; '.'
0000000000210259         db  0x00 ; '.'
000000000021025a         db  0x00 ; '.'
000000000021025b         db  0x00 ; '.'
000000000021025c         db  0x00 ; '.'
000000000021025d         db  0x00 ; '.'
000000000021025e         db  0x00 ; '.'
000000000021025f         db  0x00 ; '.'
                     default_quoting_options:
0000000000210260         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
0000000000210261         db  0x00 ; '.'
0000000000210262         db  0x00 ; '.'
0000000000210263         db  0x00 ; '.'
0000000000210264         db  0x00 ; '.'
0000000000210265         db  0x00 ; '.'
0000000000210266         db  0x00 ; '.'
0000000000210267         db  0x00 ; '.'
0000000000210268         db  0x00 ; '.'
0000000000210269         db  0x00 ; '.'
000000000021026a         db  0x00 ; '.'
000000000021026b         db  0x00 ; '.'
000000000021026c         db  0x00 ; '.'
000000000021026d         db  0x00 ; '.'
000000000021026e         db  0x00 ; '.'
000000000021026f         db  0x00 ; '.'
0000000000210270         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
0000000000210271         db  0x00 ; '.'
0000000000210272         db  0x00 ; '.'
0000000000210273         db  0x00 ; '.'
0000000000210274         db  0x00 ; '.'
0000000000210275         db  0x00 ; '.'
0000000000210276         db  0x00 ; '.'
0000000000210277         db  0x00 ; '.'
0000000000210278         db  0x00 ; '.'
0000000000210279         db  0x00 ; '.'
000000000021027a         db  0x00 ; '.'
000000000021027b         db  0x00 ; '.'
000000000021027c         db  0x00 ; '.'
000000000021027d         db  0x00 ; '.'
000000000021027e         db  0x00 ; '.'
000000000021027f         db  0x00 ; '.'
0000000000210280         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
0000000000210281         db  0x00 ; '.'
0000000000210282         db  0x00 ; '.'
0000000000210283         db  0x00 ; '.'
0000000000210284         db  0x00 ; '.'
0000000000210285         db  0x00 ; '.'
0000000000210286         db  0x00 ; '.'
0000000000210287         db  0x00 ; '.'
0000000000210288         db  0x00 ; '.'
0000000000210289         db  0x00 ; '.'
000000000021028a         db  0x00 ; '.'
000000000021028b         db  0x00 ; '.'
000000000021028c         db  0x00 ; '.'
000000000021028d         db  0x00 ; '.'
000000000021028e         db  0x00 ; '.'
000000000021028f         db  0x00 ; '.'
                     qword_210290:
0000000000210290         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
0000000000210291         db  0x00 ; '.'
0000000000210292         db  0x00 ; '.'
0000000000210293         db  0x00 ; '.'
0000000000210294         db  0x00 ; '.'
0000000000210295         db  0x00 ; '.'
0000000000210296         db  0x00 ; '.'
0000000000210297         db  0x00 ; '.'
                     have_dupfd_cloexec.3326:
0000000000210298         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+94, rpl_fcntl+143, rpl_fcntl+438, rpl_fcntl+574
0000000000210299         db  0x00 ; '.'
000000000021029a         db  0x00 ; '.'
000000000021029b         db  0x00 ; '.'
000000000021029c         db  0x00 ; '.'
000000000021029d         db  0x00 ; '.'
000000000021029e         db  0x00 ; '.'
000000000021029f         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x2102b0; 0x210810[ (1376 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x2102b0; 0x420ac0[ (2164752 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     getenv:
00000000002102b0         extern function code                                   ; DATA XREF=getenv@GOT
                     free:
00000000002102b8         extern function code                                   ; DATA XREF=free@GOT
                     abort:
00000000002102c0         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
00000000002102c8         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
00000000002102d0         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
00000000002102d8         extern function code
                     _exit:
00000000002102e0         extern function code                                   ; DATA XREF=_exit@GOT
                     strcpy:
00000000002102e8         extern function code                                   ; DATA XREF=strcpy@GOT
                     __fpending:
00000000002102f0         extern function code                                   ; DATA XREF=__fpending@GOT
                     __read_chk:
00000000002102f8         extern function code                                   ; DATA XREF=__read_chk@GOT
                     mkdir:
0000000000210300         extern function code                                   ; DATA XREF=mkdir@GOT
                     unlinkat:
0000000000210308         extern function code                                   ; DATA XREF=unlinkat@GOT
                     readlink:
0000000000210310         extern function code                                   ; DATA XREF=readlink@GOT
                     fcntl:
0000000000210318         extern function code                                   ; DATA XREF=fcntl@GOT
                     getpid:
0000000000210320         extern function code                                   ; DATA XREF=getpid@GOT
                     fread_unlocked:
0000000000210328         extern function code                                   ; DATA XREF=fread_unlocked@GOT
                     textdomain:
0000000000210330         extern function code                                   ; DATA XREF=textdomain@GOT
                     pathconf:
0000000000210338         extern function code                                   ; DATA XREF=pathconf@GOT
                     fclose:
0000000000210340         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
0000000000210348         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
0000000000210350         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
0000000000210358         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
0000000000210360         extern function code                                   ; DATA XREF=strlen@GOT
                     __lxstat:
0000000000210368         extern function code                                   ; DATA XREF=__lxstat@GOT
                     openat:
0000000000210370         extern function code                                   ; DATA XREF=openat@GOT
                     __stack_chk_fail:
0000000000210378         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getuid:
0000000000210380         extern function code                                   ; DATA XREF=getuid@GOT
                     getopt_long:
0000000000210388         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
0000000000210390         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     __fxstatat:
0000000000210398         extern function code                                   ; DATA XREF=__fxstatat@GOT
                     __overflow:
00000000002103a0         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
00000000002103a8         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
00000000002103b0         extern function code                                   ; DATA XREF=lseek@GOT
                     gettimeofday:
00000000002103b8         extern function code                                   ; DATA XREF=gettimeofday@GOT
                     __assert_fail:
00000000002103c0         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     memset:
00000000002103c8         extern function code                                   ; DATA XREF=memset@GOT
                     getcwd:
00000000002103d0         extern function code                                   ; DATA XREF=getcwd@GOT
                     close:
00000000002103d8         extern function code                                   ; DATA XREF=close@GOT
                     rewinddir:
00000000002103e0         extern function code                                   ; DATA XREF=rewinddir@GOT
                     strspn:
00000000002103e8         extern function code                                   ; DATA XREF=strspn@GOT
                     closedir:
00000000002103f0         extern function code                                   ; DATA XREF=closedir@GOT
                     __libc_start_main:
00000000002103f8         extern function code
                     memcmp:
0000000000210400         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
0000000000210408         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
0000000000210410         extern function code                                   ; DATA XREF=calloc@GOT
                     __getdelim:
0000000000210418         extern function code                                   ; DATA XREF=__getdelim@GOT
                     strcmp:
0000000000210420         extern function code                                   ; DATA XREF=strcmp@GOT
                     fpathconf:
0000000000210428         extern function code                                   ; DATA XREF=fpathconf@GOT
                     rpmatch:
0000000000210430         extern function code                                   ; DATA XREF=rpmatch@GOT
                     syscall:
0000000000210438         extern function code                                   ; DATA XREF=syscall@GOT
                     __gmon_start__:
0000000000210440         extern function code
                     memcpy:
0000000000210448         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
0000000000210450         extern function code                                   ; DATA XREF=fileno@GOT
                     getgid:
0000000000210458         extern function code                                   ; DATA XREF=getgid@GOT
                     __xstat:
0000000000210460         extern function code                                   ; DATA XREF=__xstat@GOT
                     readdir:
0000000000210468         extern function code                                   ; DATA XREF=readdir@GOT
                     malloc:
0000000000210470         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
0000000000210478         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
0000000000210480         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __freading:
0000000000210488         extern function code                                   ; DATA XREF=__freading@GOT
                     realloc:
0000000000210490         extern function code                                   ; DATA XREF=realloc@GOT
                     fdopen:
0000000000210498         extern function code                                   ; DATA XREF=fdopen@GOT
                     linkat:
00000000002104a0         extern function code                                   ; DATA XREF=linkat@GOT
                     setlocale:
00000000002104a8         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
00000000002104b0         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     setvbuf:
00000000002104b8         extern function code                                   ; DATA XREF=setvbuf@GOT
                     mempcpy:
00000000002104c0         extern function code                                   ; DATA XREF=mempcpy@GOT
                     memmove:
00000000002104c8         extern function code                                   ; DATA XREF=memmove@GOT
                     error:
00000000002104d0         extern function code                                   ; DATA XREF=error@GOT
                     __explicit_bzero_chk:
00000000002104d8         extern function code                                   ; DATA XREF=__explicit_bzero_chk@GOT
                     open:
00000000002104e0         extern function code                                   ; DATA XREF=open@GOT
                     fseeko:
00000000002104e8         extern function code                                   ; DATA XREF=fseeko@GOT
                     fopen:
00000000002104f0         extern function code                                   ; DATA XREF=fopen@GOT
                     fdopendir:
00000000002104f8         extern function code                                   ; DATA XREF=fdopendir@GOT
                     __cxa_atexit:
0000000000210500         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     renameat:
0000000000210508         extern function code                                   ; DATA XREF=renameat@GOT
                     getppid:
0000000000210510         extern function code                                   ; DATA XREF=getppid@GOT
                     exit:
0000000000210518         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
0000000000210520         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
0000000000210528         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
0000000000210530         extern function code
                     mbsinit:
0000000000210538         extern function code                                   ; DATA XREF=mbsinit@GOT
                     symlinkat:
0000000000210540         extern function code                                   ; DATA XREF=symlinkat@GOT
                     iswprint:
0000000000210548         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
0000000000210550         extern function code
                     __ctype_b_loc:
0000000000210558         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     getenv@@GLIBC_2.2.5:
0000000000210560         extern function code
                     free@@GLIBC_2.2.5:
0000000000210568         extern function code
                     abort@@GLIBC_2.2.5:
0000000000210570         extern function code
                     __errno_location@@GLIBC_2.2.5:
0000000000210578         extern function code
                     strncmp@@GLIBC_2.2.5:
0000000000210580         extern function code
                     _ITM_deregisterTMCloneTable_210588:        // _ITM_deregisterTMCloneTable
0000000000210588         extern function code
                     _exit@@GLIBC_2.2.5:
0000000000210590         extern function code
                     strcpy@@GLIBC_2.2.5:
0000000000210598         extern function code
                     __fpending@@GLIBC_2.2.5:
00000000002105a0         extern function code
                     __read_chk@@GLIBC_2.4:
00000000002105a8         extern function code
                     mkdir@@GLIBC_2.2.5:
00000000002105b0         extern function code
                     unlinkat@@GLIBC_2.4:
00000000002105b8         extern function code
                     readlink@@GLIBC_2.2.5:
00000000002105c0         extern function code
                     fcntl@@GLIBC_2.2.5:
00000000002105c8         extern function code
                     getpid@@GLIBC_2.2.5:
00000000002105d0         extern function code
                     fread_unlocked@@GLIBC_2.2.5:
00000000002105d8         extern function code
                     textdomain@@GLIBC_2.2.5:
00000000002105e0         extern function code
                     pathconf@@GLIBC_2.2.5:
00000000002105e8         extern function code
                     fclose@@GLIBC_2.2.5:
00000000002105f0         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
00000000002105f8         extern function code
                     dcgettext@@GLIBC_2.2.5:
0000000000210600         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
0000000000210608         extern function code
                     strlen@@GLIBC_2.2.5:
0000000000210610         extern function code
                     __lxstat@@GLIBC_2.2.5:
0000000000210618         extern function code
                     openat@@GLIBC_2.4:
0000000000210620         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
0000000000210628         extern function code
                     getuid@@GLIBC_2.2.5:
0000000000210630         extern function code
                     getopt_long@@GLIBC_2.2.5:
0000000000210638         extern function code
                     mbrtowc@@GLIBC_2.2.5:
0000000000210640         extern function code
                     __fxstatat@@GLIBC_2.4:
0000000000210648         extern function code
                     __overflow@@GLIBC_2.2.5:
0000000000210650         extern function code
                     strrchr@@GLIBC_2.2.5:
0000000000210658         extern function code
                     lseek@@GLIBC_2.2.5:
0000000000210660         extern function code
                     gettimeofday@@GLIBC_2.2.5:
0000000000210668         extern function code
                     __assert_fail@@GLIBC_2.2.5:
0000000000210670         extern function code
                     memset@@GLIBC_2.2.5:
0000000000210678         extern function code
                     getcwd@@GLIBC_2.2.5:
0000000000210680         extern function code
                     close@@GLIBC_2.2.5:
0000000000210688         extern function code
                     rewinddir@@GLIBC_2.2.5:
0000000000210690         extern function code
                     strspn@@GLIBC_2.2.5:
0000000000210698         extern function code
                     closedir@@GLIBC_2.2.5:
00000000002106a0         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
00000000002106a8         extern function code
                     memcmp@@GLIBC_2.2.5:
00000000002106b0         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
00000000002106b8         extern function code
                     calloc@@GLIBC_2.2.5:
00000000002106c0         extern function code
                     __getdelim@@GLIBC_2.2.5:
00000000002106c8         extern function code
                     strcmp@@GLIBC_2.2.5:
00000000002106d0         extern function code
                     fpathconf@@GLIBC_2.2.5:
00000000002106d8         extern function code
                     rpmatch@@GLIBC_2.2.5:
00000000002106e0         extern function code
                     syscall@@GLIBC_2.2.5:
00000000002106e8         extern function code
                     __gmon_start___2106f0:        // __gmon_start__
00000000002106f0         extern function code
                     memcpy@@GLIBC_2.14:
00000000002106f8         extern function code
                     fileno@@GLIBC_2.2.5:
0000000000210700         extern function code
                     getgid@@GLIBC_2.2.5:
0000000000210708         extern function code
                     __xstat@@GLIBC_2.2.5:
0000000000210710         extern function code
                     readdir@@GLIBC_2.2.5:
0000000000210718         extern function code
                     malloc@@GLIBC_2.2.5:
0000000000210720         extern function code
                     fflush@@GLIBC_2.2.5:
0000000000210728         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
0000000000210730         extern function code
                     __freading@@GLIBC_2.2.5:
0000000000210738         extern function code
                     realloc@@GLIBC_2.2.5:
0000000000210740         extern function code
                     fdopen@@GLIBC_2.2.5:
0000000000210748         extern function code
                     linkat@@GLIBC_2.4:
0000000000210750         extern function code
                     setlocale@@GLIBC_2.2.5:
0000000000210758         extern function code
                     __printf_chk@@GLIBC_2.3.4:
0000000000210760         extern function code
                     setvbuf@@GLIBC_2.2.5:
0000000000210768         extern function code
                     mempcpy@@GLIBC_2.2.5:
0000000000210770         extern function code
                     memmove@@GLIBC_2.2.5:
0000000000210778         extern function code
                     error@@GLIBC_2.2.5:
0000000000210780         extern function code
                     __explicit_bzero_chk@@GLIBC_2.25:
0000000000210788         extern function code
                     open@@GLIBC_2.2.5:
0000000000210790         extern function code
                     fseeko@@GLIBC_2.2.5:
0000000000210798         extern function code
                     fopen@@GLIBC_2.2.5:
00000000002107a0         extern function code
                     fdopendir@@GLIBC_2.4:
00000000002107a8         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
00000000002107b0         extern function code
                     renameat@@GLIBC_2.4:
00000000002107b8         extern function code
                     getppid@@GLIBC_2.2.5:
00000000002107c0         extern function code
                     exit@@GLIBC_2.2.5:
00000000002107c8         extern function code
                     fwrite@@GLIBC_2.2.5:
00000000002107d0         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
00000000002107d8         extern function code
                     _ITM_registerTMCloneTable_2107e0:        // _ITM_registerTMCloneTable
00000000002107e0         extern function code
                     mbsinit@@GLIBC_2.2.5:
00000000002107e8         extern function code
                     symlinkat@@GLIBC_2.4:
00000000002107f0         extern function code
                     iswprint@@GLIBC_2.2.5:
00000000002107f8         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
0000000000210800         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
0000000000210808         extern function code
