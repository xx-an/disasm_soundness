
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/paste
        UUID: 19547F16-E37D-202D-94A4-780444E8484A
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x6d18[ (27928 bytes)
        ; File offset : [0; 27928[ (27928 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0xb0 ; '.'
0000000000000019         db  0x19 ; '.'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x00 ; '.'
0000000000000029         db  0x64 ; 'd'
000000000000002a         db  0x02 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x18 ; '.'
00000000000000d1         db  0x6d ; 'm'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x18 ; '.'
00000000000000d9         db  0x6d ; 'm'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x30 ; '0'
00000000000000f1         db  0x7b ; '{'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x30 ; '0'
00000000000000f9         db  0x7b ; '{'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x30 ; '0'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0x7b ; '{'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x70 ; 'p'
0000000000000109         db  0x05 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x28 ; '('
0000000000000111         db  0x07 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x58 ; 'X'
0000000000000129         db  0x7c ; '|'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x58 ; 'X'
0000000000000131         db  0x7c ; '|'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x58 ; 'X'
0000000000000139         db  0x7c ; '|'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0x30 ; '0'
0000000000000199         db  0x5f ; '_'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0x30 ; '0'
00000000000001a1         db  0x5f ; '_'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0x30 ; '0'
00000000000001a9         db  0x5f ; '_'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0x64 ; 'd'
00000000000001b1         db  0x02 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0x64 ; 'd'
00000000000001b9         db  0x02 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x30 ; '0'
0000000000000209         db  0x7b ; '{'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x30 ; '0'
0000000000000211         db  0x7b ; '{'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x30 ; '0'
0000000000000219         db  0x7b ; '{'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0xd0 ; '.'
0000000000000221         db  0x04 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0xd0 ; '.'
0000000000000229         db  0x04 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0x19 ; '.'
0000000000000285         db  0x54 ; 'T'
0000000000000286         db  0x7f ; '.'
0000000000000287         db  0x16 ; '.'
0000000000000288         db  0xe3 ; '.'
0000000000000289         db  0x7d ; '}'
000000000000028a         db  0x20 ; ' '
000000000000028b         db  0x2d ; '-'
000000000000028c         db  0x94 ; '.'
000000000000028d         db  0xa4 ; '.'
000000000000028e         db  0x78 ; 'x'
000000000000028f         db  0x04 ; '.'
0000000000000290         db  0x44 ; 'D'
0000000000000291         db  0xe8 ; '.'
0000000000000292         db  0x48 ; 'H'
0000000000000293         db  0x4a ; 'J'
0000000000000294         db  0x80 ; '.'
0000000000000295         db  0x14 ; '.'
0000000000000296         db  0x94 ; '.'
0000000000000297         db  0x98 ; '.'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2e0[ (72 bytes)
        ; File offset : [664; 736[ (72 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x33 ; '3'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x61 ; 'a'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0xa0 ; '.'
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x33 ; '3'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x34 ; '4'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x3a ; ':'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x66 ; 'f'
00000000000002c5         db  0x55 ; 'U'
00000000000002c6         db  0x61 ; 'a'
00000000000002c7         db  0x10 ; '.'
00000000000002c8         db  0x96 ; '.'
00000000000002c9         db  0xa0 ; '.'
00000000000002ca         db  0x89 ; '.'
00000000000002cb         db  0x97 ; '.'
00000000000002cc         db  0xce ; '.'
00000000000002cd         db  0x2c ; ','
00000000000002ce         db  0x63 ; 'c'
00000000000002cf         db  0x72 ; 'r'
00000000000002d0         db  0xe4 ; '.'
00000000000002d1         db  0x62 ; 'b'
00000000000002d2         db  0x41 ; 'A'
00000000000002d3         db  0xf5 ; '.'
00000000000002d4         db  0x39 ; '9'
00000000000002d5         db  0xf2 ; '.'
00000000000002d6         db  0x8b ; '.'
00000000000002d7         db  0x1c ; '.'
00000000000002d8         db  0x32 ; '2'
00000000000002d9         db  0xc4 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0xb3 ; '.'
00000000000002dd         db  0xa2 ; '.'
00000000000002de         db  0xf7 ; '.'
00000000000002df         db  0x12 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0x880[ (1440 bytes)
        ; File offset : [736; 2176[ (1440 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x46 ; 'F'
00000000000002f9         db  0x01 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x25 ; '%'
0000000000000311         db  0x02 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x92 ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0xf6 ; '.'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x49 ; 'I'
0000000000000359         db  0x00 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x12 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x89 ; '.'
0000000000000371         db  0x02 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x20 ; ' '
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x9e ; '.'
0000000000000389         db  0x00 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0x9b ; '.'
00000000000003a1         db  0x01 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0x1f ; '.'
00000000000003b9         db  0x00 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0xd7 ; '.'
00000000000003d1         db  0x01 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x30 ; '0'
00000000000003e9         db  0x01 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0xd3 ; '.'
0000000000000401         db  0x01 ; '.'
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x60 ; '`'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0xbc ; '.'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0xe8 ; '.'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x70 ; 'p'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x81 ; '.'
0000000000000479         db  0x01 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x3b ; ';'
0000000000000491         db  0x00 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x0b ; '.'
00000000000004a9         db  0x02 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x58 ; 'X'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x23 ; '#'
00000000000004d9         db  0x01 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0xef ; '.'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0xd3 ; '.'
0000000000000509         db  0x00 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0xf2 ; '.'
0000000000000521         db  0x01 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0x07 ; '.'
0000000000000539         db  0x01 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x16 ; '.'
0000000000000551         db  0x02 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0xe1 ; '.'
0000000000000569         db  0x00 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0xa5 ; '.'
0000000000000581         db  0x02 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x20 ; ' '
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x29 ; ')'
0000000000000599         db  0x01 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x8d ; '.'
00000000000005b1         db  0x01 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x37 ; '7'
00000000000005c9         db  0x01 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x0b ; '.'
00000000000005e1         db  0x00 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x4e ; 'N'
00000000000005f9         db  0x01 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x6f ; 'o'
0000000000000611         db  0x01 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0xe2 ; '.'
0000000000000629         db  0x01 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x8a ; '.'
0000000000000641         db  0x00 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x31 ; '1'
0000000000000659         db  0x00 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x12 ; '.'
0000000000000671         db  0x00 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x6a ; 'j'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x04 ; '.'
00000000000006a1         db  0x02 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x43 ; 'C'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x45 ; 'E'
00000000000006d1         db  0x02 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x9f ; '.'
00000000000006e9         db  0x00 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x94 ; '.'
0000000000000701         db  0x01 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x0e ; '.'
0000000000000719         db  0x01 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0xb4 ; '.'
0000000000000731         db  0x02 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x20 ; ' '
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x3e ; '>'
0000000000000749         db  0x01 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x81 ; '.'
0000000000000761         db  0x00 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0xc4 ; '.'
0000000000000779         db  0x01 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x22 ; '"'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x5a ; 'Z'
0000000000000791         db  0x01 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x1c ; '.'
00000000000007a9         db  0x01 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x11 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x19 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0xa8 ; '.'
00000000000007b1         db  0x80 ; '.'
00000000000007b2         db  0x20 ; ' '
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x08 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x2a ; '*'
00000000000007c1         db  0x02 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x11 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x19 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0xa0 ; '.'
00000000000007c9         db  0x80 ; '.'
00000000000007ca         db  0x20 ; ' '
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x08 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x98 ; '.'
00000000000007d9         db  0x00 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x11 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x19 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0xb0 ; '.'
00000000000007e1         db  0x80 ; '.'
00000000000007e2         db  0x20 ; ' '
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x08 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0xa4 ; '.'
00000000000007f1         db  0x00 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x21 ; '!'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x19 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0xc8 ; '.'
00000000000007f9         db  0x80 ; '.'
00000000000007fa         db  0x20 ; ' '
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x08 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x35 ; '5'
0000000000000809         db  0x02 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x11 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x19 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0xc8 ; '.'
0000000000000811         db  0x80 ; '.'
0000000000000812         db  0x20 ; ' '
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x08 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0xa6 ; '.'
0000000000000821         db  0x01 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x21 ; '!'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x19 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0xa0 ; '.'
0000000000000829         db  0x80 ; '.'
000000000000082a         db  0x20 ; ' '
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x08 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x7a ; 'z'
0000000000000839         db  0x01 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x11 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x19 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0xe0 ; '.'
0000000000000841         db  0x80 ; '.'
0000000000000842         db  0x20 ; ' '
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x08 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x51 ; 'Q'
0000000000000851         db  0x00 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x11 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x19 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0xb8 ; '.'
0000000000000859         db  0x80 ; '.'
000000000000085a         db  0x20 ; ' '
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x04 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x68 ; 'h'
0000000000000869         db  0x01 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x11 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x19 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0xc0 ; '.'
0000000000000871         db  0x80 ; '.'
0000000000000872         db  0x20 ; ' '
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x08 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x880; 0xb4e[ (718 bytes)
        ; File offset : [2176; 2894[ (718 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000000880         db  0x00 ; '.'
0000000000000881         db  0x6c ; 'l'
0000000000000882         db  0x69 ; 'i'
0000000000000883         db  0x62 ; 'b'
0000000000000884         db  0x63 ; 'c'
0000000000000885         db  0x2e ; '.'
0000000000000886         db  0x73 ; 's'
0000000000000887         db  0x6f ; 'o'
0000000000000888         db  0x2e ; '.'
0000000000000889         db  0x36 ; '6'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x66 ; 'f'
000000000000088c         db  0x66 ; 'f'
000000000000088d         db  0x6c ; 'l'
000000000000088e         db  0x75 ; 'u'
000000000000088f         db  0x73 ; 's'
0000000000000890         db  0x68 ; 'h'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x5f ; '_'
0000000000000893         db  0x5f ; '_'
0000000000000894         db  0x70 ; 'p'
0000000000000895         db  0x72 ; 'r'
0000000000000896         db  0x69 ; 'i'
0000000000000897         db  0x6e ; 'n'
0000000000000898         db  0x74 ; 't'
0000000000000899         db  0x66 ; 'f'
000000000000089a         db  0x5f ; '_'
000000000000089b         db  0x63 ; 'c'
000000000000089c         db  0x68 ; 'h'
000000000000089d         db  0x6b ; 'k'
000000000000089e         db  0x00 ; '.'
000000000000089f         db  0x63 ; 'c'
00000000000008a0         db  0x6c ; 'l'
00000000000008a1         db  0x65 ; 'e'
00000000000008a2         db  0x61 ; 'a'
00000000000008a3         db  0x72 ; 'r'
00000000000008a4         db  0x65 ; 'e'
00000000000008a5         db  0x72 ; 'r'
00000000000008a6         db  0x72 ; 'r'
00000000000008a7         db  0x5f ; '_'
00000000000008a8         db  0x75 ; 'u'
00000000000008a9         db  0x6e ; 'n'
00000000000008aa         db  0x6c ; 'l'
00000000000008ab         db  0x6f ; 'o'
00000000000008ac         db  0x63 ; 'c'
00000000000008ad         db  0x6b ; 'k'
00000000000008ae         db  0x65 ; 'e'
00000000000008af         db  0x64 ; 'd'
00000000000008b0         db  0x00 ; '.'
00000000000008b1         db  0x73 ; 's'
00000000000008b2         db  0x65 ; 'e'
00000000000008b3         db  0x74 ; 't'
00000000000008b4         db  0x6c ; 'l'
00000000000008b5         db  0x6f ; 'o'
00000000000008b6         db  0x63 ; 'c'
00000000000008b7         db  0x61 ; 'a'
00000000000008b8         db  0x6c ; 'l'
00000000000008b9         db  0x65 ; 'e'
00000000000008ba         db  0x00 ; '.'
00000000000008bb         db  0x6d ; 'm'
00000000000008bc         db  0x62 ; 'b'
00000000000008bd         db  0x72 ; 'r'
00000000000008be         db  0x74 ; 't'
00000000000008bf         db  0x6f ; 'o'
00000000000008c0         db  0x77 ; 'w'
00000000000008c1         db  0x63 ; 'c'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x66 ; 'f'
00000000000008c4         db  0x6f ; 'o'
00000000000008c5         db  0x70 ; 'p'
00000000000008c6         db  0x65 ; 'e'
00000000000008c7         db  0x6e ; 'n'
00000000000008c8         db  0x00 ; '.'
00000000000008c9         db  0x73 ; 's'
00000000000008ca         db  0x74 ; 't'
00000000000008cb         db  0x72 ; 'r'
00000000000008cc         db  0x6e ; 'n'
00000000000008cd         db  0x63 ; 'c'
00000000000008ce         db  0x6d ; 'm'
00000000000008cf         db  0x70 ; 'p'
00000000000008d0         db  0x00 ; '.'
00000000000008d1         db  0x6f ; 'o'
00000000000008d2         db  0x70 ; 'p'
00000000000008d3         db  0x74 ; 't'
00000000000008d4         db  0x69 ; 'i'
00000000000008d5         db  0x6e ; 'n'
00000000000008d6         db  0x64 ; 'd'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x73 ; 's'
00000000000008d9         db  0x74 ; 't'
00000000000008da         db  0x72 ; 'r'
00000000000008db         db  0x72 ; 'r'
00000000000008dc         db  0x63 ; 'c'
00000000000008dd         db  0x68 ; 'h'
00000000000008de         db  0x72 ; 'r'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0x64 ; 'd'
00000000000008e1         db  0x63 ; 'c'
00000000000008e2         db  0x67 ; 'g'
00000000000008e3         db  0x65 ; 'e'
00000000000008e4         db  0x74 ; 't'
00000000000008e5         db  0x74 ; 't'
00000000000008e6         db  0x65 ; 'e'
00000000000008e7         db  0x78 ; 'x'
00000000000008e8         db  0x74 ; 't'
00000000000008e9         db  0x00 ; '.'
00000000000008ea         db  0x65 ; 'e'
00000000000008eb         db  0x72 ; 'r'
00000000000008ec         db  0x72 ; 'r'
00000000000008ed         db  0x6f ; 'o'
00000000000008ee         db  0x72 ; 'r'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x5f ; '_'
00000000000008f1         db  0x5f ; '_'
00000000000008f2         db  0x73 ; 's'
00000000000008f3         db  0x74 ; 't'
00000000000008f4         db  0x61 ; 'a'
00000000000008f5         db  0x63 ; 'c'
00000000000008f6         db  0x6b ; 'k'
00000000000008f7         db  0x5f ; '_'
00000000000008f8         db  0x63 ; 'c'
00000000000008f9         db  0x68 ; 'h'
00000000000008fa         db  0x6b ; 'k'
00000000000008fb         db  0x5f ; '_'
00000000000008fc         db  0x66 ; 'f'
00000000000008fd         db  0x61 ; 'a'
00000000000008fe         db  0x69 ; 'i'
00000000000008ff         db  0x6c ; 'l'
0000000000000900         db  0x00 ; '.'
0000000000000901         db  0x69 ; 'i'
0000000000000902         db  0x73 ; 's'
0000000000000903         db  0x77 ; 'w'
0000000000000904         db  0x70 ; 'p'
0000000000000905         db  0x72 ; 'r'
0000000000000906         db  0x69 ; 'i'
0000000000000907         db  0x6e ; 'n'
0000000000000908         db  0x74 ; 't'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x72 ; 'r'
000000000000090b         db  0x65 ; 'e'
000000000000090c         db  0x61 ; 'a'
000000000000090d         db  0x6c ; 'l'
000000000000090e         db  0x6c ; 'l'
000000000000090f         db  0x6f ; 'o'
0000000000000910         db  0x63 ; 'c'
0000000000000911         db  0x00 ; '.'
0000000000000912         db  0x61 ; 'a'
0000000000000913         db  0x62 ; 'b'
0000000000000914         db  0x6f ; 'o'
0000000000000915         db  0x72 ; 'r'
0000000000000916         db  0x74 ; 't'
0000000000000917         db  0x00 ; '.'
0000000000000918         db  0x73 ; 's'
0000000000000919         db  0x74 ; 't'
000000000000091a         db  0x64 ; 'd'
000000000000091b         db  0x69 ; 'i'
000000000000091c         db  0x6e ; 'n'
000000000000091d         db  0x00 ; '.'
000000000000091e         db  0x5f ; '_'
000000000000091f         db  0x65 ; 'e'
0000000000000920         db  0x78 ; 'x'
0000000000000921         db  0x69 ; 'i'
0000000000000922         db  0x74 ; 't'
0000000000000923         db  0x00 ; '.'
0000000000000924         db  0x70 ; 'p'
0000000000000925         db  0x72 ; 'r'
0000000000000926         db  0x6f ; 'o'
0000000000000927         db  0x67 ; 'g'
0000000000000928         db  0x72 ; 'r'
0000000000000929         db  0x61 ; 'a'
000000000000092a         db  0x6d ; 'm'
000000000000092b         db  0x5f ; '_'
000000000000092c         db  0x69 ; 'i'
000000000000092d         db  0x6e ; 'n'
000000000000092e         db  0x76 ; 'v'
000000000000092f         db  0x6f ; 'o'
0000000000000930         db  0x63 ; 'c'
0000000000000931         db  0x61 ; 'a'
0000000000000932         db  0x74 ; 't'
0000000000000933         db  0x69 ; 'i'
0000000000000934         db  0x6f ; 'o'
0000000000000935         db  0x6e ; 'n'
0000000000000936         db  0x5f ; '_'
0000000000000937         db  0x6e ; 'n'
0000000000000938         db  0x61 ; 'a'
0000000000000939         db  0x6d ; 'm'
000000000000093a         db  0x65 ; 'e'
000000000000093b         db  0x00 ; '.'
000000000000093c         db  0x5f ; '_'
000000000000093d         db  0x5f ; '_'
000000000000093e         db  0x63 ; 'c'
000000000000093f         db  0x74 ; 't'
0000000000000940         db  0x79 ; 'y'
0000000000000941         db  0x70 ; 'p'
0000000000000942         db  0x65 ; 'e'
0000000000000943         db  0x5f ; '_'
0000000000000944         db  0x67 ; 'g'
0000000000000945         db  0x65 ; 'e'
0000000000000946         db  0x74 ; 't'
0000000000000947         db  0x5f ; '_'
0000000000000948         db  0x6d ; 'm'
0000000000000949         db  0x62 ; 'b'
000000000000094a         db  0x5f ; '_'
000000000000094b         db  0x63 ; 'c'
000000000000094c         db  0x75 ; 'u'
000000000000094d         db  0x72 ; 'r'
000000000000094e         db  0x5f ; '_'
000000000000094f         db  0x6d ; 'm'
0000000000000950         db  0x61 ; 'a'
0000000000000951         db  0x78 ; 'x'
0000000000000952         db  0x00 ; '.'
0000000000000953         db  0x70 ; 'p'
0000000000000954         db  0x6f ; 'o'
0000000000000955         db  0x73 ; 's'
0000000000000956         db  0x69 ; 'i'
0000000000000957         db  0x78 ; 'x'
0000000000000958         db  0x5f ; '_'
0000000000000959         db  0x66 ; 'f'
000000000000095a         db  0x61 ; 'a'
000000000000095b         db  0x64 ; 'd'
000000000000095c         db  0x76 ; 'v'
000000000000095d         db  0x69 ; 'i'
000000000000095e         db  0x73 ; 's'
000000000000095f         db  0x65 ; 'e'
0000000000000960         db  0x00 ; '.'
0000000000000961         db  0x63 ; 'c'
0000000000000962         db  0x61 ; 'a'
0000000000000963         db  0x6c ; 'l'
0000000000000964         db  0x6c ; 'l'
0000000000000965         db  0x6f ; 'o'
0000000000000966         db  0x63 ; 'c'
0000000000000967         db  0x00 ; '.'
0000000000000968         db  0x73 ; 's'
0000000000000969         db  0x74 ; 't'
000000000000096a         db  0x72 ; 'r'
000000000000096b         db  0x6c ; 'l'
000000000000096c         db  0x65 ; 'e'
000000000000096d         db  0x6e ; 'n'
000000000000096e         db  0x00 ; '.'
000000000000096f         db  0x6d ; 'm'
0000000000000970         db  0x65 ; 'e'
0000000000000971         db  0x6d ; 'm'
0000000000000972         db  0x73 ; 's'
0000000000000973         db  0x65 ; 'e'
0000000000000974         db  0x74 ; 't'
0000000000000975         db  0x00 ; '.'
0000000000000976         db  0x5f ; '_'
0000000000000977         db  0x5f ; '_'
0000000000000978         db  0x65 ; 'e'
0000000000000979         db  0x72 ; 'r'
000000000000097a         db  0x72 ; 'r'
000000000000097b         db  0x6e ; 'n'
000000000000097c         db  0x6f ; 'o'
000000000000097d         db  0x5f ; '_'
000000000000097e         db  0x6c ; 'l'
000000000000097f         db  0x6f ; 'o'
0000000000000980         db  0x63 ; 'c'
0000000000000981         db  0x61 ; 'a'
0000000000000982         db  0x74 ; 't'
0000000000000983         db  0x69 ; 'i'
0000000000000984         db  0x6f ; 'o'
0000000000000985         db  0x6e ; 'n'
0000000000000986         db  0x00 ; '.'
0000000000000987         db  0x6d ; 'm'
0000000000000988         db  0x65 ; 'e'
0000000000000989         db  0x6d ; 'm'
000000000000098a         db  0x63 ; 'c'
000000000000098b         db  0x6d ; 'm'
000000000000098c         db  0x70 ; 'p'
000000000000098d         db  0x00 ; '.'
000000000000098e         db  0x5f ; '_'
000000000000098f         db  0x5f ; '_'
0000000000000990         db  0x66 ; 'f'
0000000000000991         db  0x70 ; 'p'
0000000000000992         db  0x72 ; 'r'
0000000000000993         db  0x69 ; 'i'
0000000000000994         db  0x6e ; 'n'
0000000000000995         db  0x74 ; 't'
0000000000000996         db  0x66 ; 'f'
0000000000000997         db  0x5f ; '_'
0000000000000998         db  0x63 ; 'c'
0000000000000999         db  0x68 ; 'h'
000000000000099a         db  0x6b ; 'k'
000000000000099b         db  0x00 ; '.'
000000000000099c         db  0x73 ; 's'
000000000000099d         db  0x74 ; 't'
000000000000099e         db  0x64 ; 'd'
000000000000099f         db  0x6f ; 'o'
00000000000009a0         db  0x75 ; 'u'
00000000000009a1         db  0x74 ; 't'
00000000000009a2         db  0x00 ; '.'
00000000000009a3         db  0x6c ; 'l'
00000000000009a4         db  0x73 ; 's'
00000000000009a5         db  0x65 ; 'e'
00000000000009a6         db  0x65 ; 'e'
00000000000009a7         db  0x6b ; 'k'
00000000000009a8         db  0x00 ; '.'
00000000000009a9         db  0x6d ; 'm'
00000000000009aa         db  0x65 ; 'e'
00000000000009ab         db  0x6d ; 'm'
00000000000009ac         db  0x63 ; 'c'
00000000000009ad         db  0x70 ; 'p'
00000000000009ae         db  0x79 ; 'y'
00000000000009af         db  0x00 ; '.'
00000000000009b0         db  0x66 ; 'f'
00000000000009b1         db  0x63 ; 'c'
00000000000009b2         db  0x6c ; 'l'
00000000000009b3         db  0x6f ; 'o'
00000000000009b4         db  0x73 ; 's'
00000000000009b5         db  0x65 ; 'e'
00000000000009b6         db  0x00 ; '.'
00000000000009b7         db  0x6d ; 'm'
00000000000009b8         db  0x61 ; 'a'
00000000000009b9         db  0x6c ; 'l'
00000000000009ba         db  0x6c ; 'l'
00000000000009bb         db  0x6f ; 'o'
00000000000009bc         db  0x63 ; 'c'
00000000000009bd         db  0x00 ; '.'
00000000000009be         db  0x6d ; 'm'
00000000000009bf         db  0x62 ; 'b'
00000000000009c0         db  0x73 ; 's'
00000000000009c1         db  0x69 ; 'i'
00000000000009c2         db  0x6e ; 'n'
00000000000009c3         db  0x69 ; 'i'
00000000000009c4         db  0x74 ; 't'
00000000000009c5         db  0x00 ; '.'
00000000000009c6         db  0x5f ; '_'
00000000000009c7         db  0x5f ; '_'
00000000000009c8         db  0x75 ; 'u'
00000000000009c9         db  0x66 ; 'f'
00000000000009ca         db  0x6c ; 'l'
00000000000009cb         db  0x6f ; 'o'
00000000000009cc         db  0x77 ; 'w'
00000000000009cd         db  0x00 ; '.'
00000000000009ce         db  0x6e ; 'n'
00000000000009cf         db  0x6c ; 'l'
00000000000009d0         db  0x5f ; '_'
00000000000009d1         db  0x6c ; 'l'
00000000000009d2         db  0x61 ; 'a'
00000000000009d3         db  0x6e ; 'n'
00000000000009d4         db  0x67 ; 'g'
00000000000009d5         db  0x69 ; 'i'
00000000000009d6         db  0x6e ; 'n'
00000000000009d7         db  0x66 ; 'f'
00000000000009d8         db  0x6f ; 'o'
00000000000009d9         db  0x00 ; '.'
00000000000009da         db  0x5f ; '_'
00000000000009db         db  0x5f ; '_'
00000000000009dc         db  0x63 ; 'c'
00000000000009dd         db  0x74 ; 't'
00000000000009de         db  0x79 ; 'y'
00000000000009df         db  0x70 ; 'p'
00000000000009e0         db  0x65 ; 'e'
00000000000009e1         db  0x5f ; '_'
00000000000009e2         db  0x62 ; 'b'
00000000000009e3         db  0x5f ; '_'
00000000000009e4         db  0x6c ; 'l'
00000000000009e5         db  0x6f ; 'o'
00000000000009e6         db  0x63 ; 'c'
00000000000009e7         db  0x00 ; '.'
00000000000009e8         db  0x6f ; 'o'
00000000000009e9         db  0x70 ; 'p'
00000000000009ea         db  0x74 ; 't'
00000000000009eb         db  0x61 ; 'a'
00000000000009ec         db  0x72 ; 'r'
00000000000009ed         db  0x67 ; 'g'
00000000000009ee         db  0x00 ; '.'
00000000000009ef         db  0x5f ; '_'
00000000000009f0         db  0x5f ; '_'
00000000000009f1         db  0x66 ; 'f'
00000000000009f2         db  0x72 ; 'r'
00000000000009f3         db  0x65 ; 'e'
00000000000009f4         db  0x61 ; 'a'
00000000000009f5         db  0x64 ; 'd'
00000000000009f6         db  0x69 ; 'i'
00000000000009f7         db  0x6e ; 'n'
00000000000009f8         db  0x67 ; 'g'
00000000000009f9         db  0x00 ; '.'
00000000000009fa         db  0x73 ; 's'
00000000000009fb         db  0x74 ; 't'
00000000000009fc         db  0x64 ; 'd'
00000000000009fd         db  0x65 ; 'e'
00000000000009fe         db  0x72 ; 'r'
00000000000009ff         db  0x72 ; 'r'
0000000000000a00         db  0x00 ; '.'
0000000000000a01         db  0x67 ; 'g'
0000000000000a02         db  0x65 ; 'e'
0000000000000a03         db  0x74 ; 't'
0000000000000a04         db  0x6f ; 'o'
0000000000000a05         db  0x70 ; 'p'
0000000000000a06         db  0x74 ; 't'
0000000000000a07         db  0x5f ; '_'
0000000000000a08         db  0x6c ; 'l'
0000000000000a09         db  0x6f ; 'o'
0000000000000a0a         db  0x6e ; 'n'
0000000000000a0b         db  0x67 ; 'g'
0000000000000a0c         db  0x00 ; '.'
0000000000000a0d         db  0x66 ; 'f'
0000000000000a0e         db  0x69 ; 'i'
0000000000000a0f         db  0x6c ; 'l'
0000000000000a10         db  0x65 ; 'e'
0000000000000a11         db  0x6e ; 'n'
0000000000000a12         db  0x6f ; 'o'
0000000000000a13         db  0x00 ; '.'
0000000000000a14         db  0x66 ; 'f'
0000000000000a15         db  0x77 ; 'w'
0000000000000a16         db  0x72 ; 'r'
0000000000000a17         db  0x69 ; 'i'
0000000000000a18         db  0x74 ; 't'
0000000000000a19         db  0x65 ; 'e'
0000000000000a1a         db  0x00 ; '.'
0000000000000a1b         db  0x5f ; '_'
0000000000000a1c         db  0x5f ; '_'
0000000000000a1d         db  0x66 ; 'f'
0000000000000a1e         db  0x70 ; 'p'
0000000000000a1f         db  0x65 ; 'e'
0000000000000a20         db  0x6e ; 'n'
0000000000000a21         db  0x64 ; 'd'
0000000000000a22         db  0x69 ; 'i'
0000000000000a23         db  0x6e ; 'n'
0000000000000a24         db  0x67 ; 'g'
0000000000000a25         db  0x00 ; '.'
0000000000000a26         db  0x70 ; 'p'
0000000000000a27         db  0x72 ; 'r'
0000000000000a28         db  0x6f ; 'o'
0000000000000a29         db  0x67 ; 'g'
0000000000000a2a         db  0x72 ; 'r'
0000000000000a2b         db  0x61 ; 'a'
0000000000000a2c         db  0x6d ; 'm'
0000000000000a2d         db  0x5f ; '_'
0000000000000a2e         db  0x69 ; 'i'
0000000000000a2f         db  0x6e ; 'n'
0000000000000a30         db  0x76 ; 'v'
0000000000000a31         db  0x6f ; 'o'
0000000000000a32         db  0x63 ; 'c'
0000000000000a33         db  0x61 ; 'a'
0000000000000a34         db  0x74 ; 't'
0000000000000a35         db  0x69 ; 'i'
0000000000000a36         db  0x6f ; 'o'
0000000000000a37         db  0x6e ; 'n'
0000000000000a38         db  0x5f ; '_'
0000000000000a39         db  0x73 ; 's'
0000000000000a3a         db  0x68 ; 'h'
0000000000000a3b         db  0x6f ; 'o'
0000000000000a3c         db  0x72 ; 'r'
0000000000000a3d         db  0x74 ; 't'
0000000000000a3e         db  0x5f ; '_'
0000000000000a3f         db  0x6e ; 'n'
0000000000000a40         db  0x61 ; 'a'
0000000000000a41         db  0x6d ; 'm'
0000000000000a42         db  0x65 ; 'e'
0000000000000a43         db  0x00 ; '.'
0000000000000a44         db  0x5f ; '_'
0000000000000a45         db  0x5f ; '_'
0000000000000a46         db  0x63 ; 'c'
0000000000000a47         db  0x78 ; 'x'
0000000000000a48         db  0x61 ; 'a'
0000000000000a49         db  0x5f ; '_'
0000000000000a4a         db  0x66 ; 'f'
0000000000000a4b         db  0x69 ; 'i'
0000000000000a4c         db  0x6e ; 'n'
0000000000000a4d         db  0x61 ; 'a'
0000000000000a4e         db  0x6c ; 'l'
0000000000000a4f         db  0x69 ; 'i'
0000000000000a50         db  0x7a ; 'z'
0000000000000a51         db  0x65 ; 'e'
0000000000000a52         db  0x00 ; '.'
0000000000000a53         db  0x62 ; 'b'
0000000000000a54         db  0x69 ; 'i'
0000000000000a55         db  0x6e ; 'n'
0000000000000a56         db  0x64 ; 'd'
0000000000000a57         db  0x74 ; 't'
0000000000000a58         db  0x65 ; 'e'
0000000000000a59         db  0x78 ; 'x'
0000000000000a5a         db  0x74 ; 't'
0000000000000a5b         db  0x64 ; 'd'
0000000000000a5c         db  0x6f ; 'o'
0000000000000a5d         db  0x6d ; 'm'
0000000000000a5e         db  0x61 ; 'a'
0000000000000a5f         db  0x69 ; 'i'
0000000000000a60         db  0x6e ; 'n'
0000000000000a61         db  0x00 ; '.'
0000000000000a62         db  0x66 ; 'f'
0000000000000a63         db  0x77 ; 'w'
0000000000000a64         db  0x72 ; 'r'
0000000000000a65         db  0x69 ; 'i'
0000000000000a66         db  0x74 ; 't'
0000000000000a67         db  0x65 ; 'e'
0000000000000a68         db  0x5f ; '_'
0000000000000a69         db  0x75 ; 'u'
0000000000000a6a         db  0x6e ; 'n'
0000000000000a6b         db  0x6c ; 'l'
0000000000000a6c         db  0x6f ; 'o'
0000000000000a6d         db  0x63 ; 'c'
0000000000000a6e         db  0x6b ; 'k'
0000000000000a6f         db  0x65 ; 'e'
0000000000000a70         db  0x64 ; 'd'
0000000000000a71         db  0x00 ; '.'
0000000000000a72         db  0x5f ; '_'
0000000000000a73         db  0x5f ; '_'
0000000000000a74         db  0x6c ; 'l'
0000000000000a75         db  0x69 ; 'i'
0000000000000a76         db  0x62 ; 'b'
0000000000000a77         db  0x63 ; 'c'
0000000000000a78         db  0x5f ; '_'
0000000000000a79         db  0x73 ; 's'
0000000000000a7a         db  0x74 ; 't'
0000000000000a7b         db  0x61 ; 'a'
0000000000000a7c         db  0x72 ; 'r'
0000000000000a7d         db  0x74 ; 't'
0000000000000a7e         db  0x5f ; '_'
0000000000000a7f         db  0x6d ; 'm'
0000000000000a80         db  0x61 ; 'a'
0000000000000a81         db  0x69 ; 'i'
0000000000000a82         db  0x6e ; 'n'
0000000000000a83         db  0x00 ; '.'
0000000000000a84         db  0x66 ; 'f'
0000000000000a85         db  0x73 ; 's'
0000000000000a86         db  0x65 ; 'e'
0000000000000a87         db  0x65 ; 'e'
0000000000000a88         db  0x6b ; 'k'
0000000000000a89         db  0x6f ; 'o'
0000000000000a8a         db  0x00 ; '.'
0000000000000a8b         db  0x5f ; '_'
0000000000000a8c         db  0x5f ; '_'
0000000000000a8d         db  0x6f ; 'o'
0000000000000a8e         db  0x76 ; 'v'
0000000000000a8f         db  0x65 ; 'e'
0000000000000a90         db  0x72 ; 'r'
0000000000000a91         db  0x66 ; 'f'
0000000000000a92         db  0x6c ; 'l'
0000000000000a93         db  0x6f ; 'o'
0000000000000a94         db  0x77 ; 'w'
0000000000000a95         db  0x00 ; '.'
0000000000000a96         db  0x66 ; 'f'
0000000000000a97         db  0x70 ; 'p'
0000000000000a98         db  0x75 ; 'u'
0000000000000a99         db  0x74 ; 't'
0000000000000a9a         db  0x73 ; 's'
0000000000000a9b         db  0x5f ; '_'
0000000000000a9c         db  0x75 ; 'u'
0000000000000a9d         db  0x6e ; 'n'
0000000000000a9e         db  0x6c ; 'l'
0000000000000a9f         db  0x6f ; 'o'
0000000000000aa0         db  0x63 ; 'c'
0000000000000aa1         db  0x6b ; 'k'
0000000000000aa2         db  0x65 ; 'e'
0000000000000aa3         db  0x64 ; 'd'
0000000000000aa4         db  0x00 ; '.'
0000000000000aa5         db  0x66 ; 'f'
0000000000000aa6         db  0x72 ; 'r'
0000000000000aa7         db  0x65 ; 'e'
0000000000000aa8         db  0x65 ; 'e'
0000000000000aa9         db  0x00 ; '.'
0000000000000aaa         db  0x5f ; '_'
0000000000000aab         db  0x5f ; '_'
0000000000000aac         db  0x70 ; 'p'
0000000000000aad         db  0x72 ; 'r'
0000000000000aae         db  0x6f ; 'o'
0000000000000aaf         db  0x67 ; 'g'
0000000000000ab0         db  0x6e ; 'n'
0000000000000ab1         db  0x61 ; 'a'
0000000000000ab2         db  0x6d ; 'm'
0000000000000ab3         db  0x65 ; 'e'
0000000000000ab4         db  0x00 ; '.'
0000000000000ab5         db  0x5f ; '_'
0000000000000ab6         db  0x5f ; '_'
0000000000000ab7         db  0x70 ; 'p'
0000000000000ab8         db  0x72 ; 'r'
0000000000000ab9         db  0x6f ; 'o'
0000000000000aba         db  0x67 ; 'g'
0000000000000abb         db  0x6e ; 'n'
0000000000000abc         db  0x61 ; 'a'
0000000000000abd         db  0x6d ; 'm'
0000000000000abe         db  0x65 ; 'e'
0000000000000abf         db  0x5f ; '_'
0000000000000ac0         db  0x66 ; 'f'
0000000000000ac1         db  0x75 ; 'u'
0000000000000ac2         db  0x6c ; 'l'
0000000000000ac3         db  0x6c ; 'l'
0000000000000ac4         db  0x00 ; '.'
0000000000000ac5         db  0x5f ; '_'
0000000000000ac6         db  0x5f ; '_'
0000000000000ac7         db  0x63 ; 'c'
0000000000000ac8         db  0x78 ; 'x'
0000000000000ac9         db  0x61 ; 'a'
0000000000000aca         db  0x5f ; '_'
0000000000000acb         db  0x61 ; 'a'
0000000000000acc         db  0x74 ; 't'
0000000000000acd         db  0x65 ; 'e'
0000000000000ace         db  0x78 ; 'x'
0000000000000acf         db  0x69 ; 'i'
0000000000000ad0         db  0x74 ; 't'
0000000000000ad1         db  0x00 ; '.'
0000000000000ad2         db  0x47 ; 'G'
0000000000000ad3         db  0x4c ; 'L'
0000000000000ad4         db  0x49 ; 'I'
0000000000000ad5         db  0x42 ; 'B'
0000000000000ad6         db  0x43 ; 'C'
0000000000000ad7         db  0x5f ; '_'
0000000000000ad8         db  0x32 ; '2'
0000000000000ad9         db  0x2e ; '.'
0000000000000ada         db  0x33 ; '3'
0000000000000adb         db  0x00 ; '.'
0000000000000adc         db  0x47 ; 'G'
0000000000000add         db  0x4c ; 'L'
0000000000000ade         db  0x49 ; 'I'
0000000000000adf         db  0x42 ; 'B'
0000000000000ae0         db  0x43 ; 'C'
0000000000000ae1         db  0x5f ; '_'
0000000000000ae2         db  0x32 ; '2'
0000000000000ae3         db  0x2e ; '.'
0000000000000ae4         db  0x33 ; '3'
0000000000000ae5         db  0x2e ; '.'
0000000000000ae6         db  0x34 ; '4'
0000000000000ae7         db  0x00 ; '.'
0000000000000ae8         db  0x47 ; 'G'
0000000000000ae9         db  0x4c ; 'L'
0000000000000aea         db  0x49 ; 'I'
0000000000000aeb         db  0x42 ; 'B'
0000000000000aec         db  0x43 ; 'C'
0000000000000aed         db  0x5f ; '_'
0000000000000aee         db  0x32 ; '2'
0000000000000aef         db  0x2e ; '.'
0000000000000af0         db  0x31 ; '1'
0000000000000af1         db  0x34 ; '4'
0000000000000af2         db  0x00 ; '.'
0000000000000af3         db  0x47 ; 'G'
0000000000000af4         db  0x4c ; 'L'
0000000000000af5         db  0x49 ; 'I'
0000000000000af6         db  0x42 ; 'B'
0000000000000af7         db  0x43 ; 'C'
0000000000000af8         db  0x5f ; '_'
0000000000000af9         db  0x32 ; '2'
0000000000000afa         db  0x2e ; '.'
0000000000000afb         db  0x34 ; '4'
0000000000000afc         db  0x00 ; '.'
0000000000000afd         db  0x47 ; 'G'
0000000000000afe         db  0x4c ; 'L'
0000000000000aff         db  0x49 ; 'I'
                     aBc225:
0000000000000b00         db         "BC_2.2.5", 0
0000000000000b09         db  0x5f ; '_'
0000000000000b0a         db  0x49 ; 'I'
0000000000000b0b         db  0x54 ; 'T'
0000000000000b0c         db  0x4d ; 'M'
0000000000000b0d         db  0x5f ; '_'
0000000000000b0e         db  0x64 ; 'd'
0000000000000b0f         db  0x65 ; 'e'
0000000000000b10         db  0x72 ; 'r'
0000000000000b11         db  0x65 ; 'e'
0000000000000b12         db  0x67 ; 'g'
0000000000000b13         db  0x69 ; 'i'
0000000000000b14         db  0x73 ; 's'
0000000000000b15         db  0x74 ; 't'
0000000000000b16         db  0x65 ; 'e'
0000000000000b17         db  0x72 ; 'r'
0000000000000b18         db  0x54 ; 'T'
0000000000000b19         db  0x4d ; 'M'
0000000000000b1a         db  0x43 ; 'C'
0000000000000b1b         db  0x6c ; 'l'
0000000000000b1c         db  0x6f ; 'o'
0000000000000b1d         db  0x6e ; 'n'
0000000000000b1e         db  0x65 ; 'e'
0000000000000b1f         db  0x54 ; 'T'
0000000000000b20         db  0x61 ; 'a'
0000000000000b21         db  0x62 ; 'b'
0000000000000b22         db  0x6c ; 'l'
0000000000000b23         db  0x65 ; 'e'
0000000000000b24         db  0x00 ; '.'
0000000000000b25         db  0x5f ; '_'
0000000000000b26         db  0x5f ; '_'
0000000000000b27         db  0x67 ; 'g'
0000000000000b28         db  0x6d ; 'm'
0000000000000b29         db  0x6f ; 'o'
0000000000000b2a         db  0x6e ; 'n'
0000000000000b2b         db  0x5f ; '_'
0000000000000b2c         db  0x73 ; 's'
0000000000000b2d         db  0x74 ; 't'
0000000000000b2e         db  0x61 ; 'a'
0000000000000b2f         db  0x72 ; 'r'
0000000000000b30         db  0x74 ; 't'
0000000000000b31         db  0x5f ; '_'
0000000000000b32         db  0x5f ; '_'
0000000000000b33         db  0x00 ; '.'
0000000000000b34         db  0x5f ; '_'
0000000000000b35         db  0x49 ; 'I'
0000000000000b36         db  0x54 ; 'T'
0000000000000b37         db  0x4d ; 'M'
0000000000000b38         db  0x5f ; '_'
0000000000000b39         db  0x72 ; 'r'
0000000000000b3a         db  0x65 ; 'e'
0000000000000b3b         db  0x67 ; 'g'
0000000000000b3c         db  0x69 ; 'i'
0000000000000b3d         db  0x73 ; 's'
0000000000000b3e         db  0x74 ; 't'
0000000000000b3f         db  0x65 ; 'e'
0000000000000b40         db  0x72 ; 'r'
                     aTmclonetable:
0000000000000b41         db         "TMCloneTable", 0


        ; Section .gnu.version
        ; Range: [0xb4e; 0xbc6[ (120 bytes)
        ; File offset : [2894; 3014[ (120 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000b4e         db  0x00 ; '.'
0000000000000b4f         db  0x00 ; '.'
0000000000000b50         db  0x02 ; '.'
0000000000000b51         db  0x00 ; '.'
0000000000000b52         db  0x02 ; '.'
0000000000000b53         db  0x00 ; '.'
0000000000000b54         db  0x02 ; '.'
0000000000000b55         db  0x00 ; '.'
0000000000000b56         db  0x02 ; '.'
0000000000000b57         db  0x00 ; '.'
0000000000000b58         db  0x02 ; '.'
0000000000000b59         db  0x00 ; '.'
0000000000000b5a         db  0x00 ; '.'
0000000000000b5b         db  0x00 ; '.'
0000000000000b5c         db  0x02 ; '.'
0000000000000b5d         db  0x00 ; '.'
0000000000000b5e         db  0x02 ; '.'
0000000000000b5f         db  0x00 ; '.'
0000000000000b60         db  0x02 ; '.'
0000000000000b61         db  0x00 ; '.'
0000000000000b62         db  0x02 ; '.'
0000000000000b63         db  0x00 ; '.'
0000000000000b64         db  0x02 ; '.'
0000000000000b65         db  0x00 ; '.'
0000000000000b66         db  0x02 ; '.'
0000000000000b67         db  0x00 ; '.'
0000000000000b68         db  0x02 ; '.'
0000000000000b69         db  0x00 ; '.'
0000000000000b6a         db  0x02 ; '.'
0000000000000b6b         db  0x00 ; '.'
0000000000000b6c         db  0x02 ; '.'
0000000000000b6d         db  0x00 ; '.'
0000000000000b6e         db  0x03 ; '.'
0000000000000b6f         db  0x00 ; '.'
0000000000000b70         db  0x02 ; '.'
0000000000000b71         db  0x00 ; '.'
0000000000000b72         db  0x02 ; '.'
0000000000000b73         db  0x00 ; '.'
0000000000000b74         db  0x02 ; '.'
0000000000000b75         db  0x00 ; '.'
0000000000000b76         db  0x02 ; '.'
0000000000000b77         db  0x00 ; '.'
0000000000000b78         db  0x02 ; '.'
0000000000000b79         db  0x00 ; '.'
0000000000000b7a         db  0x02 ; '.'
0000000000000b7b         db  0x00 ; '.'
0000000000000b7c         db  0x02 ; '.'
0000000000000b7d         db  0x00 ; '.'
0000000000000b7e         db  0x02 ; '.'
0000000000000b7f         db  0x00 ; '.'
0000000000000b80         db  0x02 ; '.'
0000000000000b81         db  0x00 ; '.'
0000000000000b82         db  0x02 ; '.'
0000000000000b83         db  0x00 ; '.'
0000000000000b84         db  0x02 ; '.'
0000000000000b85         db  0x00 ; '.'
0000000000000b86         db  0x00 ; '.'
0000000000000b87         db  0x00 ; '.'
0000000000000b88         db  0x04 ; '.'
0000000000000b89         db  0x00 ; '.'
0000000000000b8a         db  0x02 ; '.'
0000000000000b8b         db  0x00 ; '.'
0000000000000b8c         db  0x02 ; '.'
0000000000000b8d         db  0x00 ; '.'
0000000000000b8e         db  0x02 ; '.'
0000000000000b8f         db  0x00 ; '.'
0000000000000b90         db  0x02 ; '.'
0000000000000b91         db  0x00 ; '.'
0000000000000b92         db  0x02 ; '.'
0000000000000b93         db  0x00 ; '.'
0000000000000b94         db  0x02 ; '.'
0000000000000b95         db  0x00 ; '.'
0000000000000b96         db  0x02 ; '.'
0000000000000b97         db  0x00 ; '.'
0000000000000b98         db  0x02 ; '.'
0000000000000b99         db  0x00 ; '.'
0000000000000b9a         db  0x05 ; '.'
0000000000000b9b         db  0x00 ; '.'
0000000000000b9c         db  0x02 ; '.'
0000000000000b9d         db  0x00 ; '.'
0000000000000b9e         db  0x02 ; '.'
0000000000000b9f         db  0x00 ; '.'
0000000000000ba0         db  0x02 ; '.'
0000000000000ba1         db  0x00 ; '.'
0000000000000ba2         db  0x02 ; '.'
0000000000000ba3         db  0x00 ; '.'
0000000000000ba4         db  0x02 ; '.'
0000000000000ba5         db  0x00 ; '.'
0000000000000ba6         db  0x02 ; '.'
0000000000000ba7         db  0x00 ; '.'
0000000000000ba8         db  0x05 ; '.'
0000000000000ba9         db  0x00 ; '.'
0000000000000baa         db  0x00 ; '.'
0000000000000bab         db  0x00 ; '.'
0000000000000bac         db  0x02 ; '.'
0000000000000bad         db  0x00 ; '.'
0000000000000bae         db  0x02 ; '.'
0000000000000baf         db  0x00 ; '.'
0000000000000bb0         db  0x02 ; '.'
0000000000000bb1         db  0x00 ; '.'
0000000000000bb2         db  0x06 ; '.'
0000000000000bb3         db  0x00 ; '.'
0000000000000bb4         db  0x02 ; '.'
0000000000000bb5         db  0x00 ; '.'
0000000000000bb6         db  0x02 ; '.'
0000000000000bb7         db  0x00 ; '.'
0000000000000bb8         db  0x02 ; '.'
0000000000000bb9         db  0x00 ; '.'
0000000000000bba         db  0x02 ; '.'
0000000000000bbb         db  0x00 ; '.'
0000000000000bbc         db  0x02 ; '.'
0000000000000bbd         db  0x00 ; '.'
0000000000000bbe         db  0x02 ; '.'
0000000000000bbf         db  0x00 ; '.'
0000000000000bc0         db  0x02 ; '.'
0000000000000bc1         db  0x00 ; '.'
0000000000000bc2         db  0x02 ; '.'
0000000000000bc3         db  0x00 ; '.'
0000000000000bc4         db  0x02 ; '.'
0000000000000bc5         db  0x00 ; '.'
0000000000000bc6         db  0x00 ; '.'
0000000000000bc7         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xbc8; 0xc28[ (96 bytes)
        ; File offset : [3016; 3112[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000bc8         db  0x01 ; '.'
0000000000000bc9         db  0x00 ; '.'
0000000000000bca         db  0x05 ; '.'
0000000000000bcb         db  0x00 ; '.'
0000000000000bcc         db  0x01 ; '.'
0000000000000bcd         db  0x00 ; '.'
0000000000000bce         db  0x00 ; '.'
0000000000000bcf         db  0x00 ; '.'
0000000000000bd0         db  0x10 ; '.'
0000000000000bd1         db  0x00 ; '.'
0000000000000bd2         db  0x00 ; '.'
0000000000000bd3         db  0x00 ; '.'
0000000000000bd4         db  0x00 ; '.'
0000000000000bd5         db  0x00 ; '.'
0000000000000bd6         db  0x00 ; '.'
0000000000000bd7         db  0x00 ; '.'
0000000000000bd8         db  0x13 ; '.'
0000000000000bd9         db  0x69 ; 'i'
0000000000000bda         db  0x69 ; 'i'
0000000000000bdb         db  0x0d ; '.'
0000000000000bdc         db  0x00 ; '.'
0000000000000bdd         db  0x00 ; '.'
0000000000000bde         db  0x06 ; '.'
0000000000000bdf         db  0x00 ; '.'
0000000000000be0         db  0x52 ; 'R'
0000000000000be1         db  0x02 ; '.'
0000000000000be2         db  0x00 ; '.'
0000000000000be3         db  0x00 ; '.'
0000000000000be4         db  0x10 ; '.'
0000000000000be5         db  0x00 ; '.'
0000000000000be6         db  0x00 ; '.'
0000000000000be7         db  0x00 ; '.'
0000000000000be8         db  0x74 ; 't'
0000000000000be9         db  0x19 ; '.'
0000000000000bea         db  0x69 ; 'i'
0000000000000beb         db  0x09 ; '.'
0000000000000bec         db  0x00 ; '.'
0000000000000bed         db  0x00 ; '.'
0000000000000bee         db  0x05 ; '.'
0000000000000bef         db  0x00 ; '.'
0000000000000bf0         db  0x5c ; '\'
0000000000000bf1         db  0x02 ; '.'
0000000000000bf2         db  0x00 ; '.'
0000000000000bf3         db  0x00 ; '.'
0000000000000bf4         db  0x10 ; '.'
0000000000000bf5         db  0x00 ; '.'
0000000000000bf6         db  0x00 ; '.'
0000000000000bf7         db  0x00 ; '.'
0000000000000bf8         db  0x94 ; '.'
0000000000000bf9         db  0x91 ; '.'
0000000000000bfa         db  0x96 ; '.'
0000000000000bfb         db  0x06 ; '.'
0000000000000bfc         db  0x00 ; '.'
0000000000000bfd         db  0x00 ; '.'
0000000000000bfe         db  0x04 ; '.'
0000000000000bff         db  0x00 ; '.'
0000000000000c00         db  0x68 ; 'h'
0000000000000c01         db  0x02 ; '.'
0000000000000c02         db  0x00 ; '.'
0000000000000c03         db  0x00 ; '.'
0000000000000c04         db  0x10 ; '.'
0000000000000c05         db  0x00 ; '.'
0000000000000c06         db  0x00 ; '.'
0000000000000c07         db  0x00 ; '.'
0000000000000c08         db  0x14 ; '.'
0000000000000c09         db  0x69 ; 'i'
0000000000000c0a         db  0x69 ; 'i'
0000000000000c0b         db  0x0d ; '.'
0000000000000c0c         db  0x00 ; '.'
0000000000000c0d         db  0x00 ; '.'
0000000000000c0e         db  0x03 ; '.'
0000000000000c0f         db  0x00 ; '.'
0000000000000c10         db  0x73 ; 's'
0000000000000c11         db  0x02 ; '.'
0000000000000c12         db  0x00 ; '.'
0000000000000c13         db  0x00 ; '.'
0000000000000c14         db  0x10 ; '.'
0000000000000c15         db  0x00 ; '.'
0000000000000c16         db  0x00 ; '.'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x75 ; 'u'
0000000000000c19         db  0x1a ; '.'
0000000000000c1a         db  0x69 ; 'i'
0000000000000c1b         db  0x09 ; '.'
0000000000000c1c         db  0x00 ; '.'
0000000000000c1d         db  0x00 ; '.'
0000000000000c1e         db  0x02 ; '.'
0000000000000c1f         db  0x00 ; '.'
0000000000000c20         db  0x7d ; '}'
0000000000000c21         db  0x02 ; '.'
0000000000000c22         db  0x00 ; '.'
0000000000000c23         db  0x00 ; '.'
0000000000000c24         db  0x00 ; '.'
0000000000000c25         db  0x00 ; '.'
0000000000000c26         db  0x00 ; '.'
0000000000000c27         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xc28; 0xf40[ (792 bytes)
        ; File offset : [3112; 3904[ (792 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000c28         db  0x30 ; '0'
0000000000000c29         db  0x7b ; '{'
0000000000000c2a         db  0x20 ; ' '
0000000000000c2b         db  0x00 ; '.'
0000000000000c2c         db  0x00 ; '.'
0000000000000c2d         db  0x00 ; '.'
0000000000000c2e         db  0x00 ; '.'
0000000000000c2f         db  0x00 ; '.'
0000000000000c30         db  0x08 ; '.'
0000000000000c31         db  0x00 ; '.'
0000000000000c32         db  0x00 ; '.'
0000000000000c33         db  0x00 ; '.'
0000000000000c34         db  0x00 ; '.'
0000000000000c35         db  0x00 ; '.'
0000000000000c36         db  0x00 ; '.'
0000000000000c37         db  0x00 ; '.'
0000000000000c38         db  0xb0 ; '.'
0000000000000c39         db  0x1a ; '.'
0000000000000c3a         db  0x00 ; '.'
0000000000000c3b         db  0x00 ; '.'
0000000000000c3c         db  0x00 ; '.'
0000000000000c3d         db  0x00 ; '.'
0000000000000c3e         db  0x00 ; '.'
0000000000000c3f         db  0x00 ; '.'
0000000000000c40         db  0x38 ; '8'
0000000000000c41         db  0x7b ; '{'
0000000000000c42         db  0x20 ; ' '
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x00 ; '.'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x00 ; '.'
0000000000000c47         db  0x00 ; '.'
0000000000000c48         db  0x08 ; '.'
0000000000000c49         db  0x00 ; '.'
0000000000000c4a         db  0x00 ; '.'
0000000000000c4b         db  0x00 ; '.'
0000000000000c4c         db  0x00 ; '.'
0000000000000c4d         db  0x00 ; '.'
0000000000000c4e         db  0x00 ; '.'
0000000000000c4f         db  0x00 ; '.'
0000000000000c50         db  0x70 ; 'p'
0000000000000c51         db  0x1a ; '.'
0000000000000c52         db  0x00 ; '.'
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x00 ; '.'
0000000000000c55         db  0x00 ; '.'
0000000000000c56         db  0x00 ; '.'
0000000000000c57         db  0x00 ; '.'
0000000000000c58         db  0x40 ; '@'
0000000000000c59         db  0x7b ; '{'
0000000000000c5a         db  0x20 ; ' '
0000000000000c5b         db  0x00 ; '.'
0000000000000c5c         db  0x00 ; '.'
0000000000000c5d         db  0x00 ; '.'
0000000000000c5e         db  0x00 ; '.'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0x08 ; '.'
0000000000000c61         db  0x00 ; '.'
0000000000000c62         db  0x00 ; '.'
0000000000000c63         db  0x00 ; '.'
0000000000000c64         db  0x00 ; '.'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x00 ; '.'
0000000000000c67         db  0x00 ; '.'
0000000000000c68         db  0xf3 ; '.'
0000000000000c69         db  0x52 ; 'R'
0000000000000c6a         db  0x00 ; '.'
0000000000000c6b         db  0x00 ; '.'
0000000000000c6c         db  0x00 ; '.'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x00 ; '.'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x60 ; '`'
0000000000000c71         db  0x7b ; '{'
0000000000000c72         db  0x20 ; ' '
0000000000000c73         db  0x00 ; '.'
0000000000000c74         db  0x00 ; '.'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x00 ; '.'
0000000000000c77         db  0x00 ; '.'
0000000000000c78         db  0x08 ; '.'
0000000000000c79         db  0x00 ; '.'
0000000000000c7a         db  0x00 ; '.'
0000000000000c7b         db  0x00 ; '.'
0000000000000c7c         db  0x00 ; '.'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x00 ; '.'
0000000000000c7f         db  0x00 ; '.'
0000000000000c80         db  0xfa ; '.'
0000000000000c81         db  0x52 ; 'R'
0000000000000c82         db  0x00 ; '.'
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x00 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x00 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0x80 ; '.'
0000000000000c89         db  0x7b ; '{'
0000000000000c8a         db  0x20 ; ' '
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x00 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x00 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0x08 ; '.'
0000000000000c91         db  0x00 ; '.'
0000000000000c92         db  0x00 ; '.'
0000000000000c93         db  0x00 ; '.'
0000000000000c94         db  0x00 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x00 ; '.'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x05 ; '.'
0000000000000c99         db  0x53 ; 'S'
0000000000000c9a         db  0x00 ; '.'
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x00 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x00 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0xa0 ; '.'
0000000000000ca1         db  0x7b ; '{'
0000000000000ca2         db  0x20 ; ' '
0000000000000ca3         db  0x00 ; '.'
0000000000000ca4         db  0x00 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x00 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0x08 ; '.'
0000000000000ca9         db  0x00 ; '.'
0000000000000caa         db  0x00 ; '.'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x00 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x00 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0x15 ; '.'
0000000000000cb1         db  0x53 ; 'S'
0000000000000cb2         db  0x00 ; '.'
0000000000000cb3         db  0x00 ; '.'
0000000000000cb4         db  0x00 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x00 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0xc0 ; '.'
0000000000000cb9         db  0x7b ; '{'
0000000000000cba         db  0x20 ; ' '
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x00 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x00 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0x08 ; '.'
0000000000000cc1         db  0x00 ; '.'
0000000000000cc2         db  0x00 ; '.'
0000000000000cc3         db  0x00 ; '.'
0000000000000cc4         db  0x00 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x00 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0x1a ; '.'
0000000000000cc9         db  0x53 ; 'S'
0000000000000cca         db  0x00 ; '.'
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x00 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x00 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x00 ; '.'
0000000000000cd1         db  0x7c ; '|'
0000000000000cd2         db  0x20 ; ' '
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x00 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x00 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0x08 ; '.'
0000000000000cd9         db  0x00 ; '.'
0000000000000cda         db  0x00 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x00 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x00 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0xf1 ; '.'
0000000000000ce1         db  0x56 ; 'V'
0000000000000ce2         db  0x00 ; '.'
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x00 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x00 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0x08 ; '.'
0000000000000ce9         db  0x7c ; '|'
0000000000000cea         db  0x20 ; ' '
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x00 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x00 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0x08 ; '.'
0000000000000cf1         db  0x00 ; '.'
0000000000000cf2         db  0x00 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x00 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0xf9 ; '.'
0000000000000cf9         db  0x56 ; 'V'
0000000000000cfa         db  0x00 ; '.'
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x00 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x00 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0x10 ; '.'
0000000000000d01         db  0x7c ; '|'
0000000000000d02         db  0x20 ; ' '
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x00 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x00 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0x08 ; '.'
0000000000000d09         db  0x00 ; '.'
0000000000000d0a         db  0x00 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x00 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x00 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0xff ; '.'
0000000000000d11         db  0x56 ; 'V'
0000000000000d12         db  0x00 ; '.'
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x18 ; '.'
0000000000000d19         db  0x7c ; '|'
0000000000000d1a         db  0x20 ; ' '
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x00 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0x08 ; '.'
0000000000000d21         db  0x00 ; '.'
0000000000000d22         db  0x00 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x00 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x0c ; '.'
0000000000000d29         db  0x57 ; 'W'
0000000000000d2a         db  0x00 ; '.'
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x20 ; ' '
0000000000000d31         db  0x7c ; '|'
0000000000000d32         db  0x20 ; ' '
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x00 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0x08 ; '.'
0000000000000d39         db  0x00 ; '.'
0000000000000d3a         db  0x00 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x00 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0x19 ; '.'
0000000000000d41         db  0x57 ; 'W'
0000000000000d42         db  0x00 ; '.'
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x00 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x28 ; '('
0000000000000d49         db  0x7c ; '|'
0000000000000d4a         db  0x20 ; ' '
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0x08 ; '.'
0000000000000d51         db  0x00 ; '.'
0000000000000d52         db  0x00 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x2d ; '-'
0000000000000d59         db  0x57 ; 'W'
0000000000000d5a         db  0x00 ; '.'
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x30 ; '0'
0000000000000d61         db  0x7c ; '|'
0000000000000d62         db  0x20 ; ' '
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0x08 ; '.'
0000000000000d69         db  0x00 ; '.'
0000000000000d6a         db  0x00 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0x2f ; '/'
0000000000000d71         db  0x57 ; 'W'
0000000000000d72         db  0x00 ; '.'
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x38 ; '8'
0000000000000d79         db  0x7c ; '|'
0000000000000d7a         db  0x20 ; ' '
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0x08 ; '.'
0000000000000d81         db  0x00 ; '.'
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0x12 ; '.'
0000000000000d89         db  0x57 ; 'W'
0000000000000d8a         db  0x00 ; '.'
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x40 ; '@'
0000000000000d91         db  0x7c ; '|'
0000000000000d92         db  0x20 ; ' '
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0x08 ; '.'
0000000000000d99         db  0x00 ; '.'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0xc8 ; '.'
0000000000000da1         db  0x52 ; 'R'
0000000000000da2         db  0x00 ; '.'
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x48 ; 'H'
0000000000000da9         db  0x7c ; '|'
0000000000000daa         db  0x20 ; ' '
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x08 ; '.'
0000000000000db1         db  0x00 ; '.'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0x37 ; '7'
0000000000000db9         db  0x57 ; 'W'
0000000000000dba         db  0x00 ; '.'
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x08 ; '.'
0000000000000dc1         db  0x80 ; '.'
0000000000000dc2         db  0x20 ; ' '
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0x08 ; '.'
0000000000000dc9         db  0x00 ; '.'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x08 ; '.'
0000000000000dd1         db  0x80 ; '.'
0000000000000dd2         db  0x20 ; ' '
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x18 ; '.'
0000000000000dd9         db  0x80 ; '.'
0000000000000dda         db  0x20 ; ' '
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x08 ; '.'
0000000000000de1         db  0x00 ; '.'
0000000000000de2         db  0x00 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x8c ; '.'
0000000000000de9         db  0x56 ; 'V'
0000000000000dea         db  0x00 ; '.'
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x80 ; '.'
0000000000000df1         db  0x80 ; '.'
0000000000000df2         db  0x20 ; ' '
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x08 ; '.'
0000000000000df9         db  0x00 ; '.'
0000000000000dfa         db  0x00 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x90 ; '.'
0000000000000e01         db  0x80 ; '.'
0000000000000e02         db  0x20 ; ' '
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x98 ; '.'
0000000000000e09         db  0x80 ; '.'
0000000000000e0a         db  0x20 ; ' '
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x08 ; '.'
0000000000000e11         db  0x00 ; '.'
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x20 ; ' '
0000000000000e19         db  0x81 ; '.'
0000000000000e1a         db  0x20 ; ' '
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0xc8 ; '.'
0000000000000e21         db  0x7f ; '.'
0000000000000e22         db  0x20 ; ' '
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x06 ; '.'
0000000000000e29         db  0x00 ; '.'
0000000000000e2a         db  0x00 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x06 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x00 ; '.'
0000000000000e31         db  0x00 ; '.'
0000000000000e32         db  0x00 ; '.'
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0xd0 ; '.'
0000000000000e39         db  0x7f ; '.'
0000000000000e3a         db  0x20 ; ' '
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x06 ; '.'
0000000000000e41         db  0x00 ; '.'
0000000000000e42         db  0x00 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x18 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x00 ; '.'
0000000000000e49         db  0x00 ; '.'
0000000000000e4a         db  0x00 ; '.'
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0xd8 ; '.'
0000000000000e51         db  0x7f ; '.'
0000000000000e52         db  0x20 ; ' '
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x06 ; '.'
0000000000000e59         db  0x00 ; '.'
0000000000000e5a         db  0x00 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x1c ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0x00 ; '.'
0000000000000e61         db  0x00 ; '.'
0000000000000e62         db  0x00 ; '.'
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0xe0 ; '.'
0000000000000e69         db  0x7f ; '.'
0000000000000e6a         db  0x20 ; ' '
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x06 ; '.'
0000000000000e71         db  0x00 ; '.'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x2e ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x00 ; '.'
0000000000000e79         db  0x00 ; '.'
0000000000000e7a         db  0x00 ; '.'
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0xe8 ; '.'
0000000000000e81         db  0x7f ; '.'
0000000000000e82         db  0x20 ; ' '
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x06 ; '.'
0000000000000e89         db  0x00 ; '.'
0000000000000e8a         db  0x00 ; '.'
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x31 ; '1'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x00 ; '.'
0000000000000e91         db  0x00 ; '.'
0000000000000e92         db  0x00 ; '.'
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0xa0 ; '.'
0000000000000e99         db  0x80 ; '.'
0000000000000e9a         db  0x20 ; ' '
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x05 ; '.'
0000000000000ea1         db  0x00 ; '.'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x34 ; '4'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0x00 ; '.'
0000000000000ea9         db  0x00 ; '.'
0000000000000eaa         db  0x00 ; '.'
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0xa8 ; '.'
0000000000000eb1         db  0x80 ; '.'
0000000000000eb2         db  0x20 ; ' '
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x00 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x05 ; '.'
0000000000000eb9         db  0x00 ; '.'
0000000000000eba         db  0x00 ; '.'
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x33 ; '3'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x00 ; '.'
0000000000000ec1         db  0x00 ; '.'
0000000000000ec2         db  0x00 ; '.'
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0xb0 ; '.'
0000000000000ec9         db  0x80 ; '.'
0000000000000eca         db  0x20 ; ' '
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x05 ; '.'
0000000000000ed1         db  0x00 ; '.'
0000000000000ed2         db  0x00 ; '.'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x35 ; '5'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x00 ; '.'
0000000000000ed9         db  0x00 ; '.'
0000000000000eda         db  0x00 ; '.'
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0xb8 ; '.'
0000000000000ee1         db  0x80 ; '.'
0000000000000ee2         db  0x20 ; ' '
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x00 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x05 ; '.'
0000000000000ee9         db  0x00 ; '.'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x3a ; ':'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x00 ; '.'
0000000000000ef1         db  0x00 ; '.'
0000000000000ef2         db  0x00 ; '.'
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0xc0 ; '.'
0000000000000ef9         db  0x80 ; '.'
0000000000000efa         db  0x20 ; ' '
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x05 ; '.'
0000000000000f01         db  0x00 ; '.'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x3b ; ';'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x00 ; '.'
0000000000000f09         db  0x00 ; '.'
0000000000000f0a         db  0x00 ; '.'
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0xc8 ; '.'
0000000000000f11         db  0x80 ; '.'
0000000000000f12         db  0x20 ; ' '
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x05 ; '.'
0000000000000f19         db  0x00 ; '.'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x37 ; '7'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x00 ; '.'
0000000000000f21         db  0x00 ; '.'
0000000000000f22         db  0x00 ; '.'
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0xe0 ; '.'
0000000000000f29         db  0x80 ; '.'
0000000000000f2a         db  0x20 ; ' '
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x05 ; '.'
0000000000000f31         db  0x00 ; '.'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x39 ; '9'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x00 ; '.'
0000000000000f39         db  0x00 ; '.'
0000000000000f3a         db  0x00 ; '.'
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0xf40; 0x1378[ (1080 bytes)
        ; File offset : [3904; 4984[ (1080 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000f40         db  0x60 ; '`'
0000000000000f41         db  0x7e ; '~'
0000000000000f42         db  0x20 ; ' '
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x00 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x07 ; '.'
0000000000000f49         db  0x00 ; '.'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x01 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x00 ; '.'
0000000000000f51         db  0x00 ; '.'
0000000000000f52         db  0x00 ; '.'
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x68 ; 'h'
0000000000000f59         db  0x7e ; '~'
0000000000000f5a         db  0x20 ; ' '
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x00 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x07 ; '.'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x02 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x00 ; '.'
0000000000000f69         db  0x00 ; '.'
0000000000000f6a         db  0x00 ; '.'
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x70 ; 'p'
0000000000000f71         db  0x7e ; '~'
0000000000000f72         db  0x20 ; ' '
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x00 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x07 ; '.'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x00 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x03 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x00 ; '.'
0000000000000f81         db  0x00 ; '.'
0000000000000f82         db  0x00 ; '.'
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x78 ; 'x'
0000000000000f89         db  0x7e ; '~'
0000000000000f8a         db  0x20 ; ' '
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x07 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x04 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x00 ; '.'
0000000000000f99         db  0x00 ; '.'
0000000000000f9a         db  0x00 ; '.'
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x80 ; '.'
0000000000000fa1         db  0x7e ; '~'
0000000000000fa2         db  0x20 ; ' '
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x00 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x07 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x05 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x00 ; '.'
0000000000000fb1         db  0x00 ; '.'
0000000000000fb2         db  0x00 ; '.'
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x88 ; '.'
0000000000000fb9         db  0x7e ; '~'
0000000000000fba         db  0x20 ; ' '
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x00 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x07 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x07 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x00 ; '.'
0000000000000fc9         db  0x00 ; '.'
0000000000000fca         db  0x00 ; '.'
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x90 ; '.'
0000000000000fd1         db  0x7e ; '~'
0000000000000fd2         db  0x20 ; ' '
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x00 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x07 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x08 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x00 ; '.'
0000000000000fe1         db  0x00 ; '.'
0000000000000fe2         db  0x00 ; '.'
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x98 ; '.'
0000000000000fe9         db  0x7e ; '~'
0000000000000fea         db  0x20 ; ' '
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x00 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x07 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x09 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x00 ; '.'
0000000000000ff9         db  0x00 ; '.'
0000000000000ffa         db  0x00 ; '.'
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0xa0 ; '.'
0000000000001001         db  0x7e ; '~'
0000000000001002         db  0x20 ; ' '
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x00 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x07 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x0a ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x00 ; '.'
0000000000001011         db  0x00 ; '.'
0000000000001012         db  0x00 ; '.'
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0xa8 ; '.'
0000000000001019         db  0x7e ; '~'
000000000000101a         db  0x20 ; ' '
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x00 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x07 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x0b ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x00 ; '.'
0000000000001029         db  0x00 ; '.'
000000000000102a         db  0x00 ; '.'
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0xb0 ; '.'
0000000000001031         db  0x7e ; '~'
0000000000001032         db  0x20 ; ' '
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x00 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x07 ; '.'
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x0c ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x00 ; '.'
0000000000001041         db  0x00 ; '.'
0000000000001042         db  0x00 ; '.'
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0xb8 ; '.'
0000000000001049         db  0x7e ; '~'
000000000000104a         db  0x20 ; ' '
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x00 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x07 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x0d ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x00 ; '.'
0000000000001059         db  0x00 ; '.'
000000000000105a         db  0x00 ; '.'
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0xc0 ; '.'
0000000000001061         db  0x7e ; '~'
0000000000001062         db  0x20 ; ' '
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x00 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x07 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x0e ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x00 ; '.'
0000000000001071         db  0x00 ; '.'
0000000000001072         db  0x00 ; '.'
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0xc8 ; '.'
0000000000001079         db  0x7e ; '~'
000000000000107a         db  0x20 ; ' '
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x07 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x0f ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x00 ; '.'
0000000000001089         db  0x00 ; '.'
000000000000108a         db  0x00 ; '.'
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0xd0 ; '.'
0000000000001091         db  0x7e ; '~'
0000000000001092         db  0x20 ; ' '
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x00 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x07 ; '.'
0000000000001099         db  0x00 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x10 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x00 ; '.'
00000000000010a1         db  0x00 ; '.'
00000000000010a2         db  0x00 ; '.'
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0xd8 ; '.'
00000000000010a9         db  0x7e ; '~'
00000000000010aa         db  0x20 ; ' '
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x07 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x11 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x00 ; '.'
00000000000010b9         db  0x00 ; '.'
00000000000010ba         db  0x00 ; '.'
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0xe0 ; '.'
00000000000010c1         db  0x7e ; '~'
00000000000010c2         db  0x20 ; ' '
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x00 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x07 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x12 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x00 ; '.'
00000000000010d1         db  0x00 ; '.'
00000000000010d2         db  0x00 ; '.'
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0xe8 ; '.'
00000000000010d9         db  0x7e ; '~'
00000000000010da         db  0x20 ; ' '
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x07 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x13 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x00 ; '.'
00000000000010e9         db  0x00 ; '.'
00000000000010ea         db  0x00 ; '.'
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0xf0 ; '.'
00000000000010f1         db  0x7e ; '~'
00000000000010f2         db  0x20 ; ' '
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x00 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x07 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x14 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x00 ; '.'
0000000000001101         db  0x00 ; '.'
0000000000001102         db  0x00 ; '.'
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0xf8 ; '.'
0000000000001109         db  0x7e ; '~'
000000000000110a         db  0x20 ; ' '
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x00 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x07 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x15 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x00 ; '.'
0000000000001119         db  0x00 ; '.'
000000000000111a         db  0x00 ; '.'
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x00 ; '.'
0000000000001121         db  0x7f ; '.'
0000000000001122         db  0x20 ; ' '
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x00 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x07 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x16 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x00 ; '.'
0000000000001131         db  0x00 ; '.'
0000000000001132         db  0x00 ; '.'
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x08 ; '.'
0000000000001139         db  0x7f ; '.'
000000000000113a         db  0x20 ; ' '
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x00 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x07 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x17 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x00 ; '.'
0000000000001149         db  0x00 ; '.'
000000000000114a         db  0x00 ; '.'
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x10 ; '.'
0000000000001151         db  0x7f ; '.'
0000000000001152         db  0x20 ; ' '
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x00 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x07 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x19 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x00 ; '.'
0000000000001161         db  0x00 ; '.'
0000000000001162         db  0x00 ; '.'
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x18 ; '.'
0000000000001169         db  0x7f ; '.'
000000000000116a         db  0x20 ; ' '
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x00 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x07 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x1a ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x00 ; '.'
0000000000001179         db  0x00 ; '.'
000000000000117a         db  0x00 ; '.'
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x20 ; ' '
0000000000001181         db  0x7f ; '.'
0000000000001182         db  0x20 ; ' '
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x00 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x07 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x1b ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x00 ; '.'
0000000000001191         db  0x00 ; '.'
0000000000001192         db  0x00 ; '.'
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x28 ; '('
0000000000001199         db  0x7f ; '.'
000000000000119a         db  0x20 ; ' '
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x00 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x07 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x1d ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x00 ; '.'
00000000000011a9         db  0x00 ; '.'
00000000000011aa         db  0x00 ; '.'
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x30 ; '0'
00000000000011b1         db  0x7f ; '.'
00000000000011b2         db  0x20 ; ' '
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x00 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x07 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x1e ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x00 ; '.'
00000000000011c1         db  0x00 ; '.'
00000000000011c2         db  0x00 ; '.'
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x38 ; '8'
00000000000011c9         db  0x7f ; '.'
00000000000011ca         db  0x20 ; ' '
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x00 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x07 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x1f ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x00 ; '.'
00000000000011d9         db  0x00 ; '.'
00000000000011da         db  0x00 ; '.'
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x40 ; '@'
00000000000011e1         db  0x7f ; '.'
00000000000011e2         db  0x20 ; ' '
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x00 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x07 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x20 ; ' '
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x00 ; '.'
00000000000011f1         db  0x00 ; '.'
00000000000011f2         db  0x00 ; '.'
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x48 ; 'H'
00000000000011f9         db  0x7f ; '.'
00000000000011fa         db  0x20 ; ' '
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x00 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x07 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x21 ; '!'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x00 ; '.'
0000000000001209         db  0x00 ; '.'
000000000000120a         db  0x00 ; '.'
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x50 ; 'P'
0000000000001211         db  0x7f ; '.'
0000000000001212         db  0x20 ; ' '
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x00 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x07 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x22 ; '"'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x00 ; '.'
0000000000001221         db  0x00 ; '.'
0000000000001222         db  0x00 ; '.'
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x58 ; 'X'
0000000000001229         db  0x7f ; '.'
000000000000122a         db  0x20 ; ' '
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x00 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x07 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x23 ; '#'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x00 ; '.'
0000000000001239         db  0x00 ; '.'
000000000000123a         db  0x00 ; '.'
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x60 ; '`'
0000000000001241         db  0x7f ; '.'
0000000000001242         db  0x20 ; ' '
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x00 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x07 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x24 ; '$'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x00 ; '.'
0000000000001251         db  0x00 ; '.'
0000000000001252         db  0x00 ; '.'
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x68 ; 'h'
0000000000001259         db  0x7f ; '.'
000000000000125a         db  0x20 ; ' '
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x00 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x07 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x25 ; '%'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x00 ; '.'
0000000000001269         db  0x00 ; '.'
000000000000126a         db  0x00 ; '.'
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x70 ; 'p'
0000000000001271         db  0x7f ; '.'
0000000000001272         db  0x20 ; ' '
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x00 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x07 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x26 ; '&'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x00 ; '.'
0000000000001281         db  0x00 ; '.'
0000000000001282         db  0x00 ; '.'
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x78 ; 'x'
0000000000001289         db  0x7f ; '.'
000000000000128a         db  0x20 ; ' '
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x00 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x07 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x27 ; '''
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x00 ; '.'
0000000000001299         db  0x00 ; '.'
000000000000129a         db  0x00 ; '.'
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x80 ; '.'
00000000000012a1         db  0x7f ; '.'
00000000000012a2         db  0x20 ; ' '
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x00 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x07 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x28 ; '('
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x00 ; '.'
00000000000012b1         db  0x00 ; '.'
00000000000012b2         db  0x00 ; '.'
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x88 ; '.'
00000000000012b9         db  0x7f ; '.'
00000000000012ba         db  0x20 ; ' '
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x00 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x07 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x29 ; ')'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x00 ; '.'
00000000000012c9         db  0x00 ; '.'
00000000000012ca         db  0x00 ; '.'
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x90 ; '.'
00000000000012d1         db  0x7f ; '.'
00000000000012d2         db  0x20 ; ' '
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x00 ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x07 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x2a ; '*'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x00 ; '.'
00000000000012e1         db  0x00 ; '.'
00000000000012e2         db  0x00 ; '.'
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x98 ; '.'
00000000000012e9         db  0x7f ; '.'
00000000000012ea         db  0x20 ; ' '
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x00 ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x07 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x2b ; '+'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x00 ; '.'
00000000000012f9         db  0x00 ; '.'
00000000000012fa         db  0x00 ; '.'
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0xa0 ; '.'
0000000000001301         db  0x7f ; '.'
0000000000001302         db  0x20 ; ' '
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x00 ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x07 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x2c ; ','
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x00 ; '.'
0000000000001311         db  0x00 ; '.'
0000000000001312         db  0x00 ; '.'
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0xa8 ; '.'
0000000000001319         db  0x7f ; '.'
000000000000131a         db  0x20 ; ' '
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x00 ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x07 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x2d ; '-'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x00 ; '.'
0000000000001329         db  0x00 ; '.'
000000000000132a         db  0x00 ; '.'
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0xb0 ; '.'
0000000000001331         db  0x7f ; '.'
0000000000001332         db  0x20 ; ' '
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x00 ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x07 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x2f ; '/'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x00 ; '.'
0000000000001341         db  0x00 ; '.'
0000000000001342         db  0x00 ; '.'
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0xb8 ; '.'
0000000000001349         db  0x7f ; '.'
000000000000134a         db  0x20 ; ' '
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x00 ; '.'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x07 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x30 ; '0'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x00 ; '.'
0000000000001359         db  0x00 ; '.'
000000000000135a         db  0x00 ; '.'
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0xc0 ; '.'
0000000000001361         db  0x7f ; '.'
0000000000001362         db  0x20 ; ' '
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x00 ; '.'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x07 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x32 ; '2'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x00 ; '.'
0000000000001371         db  0x00 ; '.'
0000000000001372         db  0x00 ; '.'
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x1378; 0x138f[ (23 bytes)
        ; File offset : [4984; 5007[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
0000000000001378         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
000000000000137c         mov        rax, qword [qword_207fd8]                   ; qword_207fd8
0000000000001383         test       rax, rax
0000000000001386         je         loc_138a

0000000000001388         call       rax

                     loc_138a:
000000000000138a         add        rsp, 0x8                                    ; CODE XREF=_init+14
000000000000138e         ret
                        ; endp
000000000000138f         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x1390; 0x1670[ (736 bytes)
        ; File offset : [5008; 5744[ (736 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_1390:
0000000000001390         push       qword [qword_207e50]                        ; Begin of unwind block (FDE at 0x61e4), qword_207e50, CODE XREF=sub_13a6+5
0000000000001396         jmp        qword [qword_207e50+8]                      ; 0x207e58
                        ; endp
000000000000139c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___uflow:        // __uflow
00000000000013a0         jmp        qword [__uflow@GOT]                         ; __uflow, __uflow@GOT, CODE XREF=paste_parallel+720, paste_parallel+1131, paste_serial+359, paste_serial+563
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_13a6:
00000000000013a6         push       0x0
00000000000013ab         jmp        loc_1390


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
00000000000013b0         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=main+526, paste_parallel+949, paste_parallel+959, quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_13b6:
00000000000013b6         push       0x1
00000000000013bb         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
00000000000013c0         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_3160+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_13c6:
00000000000013c6         push       0x2
00000000000013cb         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
00000000000013d0         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=write_error+23, main+679, paste_parallel+390, paste_parallel+1139, paste_parallel+1384, paste_serial+29, close_stdout+22, quotearg_n_options+28, clone_quoting_options+7, quotearg_buffer+45, quotearg_alloc_mem+42
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_13d6:
00000000000013d6         push       0x3
00000000000013db         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
00000000000013e0         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+668, usage+861
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_13e6:
00000000000013e6         push       0x4
00000000000013eb         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
00000000000013f0         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_13f6:
00000000000013f6         push       0x5
00000000000013fb         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000001400         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1406:
0000000000001406         push       0x6
000000000000140b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_clearerr_unlocked:        // clearerr_unlocked
0000000000001410         jmp        qword [clearerr_unlocked@GOT]               ; clearerr_unlocked, clearerr_unlocked@GOT, CODE XREF=paste_parallel+1058, paste_serial+453
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1416:
0000000000001416         push       0x7
000000000000141b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001420         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+80
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1426:
0000000000001426         push       0x8
000000000000142b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001430         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1436:
0000000000001436         push       0x9
000000000000143b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001440         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+68
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1446:
0000000000001446         push       0xa
000000000000144b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001450         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=write_error+15, main+597, paste_parallel+1427, usage+56, usage+102, usage+146, usage+183, usage+220, usage+257, usage+294, usage+331
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1456:
0000000000001456         push       0xb
000000000000145b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001460         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1466:
0000000000001466         push       0xc
000000000000146b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001470         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=quotearg_buffer_restyled+343, sub_3160+411, sub_3160+1742, xstrdup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1476:
0000000000001476         push       0xd
000000000000147b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000001480         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=sub_3160+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, version_etc_va+101, version_etc+192, rpl_mbrtowc+126
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1486:
0000000000001486         push       0xe
000000000000148b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000001490         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+133
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1496:
0000000000001496         push       0xf
000000000000149b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
00000000000014a0         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14a6:
00000000000014a6         push       0x10
00000000000014ab         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
00000000000014b0         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=paste_parallel+555, paste_parallel+1245, paste_parallel+1270, paste_parallel+1299, paste_serial+683, paste_serial+711, paste_serial+739, paste_serial+763
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14b6:
00000000000014b6         push       0x11
00000000000014bb         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
00000000000014c0         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14c6:
00000000000014c6         push       0x12
00000000000014cb         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
00000000000014d0         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14d6:
00000000000014d6         push       0x13
00000000000014db         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
00000000000014e0         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14e6:
00000000000014e6         push       0x14
00000000000014eb         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_posix_fadvise:        // posix_fadvise
00000000000014f0         jmp        qword [posix_fadvise@GOT]                   ; posix_fadvise, posix_fadvise@GOT, CODE XREF=fdadvise, fadvise+22
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14f6:
00000000000014f6         push       0x15
00000000000014fb         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001500         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1506:
0000000000001506         push       0x16
000000000000150b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001510         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+157, usage+194, usage+231, usage+268, usage+305, usage+342, usage+386, usage+976, version_etc_arn+135, emit_bug_reporting_address+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1516:
0000000000001516         push       0x17
000000000000151b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001520         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1526:
0000000000001526         push       0x18
000000000000152b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001530         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=xmemdup+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1536:
0000000000001536         push       0x19
000000000000153b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001540         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=paste_parallel+227, fadvise+8, rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1546:
0000000000001546         push       0x1a
000000000000154b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000001550         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1556:
0000000000001556         push       0x1b
000000000000155b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000001560         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1566:
0000000000001566         push       0x1c
000000000000156b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000001570         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1576:
0000000000001576         push       0x1d
000000000000157b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000001580         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1586:
0000000000001586         push       0x1e
000000000000158b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite_unlocked:        // fwrite_unlocked
0000000000001590         jmp        qword [fwrite_unlocked@GOT]                 ; fwrite_unlocked, fwrite_unlocked@GOT, CODE XREF=paste_parallel+431, paste_parallel+880
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1596:
0000000000001596         push       0x1f
000000000000159b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
00000000000015a0         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15a6:
00000000000015a6         push       0x20
00000000000015ab         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
00000000000015b0         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+49, usage+643, usage+836, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15b6:
00000000000015b6         push       0x21
00000000000015bb         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
00000000000015c0         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=usage+120, usage+631, usage+724, usage+785, usage+824, usage+927, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15c6:
00000000000015c6         push       0x22
00000000000015cb         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
00000000000015d0         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=write_error+40, main+617, main+700, paste_parallel+1032, paste_parallel+1227, paste_parallel+1408, paste_parallel+1444, paste_serial+541, paste_serial+662, close_stdout+125, close_stdout+157
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15d6:
00000000000015d6         push       0x23
00000000000015db         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
00000000000015e0         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15e6:
00000000000015e6         push       0x24
00000000000015eb         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fopen:        // fopen
00000000000015f0         jmp        qword [fopen@GOT]                           ; fopen, fopen@GOT, CODE XREF=paste_parallel+201, paste_serial+314
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15f6:
00000000000015f6         push       0x25
00000000000015fb         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001600         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1606:
0000000000001606         push       0x26
000000000000160b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001610         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+252, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1616:
0000000000001616         push       0x27
000000000000161b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001620         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1626:
0000000000001626         push       0x28
000000000000162b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001630         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1636:
0000000000001636         push       0x29
000000000000163b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000001640         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_3160+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1646:
0000000000001646         push       0x2a
000000000000164b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001650         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_3160+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1656:
0000000000001656         push       0x2b
000000000000165b         jmp        0x1390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000001660         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_2f00+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1666:
0000000000001666         push       0x2c
000000000000166b         jmp        0x1390
                        ; endp


        ; Section .plt.got
        ; Range: [0x1670; 0x1678[ (8 bytes)
        ; File offset : [5744; 5752[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_207fe8:        // qword_207fe8
0000000000001670         jmp        qword [qword_207fe8]                        ; qword, End of unwind block (FDE at 0x61e4), Begin of unwind block (FDE at 0x620c), qword_207fe8, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000001676         align      8
0000000000001678         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x620c)
0000000000001679         db  0x00 ; '.'
000000000000167a         db  0x00 ; '.'
000000000000167b         db  0x00 ; '.'
000000000000167c         db  0x00 ; '.'
000000000000167d         db  0x00 ; '.'
000000000000167e         db  0x00 ; '.'
000000000000167f         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x1680; 0x51ce[ (15182 bytes)
        ; File offset : [5760; 20942[ (15182 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     write_error:
0000000000001680         push       rbx                                         ; Begin of unwind block (FDE at 0x6224), CODE XREF=paste_parallel+564, paste_serial+696
0000000000001681         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error"
0000000000001688         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000168d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000168f         call       j_dcgettext                                 ; dcgettext
0000000000001694         mov        rbx, rax
0000000000001697         call       j___errno_location                          ; __errno_location
000000000000169c         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000169e         mov        rdx, rbx                                    ; argument "__format" for method j_error
00000000000016a1         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000016a6         xor        eax, eax
00000000000016a8         call       j_error                                     ; error
00000000000016ad         nop        dword [rax]                                 ; End of unwind block (FDE at 0x6224)
                     main:
00000000000016b0         push       r13                                         ; Begin of unwind block (FDE at 0x6304), DATA XREF=_start+29
00000000000016b2         push       r12
00000000000016b4         lea        r13, qword [aFullDocumentat+27]             ; 0x52b2
00000000000016bb         push       rbp
00000000000016bc         push       rbx
00000000000016bd         mov        ebp, edi
00000000000016bf         mov        rbx, rsi
00000000000016c2         lea        r12, qword [aFullDocumentat+30]             ; 0x52b5
00000000000016c9         sub        rsp, 0x8
00000000000016cd         mov        rdi, qword [rsi]
00000000000016d0         call       set_program_name                            ; set_program_name
00000000000016d5         lea        rsi, qword [aFullDocumentat+31]             ; argument "__locale" for method j_setlocale, 0x52b6
00000000000016dc         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
00000000000016e1         call       j_setlocale                                 ; setlocale
00000000000016e6         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
00000000000016ed         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
00000000000016f4         call       j_bindtextdomain                            ; bindtextdomain
00000000000016f9         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
0000000000001700         call       j_textdomain                                ; textdomain
0000000000001705         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
000000000000170c         call       atexit                                      ; atexit
0000000000001711         mov        byte [have_read_stdin], 0x0                 ; have_read_stdin
0000000000001718         mov        byte [serial_merge], 0x0                    ; serial_merge

                     loc_171f:
000000000000171f         lea        rcx, qword [longopts]                       ; argument "__longopts" for method j_getopt_long, longopts, CODE XREF=main+179, main+280, main+295
0000000000001726         lea        rdx, qword [aDavidMIhnat+15]                ; argument "__shortopts" for method j_getopt_long, 0x52ee
000000000000172d         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000001730         mov        rsi, rbx                                    ; argument "___argv" for method j_getopt_long
0000000000001733         mov        edi, ebp                                    ; argument "___argc" for method j_getopt_long
0000000000001735         call       j_getopt_long                               ; getopt_long
000000000000173a         cmp        eax, 0xffffffff
000000000000173d         je         loc_17dc

0000000000001743         cmp        eax, 0x64
0000000000001746         je         loc_17b8

0000000000001748         jle        loc_1768

000000000000174a         cmp        eax, 0x73
000000000000174d         je         loc_17d0

0000000000001753         cmp        eax, 0x7a
0000000000001756         jne        loc_1997

000000000000175c         mov        byte [line_delim], 0x0                      ; line_delim
0000000000001763         jmp        loc_171f
0000000000001765         align      8

                     loc_1768:
0000000000001768         cmp        eax, 0xffffff7d                             ; CODE XREF=main+152
000000000000176d         jne        loc_1989

0000000000001773         sub        rsp, 0x8
0000000000001777         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000177e         mov        rcx, qword [Version]                        ; Version
0000000000001785         push       0x0
0000000000001787         lea        r9, qword [aDavidMackenzie]                 ; "David MacKenzie"
000000000000178e         lea        r8, qword [aDavidMIhnat]                    ; "David M. Ihnat"
0000000000001795         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x5285
000000000000179c         lea        rsi, qword [aPaste]                         ; "paste"
00000000000017a3         xor        eax, eax
00000000000017a5         call       version_etc                                 ; version_etc
00000000000017aa         xor        edi, edi                                    ; argument "__status" for method j_exit
00000000000017ac         call       j_exit                                      ; exit
                        ; endp
00000000000017b1         align      8

                     loc_17b8:
00000000000017b8         mov        r12, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+150
00000000000017bf         cmp        byte [r12], 0x0
00000000000017c4         cmove      r12, r13
00000000000017c8         jmp        loc_171f
00000000000017cd         align      16

                     loc_17d0:
00000000000017d0         mov        byte [serial_merge], 0x1                    ; serial_merge, CODE XREF=main+157
00000000000017d7         jmp        loc_171f

                     loc_17dc:
00000000000017dc         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+141
00000000000017e3         sub        ebp, eax
00000000000017e5         jne        loc_17f7

00000000000017e7         lea        rcx, qword [aLibs+10]                       ; 0x56da
00000000000017ee         mov        ebp, 0x1
00000000000017f3         mov        qword [rbx+rax*8], rcx

                     loc_17f7:
00000000000017f7         mov        rdi, r12                                    ; CODE XREF=main+309
00000000000017fa         call       xstrdup                                     ; xstrdup
00000000000017ff         mov        rcx, r12
0000000000001802         mov        qword [delims], rax                         ; delims
0000000000001809         jmp        loc_181a
000000000000180b         align      16

                     loc_1810:
0000000000001810         add        rcx, 0x1                                    ; CODE XREF=main+372
0000000000001814         mov        byte [rax], dl

                     loc_1816:
0000000000001816         add        rax, 0x1                                    ; CODE XREF=main+467

                     loc_181a:
000000000000181a         movzx      edx, byte [rcx]                             ; CODE XREF=main+345
000000000000181d         test       dl, dl
000000000000181f         je         loc_1885

0000000000001821         cmp        dl, 0x5c
0000000000001824         jne        loc_1810

0000000000001826         movzx      edx, byte [rcx+1]
000000000000182a         cmp        dl, 0x66
000000000000182d         je         loc_1981

0000000000001833         jg         loc_185b

0000000000001835         cmp        dl, 0x30
0000000000001838         je         loc_1979

000000000000183e         jle        loc_18da

0000000000001844         cmp        dl, 0x5c
0000000000001847         je         loc_192b

000000000000184d         cmp        dl, 0x62
0000000000001850         jne        loc_193b

0000000000001856         mov        byte [rax], 0x8
0000000000001859         jmp        loc_187f

                     loc_185b:
000000000000185b         cmp        dl, 0x72                                    ; CODE XREF=main+387
000000000000185e         je         loc_1971

0000000000001864         jle        loc_191e

000000000000186a         cmp        dl, 0x74
000000000000186d         je         loc_1933

0000000000001873         cmp        dl, 0x76
0000000000001876         jne        loc_193b

000000000000187c         mov        byte [rax], 0xb

                     loc_187f:
000000000000187f         add        rcx, 0x2                                    ; CODE XREF=main+425, main+630, main+638, main+646, main+653, main+708, main+716, main+724
0000000000001883         jmp        loc_1816

                     loc_1885:
0000000000001885         cmp        byte [serial_merge], 0x0                    ; serial_merge, CODE XREF=main+367
000000000000188c         mov        qword [delim_end], rax                      ; delim_end
0000000000001893         lea        rdx, qword [paste_parallel]                 ; paste_parallel
000000000000189a         lea        rax, qword [paste_serial]                   ; paste_serial
00000000000018a1         movsxd     rdi, ebp
00000000000018a4         cmove      rax, rdx
00000000000018a8         movsxd     rdx, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
00000000000018af         lea        rsi, qword [rbx+rdx*8]
00000000000018b3         call       rax
00000000000018b5         mov        rdi, qword [delims]                         ; argument "__ptr" for method j_free, delims
00000000000018bc         mov        ebx, eax
00000000000018be         call       j_free                                      ; free
00000000000018c3         cmp        byte [have_read_stdin], 0x0                 ; have_read_stdin
00000000000018ca         jne        loc_1942

                     loc_18cc:
00000000000018cc         xor        ebx, 0x1                                    ; CODE XREF=main+673
00000000000018cf         pop        rdx
00000000000018d0         movzx      eax, bl
00000000000018d3         pop        rbx
00000000000018d4         pop        rbp
00000000000018d5         pop        r12
00000000000018d7         pop        r13
00000000000018d9         ret
                        ; endp

                     loc_18da:
00000000000018da         test       dl, dl                                      ; CODE XREF=main+398
00000000000018dc         jne        loc_193b

00000000000018de         mov        rdx, r12
00000000000018e1         mov        esi, 0x6
00000000000018e6         xor        edi, edi
00000000000018e8         mov        qword [delim_end], rax                      ; delim_end
00000000000018ef         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000018f4         lea        rsi, qword [aDelimiterListE]                ; argument "msgid" for method j_dcgettext, "delimiter list ends with an unescaped backslash: %s"
00000000000018fb         mov        rbx, rax
00000000000018fe         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001903         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001905         call       j_dcgettext                                 ; dcgettext
000000000000190a         mov        rcx, rbx
000000000000190d         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001910         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001912         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001917         xor        eax, eax
0000000000001919         call       j_error                                     ; error

                     loc_191e:
000000000000191e         cmp        dl, 0x6e                                    ; CODE XREF=main+436
0000000000001921         jne        loc_193b

0000000000001923         mov        byte [rax], 0xa
0000000000001926         jmp        loc_187f

                     loc_192b:
000000000000192b         mov        byte [rax], 0x5c                            ; CODE XREF=main+407
000000000000192e         jmp        loc_187f

                     loc_1933:
0000000000001933         mov        byte [rax], 0x9                             ; CODE XREF=main+445
0000000000001936         jmp        loc_187f

                     loc_193b:
000000000000193b         mov        byte [rax], dl                              ; CODE XREF=main+416, main+454, main+556, main+625
000000000000193d         jmp        loc_187f

                     loc_1942:
0000000000001942         mov        rdi, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5, CODE XREF=main+538
0000000000001949         call       rpl_fclose                                  ; rpl_fclose
000000000000194e         add        eax, 0x1
0000000000001951         jne        loc_18cc

0000000000001957         call       j___errno_location                          ; __errno_location
000000000000195c         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000195e         lea        rdx, qword [aLibs+10]                       ; argument "__format" for method j_error, 0x56da
0000000000001965         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000196a         xor        eax, eax
000000000000196c         call       j_error                                     ; error

                     loc_1971:
0000000000001971         mov        byte [rax], 0xd                             ; CODE XREF=main+430
0000000000001974         jmp        loc_187f

                     loc_1979:
0000000000001979         mov        byte [rax], 0x0                             ; CODE XREF=main+392
000000000000197c         jmp        loc_187f

                     loc_1981:
0000000000001981         mov        byte [rax], 0xc                             ; CODE XREF=main+381
0000000000001984         jmp        loc_187f

                     loc_1989:
0000000000001989         cmp        eax, 0xffffff7e                             ; CODE XREF=main+189
000000000000198e         jne        loc_1997

0000000000001990         xor        edi, edi                                    ; argument #1 for method usage
0000000000001992         call       usage                                       ; usage

                     loc_1997:
0000000000001997         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+166, main+734
000000000000199c         call       usage                                       ; usage
00000000000019a1         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x6304)
00000000000019ab         nop        dword [rax+rax]
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
00000000000019b0         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x61b4)
00000000000019b2         mov        r9, rdx
00000000000019b5         pop        rsi
00000000000019b6         mov        rdx, rsp
00000000000019b9         and        rsp, 0xfffffffffffffff0
00000000000019bd         push       rax
00000000000019be         push       rsp
00000000000019bf         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
00000000000019c6         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
00000000000019cd         lea        rdi, qword [main]                           ; main
00000000000019d4         call       qword [qword_207fc8+8]                      ; 0x207fd0
00000000000019da         hlt
                        ; endp
00000000000019db         align      32                                          ; End of unwind block (FDE at 0x61b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
00000000000019e0         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
00000000000019e7         push       rbp
00000000000019e8         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
00000000000019ef         cmp        rax, rdi
00000000000019f2         mov        rbp, rsp
00000000000019f5         je         loc_1a10

00000000000019f7         mov        rax, qword [qword_207fc8]                   ; qword_207fc8
00000000000019fe         test       rax, rax
0000000000001a01         je         loc_1a10

0000000000001a03         pop        rbp
0000000000001a04         jmp        rax
                        ; endp
0000000000001a06         align      16

                     loc_1a10:
0000000000001a10         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000001a11         ret
                        ; endp
0000000000001a12         align      32

                     register_tm_clones:
0000000000001a20         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000001a27         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001a2e         push       rbp
0000000000001a2f         sub        rsi, rdi
0000000000001a32         mov        rbp, rsp
0000000000001a35         sar        rsi, 0x3
0000000000001a39         mov        rax, rsi
0000000000001a3c         shr        rax, 0x3f
0000000000001a40         add        rsi, rax
0000000000001a43         sar        rsi, 0x1
0000000000001a46         je         loc_1a60

0000000000001a48         mov        rax, qword [qword_207fe0]                   ; qword_207fe0
0000000000001a4f         test       rax, rax
0000000000001a52         je         loc_1a60

0000000000001a54         pop        rbp
0000000000001a55         jmp        rax
                        ; endp
0000000000001a57         align      32

                     loc_1a60:
0000000000001a60         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000001a61         ret
                        ; endp
0000000000001a62         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000001a70         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000001a77         jne        loc_1aa8

0000000000001a79         cmp        qword [qword_207fe8], 0x0                   ; qword_207fe8
0000000000001a81         push       rbp
0000000000001a82         mov        rbp, rsp
0000000000001a85         je         loc_1a93

0000000000001a87         mov        rdi, qword [__dso_handle]                   ; __dso_handle
0000000000001a8e         call       j_qword_207fe8                              ; qword_207fe8

                     loc_1a93:
0000000000001a93         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000001a98         mov        byte [completed.7697], 0x1                  ; completed.7697
0000000000001a9f         pop        rbp
0000000000001aa0         ret
                        ; endp
0000000000001aa1         align      8

                     loc_1aa8:
0000000000001aa8         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
0000000000001aaa         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000001ab0         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000001ab1         mov        rbp, rsp
0000000000001ab4         pop        rbp
0000000000001ab5         jmp        register_tm_clones                          ; register_tm_clones
0000000000001aba         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_49: int8_t, -73
        ;    var_4A: int8_t, -74
        ;    var_50: int32_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_B4: int32_t, -180
        ;    var_B5: int8_t, -181
        ;    var_C0: int64_t, -192


                     paste_parallel:
0000000000001ac0         push       r15                                         ; Begin of unwind block (FDE at 0x623c), DATA XREF=main+483
0000000000001ac2         push       r14
0000000000001ac4         push       r13
0000000000001ac6         push       r12
0000000000001ac8         push       rbp
0000000000001ac9         push       rbx
0000000000001aca         mov        rbx, rdi
0000000000001acd         add        rdi, 0x2                                    ; argument #1 for method xmalloc
0000000000001ad1         sub        rsp, 0x48
0000000000001ad5         mov        qword [rsp+0x78+var_48], rsi
0000000000001ada         call       xmalloc                                     ; xmalloc
0000000000001adf         mov        edx, 0x8
0000000000001ae4         lea        rcx, qword [rbx+1]
0000000000001ae8         mov        qword [rsp+0x78+var_58], rax
0000000000001aed         mov        rax, rdx
0000000000001af0         mul        rcx
0000000000001af3         jo         loc_2006

0000000000001af9         xor        esi, esi

                     loc_1afb:
0000000000001afb         test       rax, rax                                    ; CODE XREF=paste_parallel+1355
0000000000001afe         js         loc_2010

0000000000001b04         test       rsi, rsi
0000000000001b07         jne        loc_2010

0000000000001b0d         lea        rdi, qword [rcx*8]                          ; argument #1 for method xmalloc
0000000000001b15         call       xmalloc                                     ; xmalloc
0000000000001b1a         test       rbx, rbx
0000000000001b1d         mov        qword [rsp+0x78+var_40], rax
0000000000001b22         je         loc_1ffc

0000000000001b28         mov        r13, qword [rsp+0x78+var_48]
0000000000001b2d         mov        byte [rsp+0x78+var_49], 0x0
0000000000001b32         xor        r14d, r14d
0000000000001b35         lea        r12, qword [aLibs+10]                       ; 0x56da
0000000000001b3c         mov        ebp, 0x1
0000000000001b41         mov        r15, rax
0000000000001b44         jmp        loc_1b65

                     loc_1b46:
0000000000001b46         mov        rax, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5, CODE XREF=paste_parallel+189
0000000000001b4d         add        r13, 0x8
0000000000001b51         mov        byte [have_read_stdin], bpl                 ; have_read_stdin
0000000000001b58         mov        qword [r15+r14*8], rax
0000000000001b5c         add        r14, 0x1
0000000000001b60         cmp        rbx, r14
0000000000001b63         je         loc_1bd5

                     loc_1b65:
0000000000001b65         mov        r8, qword [r13]                             ; CODE XREF=paste_parallel+132, paste_parallel+275
0000000000001b69         mov        ecx, 0x2
0000000000001b6e         mov        rdi, r12
0000000000001b71         mov        rsi, r8
0000000000001b74         rep  cmpsb byte [rsi], byte [rdi]
0000000000001b76         seta       al
0000000000001b79         sbb        al, 0x0
0000000000001b7b         test       al, al
0000000000001b7d         je         loc_1b46

0000000000001b7f         lea        rsi, qword [aWriteError+10]                 ; argument "__modes" for method j_fopen, 0x51ee
0000000000001b86         mov        rdi, r8                                     ; argument "__filename" for method j_fopen
0000000000001b89         call       j_fopen                                     ; fopen
0000000000001b8e         test       rax, rax
0000000000001b91         mov        qword [r15+r14*8], rax
0000000000001b95         je         loc_2015

0000000000001b9b         mov        rdi, rax                                    ; argument "__stream" for method j_fileno
0000000000001b9e         mov        qword [rsp+0x78+var_70], rax
0000000000001ba3         call       j_fileno                                    ; fileno
0000000000001ba8         test       eax, eax
0000000000001baa         movzx      eax, byte [rsp+0x78+var_49]
0000000000001baf         mov        rcx, qword [rsp+0x78+var_70]
0000000000001bb4         mov        esi, 0x2                                    ; argument #2 for method fadvise
0000000000001bb9         mov        rdi, rcx                                    ; argument #1 for method fadvise
0000000000001bbc         cmove      eax, ebp
0000000000001bbf         add        r14, 0x1
0000000000001bc3         add        r13, 0x8
0000000000001bc7         mov        byte [rsp+0x78+var_49], al
0000000000001bcb         call       fadvise                                     ; fadvise
0000000000001bd0         cmp        rbx, r14
0000000000001bd3         jne        loc_1b65

                     loc_1bd5:
0000000000001bd5         cmp        byte [rsp+0x78+var_49], 0x0                 ; CODE XREF=paste_parallel+163
0000000000001bda         mov        qword [rsp+0x78+var_70], r14
0000000000001bdf         je         loc_1fe8

0000000000001be5         cmp        byte [have_read_stdin], 0x0                 ; have_read_stdin
0000000000001bec         jne        loc_2045

0000000000001bf2         mov        rax, qword [rsp+0x78+var_70]
0000000000001bf7         mov        qword [rsp+0x78+var_68], rax
0000000000001bfc         nop        dword [rax]

                     loc_1c00:
0000000000001c00         mov        rbp, qword [delims]                         ; delims, CODE XREF=paste_parallel+938, paste_parallel+1335
0000000000001c07         mov        r15, qword [rsp+0x78+var_40]
0000000000001c0c         mov        ebx, 0x1
0000000000001c11         xor        r12d, r12d
0000000000001c14         mov        byte [rsp+0x78+var_4A], 0x0
0000000000001c19         nop        dword [rax]

                     loc_1c20:
0000000000001c20         mov        r13, qword [r15]                            ; CODE XREF=paste_parallel+702
0000000000001c23         test       r13, r13
0000000000001c26         je         loc_1d36

0000000000001c2c         mov        rax, qword [r13+8]
0000000000001c30         cmp        qword [r13+0x10], rax
0000000000001c34         jbe        loc_1f28

0000000000001c3a         lea        rdx, qword [rax+1]
0000000000001c3e         mov        qword [r13+8], rdx
0000000000001c42         movzx      r14d, byte [rax]
0000000000001c46         call       j___errno_location                          ; __errno_location
0000000000001c4b         mov        qword [rsp+0x78+var_60], rax
0000000000001c50         mov        eax, dword [rax]
0000000000001c52         test       r12, r12
0000000000001c55         mov        dword [rsp+0x78+var_50], eax
0000000000001c59         je         loc_1c82

                     loc_1c5b:
0000000000001c5b         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5, CODE XREF=paste_parallel+1168
0000000000001c62         mov        rdi, qword [rsp+0x78+var_58]                ; argument "__ptr" for method j_fwrite_unlocked
0000000000001c67         mov        rdx, r12                                    ; argument "__n" for method j_fwrite_unlocked
0000000000001c6a         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000001c6f         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000001c74         cmp        r12, rax
0000000000001c77         jne        loc_1cf4

0000000000001c79         xor        r12d, r12d

                     loc_1c7c:
0000000000001c7c         cmp        r14d, 0xffffffff                            ; CODE XREF=paste_parallel+1158, paste_parallel+1174
0000000000001c80         je         loc_1d00

                     loc_1c82:
0000000000001c82         movzx      eax, byte [line_delim]                      ; line_delim, CODE XREF=paste_parallel+409
0000000000001c89         mov        esi, r14d
0000000000001c8c         cmp        r14d, eax
0000000000001c8f         jne        loc_1cd6

0000000000001c91         jmp        loc_1dd8
0000000000001c96         align      32

                     loc_1ca0:
0000000000001ca0         lea        rax, qword [rdx+1]                          ; CODE XREF=paste_parallel+549
0000000000001ca4         mov        qword [rdi+0x28], rax
0000000000001ca8         mov        byte [rdx], sil

                     loc_1cab:
0000000000001cab         mov        rdi, qword [r15]                            ; CODE XREF=paste_parallel+562
0000000000001cae         mov        rax, qword [rdi+8]
0000000000001cb2         cmp        rax, qword [rdi+0x10]
0000000000001cb6         jae        loc_1d90

0000000000001cbc         lea        rdx, qword [rax+1]
0000000000001cc0         mov        qword [rdi+8], rdx
0000000000001cc4         movzx      esi, byte [rax]

                     loc_1cc7:
0000000000001cc7         movzx      eax, byte [line_delim]                      ; line_delim, CODE XREF=paste_parallel+730
0000000000001cce         cmp        eax, esi
0000000000001cd0         je         loc_1dd8

                     loc_1cd6:
0000000000001cd6         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=paste_parallel+463
0000000000001cdd         mov        rdx, qword [rdi+0x28]
0000000000001ce1         cmp        rdx, qword [rdi+0x30]
0000000000001ce5         jb         loc_1ca0

0000000000001ce7         movzx      esi, sil                                    ; argument #2 for method j___overflow
0000000000001ceb         call       j___overflow                                ; __overflow
0000000000001cf0         test       eax, eax
0000000000001cf2         jns        loc_1cab

                     loc_1cf4:
0000000000001cf4         call       write_error                                 ; write_error, CODE XREF=paste_parallel+439, paste_parallel+888, paste_parallel+1258, paste_parallel+1283, paste_parallel+1312
0000000000001cf9         nop        dword [rax]

                     loc_1d00:
0000000000001d00         test       byte [r13], 0x20                            ; CODE XREF=paste_parallel+448
0000000000001d05         jne        loc_1ea0

0000000000001d0b         cmp        r13, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5
0000000000001d12         mov        rdi, r13
0000000000001d15         je         loc_1ee2

                     loc_1d1b:
0000000000001d1b         call       rpl_fclose                                  ; rpl_fclose, CODE XREF=paste_parallel+1052
0000000000001d20         cmp        eax, 0xffffffff
0000000000001d23         je         loc_1f60

                     loc_1d29:
0000000000001d29         sub        qword [rsp+0x78+var_68], 0x1                ; CODE XREF=paste_parallel+1063, paste_parallel+1237
0000000000001d2f         mov        qword [r15], 0x0

                     loc_1d36:
0000000000001d36         cmp        qword [rsp+0x78+var_70], rbx                ; CODE XREF=paste_parallel+358
0000000000001d3b         je         loc_1e10

0000000000001d41         movzx      eax, byte [rbp]
0000000000001d45         test       al, al
0000000000001d47         je         loc_1d56

0000000000001d49         mov        rcx, qword [rsp+0x78+var_58]
0000000000001d4e         mov        byte [rcx+r12], al
0000000000001d52         add        r12, 0x1

                     loc_1d56:
0000000000001d56         add        rbp, 0x1                                    ; CODE XREF=paste_parallel+647
0000000000001d5a         cmp        qword [delim_end], rbp                      ; delim_end
0000000000001d61         je         loc_1dc9

                     loc_1d63:
0000000000001d63         cmp        qword [rsp+0x78+var_70], rbx                ; CODE XREF=paste_parallel+775, paste_parallel+784, paste_parallel+835
0000000000001d68         seta       dl
0000000000001d6b         cmp        qword [rsp+0x78+var_68], 0x0
0000000000001d71         setne      al
0000000000001d74         add        r15, 0x8
0000000000001d78         add        rbx, 0x1
0000000000001d7c         test       dl, al
0000000000001d7e         jne        loc_1c20

0000000000001d84         jmp        loc_1e64
0000000000001d89         align      16

                     loc_1d90:
0000000000001d90         call       j___uflow                                   ; __uflow, CODE XREF=paste_parallel+502
0000000000001d95         cmp        eax, 0xffffffff
0000000000001d98         mov        esi, eax
0000000000001d9a         jne        loc_1cc7

0000000000001da0         cmp        qword [rsp+0x78+var_70], rbx
0000000000001da5         je         loc_1ef0

                     loc_1dab:
0000000000001dab         movzx      eax, byte [rbp]                             ; CODE XREF=paste_parallel+797
0000000000001daf         test       al, al
0000000000001db1         jne        loc_1f00

                     loc_1db7:
0000000000001db7         add        rbp, 0x1                                    ; CODE XREF=paste_parallel+1119, paste_parallel+1306
0000000000001dbb         cmp        qword [delim_end], rbp                      ; delim_end
0000000000001dc2         mov        byte [rsp+0x78+var_4A], 0x1
0000000000001dc7         jne        loc_1d63

                     loc_1dc9:
0000000000001dc9         mov        rbp, qword [delims]                         ; delims, CODE XREF=paste_parallel+673
0000000000001dd0         jmp        loc_1d63
0000000000001dd2         align      8

                     loc_1dd8:
0000000000001dd8         cmp        qword [rsp+0x78+var_70], rbx                ; CODE XREF=paste_parallel+465, paste_parallel+528
0000000000001ddd         jne        loc_1dab

                     loc_1ddf:
0000000000001ddf         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=paste_parallel+1079
0000000000001de6         mov        rdx, qword [rdi+0x28]
0000000000001dea         cmp        rdx, qword [rdi+0x30]
0000000000001dee         jae        loc_1f9a

0000000000001df4         lea        rcx, qword [rdx+1]
0000000000001df8         mov        qword [rdi+0x28], rcx
0000000000001dfc         mov        byte [rdx], al

                     loc_1dfe:
0000000000001dfe         mov        byte [rsp+0x78+var_4A], 0x1                 ; CODE XREF=paste_parallel+1252
0000000000001e03         jmp        loc_1d63
0000000000001e08         align      16

                     loc_1e10:
0000000000001e10         cmp        byte [rsp+0x78+var_4A], 0x0                 ; CODE XREF=paste_parallel+635
0000000000001e15         je         loc_1e64

0000000000001e17         test       r12, r12
0000000000001e1a         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001e21         je         loc_1e45

0000000000001e23         mov        rdi, qword [rsp+0x78+var_58]                ; argument "__ptr" for method j_fwrite_unlocked
0000000000001e28         mov        rdx, r12                                    ; argument "__n" for method j_fwrite_unlocked
0000000000001e2b         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000001e30         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000001e35         cmp        rax, r12
0000000000001e38         jne        loc_1cf4

0000000000001e3e         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5

                     loc_1e45:
0000000000001e45         mov        rax, qword [rcx+0x28]                       ; CODE XREF=paste_parallel+865
0000000000001e49         cmp        rax, qword [rcx+0x30]
0000000000001e4d         movzx      edx, byte [line_delim]                      ; line_delim
0000000000001e54         jae        loc_1fb0

0000000000001e5a         lea        rsi, qword [rax+1]
0000000000001e5e         mov        qword [rcx+0x28], rsi
0000000000001e62         mov        byte [rax], dl

                     loc_1e64:
0000000000001e64         cmp        qword [rsp+0x78+var_68], 0x0                ; CODE XREF=paste_parallel+708, paste_parallel+853, paste_parallel+1277
0000000000001e6a         jne        loc_1c00

                     loc_1e70:
0000000000001e70         mov        rdi, qword [rsp+0x78+var_40]                ; argument "__ptr" for method j_free, CODE XREF=paste_parallel+1345
0000000000001e75         call       j_free                                      ; free
0000000000001e7a         mov        rdi, qword [rsp+0x78+var_58]                ; argument "__ptr" for method j_free
0000000000001e7f         call       j_free                                      ; free
0000000000001e84         movzx      eax, byte [rsp+0x78+var_49]
0000000000001e89         add        rsp, 0x48
0000000000001e8d         pop        rbx
0000000000001e8e         pop        rbp
0000000000001e8f         pop        r12
0000000000001e91         pop        r13
0000000000001e93         pop        r14
0000000000001e95         pop        r15
0000000000001e97         ret
                        ; endp
0000000000001e98         align      32

                     loc_1ea0:
0000000000001ea0         mov        rax, qword [rsp+0x78+var_48]                ; CODE XREF=paste_parallel+581
0000000000001ea5         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
0000000000001ea7         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
0000000000001eac         mov        rdx, qword [rax+rbx*8-8]                    ; argument #3 for method quotearg_n_style_colon
0000000000001eb1         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000001eb6         mov        esi, dword [rsp+0x78+var_50]                ; argument "__errnum" for method j_error
0000000000001eba         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5695
0000000000001ec1         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001ec3         mov        rcx, rax
0000000000001ec6         xor        eax, eax
0000000000001ec8         call       j_error                                     ; error
0000000000001ecd         cmp        r13, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5
0000000000001ed4         mov        byte [rsp+0x78+var_49], 0x0
0000000000001ed9         mov        rdi, r13
0000000000001edc         jne        loc_1d1b

                     loc_1ee2:
0000000000001ee2         call       j_clearerr_unlocked                         ; clearerr_unlocked, CODE XREF=paste_parallel+597
0000000000001ee7         jmp        loc_1d29
0000000000001eec         align      16

                     loc_1ef0:
0000000000001ef0         movzx      eax, byte [line_delim]                      ; line_delim, CODE XREF=paste_parallel+741
0000000000001ef7         jmp        loc_1ddf
0000000000001efc         align      256

                     loc_1f00:
0000000000001f00         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=paste_parallel+753
0000000000001f07         mov        rdx, qword [rdi+0x28]
0000000000001f0b         cmp        rdx, qword [rdi+0x30]
0000000000001f0f         jae        loc_1fd0

0000000000001f15         lea        rcx, qword [rdx+1]
0000000000001f19         mov        qword [rdi+0x28], rcx
0000000000001f1d         mov        byte [rdx], al
0000000000001f1f         jmp        loc_1db7
0000000000001f24         align      8

                     loc_1f28:
0000000000001f28         mov        rdi, r13                                    ; argument #1 for method j___uflow, CODE XREF=paste_parallel+372
0000000000001f2b         call       j___uflow                                   ; __uflow
0000000000001f30         mov        r14d, eax
0000000000001f33         call       j___errno_location                          ; __errno_location
0000000000001f38         mov        qword [rsp+0x78+var_60], rax
0000000000001f3d         mov        eax, dword [rax]
0000000000001f3f         test       r12, r12
0000000000001f42         mov        dword [rsp+0x78+var_50], eax
0000000000001f46         je         loc_1c7c

0000000000001f4c         cmp        r14d, 0xffffffff
0000000000001f50         jne        loc_1c5b

0000000000001f56         jmp        loc_1c7c
0000000000001f5b         align      32

                     loc_1f60:
0000000000001f60         mov        rax, qword [rsp+0x78+var_48]                ; CODE XREF=paste_parallel+611
0000000000001f65         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
0000000000001f6a         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
0000000000001f6c         mov        rdx, qword [rax+rbx*8-8]                    ; argument #3 for method quotearg_n_style_colon
0000000000001f71         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000001f76         mov        rcx, rax
0000000000001f79         mov        rax, qword [rsp+0x78+var_60]
0000000000001f7e         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5695
0000000000001f85         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001f87         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001f89         xor        eax, eax
0000000000001f8b         call       j_error                                     ; error
0000000000001f90         mov        byte [rsp+0x78+var_49], 0x0
0000000000001f95         jmp        loc_1d29

                     loc_1f9a:
0000000000001f9a         movzx      esi, al                                     ; argument #2 for method j___overflow, CODE XREF=paste_parallel+814
0000000000001f9d         call       j___overflow                                ; __overflow
0000000000001fa2         test       eax, eax
0000000000001fa4         jns        loc_1dfe

0000000000001faa         jmp        loc_1cf4
0000000000001faf         align      16

                     loc_1fb0:
0000000000001fb0         movzx      esi, dl                                     ; argument #2 for method j___overflow, CODE XREF=paste_parallel+916
0000000000001fb3         mov        rdi, rcx                                    ; argument #1 for method j___overflow
0000000000001fb6         call       j___overflow                                ; __overflow
0000000000001fbb         test       eax, eax
0000000000001fbd         jns        loc_1e64

0000000000001fc3         jmp        loc_1cf4
0000000000001fc8         align      16

                     loc_1fd0:
0000000000001fd0         movzx      esi, al                                     ; argument #2 for method j___overflow, CODE XREF=paste_parallel+1103
0000000000001fd3         call       j___overflow                                ; __overflow
0000000000001fd8         test       eax, eax
0000000000001fda         jns        loc_1db7

0000000000001fe0         jmp        loc_1cf4
0000000000001fe5         align      8

                     loc_1fe8:
0000000000001fe8         mov        rax, qword [rsp+0x78+var_70]                ; CODE XREF=paste_parallel+287
0000000000001fed         mov        byte [rsp+0x78+var_49], 0x1
0000000000001ff2         mov        qword [rsp+0x78+var_68], rax
0000000000001ff7         jmp        loc_1c00

                     loc_1ffc:
0000000000001ffc         mov        byte [rsp+0x78+var_49], 0x1                 ; CODE XREF=paste_parallel+98
0000000000002001         jmp        loc_1e70

                     loc_2006:
0000000000002006         mov        esi, 0x1                                    ; CODE XREF=paste_parallel+51
000000000000200b         jmp        loc_1afb

                     loc_2010:
0000000000002010         call       xalloc_die                                  ; xalloc_die, CODE XREF=paste_parallel+62, paste_parallel+71
                        ; endp

                     loc_2015:
0000000000002015         mov        rdx, qword [r13]                            ; argument #3 for method quotearg_n_style_colon, CODE XREF=paste_parallel+213
0000000000002019         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
000000000000201e         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
0000000000002020         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002025         mov        rbx, rax
0000000000002028         call       j___errno_location                          ; __errno_location
000000000000202d         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000202f         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5695
0000000000002036         mov        rcx, rbx
0000000000002039         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000203e         xor        eax, eax
0000000000002040         call       j_error                                     ; error

                     loc_2045:
0000000000002045         lea        rsi, qword [aStandardInputI]                ; argument "msgid" for method j_dcgettext, "standard input is closed", CODE XREF=paste_parallel+300
000000000000204c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002051         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002053         call       j_dcgettext                                 ; dcgettext
0000000000002058         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000205a         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000205d         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002062         xor        eax, eax
0000000000002064         call       j_error                                     ; error
0000000000002069         nop        dword [rax]                                 ; End of unwind block (FDE at 0x623c)
                     paste_serial:
0000000000002070         push       r15                                         ; Begin of unwind block (FDE at 0x628c), DATA XREF=main+490
0000000000002072         push       r14
0000000000002074         push       r13
0000000000002076         push       r12
0000000000002078         push       rbp
0000000000002079         push       rbx
000000000000207a         sub        rsp, 0x18
000000000000207e         test       rdi, rdi
0000000000002081         je         loc_2380

0000000000002087         mov        rbp, rdi
000000000000208a         mov        rbx, rsi
000000000000208d         call       j___errno_location                          ; __errno_location
0000000000002092         mov        byte [rsp+0xc0+var_B5], 0x1
0000000000002097         mov        qword [rsp+0xc0+var_C0], rax
000000000000209b         nop        dword [rax+rax]

                     loc_20a0:
00000000000020a0         mov        rax, qword [rbx]                            ; CODE XREF=paste_serial+466
00000000000020a3         lea        rdi, qword [aLibs+10]                       ; 0x56da
00000000000020aa         mov        ecx, 0x2
00000000000020af         mov        rsi, rax
00000000000020b2         rep  cmpsb byte [rsi], byte [rdi]
00000000000020b4         seta       r9b
00000000000020b8         sbb        r9b, 0x0
00000000000020bc         movsx      r12d, r9b
00000000000020c0         test       r12d, r12d
00000000000020c3         jne        loc_21a0

00000000000020c9         mov        r15, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5
00000000000020d0         mov        byte [have_read_stdin], 0x1                 ; have_read_stdin

                     loc_20d7:
00000000000020d7         mov        rdx, qword [r15+8]                          ; CODE XREF=paste_serial+344
00000000000020db         mov        rsi, qword [r15+0x10]
00000000000020df         mov        r14, qword [delims]                         ; delims
00000000000020e6         cmp        rdx, rsi
00000000000020e9         jae        loc_22a0

00000000000020ef         lea        rax, qword [rdx+1]
00000000000020f3         mov        qword [r15+8], rax
00000000000020f7         movzx      edx, byte [rdx]
00000000000020fa         jmp        loc_2120
00000000000020fc         align      256

                     loc_2100:
0000000000002100         movzx      eax, byte [r14]                             ; CODE XREF=paste_serial+206
0000000000002104         test       al, al
0000000000002106         jne        loc_2168

                     loc_2108:
0000000000002108         add        r14, 0x1                                    ; CODE XREF=paste_serial+770
000000000000210c         cmp        qword [delim_end], r14                      ; delim_end
0000000000002113         je         loc_2194

                     loc_2115:
0000000000002115         mov        rax, qword [r15+8]                          ; CODE XREF=paste_serial+239, paste_serial+290, paste_serial+299, paste_serial+690
0000000000002119         mov        rsi, qword [r15+0x10]
000000000000211d         mov        edx, r13d

                     loc_2120:
0000000000002120         cmp        rsi, rax                                    ; CODE XREF=paste_serial+138, paste_serial+802
0000000000002123         jbe        loc_21d0

0000000000002129         lea        rsi, qword [rax+1]
000000000000212d         mov        qword [r15+8], rsi
0000000000002131         movzx      r13d, byte [rax]

                     loc_2135:
0000000000002135         movzx      eax, byte [line_delim]                      ; line_delim, CODE XREF=paste_serial+374
000000000000213c         cmp        eax, edx
000000000000213e         je         loc_2100

0000000000002140         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002147         mov        rax, qword [rdi+0x28]
000000000000214b         cmp        rax, qword [rdi+0x30]
000000000000214f         jae        loc_2318

0000000000002155         lea        rsi, qword [rax+1]
0000000000002159         mov        qword [rdi+0x28], rsi
000000000000215d         mov        byte [rax], dl
000000000000215f         jmp        loc_2115
0000000000002161         align      8

                     loc_2168:
0000000000002168         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=paste_serial+150
000000000000216f         mov        rdx, qword [rdi+0x28]
0000000000002173         cmp        rdx, qword [rdi+0x30]
0000000000002177         jae        loc_2368

000000000000217d         add        r14, 0x1
0000000000002181         cmp        qword [delim_end], r14                      ; delim_end
0000000000002188         lea        rsi, qword [rdx+1]
000000000000218c         mov        qword [rdi+0x28], rsi
0000000000002190         mov        byte [rdx], al
0000000000002192         jne        loc_2115

                     loc_2194:
0000000000002194         mov        r14, qword [delims]                         ; delims, CODE XREF=paste_serial+163
000000000000219b         jmp        loc_2115

                     loc_21a0:
00000000000021a0         lea        rsi, qword [aWriteError+10]                 ; argument "__modes" for method j_fopen, 0x51ee, CODE XREF=paste_serial+83
00000000000021a7         mov        rdi, rax                                    ; argument "__filename" for method j_fopen
00000000000021aa         call       j_fopen                                     ; fopen
00000000000021af         test       rax, rax
00000000000021b2         mov        r15, rax
00000000000021b5         je         loc_226a

00000000000021bb         mov        esi, 0x2                                    ; argument #2 for method fadvise
00000000000021c0         mov        rdi, rax                                    ; argument #1 for method fadvise
00000000000021c3         call       fadvise                                     ; fadvise
00000000000021c8         jmp        loc_20d7
00000000000021cd         align      16

                     loc_21d0:
00000000000021d0         mov        rdi, r15                                    ; argument #1 for method j___uflow, CODE XREF=paste_serial+179
00000000000021d3         mov        dword [rsp+0xc0+var_B4], edx
00000000000021d7         call       j___uflow                                   ; __uflow
00000000000021dc         cmp        eax, 0xffffffff
00000000000021df         mov        r13d, eax
00000000000021e2         mov        edx, dword [rsp+0xc0+var_B4]
00000000000021e6         jne        loc_2135

00000000000021ec         mov        rax, qword [rsp+0xc0+var_C0]
00000000000021f0         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000021f7         mov        r13d, dword [rax]
00000000000021fa         mov        rax, qword [rdi+0x28]
00000000000021fe         cmp        rax, qword [rdi+0x30]
0000000000002202         jae        loc_2330

0000000000002208         lea        rcx, qword [rax+1]
000000000000220c         mov        qword [rdi+0x28], rcx
0000000000002210         mov        byte [rax], dl

                     loc_2212:
0000000000002212         movzx      ecx, byte [line_delim]                      ; line_delim, CODE XREF=paste_serial+722
0000000000002219         cmp        ecx, edx
000000000000221b         mov        eax, ecx
000000000000221d         jne        loc_22c1

                     loc_2223:
0000000000002223         test       byte [r15], 0x20                            ; CODE XREF=paste_serial+746
0000000000002227         jne        loc_22e6

                     loc_222d:
000000000000222d         test       r12d, r12d                                  ; CODE XREF=paste_serial+624, paste_serial+672
0000000000002230         mov        rdi, r15
0000000000002233         jne        loc_2260

0000000000002235         call       j_clearerr_unlocked                         ; clearerr_unlocked

                     loc_223a:
000000000000223a         add        rbx, 0x8                                    ; CODE XREF=paste_serial+504, paste_serial+551
000000000000223e         sub        rbp, 0x1
0000000000002242         jne        loc_20a0

                     loc_2248:
0000000000002248         movzx      eax, byte [rsp+0xc0+var_B5]                 ; CODE XREF=paste_serial+789
000000000000224d         add        rsp, 0x18
0000000000002251         pop        rbx
0000000000002252         pop        rbp
0000000000002253         pop        r12
0000000000002255         pop        r13
0000000000002257         pop        r14
0000000000002259         pop        r15
000000000000225b         ret
                        ; endp
000000000000225c         align      32

                     loc_2260:
0000000000002260         call       rpl_fclose                                  ; rpl_fclose, CODE XREF=paste_serial+451
0000000000002265         cmp        eax, 0xffffffff
0000000000002268         jne        loc_223a

                     loc_226a:
000000000000226a         mov        rdx, qword [rbx]                            ; argument #3 for method quotearg_n_style_colon, CODE XREF=paste_serial+325
000000000000226d         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
0000000000002272         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
0000000000002274         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002279         mov        rcx, rax
000000000000227c         mov        rax, qword [rsp+0xc0+var_C0]
0000000000002280         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5695
0000000000002287         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002289         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000228b         xor        eax, eax
000000000000228d         call       j_error                                     ; error
0000000000002292         mov        byte [rsp+0xc0+var_B5], 0x0
0000000000002297         jmp        loc_223a
0000000000002299         align      32

                     loc_22a0:
00000000000022a0         mov        rdi, r15                                    ; argument #1 for method j___uflow, CODE XREF=paste_serial+121
00000000000022a3         call       j___uflow                                   ; __uflow
00000000000022a8         mov        edx, eax
00000000000022aa         mov        rax, qword [rsp+0xc0+var_C0]
00000000000022ae         cmp        edx, 0xffffffff
00000000000022b1         mov        r13d, dword [rax]
00000000000022b4         jne        loc_238a

00000000000022ba         movzx      eax, byte [line_delim]                      ; line_delim

                     loc_22c1:
00000000000022c1         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=paste_serial+429
00000000000022c8         mov        rdx, qword [rdi+0x28]
00000000000022cc         cmp        rdx, qword [rdi+0x30]
00000000000022d0         jae        loc_2350

00000000000022d2         lea        rcx, qword [rdx+1]
00000000000022d6         mov        qword [rdi+0x28], rcx
00000000000022da         mov        byte [rdx], al
00000000000022dc         test       byte [r15], 0x20
00000000000022e0         je         loc_222d

                     loc_22e6:
00000000000022e6         mov        rdx, qword [rbx]                            ; argument #3 for method quotearg_n_style_colon, CODE XREF=paste_serial+439
00000000000022e9         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
00000000000022ee         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
00000000000022f0         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000022f5         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5695
00000000000022fc         mov        rcx, rax
00000000000022ff         mov        esi, r13d                                   ; argument "__errnum" for method j_error
0000000000002302         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002304         xor        eax, eax
0000000000002306         call       j_error                                     ; error
000000000000230b         mov        byte [rsp+0xc0+var_B5], 0x0
0000000000002310         jmp        loc_222d
0000000000002315         align      8

                     loc_2318:
0000000000002318         movzx      esi, dl                                     ; argument #2 for method j___overflow, CODE XREF=paste_serial+223
000000000000231b         call       j___overflow                                ; __overflow
0000000000002320         test       eax, eax
0000000000002322         jns        loc_2115

                     loc_2328:
0000000000002328         call       write_error                                 ; write_error, CODE XREF=paste_serial+728, paste_serial+752, paste_serial+776
000000000000232d         nop        dword [rax]

                     loc_2330:
0000000000002330         movzx      esi, dl                                     ; argument #2 for method j___overflow, CODE XREF=paste_serial+402
0000000000002333         mov        dword [rsp+0xc0+var_B4], edx
0000000000002337         call       j___overflow                                ; __overflow
000000000000233c         test       eax, eax
000000000000233e         mov        edx, dword [rsp+0xc0+var_B4]
0000000000002342         jns        loc_2212

0000000000002348         jmp        loc_2328
000000000000234a         align      16

                     loc_2350:
0000000000002350         movzx      esi, al                                     ; argument #2 for method j___overflow, CODE XREF=paste_serial+608
0000000000002353         call       j___overflow                                ; __overflow
0000000000002358         test       eax, eax
000000000000235a         jns        loc_2223

0000000000002360         jmp        loc_2328
0000000000002362         align      8

                     loc_2368:
0000000000002368         movzx      esi, al                                     ; argument #2 for method j___overflow, CODE XREF=paste_serial+263
000000000000236b         call       j___overflow                                ; __overflow
0000000000002370         test       eax, eax
0000000000002372         jns        loc_2108

0000000000002378         jmp        loc_2328
000000000000237a         align      128

                     loc_2380:
0000000000002380         mov        byte [rsp+0xc0+var_B5], 0x1                 ; CODE XREF=paste_serial+17
0000000000002385         jmp        loc_2248

                     loc_238a:
000000000000238a         mov        rax, qword [r15+8]                          ; CODE XREF=paste_serial+580
000000000000238e         mov        rsi, qword [r15+0x10]
0000000000002392         jmp        loc_2120
0000000000002397         align      32                                          ; End of unwind block (FDE at 0x628c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
00000000000023a0         push       r13                                         ; Begin of unwind block (FDE at 0x62d8), CODE XREF=main+738, main+748
00000000000023a2         push       r12
00000000000023a4         mov        edx, 0x5
00000000000023a9         push       rbp
00000000000023aa         push       rbx
00000000000023ab         mov        ebp, edi
00000000000023ad         sub        rsp, 0x88
00000000000023b4         mov        rbx, qword [program_name]                   ; program_name
00000000000023bb         mov        rax, qword [fs:0x28]
00000000000023c4         mov        qword [rsp+0xa8+var_30], rax
00000000000023c9         xor        eax, eax
00000000000023cb         test       edi, edi
00000000000023cd         je         loc_23fd

00000000000023cf         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
00000000000023d6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023d8         call       j_dcgettext                                 ; dcgettext
00000000000023dd         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
00000000000023e4         mov        rdx, rax
00000000000023e7         mov        rcx, rbx
00000000000023ea         mov        esi, 0x1
00000000000023ef         xor        eax, eax
00000000000023f1         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_23f6:
00000000000023f6         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+790
00000000000023f8         call       j_exit                                      ; exit
                        ; endp

                     loc_23fd:
00000000000023fd         lea        rsi, qword [aUsageSOptionFi]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... [FILE]...\\n", CODE XREF=usage+45
0000000000002404         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002406         call       j_dcgettext                                 ; dcgettext
000000000000240b         mov        rdx, rbx
000000000000240e         mov        rsi, rax
0000000000002411         mov        edi, 0x1
0000000000002416         xor        eax, eax
0000000000002418         call       j___printf_chk                              ; __printf_chk
000000000000241d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002424         lea        rsi, qword [aWriteLinesCons]                ; argument "msgid" for method j_dcgettext, "Write lines consisting of the sequentially corresponding lines from\\neach FILE, separated by TABs, to standard output.\\n"
000000000000242b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002430         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002432         call       j_dcgettext                                 ; dcgettext
0000000000002437         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000243a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000243d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002442         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002449         lea        rsi, qword [aNwithNoFileOrW]                ; argument "msgid" for method j_dcgettext, "\\nWith no FILE, or when FILE is -, read standard input.\\n"
0000000000002450         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002455         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002457         call       j_dcgettext                                 ; dcgettext
000000000000245c         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000245f         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002462         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002467         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000246e         lea        rsi, qword [aNmandatoryArgu]                ; argument "msgid" for method j_dcgettext, "\\nMandatory arguments to long options are mandatory for short options too.\\n"
0000000000002475         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000247a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000247c         call       j_dcgettext                                 ; dcgettext
0000000000002481         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002484         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002487         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000248c         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002493         lea        rsi, qword [aDDelimiterslis]                ; argument "msgid" for method j_dcgettext, "  -d, --delimiters=LIST   reuse characters from LIST instead of TABs\\n  -s, --serial            paste one file at a time instead of in parallel\\n"
000000000000249a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000249f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000024a1         call       j_dcgettext                                 ; dcgettext
00000000000024a6         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000024a9         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000024ac         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000024b1         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000024b8         lea        rsi, qword [aZZeroterminate]                ; argument "msgid" for method j_dcgettext, "  -z, --zero-terminated    line delimiter is NUL, not newline\\n"
00000000000024bf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000024c4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000024c6         call       j_dcgettext                                 ; dcgettext
00000000000024cb         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000024ce         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000024d1         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000024d6         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000024dd         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
00000000000024e4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000024e9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000024eb         call       j_dcgettext                                 ; dcgettext
00000000000024f0         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000024f3         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000024f6         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000024fb         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002502         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
0000000000002509         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000250e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002510         call       j_dcgettext                                 ; dcgettext
0000000000002515         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002518         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000251b         lea        rbx, qword [aPaste]                         ; "paste"
0000000000002522         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002527         lea        rax, qword [aPaste+6]                       ; 0x520f
000000000000252e         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
0000000000002535         mov        qword [rsp+0xa8+var_48], 0x0
000000000000253e         mov        qword [rsp+0xa8+var_40], 0x0
0000000000002547         mov        rdx, rsp
000000000000254a         mov        qword [rsp+0xa8+var_A8], rax
000000000000254e         lea        rax, qword [aTestInvocation]                ; "test invocation"
0000000000002555         mov        qword [rsp+0xa8+var_78], rcx
000000000000255a         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
0000000000002561         mov        qword [rsp+0xa8+var_A0], rax
0000000000002566         lea        rax, qword [aCoreutils]                     ; "coreutils"
000000000000256d         mov        qword [rsp+0xa8+var_68], rcx
0000000000002572         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
0000000000002579         mov        qword [rsp+0xa8+var_98], rax
000000000000257e         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
0000000000002585         mov        qword [rsp+0xa8+var_58], rcx
000000000000258a         mov        qword [rsp+0xa8+var_90], rax
000000000000258f         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000002596         mov        qword [rsp+0xa8+var_88], rax
000000000000259b         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
00000000000025a2         mov        qword [rsp+0xa8+var_80], rax
00000000000025a7         mov        qword [rsp+0xa8+var_70], rax
00000000000025ac         mov        qword [rsp+0xa8+var_60], rax
00000000000025b1         mov        qword [rsp+0xa8+var_50], rax
00000000000025b6         nop        word [cs:rax+rax]

                     loc_25c0:
00000000000025c0         add        rdx, 0x10                                   ; CODE XREF=usage+573
00000000000025c4         mov        rdi, qword [rdx]
00000000000025c7         test       rdi, rdi
00000000000025ca         je         loc_25df

00000000000025cc         mov        ecx, 0x6
00000000000025d1         mov        rsi, rbx
00000000000025d4         rep  cmpsb byte [rsi], byte [rdi]
00000000000025d6         seta       al
00000000000025d9         sbb        al, 0x0
00000000000025db         test       al, al
00000000000025dd         jne        loc_25c0

                     loc_25df:
00000000000025df         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+554
00000000000025e3         xor        edi, edi
00000000000025e5         mov        edx, 0x5
00000000000025ea         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
00000000000025f1         test       r12, r12
00000000000025f4         je         loc_26bb

00000000000025fa         call       j_dcgettext                                 ; dcgettext
00000000000025ff         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002606         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x5285
000000000000260d         mov        rsi, rax
0000000000002610         mov        edi, 0x1
0000000000002615         xor        eax, eax
0000000000002617         call       j___printf_chk                              ; __printf_chk
000000000000261c         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000261e         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002623         call       j_setlocale                                 ; setlocale
0000000000002628         test       rax, rax
000000000000262b         je         loc_2649

000000000000262d         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x5293
0000000000002634         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000002639         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000263c         call       j_strncmp                                   ; strncmp
0000000000002641         test       eax, eax
0000000000002643         jne        loc_2750

                     loc_2649:
0000000000002649         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+651, usage+981
0000000000002650         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002652         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002657         call       j_dcgettext                                 ; dcgettext
000000000000265c         lea        rcx, qword [aPaste]                         ; "paste"
0000000000002663         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000266a         mov        rsi, rax
000000000000266d         mov        edi, 0x1
0000000000002672         xor        eax, eax
0000000000002674         call       j___printf_chk                              ; __printf_chk
0000000000002679         cmp        r12, rbx
000000000000267c         lea        rcx, qword [aMulticallInvoc+10]             ; 0x522b
0000000000002683         lea        rbx, qword [aFullDocumentat+31]             ; 0x52b6
000000000000268a         cmove      rbx, rcx

                     loc_268e:
000000000000268e         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+932
0000000000002695         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002697         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000269c         call       j_dcgettext                                 ; dcgettext
00000000000026a1         mov        rcx, rbx
00000000000026a4         mov        rsi, rax
00000000000026a7         mov        rdx, r12
00000000000026aa         mov        edi, 0x1
00000000000026af         xor        eax, eax
00000000000026b1         call       j___printf_chk                              ; __printf_chk
00000000000026b6         jmp        loc_23f6

                     loc_26bb:
00000000000026bb         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+596
00000000000026c0         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000026c7         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x5285
00000000000026ce         mov        rsi, rax
00000000000026d1         mov        edi, 0x1
00000000000026d6         xor        eax, eax
00000000000026d8         call       j___printf_chk                              ; __printf_chk
00000000000026dd         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000026df         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
00000000000026e4         call       j_setlocale                                 ; setlocale
00000000000026e9         test       rax, rax
00000000000026ec         je         loc_2706

00000000000026ee         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x5293
00000000000026f5         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
00000000000026fa         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
00000000000026fd         call       j_strncmp                                   ; strncmp
0000000000002702         test       eax, eax
0000000000002704         jne        loc_2749

                     loc_2706:
0000000000002706         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+844
000000000000270d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002712         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002714         lea        r12, qword [aPaste]                         ; "paste"
000000000000271b         lea        rbx, qword [aMulticallInvoc+10]             ; 0x522b
0000000000002722         call       j_dcgettext                                 ; dcgettext
0000000000002727         lea        rcx, qword [aPaste]                         ; "paste"
000000000000272e         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002735         mov        rsi, rax
0000000000002738         mov        edi, 0x1
000000000000273d         xor        eax, eax
000000000000273f         call       j___printf_chk                              ; __printf_chk
0000000000002744         jmp        loc_268e

                     loc_2749:
0000000000002749         lea        r12, qword [aPaste]                         ; "paste", CODE XREF=usage+868

                     loc_2750:
0000000000002750         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+675
0000000000002757         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
000000000000275e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002760         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002765         call       j_dcgettext                                 ; dcgettext
000000000000276a         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
000000000000276d         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002770         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002775         jmp        loc_2649
000000000000277a         align      128                                         ; End of unwind block (FDE at 0x62d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000002780         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x634c), file_name
0000000000002787         ret
                        ; endp
0000000000002788         align      16                                          ; End of unwind block (FDE at 0x634c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000002790         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x6360), ignore_EPIPE
0000000000002797         ret
                        ; endp
0000000000002798         align      32                                          ; End of unwind block (FDE at 0x6360)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
00000000000027a0         push       rbp                                         ; Begin of unwind block (FDE at 0x6374), DATA XREF=main+85
00000000000027a1         push       rbx
00000000000027a2         sub        rsp, 0x8
00000000000027a6         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000027ad         call       close_stream                                ; close_stream
00000000000027b2         test       eax, eax
00000000000027b4         je         loc_27cc

00000000000027b6         call       j___errno_location                          ; __errno_location
00000000000027bb         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
00000000000027c2         mov        rbx, rax
00000000000027c5         je         loc_27e3

00000000000027c7         cmp        dword [rax], 0x20
00000000000027ca         jne        loc_27e3

                     loc_27cc:
00000000000027cc         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
00000000000027d3         call       close_stream                                ; close_stream
00000000000027d8         test       eax, eax
00000000000027da         jne        loc_2822

00000000000027dc         add        rsp, 0x8
00000000000027e0         pop        rbx
00000000000027e1         pop        rbp
00000000000027e2         ret
                        ; endp

                     loc_27e3:
00000000000027e3         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
00000000000027ea         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000027ec         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000027f1         call       j_dcgettext                                 ; dcgettext
00000000000027f6         mov        rdi, qword [file_name]                      ; file_name
00000000000027fd         mov        rbp, rax
0000000000002800         test       rdi, rdi
0000000000002803         je         loc_282d

0000000000002805         call       quotearg_colon                              ; quotearg_colon
000000000000280a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
000000000000280c         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000002813         mov        rcx, rax
0000000000002816         mov        r8, rbp
0000000000002819         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000281b         xor        eax, eax
000000000000281d         call       j_error                                     ; error

                     loc_2822:
0000000000002822         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000002828         call       j__exit                                     ; _exit
                        ; endp

                     loc_282d:
000000000000282d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
000000000000282f         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5695
0000000000002836         mov        rcx, rax
0000000000002839         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000283b         xor        eax, eax
000000000000283d         call       j_error                                     ; error
0000000000002842         jmp        loc_2822
0000000000002844         align      16                                          ; End of unwind block (FDE at 0x6374)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fdadvise:
0000000000002850         jmp        j_posix_fadvise                             ; posix_fadvise, Begin of unwind block (FDE at 0x63a4)
                        ; endp
0000000000002855         align      32                                          ; End of unwind block (FDE at 0x63a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fadvise:
0000000000002860         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x63b8), CODE XREF=paste_parallel+267, paste_serial+339
0000000000002863         je         loc_2880

0000000000002865         push       rbx
0000000000002866         mov        ebx, esi
0000000000002868         call       j_fileno                                    ; fileno
000000000000286d         mov        ecx, ebx                                    ; argument "__advise" for method j_posix_fadvise
000000000000286f         xor        edx, edx                                    ; argument "__len" for method j_posix_fadvise
0000000000002871         xor        esi, esi                                    ; argument "__offset" for method j_posix_fadvise
0000000000002873         pop        rbx
0000000000002874         mov        edi, eax                                    ; argument "__fd" for method j_posix_fadvise
0000000000002876         jmp        j_posix_fadvise                             ; posix_fadvise
                        ; endp
000000000000287b         align      128

                     loc_2880:
0000000000002880         ret                                                    ; CODE XREF=fadvise+3
                        ; endp
0000000000002882         align      16                                          ; End of unwind block (FDE at 0x63b8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000002890         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x63d4), CODE XREF=main+32
0000000000002893         push       rbx
0000000000002894         je         loc_290d

0000000000002896         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
000000000000289b         mov        rbx, rdi
000000000000289e         call       j_strrchr                                   ; strrchr
00000000000028a3         test       rax, rax
00000000000028a6         je         loc_28fd

00000000000028a8         lea        r8, qword [rax+1]
00000000000028ac         mov        rdx, r8
00000000000028af         sub        rdx, rbx
00000000000028b2         cmp        rdx, 0x6
00000000000028b6         jle        loc_28fd

00000000000028b8         lea        rsi, qword [rax-6]
00000000000028bc         lea        rdi, qword [aLibs]                          ; "/.libs/"
00000000000028c3         mov        ecx, 0x7
00000000000028c8         rep  cmpsb byte [rsi], byte [rdi]
00000000000028ca         seta       dl
00000000000028cd         sbb        dl, 0x0
00000000000028d0         test       dl, dl
00000000000028d2         jne        loc_28fd

00000000000028d4         lea        rdi, qword [aLibs+8]                        ; 0x56d8
00000000000028db         mov        ecx, 0x3
00000000000028e0         mov        rsi, r8
00000000000028e3         mov        rbx, r8
00000000000028e6         rep  cmpsb byte [rsi], byte [rdi]
00000000000028e8         seta       dl
00000000000028eb         sbb        dl, 0x0
00000000000028ee         test       dl, dl
00000000000028f0         jne        loc_28fd

00000000000028f2         lea        rbx, qword [rax+4]
00000000000028f6         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_28fd:
00000000000028fd         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000002904         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
000000000000290b         pop        rbx
000000000000290c         ret
                        ; endp

                     loc_290d:
000000000000290d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000002914         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
000000000000291b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000002920         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000002925         call       j_fwrite                                    ; fwrite
000000000000292a         call       j_abort                                     ; abort
                        ; endp
000000000000292f         align      16                                          ; End of unwind block (FDE at 0x63d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000002930         push       rbp                                         ; Begin of unwind block (FDE at 0x63f4), CODE XREF=sub_3160+2597, sub_3160+2619
0000000000002931         push       rbx
0000000000002932         mov        rbp, rdi
0000000000002935         mov        ebx, esi
0000000000002937         sub        rsp, 0x8
000000000000293b         call       locale_charset                              ; locale_charset
0000000000002940         movzx      edx, byte [rax]
0000000000002943         and        edx, 0xffffffdf
0000000000002946         cmp        dl, 0x55
0000000000002949         je         loc_29c0

000000000000294b         cmp        dl, 0x47
000000000000294e         je         loc_2970

                     loc_2950:
0000000000002950         lea        rax, qword [aLibs+27]                       ; 0x56eb, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000002957         lea        rdx, qword [aLibs+29]                       ; 0x56ed
000000000000295e         cmp        ebx, 0x9
0000000000002961         cmovne     rax, rdx
0000000000002965         add        rsp, 0x8
0000000000002969         pop        rbx
000000000000296a         pop        rbp
000000000000296b         ret
                        ; endp
000000000000296c         align      16

                     loc_2970:
0000000000002970         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000002974         and        edx, 0xffffffdf
0000000000002977         cmp        dl, 0x42
000000000000297a         jne        loc_2950

000000000000297c         cmp        byte [rax+2], 0x31
0000000000002980         jne        loc_2950

0000000000002982         cmp        byte [rax+3], 0x38
0000000000002986         jne        loc_2950

0000000000002988         cmp        byte [rax+4], 0x30
000000000000298c         jne        loc_2950

000000000000298e         cmp        byte [rax+5], 0x33
0000000000002992         jne        loc_2950

0000000000002994         cmp        byte [rax+6], 0x30
0000000000002998         jne        loc_2950

000000000000299a         cmp        byte [rax+7], 0x0
000000000000299e         jne        loc_2950

00000000000029a0         cmp        byte [rbp], 0x60
00000000000029a4         lea        rax, qword [aLibs+20]                       ; 0x56e4
00000000000029ab         lea        rdx, qword [aLibs+24]                       ; 0x56e8
00000000000029b2         cmovne     rax, rdx
00000000000029b6         add        rsp, 0x8
00000000000029ba         pop        rbx
00000000000029bb         pop        rbp
00000000000029bc         ret
                        ; endp
00000000000029bd         align      64

                     loc_29c0:
00000000000029c0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
00000000000029c4         and        edx, 0xffffffdf
00000000000029c7         cmp        dl, 0x54
00000000000029ca         jne        loc_2950

00000000000029cc         movzx      edx, byte [rax+2]
00000000000029d0         and        edx, 0xffffffdf
00000000000029d3         cmp        dl, 0x46
00000000000029d6         jne        loc_2950

00000000000029dc         cmp        byte [rax+3], 0x2d
00000000000029e0         jne        loc_2950

00000000000029e6         cmp        byte [rax+4], 0x38
00000000000029ea         jne        loc_2950

00000000000029f0         cmp        byte [rax+5], 0x0
00000000000029f4         jne        loc_2950

00000000000029fa         cmp        byte [rbp], 0x60
00000000000029fe         lea        rax, qword [aLibs+12]                       ; 0x56dc
0000000000002a05         lea        rdx, qword [aLibs+16]                       ; 0x56e0
0000000000002a0c         cmovne     rax, rdx
0000000000002a10         add        rsp, 0x8
0000000000002a14         pop        rbx
0000000000002a15         pop        rbp
0000000000002a16         ret
                        ; endp
0000000000002a17         align      32                                          ; End of unwind block (FDE at 0x63f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000002a20         push       r15                                         ; Begin of unwind block (FDE at 0x6438), CODE XREF=sub_3160+1165, sub_3160+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000002a22         push       r14
0000000000002a24         mov        r15d, r8d
0000000000002a27         push       r13
0000000000002a29         push       r12
0000000000002a2b         mov        r14, rdi
0000000000002a2e         push       rbp
0000000000002a2f         push       rbx
0000000000002a30         mov        ebx, r9d
0000000000002a33         mov        r13, rsi
0000000000002a36         mov        rbp, rcx
0000000000002a39         and        ebx, 0x2
0000000000002a3c         sub        rsp, 0xb8
0000000000002a43         mov        rax, qword [rsp+0xe8+arg_0]
0000000000002a4b         mov        qword [rsp+0xe8+var_D8], rdx
0000000000002a50         mov        dword [rsp+0xe8+var_E0], r8d
0000000000002a55         mov        dword [rsp+0xe8+var_70], r9d
0000000000002a5a         mov        qword [rsp+0xe8+var_C8], rax
0000000000002a5f         mov        rax, qword [rsp+0xe8+arg_8]
0000000000002a67         mov        qword [rsp+0xe8+var_80], rax
0000000000002a6c         mov        rax, qword [rsp+0xe8+arg_10]
0000000000002a74         mov        qword [rsp+0xe8+var_88], rax
0000000000002a79         mov        rax, qword [fs:0x28]
0000000000002a82         mov        qword [rsp+0xe8+var_40], rax
0000000000002a8a         xor        eax, eax
0000000000002a8c         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000002a91         cmp        r15d, 0xa
0000000000002a95         mov        qword [rsp+0xe8+var_90], rax
0000000000002a9a         ja         loc_3c4f

0000000000002aa0         lea        rcx, qword [switch_table_5740]              ; switch_table_5740
0000000000002aa7         mov        edx, r15d
0000000000002aaa         movsxd     rax, dword [rcx+rdx*4]
0000000000002aae         add        rax, rcx
0000000000002ab1         jmp        rax                                         ; switch statement using table at 0x5740, with 11 cases, 0x2ab3,0x3684,0x36e0,0x3735,0x377a,0x37b4,0x385a,0x3894,0x3a88

                     loc_2ab3:
0000000000002ab3         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_3160+1318
0000000000002ab8         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000002abd         xor        r12d, r12d
0000000000002ac0         mov        qword [rsp+0xe8+var_98], 0x0
0000000000002ac9         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000002ace         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_2ad3:
0000000000002ad3         lea        rax, qword [aLibs+29]                       ; 0x56ed, CODE XREF=sub_3160+1876
0000000000002ada         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000002ae3         xor        r15d, r15d
0000000000002ae6         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000002aee         mov        qword [rsp+0xe8+var_A0], rax

                     loc_2af3:
0000000000002af3         xor        r11d, r11d                                  ; CODE XREF=sub_3160+180, sub_3160+1400, sub_3160+1488, sub_3160+1557, sub_3160+1615, sub_3160+1781, sub_3160+1839, sub_3160+2408, sub_3160+2485
0000000000002af6         mov        rax, rbp
0000000000002af9         mov        r8d, r12d
0000000000002afc         mov        rbp, r11
0000000000002aff         mov        r11, rax
0000000000002b02         nop        word [rax+rax]

                     loc_2b08:
0000000000002b08         cmp        r11, rbp                                    ; CODE XREF=sub_2c10+194
0000000000002b0b         setne      r12b
0000000000002b0f         cmp        r11, 0xffffffffffffffff
0000000000002b13         jne        loc_2b22

0000000000002b15         mov        rax, qword [rsp+0xe8+var_D8]
0000000000002b1a         cmp        byte [rax+rbp], 0x0
0000000000002b1e         setne      r12b

                     loc_2b22:
0000000000002b22         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000002b25         je         loc_3180

0000000000002b2b         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000002b30         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000002b35         lea        r9, qword [rdi+rbp]
0000000000002b39         setne      al
0000000000002b3c         and        al, byte [rsp+0xe8+var_DB]
0000000000002b40         mov        r10d, eax
0000000000002b43         je         loc_2bf0

0000000000002b49         mov        rax, qword [rsp+0xe8+var_D0]
0000000000002b4e         test       rax, rax
0000000000002b51         je         loc_2f80

0000000000002b57         cmp        r11, 0xffffffffffffffff
0000000000002b5b         lea        rbx, qword [rbp+rax]
0000000000002b60         jne        loc_2b90

0000000000002b62         cmp        rax, 0x1
0000000000002b66         jbe        loc_2b90

0000000000002b68         mov        byte [rsp+0xe8+var_B0], r8b
0000000000002b6d         mov        byte [rsp+0xe8+var_B8], r10b
0000000000002b72         mov        qword [rsp+0xe8+var_C0], r9
0000000000002b77         call       j_strlen                                    ; strlen
0000000000002b7c         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000002b82         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000002b88         mov        r11, rax
0000000000002b8b         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_2b90:
0000000000002b90         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000002b93         mov        byte [rsp+0xe8+var_C0], r10b
0000000000002b98         ja         loc_3150

0000000000002b9e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000002ba3         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000002ba8         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
0000000000002bab         mov        qword [rsp+0xe8+var_A8], r11
0000000000002bb0         mov        byte [rsp+0xe8+var_B0], r8b
0000000000002bb5         mov        qword [rsp+0xe8+var_B8], r9
0000000000002bba         call       j_memcmp                                    ; memcmp
0000000000002bbf         test       eax, eax
0000000000002bc1         mov        r9, qword [rsp+0xe8+var_B8]
0000000000002bc6         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000002bcc         mov        r11, qword [rsp+0xe8+var_A8]
0000000000002bd1         jne        loc_3150

0000000000002bd7         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000002bdc         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000002be2         jne        loc_3b65

0000000000002be8         nop        dword [rax+rax]

                     loc_2bf0:
0000000000002bf0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_3140+19
0000000000002bf4         cmp        bl, 0x7e
0000000000002bf7         ja         loc_2f18

0000000000002bfd         lea        rcx, qword [switch_table_5740+44]           ; 0x576c
0000000000002c04         movzx      edx, bl
0000000000002c07         movsxd     rax, dword [rcx+rdx*4]
0000000000002c0b         add        rax, rcx
0000000000002c0e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2c10:
0000000000002c10         xor        r10d, r10d
0000000000002c13         cmp        r11, 0x1
0000000000002c17         setne      al
0000000000002c1a         cmp        r11, 0xffffffffffffffff
0000000000002c1e         jne        loc_2c2c

0000000000002c20         mov        rax, qword [rsp+arg_8]
0000000000002c25         cmp        byte [rax+1], 0x0
0000000000002c29         setne      al

                     loc_2c2c:
0000000000002c2c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2c10+14
0000000000002c31         sete       dl
0000000000002c34         test       al, al
0000000000002c36         je         loc_2e88

                     loc_2c3c:
0000000000002c3c         xor        r12d, r12d                                  ; CODE XREF=sub_2e80+11
0000000000002c3f         xor        eax, eax
0000000000002c41         nop        dword [rax]
                        ; endp

                     loc_2c48:
0000000000002c48         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_2e30+50, sub_2f00+119
0000000000002c4d         jne        loc_2d62

0000000000002c53         test       dl, dl
0000000000002c55         jne        loc_2d62

                     loc_2c5b:
0000000000002c5b         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_2d10+87
0000000000002c60         test       rsi, rsi
0000000000002c63         je         loc_2c79

0000000000002c65         mov        edx, ebx
0000000000002c67         shr        dl, 0x5
0000000000002c6a         movzx      edx, dl
0000000000002c6d         mov        edx, dword [rsi+rdx*4]
0000000000002c70         bt         edx, ebx
0000000000002c73         jb         loc_2dc3

                     loc_2c79:
0000000000002c79         test       r10b, r10b                                  ; CODE XREF=sub_2c10+83, sub_2d10+93
0000000000002c7c         jne        loc_2dc3

0000000000002c82         xor        eax, 0x1
0000000000002c85         add        rbp, 0x1
0000000000002c89         and        eax, r8d

                     loc_2c8c:
0000000000002c8c         test       al, al                                      ; CODE XREF=sub_3160+936
0000000000002c8e         je         loc_2cb0

0000000000002c90         cmp        r13, r15
0000000000002c93         jbe        loc_2c9a

0000000000002c95         mov        byte [r14+r15], 0x27

                     loc_2c9a:
0000000000002c9a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_2c10+131
0000000000002c9e         cmp        r13, rax
0000000000002ca1         jbe        loc_2ca9

0000000000002ca3         mov        byte [r14+r15+1], 0x27

                     loc_2ca9:
0000000000002ca9         add        r15, 0x2                                    ; CODE XREF=sub_2c10+145
0000000000002cad         xor        r8d, r8d

                     loc_2cb0:
0000000000002cb0         cmp        r15, r13                                    ; CODE XREF=sub_2c10+126, sub_2d10+275, sub_3160+869
0000000000002cb3         jae        loc_2cb9

0000000000002cb5         mov        byte [r14+r15], bl

                     loc_2cb9:
0000000000002cb9         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_2c10+163
0000000000002cbe         add        r15, 0x1
0000000000002cc2         mov        eax, 0x0
0000000000002cc7         test       r12b, r12b
0000000000002cca         cmove      edi, eax
0000000000002ccd         mov        byte [rsp+0xe8+var_DA], dil
0000000000002cd2         jmp        loc_2b08
0000000000002cd7         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2ce0:
0000000000002ce0         xor        r10d, r10d
0000000000002ce3         mov        eax, dword [rsp+arg_0]
0000000000002ce7         cmp        eax, 0x2
0000000000002cea         je         loc_32a8

0000000000002cf0         cmp        eax, 0x5
0000000000002cf3         je         loc_3268

0000000000002cf9         cmp        eax, 0x2
0000000000002cfc         mov        ebx, 0x3f
0000000000002d01         sete       dl
0000000000002d04         xor        r12d, r12d
0000000000002d07         xor        eax, eax
0000000000002d09         jmp        sub_2c10+56
                        ; endp
0000000000002d0e         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2d10:
0000000000002d10         xor        r10d, r10d
0000000000002d13         cmp        dword [rsp+arg_0], 0x2
0000000000002d18         je         loc_3220

0000000000002d1e         mov        byte [rsp+arg_74], r12b
0000000000002d23         xor        edx, edx
0000000000002d25         xor        eax, eax
0000000000002d27         mov        ebx, 0x27
0000000000002d2c         jmp        sub_2c10+56
                        ; endp
0000000000002d31         nop        dword [rax]
0000000000002d38         mov        edx, 0x9
0000000000002d3d         mov        ebx, 0x74

                     loc_2d42:
0000000000002d42         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2ed0+10, sub_2fc0+37, sub_3100+53
0000000000002d47         sete       al
0000000000002d4a         and        al, byte [rsp+arg_7]
0000000000002d4e         jne        sub_2e80+30

0000000000002d54         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_2d10+114
0000000000002d59         jne        loc_2dc0

                     loc_2d5b:
0000000000002d5b         mov        ebx, edx                                    ; CODE XREF=sub_2e30+18
0000000000002d5d         xor        r12d, r12d
0000000000002d60         xor        eax, eax
                        ; endp

                     loc_2d62:
0000000000002d62         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_2c10+61, sub_2c10+69
0000000000002d67         jne        loc_2c5b

0000000000002d6d         jmp        loc_2c79
0000000000002d72         nop        word [rax+rax]
0000000000002d78         mov        edx, 0x8
0000000000002d7d         mov        ebx, 0x62
0000000000002d82         jmp        sub_2d10+68
0000000000002d84         nop        dword [rax]
0000000000002d88         cmp        dword [rsp+8], 0x2
0000000000002d8d         je         sub_3160                                    ; sub_3160
0000000000002d93         cmp        byte [rsp+0xd], 0x0
0000000000002d98         je         sub_2fa0+16

                     loc_2d9e:
0000000000002d9e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2fa0+8
0000000000002da3         je         loc_2fb0

0000000000002da9         cmp        qword [rsp+arg_10], 0x0
0000000000002daf         jne        loc_316b

0000000000002db5         mov        ebx, 0x5c
0000000000002dba         nop        word [rax+rax]
                        ; endp

                     loc_2dc0:
0000000000002dc0         xor        r12d, r12d                                  ; CODE XREF=sub_2d10+73, sub_3100+29
                        ; endp

                     loc_2dc3:
0000000000002dc3         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_2c10+99, sub_2c10+108
0000000000002dc8         sete       dl
0000000000002dcb         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000002dd0         mov        eax, edx
0000000000002dd2         jne        loc_3628

0000000000002dd8         mov        eax, r8d
0000000000002ddb         xor        eax, 0x1
0000000000002dde         and        al, dl
0000000000002de0         je         loc_2e11

0000000000002de2         cmp        r13, r15
0000000000002de5         jbe        loc_2dec

0000000000002de7         mov        byte [r14+r15], 0x27

                     loc_2dec:
0000000000002dec         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_2d10+213
0000000000002df0         cmp        r13, rdx
0000000000002df3         jbe        loc_2dfb

0000000000002df5         mov        byte [r14+r15+1], 0x24

                     loc_2dfb:
0000000000002dfb         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_2d10+227
0000000000002dff         cmp        r13, rdx
0000000000002e02         jbe        loc_2e0a

0000000000002e04         mov        byte [r14+r15+2], 0x27

                     loc_2e0a:
0000000000002e0a         add        r15, 0x3                                    ; CODE XREF=sub_2d10+242
0000000000002e0e         mov        r8d, eax

                     loc_2e11:
0000000000002e11         cmp        r13, r15                                    ; CODE XREF=sub_2d10+208
0000000000002e14         jbe        loc_2e1b

0000000000002e16         mov        byte [r14+r15], 0x5c

                     loc_2e1b:
0000000000002e1b         add        r15, 0x1                                    ; CODE XREF=sub_2d10+260
0000000000002e1f         add        rbp, 0x1
0000000000002e23         jmp        loc_2cb0
0000000000002e28         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_2e30:
0000000000002e30         cmp        byte [rsp+arg_5], 0x0
0000000000002e35         jne        loc_3003

0000000000002e3b         xor        edx, edx
0000000000002e3d         test       byte [rsp+arg_70], 0x1
0000000000002e42         je         loc_2d5b

0000000000002e48         add        rbp, 0x1
0000000000002e4c         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000002e51         nop        dword [rax]
0000000000002e58         cmp        dword [rsp+8], 0x2
0000000000002e5d         sete       dl
0000000000002e60         xor        eax, eax
0000000000002e62         jmp        sub_2c10+56
0000000000002e67         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2e70:
0000000000002e70         mov        edx, 0x7
0000000000002e75         mov        ebx, 0x61
0000000000002e7a         jmp        sub_2d10+68
                        ; endp
0000000000002e7f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2e80:
0000000000002e80         cmp        dword [rsp+8], 0x2
0000000000002e85         sete       dl
                        ; endp

                     loc_2e88:
0000000000002e88         test       rbp, rbp                                    ; CODE XREF=sub_2c10+38, sub_30a0+35
0000000000002e8b         jne        loc_2c3c

0000000000002e91         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_30d0+43
0000000000002e96         and        al, dl
0000000000002e98         je         sub_2c10+56

0000000000002e9e         mov        rbp, r11
0000000000002ea1         mov        dword [rsp+arg_0], 0x2
0000000000002ea9         jmp        sub_3160+1097
                        ; endp
0000000000002eae         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_2eb0:
0000000000002eb0         cmp        dword [rsp+arg_0], 0x2
0000000000002eb5         sete       dl
0000000000002eb8         xor        r12d, r12d
0000000000002ebb         jmp        sub_2e80+17
                        ; endp
0000000000002ebd         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_2ec0:
0000000000002ec0         cmp        dword [rsp+arg_0], 0x2
0000000000002ec5         mov        ebx, 0x20
0000000000002eca         sete       dl
0000000000002ecd         jmp        sub_2e80+17
                        ; endp
0000000000002ecf         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_2ed0:
0000000000002ed0         mov        edx, 0xd
0000000000002ed5         mov        ebx, 0x72
0000000000002eda         jmp        loc_2d42
0000000000002edf         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ee0:
0000000000002ee0         mov        edx, 0xc
0000000000002ee5         mov        ebx, 0x66
0000000000002eea         jmp        sub_2d10+68
                        ; endp
0000000000002eef         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ef0:
0000000000002ef0         mov        edx, 0xb
0000000000002ef5         mov        ebx, 0x76
0000000000002efa         jmp        sub_2d10+68
                        ; endp
0000000000002eff         align      256


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2f00:
0000000000002f00         mov        edx, 0xa
0000000000002f05         mov        ebx, 0x6e
0000000000002f0a         jmp        sub_2d10+50
                        ; endp
0000000000002f0f         align      16

                     loc_2f10:
0000000000002f10         xor        r10d, r10d                                  ; CODE XREF=sub_2f00+135
0000000000002f13         nop        dword [rax+rax]

                     loc_2f18:
0000000000002f18         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
0000000000002f1e         jne        loc_32c8

0000000000002f24         mov        qword [rsp+0xe8+var_B0], r11
0000000000002f29         mov        byte [rsp+0xe8+var_B8], r8b
0000000000002f2e         mov        byte [rsp+0xe8+var_C0], r10b
0000000000002f33         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000002f38         mov        rcx, qword [rax]
0000000000002f3b         movzx      edx, bl
0000000000002f3e         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000002f44         movzx      r8d, byte [rsp+0xe8+var_B8]
0000000000002f4a         mov        r11, qword [rsp+0xe8+var_B0]
0000000000002f4f         mov        edi, 0x1
0000000000002f54         movzx      eax, word [rcx+rdx*2]
0000000000002f58         and        ax, 0x4000
0000000000002f5c         setne      r12b
0000000000002f60         sete       al
0000000000002f63         and        al, byte [rsp+0xe8+var_DB]

                     loc_2f67:
0000000000002f67         test       al, al                                      ; CODE XREF=sub_3160+2221
0000000000002f69         jne        loc_3901

0000000000002f6f         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000002f74         sete       dl
0000000000002f77         jmp        loc_2c48
0000000000002f7c         align      128

                     loc_2f80:
0000000000002f80         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000002f84         cmp        bl, 0x7e
0000000000002f87         ja         loc_2f10

0000000000002f89         lea        rcx, qword [switch_table_5740+552]          ; 0x5968
0000000000002f90         movzx      edx, bl
0000000000002f93         movsxd     rax, dword [rcx+rdx*4]
0000000000002f97         add        rax, rcx
0000000000002f9a         jmp        rax
                        ; endp
0000000000002f9c         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_2fa0:
0000000000002fa0         xor        r10d, r10d
0000000000002fa3         cmp        byte [rsp+arg_5], 0x0
0000000000002fa8         jne        loc_2d9e

0000000000002fae         nop

                     loc_2fb0:
0000000000002fb0         mov        edx, 0x5c                                   ; CODE XREF=sub_2d10+136, sub_2d10+147
0000000000002fb5         mov        ebx, 0x5c
0000000000002fba         jmp        sub_2d10+68
                        ; endp
0000000000002fbf         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2fc0:
0000000000002fc0         mov        edx, 0xc
0000000000002fc5         xor        r10d, r10d
0000000000002fc8         mov        ebx, 0x66
0000000000002fcd         jmp        sub_2d10+68
                        ; endp
0000000000002fd2         nop        word [rax+rax]
0000000000002fd8         mov        edx, 0xa
0000000000002fdd         xor        r10d, r10d
0000000000002fe0         mov        ebx, 0x6e
0000000000002fe5         jmp        sub_2d10+50
0000000000002fea         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ff0:
0000000000002ff0         mov        ebx, 0x61
0000000000002ff5         jmp        sub_2d10+176
                        ; endp
0000000000002ffa         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3000:
0000000000003000         xor        r10d, r10d
                        ; endp

                     loc_3003:
0000000000003003         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2e30+5
0000000000003008         sete       dl
000000000000300b         cmp        byte [rsp+arg_7], 0x0
0000000000003010         jne        loc_3baa

0000000000003016         mov        eax, r8d
0000000000003019         mov        rcx, r15
000000000000301c         xor        eax, 0x1
000000000000301f         and        al, dl
0000000000003021         je         loc_3050

0000000000003023         cmp        r13, r15
0000000000003026         jbe        loc_302d

0000000000003028         mov        byte [r14+r15], 0x27

                     loc_302d:
000000000000302d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_3000+38
0000000000003031         cmp        r13, rcx
0000000000003034         jbe        loc_303c

0000000000003036         mov        byte [r14+r15+1], 0x24

                     loc_303c:
000000000000303c         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_3000+52
0000000000003040         cmp        r13, rcx
0000000000003043         ja         loc_3679

                     loc_3049:
0000000000003049         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_3160+1311
000000000000304d         mov        r8d, eax

                     loc_3050:
0000000000003050         cmp        r13, rcx                                    ; CODE XREF=sub_3000+33
0000000000003053         jbe        loc_305a

0000000000003055         mov        byte [r14+rcx], 0x5c

                     loc_305a:
000000000000305a         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3000+83
000000000000305f         lea        r15, qword [rcx+1]
0000000000003063         je         loc_3669

0000000000003069         lea        rax, qword [rbp+1]
000000000000306d         cmp        rax, r11
0000000000003070         jae        loc_308b

0000000000003072         mov        rax, qword [rsp+arg_8]
0000000000003077         movzx      eax, byte [rax+rbp+1]
000000000000307c         mov        byte [rsp+arg_20], al
0000000000003080         sub        eax, 0x30
0000000000003083         cmp        al, 0x9
0000000000003085         jbe        loc_38b9

                     loc_308b:
000000000000308b         mov        eax, r12d                                   ; CODE XREF=sub_3000+112
000000000000308e         mov        ebx, 0x30
0000000000003093         xor        r12d, r12d
0000000000003096         jmp        sub_2c10+56
                        ; endp
000000000000309b         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_30a0:
00000000000030a0         cmp        dword [rsp+arg_0], 0x2
00000000000030a5         mov        r12d, r10d
00000000000030a8         sete       dl
00000000000030ab         xor        r10d, r10d
00000000000030ae         xor        eax, eax
00000000000030b0         jmp        sub_2c10+56
                        ; endp
00000000000030b5         nop        dword [rax]
00000000000030b8         cmp        dword [rsp+8], 0x2
00000000000030bd         sete       dl
00000000000030c0         xor        r10d, r10d
00000000000030c3         jmp        sub_2e80+8
00000000000030c8         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_30d0:
00000000000030d0         cmp        dword [rsp+8], 0x2
00000000000030d5         sete       dl
00000000000030d8         xor        r10d, r10d
00000000000030db         xor        r12d, r12d
00000000000030de         jmp        sub_2e80+17
                        ; endp
00000000000030e3         nop        dword [rax+rax]
00000000000030e8         cmp        dword [rsp+8], 0x2
00000000000030ed         mov        r12d, r10d
00000000000030f0         mov        ebx, 0x20
00000000000030f5         sete       dl
00000000000030f8         xor        r10d, r10d
00000000000030fb         jmp        sub_2e80+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3100:
0000000000003100         mov        edx, 0xd
0000000000003105         xor        r10d, r10d
0000000000003108         mov        ebx, 0x72
000000000000310d         jmp        sub_2d10+50
                        ; endp
0000000000003112         nop        word [rax+rax]
0000000000003118         mov        ebx, 0x76
000000000000311d         jmp        sub_2d10+176
0000000000003122         nop        word [rax+rax]
0000000000003128         mov        edx, 0x9
000000000000312d         xor        r10d, r10d
0000000000003130         mov        ebx, 0x74
0000000000003135         jmp        sub_2d10+50
000000000000313a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3140:
0000000000003140         mov        ebx, 0x62
0000000000003145         jmp        sub_2d10+176
                        ; endp
000000000000314a         nop        word [rax+rax]

                     loc_3150:
0000000000003150         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000003153         jmp        loc_2bf0
0000000000003158         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_3160:
0000000000003160         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2d10+125
0000000000003165         jne        sub_3160+2416
                        ; endp

                     loc_316b:
000000000000316b         add        rbp, 0x1                                    ; CODE XREF=sub_2d10+159
000000000000316f         mov        eax, r8d
0000000000003172         xor        r12d, r12d
0000000000003175         mov        ebx, 0x5c
000000000000317a         jmp        sub_2c10+124
                        ; endp
000000000000317f         align      128

                     loc_3180:
0000000000003180         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000003185         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000318a         mov        r12d, r8d
000000000000318d         mov        rbp, r11
0000000000003190         sete       dl
0000000000003193         mov        eax, ebx
0000000000003195         test       r15, r15
0000000000003198         sete       cl
000000000000319b         and        eax, edx
000000000000319d         and        al, cl
000000000000319f         jne        loc_3c06

00000000000031a5         mov        eax, ebx
00000000000031a7         xor        eax, 0x1
00000000000031aa         and        dl, al
00000000000031ac         je         loc_3b1c

00000000000031b2         cmp        byte [rsp+0xe8+var_6C], 0x0
00000000000031b7         je         loc_3b1a

00000000000031bd         cmp        byte [rsp+0xe8+var_DA], 0x0
00000000000031c2         jne        loc_3bbd

00000000000031c8         test       r13, r13
00000000000031cb         sete       al
00000000000031ce         cmp        qword [rsp+0xe8+var_98], 0x0
00000000000031d4         setne      dl
00000000000031d7         and        al, dl
00000000000031d9         je         loc_3bfc

00000000000031df         mov        r13, qword [rsp+0xe8+var_98]

                     loc_31e4:
00000000000031e4         lea        rbx, qword [aLibs+29]                       ; 0x56ed, CODE XREF=sub_3160+2781
00000000000031eb         mov        byte [r14], 0x27
00000000000031ef         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000031f7         mov        r15d, 0x1
00000000000031fd         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003206         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000320b         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003210         mov        byte [rsp+0xe8+var_6C], al
0000000000003214         jmp        loc_2af3
0000000000003219         align      32

                     loc_3220:
0000000000003220         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2d10+8
0000000000003225         jne        sub_3160+2416

000000000000322b         test       r13, r13
000000000000322e         je         loc_3630

0000000000003234         xor        edx, edx
0000000000003236         cmp        qword [rsp+arg_48], 0x0
000000000000323c         jne        loc_3630

                     loc_3242:
0000000000003242         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_3160+1284, sub_3160+2794
0000000000003247         add        r15, 0x3
000000000000324b         xor        eax, eax
000000000000324d         mov        byte [rsp+arg_74], r12b
0000000000003252         xor        r8d, r8d
0000000000003255         mov        r13, rdx
0000000000003258         mov        ebx, 0x27
000000000000325d         jmp        sub_2c10+105
                        ; endp
0000000000003262         align      8

                     loc_3268:
0000000000003268         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_2ce0+19
000000000000326d         je         loc_3290

000000000000326f         lea        rcx, qword [rbp+2]
0000000000003273         cmp        rcx, r11
0000000000003276         jae        loc_3290

0000000000003278         mov        rax, qword [rsp+arg_8]
000000000000327d         cmp        byte [rax+rbp+1], 0x3f
0000000000003282         je         loc_3a12

0000000000003288         nop        dword [rax+rax]

                     loc_3290:
0000000000003290         xor        edx, edx                                    ; CODE XREF=sub_3160+269, sub_3160+278, sub_3160+2233, sub_3160+2253
0000000000003292         xor        r12d, r12d
0000000000003295         xor        eax, eax
0000000000003297         mov        ebx, 0x3f
000000000000329c         jmp        sub_2c10+56
                        ; endp
00000000000032a1         align      8

                     loc_32a8:
00000000000032a8         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2ce0+10
00000000000032ad         jne        loc_3ad0

00000000000032b3         xor        r12d, r12d
00000000000032b6         xor        eax, eax
00000000000032b8         mov        ebx, 0x3f
00000000000032bd         jmp        sub_2c10+105
                        ; endp
00000000000032c2         align      8

                     loc_32c8:
00000000000032c8         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_2f00+30
00000000000032d0         cmp        r11, 0xffffffffffffffff
00000000000032d4         mov        qword [rsp+0xe8+var_48], 0x0
00000000000032e0         mov        qword [rsp+0xe8+var_C0], rax
00000000000032e5         jne        loc_3314

00000000000032e7         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
00000000000032ec         mov        byte [rsp+0xe8+var_A8], r8b
00000000000032f1         mov        byte [rsp+0xe8+var_B0], r10b
00000000000032f6         mov        qword [rsp+0xe8+var_B8], r9
00000000000032fb         call       j_strlen                                    ; strlen
0000000000003300         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000003306         movzx      r10d, byte [rsp+0xe8+var_B0]
000000000000330c         mov        r11, rax
000000000000330f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_3314:
0000000000003314         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_3160+389
000000000000331c         xor        ecx, ecx
000000000000331e         mov        byte [rsp+0xe8+var_6A], bl
0000000000003322         mov        byte [rsp+0xe8+var_6B], r8b
0000000000003327         mov        rbx, rcx
000000000000332a         mov        qword [rsp+0xe8+var_60], r9
0000000000003332         mov        qword [rsp+0xe8+var_B0], rax
0000000000003337         mov        byte [rsp+0xe8+var_69], r10b
000000000000333c         mov        qword [rsp+0xe8+var_68], r15
0000000000003344         mov        qword [rsp+0xe8+var_A8], r14
0000000000003349         mov        qword [rsp+0xe8+var_78], r13
000000000000334e         mov        qword [rsp+0xe8+var_B8], r11

                     loc_3353:
0000000000003353         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_3160+623
0000000000003358         lea        r14, qword [rbp+rbx]
000000000000335d         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000003362         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000003367         mov        rdi, qword [rsp+0xe8+var_B0]
000000000000336c         lea        r13, qword [rax+r14]
0000000000003370         sub        rdx, r14
0000000000003373         mov        rsi, r13
0000000000003376         call       rpl_mbrtowc                                 ; rpl_mbrtowc
000000000000337b         test       rax, rax
000000000000337e         mov        r15, rax
0000000000003381         je         loc_33d1

0000000000003383         cmp        rax, 0xffffffffffffffff
0000000000003387         je         loc_39a5

000000000000338d         cmp        rax, 0xfffffffffffffffe
0000000000003391         je         loc_3931

0000000000003397         cmp        dword [rsp+0xe8+var_E0], 0x2
000000000000339c         sete       al
000000000000339f         and        al, byte [rsp+0xe8+var_D9]
00000000000033a3         jne        loc_3540

                     loc_33a9:
00000000000033a9         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_3160+996, sub_3160+1031
00000000000033b0         call       j_iswprint                                  ; iswprint
00000000000033b5         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
00000000000033ba         test       eax, eax
00000000000033bc         mov        eax, 0x0
00000000000033c1         cmove      r12d, eax
00000000000033c5         add        rbx, r15
00000000000033c8         call       j_mbsinit                                   ; mbsinit
00000000000033cd         test       eax, eax
00000000000033cf         je         loc_3353

                     loc_33d1:
00000000000033d1         mov        edx, r12d                                   ; CODE XREF=sub_3160+545
00000000000033d4         mov        rdi, rbx
00000000000033d7         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000033dd         xor        edx, 0x1
00000000000033e0         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000033e5         movzx      r10d, byte [rsp+0xe8+var_69]
00000000000033eb         and        dl, byte [rsp+0xe8+var_DB]
00000000000033ef         mov        r15, qword [rsp+0xe8+var_68]
00000000000033f7         mov        r14, qword [rsp+0xe8+var_A8]
00000000000033fc         mov        r13, qword [rsp+0xe8+var_78]
0000000000003401         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_3406:
0000000000003406         cmp        rdi, 0x1                                    ; CODE XREF=sub_3160+2112, sub_3160+2168
000000000000340a         jbe        loc_3a0b

                     loc_3410:
0000000000003410         mov        rcx, rdi                                    ; CODE XREF=sub_3160+1961
0000000000003413         xor        esi, esi
0000000000003415         movzx      r9d, byte [rsp+0xe8+var_D9]
000000000000341b         add        rcx, rbp
000000000000341e         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003423         jmp        loc_34de
0000000000003428         align      16

                     loc_3430:
0000000000003430         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3160+896
0000000000003435         sete       al
0000000000003438         test       r9b, r9b
000000000000343b         jne        loc_38f0

0000000000003441         mov        esi, r8d
0000000000003444         xor        esi, 0x1
0000000000003447         and        al, sil
000000000000344a         je         loc_347b

000000000000344c         cmp        r13, r15
000000000000344f         jbe        loc_3456

0000000000003451         mov        byte [r14+r15], 0x27

                     loc_3456:
0000000000003456         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_3160+751
000000000000345a         cmp        r13, rsi
000000000000345d         jbe        loc_3465

000000000000345f         mov        byte [r14+r15+1], 0x24

                     loc_3465:
0000000000003465         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_3160+765
0000000000003469         cmp        r13, rsi
000000000000346c         jbe        loc_3474

000000000000346e         mov        byte [r14+r15+2], 0x27

                     loc_3474:
0000000000003474         add        r15, 0x3                                    ; CODE XREF=sub_3160+780
0000000000003478         mov        r8d, eax

                     loc_347b:
000000000000347b         cmp        r13, r15                                    ; CODE XREF=sub_3160+746
000000000000347e         jbe        loc_3485

0000000000003480         mov        byte [r14+r15], 0x5c

                     loc_3485:
0000000000003485         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3160+798
0000000000003489         cmp        r13, rax
000000000000348c         jbe        loc_349b

000000000000348e         mov        eax, ebx
0000000000003490         shr        al, 0x6
0000000000003493         add        eax, 0x30
0000000000003496         mov        byte [r14+r15+1], al

                     loc_349b:
000000000000349b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3160+812
000000000000349f         cmp        r13, rax
00000000000034a2         jbe        loc_34b4

00000000000034a4         mov        eax, ebx
00000000000034a6         shr        al, 0x3
00000000000034a9         and        eax, 0x7
00000000000034ac         add        eax, 0x30
00000000000034af         mov        byte [r14+r15+2], al

                     loc_34b4:
00000000000034b4         and        ebx, 0x7                                    ; CODE XREF=sub_3160+834
00000000000034b7         add        rbp, 0x1
00000000000034bb         add        r15, 0x3
00000000000034bf         add        ebx, 0x30
00000000000034c2         cmp        rbp, rcx
00000000000034c5         jae        loc_2cb0

00000000000034cb         mov        esi, edx

                     loc_34cd:
00000000000034cd         cmp        r13, r15                                    ; CODE XREF=sub_3160+985, sub_3160+1969
00000000000034d0         jbe        loc_34d6

00000000000034d2         mov        byte [r14+r15], bl

                     loc_34d6:
00000000000034d6         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_3160+880
00000000000034da         add        r15, 0x1

                     loc_34de:
00000000000034de         test       dl, dl                                      ; CODE XREF=sub_3160+707
00000000000034e0         jne        loc_3430

00000000000034e6         mov        eax, esi
00000000000034e8         xor        eax, 0x1
00000000000034eb         and        eax, r8d
00000000000034ee         test       r10b, r10b
00000000000034f1         je         loc_3501

00000000000034f3         cmp        r13, r15
00000000000034f6         jbe        loc_34fd

00000000000034f8         mov        byte [r14+r15], 0x5c

                     loc_34fd:
00000000000034fd         add        r15, 0x1                                    ; CODE XREF=sub_3160+918

                     loc_3501:
0000000000003501         add        rbp, 0x1                                    ; CODE XREF=sub_3160+913
0000000000003505         cmp        rbp, rcx
0000000000003508         jae        loc_2c8c

000000000000350e         test       al, al
0000000000003510         je         loc_390e

0000000000003516         cmp        r13, r15
0000000000003519         jbe        loc_3520

000000000000351b         mov        byte [r14+r15], 0x27

                     loc_3520:
0000000000003520         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3160+953
0000000000003524         cmp        r13, rax
0000000000003527         jbe        loc_352f

0000000000003529         mov        byte [r14+r15+1], 0x27

                     loc_352f:
000000000000352f         add        r15, 0x2                                    ; CODE XREF=sub_3160+967
0000000000003533         xor        r10d, r10d
0000000000003536         xor        r8d, r8d
0000000000003539         jmp        loc_34cd
000000000000353b         align      64

                     loc_3540:
0000000000003540         cmp        r15, 0x1                                    ; CODE XREF=sub_3160+579
0000000000003544         je         loc_33a9

000000000000354a         mov        rdi, qword [rsp+0xe8+var_D8]
000000000000354f         lea        rcx, qword [rdi+r15]
0000000000003553         lea        rdx, qword [rdi+r14+1]
0000000000003558         lea        r8, qword [rcx+r14]
000000000000355c         jmp        loc_356d
000000000000355e         align      32

                     loc_3560:
0000000000003560         add        rdx, 0x1                                    ; CODE XREF=sub_3160+1046, sub_3160+1072
0000000000003564         cmp        r8, rdx
0000000000003567         je         loc_33a9

                     loc_356d:
000000000000356d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_3160+1020
0000000000003570         sub        ecx, 0x5b
0000000000003573         cmp        cl, 0x21
0000000000003576         ja         loc_3560

0000000000003578         mov        esi, 0x1
000000000000357d         shl        rsi, cl
0000000000003580         mov        rcx, rsi
0000000000003583         movabs     rsi, 0x20000002b
000000000000358d         test       rcx, rsi
0000000000003590         je         loc_3560

0000000000003592         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003597         mov        r13, qword [rsp+0xe8+var_78]
000000000000359c         mov        rbp, qword [rsp+0xe8+var_B8]
00000000000035a1         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_35a9:
00000000000035a9         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_3160+1227, sub_3160+1948, sub_3160+2585, sub_3160+2734
00000000000035ae         je         loc_35c0

00000000000035b0         test       al, al
00000000000035b2         mov        eax, 0x4
00000000000035b7         cmove      eax, dword [rsp+0xe8+var_E0]
00000000000035bc         mov        dword [rsp+0xe8+var_E0], eax

                     loc_35c0:
00000000000035c0         sub        rsp, 0x8                                    ; CODE XREF=sub_3160+1102
00000000000035c4         mov        rcx, rbp
00000000000035c7         mov        rsi, r13
00000000000035ca         push       qword [rsp+0xf0+var_88]
00000000000035ce         push       qword [rsp+0xf8+var_80]
00000000000035d2         mov        rdi, r14
00000000000035d5         push       0x0
00000000000035d7         mov        r9d, dword [rsp+0x108+var_70]
00000000000035df         mov        r8d, dword [rsp+0x108+var_E0]
00000000000035e4         mov        rdx, qword [rsp+0x108+var_D8]
00000000000035e9         and        r9d, 0xfffffffd
00000000000035ed         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000035f2         add        rsp, 0x20
00000000000035f6         mov        r15, rax

                     loc_35f9:
00000000000035f9         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_3160+2549, sub_3160+2560, sub_3160+2711
0000000000003601         xor        rbx, qword [fs:0x28]
000000000000360a         mov        rax, r15
000000000000360d         jne        loc_3c13

0000000000003613         add        rsp, 0xb8
000000000000361a         pop        rbx
000000000000361b         pop        rbp
000000000000361c         pop        r12
000000000000361e         pop        r13
0000000000003620         pop        r14
0000000000003622         pop        r15
0000000000003624         ret
                        ; endp
0000000000003625         align      8

                     loc_3628:
0000000000003628         mov        rbp, r11                                    ; CODE XREF=sub_2d10+194
000000000000362b         jmp        loc_35a9

                     loc_3630:
0000000000003630         cmp        r13, r15                                    ; CODE XREF=sub_3160+206, sub_3160+220
0000000000003633         jbe        loc_363a

0000000000003635         mov        byte [r14+r15], 0x27

                     loc_363a:
000000000000363a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3160+1235
000000000000363e         cmp        r13, rax
0000000000003641         jbe        loc_3649

0000000000003643         mov        byte [r14+r15+1], 0x5c

                     loc_3649:
0000000000003649         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3160+1249
000000000000364d         cmp        r13, rax
0000000000003650         jbe        loc_3c42

0000000000003656         mov        rdx, r13
0000000000003659         mov        byte [r14+r15+2], 0x27
000000000000365f         mov        r13, qword [rsp+arg_48]
0000000000003664         jmp        loc_3242

                     loc_3669:
0000000000003669         mov        eax, r12d                                   ; CODE XREF=sub_3000+99
000000000000366c         mov        ebx, 0x30
0000000000003671         xor        r12d, r12d
0000000000003674         jmp        sub_2c10+105
                        ; endp

                     loc_3679:
0000000000003679         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_3000+67
000000000000367f         jmp        loc_3049

                     loc_3684:
0000000000003684         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000003686         jne        loc_2ab3

000000000000368c         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_3691:
0000000000003691         test       r13, r13                                    ; CODE XREF=sub_3160+2749
0000000000003694         jne        loc_3c2a

000000000000369a         lea        rax, qword [aLibs+29]                       ; 0x56ed
00000000000036a1         mov        qword [rsp+0xe8+var_98], 0x0
00000000000036aa         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000036af         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000036b4         xor        r12d, r12d
00000000000036b7         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000036bc         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000036c5         mov        qword [rsp+0xe8+var_A0], rax
00000000000036ca         mov        r15d, 0x1
00000000000036d0         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000036d8         jmp        loc_2af3
00000000000036dd         align      32

                     loc_36e0:
00000000000036e0         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
00000000000036e2         jne        loc_3add

00000000000036e8         test       r13, r13
00000000000036eb         je         loc_3916

00000000000036f1         mov        byte [r14], 0x22
00000000000036f5         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000036fa         xor        r12d, r12d
00000000000036fd         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003702         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_370b:
000000000000370b         lea        rax, qword [aLibs+27]                       ; 0x56eb, CODE XREF=sub_3160+1996
0000000000003712         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003717         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000371c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003725         mov        r15d, 0x1
000000000000372b         mov        qword [rsp+0xe8+var_A0], rax
0000000000003730         jmp        loc_2af3

                     loc_3735:
0000000000003735         lea        rax, qword [aLibs+27]                       ; case 6, 0x56eb, CODE XREF=quotearg_buffer_restyled+145
000000000000373c         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003741         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003746         xor        r12d, r12d
0000000000003749         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003752         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003757         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000375c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003765         xor        r15d, r15d
0000000000003768         mov        qword [rsp+0xe8+var_A0], rax
000000000000376d         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000003775         jmp        loc_2af3

                     loc_377a:
000000000000377a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
000000000000377f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003784         xor        r12d, r12d
0000000000003787         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003790         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003795         xor        r15d, r15d
0000000000003798         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000379d         mov        qword [rsp+0xe8+var_D0], 0x0
00000000000037a6         mov        qword [rsp+0xe8+var_A0], 0x0
00000000000037af         jmp        loc_2af3

                     loc_37b4:
00000000000037b4         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
00000000000037b9         je         loc_3811

00000000000037bb         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x56ef
00000000000037c2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000037c4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000037c9         call       j_dcgettext                                 ; dcgettext
00000000000037ce         mov        rcx, rax
00000000000037d1         mov        qword [rsp+0xe8+var_80], rax
00000000000037d6         lea        rax, qword [aLibs+31]                       ; 0x56ef
00000000000037dd         cmp        rcx, rax
00000000000037e0         je         loc_3b7e

                     loc_37e6:
00000000000037e6         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x56ed, CODE XREF=sub_3160+2607
00000000000037ed         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000037ef         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000037f4         call       j_dcgettext                                 ; dcgettext
00000000000037f9         mov        rcx, rax
00000000000037fc         mov        qword [rsp+0xe8+var_88], rax
0000000000003801         lea        rax, qword [aLibs+29]                       ; 0x56ed
0000000000003808         cmp        rcx, rax
000000000000380b         je         loc_3b94

                     loc_3811:
0000000000003811         xor        r15d, r15d                                  ; CODE XREF=sub_3160+1625, sub_3160+2629
0000000000003814         test       ebx, ebx
0000000000003816         je         loc_39dd

                     loc_381c:
000000000000381c         test       ebx, ebx                                    ; CODE XREF=sub_3160+2183, sub_3160+2214
000000000000381e         mov        rbx, qword [rsp+0xe8+var_88]
0000000000003823         setne      byte [rsp+0xe8+var_D9]
0000000000003828         xor        r12d, r12d
000000000000382b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
000000000000382e         call       j_strlen                                    ; strlen
0000000000003833         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003838         mov        qword [rsp+0xe8+var_D0], rax
000000000000383d         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003842         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003847         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003850         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003855         jmp        loc_2af3

                     loc_385a:
000000000000385a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
000000000000385f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003864         xor        r12d, r12d
0000000000003867         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003870         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003875         xor        r15d, r15d
0000000000003878         mov        byte [rsp+0xe8+var_DB], 0x0
000000000000387d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000003886         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000388f         jmp        loc_2af3

                     loc_3894:
0000000000003894         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000003899         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000389e         xor        r12d, r12d
00000000000038a1         mov        qword [rsp+0xe8+var_98], 0x0
00000000000038aa         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000038af         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000038b4         jmp        loc_2ad3

                     loc_38b9:
00000000000038b9         cmp        r13, r15                                    ; CODE XREF=sub_3000+133
00000000000038bc         jbe        loc_38c3

00000000000038be         mov        byte [r14+r15], 0x30

                     loc_38c3:
00000000000038c3         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_3160+1884
00000000000038c7         cmp        r13, rax
00000000000038ca         jbe        loc_38d2

00000000000038cc         mov        byte [r14+rcx+2], 0x30

                     loc_38d2:
00000000000038d2         mov        eax, r12d                                   ; CODE XREF=sub_3160+1898
00000000000038d5         lea        r15, qword [rcx+3]
00000000000038d9         xor        r12d, r12d
00000000000038dc         mov        ebx, 0x30
00000000000038e1         jmp        sub_2c10+56
                        ; endp
00000000000038e6         align      16

                     loc_38f0:
00000000000038f0         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_3160+731
00000000000038f5         mov        rbp, r11
00000000000038f8         mov        byte [rsp+0xe8+var_DB], bl
00000000000038fc         jmp        loc_35a9

                     loc_3901:
0000000000003901         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_2f00+105
0000000000003906         xor        r12d, r12d
0000000000003909         jmp        loc_3410

                     loc_390e:
000000000000390e         xor        r10d, r10d                                  ; CODE XREF=sub_3160+944
0000000000003911         jmp        loc_34cd

                     loc_3916:
0000000000003916         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_3160+1419
000000000000391f         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003924         xor        r12d, r12d
0000000000003927         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000392c         jmp        loc_370b

                     loc_3931:
0000000000003931         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_3160+561
0000000000003936         mov        rsi, r14
0000000000003939         mov        rcx, r13
000000000000393c         mov        rax, rbx
000000000000393f         mov        rdi, rbx
0000000000003942         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003948         movzx      ebx, byte [rsp+0xe8+var_6A]
000000000000394d         mov        r9, qword [rsp+0xe8+var_60]
0000000000003955         cmp        rsi, r11
0000000000003958         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000395e         mov        r15, qword [rsp+0xe8+var_68]
0000000000003966         mov        r14, qword [rsp+0xe8+var_A8]
000000000000396b         mov        r13, qword [rsp+0xe8+var_78]
0000000000003970         jae        loc_3998

0000000000003972         cmp        byte [rcx], 0x0
0000000000003975         jne        loc_3987

0000000000003977         jmp        loc_3998
0000000000003979         align      128

                     loc_3980:
0000000000003980         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_3160+2099
0000000000003985         je         loc_3995

                     loc_3987:
0000000000003987         add        rax, 0x1                                    ; CODE XREF=sub_3160+2069
000000000000398b         lea        rdx, qword [rbp+rax]
0000000000003990         cmp        r11, rdx
0000000000003993         ja         loc_3980

                     loc_3995:
0000000000003995         mov        rdi, rax                                    ; CODE XREF=sub_3160+2085

                     loc_3998:
0000000000003998         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3160+2064, sub_3160+2071
000000000000399d         xor        r12d, r12d
00000000000039a0         jmp        loc_3406

                     loc_39a5:
00000000000039a5         mov        rdi, rbx                                    ; CODE XREF=sub_3160+551
00000000000039a8         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000039ae         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000039b3         movzx      r10d, byte [rsp+0xe8+var_69]
00000000000039b9         mov        r15, qword [rsp+0xe8+var_68]
00000000000039c1         xor        r12d, r12d
00000000000039c4         mov        r14, qword [rsp+0xe8+var_A8]
00000000000039c9         mov        r13, qword [rsp+0xe8+var_78]
00000000000039ce         mov        r11, qword [rsp+0xe8+var_B8]
00000000000039d3         movzx      edx, byte [rsp+0xe8+var_DB]
00000000000039d8         jmp        loc_3406

                     loc_39dd:
00000000000039dd         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_3160+1718
00000000000039e2         movzx      eax, byte [rdx]
00000000000039e5         test       al, al
00000000000039e7         je         loc_381c

00000000000039ed         nop        dword [rax]

                     loc_39f0:
00000000000039f0         cmp        r13, r15                                    ; CODE XREF=sub_3160+2212
00000000000039f3         jbe        loc_39f9

00000000000039f5         mov        byte [r14+r15], al

                     loc_39f9:
00000000000039f9         add        r15, 0x1                                    ; CODE XREF=sub_3160+2195
00000000000039fd         movzx      eax, byte [rdx+r15]
0000000000003a02         test       al, al
0000000000003a04         jne        loc_39f0

0000000000003a06         jmp        loc_381c

                     loc_3a0b:
0000000000003a0b         mov        eax, edx                                    ; CODE XREF=sub_3160+682
0000000000003a0d         jmp        loc_2f67

                     loc_3a12:
0000000000003a12         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_3160+290
0000000000003a16         cmp        bl, 0x3e
0000000000003a19         ja         loc_3290

0000000000003a1f         movabs     rax, 0x7000a38200000000
0000000000003a29         bt         rax, rbx
0000000000003a2d         jae        loc_3290

0000000000003a33         cmp        byte [rsp+arg_7], 0x0
0000000000003a38         jne        loc_3c22

0000000000003a3e         cmp        r13, r15
0000000000003a41         jbe        loc_3a48

0000000000003a43         mov        byte [r14+r15], 0x3f

                     loc_3a48:
0000000000003a48         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3160+2273
0000000000003a4c         cmp        r13, rax
0000000000003a4f         jbe        loc_3a57

0000000000003a51         mov        byte [r14+r15+1], 0x22

                     loc_3a57:
0000000000003a57         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3160+2287
0000000000003a5b         cmp        r13, rax
0000000000003a5e         jbe        loc_3a66

0000000000003a60         mov        byte [r14+r15+2], 0x22

                     loc_3a66:
0000000000003a66         lea        rax, qword [r15+3]                          ; CODE XREF=sub_3160+2302
0000000000003a6a         cmp        r13, rax
0000000000003a6d         jbe        loc_3a75

0000000000003a6f         mov        byte [r14+r15+3], 0x3f

                     loc_3a75:
0000000000003a75         add        r15, 0x4                                    ; CODE XREF=sub_3160+2317
0000000000003a79         xor        edx, edx
0000000000003a7b         xor        r12d, r12d
0000000000003a7e         xor        eax, eax
0000000000003a80         mov        rbp, rcx
0000000000003a83         jmp        sub_2c10+56
                        ; endp

                     loc_3a88:
0000000000003a88         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
0000000000003a8a         je         loc_3c18

0000000000003a90         lea        rax, qword [aLibs+29]                       ; 0x56ed
0000000000003a97         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003a9c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003aa1         xor        r12d, r12d
0000000000003aa4         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003aad         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003ab2         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000003ab7         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003ac0         xor        r15d, r15d
0000000000003ac3         mov        qword [rsp+0xe8+var_A0], rax
0000000000003ac8         jmp        loc_2af3
0000000000003acd         align      16

                     loc_3ad0:
0000000000003ad0         mov        rbp, r11                                    ; CODE XREF=sub_3160+333
0000000000003ad3         movzx      eax, byte [rsp+arg_7]
0000000000003ad8         jmp        sub_3160+1097
                        ; endp

                     loc_3add:
0000000000003add         lea        rax, qword [aLibs+27]                       ; 0x56eb, CODE XREF=sub_3160+1410
0000000000003ae4         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003ae9         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003aee         xor        r12d, r12d
0000000000003af1         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003afa         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003aff         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003b04         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003b0d         xor        r15d, r15d
0000000000003b10         mov        qword [rsp+0xe8+var_A0], rax
0000000000003b15         jmp        loc_2af3

                     loc_3b1a:
0000000000003b1a         mov        eax, edx                                    ; CODE XREF=sub_3160+87

                     loc_3b1c:
0000000000003b1c         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_3160+76, sub_3160+2721
0000000000003b21         test       rbx, rbx
0000000000003b24         je         loc_3b52

0000000000003b26         test       al, al
0000000000003b28         je         loc_3b52

0000000000003b2a         movzx      ecx, byte [rbx]
0000000000003b2d         mov        rax, rbx
0000000000003b30         test       cl, cl
0000000000003b32         je         loc_3b52

0000000000003b34         mov        rdx, r15
0000000000003b37         sub        rax, r15

                     loc_3b3a:
0000000000003b3a         cmp        r13, rdx                                    ; CODE XREF=sub_3160+2541
0000000000003b3d         jbe        loc_3b43

0000000000003b3f         mov        byte [r14+rdx], cl

                     loc_3b43:
0000000000003b43         add        rdx, 0x1                                    ; CODE XREF=sub_3160+2525
0000000000003b47         movzx      ecx, byte [rax+rdx]
0000000000003b4b         test       cl, cl
0000000000003b4d         jne        loc_3b3a

0000000000003b4f         mov        r15, rdx

                     loc_3b52:
0000000000003b52         cmp        r13, r15                                    ; CODE XREF=sub_3160+2500, sub_3160+2504, sub_3160+2514
0000000000003b55         jbe        loc_35f9

0000000000003b5b         mov        byte [r14+r15], 0x0
0000000000003b60         jmp        loc_35f9

                     loc_3b65:
0000000000003b65         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
0000000000003b6a         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000003b6f         mov        rbp, r11
0000000000003b72         sete       al
0000000000003b75         mov        byte [rsp+0xe8+var_DB], bl
0000000000003b79         jmp        loc_35a9

                     loc_3b7e:
0000000000003b7e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_3160+1664
0000000000003b82         mov        rdi, rcx
0000000000003b85         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000003b8a         mov        qword [rsp+0xe8+var_80], rax
0000000000003b8f         jmp        loc_37e6

                     loc_3b94:
0000000000003b94         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_3160+1707
0000000000003b98         mov        rdi, rcx
0000000000003b9b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000003ba0         mov        qword [rsp+0xe8+var_88], rax
0000000000003ba5         jmp        loc_3811

                     loc_3baa:
0000000000003baa         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_3000+16
0000000000003baf         mov        rbp, r11
0000000000003bb2         mov        eax, edx
0000000000003bb4         mov        byte [rsp+arg_5], bl
0000000000003bb8         jmp        sub_3160+1097
                        ; endp

                     loc_3bbd:
0000000000003bbd         sub        rsp, 0x8                                    ; CODE XREF=sub_3160+98
0000000000003bc1         mov        r8d, 0x5
0000000000003bc7         mov        rcx, r11
0000000000003bca         push       qword [rsp+0xf0+var_88]
0000000000003bce         push       qword [rsp+0xf8+var_80]
0000000000003bd2         mov        rdi, r14
0000000000003bd5         push       qword [rsp+0x100+var_C8]
0000000000003bd9         mov        r9d, dword [rsp+0x108+var_70]
0000000000003be1         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003be6         mov        rsi, qword [rsp+0x108+var_98]
0000000000003beb         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003bf0         add        rsp, 0x20
0000000000003bf4         mov        r15, rax
0000000000003bf7         jmp        loc_35f9

                     loc_3bfc:
0000000000003bfc         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_3160+121
0000000000003c01         jmp        loc_3b1c

                     loc_3c06:
0000000000003c06         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3160+63
0000000000003c0e         jmp        loc_35a9

                     loc_3c13:
0000000000003c13         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_3160+1197
                        ; endp

                     loc_3c18:
0000000000003c18         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_3160+2346
0000000000003c1d         jmp        loc_3691

                     loc_3c22:
0000000000003c22         mov        rbp, r11                                    ; CODE XREF=sub_3160+2264
0000000000003c25         jmp        sub_3160+1120
                        ; endp

                     loc_3c2a:
0000000000003c2a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_3160+1332
0000000000003c2f         xor        eax, eax
0000000000003c31         xor        r12d, r12d
0000000000003c34         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003c3d         jmp        loc_31e4

                     loc_3c42:
0000000000003c42         mov        rdx, r13                                    ; CODE XREF=sub_3160+1264
0000000000003c45         mov        r13, qword [rsp+arg_48]
0000000000003c4a         jmp        loc_3242

                     loc_3c4f:
0000000000003c4f         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000003c54         align      32                                          ; End of unwind block (FDE at 0x6438)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000003c60         push       r15                                         ; Begin of unwind block (FDE at 0x64b0), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000003c62         push       r14
0000000000003c64         movsxd     r15, edi
0000000000003c67         push       r13
0000000000003c69         push       r12
0000000000003c6b         mov        r14, rdx
0000000000003c6e         push       rbp
0000000000003c6f         push       rbx
0000000000003c70         mov        rbp, rcx
0000000000003c73         sub        rsp, 0x28
0000000000003c77         mov        qword [rsp+0x58+var_50], rsi
0000000000003c7c         call       j___errno_location                          ; __errno_location
0000000000003c81         mov        r13, rax
0000000000003c84         mov        eax, dword [rax]
0000000000003c86         test       r15d, r15d
0000000000003c89         mov        rbx, qword [slotvec]                        ; slotvec
0000000000003c90         mov        dword [rsp+0x58+var_40], eax
0000000000003c94         js         loc_3e01

0000000000003c9a         cmp        dword [nslots], r15d                        ; nslots
0000000000003ca1         jg         loc_3d05

0000000000003ca3         cmp        r15d, 0x7fffffff
0000000000003caa         je         loc_3e06

0000000000003cb0         lea        r12d, dword [r15+1]
0000000000003cb4         lea        rax, qword [slotvec0]                       ; slotvec0
0000000000003cbb         movsxd     rsi, r12d
0000000000003cbe         shl        rsi, 0x4
0000000000003cc2         cmp        rbx, rax
0000000000003cc5         je         loc_3de0

0000000000003ccb         mov        rdi, rbx                                    ; argument #1 for method xrealloc
0000000000003cce         call       xrealloc                                    ; xrealloc
0000000000003cd3         mov        rbx, rax
0000000000003cd6         mov        qword [slotvec], rax                        ; slotvec

                     loc_3cdd:
0000000000003cdd         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000003ce4         mov        edx, r12d
0000000000003ce7         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000003ce9         sub        edx, edi
0000000000003ceb         shl        rdi, 0x4
0000000000003cef         movsxd     rdx, edx
0000000000003cf2         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000003cf5         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000003cf9         call       j_memset                                    ; memset
0000000000003cfe         mov        dword [nslots], r12d                        ; nslots

                     loc_3d05:
0000000000003d05         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000003d08         shl        r15, 0x4
0000000000003d0c         sub        rsp, 0x8
0000000000003d10         add        rbx, r15
0000000000003d13         lea        r15, qword [rbp+8]
0000000000003d17         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000003d1b         mov        r11, qword [rbx]
0000000000003d1e         mov        r12, qword [rbx+8]
0000000000003d22         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000003d25         or         eax, 0x1
0000000000003d28         mov        dword [rsp+0x60+var_3C], eax
0000000000003d2c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000003d2f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000003d32         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000003d35         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000003d37         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
0000000000003d3a         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000003d3f         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000003d42         mov        qword [rsp+0x78+var_48], r11
0000000000003d47         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003d4c         add        rsp, 0x20
0000000000003d50         mov        r11, qword [rsp+0x58+var_48]
0000000000003d55         cmp        r11, rax
0000000000003d58         ja         loc_3dc1

0000000000003d5a         lea        rsi, qword [rax+1]
0000000000003d5e         lea        rax, qword [slot0]                          ; slot0
0000000000003d65         cmp        r12, rax
0000000000003d68         mov        qword [rbx], rsi
0000000000003d6b         je         loc_3d7f

0000000000003d6d         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000003d70         mov        qword [rsp+0x58+var_48], rsi
0000000000003d75         call       j_free                                      ; free
0000000000003d7a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_3d7f:
0000000000003d7f         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000003d82         mov        qword [rsp+0x58+var_48], rsi
0000000000003d87         call       xmalloc                                     ; xmalloc
0000000000003d8c         sub        rsp, 0x8
0000000000003d90         mov        qword [rbx+8], rax
0000000000003d94         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000003d98         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000003d9b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000003d9e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000003da1         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000003da3         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000003da8         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
0000000000003dab         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000003db0         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000003db5         mov        r12, rax
0000000000003db8         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003dbd         add        rsp, 0x20

                     loc_3dc1:
0000000000003dc1         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000003dc5         mov        dword [r13], eax
0000000000003dc9         add        rsp, 0x28
0000000000003dcd         mov        rax, r12
0000000000003dd0         pop        rbx
0000000000003dd1         pop        rbp
0000000000003dd2         pop        r12
0000000000003dd4         pop        r13
0000000000003dd6         pop        r14
0000000000003dd8         pop        r15
0000000000003dda         ret
                        ; endp
0000000000003ddb         align      32

                     loc_3de0:
0000000000003de0         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000003de2         call       xrealloc                                    ; xrealloc
0000000000003de7         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
0000000000003def         mov        rbx, rax
0000000000003df2         mov        qword [slotvec], rax                        ; slotvec
0000000000003df9         movups     xmmword [rax], xmm0
0000000000003dfc         jmp        loc_3cdd

                     loc_3e01:
0000000000003e01         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_3e06:
0000000000003e06         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3e0b:
0000000000003e0b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x64b0)
                     clone_quoting_options:
0000000000003e10         push       r12                                         ; Begin of unwind block (FDE at 0x651c)
0000000000003e12         push       rbp
0000000000003e13         push       rbx
0000000000003e14         mov        rbx, rdi
0000000000003e17         call       j___errno_location                          ; __errno_location
0000000000003e1c         mov        r12d, dword [rax]
0000000000003e1f         mov        rbp, rax
0000000000003e22         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000003e29         test       rbx, rbx
0000000000003e2c         mov        esi, 0x38                                   ; argument #2 for method xmemdup
0000000000003e31         cmove      rbx, rax
0000000000003e35         mov        rdi, rbx                                    ; argument #1 for method xmemdup
0000000000003e38         call       xmemdup                                     ; xmemdup
0000000000003e3d         mov        dword [rbp], r12d
0000000000003e41         pop        rbx
0000000000003e42         pop        rbp
0000000000003e43         pop        r12
0000000000003e45         ret
                        ; endp
0000000000003e46         align      16                                          ; End of unwind block (FDE at 0x651c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000003e50         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6548), default_quoting_options
0000000000003e57         test       rdi, rdi
0000000000003e5a         cmove      rdi, rax
0000000000003e5e         mov        eax, dword [rdi]
0000000000003e60         ret
                        ; endp
0000000000003e61         align      16                                          ; End of unwind block (FDE at 0x6548)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000003e70         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x655c), default_quoting_options
0000000000003e77         test       rdi, rdi
0000000000003e7a         cmove      rdi, rax
0000000000003e7e         mov        dword [rdi], esi
0000000000003e80         ret
                        ; endp
0000000000003e81         align      16                                          ; End of unwind block (FDE at 0x655c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000003e90         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6570), default_quoting_options
0000000000003e97         test       rdi, rdi
0000000000003e9a         mov        ecx, esi
0000000000003e9c         cmove      rdi, rax
0000000000003ea0         mov        eax, esi
0000000000003ea2         and        ecx, 0x1f
0000000000003ea5         shr        al, 0x5
0000000000003ea8         movzx      eax, al
0000000000003eab         lea        rdi, qword [rdi+rax*4+8]
0000000000003eb0         mov        esi, dword [rdi]
0000000000003eb2         mov        eax, esi
0000000000003eb4         shr        eax, cl
0000000000003eb6         xor        edx, eax
0000000000003eb8         and        eax, 0x1
0000000000003ebb         and        edx, 0x1
0000000000003ebe         shl        edx, cl
0000000000003ec0         xor        edx, esi
0000000000003ec2         mov        dword [rdi], edx
0000000000003ec4         ret
                        ; endp
0000000000003ec5         align      16                                          ; End of unwind block (FDE at 0x6570)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000003ed0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6584), default_quoting_options
0000000000003ed7         test       rdi, rdi
0000000000003eda         cmove      rdi, rax
0000000000003ede         mov        eax, dword [rdi+4]
0000000000003ee1         mov        dword [rdi+4], esi
0000000000003ee4         ret
                        ; endp
0000000000003ee5         align      16                                          ; End of unwind block (FDE at 0x6584)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000003ef0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6598), default_quoting_options
0000000000003ef7         test       rdi, rdi
0000000000003efa         cmove      rdi, rax
0000000000003efe         test       rsi, rsi
0000000000003f01         mov        dword [rdi], 0xa
0000000000003f07         je         loc_3f17

0000000000003f09         test       rdx, rdx
0000000000003f0c         je         loc_3f17

0000000000003f0e         mov        qword [rdi+0x28], rsi
0000000000003f12         mov        qword [rdi+0x30], rdx
0000000000003f16         ret
                        ; endp

                     loc_3f17:
0000000000003f17         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
0000000000003f1b         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000003f20         push       r15                                         ; End of unwind block (FDE at 0x6598), Begin of unwind block (FDE at 0x65ac)
0000000000003f22         push       r14
0000000000003f24         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000003f2b         push       r13
0000000000003f2d         push       r12
0000000000003f2f         mov        r13, rdi
0000000000003f32         push       rbp
0000000000003f33         push       rbx
0000000000003f34         mov        rbx, r8
0000000000003f37         mov        r14, rsi
0000000000003f3a         mov        r15, rdx
0000000000003f3d         sub        rsp, 0x18
0000000000003f41         test       r8, r8
0000000000003f44         cmove      rbx, rax
0000000000003f48         mov        qword [rsp+0x48+var_40], rcx
0000000000003f4d         call       j___errno_location                          ; __errno_location
0000000000003f52         mov        r12d, dword [rax]
0000000000003f55         mov        rbp, rax
0000000000003f58         lea        rax, qword [rbx+8]
0000000000003f5c         sub        rsp, 0x8
0000000000003f60         mov        r9d, dword [rbx+4]
0000000000003f64         push       qword [rbx+0x30]
0000000000003f67         mov        r8d, dword [rbx]
0000000000003f6a         push       qword [rbx+0x28]
0000000000003f6d         mov        rdx, r15
0000000000003f70         push       rax
0000000000003f71         mov        rcx, qword [rsp+0x68+var_40]
0000000000003f76         mov        rsi, r14
0000000000003f79         mov        rdi, r13
0000000000003f7c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003f81         mov        dword [rbp], r12d
0000000000003f85         add        rsp, 0x38
0000000000003f89         pop        rbx
0000000000003f8a         pop        rbp
0000000000003f8b         pop        r12
0000000000003f8d         pop        r13
0000000000003f8f         pop        r14
0000000000003f91         pop        r15
0000000000003f93         ret
                        ; endp
0000000000003f94         align      32                                          ; End of unwind block (FDE at 0x65ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000003fa0         push       r15                                         ; Begin of unwind block (FDE at 0x6600), CODE XREF=quotearg_alloc+5
0000000000003fa2         push       r14
0000000000003fa4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000003fab         push       r13
0000000000003fad         push       r12
0000000000003faf         mov        r12, rdx
0000000000003fb2         push       rbp
0000000000003fb3         push       rbx
0000000000003fb4         mov        rbx, rcx
0000000000003fb7         mov        r14, rdi
0000000000003fba         mov        r15, rsi
0000000000003fbd         sub        rsp, 0x38
0000000000003fc1         test       rcx, rcx
0000000000003fc4         cmove      rbx, rax
0000000000003fc8         xor        ebp, ebp
0000000000003fca         call       j___errno_location                          ; __errno_location
0000000000003fcf         test       r12, r12
0000000000003fd2         mov        r13, rax
0000000000003fd5         mov        eax, dword [rax]
0000000000003fd7         sete       bpl
0000000000003fdb         or         ebp, dword [rbx+4]
0000000000003fde         lea        r10, qword [rbx+8]
0000000000003fe2         sub        rsp, 0x8
0000000000003fe6         mov        r8d, dword [rbx]
0000000000003fe9         mov        rcx, r15
0000000000003fec         mov        dword [rsp+0x70+var_5C], eax
0000000000003ff0         push       qword [rbx+0x30]
0000000000003ff3         mov        rdx, r14
0000000000003ff6         push       qword [rbx+0x28]
0000000000003ff9         push       r10
0000000000003ffb         xor        esi, esi
0000000000003ffd         mov        r9d, ebp
0000000000004000         xor        edi, edi                                    ; DATA XREF=sub_2f00+88
0000000000004002         mov        qword [rsp+0x88+var_48], r10
0000000000004007         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000400c         lea        rsi, qword [rax+1]
0000000000004010         mov        qword [rsp+0x88+var_40], rax
0000000000004015         add        rsp, 0x20
0000000000004019         mov        rdi, rsi
000000000000401c         mov        qword [rsp+0x68+var_50], rsi
0000000000004021         call       xmalloc                                     ; xmalloc
0000000000004026         mov        qword [rsp+0x68+var_58], rax
000000000000402b         sub        rsp, 0x8
000000000000402f         push       qword [rbx+0x30]
0000000000004032         push       qword [rbx+0x28]
0000000000004035         mov        r10, qword [rsp+0x80+var_48]
000000000000403a         mov        r9d, ebp
000000000000403d         mov        r8d, dword [rbx]
0000000000004040         mov        rcx, r15
0000000000004043         mov        rdx, r14
0000000000004046         mov        rdi, rax
0000000000004049         push       r10
000000000000404b         mov        rsi, qword [rsp+0x88+var_50]
0000000000004050         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004055         mov        eax, dword [rsp+0x88+var_5C]
0000000000004059         add        rsp, 0x20
000000000000405d         test       r12, r12
0000000000004060         mov        dword [r13], eax
0000000000004064         je         loc_406f

0000000000004066         mov        r11, qword [rsp+0x68+var_40]
000000000000406b         mov        qword [r12], r11

                     loc_406f:
000000000000406f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000004074         add        rsp, 0x38
0000000000004078         pop        rbx
0000000000004079         pop        rbp
000000000000407a         pop        r12
000000000000407c         pop        r13
000000000000407e         pop        r14
0000000000004080         pop        r15
0000000000004082         ret
                        ; endp
0000000000004083         align      16                                          ; End of unwind block (FDE at 0x6600)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000004090         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x666c)
0000000000004093         xor        edx, edx
0000000000004095         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
000000000000409a         align      32                                          ; End of unwind block (FDE at 0x666c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
00000000000040a0         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x6680), nslots
00000000000040a6         push       r12
00000000000040a8         mov        r12, qword [slotvec]                        ; slotvec
00000000000040af         push       rbp
00000000000040b0         push       rbx
00000000000040b1         cmp        eax, 0x1
00000000000040b4         jle        loc_40e1

00000000000040b6         sub        eax, 0x2
00000000000040b9         lea        rbx, qword [r12+0x18]
00000000000040be         shl        rax, 0x4
00000000000040c2         lea        rbp, qword [r12+rax+0x28]
00000000000040c7         nop        word [rax+rax]

                     loc_40d0:
00000000000040d0         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
00000000000040d3         add        rbx, 0x10
00000000000040d7         call       j_free                                      ; free
00000000000040dc         cmp        rbx, rbp
00000000000040df         jne        loc_40d0

                     loc_40e1:
00000000000040e1         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
00000000000040e6         lea        rbx, qword [slot0]                          ; slot0
00000000000040ed         cmp        rdi, rbx
00000000000040f0         je         loc_4109

00000000000040f2         call       j_free                                      ; free
00000000000040f7         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000004102         mov        qword [slotvec0+8], rbx                     ; 0x208098

                     loc_4109:
0000000000004109         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000004110         cmp        r12, rbx
0000000000004113         je         loc_4124

0000000000004115         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000004118         call       j_free                                      ; free
000000000000411d         mov        qword [slotvec], rbx                        ; slotvec

                     loc_4124:
0000000000004124         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000004125         mov        dword [nslots], 0x1                         ; nslots
000000000000412f         pop        rbp
0000000000004130         pop        r12
0000000000004132         ret
                        ; endp
0000000000004133         align      64                                          ; End of unwind block (FDE at 0x6680)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000004140         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x66ac), default_quoting_options
0000000000004147         mov        rdx, 0xffffffffffffffff
000000000000414e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004153         align      32                                          ; End of unwind block (FDE at 0x66ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000004160         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x66c0), default_quoting_options
0000000000004167         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000416c         align      16                                          ; End of unwind block (FDE at 0x66c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000004170         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x66d4), default_quoting_options
0000000000004177         mov        rsi, rdi
000000000000417a         mov        rdx, 0xffffffffffffffff
0000000000004181         xor        edi, edi
0000000000004183         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004188         align      16                                          ; End of unwind block (FDE at 0x66d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000004190         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x66e8), default_quoting_options
0000000000004197         mov        rdx, rsi
000000000000419a         mov        rsi, rdi
000000000000419d         xor        edi, edi
000000000000419f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000041a4         align      16                                          ; End of unwind block (FDE at 0x66e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
00000000000041b0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x66fc)
00000000000041b4         mov        rax, rdx
00000000000041b7         mov        rdx, qword [fs:0x28]
00000000000041c0         mov        qword [rsp+0x48+var_10], rdx
00000000000041c5         xor        edx, edx
00000000000041c7         cmp        esi, 0xa
00000000000041ca         je         loc_4234

00000000000041cc         mov        dword [rsp+0x48+var_48], esi
00000000000041cf         mov        rcx, rsp
00000000000041d2         mov        rdx, 0xffffffffffffffff
00000000000041d9         mov        rsi, rax
00000000000041dc         mov        qword [rsp+0x48+var_44], 0x0
00000000000041e5         mov        qword [rsp+0x48+var_3C], 0x0
00000000000041ee         mov        qword [rsp+0x48+var_34], 0x0
00000000000041f7         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004200         mov        qword [rsp+0x48+var_24], 0x0
0000000000004209         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004212         mov        dword [rsp+0x48+var_14], 0x0
000000000000421a         call       quotearg_n_options                          ; quotearg_n_options
000000000000421f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004224         xor        rcx, qword [fs:0x28]
000000000000422d         jne        loc_4239

000000000000422f         add        rsp, 0x48
0000000000004233         ret
                        ; endp

                     loc_4234:
0000000000004234         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_4239:
0000000000004239         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
000000000000423e         align      64                                          ; End of unwind block (FDE at 0x66fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000004240         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6718), CODE XREF=quotearg_style_mem+10
0000000000004244         mov        rax, rdx
0000000000004247         mov        rdx, rcx
000000000000424a         mov        rcx, qword [fs:0x28]
0000000000004253         mov        qword [rsp+0x48+var_10], rcx
0000000000004258         xor        ecx, ecx
000000000000425a         cmp        esi, 0xa
000000000000425d         je         loc_42c0

000000000000425f         mov        dword [rsp+0x48+var_48], esi
0000000000004262         mov        rcx, rsp
0000000000004265         mov        rsi, rax
0000000000004268         mov        qword [rsp+0x48+var_44], 0x0
0000000000004271         mov        qword [rsp+0x48+var_3C], 0x0
000000000000427a         mov        qword [rsp+0x48+var_34], 0x0
0000000000004283         mov        qword [rsp+0x48+var_2C], 0x0
000000000000428c         mov        qword [rsp+0x48+var_24], 0x0
0000000000004295         mov        qword [rsp+0x48+var_1C], 0x0
000000000000429e         mov        dword [rsp+0x48+var_14], 0x0
00000000000042a6         call       quotearg_n_options                          ; quotearg_n_options
00000000000042ab         mov        rdx, qword [rsp+0x48+var_10]
00000000000042b0         xor        rdx, qword [fs:0x28]
00000000000042b9         jne        loc_42c5

00000000000042bb         add        rsp, 0x48
00000000000042bf         ret
                        ; endp

                     loc_42c0:
00000000000042c0         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_42c5:
00000000000042c5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
00000000000042ca         align      16                                          ; End of unwind block (FDE at 0x6718)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
00000000000042d0         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x6734)
00000000000042d3         mov        esi, edi
00000000000042d5         xor        edi, edi
00000000000042d7         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
00000000000042dc         align      32                                          ; End of unwind block (FDE at 0x6734)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
00000000000042e0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x6748)
00000000000042e3         mov        rdx, rsi
00000000000042e6         mov        esi, edi
00000000000042e8         xor        edi, edi
00000000000042ea         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
00000000000042ef         align      16                                          ; End of unwind block (FDE at 0x6748)

                     quotearg_char_mem:
00000000000042f0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x675c), CODE XREF=quotearg_char+11
00000000000042f4         mov        ecx, edx
00000000000042f6         mov        rax, qword [fs:0x28]
00000000000042ff         mov        qword [rsp+0x48+var_10], rax
0000000000004304         xor        eax, eax
0000000000004306         mov        rax, qword [qword_208250]                   ; qword_208250
000000000000430d         mov        r8, rsp
0000000000004310         and        ecx, 0x1f
0000000000004313         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
000000000000431b         mov        qword [rsp+0x48+var_18], rax
0000000000004320         mov        eax, edx
0000000000004322         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000004326         shr        al, 0x5
0000000000004329         movzx      eax, al
000000000000432c         lea        r9, qword [r8+rax*4+8]
0000000000004331         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x208230
0000000000004339         movaps     xmmword [rsp+0x48+var_38], xmm0
000000000000433e         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x208240
0000000000004346         movaps     xmmword [rsp+0x48+var_28], xmm0
000000000000434b         mov        edx, dword [r9]
000000000000434e         mov        eax, edx
0000000000004350         shr        eax, cl
0000000000004352         not        eax
0000000000004354         and        eax, 0x1
0000000000004357         shl        eax, cl
0000000000004359         mov        rcx, r8
000000000000435c         xor        eax, edx
000000000000435e         mov        rdx, rsi
0000000000004361         mov        rsi, rdi
0000000000004364         mov        dword [r9], eax
0000000000004367         xor        edi, edi
0000000000004369         call       quotearg_n_options                          ; quotearg_n_options
000000000000436e         mov        rsi, qword [rsp+0x48+var_10]
0000000000004373         xor        rsi, qword [fs:0x28]
000000000000437c         jne        loc_4383

000000000000437e         add        rsp, 0x48
0000000000004382         ret
                        ; endp

                     loc_4383:
0000000000004383         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000004388         align      16                                          ; End of unwind block (FDE at 0x675c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000004390         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x6778)
0000000000004394         mov        rsi, 0xffffffffffffffff
000000000000439b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
00000000000043a0         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x6778), Begin of unwind block (FDE at 0x678c), CODE XREF=close_stdout+101
00000000000043a5         mov        rsi, 0xffffffffffffffff
00000000000043ac         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
00000000000043b1         align      64                                          ; End of unwind block (FDE at 0x678c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
00000000000043c0         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x67a0)
00000000000043c5         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
00000000000043ca         align      16                                          ; End of unwind block (FDE at 0x67a0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
00000000000043d0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x67b4), CODE XREF=main+575, paste_parallel+1009, paste_parallel+1201, paste_parallel+1376, paste_serial+516, paste_serial+640
00000000000043d4         mov        rax, rdx
00000000000043d7         mov        rdx, qword [fs:0x28]
00000000000043e0         mov        qword [rsp+0x48+var_10], rdx
00000000000043e5         xor        edx, edx
00000000000043e7         cmp        esi, 0xa
00000000000043ea         je         loc_4454

00000000000043ec         mov        dword [rsp+0x48+var_48], esi
00000000000043ef         mov        rcx, rsp
00000000000043f2         mov        rdx, 0xffffffffffffffff
00000000000043f9         mov        rsi, rax
00000000000043fc         mov        qword [rsp+0x48+var_44], 0x0
0000000000004405         mov        qword [rsp+0x48+var_3C], 0x4000000
000000000000440e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004417         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004420         mov        qword [rsp+0x48+var_24], 0x0
0000000000004429         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004432         mov        dword [rsp+0x48+var_14], 0x0
000000000000443a         call       quotearg_n_options                          ; quotearg_n_options
000000000000443f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004444         xor        rcx, qword [fs:0x28]
000000000000444d         jne        loc_4459

000000000000444f         add        rsp, 0x48
0000000000004453         ret
                        ; endp

                     loc_4454:
0000000000004454         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_4459:
0000000000004459         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
000000000000445e         align      32                                          ; End of unwind block (FDE at 0x67b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom_mem:
0000000000004460         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x67d0), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000004464         mov        r9, rcx
0000000000004467         mov        rcx, qword [qword_208250]                   ; qword_208250
000000000000446e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000004476         mov        rax, qword [fs:0x28]
000000000000447f         mov        qword [rsp+0x48+var_10], rax
0000000000004484         xor        eax, eax
0000000000004486         movaps     xmmword [rsp+0x48+var_48], xmm0
000000000000448a         test       rsi, rsi
000000000000448d         mov        qword [rsp+0x48+var_18], rcx
0000000000004492         mov        dword [rsp+0x48+var_48], 0xa
0000000000004499         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x208230
00000000000044a1         movaps     xmmword [rsp+0x48+var_38], xmm0
00000000000044a6         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x208240
00000000000044ae         movaps     xmmword [rsp+0x48+var_28], xmm0
00000000000044b3         je         loc_44e7

00000000000044b5         test       rdx, rdx
00000000000044b8         je         loc_44e7

00000000000044ba         mov        qword [rsp+0x48+var_20], rsi
00000000000044bf         mov        qword [rsp+0x48+var_18], rdx
00000000000044c4         mov        rcx, rsp
00000000000044c7         mov        rdx, r8
00000000000044ca         mov        rsi, r9
00000000000044cd         call       quotearg_n_options                          ; quotearg_n_options
00000000000044d2         mov        rdi, qword [rsp+0x48+var_10]
00000000000044d7         xor        rdi, qword [fs:0x28]
00000000000044e0         jne        loc_44ec

00000000000044e2         add        rsp, 0x48
00000000000044e6         ret
                        ; endp

                     loc_44e7:
00000000000044e7         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_44ec:
00000000000044ec         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
00000000000044f1         align      256                                         ; End of unwind block (FDE at 0x67d0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_custom:
0000000000004500         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x67ec)
0000000000004507         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
000000000000450c         align      16                                          ; End of unwind block (FDE at 0x67ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000004510         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x6800)
0000000000004513         mov        r8, 0xffffffffffffffff
000000000000451a         mov        rdx, rsi
000000000000451d         mov        rsi, rdi
0000000000004520         xor        edi, edi
0000000000004522         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004527         align      16                                          ; End of unwind block (FDE at 0x6800)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000004530         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x6814)
0000000000004533         mov        rcx, rdx
0000000000004536         mov        rdx, rsi
0000000000004539         mov        rsi, rdi
000000000000453c         xor        edi, edi
000000000000453e         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004543         align      16                                          ; End of unwind block (FDE at 0x6814)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000004550         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x6828), quote_quoting_options
0000000000004557         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000455c         align      32                                          ; End of unwind block (FDE at 0x6828)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000004560         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x683c), quote_quoting_options
0000000000004567         mov        rdx, rsi
000000000000456a         mov        rsi, rdi
000000000000456d         xor        edi, edi
000000000000456f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004574         align      128                                         ; End of unwind block (FDE at 0x683c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000004580         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x6850), quote_quoting_options
0000000000004587         mov        rdx, 0xffffffffffffffff
000000000000458e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004593         align      32                                          ; End of unwind block (FDE at 0x6850)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
00000000000045a0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x6864), quote_quoting_options
00000000000045a7         mov        rsi, rdi
00000000000045aa         mov        rdx, 0xffffffffffffffff
00000000000045b1         xor        edi, edi
00000000000045b3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000045b8         align      64                                          ; End of unwind block (FDE at 0x6864)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
00000000000045c0         push       r15                                         ; Begin of unwind block (FDE at 0x687c), CODE XREF=version_etc_va+75, version_etc+161
00000000000045c2         push       r14
00000000000045c4         push       r13
00000000000045c6         push       r12
00000000000045c8         mov        r12, r9
00000000000045cb         push       rbp
00000000000045cc         push       rbx
00000000000045cd         mov        rbp, rdi
00000000000045d0         mov        rbx, r8
00000000000045d3         sub        rsp, 0x28
00000000000045d7         test       rsi, rsi
00000000000045da         je         loc_46f8

00000000000045e0         mov        r8, rdx
00000000000045e3         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
00000000000045ea         mov        r9, rcx
00000000000045ed         xor        eax, eax
00000000000045ef         mov        rcx, rsi
00000000000045f2         mov        esi, 0x1
00000000000045f7         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_45fc:
00000000000045fc         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x5bbb, CODE XREF=version_etc_arn+337
0000000000004603         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004605         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000460a         call       j_dcgettext                                 ; dcgettext
000000000000460f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000004616         mov        rcx, rax
0000000000004619         mov        r8d, 0x7e3
000000000000461f         mov        esi, 0x1
0000000000004624         mov        rdi, rbp
0000000000004627         xor        eax, eax
0000000000004629         call       j___fprintf_chk                             ; __fprintf_chk
000000000000462e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000004635         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004637         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000463c         call       j_dcgettext                                 ; dcgettext
0000000000004641         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004644         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004647         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000464c         cmp        r12, 0x9
0000000000004650         ja         loc_4990

0000000000004656         lea        rdx, qword [switch_table_5ea8]              ; switch_table_5ea8
000000000000465d         movsxd     rax, dword [rdx+r12*4]
0000000000004661         add        rax, rdx
0000000000004664         jmp        rax                                         ; switch statement using table at 0x5ea8, with 10 cases, 0x4670,0x46e6,0x4720,0x4778,0x47b8,0x4800,0x4850,0x48a8,0x48d8,0x4940
0000000000004666         align      16

                     loc_4670:
0000000000004670         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000004674         mov        rax, qword [rbx+0x10]
0000000000004678         lea        rsi, qword [aWrittenBySSSns_5db8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
000000000000467f         mov        r8, qword [rbx+8]
0000000000004683         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004688         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000468a         mov        r13, qword [rbx+0x30]
000000000000468e         mov        r12, qword [rbx+0x28]
0000000000004692         mov        qword [rsp+0x58+var_48], r9
0000000000004697         mov        r15, qword [rbx+0x20]
000000000000469b         mov        r14, qword [rbx+0x18]
000000000000469f         mov        qword [rsp+0x58+var_58], rax
00000000000046a3         mov        qword [rsp+0x58+var_50], r8
00000000000046a8         mov        rbx, qword [rbx]
00000000000046ab         call       j_dcgettext                                 ; dcgettext
00000000000046b0         sub        rsp, 0x8

                     loc_46b4:
00000000000046b4         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
00000000000046b9         mov        rdx, rax
00000000000046bc         mov        rcx, rbx
00000000000046bf         mov        esi, 0x1
00000000000046c4         mov        rdi, rbp
00000000000046c7         xor        eax, eax
00000000000046c9         push       r9
00000000000046cb         push       r13
00000000000046cd         push       r12
00000000000046cf         push       r15
00000000000046d1         push       r14
00000000000046d3         mov        r9, qword [rsp+0x88+var_58]
00000000000046d8         mov        r8, qword [rsp+0x88+var_50]
00000000000046dd         call       j___fprintf_chk                             ; __fprintf_chk
00000000000046e2         add        rsp, 0x30

                     loc_46e6:
00000000000046e6         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
00000000000046ea         pop        rbx
00000000000046eb         pop        rbp
00000000000046ec         pop        r12
00000000000046ee         pop        r13
00000000000046f0         pop        r14
00000000000046f2         pop        r15
00000000000046f4         ret
                        ; endp
00000000000046f5         align      8

                     loc_46f8:
00000000000046f8         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
00000000000046fb         mov        rcx, rdx
00000000000046fe         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000004705         mov        esi, 0x1
000000000000470a         xor        eax, eax
000000000000470c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004711         jmp        loc_45fc
0000000000004716         align      32

                     loc_4720:
0000000000004720         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000004724         mov        r9, qword [rbx+0x38]
0000000000004728         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
000000000000472f         mov        rax, qword [rbx+0x10]
0000000000004733         mov        r8, qword [rbx+8]
0000000000004737         mov        edx, 0x5
000000000000473c         mov        r13, qword [rbx+0x30]
0000000000004740         mov        r12, qword [rbx+0x28]
0000000000004744         mov        r15, qword [rbx+0x20]
0000000000004748         mov        r14, qword [rbx+0x18]
000000000000474c         mov        rbx, qword [rbx]
000000000000474f         mov        qword [rsp+0x58+var_40], r10
0000000000004754         mov        qword [rsp+0x58+var_48], r9
0000000000004759         mov        qword [rsp+0x58+var_58], rax
000000000000475d         mov        qword [rsp+0x58+var_50], r8

                     loc_4762:
0000000000004762         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000004764         call       j_dcgettext                                 ; dcgettext
0000000000004769         mov        r10, qword [rsp+0x58+var_40]
000000000000476e         push       r10
0000000000004770         jmp        loc_46b4
0000000000004775         align      8

                     loc_4778:
0000000000004778         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
000000000000477b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000004782         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004787         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004789         call       j_dcgettext                                 ; dcgettext
000000000000478e         add        rsp, 0x28
0000000000004792         mov        rcx, rbx
0000000000004795         mov        rdi, rbp
0000000000004798         pop        rbx
0000000000004799         pop        rbp
000000000000479a         pop        r12
000000000000479c         pop        r13
000000000000479e         pop        r14
00000000000047a0         pop        r15
00000000000047a2         mov        rdx, rax
00000000000047a5         mov        esi, 0x1
00000000000047aa         xor        eax, eax
00000000000047ac         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000047b1         align      8

                     loc_47b8:
00000000000047b8         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
00000000000047bc         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
00000000000047c3         mov        rbx, qword [rbx]
00000000000047c6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000047cb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000047cd         call       j_dcgettext                                 ; dcgettext
00000000000047d2         add        rsp, 0x28
00000000000047d6         mov        r8, r12
00000000000047d9         mov        rcx, rbx
00000000000047dc         mov        rdi, rbp
00000000000047df         mov        rdx, rax
00000000000047e2         mov        esi, 0x1
00000000000047e7         pop        rbx
00000000000047e8         pop        rbp
00000000000047e9         pop        r12
00000000000047eb         pop        r13
00000000000047ed         pop        r14
00000000000047ef         pop        r15
00000000000047f1         xor        eax, eax
00000000000047f3         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000047f8         align      2048

                     loc_4800:
0000000000004800         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000004804         mov        r12, qword [rbx+8]
0000000000004808         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
000000000000480f         mov        rbx, qword [rbx]
0000000000004812         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004817         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004819         call       j_dcgettext                                 ; dcgettext
000000000000481e         add        rsp, 0x28
0000000000004822         mov        r9, r13
0000000000004825         mov        r8, r12
0000000000004828         mov        rcx, rbx
000000000000482b         mov        rdi, rbp
000000000000482e         mov        rdx, rax
0000000000004831         pop        rbx
0000000000004832         pop        rbp
0000000000004833         pop        r12
0000000000004835         pop        r13
0000000000004837         pop        r14
0000000000004839         pop        r15
000000000000483b         mov        esi, 0x1
0000000000004840         xor        eax, eax
0000000000004842         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004847         align      16

                     loc_4850:
0000000000004850         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000004857         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000485c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000485e         mov        r14, qword [rbx+0x18]
0000000000004862         mov        r13, qword [rbx+0x10]
0000000000004866         mov        r12, qword [rbx+8]
000000000000486a         mov        rbx, qword [rbx]
000000000000486d         call       j_dcgettext                                 ; dcgettext
0000000000004872         sub        rsp, 0x8

                     loc_4876:
0000000000004876         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000004878         mov        rdx, rax
000000000000487b         mov        r9, r13
000000000000487e         mov        r8, r12
0000000000004881         mov        rcx, rbx
0000000000004884         mov        rdi, rbp
0000000000004887         mov        esi, 0x1
000000000000488c         xor        eax, eax
000000000000488e         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004893         pop        rax
0000000000004894         pop        rdx
0000000000004895         add        rsp, 0x28
0000000000004899         pop        rbx
000000000000489a         pop        rbp
000000000000489b         pop        r12
000000000000489d         pop        r13
000000000000489f         pop        r14
00000000000048a1         pop        r15
00000000000048a3         ret
                        ; endp
00000000000048a4         align      8

                     loc_48a8:
00000000000048a8         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
00000000000048ac         lea        rsi, qword [aWrittenBySSSns_5d38]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
00000000000048b3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000048b8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000048ba         mov        r14, qword [rbx+0x18]
00000000000048be         mov        r13, qword [rbx+0x10]
00000000000048c2         mov        r12, qword [rbx+8]
00000000000048c6         mov        rbx, qword [rbx]
00000000000048c9         call       j_dcgettext                                 ; dcgettext
00000000000048ce         push       r15
00000000000048d0         jmp        loc_4876
00000000000048d2         align      8

                     loc_48d8:
00000000000048d8         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
00000000000048dc         mov        r12, qword [rbx+0x28]
00000000000048e0         lea        rsi, qword [aWrittenBySSSns_5d60]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
00000000000048e7         mov        r15, qword [rbx+0x20]
00000000000048eb         mov        r14, qword [rbx+0x18]
00000000000048ef         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000048f4         mov        r13, qword [rbx+0x10]
00000000000048f8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000048fa         mov        rbx, qword [rbx]
00000000000048fd         mov        qword [rsp+0x58+var_58], r8
0000000000004901         call       j_dcgettext                                 ; dcgettext
0000000000004906         sub        rsp, 0x8
000000000000490a         mov        r9, r13
000000000000490d         push       r12
000000000000490f         push       r15
0000000000004911         push       r14

                     loc_4913:
0000000000004913         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000004918         mov        rcx, rbx
000000000000491b         mov        rdx, rax
000000000000491e         mov        rdi, rbp
0000000000004921         mov        esi, 0x1
0000000000004926         xor        eax, eax
0000000000004928         call       j___fprintf_chk                             ; __fprintf_chk
000000000000492d         add        rsp, 0x20
0000000000004931         add        rsp, 0x28
0000000000004935         pop        rbx
0000000000004936         pop        rbp
0000000000004937         pop        r12
0000000000004939         pop        r13
000000000000493b         pop        r14
000000000000493d         pop        r15
000000000000493f         ret
                        ; endp

                     loc_4940:
0000000000004940         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000004944         mov        r13, qword [rbx+0x30]
0000000000004948         lea        rsi, qword [aWrittenBySSSns_5d88]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
000000000000494f         mov        r12, qword [rbx+0x28]
0000000000004953         mov        r15, qword [rbx+0x20]
0000000000004957         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000495c         mov        r14, qword [rbx+0x18]
0000000000004960         mov        r8, qword [rbx+8]
0000000000004964         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004966         mov        qword [rsp+0x58+var_50], r9
000000000000496b         mov        rbx, qword [rbx]
000000000000496e         mov        qword [rsp+0x58+var_58], r8
0000000000004972         call       j_dcgettext                                 ; dcgettext
0000000000004977         push       r13
0000000000004979         push       r12
000000000000497b         push       r15
000000000000497d         push       r14
000000000000497f         mov        r9, qword [rsp+0x78+var_50]
0000000000004984         jmp        loc_4913
0000000000004986         align      16

                     loc_4990:
0000000000004990         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000004994         mov        r9, qword [rbx+0x38]
0000000000004998         mov        edx, 0x5
000000000000499d         mov        rax, qword [rbx+0x10]
00000000000049a1         mov        r8, qword [rbx+8]
00000000000049a5         lea        rsi, qword [aWrittenBySSSns_5e20]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
00000000000049ac         mov        r13, qword [rbx+0x30]
00000000000049b0         mov        r12, qword [rbx+0x28]
00000000000049b4         mov        r15, qword [rbx+0x20]
00000000000049b8         mov        r14, qword [rbx+0x18]
00000000000049bc         mov        qword [rsp+0x58+var_40], r10
00000000000049c1         mov        qword [rsp+0x58+var_48], r9
00000000000049c6         mov        qword [rsp+0x58+var_58], rax
00000000000049ca         mov        qword [rsp+0x58+var_50], r8
00000000000049cf         mov        rbx, qword [rbx]
00000000000049d2         jmp        loc_4762
00000000000049d7         align      32                                          ; End of unwind block (FDE at 0x687c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
00000000000049e0         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x6990)
00000000000049e3         cmp        qword [r8], 0x0
00000000000049e7         je         j_version_etc_arn                           ; version_etc_arn

00000000000049e9         nop        dword [rax]

                     loc_49f0:
00000000000049f0         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
00000000000049f4         cmp        qword [r8+r9*8], 0x0
00000000000049f9         jne        loc_49f0

                     j_version_etc_arn:        // version_etc_arn
00000000000049fb         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000004a00         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x6990), Begin of unwind block (FDE at 0x69a4)
0000000000004a04         mov        r10, r8
0000000000004a07         xor        r9d, r9d
0000000000004a0a         mov        rax, qword [fs:0x28]
0000000000004a13         mov        qword [rsp+0x68+var_10], rax
0000000000004a18         xor        eax, eax
0000000000004a1a         mov        r8, rsp
0000000000004a1d         nop        dword [rax]

                     loc_4a20:
0000000000004a20         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000004a23         cmp        eax, 0x2f
0000000000004a26         ja         loc_4a6a

0000000000004a28         mov        r11d, eax
0000000000004a2b         add        r11, qword [r10+0x10]
0000000000004a2f         add        eax, 0x8
0000000000004a32         mov        dword [r10], eax

                     loc_4a35:
0000000000004a35         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000004a38         test       rax, rax
0000000000004a3b         mov        qword [r8+r9*8], rax
0000000000004a3f         je         loc_4a4b

0000000000004a41         add        r9, 0x1
0000000000004a45         cmp        r9, 0xa
0000000000004a49         jne        loc_4a20

                     loc_4a4b:
0000000000004a4b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000004a50         mov        rax, qword [rsp+0x68+var_10]
0000000000004a55         xor        rax, qword [fs:0x28]
0000000000004a5e         jne        loc_4a65

0000000000004a60         add        rsp, 0x68
0000000000004a64         ret
                        ; endp

                     loc_4a65:
0000000000004a65         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_4a6a:
0000000000004a6a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
0000000000004a6e         lea        rax, qword [r11+8]
0000000000004a72         mov        qword [r10+8], rax
0000000000004a76         jmp        loc_4a35
0000000000004a78         align      128                                         ; End of unwind block (FDE at 0x69a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000004a80         push       rbp                                         ; Begin of unwind block (FDE at 0x69c0), CODE XREF=main+245
0000000000004a81         push       rbx
0000000000004a82         mov        r10d, 0x20
0000000000004a88         xor        r11d, r11d
0000000000004a8b         sub        rsp, 0xb8
0000000000004a92         mov        rax, qword [fs:0x28]
0000000000004a9b         mov        qword [rsp+0xc8+var_50], rax
0000000000004aa0         xor        eax, eax
0000000000004aa2         lea        rax, qword [rsp+0xc8+arg_0]
0000000000004aaa         mov        qword [rsp+0xc8+var_28], r8
0000000000004ab2         lea        rbx, qword [rsp+0xc8+arg_0]
0000000000004aba         lea        r8, qword [rsp+0xc8+var_A8]
0000000000004abf         mov        qword [rsp+0xc8+var_20], r9
0000000000004ac7         mov        dword [rsp+0xc8+var_C0], 0x20
0000000000004acf         mov        qword [rsp+0xc8+var_B8], rax
0000000000004ad4         lea        rax, qword [rsp+0xc8+var_48]
0000000000004adc         xor        r9d, r9d
0000000000004adf         mov        qword [rsp+0xc8+var_B0], rax
0000000000004ae4         mov        rbp, rax
0000000000004ae7         nop        word [rax+rax]

                     loc_4af0:
0000000000004af0         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000004af4         ja         loc_4b4c

0000000000004af6         mov        eax, r10d
0000000000004af9         mov        r11d, 0x1
0000000000004aff         add        r10d, 0x8
0000000000004b03         add        rax, rbp

                     loc_4b06:
0000000000004b06         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000004b09         test       rax, rax
0000000000004b0c         mov        qword [r8+r9*8], rax
0000000000004b10         je         loc_4b1c

0000000000004b12         add        r9, 0x1
0000000000004b16         cmp        r9, 0xa
0000000000004b1a         jne        loc_4af0

                     loc_4b1c:
0000000000004b1c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
0000000000004b1f         jne        loc_4b45

                     loc_4b21:
0000000000004b21         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000004b26         mov        rax, qword [rsp+0xc8+var_50]
0000000000004b2b         xor        rax, qword [fs:0x28]
0000000000004b34         jne        loc_4b40

0000000000004b36         add        rsp, 0xb8
0000000000004b3d         pop        rbx
0000000000004b3e         pop        rbp
0000000000004b3f         ret
                        ; endp

                     loc_4b40:
0000000000004b40         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_4b45:
0000000000004b45         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
0000000000004b4a         jmp        loc_4b21

                     loc_4b4c:
0000000000004b4c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
0000000000004b4f         add        rbx, 0x8
0000000000004b53         jmp        loc_4b06
0000000000004b55         align      32                                          ; End of unwind block (FDE at 0x69c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000004b60         push       rbx                                         ; Begin of unwind block (FDE at 0x69ec)
0000000000004b61         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000004b68         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004b6d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004b6f         call       j_dcgettext                                 ; dcgettext
0000000000004b74         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
0000000000004b7b         mov        rsi, rax
0000000000004b7e         mov        edi, 0x1
0000000000004b83         xor        eax, eax
0000000000004b85         call       j___printf_chk                              ; __printf_chk
0000000000004b8a         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000004b91         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004b96         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004b98         call       j_dcgettext                                 ; dcgettext
0000000000004b9d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000004ba4         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x5285
0000000000004bab         mov        rsi, rax
0000000000004bae         mov        edi, 0x1
0000000000004bb3         xor        eax, eax
0000000000004bb5         call       j___printf_chk                              ; __printf_chk
0000000000004bba         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004bc1         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000004bc8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004bca         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004bcf         call       j_dcgettext                                 ; dcgettext
0000000000004bd4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004bd7         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004bda         pop        rbx
0000000000004bdb         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000004be0         push       rbx                                         ; End of unwind block (FDE at 0x69ec), Begin of unwind block (FDE at 0x6a0c), CODE XREF=paste_parallel+26, paste_parallel+85, quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
0000000000004be1         mov        rbx, rdi
0000000000004be4         call       j_malloc                                    ; malloc
0000000000004be9         test       rax, rax
0000000000004bec         jne        loc_4bf3

0000000000004bee         test       rbx, rbx
0000000000004bf1         jne        loc_4bf5

                     loc_4bf3:
0000000000004bf3         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000004bf4         ret
                        ; endp

                     loc_4bf5:
0000000000004bf5         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4bfa:
0000000000004bfa         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x6a0c)
                     xnmalloc:
0000000000004c00         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x6a28)
0000000000004c03         mul        rsi
0000000000004c06         mov        rdi, rax
0000000000004c09         seto       al
0000000000004c0c         test       rdi, rdi
0000000000004c0f         js         loc_4c1b

0000000000004c11         movzx      eax, al
0000000000004c14         test       rax, rax
0000000000004c17         jne        loc_4c1b

0000000000004c19         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_4c1b:
0000000000004c1b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
0000000000004c1f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4c24:
0000000000004c24         nop                                                    ; End of unwind block (FDE at 0x6a28)
0000000000004c26         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000004c30         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x6a3c)
                        ; endp
0000000000004c32         align      64                                          ; End of unwind block (FDE at 0x6a3c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000004c40         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x6a50), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000004c43         push       rbx
0000000000004c44         mov        rbx, rsi
0000000000004c47         jne        loc_4c4e

0000000000004c49         test       rdi, rdi
0000000000004c4c         jne        loc_4c68

                     loc_4c4e:
0000000000004c4e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000004c51         call       j_realloc                                   ; realloc
0000000000004c56         test       rax, rax
0000000000004c59         jne        loc_4c60

0000000000004c5b         test       rbx, rbx
0000000000004c5e         jne        loc_4c71

                     loc_4c60:
0000000000004c60         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000004c61         ret
                        ; endp
0000000000004c62         align      8

                     loc_4c68:
0000000000004c68         call       j_free                                      ; free, CODE XREF=xrealloc+12
0000000000004c6d         xor        eax, eax
0000000000004c6f         pop        rbx
0000000000004c70         ret
                        ; endp

                     loc_4c71:
0000000000004c71         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4c76:
0000000000004c76         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x6a50)
                     xnrealloc:
0000000000004c80         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x6a74)
0000000000004c83         mul        rdx
0000000000004c86         mov        rsi, rax
0000000000004c89         seto       al
0000000000004c8c         test       rsi, rsi
0000000000004c8f         js         loc_4c9b

0000000000004c91         movzx      eax, al
0000000000004c94         test       rax, rax
0000000000004c97         jne        loc_4c9b

0000000000004c99         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_4c9b:
0000000000004c9b         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
0000000000004c9f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4ca4:
0000000000004ca4         nop                                                    ; End of unwind block (FDE at 0x6a74)
0000000000004ca6         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000004cb0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x6a88)
0000000000004cb3         mov        r9, rdx
0000000000004cb6         mov        rcx, qword [rsi]
0000000000004cb9         je         loc_4cf0

0000000000004cbb         xor        edx, edx
0000000000004cbd         movabs     rax, 0x5555555555555554
0000000000004cc7         div        r9
0000000000004cca         cmp        rax, rcx
0000000000004ccd         jbe        loc_4d0b

0000000000004ccf         mov        rax, rcx
0000000000004cd2         shr        rax, 0x1
0000000000004cd5         lea        rcx, qword [rax+rcx+1]

                     loc_4cda:
0000000000004cda         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
0000000000004cdd         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000004ce1         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000004ce4         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000004ce9         align      16

                     loc_4cf0:
0000000000004cf0         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000004cf3         je         loc_4d18

                     loc_4cf5:
0000000000004cf5         mov        rax, rcx                                    ; CODE XREF=sub_4d14+28
0000000000004cf8         mul        r9
0000000000004cfb         seto       dl
0000000000004cfe         test       rax, rax
0000000000004d01         movzx      edx, dl
0000000000004d04         js         loc_4d0b

0000000000004d06         test       rdx, rdx
0000000000004d09         je         loc_4cda

                     loc_4d0b:
0000000000004d0b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
0000000000004d0f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4d14:
0000000000004d14         nop        dword [rax]
                        ; endp

                     loc_4d18:
0000000000004d18         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
0000000000004d1a         mov        eax, 0x80
0000000000004d1f         xor        r8d, r8d
0000000000004d22         div        r9
0000000000004d25         test       rax, rax
0000000000004d28         sete       r8b
0000000000004d2c         lea        rcx, qword [r8+rax]
0000000000004d30         jmp        loc_4cf5
0000000000004d32         align      64                                          ; End of unwind block (FDE at 0x6a88)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000004d40         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x6aa0)
0000000000004d43         mov        rax, qword [rsi]
0000000000004d46         je         loc_4d70

0000000000004d48         movabs     rdx, 0x5555555555555553
0000000000004d52         cmp        rax, rdx
0000000000004d55         ja         loc_4d81

0000000000004d57         mov        rdx, rax
0000000000004d5a         shr        rdx, 0x1
0000000000004d5d         lea        rax, qword [rdx+rax+1]

                     loc_4d62:
0000000000004d62         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000004d65         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000004d68         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000004d6d         align      16

                     loc_4d70:
0000000000004d70         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000004d73         mov        edx, 0x80
0000000000004d78         cmove      rax, rdx
0000000000004d7c         test       rax, rax
0000000000004d7f         jns        loc_4d62

                     loc_4d81:
0000000000004d81         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000004d85         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4d8a:
0000000000004d8a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x6aa0)
                     xzalloc:
0000000000004d90         push       rbx                                         ; Begin of unwind block (FDE at 0x6ab8)
0000000000004d91         mov        rbx, rdi
0000000000004d94         call       xmalloc                                     ; xmalloc
0000000000004d99         mov        rdx, rbx                                    ; argument "__n" for method j_memset
0000000000004d9c         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000004d9e         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000004da1         pop        rbx
0000000000004da2         jmp        j_memset                                    ; memset
                        ; endp
0000000000004da7         align      16                                          ; End of unwind block (FDE at 0x6ab8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000004db0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x6ad4)
0000000000004db3         sub        rsp, 0x8
0000000000004db7         mul        rsi
0000000000004dba         seto       dl
0000000000004dbd         test       rax, rax
0000000000004dc0         js         loc_4dd9

0000000000004dc2         movzx      edx, dl
0000000000004dc5         test       rdx, rdx
0000000000004dc8         jne        loc_4dd9

0000000000004dca         call       j_calloc                                    ; calloc
0000000000004dcf         test       rax, rax
0000000000004dd2         je         loc_4dd9

0000000000004dd4         add        rsp, 0x8
0000000000004dd8         ret
                        ; endp

                     loc_4dd9:
0000000000004dd9         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4dde:
0000000000004dde         nop                                                    ; End of unwind block (FDE at 0x6ad4)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemdup:
0000000000004de0         push       rbp                                         ; Begin of unwind block (FDE at 0x6af0), CODE XREF=clone_quoting_options+40
0000000000004de1         push       rbx
0000000000004de2         mov        rbp, rdi
0000000000004de5         mov        rdi, rsi
0000000000004de8         mov        rbx, rsi
0000000000004deb         sub        rsp, 0x8
0000000000004def         call       xmalloc                                     ; xmalloc
0000000000004df4         add        rsp, 0x8
0000000000004df8         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
0000000000004dfb         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
0000000000004dfe         pop        rbx
0000000000004dff         pop        rbp
0000000000004e00         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000004e03         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000004e08         align      16                                          ; End of unwind block (FDE at 0x6af0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000004e10         push       rbx                                         ; Begin of unwind block (FDE at 0x6b18), CODE XREF=main+330
0000000000004e11         mov        rbx, rdi
0000000000004e14         call       j_strlen                                    ; strlen
0000000000004e19         mov        rdi, rbx
0000000000004e1c         lea        rsi, qword [rax+1]
0000000000004e20         pop        rbx
0000000000004e21         jmp        xmemdup                                     ; xmemdup
                        ; endp
0000000000004e23         align      16                                          ; End of unwind block (FDE at 0x6b18)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000004e30         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x6b34), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=paste_parallel+1360, quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
0000000000004e37         sub        rsp, 0x8
0000000000004e3b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004e40         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004e42         call       j_dcgettext                                 ; dcgettext
0000000000004e47         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
0000000000004e4d         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5695
0000000000004e54         mov        rcx, rax
0000000000004e57         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000004e59         xor        eax, eax
0000000000004e5b         call       j_error                                     ; error
0000000000004e60         call       j_abort                                     ; abort
                        ; endp
0000000000004e65         align      16                                          ; End of unwind block (FDE at 0x6b34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000004e70         push       r12                                         ; Begin of unwind block (FDE at 0x6b4c), CODE XREF=main+665, paste_parallel+603, paste_serial+496, close_stream+21
0000000000004e72         push       rbp
0000000000004e73         push       rbx
0000000000004e74         mov        rbx, rdi
0000000000004e77         call       j_fileno                                    ; fileno
0000000000004e7c         test       eax, eax
0000000000004e7e         mov        rdi, rbx
0000000000004e81         js         loc_4ed7

0000000000004e83         call       j___freading                                ; __freading
0000000000004e88         test       eax, eax
0000000000004e8a         jne        loc_4eb8

                     loc_4e8c:
0000000000004e8c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
0000000000004e8f         call       rpl_fflush                                  ; rpl_fflush
0000000000004e94         test       eax, eax
0000000000004e96         je         loc_4ed4

0000000000004e98         call       j___errno_location                          ; __errno_location
0000000000004e9d         mov        r12d, dword [rax]
0000000000004ea0         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000004ea3         mov        rbp, rax
0000000000004ea6         call       j_fclose                                    ; fclose
0000000000004eab         test       r12d, r12d
0000000000004eae         jne        loc_4ee0

                     loc_4eb0:
0000000000004eb0         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000004eb1         pop        rbp
0000000000004eb2         pop        r12
0000000000004eb4         ret
                        ; endp
0000000000004eb5         align      8

                     loc_4eb8:
0000000000004eb8         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
0000000000004ebb         call       j_fileno                                    ; fileno
0000000000004ec0         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000004ec2         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000004ec7         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000004ec9         call       j_lseek                                     ; lseek
0000000000004ece         cmp        rax, 0xffffffffffffffff
0000000000004ed2         jne        loc_4e8c

                     loc_4ed4:
0000000000004ed4         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_4ed7:
0000000000004ed7         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000004ed8         pop        rbp
0000000000004ed9         pop        r12
0000000000004edb         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_4ee0:
0000000000004ee0         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
0000000000004ee4         mov        eax, 0xffffffff
0000000000004ee9         jmp        loc_4eb0
0000000000004eeb         align      16                                          ; End of unwind block (FDE at 0x6b4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000004ef0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x6b84), CODE XREF=rpl_fclose+31
0000000000004ef3         push       rbx
0000000000004ef4         mov        rbx, rdi
0000000000004ef7         je         loc_4f0a

0000000000004ef9         call       j___freading                                ; __freading
0000000000004efe         test       eax, eax
0000000000004f00         je         loc_4f0a

0000000000004f02         test       dword [rbx], 0x100
0000000000004f08         jne        loc_4f18

                     loc_4f0a:
0000000000004f0a         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
0000000000004f0d         pop        rbx
0000000000004f0e         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000004f13         align      8

                     loc_4f18:
0000000000004f18         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
0000000000004f1b         mov        edx, 0x1
0000000000004f20         xor        esi, esi
0000000000004f22         call       rpl_fseeko                                  ; rpl_fseeko
0000000000004f27         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
0000000000004f2a         pop        rbx
0000000000004f2b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000004f30         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x6b84), Begin of unwind block (FDE at 0x6ba4), CODE XREF=rpl_fflush+50
0000000000004f34         cmp        qword [rdi+0x10], rax
0000000000004f38         je         loc_4f40

                     j_j_fseeko:        // fseeko
0000000000004f3a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
0000000000004f3f         align      64

                     loc_4f40:
0000000000004f40         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000004f44         cmp        qword [rdi+0x28], rax
0000000000004f48         jne        j_j_fseeko                                  ; fseeko

0000000000004f4a         cmp        qword [rdi+0x48], 0x0
0000000000004f4f         jne        j_j_fseeko                                  ; fseeko

0000000000004f51         push       r12
0000000000004f53         push       rbp
0000000000004f54         mov        r12d, edx
0000000000004f57         push       rbx
0000000000004f58         mov        rbp, rsi
0000000000004f5b         mov        rbx, rdi
0000000000004f5e         call       j_fileno                                    ; fileno
0000000000004f63         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000004f66         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000004f69         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000004f6b         call       j_lseek                                     ; lseek
0000000000004f70         cmp        rax, 0xffffffffffffffff
0000000000004f74         je         loc_4f82

0000000000004f76         and        dword [rbx], 0xffffffef
0000000000004f79         mov        qword [rbx+0x90], rax
0000000000004f80         xor        eax, eax

                     loc_4f82:
0000000000004f82         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000004f83         pop        rbp
0000000000004f84         pop        r12
0000000000004f86         ret
                        ; endp
0000000000004f87         align      16                                          ; End of unwind block (FDE at 0x6ba4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000004f90         push       r13                                         ; Begin of unwind block (FDE at 0x6bd4), CODE XREF=sub_3160+534
0000000000004f92         push       r12
0000000000004f94         mov        r13, rsi
0000000000004f97         push       rbp
0000000000004f98         push       rbx
0000000000004f99         mov        rbx, rdi
0000000000004f9c         mov        r12, rdx
0000000000004f9f         sub        rsp, 0x18
0000000000004fa3         mov        rax, qword [fs:0x28]
0000000000004fac         mov        qword [rsp+0x38+var_30], rax
0000000000004fb1         xor        eax, eax
0000000000004fb3         lea        rax, qword [rsp+0x38+var_34]
0000000000004fb8         test       rdi, rdi
0000000000004fbb         cmove      rbx, rax
0000000000004fbf         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000004fc2         call       j_mbrtowc                                   ; mbrtowc
0000000000004fc7         cmp        rax, 0xfffffffffffffffd
0000000000004fcb         mov        rbp, rax
0000000000004fce         jbe        loc_4ff0

0000000000004fd0         test       r12, r12
0000000000004fd3         je         loc_4ff0

0000000000004fd5         xor        edi, edi
0000000000004fd7         call       hard_locale                                 ; hard_locale
0000000000004fdc         test       al, al
0000000000004fde         jne        loc_4ff0

0000000000004fe0         movzx      eax, byte [r13]
0000000000004fe5         mov        ebp, 0x1
0000000000004fea         mov        dword [rbx], eax
0000000000004fec         nop        dword [rax]

                     loc_4ff0:
0000000000004ff0         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000004ff5         xor        rdx, qword [fs:0x28]
0000000000004ffe         mov        rax, rbp
0000000000005001         jne        loc_500e

0000000000005003         add        rsp, 0x18
0000000000005007         pop        rbx
0000000000005008         pop        rbp
0000000000005009         pop        r12
000000000000500b         pop        r13
000000000000500d         ret
                        ; endp

                     loc_500e:
000000000000500e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000005013         align      32                                          ; End of unwind block (FDE at 0x6bd4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000005020         push       r12                                         ; Begin of unwind block (FDE at 0x6c14), CODE XREF=close_stdout+13, close_stdout+51
0000000000005022         push       rbp
0000000000005023         mov        rbp, rdi
0000000000005026         push       rbx
0000000000005027         call       j___fpending                                ; __fpending
000000000000502c         mov        ebx, dword [rbp]
000000000000502f         mov        rdi, rbp
0000000000005032         mov        r12, rax
0000000000005035         call       rpl_fclose                                  ; rpl_fclose
000000000000503a         and        ebx, 0x20
000000000000503d         test       ebx, ebx
000000000000503f         jne        loc_5058

0000000000005041         test       eax, eax
0000000000005043         je         loc_504f

0000000000005045         test       r12, r12
0000000000005048         mov        eax, 0xffffffff
000000000000504d         je         loc_5088

                     loc_504f:
000000000000504f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000005050         pop        rbp
0000000000005051         pop        r12
0000000000005053         ret
                        ; endp
0000000000005054         align      8

                     loc_5058:
0000000000005058         test       eax, eax                                    ; CODE XREF=close_stream+31
000000000000505a         jne        loc_5078

000000000000505c         call       j___errno_location                          ; __errno_location
0000000000005061         mov        dword [rax], 0x0
0000000000005067         mov        eax, 0xffffffff
000000000000506c         pop        rbx
000000000000506d         pop        rbp
000000000000506e         pop        r12
0000000000005070         ret
                        ; endp
0000000000005071         align      8

                     loc_5078:
0000000000005078         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000005079         mov        eax, 0xffffffff
000000000000507e         pop        rbp
000000000000507f         pop        r12
0000000000005081         ret
                        ; endp
0000000000005082         align      8

                     loc_5088:
0000000000005088         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
000000000000508d         cmp        dword [rax], 0x9
0000000000005090         pop        rbx
0000000000005091         pop        rbp
0000000000005092         pop        r12
0000000000005094         setne      al
0000000000005097         movzx      eax, al
000000000000509a         neg        eax
000000000000509c         ret
                        ; endp
000000000000509d         align      32                                          ; End of unwind block (FDE at 0x6c14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
00000000000050a0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x6c64), CODE XREF=rpl_mbrtowc+71
00000000000050a4         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000050a6         call       j_setlocale                                 ; setlocale
00000000000050ab         mov        rdx, rax
00000000000050ae         mov        eax, 0x1
00000000000050b3         test       rdx, rdx
00000000000050b6         je         loc_50d5

00000000000050b8         lea        rdi, qword [aMemoryExhauste+17]             ; 0x5f20
00000000000050bf         mov        ecx, 0x2
00000000000050c4         mov        rsi, rdx
00000000000050c7         rep  cmpsb byte [rsi], byte [rdi]
00000000000050c9         seta       cl
00000000000050cc         sbb        cl, 0x0
00000000000050cf         xor        eax, eax
00000000000050d1         test       cl, cl
00000000000050d3         jne        loc_50e0

                     loc_50d5:
00000000000050d5         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
00000000000050d9         ret
                        ; endp
00000000000050da         align      32

                     loc_50e0:
00000000000050e0         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
00000000000050e7         mov        ecx, 0x6
00000000000050ec         mov        rsi, rdx
00000000000050ef         rep  cmpsb byte [rsi], byte [rdi]
00000000000050f1         seta       al
00000000000050f4         sbb        al, 0x0
00000000000050f6         test       al, al
00000000000050f8         setne      al
00000000000050fb         add        rsp, 0x8
00000000000050ff         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000005100         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0x6c64), Begin of unwind block (FDE at 0x6c84), CODE XREF=gettext_quote.part.1+11
0000000000005104         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000005109         call       j_nl_langinfo                               ; nl_langinfo
000000000000510e         test       rax, rax
0000000000005111         je         loc_5130

0000000000005113         cmp        byte [rax], 0x0
0000000000005116         lea        rdx, qword [aAscii]                         ; "ASCII"
000000000000511d         cmove      rax, rdx
0000000000005121         add        rsp, 0x8
0000000000005125         ret
                        ; endp
0000000000005126         align      16

                     loc_5130:
0000000000005130         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000005137         add        rsp, 0x8
000000000000513b         ret
                        ; endp
000000000000513c         align      64                                          ; End of unwind block (FDE at 0x6c84)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000005140         push       r15                                         ; Begin of unwind block (FDE at 0x6ca4), DATA XREF=_start+22
0000000000005142         push       r14
0000000000005144         mov        r15, rdx
0000000000005147         push       r13
0000000000005149         push       r12
000000000000514b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000005152         push       rbp
0000000000005153         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
000000000000515a         push       rbx
000000000000515b         mov        r13d, edi
000000000000515e         mov        r14, rsi
0000000000005161         sub        rbp, r12
0000000000005164         sub        rsp, 0x8
0000000000005168         sar        rbp, 0x3
000000000000516c         call       _init                                       ; _init
0000000000005171         test       rbp, rbp
0000000000005174         je         loc_5196

0000000000005176         xor        ebx, ebx
0000000000005178         nop        dword [rax+rax]

                     loc_5180:
0000000000005180         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000005183         mov        rsi, r14
0000000000005186         mov        edi, r13d
0000000000005189         call       qword [r12+rbx*8]
000000000000518d         add        rbx, 0x1
0000000000005191         cmp        rbp, rbx
0000000000005194         jne        loc_5180

                     loc_5196:
0000000000005196         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
000000000000519a         pop        rbx
000000000000519b         pop        rbp
000000000000519c         pop        r12
000000000000519e         pop        r13
00000000000051a0         pop        r14
00000000000051a2         pop        r15
00000000000051a4         ret
                        ; endp
00000000000051a5         align      16                                          ; End of unwind block (FDE at 0x6ca4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
00000000000051b0         ret                                                    ; Begin of unwind block (FDE at 0x6cec), DATA XREF=_start+15
                        ; endp
00000000000051b2         align      64                                          ; End of unwind block (FDE at 0x6cec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
00000000000051c0         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x6d04), __dso_handle, CODE XREF=main+92
00000000000051c7         xor        esi, esi
00000000000051c9         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
00000000000051ce         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x6d04)
00000000000051cf         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x51d0; 0x51d9[ (9 bytes)
        ; File offset : [20944; 20953[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
00000000000051d0         sub        rsp, 0x8
00000000000051d4         add        rsp, 0x8
00000000000051d8         ret
                        ; endp
00000000000051d9         db  0x00 ; '.'
00000000000051da         db  0x00 ; '.'
00000000000051db         db  0x00 ; '.'
00000000000051dc         db  0x00 ; '.'
00000000000051dd         db  0x00 ; '.'
00000000000051de         db  0x00 ; '.'
00000000000051df         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x51e0; 0x5f2e[ (3406 bytes)
        ; File offset : [20960; 24366[ (3406 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
00000000000051e0         db  0x01 ; '.'
00000000000051e1         db  0x00 ; '.'
00000000000051e2         db  0x02 ; '.'
00000000000051e3         db  0x00 ; '.'
                     aWriteError:
00000000000051e4         db         "write error", 0                            ; DATA XREF=write_error+1, close_stdout+67
                     aStandardInputI:
00000000000051f0         db         "standard input is closed", 0               ; DATA XREF=paste_parallel+1413
                     aPaste:
0000000000005209         db         "paste", 0                                  ; DATA XREF=main+236, usage+379, usage+700, usage+884, usage+903, usage+937
000000000000520f         db  0x5b ; '['                                         ; DATA XREF=usage+391
0000000000005210         db  0x00 ; '.'
                     aTestInvocation:
0000000000005211         db         "test invocation", 0                        ; DATA XREF=usage+430
                     aMulticallInvoc:
0000000000005221         db         "Multi-call invocation", 0                  ; DATA XREF=usage+478
                     aSha224sum:
0000000000005237         db         "sha224sum", 0                              ; DATA XREF=usage+495
                     aSha2Utilities:
0000000000005241         db         "sha2 utilities", 0                         ; DATA XREF=usage+507
                     aSha256sum:
0000000000005250         db         "sha256sum", 0                              ; DATA XREF=usage+398
                     aSha384sum:
000000000000525a         db         "sha384sum", 0                              ; DATA XREF=usage+442
                     aSha512sum:
0000000000005264         db         "sha512sum", 0                              ; DATA XREF=usage+466
                     aNsOnlineHelpSn:
000000000000526e         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+586
0000000000005285         db  0x47 ; 'G'                                         ; DATA XREF=main+229, usage+614, usage+807, emit_bug_reporting_address+68
0000000000005286         db  0x4e ; 'N'
0000000000005287         db  0x55 ; 'U'
0000000000005288         db  0x20 ; ' '
                     aCoreutils:
0000000000005289         db         "coreutils", 0                              ; DATA XREF=main+61, main+73, usage+454
0000000000005293         db  0x65 ; 'e'                                         ; DATA XREF=usage+653, usage+846
0000000000005294         db  0x6e ; 'n'
0000000000005295         db  0x5f ; '_'
0000000000005296         db  0x00 ; '.'
                     aFullDocumentat:
0000000000005297         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+681, usage+870
00000000000052b2         db  0x5c ; '\'                                         ; DATA XREF=main+4
00000000000052b3         db  0x30 ; '0'
00000000000052b4         db  0x00 ; '.'
00000000000052b5         db  0x09 ; '.'                                         ; DATA XREF=main+18
00000000000052b6         db  0x00 ; '.'                                         ; DATA XREF=main+37, usage+739
                     aUsrlocalsharel:
00000000000052b7         db         "/usr/local/share/locale", 0                ; DATA XREF=main+54
                     aDavidMackenzie:
00000000000052cf         db         "David MacKenzie", 0                        ; DATA XREF=main+215
                     aDavidMIhnat:
00000000000052df         db         "David M. Ihnat", 0                         ; DATA XREF=main+222
00000000000052ee         db  0x64 ; 'd'                                         ; DATA XREF=main+118
00000000000052ef         db  0x3a ; ':'
00000000000052f0         db  0x73 ; 's'
00000000000052f1         db  0x7a ; 'z'
00000000000052f2         db  0x00 ; '.'
                     aSerial:
00000000000052f3         db         "serial", 0
                     aDelimiters:
00000000000052fa         db         "delimiters", 0
                     aZeroterminated:
0000000000005305         db         "zero-terminated", 0
                     aHelp:
0000000000005315         db         "help", 0
                     aVersion:
000000000000531a         db         "version", 0
0000000000005322         align      8
                     aTrySHelpForMor:
0000000000005328         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
000000000000534f         align      16
                     aUsageSOptionFi:
0000000000005350         db         "Usage: %s [OPTION]... [FILE]...\n", 0      ; DATA XREF=usage+93
0000000000005371         align      8
                     aWriteLinesCons:
0000000000005378         db         "Write lines consisting of the sequentially corresponding lines from\neach FILE, separated by TABs, to standard output.\n", 0 ; DATA XREF=usage+132
00000000000053ef         align      16
                     aNwithNoFileOrW:
00000000000053f0         db         "\nWith no FILE, or when FILE is -, read standard input.\n", 0 ; DATA XREF=usage+169
                     aNmandatoryArgu:
0000000000005428         db         "\nMandatory arguments to long options are mandatory for short options too.\n", 0 ; DATA XREF=usage+206
0000000000005473         align      8
                     aDDelimiterslis:
0000000000005478         db         "  -d, --delimiters=LIST   reuse characters from LIST instead of TABs\n  -s, --serial            paste one file at a time instead of in parallel\n", 0 ; DATA XREF=usage+243
                     aZZeroterminate:
0000000000005508         db         "  -z, --zero-terminated    line delimiter is NUL, not newline\n", 0 ; DATA XREF=usage+280
0000000000005547         align      8
                     aHelpDisplayThi:
0000000000005548         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+317
0000000000005575         align      8
                     aVersionOutputV:
0000000000005578         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+354
00000000000055ae         align      16
                     aHttpswwwgnuorg:
00000000000055b0         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+607, usage+707, usage+800, usage+910, emit_bug_reporting_address+61
                     aReportAnyTrans:
00000000000055d8         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+951
000000000000561f         align      32
                     aOrAvailableLoc:
0000000000005620         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+750
0000000000005653         align      8
                     aDelimiterListE:
0000000000005658         db         "delimiter list ends with an unescaped backslash: %s", 0 ; DATA XREF=main+580
                     a831:
000000000000568c         db         "8.31", 0                                   ; DATA XREF=Version
                     aSS:
0000000000005691         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
                     aANullArgv0WasP:
0000000000005698         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
00000000000056d0         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
00000000000056d8         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
00000000000056d9         db  0x74 ; 't'
00000000000056da         db  0x2d ; '-'                                         ; DATA XREF=main+311, main+686, paste_parallel+117, paste_serial+51
00000000000056db         db  0x00 ; '.'
00000000000056dc         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
00000000000056dd         db  0x80 ; '.'
00000000000056de         db  0x98 ; '.'
00000000000056df         db  0x00 ; '.'
00000000000056e0         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
00000000000056e1         db  0x80 ; '.'
00000000000056e2         db  0x99 ; '.'
00000000000056e3         db  0x00 ; '.'
00000000000056e4         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
00000000000056e5         db  0x07 ; '.'
00000000000056e6         db  0x65 ; 'e'
00000000000056e7         db  0x00 ; '.'
00000000000056e8         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
00000000000056e9         db  0xaf ; '.'
00000000000056ea         db  0x00 ; '.'
00000000000056eb         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_3160+1451, sub_3160+1493, sub_3160+2429
00000000000056ec         db  0x00 ; '.'
00000000000056ed         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_3160+132, sub_3160+1338, sub_3160+1670, sub_3160+1697, sub_3160+2352
00000000000056ee         db  0x00 ; '.'
00000000000056ef         db  0x60 ; '`'                                         ; DATA XREF=sub_3160+1627, sub_3160+1654
00000000000056f0         db  0x00 ; '.'
                     aLiteral:
00000000000056f1         db         "literal", 0
                     aShell:
00000000000056f9         db         "shell", 0
                     aShellalways:
00000000000056ff         db         "shell-always", 0
000000000000570c         db  0x73 ; 's'
000000000000570d         db  0x68 ; 'h'
000000000000570e         db  0x65 ; 'e'
000000000000570f         db  0x6c ; 'l'
0000000000005710         db  0x6c ; 'l'
0000000000005711         db  0x2d ; '-'
                     aEscape:
0000000000005712         db         "escape", 0
                     aShellescapealw:
0000000000005719         db         "shell-escape-always", 0
000000000000572d         db  0x63 ; 'c'
000000000000572e         db  0x00 ; '.'
                     aCmaybe:
000000000000572f         db         "c-maybe", 0
                     aClocale:
0000000000005737         db         "clocale", 0
000000000000573f         align      64
                     switch_table_5740:        // switch_table
0000000000005740         dd         quotearg_buffer_restyled.loc_385a-switch_table_5740, quotearg_buffer_restyled.loc_2ab3-switch_table_5740, quotearg_buffer_restyled.loc_3a88-switch_table_5740, quotearg_buffer_restyled.loc_3894-switch_table_5740 ; switch table used at 0x2ab1 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000005750         dd         quotearg_buffer_restyled.loc_3684-switch_table_5740, quotearg_buffer_restyled.loc_36e0-switch_table_5740, quotearg_buffer_restyled.loc_3735-switch_table_5740, quotearg_buffer_restyled.loc_377a-switch_table_5740
0000000000005760         dd         3 dup (quotearg_buffer_restyled.loc_37b4-switch_table_5740)
000000000000576c         db  0xc4 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000576d         db  0xd6 ; '.'
000000000000576e         db  0xff ; '.'
000000000000576f         db  0xff ; '.'
0000000000005770         db  0xac ; '.'
0000000000005771         db  0xd7 ; '.'
0000000000005772         db  0xff ; '.'
0000000000005773         db  0xff ; '.'
0000000000005774         db  0xac ; '.'
0000000000005775         db  0xd7 ; '.'
0000000000005776         db  0xff ; '.'
0000000000005777         db  0xff ; '.'
0000000000005778         db  0xac ; '.'
0000000000005779         db  0xd7 ; '.'
000000000000577a         db  0xff ; '.'
000000000000577b         db  0xff ; '.'
000000000000577c         db  0xac ; '.'
000000000000577d         db  0xd7 ; '.'
000000000000577e         db  0xff ; '.'
000000000000577f         db  0xff ; '.'
0000000000005780         db  0xac ; '.'
0000000000005781         db  0xd7 ; '.'
0000000000005782         db  0xff ; '.'
0000000000005783         db  0xff ; '.'
0000000000005784         db  0xac ; '.'
0000000000005785         db  0xd7 ; '.'
0000000000005786         db  0xff ; '.'
0000000000005787         db  0xff ; '.'
0000000000005788         db  0x04 ; '.'
0000000000005789         db  0xd7 ; '.'
000000000000578a         db  0xff ; '.'
000000000000578b         db  0xff ; '.'
000000000000578c         db  0x0c ; '.'
000000000000578d         db  0xd6 ; '.'
000000000000578e         db  0xff ; '.'
000000000000578f         db  0xff ; '.'
0000000000005790         db  0xcc ; '.'
0000000000005791         db  0xd5 ; '.'
0000000000005792         db  0xff ; '.'
0000000000005793         db  0xff ; '.'
0000000000005794         db  0x94 ; '.'
0000000000005795         db  0xd7 ; '.'
0000000000005796         db  0xff ; '.'
0000000000005797         db  0xff ; '.'
0000000000005798         db  0x84 ; '.'
0000000000005799         db  0xd7 ; '.'
000000000000579a         db  0xff ; '.'
000000000000579b         db  0xff ; '.'
000000000000579c         db  0x74 ; 't'
000000000000579d         db  0xd7 ; '.'
000000000000579e         db  0xff ; '.'
000000000000579f         db  0xff ; '.'
00000000000057a0         db  0x64 ; 'd'
00000000000057a1         db  0xd7 ; '.'
00000000000057a2         db  0xff ; '.'
00000000000057a3         db  0xff ; '.'
00000000000057a4         db  0xac ; '.'
00000000000057a5         db  0xd7 ; '.'
00000000000057a6         db  0xff ; '.'
00000000000057a7         db  0xff ; '.'
00000000000057a8         db  0xac ; '.'
00000000000057a9         db  0xd7 ; '.'
00000000000057aa         db  0xff ; '.'
00000000000057ab         db  0xff ; '.'
00000000000057ac         db  0xac ; '.'
00000000000057ad         db  0xd7 ; '.'
00000000000057ae         db  0xff ; '.'
00000000000057af         db  0xff ; '.'
00000000000057b0         db  0xac ; '.'
00000000000057b1         db  0xd7 ; '.'
00000000000057b2         db  0xff ; '.'
00000000000057b3         db  0xff ; '.'
00000000000057b4         db  0xac ; '.'
00000000000057b5         db  0xd7 ; '.'
00000000000057b6         db  0xff ; '.'
00000000000057b7         db  0xff ; '.'
00000000000057b8         db  0xac ; '.'
00000000000057b9         db  0xd7 ; '.'
00000000000057ba         db  0xff ; '.'
00000000000057bb         db  0xff ; '.'
00000000000057bc         db  0xac ; '.'
00000000000057bd         db  0xd7 ; '.'
00000000000057be         db  0xff ; '.'
00000000000057bf         db  0xff ; '.'
00000000000057c0         db  0xac ; '.'
00000000000057c1         db  0xd7 ; '.'
00000000000057c2         db  0xff ; '.'
00000000000057c3         db  0xff ; '.'
00000000000057c4         db  0xac ; '.'
00000000000057c5         db  0xd7 ; '.'
00000000000057c6         db  0xff ; '.'
00000000000057c7         db  0xff ; '.'
00000000000057c8         db  0xac ; '.'
00000000000057c9         db  0xd7 ; '.'
00000000000057ca         db  0xff ; '.'
00000000000057cb         db  0xff ; '.'
00000000000057cc         db  0xac ; '.'
00000000000057cd         db  0xd7 ; '.'
00000000000057ce         db  0xff ; '.'
00000000000057cf         db  0xff ; '.'
00000000000057d0         db  0xac ; '.'
00000000000057d1         db  0xd7 ; '.'
00000000000057d2         db  0xff ; '.'
00000000000057d3         db  0xff ; '.'
00000000000057d4         db  0xac ; '.'
00000000000057d5         db  0xd7 ; '.'
00000000000057d6         db  0xff ; '.'
00000000000057d7         db  0xff ; '.'
00000000000057d8         db  0xac ; '.'
00000000000057d9         db  0xd7 ; '.'
00000000000057da         db  0xff ; '.'
00000000000057db         db  0xff ; '.'
00000000000057dc         db  0xac ; '.'
00000000000057dd         db  0xd7 ; '.'
00000000000057de         db  0xff ; '.'
00000000000057df         db  0xff ; '.'
00000000000057e0         db  0xac ; '.'
00000000000057e1         db  0xd7 ; '.'
00000000000057e2         db  0xff ; '.'
00000000000057e3         db  0xff ; '.'
00000000000057e4         db  0xac ; '.'
00000000000057e5         db  0xd7 ; '.'
00000000000057e6         db  0xff ; '.'
00000000000057e7         db  0xff ; '.'
00000000000057e8         db  0xac ; '.'
00000000000057e9         db  0xd7 ; '.'
00000000000057ea         db  0xff ; '.'
00000000000057eb         db  0xff ; '.'
00000000000057ec         db  0x54 ; 'T'
00000000000057ed         db  0xd7 ; '.'
00000000000057ee         db  0xff ; '.'
00000000000057ef         db  0xff ; '.'
00000000000057f0         db  0x44 ; 'D'
00000000000057f1         db  0xd7 ; '.'
00000000000057f2         db  0xff ; '.'
00000000000057f3         db  0xff ; '.'
00000000000057f4         db  0x44 ; 'D'
00000000000057f5         db  0xd7 ; '.'
00000000000057f6         db  0xff ; '.'
00000000000057f7         db  0xff ; '.'
00000000000057f8         db  0x14 ; '.'
00000000000057f9         db  0xd7 ; '.'
00000000000057fa         db  0xff ; '.'
00000000000057fb         db  0xff ; '.'
00000000000057fc         db  0x44 ; 'D'
00000000000057fd         db  0xd7 ; '.'
00000000000057fe         db  0xff ; '.'
00000000000057ff         db  0xff ; '.'
0000000000005800         db  0xec ; '.'
0000000000005801         db  0xd6 ; '.'
0000000000005802         db  0xff ; '.'
0000000000005803         db  0xff ; '.'
0000000000005804         db  0x44 ; 'D'
0000000000005805         db  0xd7 ; '.'
0000000000005806         db  0xff ; '.'
0000000000005807         db  0xff ; '.'
0000000000005808         db  0xa7 ; '.'
0000000000005809         db  0xd5 ; '.'
000000000000580a         db  0xff ; '.'
000000000000580b         db  0xff ; '.'
000000000000580c         db  0x44 ; 'D'
000000000000580d         db  0xd7 ; '.'
000000000000580e         db  0xff ; '.'
000000000000580f         db  0xff ; '.'
0000000000005810         db  0x44 ; 'D'
0000000000005811         db  0xd7 ; '.'
0000000000005812         db  0xff ; '.'
0000000000005813         db  0xff ; '.'
0000000000005814         db  0x44 ; 'D'
0000000000005815         db  0xd7 ; '.'
0000000000005816         db  0xff ; '.'
0000000000005817         db  0xff ; '.'
0000000000005818         db  0xec ; '.'
0000000000005819         db  0xd6 ; '.'
000000000000581a         db  0xff ; '.'
000000000000581b         db  0xff ; '.'
000000000000581c         db  0xec ; '.'
000000000000581d         db  0xd6 ; '.'
000000000000581e         db  0xff ; '.'
000000000000581f         db  0xff ; '.'
0000000000005820         db  0xec ; '.'
0000000000005821         db  0xd6 ; '.'
0000000000005822         db  0xff ; '.'
0000000000005823         db  0xff ; '.'
0000000000005824         db  0xec ; '.'
0000000000005825         db  0xd6 ; '.'
0000000000005826         db  0xff ; '.'
0000000000005827         db  0xff ; '.'
0000000000005828         db  0xec ; '.'
0000000000005829         db  0xd6 ; '.'
000000000000582a         db  0xff ; '.'
000000000000582b         db  0xff ; '.'
000000000000582c         db  0xec ; '.'
000000000000582d         db  0xd6 ; '.'
000000000000582e         db  0xff ; '.'
000000000000582f         db  0xff ; '.'
0000000000005830         db  0xec ; '.'
0000000000005831         db  0xd6 ; '.'
0000000000005832         db  0xff ; '.'
0000000000005833         db  0xff ; '.'
0000000000005834         db  0xec ; '.'
0000000000005835         db  0xd6 ; '.'
0000000000005836         db  0xff ; '.'
0000000000005837         db  0xff ; '.'
0000000000005838         db  0xec ; '.'
0000000000005839         db  0xd6 ; '.'
000000000000583a         db  0xff ; '.'
000000000000583b         db  0xff ; '.'
000000000000583c         db  0xec ; '.'
000000000000583d         db  0xd6 ; '.'
000000000000583e         db  0xff ; '.'
000000000000583f         db  0xff ; '.'
0000000000005840         db  0xec ; '.'
0000000000005841         db  0xd6 ; '.'
0000000000005842         db  0xff ; '.'
0000000000005843         db  0xff ; '.'
0000000000005844         db  0xec ; '.'
0000000000005845         db  0xd6 ; '.'
0000000000005846         db  0xff ; '.'
0000000000005847         db  0xff ; '.'
0000000000005848         db  0xec ; '.'
0000000000005849         db  0xd6 ; '.'
000000000000584a         db  0xff ; '.'
000000000000584b         db  0xff ; '.'
000000000000584c         db  0xec ; '.'
000000000000584d         db  0xd6 ; '.'
000000000000584e         db  0xff ; '.'
000000000000584f         db  0xff ; '.'
0000000000005850         db  0xec ; '.'
0000000000005851         db  0xd6 ; '.'
0000000000005852         db  0xff ; '.'
0000000000005853         db  0xff ; '.'
0000000000005854         db  0xec ; '.'
0000000000005855         db  0xd6 ; '.'
0000000000005856         db  0xff ; '.'
0000000000005857         db  0xff ; '.'
0000000000005858         db  0x44 ; 'D'
0000000000005859         db  0xd7 ; '.'
000000000000585a         db  0xff ; '.'
000000000000585b         db  0xff ; '.'
000000000000585c         db  0x44 ; 'D'
000000000000585d         db  0xd7 ; '.'
000000000000585e         db  0xff ; '.'
000000000000585f         db  0xff ; '.'
0000000000005860         db  0x44 ; 'D'
0000000000005861         db  0xd7 ; '.'
0000000000005862         db  0xff ; '.'
0000000000005863         db  0xff ; '.'
0000000000005864         db  0x44 ; 'D'
0000000000005865         db  0xd7 ; '.'
0000000000005866         db  0xff ; '.'
0000000000005867         db  0xff ; '.'
0000000000005868         db  0x77 ; 'w'
0000000000005869         db  0xd5 ; '.'
000000000000586a         db  0xff ; '.'
000000000000586b         db  0xff ; '.'
000000000000586c         db  0xac ; '.'
000000000000586d         db  0xd7 ; '.'
000000000000586e         db  0xff ; '.'
000000000000586f         db  0xff ; '.'
0000000000005870         db  0xec ; '.'
0000000000005871         db  0xd6 ; '.'
0000000000005872         db  0xff ; '.'
0000000000005873         db  0xff ; '.'
0000000000005874         db  0xec ; '.'
0000000000005875         db  0xd6 ; '.'
0000000000005876         db  0xff ; '.'
0000000000005877         db  0xff ; '.'
0000000000005878         db  0xec ; '.'
0000000000005879         db  0xd6 ; '.'
000000000000587a         db  0xff ; '.'
000000000000587b         db  0xff ; '.'
000000000000587c         db  0xec ; '.'
000000000000587d         db  0xd6 ; '.'
000000000000587e         db  0xff ; '.'
000000000000587f         db  0xff ; '.'
0000000000005880         db  0xec ; '.'
0000000000005881         db  0xd6 ; '.'
0000000000005882         db  0xff ; '.'
0000000000005883         db  0xff ; '.'
0000000000005884         db  0xec ; '.'
0000000000005885         db  0xd6 ; '.'
0000000000005886         db  0xff ; '.'
0000000000005887         db  0xff ; '.'
0000000000005888         db  0xec ; '.'
0000000000005889         db  0xd6 ; '.'
000000000000588a         db  0xff ; '.'
000000000000588b         db  0xff ; '.'
000000000000588c         db  0xec ; '.'
000000000000588d         db  0xd6 ; '.'
000000000000588e         db  0xff ; '.'
000000000000588f         db  0xff ; '.'
0000000000005890         db  0xec ; '.'
0000000000005891         db  0xd6 ; '.'
0000000000005892         db  0xff ; '.'
0000000000005893         db  0xff ; '.'
0000000000005894         db  0xec ; '.'
0000000000005895         db  0xd6 ; '.'
0000000000005896         db  0xff ; '.'
0000000000005897         db  0xff ; '.'
0000000000005898         db  0xec ; '.'
0000000000005899         db  0xd6 ; '.'
000000000000589a         db  0xff ; '.'
000000000000589b         db  0xff ; '.'
000000000000589c         db  0xec ; '.'
000000000000589d         db  0xd6 ; '.'
000000000000589e         db  0xff ; '.'
000000000000589f         db  0xff ; '.'
00000000000058a0         db  0xec ; '.'
00000000000058a1         db  0xd6 ; '.'
00000000000058a2         db  0xff ; '.'
00000000000058a3         db  0xff ; '.'
00000000000058a4         db  0xec ; '.'
00000000000058a5         db  0xd6 ; '.'
00000000000058a6         db  0xff ; '.'
00000000000058a7         db  0xff ; '.'
00000000000058a8         db  0xec ; '.'
00000000000058a9         db  0xd6 ; '.'
00000000000058aa         db  0xff ; '.'
00000000000058ab         db  0xff ; '.'
00000000000058ac         db  0xec ; '.'
00000000000058ad         db  0xd6 ; '.'
00000000000058ae         db  0xff ; '.'
00000000000058af         db  0xff ; '.'
00000000000058b0         db  0xec ; '.'
00000000000058b1         db  0xd6 ; '.'
00000000000058b2         db  0xff ; '.'
00000000000058b3         db  0xff ; '.'
00000000000058b4         db  0xec ; '.'
00000000000058b5         db  0xd6 ; '.'
00000000000058b6         db  0xff ; '.'
00000000000058b7         db  0xff ; '.'
00000000000058b8         db  0xec ; '.'
00000000000058b9         db  0xd6 ; '.'
00000000000058ba         db  0xff ; '.'
00000000000058bb         db  0xff ; '.'
00000000000058bc         db  0xec ; '.'
00000000000058bd         db  0xd6 ; '.'
00000000000058be         db  0xff ; '.'
00000000000058bf         db  0xff ; '.'
00000000000058c0         db  0xec ; '.'
00000000000058c1         db  0xd6 ; '.'
00000000000058c2         db  0xff ; '.'
00000000000058c3         db  0xff ; '.'
00000000000058c4         db  0xec ; '.'
00000000000058c5         db  0xd6 ; '.'
00000000000058c6         db  0xff ; '.'
00000000000058c7         db  0xff ; '.'
00000000000058c8         db  0xec ; '.'
00000000000058c9         db  0xd6 ; '.'
00000000000058ca         db  0xff ; '.'
00000000000058cb         db  0xff ; '.'
00000000000058cc         db  0xec ; '.'
00000000000058cd         db  0xd6 ; '.'
00000000000058ce         db  0xff ; '.'
00000000000058cf         db  0xff ; '.'
00000000000058d0         db  0xec ; '.'
00000000000058d1         db  0xd6 ; '.'
00000000000058d2         db  0xff ; '.'
00000000000058d3         db  0xff ; '.'
00000000000058d4         db  0xec ; '.'
00000000000058d5         db  0xd6 ; '.'
00000000000058d6         db  0xff ; '.'
00000000000058d7         db  0xff ; '.'
00000000000058d8         db  0x44 ; 'D'
00000000000058d9         db  0xd7 ; '.'
00000000000058da         db  0xff ; '.'
00000000000058db         db  0xff ; '.'
00000000000058dc         db  0x1c ; '.'
00000000000058dd         db  0xd6 ; '.'
00000000000058de         db  0xff ; '.'
00000000000058df         db  0xff ; '.'
00000000000058e0         db  0xec ; '.'
00000000000058e1         db  0xd6 ; '.'
00000000000058e2         db  0xff ; '.'
00000000000058e3         db  0xff ; '.'
00000000000058e4         db  0x44 ; 'D'
00000000000058e5         db  0xd7 ; '.'
00000000000058e6         db  0xff ; '.'
00000000000058e7         db  0xff ; '.'
00000000000058e8         db  0xec ; '.'
00000000000058e9         db  0xd6 ; '.'
00000000000058ea         db  0xff ; '.'
00000000000058eb         db  0xff ; '.'
00000000000058ec         db  0x44 ; 'D'
00000000000058ed         db  0xd7 ; '.'
00000000000058ee         db  0xff ; '.'
00000000000058ef         db  0xff ; '.'
00000000000058f0         db  0xec ; '.'
00000000000058f1         db  0xd6 ; '.'
00000000000058f2         db  0xff ; '.'
00000000000058f3         db  0xff ; '.'
00000000000058f4         db  0xec ; '.'
00000000000058f5         db  0xd6 ; '.'
00000000000058f6         db  0xff ; '.'
00000000000058f7         db  0xff ; '.'
00000000000058f8         db  0xec ; '.'
00000000000058f9         db  0xd6 ; '.'
00000000000058fa         db  0xff ; '.'
00000000000058fb         db  0xff ; '.'
00000000000058fc         db  0xec ; '.'
00000000000058fd         db  0xd6 ; '.'
00000000000058fe         db  0xff ; '.'
00000000000058ff         db  0xff ; '.'
0000000000005900         db  0xec ; '.'
0000000000005901         db  0xd6 ; '.'
0000000000005902         db  0xff ; '.'
0000000000005903         db  0xff ; '.'
0000000000005904         db  0xec ; '.'
0000000000005905         db  0xd6 ; '.'
0000000000005906         db  0xff ; '.'
0000000000005907         db  0xff ; '.'
0000000000005908         db  0xec ; '.'
0000000000005909         db  0xd6 ; '.'
000000000000590a         db  0xff ; '.'
000000000000590b         db  0xff ; '.'
000000000000590c         db  0xec ; '.'
000000000000590d         db  0xd6 ; '.'
000000000000590e         db  0xff ; '.'
000000000000590f         db  0xff ; '.'
0000000000005910         db  0xec ; '.'
0000000000005911         db  0xd6 ; '.'
0000000000005912         db  0xff ; '.'
0000000000005913         db  0xff ; '.'
0000000000005914         db  0xec ; '.'
0000000000005915         db  0xd6 ; '.'
0000000000005916         db  0xff ; '.'
0000000000005917         db  0xff ; '.'
0000000000005918         db  0xec ; '.'
0000000000005919         db  0xd6 ; '.'
000000000000591a         db  0xff ; '.'
000000000000591b         db  0xff ; '.'
000000000000591c         db  0xec ; '.'
000000000000591d         db  0xd6 ; '.'
000000000000591e         db  0xff ; '.'
000000000000591f         db  0xff ; '.'
0000000000005920         db  0xec ; '.'
0000000000005921         db  0xd6 ; '.'
0000000000005922         db  0xff ; '.'
0000000000005923         db  0xff ; '.'
0000000000005924         db  0xec ; '.'
0000000000005925         db  0xd6 ; '.'
0000000000005926         db  0xff ; '.'
0000000000005927         db  0xff ; '.'
0000000000005928         db  0xec ; '.'
0000000000005929         db  0xd6 ; '.'
000000000000592a         db  0xff ; '.'
000000000000592b         db  0xff ; '.'
000000000000592c         db  0xec ; '.'
000000000000592d         db  0xd6 ; '.'
000000000000592e         db  0xff ; '.'
000000000000592f         db  0xff ; '.'
0000000000005930         db  0xec ; '.'
0000000000005931         db  0xd6 ; '.'
0000000000005932         db  0xff ; '.'
0000000000005933         db  0xff ; '.'
0000000000005934         db  0xec ; '.'
0000000000005935         db  0xd6 ; '.'
0000000000005936         db  0xff ; '.'
0000000000005937         db  0xff ; '.'
0000000000005938         db  0xec ; '.'
0000000000005939         db  0xd6 ; '.'
000000000000593a         db  0xff ; '.'
000000000000593b         db  0xff ; '.'
000000000000593c         db  0xec ; '.'
000000000000593d         db  0xd6 ; '.'
000000000000593e         db  0xff ; '.'
000000000000593f         db  0xff ; '.'
0000000000005940         db  0xec ; '.'
0000000000005941         db  0xd6 ; '.'
0000000000005942         db  0xff ; '.'
0000000000005943         db  0xff ; '.'
0000000000005944         db  0xec ; '.'
0000000000005945         db  0xd6 ; '.'
0000000000005946         db  0xff ; '.'
0000000000005947         db  0xff ; '.'
0000000000005948         db  0xec ; '.'
0000000000005949         db  0xd6 ; '.'
000000000000594a         db  0xff ; '.'
000000000000594b         db  0xff ; '.'
000000000000594c         db  0xec ; '.'
000000000000594d         db  0xd6 ; '.'
000000000000594e         db  0xff ; '.'
000000000000594f         db  0xff ; '.'
0000000000005950         db  0xec ; '.'
0000000000005951         db  0xd6 ; '.'
0000000000005952         db  0xff ; '.'
0000000000005953         db  0xff ; '.'
0000000000005954         db  0xec ; '.'
0000000000005955         db  0xd6 ; '.'
0000000000005956         db  0xff ; '.'
0000000000005957         db  0xff ; '.'
0000000000005958         db  0xa7 ; '.'
0000000000005959         db  0xd4 ; '.'
000000000000595a         db  0xff ; '.'
000000000000595b         db  0xff ; '.'
000000000000595c         db  0x44 ; 'D'
000000000000595d         db  0xd7 ; '.'
000000000000595e         db  0xff ; '.'
000000000000595f         db  0xff ; '.'
0000000000005960         db  0xa7 ; '.'
0000000000005961         db  0xd4 ; '.'
0000000000005962         db  0xff ; '.'
0000000000005963         db  0xff ; '.'
0000000000005964         db  0x14 ; '.'
0000000000005965         db  0xd7 ; '.'
0000000000005966         db  0xff ; '.'
0000000000005967         db  0xff ; '.'
0000000000005968         db  0x98 ; '.'                                         ; DATA XREF=sub_2f00+137
0000000000005969         db  0xd6 ; '.'
000000000000596a         db  0xff ; '.'
000000000000596b         db  0xff ; '.'
000000000000596c         db  0xa8 ; '.'
000000000000596d         db  0xd5 ; '.'
000000000000596e         db  0xff ; '.'
000000000000596f         db  0xff ; '.'
0000000000005970         db  0xa8 ; '.'
0000000000005971         db  0xd5 ; '.'
0000000000005972         db  0xff ; '.'
0000000000005973         db  0xff ; '.'
0000000000005974         db  0xa8 ; '.'
0000000000005975         db  0xd5 ; '.'
0000000000005976         db  0xff ; '.'
0000000000005977         db  0xff ; '.'
0000000000005978         db  0xa8 ; '.'
0000000000005979         db  0xd5 ; '.'
000000000000597a         db  0xff ; '.'
000000000000597b         db  0xff ; '.'
000000000000597c         db  0xa8 ; '.'
000000000000597d         db  0xd5 ; '.'
000000000000597e         db  0xff ; '.'
000000000000597f         db  0xff ; '.'
0000000000005980         db  0xa8 ; '.'
0000000000005981         db  0xd5 ; '.'
0000000000005982         db  0xff ; '.'
0000000000005983         db  0xff ; '.'
0000000000005984         db  0x88 ; '.'
0000000000005985         db  0xd6 ; '.'
0000000000005986         db  0xff ; '.'
0000000000005987         db  0xff ; '.'
0000000000005988         db  0xd8 ; '.'
0000000000005989         db  0xd7 ; '.'
000000000000598a         db  0xff ; '.'
000000000000598b         db  0xff ; '.'
000000000000598c         db  0xc0 ; '.'
000000000000598d         db  0xd7 ; '.'
000000000000598e         db  0xff ; '.'
000000000000598f         db  0xff ; '.'
0000000000005990         db  0x70 ; 'p'
0000000000005991         db  0xd6 ; '.'
0000000000005992         db  0xff ; '.'
0000000000005993         db  0xff ; '.'
0000000000005994         db  0xb0 ; '.'
0000000000005995         db  0xd7 ; '.'
0000000000005996         db  0xff ; '.'
0000000000005997         db  0xff ; '.'
0000000000005998         db  0x58 ; 'X'
0000000000005999         db  0xd6 ; '.'
000000000000599a         db  0xff ; '.'
000000000000599b         db  0xff ; '.'
000000000000599c         db  0x98 ; '.'
000000000000599d         db  0xd7 ; '.'
000000000000599e         db  0xff ; '.'
000000000000599f         db  0xff ; '.'
00000000000059a0         db  0xa8 ; '.'
00000000000059a1         db  0xd5 ; '.'
00000000000059a2         db  0xff ; '.'
00000000000059a3         db  0xff ; '.'
00000000000059a4         db  0xa8 ; '.'
00000000000059a5         db  0xd5 ; '.'
00000000000059a6         db  0xff ; '.'
00000000000059a7         db  0xff ; '.'
00000000000059a8         db  0xa8 ; '.'
00000000000059a9         db  0xd5 ; '.'
00000000000059aa         db  0xff ; '.'
00000000000059ab         db  0xff ; '.'
00000000000059ac         db  0xa8 ; '.'
00000000000059ad         db  0xd5 ; '.'
00000000000059ae         db  0xff ; '.'
00000000000059af         db  0xff ; '.'
00000000000059b0         db  0xa8 ; '.'
00000000000059b1         db  0xd5 ; '.'
00000000000059b2         db  0xff ; '.'
00000000000059b3         db  0xff ; '.'
00000000000059b4         db  0xa8 ; '.'
00000000000059b5         db  0xd5 ; '.'
00000000000059b6         db  0xff ; '.'
00000000000059b7         db  0xff ; '.'
00000000000059b8         db  0xa8 ; '.'
00000000000059b9         db  0xd5 ; '.'
00000000000059ba         db  0xff ; '.'
00000000000059bb         db  0xff ; '.'
00000000000059bc         db  0xa8 ; '.'
00000000000059bd         db  0xd5 ; '.'
00000000000059be         db  0xff ; '.'
00000000000059bf         db  0xff ; '.'
00000000000059c0         db  0xa8 ; '.'
00000000000059c1         db  0xd5 ; '.'
00000000000059c2         db  0xff ; '.'
00000000000059c3         db  0xff ; '.'
00000000000059c4         db  0xa8 ; '.'
00000000000059c5         db  0xd5 ; '.'
00000000000059c6         db  0xff ; '.'
00000000000059c7         db  0xff ; '.'
00000000000059c8         db  0xa8 ; '.'
00000000000059c9         db  0xd5 ; '.'
00000000000059ca         db  0xff ; '.'
00000000000059cb         db  0xff ; '.'
00000000000059cc         db  0xa8 ; '.'
00000000000059cd         db  0xd5 ; '.'
00000000000059ce         db  0xff ; '.'
00000000000059cf         db  0xff ; '.'
00000000000059d0         db  0xa8 ; '.'
00000000000059d1         db  0xd5 ; '.'
00000000000059d2         db  0xff ; '.'
00000000000059d3         db  0xff ; '.'
00000000000059d4         db  0xa8 ; '.'
00000000000059d5         db  0xd5 ; '.'
00000000000059d6         db  0xff ; '.'
00000000000059d7         db  0xff ; '.'
00000000000059d8         db  0xa8 ; '.'
00000000000059d9         db  0xd5 ; '.'
00000000000059da         db  0xff ; '.'
00000000000059db         db  0xff ; '.'
00000000000059dc         db  0xa8 ; '.'
00000000000059dd         db  0xd5 ; '.'
00000000000059de         db  0xff ; '.'
00000000000059df         db  0xff ; '.'
00000000000059e0         db  0xa8 ; '.'
00000000000059e1         db  0xd5 ; '.'
00000000000059e2         db  0xff ; '.'
00000000000059e3         db  0xff ; '.'
00000000000059e4         db  0xa8 ; '.'
00000000000059e5         db  0xd5 ; '.'
00000000000059e6         db  0xff ; '.'
00000000000059e7         db  0xff ; '.'
00000000000059e8         db  0x80 ; '.'
00000000000059e9         db  0xd7 ; '.'
00000000000059ea         db  0xff ; '.'
00000000000059eb         db  0xff ; '.'
00000000000059ec         db  0x68 ; 'h'
00000000000059ed         db  0xd7 ; '.'
00000000000059ee         db  0xff ; '.'
00000000000059ef         db  0xff ; '.'
00000000000059f0         db  0x68 ; 'h'
00000000000059f1         db  0xd7 ; '.'
00000000000059f2         db  0xff ; '.'
00000000000059f3         db  0xff ; '.'
00000000000059f4         db  0x50 ; 'P'
00000000000059f5         db  0xd7 ; '.'
00000000000059f6         db  0xff ; '.'
00000000000059f7         db  0xff ; '.'
00000000000059f8         db  0x68 ; 'h'
00000000000059f9         db  0xd7 ; '.'
00000000000059fa         db  0xff ; '.'
00000000000059fb         db  0xff ; '.'
00000000000059fc         db  0x38 ; '8'
00000000000059fd         db  0xd7 ; '.'
00000000000059fe         db  0xff ; '.'
00000000000059ff         db  0xff ; '.'
0000000000005a00         db  0x68 ; 'h'
0000000000005a01         db  0xd7 ; '.'
0000000000005a02         db  0xff ; '.'
0000000000005a03         db  0xff ; '.'
0000000000005a04         db  0xa8 ; '.'
0000000000005a05         db  0xd3 ; '.'
0000000000005a06         db  0xff ; '.'
0000000000005a07         db  0xff ; '.'
0000000000005a08         db  0x68 ; 'h'
0000000000005a09         db  0xd7 ; '.'
0000000000005a0a         db  0xff ; '.'
0000000000005a0b         db  0xff ; '.'
0000000000005a0c         db  0x68 ; 'h'
0000000000005a0d         db  0xd7 ; '.'
0000000000005a0e         db  0xff ; '.'
0000000000005a0f         db  0xff ; '.'
0000000000005a10         db  0x68 ; 'h'
0000000000005a11         db  0xd7 ; '.'
0000000000005a12         db  0xff ; '.'
0000000000005a13         db  0xff ; '.'
0000000000005a14         db  0x38 ; '8'
0000000000005a15         db  0xd7 ; '.'
0000000000005a16         db  0xff ; '.'
0000000000005a17         db  0xff ; '.'
0000000000005a18         db  0x38 ; '8'
0000000000005a19         db  0xd7 ; '.'
0000000000005a1a         db  0xff ; '.'
0000000000005a1b         db  0xff ; '.'
0000000000005a1c         db  0x38 ; '8'
0000000000005a1d         db  0xd7 ; '.'
0000000000005a1e         db  0xff ; '.'
0000000000005a1f         db  0xff ; '.'
0000000000005a20         db  0x38 ; '8'
0000000000005a21         db  0xd7 ; '.'
0000000000005a22         db  0xff ; '.'
0000000000005a23         db  0xff ; '.'
0000000000005a24         db  0x38 ; '8'
0000000000005a25         db  0xd7 ; '.'
0000000000005a26         db  0xff ; '.'
0000000000005a27         db  0xff ; '.'
0000000000005a28         db  0x38 ; '8'
0000000000005a29         db  0xd7 ; '.'
0000000000005a2a         db  0xff ; '.'
0000000000005a2b         db  0xff ; '.'
0000000000005a2c         db  0x38 ; '8'
0000000000005a2d         db  0xd7 ; '.'
0000000000005a2e         db  0xff ; '.'
0000000000005a2f         db  0xff ; '.'
0000000000005a30         db  0x38 ; '8'
0000000000005a31         db  0xd7 ; '.'
0000000000005a32         db  0xff ; '.'
0000000000005a33         db  0xff ; '.'
0000000000005a34         db  0x38 ; '8'
0000000000005a35         db  0xd7 ; '.'
0000000000005a36         db  0xff ; '.'
0000000000005a37         db  0xff ; '.'
0000000000005a38         db  0x38 ; '8'
0000000000005a39         db  0xd7 ; '.'
0000000000005a3a         db  0xff ; '.'
0000000000005a3b         db  0xff ; '.'
0000000000005a3c         db  0x38 ; '8'
0000000000005a3d         db  0xd7 ; '.'
0000000000005a3e         db  0xff ; '.'
0000000000005a3f         db  0xff ; '.'
0000000000005a40         db  0x38 ; '8'
0000000000005a41         db  0xd7 ; '.'
0000000000005a42         db  0xff ; '.'
0000000000005a43         db  0xff ; '.'
0000000000005a44         db  0x38 ; '8'
0000000000005a45         db  0xd7 ; '.'
0000000000005a46         db  0xff ; '.'
0000000000005a47         db  0xff ; '.'
0000000000005a48         db  0x38 ; '8'
0000000000005a49         db  0xd7 ; '.'
0000000000005a4a         db  0xff ; '.'
0000000000005a4b         db  0xff ; '.'
0000000000005a4c         db  0x38 ; '8'
0000000000005a4d         db  0xd7 ; '.'
0000000000005a4e         db  0xff ; '.'
0000000000005a4f         db  0xff ; '.'
0000000000005a50         db  0x38 ; '8'
0000000000005a51         db  0xd7 ; '.'
0000000000005a52         db  0xff ; '.'
0000000000005a53         db  0xff ; '.'
0000000000005a54         db  0x68 ; 'h'
0000000000005a55         db  0xd7 ; '.'
0000000000005a56         db  0xff ; '.'
0000000000005a57         db  0xff ; '.'
0000000000005a58         db  0x68 ; 'h'
0000000000005a59         db  0xd7 ; '.'
0000000000005a5a         db  0xff ; '.'
0000000000005a5b         db  0xff ; '.'
0000000000005a5c         db  0x68 ; 'h'
0000000000005a5d         db  0xd7 ; '.'
0000000000005a5e         db  0xff ; '.'
0000000000005a5f         db  0xff ; '.'
0000000000005a60         db  0x68 ; 'h'
0000000000005a61         db  0xd7 ; '.'
0000000000005a62         db  0xff ; '.'
0000000000005a63         db  0xff ; '.'
0000000000005a64         db  0x78 ; 'x'
0000000000005a65         db  0xd3 ; '.'
0000000000005a66         db  0xff ; '.'
0000000000005a67         db  0xff ; '.'
0000000000005a68         db  0xa8 ; '.'
0000000000005a69         db  0xd5 ; '.'
0000000000005a6a         db  0xff ; '.'
0000000000005a6b         db  0xff ; '.'
0000000000005a6c         db  0x38 ; '8'
0000000000005a6d         db  0xd7 ; '.'
0000000000005a6e         db  0xff ; '.'
0000000000005a6f         db  0xff ; '.'
0000000000005a70         db  0x38 ; '8'
0000000000005a71         db  0xd7 ; '.'
0000000000005a72         db  0xff ; '.'
0000000000005a73         db  0xff ; '.'
0000000000005a74         db  0x38 ; '8'
0000000000005a75         db  0xd7 ; '.'
0000000000005a76         db  0xff ; '.'
0000000000005a77         db  0xff ; '.'
0000000000005a78         db  0x38 ; '8'
0000000000005a79         db  0xd7 ; '.'
0000000000005a7a         db  0xff ; '.'
0000000000005a7b         db  0xff ; '.'
0000000000005a7c         db  0x38 ; '8'
0000000000005a7d         db  0xd7 ; '.'
0000000000005a7e         db  0xff ; '.'
0000000000005a7f         db  0xff ; '.'
0000000000005a80         db  0x38 ; '8'
0000000000005a81         db  0xd7 ; '.'
0000000000005a82         db  0xff ; '.'
0000000000005a83         db  0xff ; '.'
0000000000005a84         db  0x38 ; '8'
0000000000005a85         db  0xd7 ; '.'
0000000000005a86         db  0xff ; '.'
0000000000005a87         db  0xff ; '.'
0000000000005a88         db  0x38 ; '8'
0000000000005a89         db  0xd7 ; '.'
0000000000005a8a         db  0xff ; '.'
0000000000005a8b         db  0xff ; '.'
0000000000005a8c         db  0x38 ; '8'
0000000000005a8d         db  0xd7 ; '.'
0000000000005a8e         db  0xff ; '.'
0000000000005a8f         db  0xff ; '.'
0000000000005a90         db  0x38 ; '8'
0000000000005a91         db  0xd7 ; '.'
0000000000005a92         db  0xff ; '.'
0000000000005a93         db  0xff ; '.'
0000000000005a94         db  0x38 ; '8'
0000000000005a95         db  0xd7 ; '.'
0000000000005a96         db  0xff ; '.'
0000000000005a97         db  0xff ; '.'
0000000000005a98         db  0x38 ; '8'
0000000000005a99         db  0xd7 ; '.'
0000000000005a9a         db  0xff ; '.'
0000000000005a9b         db  0xff ; '.'
0000000000005a9c         db  0x38 ; '8'
0000000000005a9d         db  0xd7 ; '.'
0000000000005a9e         db  0xff ; '.'
0000000000005a9f         db  0xff ; '.'
0000000000005aa0         db  0x38 ; '8'
0000000000005aa1         db  0xd7 ; '.'
0000000000005aa2         db  0xff ; '.'
0000000000005aa3         db  0xff ; '.'
0000000000005aa4         db  0x38 ; '8'
0000000000005aa5         db  0xd7 ; '.'
0000000000005aa6         db  0xff ; '.'
0000000000005aa7         db  0xff ; '.'
0000000000005aa8         db  0x38 ; '8'
0000000000005aa9         db  0xd7 ; '.'
0000000000005aaa         db  0xff ; '.'
0000000000005aab         db  0xff ; '.'
0000000000005aac         db  0x38 ; '8'
0000000000005aad         db  0xd7 ; '.'
0000000000005aae         db  0xff ; '.'
0000000000005aaf         db  0xff ; '.'
0000000000005ab0         db  0x38 ; '8'
0000000000005ab1         db  0xd7 ; '.'
0000000000005ab2         db  0xff ; '.'
0000000000005ab3         db  0xff ; '.'
0000000000005ab4         db  0x38 ; '8'
0000000000005ab5         db  0xd7 ; '.'
0000000000005ab6         db  0xff ; '.'
0000000000005ab7         db  0xff ; '.'
0000000000005ab8         db  0x38 ; '8'
0000000000005ab9         db  0xd7 ; '.'
0000000000005aba         db  0xff ; '.'
0000000000005abb         db  0xff ; '.'
0000000000005abc         db  0x38 ; '8'
0000000000005abd         db  0xd7 ; '.'
0000000000005abe         db  0xff ; '.'
0000000000005abf         db  0xff ; '.'
0000000000005ac0         db  0x38 ; '8'
0000000000005ac1         db  0xd7 ; '.'
0000000000005ac2         db  0xff ; '.'
0000000000005ac3         db  0xff ; '.'
0000000000005ac4         db  0x38 ; '8'
0000000000005ac5         db  0xd7 ; '.'
0000000000005ac6         db  0xff ; '.'
0000000000005ac7         db  0xff ; '.'
0000000000005ac8         db  0x38 ; '8'
0000000000005ac9         db  0xd7 ; '.'
0000000000005aca         db  0xff ; '.'
0000000000005acb         db  0xff ; '.'
0000000000005acc         db  0x38 ; '8'
0000000000005acd         db  0xd7 ; '.'
0000000000005ace         db  0xff ; '.'
0000000000005acf         db  0xff ; '.'
0000000000005ad0         db  0x38 ; '8'
0000000000005ad1         db  0xd7 ; '.'
0000000000005ad2         db  0xff ; '.'
0000000000005ad3         db  0xff ; '.'
0000000000005ad4         db  0x68 ; 'h'
0000000000005ad5         db  0xd7 ; '.'
0000000000005ad6         db  0xff ; '.'
0000000000005ad7         db  0xff ; '.'
0000000000005ad8         db  0x38 ; '8'
0000000000005ad9         db  0xd6 ; '.'
0000000000005ada         db  0xff ; '.'
0000000000005adb         db  0xff ; '.'
0000000000005adc         db  0x38 ; '8'
0000000000005add         db  0xd7 ; '.'
0000000000005ade         db  0xff ; '.'
0000000000005adf         db  0xff ; '.'
0000000000005ae0         db  0x68 ; 'h'
0000000000005ae1         db  0xd7 ; '.'
0000000000005ae2         db  0xff ; '.'
0000000000005ae3         db  0xff ; '.'
0000000000005ae4         db  0x38 ; '8'
0000000000005ae5         db  0xd7 ; '.'
0000000000005ae6         db  0xff ; '.'
0000000000005ae7         db  0xff ; '.'
0000000000005ae8         db  0x68 ; 'h'
0000000000005ae9         db  0xd7 ; '.'
0000000000005aea         db  0xff ; '.'
0000000000005aeb         db  0xff ; '.'
0000000000005aec         db  0x38 ; '8'
0000000000005aed         db  0xd7 ; '.'
0000000000005aee         db  0xff ; '.'
0000000000005aef         db  0xff ; '.'
0000000000005af0         db  0x38 ; '8'
0000000000005af1         db  0xd7 ; '.'
0000000000005af2         db  0xff ; '.'
0000000000005af3         db  0xff ; '.'
0000000000005af4         db  0x38 ; '8'
0000000000005af5         db  0xd7 ; '.'
0000000000005af6         db  0xff ; '.'
0000000000005af7         db  0xff ; '.'
0000000000005af8         db  0x38 ; '8'
0000000000005af9         db  0xd7 ; '.'
0000000000005afa         db  0xff ; '.'
0000000000005afb         db  0xff ; '.'
0000000000005afc         db  0x38 ; '8'
0000000000005afd         db  0xd7 ; '.'
0000000000005afe         db  0xff ; '.'
0000000000005aff         db  0xff ; '.'
0000000000005b00         db  0x38 ; '8'
0000000000005b01         db  0xd7 ; '.'
0000000000005b02         db  0xff ; '.'
0000000000005b03         db  0xff ; '.'
0000000000005b04         db  0x38 ; '8'
0000000000005b05         db  0xd7 ; '.'
0000000000005b06         db  0xff ; '.'
0000000000005b07         db  0xff ; '.'
0000000000005b08         db  0x38 ; '8'
0000000000005b09         db  0xd7 ; '.'
0000000000005b0a         db  0xff ; '.'
0000000000005b0b         db  0xff ; '.'
0000000000005b0c         db  0x38 ; '8'
0000000000005b0d         db  0xd7 ; '.'
0000000000005b0e         db  0xff ; '.'
0000000000005b0f         db  0xff ; '.'
0000000000005b10         db  0x38 ; '8'
0000000000005b11         db  0xd7 ; '.'
0000000000005b12         db  0xff ; '.'
0000000000005b13         db  0xff ; '.'
0000000000005b14         db  0x38 ; '8'
0000000000005b15         db  0xd7 ; '.'
0000000000005b16         db  0xff ; '.'
0000000000005b17         db  0xff ; '.'
0000000000005b18         db  0x38 ; '8'
0000000000005b19         db  0xd7 ; '.'
0000000000005b1a         db  0xff ; '.'
0000000000005b1b         db  0xff ; '.'
0000000000005b1c         db  0x38 ; '8'
0000000000005b1d         db  0xd7 ; '.'
0000000000005b1e         db  0xff ; '.'
0000000000005b1f         db  0xff ; '.'
0000000000005b20         db  0x38 ; '8'
0000000000005b21         db  0xd7 ; '.'
0000000000005b22         db  0xff ; '.'
0000000000005b23         db  0xff ; '.'
0000000000005b24         db  0x38 ; '8'
0000000000005b25         db  0xd7 ; '.'
0000000000005b26         db  0xff ; '.'
0000000000005b27         db  0xff ; '.'
0000000000005b28         db  0x38 ; '8'
0000000000005b29         db  0xd7 ; '.'
0000000000005b2a         db  0xff ; '.'
0000000000005b2b         db  0xff ; '.'
0000000000005b2c         db  0x38 ; '8'
0000000000005b2d         db  0xd7 ; '.'
0000000000005b2e         db  0xff ; '.'
0000000000005b2f         db  0xff ; '.'
0000000000005b30         db  0x38 ; '8'
0000000000005b31         db  0xd7 ; '.'
0000000000005b32         db  0xff ; '.'
0000000000005b33         db  0xff ; '.'
0000000000005b34         db  0x38 ; '8'
0000000000005b35         db  0xd7 ; '.'
0000000000005b36         db  0xff ; '.'
0000000000005b37         db  0xff ; '.'
0000000000005b38         db  0x38 ; '8'
0000000000005b39         db  0xd7 ; '.'
0000000000005b3a         db  0xff ; '.'
0000000000005b3b         db  0xff ; '.'
0000000000005b3c         db  0x38 ; '8'
0000000000005b3d         db  0xd7 ; '.'
0000000000005b3e         db  0xff ; '.'
0000000000005b3f         db  0xff ; '.'
0000000000005b40         db  0x38 ; '8'
0000000000005b41         db  0xd7 ; '.'
0000000000005b42         db  0xff ; '.'
0000000000005b43         db  0xff ; '.'
0000000000005b44         db  0x38 ; '8'
0000000000005b45         db  0xd7 ; '.'
0000000000005b46         db  0xff ; '.'
0000000000005b47         db  0xff ; '.'
0000000000005b48         db  0x38 ; '8'
0000000000005b49         db  0xd7 ; '.'
0000000000005b4a         db  0xff ; '.'
0000000000005b4b         db  0xff ; '.'
0000000000005b4c         db  0x38 ; '8'
0000000000005b4d         db  0xd7 ; '.'
0000000000005b4e         db  0xff ; '.'
0000000000005b4f         db  0xff ; '.'
0000000000005b50         db  0x38 ; '8'
0000000000005b51         db  0xd7 ; '.'
0000000000005b52         db  0xff ; '.'
0000000000005b53         db  0xff ; '.'
0000000000005b54         db  0xa8 ; '.'
0000000000005b55         db  0xd2 ; '.'
0000000000005b56         db  0xff ; '.'
0000000000005b57         db  0xff ; '.'
0000000000005b58         db  0x68 ; 'h'
0000000000005b59         db  0xd7 ; '.'
0000000000005b5a         db  0xff ; '.'
0000000000005b5b         db  0xff ; '.'
0000000000005b5c         db  0xa8 ; '.'
0000000000005b5d         db  0xd2 ; '.'
0000000000005b5e         db  0xff ; '.'
0000000000005b5f         db  0xff ; '.'
0000000000005b60         db  0x50 ; 'P'
0000000000005b61         db  0xd7 ; '.'
0000000000005b62         db  0xff ; '.'
0000000000005b63         db  0xff ; '.'
0000000000005b64         db  0x00 ; '.'
0000000000005b65         db  0x00 ; '.'
0000000000005b66         db  0x00 ; '.'
0000000000005b67         db  0x00 ; '.'
0000000000005b68         db  0x00 ; '.'
0000000000005b69         db  0x00 ; '.'
0000000000005b6a         db  0x00 ; '.'
0000000000005b6b         db  0x00 ; '.'
0000000000005b6c         db  0x00 ; '.'
0000000000005b6d         db  0x00 ; '.'
0000000000005b6e         db  0x00 ; '.'
0000000000005b6f         db  0x00 ; '.'
0000000000005b70         db  0x00 ; '.'
0000000000005b71         db  0x00 ; '.'
0000000000005b72         db  0x00 ; '.'
0000000000005b73         db  0x00 ; '.'
0000000000005b74         db  0x00 ; '.'
0000000000005b75         db  0x00 ; '.'
0000000000005b76         db  0x00 ; '.'
0000000000005b77         db  0x00 ; '.'
0000000000005b78         db  0x00 ; '.'
0000000000005b79         db  0x00 ; '.'
0000000000005b7a         db  0x00 ; '.'
0000000000005b7b         db  0x00 ; '.'
0000000000005b7c         db  0x00 ; '.'
0000000000005b7d         db  0x00 ; '.'
0000000000005b7e         db  0x00 ; '.'
0000000000005b7f         db  0x00 ; '.'
                     quoting_style_vals:
0000000000005b80         db  0x00 ; '.'
0000000000005b81         db  0x00 ; '.'
0000000000005b82         db  0x00 ; '.'
0000000000005b83         db  0x00 ; '.'
0000000000005b84         db  0x01 ; '.'
0000000000005b85         db  0x00 ; '.'
0000000000005b86         db  0x00 ; '.'
0000000000005b87         db  0x00 ; '.'
0000000000005b88         db  0x02 ; '.'
0000000000005b89         db  0x00 ; '.'
0000000000005b8a         db  0x00 ; '.'
0000000000005b8b         db  0x00 ; '.'
0000000000005b8c         db  0x03 ; '.'
0000000000005b8d         db  0x00 ; '.'
0000000000005b8e         db  0x00 ; '.'
0000000000005b8f         db  0x00 ; '.'
0000000000005b90         db  0x04 ; '.'
0000000000005b91         db  0x00 ; '.'
0000000000005b92         db  0x00 ; '.'
0000000000005b93         db  0x00 ; '.'
0000000000005b94         db  0x05 ; '.'
0000000000005b95         db  0x00 ; '.'
0000000000005b96         db  0x00 ; '.'
0000000000005b97         db  0x00 ; '.'
0000000000005b98         db  0x06 ; '.'
0000000000005b99         db  0x00 ; '.'
0000000000005b9a         db  0x00 ; '.'
0000000000005b9b         db  0x00 ; '.'
0000000000005b9c         db  0x07 ; '.'
0000000000005b9d         db  0x00 ; '.'
0000000000005b9e         db  0x00 ; '.'
0000000000005b9f         db  0x00 ; '.'
0000000000005ba0         db  0x08 ; '.'
0000000000005ba1         db  0x00 ; '.'
0000000000005ba2         db  0x00 ; '.'
0000000000005ba3         db  0x00 ; '.'
0000000000005ba4         db  0x09 ; '.'
0000000000005ba5         db  0x00 ; '.'
0000000000005ba6         db  0x00 ; '.'
0000000000005ba7         db  0x00 ; '.'
                     aSSSn:
0000000000005ba8         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
0000000000005bb4         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
0000000000005bbb         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
0000000000005bbc         db  0x43 ; 'C'
0000000000005bbd         db  0x29 ; ')'
0000000000005bbe         db  0x00 ; '.'
                     aWrittenBySn:
0000000000005bbf         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
0000000000005bcf         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
0000000000005be6         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
0000000000005c02         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
0000000000005c17         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
0000000000005c2d         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
0000000000005c41         align      8
                     aNlicenseGplv3G:
0000000000005c48         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
0000000000005d14         align      8
                     aWrittenBySSSna:
0000000000005d18         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_5d38:        // aWrittenBySSSns
0000000000005d38         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
0000000000005d5c         align      32
                     aWrittenBySSSns_5d60:        // aWrittenBySSSns
0000000000005d60         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_5d88:        // aWrittenBySSSns
0000000000005d88         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
0000000000005db4         align      8
                     aWrittenBySSSns_5db8:        // aWrittenBySSSns
0000000000005db8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
0000000000005de8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
0000000000005e1c         align      32
                     aWrittenBySSSns_5e20:        // aWrittenBySSSns
0000000000005e20         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
0000000000005e5c         align      32
                     aGeneralHelpUsi:
0000000000005e60         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
0000000000005ea1         align      8
                     switch_table_5ea8:        // switch_table
0000000000005ea8         dd         version_etc_arn.loc_46e6-switch_table_5ea8, version_etc_arn.loc_4778-switch_table_5ea8, version_etc_arn.loc_47b8-switch_table_5ea8, version_etc_arn.loc_4800-switch_table_5ea8 ; switch table used at 0x4664 containing 10 entries, DATA XREF=version_etc_arn+150
0000000000005eb8         dd         version_etc_arn.loc_4850-switch_table_5ea8, version_etc_arn.loc_48a8-switch_table_5ea8, version_etc_arn.loc_48d8-switch_table_5ea8, version_etc_arn.loc_4940-switch_table_5ea8
0000000000005ec8         dd         version_etc_arn.loc_4670-switch_table_5ea8, version_etc_arn.loc_4720-switch_table_5ea8
0000000000005ed0         align      32
                     version_etc_copyright:
0000000000005ee0         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
0000000000005f0f         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
0000000000005f20         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
0000000000005f21         db  0x00 ; '.'
                     aPosix:
0000000000005f22         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
0000000000005f28         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
0000000000005f2e         db  0x00 ; '.'
0000000000005f2f         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x5f30; 0x6194[ (612 bytes)
        ; File offset : [24368; 24980[ (612 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000005f30         db  0x01 ; '.'
0000000000005f31         db  0x1b ; '.'
0000000000005f32         db  0x03 ; '.'
0000000000005f33         db  0x3b ; ';'
0000000000005f34         db  0x64 ; 'd'
0000000000005f35         db  0x02 ; '.'
0000000000005f36         db  0x00 ; '.'
0000000000005f37         db  0x00 ; '.'
0000000000005f38         db  0x4b ; 'K'
0000000000005f39         db  0x00 ; '.'
0000000000005f3a         db  0x00 ; '.'
0000000000005f3b         db  0x00 ; '.'
0000000000005f3c         db  0x60 ; '`'
0000000000005f3d         db  0xb4 ; '.'
0000000000005f3e         db  0xff ; '.'
0000000000005f3f         db  0xff ; '.'
0000000000005f40         db  0xb0 ; '.'
0000000000005f41         db  0x02 ; '.'
0000000000005f42         db  0x00 ; '.'
0000000000005f43         db  0x00 ; '.'
0000000000005f44         db  0x40 ; '@'
0000000000005f45         db  0xb7 ; '.'
0000000000005f46         db  0xff ; '.'
0000000000005f47         db  0xff ; '.'
0000000000005f48         db  0xd8 ; '.'
0000000000005f49         db  0x02 ; '.'
0000000000005f4a         db  0x00 ; '.'
0000000000005f4b         db  0x00 ; '.'
0000000000005f4c         db  0x50 ; 'P'
0000000000005f4d         db  0xb7 ; '.'
0000000000005f4e         db  0xff ; '.'
0000000000005f4f         db  0xff ; '.'
0000000000005f50         db  0xf0 ; '.'
0000000000005f51         db  0x02 ; '.'
0000000000005f52         db  0x00 ; '.'
0000000000005f53         db  0x00 ; '.'
0000000000005f54         db  0x80 ; '.'
0000000000005f55         db  0xb7 ; '.'
0000000000005f56         db  0xff ; '.'
0000000000005f57         db  0xff ; '.'
0000000000005f58         db  0xd0 ; '.'
0000000000005f59         db  0x03 ; '.'
0000000000005f5a         db  0x00 ; '.'
0000000000005f5b         db  0x00 ; '.'
0000000000005f5c         db  0x80 ; '.'
0000000000005f5d         db  0xba ; '.'
0000000000005f5e         db  0xff ; '.'
0000000000005f5f         db  0xff ; '.'
0000000000005f60         db  0x80 ; '.'
0000000000005f61         db  0x02 ; '.'
0000000000005f62         db  0x00 ; '.'
0000000000005f63         db  0x00 ; '.'
0000000000005f64         db  0x90 ; '.'
0000000000005f65         db  0xbb ; '.'
0000000000005f66         db  0xff ; '.'
0000000000005f67         db  0xff ; '.'
0000000000005f68         db  0x08 ; '.'
0000000000005f69         db  0x03 ; '.'
0000000000005f6a         db  0x00 ; '.'
0000000000005f6b         db  0x00 ; '.'
0000000000005f6c         db  0x40 ; '@'
0000000000005f6d         db  0xc1 ; '.'
0000000000005f6e         db  0xff ; '.'
0000000000005f6f         db  0xff ; '.'
0000000000005f70         db  0x58 ; 'X'
0000000000005f71         db  0x03 ; '.'
0000000000005f72         db  0x00 ; '.'
0000000000005f73         db  0x00 ; '.'
0000000000005f74         db  0x70 ; 'p'
0000000000005f75         db  0xc4 ; '.'
0000000000005f76         db  0xff ; '.'
0000000000005f77         db  0xff ; '.'
0000000000005f78         db  0xa4 ; '.'
0000000000005f79         db  0x03 ; '.'
0000000000005f7a         db  0x00 ; '.'
0000000000005f7b         db  0x00 ; '.'
0000000000005f7c         db  0x50 ; 'P'
0000000000005f7d         db  0xc8 ; '.'
0000000000005f7e         db  0xff ; '.'
0000000000005f7f         db  0xff ; '.'
0000000000005f80         db  0x18 ; '.'
0000000000005f81         db  0x04 ; '.'
0000000000005f82         db  0x00 ; '.'
0000000000005f83         db  0x00 ; '.'
0000000000005f84         db  0x60 ; '`'
0000000000005f85         db  0xc8 ; '.'
0000000000005f86         db  0xff ; '.'
0000000000005f87         db  0xff ; '.'
0000000000005f88         db  0x2c ; ','
0000000000005f89         db  0x04 ; '.'
0000000000005f8a         db  0x00 ; '.'
0000000000005f8b         db  0x00 ; '.'
0000000000005f8c         db  0x70 ; 'p'
0000000000005f8d         db  0xc8 ; '.'
0000000000005f8e         db  0xff ; '.'
0000000000005f8f         db  0xff ; '.'
0000000000005f90         db  0x40 ; '@'
0000000000005f91         db  0x04 ; '.'
0000000000005f92         db  0x00 ; '.'
0000000000005f93         db  0x00 ; '.'
0000000000005f94         db  0x20 ; ' '
0000000000005f95         db  0xc9 ; '.'
0000000000005f96         db  0xff ; '.'
0000000000005f97         db  0xff ; '.'
0000000000005f98         db  0x70 ; 'p'
0000000000005f99         db  0x04 ; '.'
0000000000005f9a         db  0x00 ; '.'
0000000000005f9b         db  0x00 ; '.'
0000000000005f9c         db  0x30 ; '0'
0000000000005f9d         db  0xc9 ; '.'
0000000000005f9e         db  0xff ; '.'
0000000000005f9f         db  0xff ; '.'
0000000000005fa0         db  0x84 ; '.'
0000000000005fa1         db  0x04 ; '.'
0000000000005fa2         db  0x00 ; '.'
0000000000005fa3         db  0x00 ; '.'
0000000000005fa4         db  0x60 ; '`'
0000000000005fa5         db  0xc9 ; '.'
0000000000005fa6         db  0xff ; '.'
0000000000005fa7         db  0xff ; '.'
0000000000005fa8         db  0xa0 ; '.'
0000000000005fa9         db  0x04 ; '.'
0000000000005faa         db  0x00 ; '.'
0000000000005fab         db  0x00 ; '.'
0000000000005fac         db  0x00 ; '.'
0000000000005fad         db  0xca ; '.'
0000000000005fae         db  0xff ; '.'
0000000000005faf         db  0xff ; '.'
0000000000005fb0         db  0xc0 ; '.'
0000000000005fb1         db  0x04 ; '.'
0000000000005fb2         db  0x00 ; '.'
0000000000005fb3         db  0x00 ; '.'
0000000000005fb4         db  0xf0 ; '.'
0000000000005fb5         db  0xca ; '.'
0000000000005fb6         db  0xff ; '.'
0000000000005fb7         db  0xff ; '.'
0000000000005fb8         db  0x04 ; '.'
0000000000005fb9         db  0x05 ; '.'
0000000000005fba         db  0x00 ; '.'
0000000000005fbb         db  0x00 ; '.'
0000000000005fbc         db  0x30 ; '0'
0000000000005fbd         db  0xdd ; '.'
0000000000005fbe         db  0xff ; '.'
0000000000005fbf         db  0xff ; '.'
0000000000005fc0         db  0x7c ; '|'
0000000000005fc1         db  0x05 ; '.'
0000000000005fc2         db  0x00 ; '.'
0000000000005fc3         db  0x00 ; '.'
0000000000005fc4         db  0xe0 ; '.'
0000000000005fc5         db  0xde ; '.'
0000000000005fc6         db  0xff ; '.'
0000000000005fc7         db  0xff ; '.'
0000000000005fc8         db  0xe8 ; '.'
0000000000005fc9         db  0x05 ; '.'
0000000000005fca         db  0x00 ; '.'
0000000000005fcb         db  0x00 ; '.'
0000000000005fcc         db  0x20 ; ' '
0000000000005fcd         db  0xdf ; '.'
0000000000005fce         db  0xff ; '.'
0000000000005fcf         db  0xff ; '.'
0000000000005fd0         db  0x14 ; '.'
0000000000005fd1         db  0x06 ; '.'
0000000000005fd2         db  0x00 ; '.'
0000000000005fd3         db  0x00 ; '.'
0000000000005fd4         db  0x40 ; '@'
0000000000005fd5         db  0xdf ; '.'
0000000000005fd6         db  0xff ; '.'
0000000000005fd7         db  0xff ; '.'
0000000000005fd8         db  0x28 ; '('
0000000000005fd9         db  0x06 ; '.'
0000000000005fda         db  0x00 ; '.'
0000000000005fdb         db  0x00 ; '.'
0000000000005fdc         db  0x60 ; '`'
0000000000005fdd         db  0xdf ; '.'
0000000000005fde         db  0xff ; '.'
0000000000005fdf         db  0xff ; '.'
0000000000005fe0         db  0x3c ; '<'
0000000000005fe1         db  0x06 ; '.'
0000000000005fe2         db  0x00 ; '.'
0000000000005fe3         db  0x00 ; '.'
0000000000005fe4         db  0xa0 ; '.'
0000000000005fe5         db  0xdf ; '.'
0000000000005fe6         db  0xff ; '.'
0000000000005fe7         db  0xff ; '.'
0000000000005fe8         db  0x50 ; 'P'
0000000000005fe9         db  0x06 ; '.'
0000000000005fea         db  0x00 ; '.'
0000000000005feb         db  0x00 ; '.'
0000000000005fec         db  0xc0 ; '.'
0000000000005fed         db  0xdf ; '.'
0000000000005fee         db  0xff ; '.'
0000000000005fef         db  0xff ; '.'
0000000000005ff0         db  0x64 ; 'd'
0000000000005ff1         db  0x06 ; '.'
0000000000005ff2         db  0x00 ; '.'
0000000000005ff3         db  0x00 ; '.'
0000000000005ff4         db  0xf0 ; '.'
0000000000005ff5         db  0xdf ; '.'
0000000000005ff6         db  0xff ; '.'
0000000000005ff7         db  0xff ; '.'
0000000000005ff8         db  0x78 ; 'x'
0000000000005ff9         db  0x06 ; '.'
0000000000005ffa         db  0x00 ; '.'
0000000000005ffb         db  0x00 ; '.'
0000000000005ffc         db  0x70 ; 'p'
0000000000005ffd         db  0xe0 ; '.'
0000000000005ffe         db  0xff ; '.'
0000000000005fff         db  0xff ; '.'
0000000000006000         db  0xcc ; '.'
0000000000006001         db  0x06 ; '.'
0000000000006002         db  0x00 ; '.'
0000000000006003         db  0x00 ; '.'
0000000000006004         db  0x60 ; '`'
0000000000006005         db  0xe1 ; '.'
0000000000006006         db  0xff ; '.'
0000000000006007         db  0xff ; '.'
0000000000006008         db  0x38 ; '8'
0000000000006009         db  0x07 ; '.'
000000000000600a         db  0x00 ; '.'
000000000000600b         db  0x00 ; '.'
000000000000600c         db  0x70 ; 'p'
000000000000600d         db  0xe1 ; '.'
000000000000600e         db  0xff ; '.'
000000000000600f         db  0xff ; '.'
0000000000006010         db  0x4c ; 'L'
0000000000006011         db  0x07 ; '.'
0000000000006012         db  0x00 ; '.'
0000000000006013         db  0x00 ; '.'
0000000000006014         db  0x10 ; '.'
0000000000006015         db  0xe2 ; '.'
0000000000006016         db  0xff ; '.'
0000000000006017         db  0xff ; '.'
0000000000006018         db  0x78 ; 'x'
0000000000006019         db  0x07 ; '.'
000000000000601a         db  0x00 ; '.'
000000000000601b         db  0x00 ; '.'
000000000000601c         db  0x30 ; '0'
000000000000601d         db  0xe2 ; '.'
000000000000601e         db  0xff ; '.'
000000000000601f         db  0xff ; '.'
0000000000006020         db  0x8c ; '.'
0000000000006021         db  0x07 ; '.'
0000000000006022         db  0x00 ; '.'
0000000000006023         db  0x00 ; '.'
0000000000006024         db  0x40 ; '@'
0000000000006025         db  0xe2 ; '.'
0000000000006026         db  0xff ; '.'
0000000000006027         db  0xff ; '.'
0000000000006028         db  0xa0 ; '.'
0000000000006029         db  0x07 ; '.'
000000000000602a         db  0x00 ; '.'
000000000000602b         db  0x00 ; '.'
000000000000602c         db  0x60 ; '`'
000000000000602d         db  0xe2 ; '.'
000000000000602e         db  0xff ; '.'
000000000000602f         db  0xff ; '.'
0000000000006030         db  0xb4 ; '.'
0000000000006031         db  0x07 ; '.'
0000000000006032         db  0x00 ; '.'
0000000000006033         db  0x00 ; '.'
0000000000006034         db  0x80 ; '.'
0000000000006035         db  0xe2 ; '.'
0000000000006036         db  0xff ; '.'
0000000000006037         db  0xff ; '.'
0000000000006038         db  0xc8 ; '.'
0000000000006039         db  0x07 ; '.'
000000000000603a         db  0x00 ; '.'
000000000000603b         db  0x00 ; '.'
000000000000603c         db  0x10 ; '.'
000000000000603d         db  0xe3 ; '.'
000000000000603e         db  0xff ; '.'
000000000000603f         db  0xff ; '.'
0000000000006040         db  0xe4 ; '.'
0000000000006041         db  0x07 ; '.'
0000000000006042         db  0x00 ; '.'
0000000000006043         db  0x00 ; '.'
0000000000006044         db  0xa0 ; '.'
0000000000006045         db  0xe3 ; '.'
0000000000006046         db  0xff ; '.'
0000000000006047         db  0xff ; '.'
0000000000006048         db  0x00 ; '.'
0000000000006049         db  0x08 ; '.'
000000000000604a         db  0x00 ; '.'
000000000000604b         db  0x00 ; '.'
000000000000604c         db  0xb0 ; '.'
000000000000604d         db  0xe3 ; '.'
000000000000604e         db  0xff ; '.'
000000000000604f         db  0xff ; '.'
0000000000006050         db  0x14 ; '.'
0000000000006051         db  0x08 ; '.'
0000000000006052         db  0x00 ; '.'
0000000000006053         db  0x00 ; '.'
0000000000006054         db  0xc0 ; '.'
0000000000006055         db  0xe3 ; '.'
0000000000006056         db  0xff ; '.'
0000000000006057         db  0xff ; '.'
0000000000006058         db  0x28 ; '('
0000000000006059         db  0x08 ; '.'
000000000000605a         db  0x00 ; '.'
000000000000605b         db  0x00 ; '.'
000000000000605c         db  0x60 ; '`'
000000000000605d         db  0xe4 ; '.'
000000000000605e         db  0xff ; '.'
000000000000605f         db  0xff ; '.'
0000000000006060         db  0x44 ; 'D'
0000000000006061         db  0x08 ; '.'
0000000000006062         db  0x00 ; '.'
0000000000006063         db  0x00 ; '.'
0000000000006064         db  0x70 ; 'p'
0000000000006065         db  0xe4 ; '.'
0000000000006066         db  0xff ; '.'
0000000000006067         db  0xff ; '.'
0000000000006068         db  0x58 ; 'X'
0000000000006069         db  0x08 ; '.'
000000000000606a         db  0x00 ; '.'
000000000000606b         db  0x00 ; '.'
000000000000606c         db  0x90 ; '.'
000000000000606d         db  0xe4 ; '.'
000000000000606e         db  0xff ; '.'
000000000000606f         db  0xff ; '.'
0000000000006070         db  0x6c ; 'l'
0000000000006071         db  0x08 ; '.'
0000000000006072         db  0x00 ; '.'
0000000000006073         db  0x00 ; '.'
0000000000006074         db  0xa0 ; '.'
0000000000006075         db  0xe4 ; '.'
0000000000006076         db  0xff ; '.'
0000000000006077         db  0xff ; '.'
0000000000006078         db  0x80 ; '.'
0000000000006079         db  0x08 ; '.'
000000000000607a         db  0x00 ; '.'
000000000000607b         db  0x00 ; '.'
000000000000607c         db  0x30 ; '0'
000000000000607d         db  0xe5 ; '.'
000000000000607e         db  0xff ; '.'
000000000000607f         db  0xff ; '.'
0000000000006080         db  0x9c ; '.'
0000000000006081         db  0x08 ; '.'
0000000000006082         db  0x00 ; '.'
0000000000006083         db  0x00 ; '.'
0000000000006084         db  0xd0 ; '.'
0000000000006085         db  0xe5 ; '.'
0000000000006086         db  0xff ; '.'
0000000000006087         db  0xff ; '.'
0000000000006088         db  0xb8 ; '.'
0000000000006089         db  0x08 ; '.'
000000000000608a         db  0x00 ; '.'
000000000000608b         db  0x00 ; '.'
000000000000608c         db  0xe0 ; '.'
000000000000608d         db  0xe5 ; '.'
000000000000608e         db  0xff ; '.'
000000000000608f         db  0xff ; '.'
0000000000006090         db  0xcc ; '.'
0000000000006091         db  0x08 ; '.'
0000000000006092         db  0x00 ; '.'
0000000000006093         db  0x00 ; '.'
0000000000006094         db  0x00 ; '.'
0000000000006095         db  0xe6 ; '.'
0000000000006096         db  0xff ; '.'
0000000000006097         db  0xff ; '.'
0000000000006098         db  0xe0 ; '.'
0000000000006099         db  0x08 ; '.'
000000000000609a         db  0x00 ; '.'
000000000000609b         db  0x00 ; '.'
000000000000609c         db  0x20 ; ' '
000000000000609d         db  0xe6 ; '.'
000000000000609e         db  0xff ; '.'
000000000000609f         db  0xff ; '.'
00000000000060a0         db  0xf4 ; '.'
00000000000060a1         db  0x08 ; '.'
00000000000060a2         db  0x00 ; '.'
00000000000060a3         db  0x00 ; '.'
00000000000060a4         db  0x30 ; '0'
00000000000060a5         db  0xe6 ; '.'
00000000000060a6         db  0xff ; '.'
00000000000060a7         db  0xff ; '.'
00000000000060a8         db  0x08 ; '.'
00000000000060a9         db  0x09 ; '.'
00000000000060aa         db  0x00 ; '.'
00000000000060ab         db  0x00 ; '.'
00000000000060ac         db  0x50 ; 'P'
00000000000060ad         db  0xe6 ; '.'
00000000000060ae         db  0xff ; '.'
00000000000060af         db  0xff ; '.'
00000000000060b0         db  0x1c ; '.'
00000000000060b1         db  0x09 ; '.'
00000000000060b2         db  0x00 ; '.'
00000000000060b3         db  0x00 ; '.'
00000000000060b4         db  0x70 ; 'p'
00000000000060b5         db  0xe6 ; '.'
00000000000060b6         db  0xff ; '.'
00000000000060b7         db  0xff ; '.'
00000000000060b8         db  0x30 ; '0'
00000000000060b9         db  0x09 ; '.'
00000000000060ba         db  0x00 ; '.'
00000000000060bb         db  0x00 ; '.'
00000000000060bc         db  0x90 ; '.'
00000000000060bd         db  0xe6 ; '.'
00000000000060be         db  0xff ; '.'
00000000000060bf         db  0xff ; '.'
00000000000060c0         db  0x48 ; 'H'
00000000000060c1         db  0x09 ; '.'
00000000000060c2         db  0x00 ; '.'
00000000000060c3         db  0x00 ; '.'
00000000000060c4         db  0xb0 ; '.'
00000000000060c5         db  0xea ; '.'
00000000000060c6         db  0xff ; '.'
00000000000060c7         db  0xff ; '.'
00000000000060c8         db  0x5c ; '\'
00000000000060c9         db  0x0a ; '.'
00000000000060ca         db  0x00 ; '.'
00000000000060cb         db  0x00 ; '.'
00000000000060cc         db  0xd0 ; '.'
00000000000060cd         db  0xea ; '.'
00000000000060ce         db  0xff ; '.'
00000000000060cf         db  0xff ; '.'
00000000000060d0         db  0x70 ; 'p'
00000000000060d1         db  0x0a ; '.'
00000000000060d2         db  0x00 ; '.'
00000000000060d3         db  0x00 ; '.'
00000000000060d4         db  0x50 ; 'P'
00000000000060d5         db  0xeb ; '.'
00000000000060d6         db  0xff ; '.'
00000000000060d7         db  0xff ; '.'
00000000000060d8         db  0x8c ; '.'
00000000000060d9         db  0x0a ; '.'
00000000000060da         db  0x00 ; '.'
00000000000060db         db  0x00 ; '.'
00000000000060dc         db  0x30 ; '0'
00000000000060dd         db  0xec ; '.'
00000000000060de         db  0xff ; '.'
00000000000060df         db  0xff ; '.'
00000000000060e0         db  0xb8 ; '.'
00000000000060e1         db  0x0a ; '.'
00000000000060e2         db  0x00 ; '.'
00000000000060e3         db  0x00 ; '.'
00000000000060e4         db  0xb0 ; '.'
00000000000060e5         db  0xec ; '.'
00000000000060e6         db  0xff ; '.'
00000000000060e7         db  0xff ; '.'
00000000000060e8         db  0xd8 ; '.'
00000000000060e9         db  0x0a ; '.'
00000000000060ea         db  0x00 ; '.'
00000000000060eb         db  0x00 ; '.'
00000000000060ec         db  0xd0 ; '.'
00000000000060ed         db  0xec ; '.'
00000000000060ee         db  0xff ; '.'
00000000000060ef         db  0xff ; '.'
00000000000060f0         db  0xf4 ; '.'
00000000000060f1         db  0x0a ; '.'
00000000000060f2         db  0x00 ; '.'
00000000000060f3         db  0x00 ; '.'
00000000000060f4         db  0x00 ; '.'
00000000000060f5         db  0xed ; '.'
00000000000060f6         db  0xff ; '.'
00000000000060f7         db  0xff ; '.'
00000000000060f8         db  0x08 ; '.'
00000000000060f9         db  0x0b ; '.'
00000000000060fa         db  0x00 ; '.'
00000000000060fb         db  0x00 ; '.'
00000000000060fc         db  0x10 ; '.'
00000000000060fd         db  0xed ; '.'
00000000000060fe         db  0xff ; '.'
00000000000060ff         db  0xff ; '.'
0000000000006100         db  0x1c ; '.'
0000000000006101         db  0x0b ; '.'
0000000000006102         db  0x00 ; '.'
0000000000006103         db  0x00 ; '.'
0000000000006104         db  0x50 ; 'P'
0000000000006105         db  0xed ; '.'
0000000000006106         db  0xff ; '.'
0000000000006107         db  0xff ; '.'
0000000000006108         db  0x40 ; '@'
0000000000006109         db  0x0b ; '.'
000000000000610a         db  0x00 ; '.'
000000000000610b         db  0x00 ; '.'
000000000000610c         db  0x80 ; '.'
000000000000610d         db  0xed ; '.'
000000000000610e         db  0xff ; '.'
000000000000610f         db  0xff ; '.'
0000000000006110         db  0x54 ; 'T'
0000000000006111         db  0x0b ; '.'
0000000000006112         db  0x00 ; '.'
0000000000006113         db  0x00 ; '.'
0000000000006114         db  0x10 ; '.'
0000000000006115         db  0xee ; '.'
0000000000006116         db  0xff ; '.'
0000000000006117         db  0xff ; '.'
0000000000006118         db  0x6c ; 'l'
0000000000006119         db  0x0b ; '.'
000000000000611a         db  0x00 ; '.'
000000000000611b         db  0x00 ; '.'
000000000000611c         db  0x60 ; '`'
000000000000611d         db  0xee ; '.'
000000000000611e         db  0xff ; '.'
000000000000611f         db  0xff ; '.'
0000000000006120         db  0x84 ; '.'
0000000000006121         db  0x0b ; '.'
0000000000006122         db  0x00 ; '.'
0000000000006123         db  0x00 ; '.'
0000000000006124         db  0x80 ; '.'
0000000000006125         db  0xee ; '.'
0000000000006126         db  0xff ; '.'
0000000000006127         db  0xff ; '.'
0000000000006128         db  0xa0 ; '.'
0000000000006129         db  0x0b ; '.'
000000000000612a         db  0x00 ; '.'
000000000000612b         db  0x00 ; '.'
000000000000612c         db  0xb0 ; '.'
000000000000612d         db  0xee ; '.'
000000000000612e         db  0xff ; '.'
000000000000612f         db  0xff ; '.'
0000000000006130         db  0xbc ; '.'
0000000000006131         db  0x0b ; '.'
0000000000006132         db  0x00 ; '.'
0000000000006133         db  0x00 ; '.'
0000000000006134         db  0xe0 ; '.'
0000000000006135         db  0xee ; '.'
0000000000006136         db  0xff ; '.'
0000000000006137         db  0xff ; '.'
0000000000006138         db  0xe4 ; '.'
0000000000006139         db  0x0b ; '.'
000000000000613a         db  0x00 ; '.'
000000000000613b         db  0x00 ; '.'
000000000000613c         db  0x00 ; '.'
000000000000613d         db  0xef ; '.'
000000000000613e         db  0xff ; '.'
000000000000613f         db  0xff ; '.'
0000000000006140         db  0x00 ; '.'
0000000000006141         db  0x0c ; '.'
0000000000006142         db  0x00 ; '.'
0000000000006143         db  0x00 ; '.'
0000000000006144         db  0x40 ; '@'
0000000000006145         db  0xef ; '.'
0000000000006146         db  0xff ; '.'
0000000000006147         db  0xff ; '.'
0000000000006148         db  0x18 ; '.'
0000000000006149         db  0x0c ; '.'
000000000000614a         db  0x00 ; '.'
000000000000614b         db  0x00 ; '.'
000000000000614c         db  0xc0 ; '.'
000000000000614d         db  0xef ; '.'
000000000000614e         db  0xff ; '.'
000000000000614f         db  0xff ; '.'
0000000000006150         db  0x50 ; 'P'
0000000000006151         db  0x0c ; '.'
0000000000006152         db  0x00 ; '.'
0000000000006153         db  0x00 ; '.'
0000000000006154         db  0x00 ; '.'
0000000000006155         db  0xf0 ; '.'
0000000000006156         db  0xff ; '.'
0000000000006157         db  0xff ; '.'
0000000000006158         db  0x70 ; 'p'
0000000000006159         db  0x0c ; '.'
000000000000615a         db  0x00 ; '.'
000000000000615b         db  0x00 ; '.'
000000000000615c         db  0x60 ; '`'
000000000000615d         db  0xf0 ; '.'
000000000000615e         db  0xff ; '.'
000000000000615f         db  0xff ; '.'
0000000000006160         db  0xa0 ; '.'
0000000000006161         db  0x0c ; '.'
0000000000006162         db  0x00 ; '.'
0000000000006163         db  0x00 ; '.'
0000000000006164         db  0xf0 ; '.'
0000000000006165         db  0xf0 ; '.'
0000000000006166         db  0xff ; '.'
0000000000006167         db  0xff ; '.'
0000000000006168         db  0xe0 ; '.'
0000000000006169         db  0x0c ; '.'
000000000000616a         db  0x00 ; '.'
000000000000616b         db  0x00 ; '.'
000000000000616c         db  0x70 ; 'p'
000000000000616d         db  0xf1 ; '.'
000000000000616e         db  0xff ; '.'
000000000000616f         db  0xff ; '.'
0000000000006170         db  0x30 ; '0'
0000000000006171         db  0x0d ; '.'
0000000000006172         db  0x00 ; '.'
0000000000006173         db  0x00 ; '.'
0000000000006174         db  0xd0 ; '.'
0000000000006175         db  0xf1 ; '.'
0000000000006176         db  0xff ; '.'
0000000000006177         db  0xff ; '.'
0000000000006178         db  0x50 ; 'P'
0000000000006179         db  0x0d ; '.'
000000000000617a         db  0x00 ; '.'
000000000000617b         db  0x00 ; '.'
000000000000617c         db  0x10 ; '.'
000000000000617d         db  0xf2 ; '.'
000000000000617e         db  0xff ; '.'
000000000000617f         db  0xff ; '.'
0000000000006180         db  0x70 ; 'p'
0000000000006181         db  0x0d ; '.'
0000000000006182         db  0x00 ; '.'
0000000000006183         db  0x00 ; '.'
0000000000006184         db  0x80 ; '.'
0000000000006185         db  0xf2 ; '.'
0000000000006186         db  0xff ; '.'
0000000000006187         db  0xff ; '.'
0000000000006188         db  0xb8 ; '.'
0000000000006189         db  0x0d ; '.'
000000000000618a         db  0x00 ; '.'
000000000000618b         db  0x00 ; '.'
000000000000618c         db  0x90 ; '.'
000000000000618d         db  0xf2 ; '.'
000000000000618e         db  0xff ; '.'
000000000000618f         db  0xff ; '.'
0000000000006190         db  0xd0 ; '.'
0000000000006191         db  0x0d ; '.'
0000000000006192         db  0x00 ; '.'
0000000000006193         db  0x00 ; '.'
0000000000006194         db  0x00 ; '.'
0000000000006195         db  0x00 ; '.'
0000000000006196         db  0x00 ; '.'
0000000000006197         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x6198; 0x6d18[ (2944 bytes)
        ; File offset : [24984; 27928[ (2944 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000006198         dd         0x00000014                                  ; Length of the record
000000000000619c         dd         0x00000000                                  ; CIE ID
00000000000061a0         db         0x01                                        ; Version
00000000000061a1         db         "zR", 0                                     ; Augmentation String
00000000000061a4         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
00000000000061a5         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
00000000000061a6         db         0x10                                        ; Return address register
00000000000061a7         db         0x01                                        ; Augmentation data length
00000000000061a8         db         0x1b                                        ; FDE encoding
00000000000061a9         db  0x0c ; '.'
00000000000061aa         db  0x07 ; '.'
00000000000061ab         db  0x08 ; '.'
00000000000061ac         db  0x90 ; '.'
00000000000061ad         db  0x01 ; '.'
00000000000061ae         db  0x07 ; '.'
00000000000061af         db  0x10 ; '.'
00000000000061b0         dd         0x00000014                                  ; Length of the record
00000000000061b4         dd         0x0000001c                                  ; FDE: parent CIE at 0x6198 (FDE encoding = 0x1B)
00000000000061b8         db         0xf8, 0xb7, 2 dup (0xff)                    ; begin 0x19b0
00000000000061bc         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x19db)
00000000000061c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000061c1         align      8
00000000000061c8         dd         0x00000014                                  ; Length of the record
00000000000061cc         dd         0x00000000                                  ; CIE ID
00000000000061d0         db         0x01                                        ; Version
00000000000061d1         db         "zR", 0                                     ; Augmentation String
00000000000061d4         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
00000000000061d5         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
00000000000061d6         db         0x10                                        ; Return address register
00000000000061d7         db         0x01                                        ; Augmentation data length
00000000000061d8         db         0x1b                                        ; FDE encoding
00000000000061d9         db  0x0c ; '.'
00000000000061da         db  0x07 ; '.'
00000000000061db         db  0x08 ; '.'
00000000000061dc         db  0x90 ; '.'
00000000000061dd         db  0x01 ; '.'
00000000000061de         db  0x00 ; '.'
00000000000061df         db  0x00 ; '.'
00000000000061e0         dd         0x00000024                                  ; Length of the record
00000000000061e4         dd         0x0000001c                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
00000000000061e8         db         0xa8, 0xb1, 2 dup (0xff)                    ; begin 0x1390
00000000000061ec         db         0xe0, 0x02, 2 dup (0x00)                    ; length 0x2e0 (end at 0x1670)
00000000000061f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000061f1         db  0x0e ; '.'
00000000000061f2         db  0x10 ; '.'
00000000000061f3         db  0x46 ; 'F'
00000000000061f4         db  0x0e ; '.'
00000000000061f5         db  0x18 ; '.'
00000000000061f6         db  0x4a ; 'J'
00000000000061f7         db  0x0f ; '.'
00000000000061f8         db  0x0b ; '.'
00000000000061f9         db  0x77 ; 'w'
00000000000061fa         db  0x08 ; '.'
00000000000061fb         db  0x80 ; '.'
00000000000061fc         db  0x00 ; '.'
00000000000061fd         db  0x3f ; '?'
00000000000061fe         db  0x1a ; '.'
00000000000061ff         db  0x3b ; ';'
0000000000006200         db  0x2a ; '*'
0000000000006201         db  0x33 ; '3'
0000000000006202         db  0x24 ; '$'
0000000000006203         db  0x22 ; '"'
0000000000006204         db  0x00 ; '.'
0000000000006205         db  0x00 ; '.'
0000000000006206         db  0x00 ; '.'
0000000000006207         db  0x00 ; '.'
0000000000006208         dd         0x00000014                                  ; Length of the record
000000000000620c         dd         0x00000044                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006210         db         0x60, 0xb4, 2 dup (0xff)                    ; begin 0x1670
0000000000006214         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x1678)
0000000000006218         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006219         align      32
0000000000006220         dd         0x00000014                                  ; Length of the record
0000000000006224         dd         0x0000005c                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006228         db         0x58, 0xb4, 2 dup (0xff)                    ; begin 0x1680
000000000000622c         db         0x2d, 3 dup (0x00)                          ; length 0x2d (end at 0x16ad)
0000000000006230         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006231         db  0x41 ; 'A'
0000000000006232         db  0x0e ; '.'
0000000000006233         db  0x10 ; '.'
0000000000006234         db  0x83 ; '.'
0000000000006235         db  0x02 ; '.'
0000000000006236         db  0x00 ; '.'
0000000000006237         db  0x00 ; '.'
0000000000006238         dd         0x0000004c                                  ; Length of the record
000000000000623c         dd         0x00000074                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006240         db         0x80, 0xb8, 2 dup (0xff)                    ; begin 0x1ac0
0000000000006244         db         0xa9, 0x05, 2 dup (0x00)                    ; length 0x5a9 (end at 0x2069)
0000000000006248         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006249         db  0x42 ; 'B'
000000000000624a         db  0x0e ; '.'
000000000000624b         db  0x10 ; '.'
000000000000624c         db  0x8f ; '.'
000000000000624d         db  0x02 ; '.'
000000000000624e         db  0x42 ; 'B'
000000000000624f         db  0x0e ; '.'
0000000000006250         db  0x18 ; '.'
0000000000006251         db  0x8e ; '.'
0000000000006252         db  0x03 ; '.'
0000000000006253         db  0x42 ; 'B'
0000000000006254         db  0x0e ; '.'
0000000000006255         db  0x20 ; ' '
0000000000006256         db  0x8d ; '.'
0000000000006257         db  0x04 ; '.'
0000000000006258         db  0x42 ; 'B'
0000000000006259         db  0x0e ; '.'
000000000000625a         db  0x28 ; '('
000000000000625b         db  0x8c ; '.'
000000000000625c         db  0x05 ; '.'
000000000000625d         db  0x41 ; 'A'
000000000000625e         db  0x0e ; '.'
000000000000625f         db  0x30 ; '0'
0000000000006260         db  0x86 ; '.'
0000000000006261         db  0x06 ; '.'
0000000000006262         db  0x41 ; 'A'
0000000000006263         db  0x0e ; '.'
0000000000006264         db  0x38 ; '8'
0000000000006265         db  0x83 ; '.'
0000000000006266         db  0x07 ; '.'
0000000000006267         db  0x4b ; 'K'
0000000000006268         db  0x0e ; '.'
0000000000006269         db  0x80 ; '.'
000000000000626a         db  0x01 ; '.'
000000000000626b         db  0x03 ; '.'
000000000000626c         db  0xb8 ; '.'
000000000000626d         db  0x03 ; '.'
000000000000626e         db  0x0a ; '.'
000000000000626f         db  0x0e ; '.'
0000000000006270         db  0x38 ; '8'
0000000000006271         db  0x41 ; 'A'
0000000000006272         db  0x0e ; '.'
0000000000006273         db  0x30 ; '0'
0000000000006274         db  0x41 ; 'A'
0000000000006275         db  0x0e ; '.'
0000000000006276         db  0x28 ; '('
0000000000006277         db  0x42 ; 'B'
0000000000006278         db  0x0e ; '.'
0000000000006279         db  0x20 ; ' '
000000000000627a         db  0x42 ; 'B'
000000000000627b         db  0x0e ; '.'
000000000000627c         db  0x18 ; '.'
000000000000627d         db  0x42 ; 'B'
000000000000627e         db  0x0e ; '.'
000000000000627f         db  0x10 ; '.'
0000000000006280         db  0x42 ; 'B'
0000000000006281         db  0x0e ; '.'
0000000000006282         db  0x08 ; '.'
0000000000006283         db  0x49 ; 'I'
0000000000006284         db  0x0b ; '.'
0000000000006285         db  0x00 ; '.'
0000000000006286         db  0x00 ; '.'
0000000000006287         db  0x00 ; '.'
0000000000006288         dd         0x00000048                                  ; Length of the record
000000000000628c         dd         0x000000c4                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006290         db         0xe0, 0xbd, 2 dup (0xff)                    ; begin 0x2070
0000000000006294         db         0x27, 0x03, 2 dup (0x00)                    ; length 0x327 (end at 0x2397)
0000000000006298         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006299         db  0x42 ; 'B'
000000000000629a         db  0x0e ; '.'
000000000000629b         db  0x10 ; '.'
000000000000629c         db  0x8f ; '.'
000000000000629d         db  0x02 ; '.'
000000000000629e         db  0x42 ; 'B'
000000000000629f         db  0x0e ; '.'
00000000000062a0         db  0x18 ; '.'
00000000000062a1         db  0x8e ; '.'
00000000000062a2         db  0x03 ; '.'
00000000000062a3         db  0x42 ; 'B'
00000000000062a4         db  0x0e ; '.'
00000000000062a5         db  0x20 ; ' '
00000000000062a6         db  0x8d ; '.'
00000000000062a7         db  0x04 ; '.'
00000000000062a8         db  0x42 ; 'B'
00000000000062a9         db  0x0e ; '.'
00000000000062aa         db  0x28 ; '('
00000000000062ab         db  0x8c ; '.'
00000000000062ac         db  0x05 ; '.'
00000000000062ad         db  0x41 ; 'A'
00000000000062ae         db  0x0e ; '.'
00000000000062af         db  0x30 ; '0'
00000000000062b0         db  0x86 ; '.'
00000000000062b1         db  0x06 ; '.'
00000000000062b2         db  0x41 ; 'A'
00000000000062b3         db  0x0e ; '.'
00000000000062b4         db  0x38 ; '8'
00000000000062b5         db  0x83 ; '.'
00000000000062b6         db  0x07 ; '.'
00000000000062b7         db  0x44 ; 'D'
00000000000062b8         db  0x0e ; '.'
00000000000062b9         db  0x50 ; 'P'
00000000000062ba         db  0x03 ; '.'
00000000000062bb         db  0xd3 ; '.'
00000000000062bc         db  0x01 ; '.'
00000000000062bd         db  0x0a ; '.'
00000000000062be         db  0x0e ; '.'
00000000000062bf         db  0x38 ; '8'
00000000000062c0         db  0x41 ; 'A'
00000000000062c1         db  0x0e ; '.'
00000000000062c2         db  0x30 ; '0'
00000000000062c3         db  0x41 ; 'A'
00000000000062c4         db  0x0e ; '.'
00000000000062c5         db  0x28 ; '('
00000000000062c6         db  0x42 ; 'B'
00000000000062c7         db  0x0e ; '.'
00000000000062c8         db  0x20 ; ' '
00000000000062c9         db  0x42 ; 'B'
00000000000062ca         db  0x0e ; '.'
00000000000062cb         db  0x18 ; '.'
00000000000062cc         db  0x42 ; 'B'
00000000000062cd         db  0x0e ; '.'
00000000000062ce         db  0x10 ; '.'
00000000000062cf         db  0x42 ; 'B'
00000000000062d0         db  0x0e ; '.'
00000000000062d1         db  0x08 ; '.'
00000000000062d2         db  0x45 ; 'E'
00000000000062d3         db  0x0b ; '.'
00000000000062d4         dd         0x00000028                                  ; Length of the record
00000000000062d8         dd         0x00000110                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
00000000000062dc         db         0xc4, 0xc0, 2 dup (0xff)                    ; begin 0x23a0
00000000000062e0         db         0xda, 0x03, 2 dup (0x00)                    ; length 0x3da (end at 0x277a)
00000000000062e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000062e5         db  0x42 ; 'B'
00000000000062e6         db  0x0e ; '.'
00000000000062e7         db  0x10 ; '.'
00000000000062e8         db  0x8d ; '.'
00000000000062e9         db  0x02 ; '.'
00000000000062ea         db  0x42 ; 'B'
00000000000062eb         db  0x0e ; '.'
00000000000062ec         db  0x18 ; '.'
00000000000062ed         db  0x8c ; '.'
00000000000062ee         db  0x03 ; '.'
00000000000062ef         db  0x46 ; 'F'
00000000000062f0         db  0x0e ; '.'
00000000000062f1         db  0x20 ; ' '
00000000000062f2         db  0x86 ; '.'
00000000000062f3         db  0x04 ; '.'
00000000000062f4         db  0x41 ; 'A'
00000000000062f5         db  0x0e ; '.'
00000000000062f6         db  0x28 ; '('
00000000000062f7         db  0x83 ; '.'
00000000000062f8         db  0x05 ; '.'
00000000000062f9         db  0x49 ; 'I'
00000000000062fa         db  0x0e ; '.'
00000000000062fb         db  0xb0 ; '.'
00000000000062fc         db  0x01 ; '.'
00000000000062fd         db  0x00 ; '.'
00000000000062fe         db  0x00 ; '.'
00000000000062ff         db  0x00 ; '.'
0000000000006300         dd         0x00000044                                  ; Length of the record
0000000000006304         dd         0x0000013c                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006308         db         0xa8, 0xb3, 2 dup (0xff)                    ; begin 0x16b0
000000000000630c         db         0xf1, 0x02, 2 dup (0x00)                    ; length 0x2f1 (end at 0x19a1)
0000000000006310         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006311         db  0x42 ; 'B'
0000000000006312         db  0x0e ; '.'
0000000000006313         db  0x10 ; '.'
0000000000006314         db  0x8d ; '.'
0000000000006315         db  0x02 ; '.'
0000000000006316         db  0x42 ; 'B'
0000000000006317         db  0x0e ; '.'
0000000000006318         db  0x18 ; '.'
0000000000006319         db  0x8c ; '.'
000000000000631a         db  0x03 ; '.'
000000000000631b         db  0x48 ; 'H'
000000000000631c         db  0x0e ; '.'
000000000000631d         db  0x20 ; ' '
000000000000631e         db  0x86 ; '.'
000000000000631f         db  0x04 ; '.'
0000000000006320         db  0x41 ; 'A'
0000000000006321         db  0x0e ; '.'
0000000000006322         db  0x28 ; '('
0000000000006323         db  0x83 ; '.'
0000000000006324         db  0x05 ; '.'
0000000000006325         db  0x50 ; 'P'
0000000000006326         db  0x0e ; '.'
0000000000006327         db  0x30 ; '0'
0000000000006328         db  0x02 ; '.'
0000000000006329         db  0xaa ; '.'
000000000000632a         db  0x0a ; '.'
000000000000632b         db  0x0e ; '.'
000000000000632c         db  0x38 ; '8'
000000000000632d         db  0x50 ; 'P'
000000000000632e         db  0x0e ; '.'
000000000000632f         db  0x40 ; '@'
0000000000006330         db  0x71 ; 'q'
0000000000006331         db  0x0b ; '.'
0000000000006332         db  0x03 ; '.'
0000000000006333         db  0x18 ; '.'
0000000000006334         db  0x01 ; '.'
0000000000006335         db  0x0a ; '.'
0000000000006336         db  0x0e ; '.'
0000000000006337         db  0x28 ; '('
0000000000006338         db  0x44 ; 'D'
0000000000006339         db  0x0e ; '.'
000000000000633a         db  0x20 ; ' '
000000000000633b         db  0x41 ; 'A'
000000000000633c         db  0x0e ; '.'
000000000000633d         db  0x18 ; '.'
000000000000633e         db  0x42 ; 'B'
000000000000633f         db  0x0e ; '.'
0000000000006340         db  0x10 ; '.'
0000000000006341         db  0x42 ; 'B'
0000000000006342         db  0x0e ; '.'
0000000000006343         db  0x08 ; '.'
0000000000006344         db  0x41 ; 'A'
0000000000006345         db  0x0b ; '.'
0000000000006346         db  0x00 ; '.'
0000000000006347         db  0x00 ; '.'
0000000000006348         dd         0x00000010                                  ; Length of the record
000000000000634c         dd         0x00000184                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006350         db         0x30, 0xc4, 2 dup (0xff)                    ; begin 0x2780
0000000000006354         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2788)
0000000000006358         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006359         align      4
000000000000635c         dd         0x00000010                                  ; Length of the record
0000000000006360         dd         0x00000198                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006364         db         0x2c, 0xc4, 2 dup (0xff)                    ; begin 0x2790
0000000000006368         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2798)
000000000000636c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000636d         align      16
0000000000006370         dd         0x0000002c                                  ; Length of the record
0000000000006374         dd         0x000001ac                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006378         db         0x28, 0xc4, 2 dup (0xff)                    ; begin 0x27a0
000000000000637c         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x2844)
0000000000006380         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006381         db  0x41 ; 'A'
0000000000006382         db  0x0e ; '.'
0000000000006383         db  0x10 ; '.'
0000000000006384         db  0x86 ; '.'
0000000000006385         db  0x02 ; '.'
0000000000006386         db  0x41 ; 'A'
0000000000006387         db  0x0e ; '.'
0000000000006388         db  0x18 ; '.'
0000000000006389         db  0x83 ; '.'
000000000000638a         db  0x03 ; '.'
000000000000638b         db  0x44 ; 'D'
000000000000638c         db  0x0e ; '.'
000000000000638d         db  0x20 ; ' '
000000000000638e         db  0x7a ; 'z'
000000000000638f         db  0x0a ; '.'
0000000000006390         db  0x0e ; '.'
0000000000006391         db  0x18 ; '.'
0000000000006392         db  0x41 ; 'A'
0000000000006393         db  0x0e ; '.'
0000000000006394         db  0x10 ; '.'
0000000000006395         db  0x41 ; 'A'
0000000000006396         db  0x0e ; '.'
0000000000006397         db  0x08 ; '.'
0000000000006398         db  0x41 ; 'A'
0000000000006399         db  0x0b ; '.'
000000000000639a         db  0x00 ; '.'
000000000000639b         db  0x00 ; '.'
000000000000639c         db  0x00 ; '.'
000000000000639d         db  0x00 ; '.'
000000000000639e         db  0x00 ; '.'
000000000000639f         db  0x00 ; '.'
00000000000063a0         dd         0x00000010                                  ; Length of the record
00000000000063a4         dd         0x000001dc                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
00000000000063a8         db         0xa8, 0xc4, 2 dup (0xff)                    ; begin 0x2850
00000000000063ac         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x2855)
00000000000063b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000063b1         align      4
00000000000063b4         dd         0x00000018                                  ; Length of the record
00000000000063b8         dd         0x000001f0                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
00000000000063bc         db         0xa4, 0xc4, 2 dup (0xff)                    ; begin 0x2860
00000000000063c0         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0x2882)
00000000000063c4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000063c5         db  0x46 ; 'F'
00000000000063c6         db  0x0e ; '.'
00000000000063c7         db  0x10 ; '.'
00000000000063c8         db  0x83 ; '.'
00000000000063c9         db  0x02 ; '.'
00000000000063ca         db  0x4e ; 'N'
00000000000063cb         db  0xc3 ; '.'
00000000000063cc         db  0x0e ; '.'
00000000000063cd         db  0x08 ; '.'
00000000000063ce         db  0x00 ; '.'
00000000000063cf         db  0x00 ; '.'
00000000000063d0         dd         0x0000001c                                  ; Length of the record
00000000000063d4         dd         0x0000020c                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
00000000000063d8         db         0xb8, 0xc4, 2 dup (0xff)                    ; begin 0x2890
00000000000063dc         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x292f)
00000000000063e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000063e1         db  0x44 ; 'D'
00000000000063e2         db  0x0e ; '.'
00000000000063e3         db  0x10 ; '.'
00000000000063e4         db  0x83 ; '.'
00000000000063e5         db  0x02 ; '.'
00000000000063e6         db  0x02 ; '.'
00000000000063e7         db  0x78 ; 'x'
00000000000063e8         db  0x0a ; '.'
00000000000063e9         db  0x0e ; '.'
00000000000063ea         db  0x08 ; '.'
00000000000063eb         db  0x41 ; 'A'
00000000000063ec         db  0x0b ; '.'
00000000000063ed         db  0x00 ; '.'
00000000000063ee         db  0x00 ; '.'
00000000000063ef         db  0x00 ; '.'
00000000000063f0         dd         0x00000040                                  ; Length of the record
00000000000063f4         dd         0x0000022c                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
00000000000063f8         db         0x38, 0xc5, 2 dup (0xff)                    ; begin 0x2930
00000000000063fc         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x2a17)
0000000000006400         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006401         db  0x41 ; 'A'
0000000000006402         db  0x0e ; '.'
0000000000006403         db  0x10 ; '.'
0000000000006404         db  0x86 ; '.'
0000000000006405         db  0x02 ; '.'
0000000000006406         db  0x41 ; 'A'
0000000000006407         db  0x0e ; '.'
0000000000006408         db  0x18 ; '.'
0000000000006409         db  0x83 ; '.'
000000000000640a         db  0x03 ; '.'
000000000000640b         db  0x49 ; 'I'
000000000000640c         db  0x0e ; '.'
000000000000640d         db  0x20 ; ' '
000000000000640e         db  0x6e ; 'n'
000000000000640f         db  0x0a ; '.'
0000000000006410         db  0x0e ; '.'
0000000000006411         db  0x18 ; '.'
0000000000006412         db  0x41 ; 'A'
0000000000006413         db  0x0e ; '.'
0000000000006414         db  0x10 ; '.'
0000000000006415         db  0x41 ; 'A'
0000000000006416         db  0x0e ; '.'
0000000000006417         db  0x08 ; '.'
0000000000006418         db  0x45 ; 'E'
0000000000006419         db  0x0b ; '.'
000000000000641a         db  0x02 ; '.'
000000000000641b         db  0x4a ; 'J'
000000000000641c         db  0x0a ; '.'
000000000000641d         db  0x0e ; '.'
000000000000641e         db  0x18 ; '.'
000000000000641f         db  0x41 ; 'A'
0000000000006420         db  0x0e ; '.'
0000000000006421         db  0x10 ; '.'
0000000000006422         db  0x41 ; 'A'
0000000000006423         db  0x0e ; '.'
0000000000006424         db  0x08 ; '.'
0000000000006425         db  0x44 ; 'D'
0000000000006426         db  0x0b ; '.'
0000000000006427         db  0x02 ; '.'
0000000000006428         db  0x54 ; 'T'
0000000000006429         db  0x0e ; '.'
000000000000642a         db  0x18 ; '.'
000000000000642b         db  0x41 ; 'A'
000000000000642c         db  0x0e ; '.'
000000000000642d         db  0x10 ; '.'
000000000000642e         db  0x41 ; 'A'
000000000000642f         db  0x0e ; '.'
0000000000006430         db  0x08 ; '.'
0000000000006431         db  0x00 ; '.'
0000000000006432         db  0x00 ; '.'
0000000000006433         db  0x00 ; '.'
0000000000006434         dd         0x00000074                                  ; Length of the record
0000000000006438         dd         0x00000270                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
000000000000643c         db         0xe4, 0xc5, 2 dup (0xff)                    ; begin 0x2a20
0000000000006440         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x3c54)
0000000000006444         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006445         db  0x42 ; 'B'
0000000000006446         db  0x0e ; '.'
0000000000006447         db  0x10 ; '.'
0000000000006448         db  0x8f ; '.'
0000000000006449         db  0x02 ; '.'
000000000000644a         db  0x42 ; 'B'
000000000000644b         db  0x0e ; '.'
000000000000644c         db  0x18 ; '.'
000000000000644d         db  0x8e ; '.'
000000000000644e         db  0x03 ; '.'
000000000000644f         db  0x45 ; 'E'
0000000000006450         db  0x0e ; '.'
0000000000006451         db  0x20 ; ' '
0000000000006452         db  0x8d ; '.'
0000000000006453         db  0x04 ; '.'
0000000000006454         db  0x42 ; 'B'
0000000000006455         db  0x0e ; '.'
0000000000006456         db  0x28 ; '('
0000000000006457         db  0x8c ; '.'
0000000000006458         db  0x05 ; '.'
0000000000006459         db  0x44 ; 'D'
000000000000645a         db  0x0e ; '.'
000000000000645b         db  0x30 ; '0'
000000000000645c         db  0x86 ; '.'
000000000000645d         db  0x06 ; '.'
000000000000645e         db  0x41 ; 'A'
000000000000645f         db  0x0e ; '.'
0000000000006460         db  0x38 ; '8'
0000000000006461         db  0x83 ; '.'
0000000000006462         db  0x07 ; '.'
0000000000006463         db  0x53 ; 'S'
0000000000006464         db  0x0e ; '.'
0000000000006465         db  0xf0 ; '.'
0000000000006466         db  0x01 ; '.'
0000000000006467         db  0x03 ; '.'
0000000000006468         db  0x81 ; '.'
0000000000006469         db  0x0b ; '.'
000000000000646a         db  0x0e ; '.'
000000000000646b         db  0xf8 ; '.'
000000000000646c         db  0x01 ; '.'
000000000000646d         db  0x4a ; 'J'
000000000000646e         db  0x0e ; '.'
000000000000646f         db  0x80 ; '.'
0000000000006470         db  0x02 ; '.'
0000000000006471         db  0x44 ; 'D'
0000000000006472         db  0x0e ; '.'
0000000000006473         db  0x88 ; '.'
0000000000006474         db  0x02 ; '.'
0000000000006475         db  0x45 ; 'E'
0000000000006476         db  0x0e ; '.'
0000000000006477         db  0x90 ; '.'
0000000000006478         db  0x02 ; '.'
0000000000006479         db  0x5f ; '_'
000000000000647a         db  0x0e ; '.'
000000000000647b         db  0xf0 ; '.'
000000000000647c         db  0x01 ; '.'
000000000000647d         db  0x64 ; 'd'
000000000000647e         db  0x0a ; '.'
000000000000647f         db  0x0e ; '.'
0000000000006480         db  0x38 ; '8'
0000000000006481         db  0x41 ; 'A'
0000000000006482         db  0x0e ; '.'
0000000000006483         db  0x30 ; '0'
0000000000006484         db  0x41 ; 'A'
0000000000006485         db  0x0e ; '.'
0000000000006486         db  0x28 ; '('
0000000000006487         db  0x42 ; 'B'
0000000000006488         db  0x0e ; '.'
0000000000006489         db  0x20 ; ' '
000000000000648a         db  0x42 ; 'B'
000000000000648b         db  0x0e ; '.'
000000000000648c         db  0x18 ; '.'
000000000000648d         db  0x42 ; 'B'
000000000000648e         db  0x0e ; '.'
000000000000648f         db  0x10 ; '.'
0000000000006490         db  0x42 ; 'B'
0000000000006491         db  0x0e ; '.'
0000000000006492         db  0x08 ; '.'
0000000000006493         db  0x44 ; 'D'
0000000000006494         db  0x0b ; '.'
0000000000006495         db  0x03 ; '.'
0000000000006496         db  0x99 ; '.'
0000000000006497         db  0x05 ; '.'
0000000000006498         db  0x0e ; '.'
0000000000006499         db  0xf8 ; '.'
000000000000649a         db  0x01 ; '.'
000000000000649b         db  0x4d ; 'M'
000000000000649c         db  0x0e ; '.'
000000000000649d         db  0x80 ; '.'
000000000000649e         db  0x02 ; '.'
000000000000649f         db  0x44 ; 'D'
00000000000064a0         db  0x0e ; '.'
00000000000064a1         db  0x88 ; '.'
00000000000064a2         db  0x02 ; '.'
00000000000064a3         db  0x47 ; 'G'
00000000000064a4         db  0x0e ; '.'
00000000000064a5         db  0x90 ; '.'
00000000000064a6         db  0x02 ; '.'
00000000000064a7         db  0x5b ; '['
00000000000064a8         db  0x0e ; '.'
00000000000064a9         db  0xf0 ; '.'
00000000000064aa         db  0x01 ; '.'
00000000000064ab         db  0x00 ; '.'
00000000000064ac         dd         0x00000068                                  ; Length of the record
00000000000064b0         dd         0x000002e8                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
00000000000064b4         db         0xac, 0xd7, 2 dup (0xff)                    ; begin 0x3c60
00000000000064b8         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x3e0b)
00000000000064bc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000064bd         db  0x42 ; 'B'
00000000000064be         db  0x0e ; '.'
00000000000064bf         db  0x10 ; '.'
00000000000064c0         db  0x8f ; '.'
00000000000064c1         db  0x02 ; '.'
00000000000064c2         db  0x42 ; 'B'
00000000000064c3         db  0x0e ; '.'
00000000000064c4         db  0x18 ; '.'
00000000000064c5         db  0x8e ; '.'
00000000000064c6         db  0x03 ; '.'
00000000000064c7         db  0x45 ; 'E'
00000000000064c8         db  0x0e ; '.'
00000000000064c9         db  0x20 ; ' '
00000000000064ca         db  0x8d ; '.'
00000000000064cb         db  0x04 ; '.'
00000000000064cc         db  0x42 ; 'B'
00000000000064cd         db  0x0e ; '.'
00000000000064ce         db  0x28 ; '('
00000000000064cf         db  0x8c ; '.'
00000000000064d0         db  0x05 ; '.'
00000000000064d1         db  0x44 ; 'D'
00000000000064d2         db  0x0e ; '.'
00000000000064d3         db  0x30 ; '0'
00000000000064d4         db  0x86 ; '.'
00000000000064d5         db  0x06 ; '.'
00000000000064d6         db  0x41 ; 'A'
00000000000064d7         db  0x0e ; '.'
00000000000064d8         db  0x38 ; '8'
00000000000064d9         db  0x83 ; '.'
00000000000064da         db  0x07 ; '.'
00000000000064db         db  0x47 ; 'G'
00000000000064dc         db  0x0e ; '.'
00000000000064dd         db  0x60 ; '`'
00000000000064de         db  0x02 ; '.'
00000000000064df         db  0x99 ; '.'
00000000000064e0         db  0x0e ; '.'
00000000000064e1         db  0x68 ; 'h'
00000000000064e2         db  0x5f ; '_'
00000000000064e3         db  0x0e ; '.'
00000000000064e4         db  0x70 ; 'p'
00000000000064e5         db  0x46 ; 'F'
00000000000064e6         db  0x0e ; '.'
00000000000064e7         db  0x78 ; 'x'
00000000000064e8         db  0x42 ; 'B'
00000000000064e9         db  0x0e ; '.'
00000000000064ea         db  0x80 ; '.'
00000000000064eb         db  0x01 ; '.'
00000000000064ec         db  0x59 ; 'Y'
00000000000064ed         db  0x0e ; '.'
00000000000064ee         db  0x60 ; '`'
00000000000064ef         db  0x02 ; '.'
00000000000064f0         db  0x40 ; '@'
00000000000064f1         db  0x0e ; '.'
00000000000064f2         db  0x68 ; 'h'
00000000000064f3         db  0x4b ; 'K'
00000000000064f4         db  0x0e ; '.'
00000000000064f5         db  0x70 ; 'p'
00000000000064f6         db  0x43 ; 'C'
00000000000064f7         db  0x0e ; '.'
00000000000064f8         db  0x78 ; 'x'
00000000000064f9         db  0x45 ; 'E'
00000000000064fa         db  0x0e ; '.'
00000000000064fb         db  0x80 ; '.'
00000000000064fc         db  0x01 ; '.'
00000000000064fd         db  0x5e ; '^'
00000000000064fe         db  0x0e ; '.'
00000000000064ff         db  0x60 ; '`'
0000000000006500         db  0x4c ; 'L'
0000000000006501         db  0x0a ; '.'
0000000000006502         db  0x0e ; '.'
0000000000006503         db  0x38 ; '8'
0000000000006504         db  0x44 ; 'D'
0000000000006505         db  0x0e ; '.'
0000000000006506         db  0x30 ; '0'
0000000000006507         db  0x41 ; 'A'
0000000000006508         db  0x0e ; '.'
0000000000006509         db  0x28 ; '('
000000000000650a         db  0x42 ; 'B'
000000000000650b         db  0x0e ; '.'
000000000000650c         db  0x20 ; ' '
000000000000650d         db  0x42 ; 'B'
000000000000650e         db  0x0e ; '.'
000000000000650f         db  0x18 ; '.'
0000000000006510         db  0x42 ; 'B'
0000000000006511         db  0x0e ; '.'
0000000000006512         db  0x10 ; '.'
0000000000006513         db  0x42 ; 'B'
0000000000006514         db  0x0e ; '.'
0000000000006515         db  0x08 ; '.'
0000000000006516         db  0x46 ; 'F'
0000000000006517         db  0x0b ; '.'
0000000000006518         dd         0x00000028                                  ; Length of the record
000000000000651c         dd         0x00000354                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006520         db         0xf0, 0xd8, 2 dup (0xff)                    ; begin 0x3e10
0000000000006524         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x3e46)
0000000000006528         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006529         db  0x42 ; 'B'
000000000000652a         db  0x0e ; '.'
000000000000652b         db  0x10 ; '.'
000000000000652c         db  0x8c ; '.'
000000000000652d         db  0x02 ; '.'
000000000000652e         db  0x41 ; 'A'
000000000000652f         db  0x0e ; '.'
0000000000006530         db  0x18 ; '.'
0000000000006531         db  0x86 ; '.'
0000000000006532         db  0x03 ; '.'
0000000000006533         db  0x41 ; 'A'
0000000000006534         db  0x0e ; '.'
0000000000006535         db  0x20 ; ' '
0000000000006536         db  0x83 ; '.'
0000000000006537         db  0x04 ; '.'
0000000000006538         db  0x6e ; 'n'
0000000000006539         db  0x0e ; '.'
000000000000653a         db  0x18 ; '.'
000000000000653b         db  0x41 ; 'A'
000000000000653c         db  0x0e ; '.'
000000000000653d         db  0x10 ; '.'
000000000000653e         db  0x42 ; 'B'
000000000000653f         db  0x0e ; '.'
0000000000006540         db  0x08 ; '.'
0000000000006541         db  0x00 ; '.'
0000000000006542         db  0x00 ; '.'
0000000000006543         db  0x00 ; '.'
0000000000006544         dd         0x00000010                                  ; Length of the record
0000000000006548         dd         0x00000380                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
000000000000654c         db         0x04, 0xd9, 2 dup (0xff)                    ; begin 0x3e50
0000000000006550         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x3e61)
0000000000006554         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006555         align      8
0000000000006558         dd         0x00000010                                  ; Length of the record
000000000000655c         dd         0x00000394                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006560         db         0x10, 0xd9, 2 dup (0xff)                    ; begin 0x3e70
0000000000006564         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x3e81)
0000000000006568         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006569         align      4
000000000000656c         dd         0x00000010                                  ; Length of the record
0000000000006570         dd         0x000003a8                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006574         db         0x1c, 0xd9, 2 dup (0xff)                    ; begin 0x3e90
0000000000006578         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x3ec5)
000000000000657c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000657d         align      128
0000000000006580         dd         0x00000010                                  ; Length of the record
0000000000006584         dd         0x000003bc                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006588         db         0x48, 0xd9, 2 dup (0xff)                    ; begin 0x3ed0
000000000000658c         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x3ee5)
0000000000006590         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006591         align      4
0000000000006594         dd         0x00000010                                  ; Length of the record
0000000000006598         dd         0x000003d0                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
000000000000659c         db         0x54, 0xd9, 2 dup (0xff)                    ; begin 0x3ef0
00000000000065a0         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x3f20)
00000000000065a4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000065a5         db  0x6b ; 'k'
00000000000065a6         db  0x0e ; '.'
00000000000065a7         db  0x10 ; '.'
00000000000065a8         dd         0x00000050                                  ; Length of the record
00000000000065ac         dd         0x000003e4                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
00000000000065b0         db         0x70, 0xd9, 2 dup (0xff)                    ; begin 0x3f20
00000000000065b4         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x3f94)
00000000000065b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000065b9         db  0x42 ; 'B'
00000000000065ba         db  0x0e ; '.'
00000000000065bb         db  0x10 ; '.'
00000000000065bc         db  0x8f ; '.'
00000000000065bd         db  0x02 ; '.'
00000000000065be         db  0x42 ; 'B'
00000000000065bf         db  0x0e ; '.'
00000000000065c0         db  0x18 ; '.'
00000000000065c1         db  0x8e ; '.'
00000000000065c2         db  0x03 ; '.'
00000000000065c3         db  0x49 ; 'I'
00000000000065c4         db  0x0e ; '.'
00000000000065c5         db  0x20 ; ' '
00000000000065c6         db  0x8d ; '.'
00000000000065c7         db  0x04 ; '.'
00000000000065c8         db  0x42 ; 'B'
00000000000065c9         db  0x0e ; '.'
00000000000065ca         db  0x28 ; '('
00000000000065cb         db  0x8c ; '.'
00000000000065cc         db  0x05 ; '.'
00000000000065cd         db  0x44 ; 'D'
00000000000065ce         db  0x0e ; '.'
00000000000065cf         db  0x30 ; '0'
00000000000065d0         db  0x86 ; '.'
00000000000065d1         db  0x06 ; '.'
00000000000065d2         db  0x41 ; 'A'
00000000000065d3         db  0x0e ; '.'
00000000000065d4         db  0x38 ; '8'
00000000000065d5         db  0x83 ; '.'
00000000000065d6         db  0x07 ; '.'
00000000000065d7         db  0x4d ; 'M'
00000000000065d8         db  0x0e ; '.'
00000000000065d9         db  0x50 ; 'P'
00000000000065da         db  0x5f ; '_'
00000000000065db         db  0x0e ; '.'
00000000000065dc         db  0x58 ; 'X'
00000000000065dd         db  0x47 ; 'G'
00000000000065de         db  0x0e ; '.'
00000000000065df         db  0x60 ; '`'
00000000000065e0         db  0x46 ; 'F'
00000000000065e1         db  0x0e ; '.'
00000000000065e2         db  0x68 ; 'h'
00000000000065e3         db  0x44 ; 'D'
00000000000065e4         db  0x0e ; '.'
00000000000065e5         db  0x70 ; 'p'
00000000000065e6         db  0x58 ; 'X'
00000000000065e7         db  0x0e ; '.'
00000000000065e8         db  0x38 ; '8'
00000000000065e9         db  0x41 ; 'A'
00000000000065ea         db  0x0e ; '.'
00000000000065eb         db  0x30 ; '0'
00000000000065ec         db  0x41 ; 'A'
00000000000065ed         db  0x0e ; '.'
00000000000065ee         db  0x28 ; '('
00000000000065ef         db  0x42 ; 'B'
00000000000065f0         db  0x0e ; '.'
00000000000065f1         db  0x20 ; ' '
00000000000065f2         db  0x42 ; 'B'
00000000000065f3         db  0x0e ; '.'
00000000000065f4         db  0x18 ; '.'
00000000000065f5         db  0x42 ; 'B'
00000000000065f6         db  0x0e ; '.'
00000000000065f7         db  0x10 ; '.'
00000000000065f8         db  0x42 ; 'B'
00000000000065f9         db  0x0e ; '.'
00000000000065fa         db  0x08 ; '.'
00000000000065fb         db  0x00 ; '.'
00000000000065fc         dd         0x00000068                                  ; Length of the record
0000000000006600         dd         0x00000438                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006604         db         0x9c, 0xd9, 2 dup (0xff)                    ; begin 0x3fa0
0000000000006608         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x4083)
000000000000660c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000660d         db  0x42 ; 'B'
000000000000660e         db  0x0e ; '.'
000000000000660f         db  0x10 ; '.'
0000000000006610         db  0x8f ; '.'
0000000000006611         db  0x02 ; '.'
0000000000006612         db  0x42 ; 'B'
0000000000006613         db  0x0e ; '.'
0000000000006614         db  0x18 ; '.'
0000000000006615         db  0x8e ; '.'
0000000000006616         db  0x03 ; '.'
0000000000006617         db  0x49 ; 'I'
0000000000006618         db  0x0e ; '.'
0000000000006619         db  0x20 ; ' '
000000000000661a         db  0x8d ; '.'
000000000000661b         db  0x04 ; '.'
000000000000661c         db  0x42 ; 'B'
000000000000661d         db  0x0e ; '.'
000000000000661e         db  0x28 ; '('
000000000000661f         db  0x8c ; '.'
0000000000006620         db  0x05 ; '.'
0000000000006621         db  0x44 ; 'D'
0000000000006622         db  0x0e ; '.'
0000000000006623         db  0x30 ; '0'
0000000000006624         db  0x86 ; '.'
0000000000006625         db  0x06 ; '.'
0000000000006626         db  0x41 ; 'A'
0000000000006627         db  0x0e ; '.'
0000000000006628         db  0x38 ; '8'
0000000000006629         db  0x83 ; '.'
000000000000662a         db  0x07 ; '.'
000000000000662b         db  0x4d ; 'M'
000000000000662c         db  0x0e ; '.'
000000000000662d         db  0x70 ; 'p'
000000000000662e         db  0x65 ; 'e'
000000000000662f         db  0x0e ; '.'
0000000000006630         db  0x78 ; 'x'
0000000000006631         db  0x4d ; 'M'
0000000000006632         db  0x0e ; '.'
0000000000006633         db  0x80 ; '.'
0000000000006634         db  0x01 ; '.'
0000000000006635         db  0x46 ; 'F'
0000000000006636         db  0x0e ; '.'
0000000000006637         db  0x88 ; '.'
0000000000006638         db  0x01 ; '.'
0000000000006639         db  0x42 ; 'B'
000000000000663a         db  0x0e ; '.'
000000000000663b         db  0x90 ; '.'
000000000000663c         db  0x01 ; '.'
000000000000663d         db  0x5e ; '^'
000000000000663e         db  0x0e ; '.'
000000000000663f         db  0x70 ; 'p'
0000000000006640         db  0x56 ; 'V'
0000000000006641         db  0x0e ; '.'
0000000000006642         db  0x78 ; 'x'
0000000000006643         db  0x43 ; 'C'
0000000000006644         db  0x0e ; '.'
0000000000006645         db  0x80 ; '.'
0000000000006646         db  0x01 ; '.'
0000000000006647         db  0x43 ; 'C'
0000000000006648         db  0x0e ; '.'
0000000000006649         db  0x88 ; '.'
000000000000664a         db  0x01 ; '.'
000000000000664b         db  0x56 ; 'V'
000000000000664c         db  0x0e ; '.'
000000000000664d         db  0x90 ; '.'
000000000000664e         db  0x01 ; '.'
000000000000664f         db  0x52 ; 'R'
0000000000006650         db  0x0e ; '.'
0000000000006651         db  0x70 ; 'p'
0000000000006652         db  0x5b ; '['
0000000000006653         db  0x0e ; '.'
0000000000006654         db  0x38 ; '8'
0000000000006655         db  0x41 ; 'A'
0000000000006656         db  0x0e ; '.'
0000000000006657         db  0x30 ; '0'
0000000000006658         db  0x41 ; 'A'
0000000000006659         db  0x0e ; '.'
000000000000665a         db  0x28 ; '('
000000000000665b         db  0x42 ; 'B'
000000000000665c         db  0x0e ; '.'
000000000000665d         db  0x20 ; ' '
000000000000665e         db  0x42 ; 'B'
000000000000665f         db  0x0e ; '.'
0000000000006660         db  0x18 ; '.'
0000000000006661         db  0x42 ; 'B'
0000000000006662         db  0x0e ; '.'
0000000000006663         db  0x10 ; '.'
0000000000006664         db  0x42 ; 'B'
0000000000006665         db  0x0e ; '.'
0000000000006666         db  0x08 ; '.'
0000000000006667         db  0x00 ; '.'
0000000000006668         dd         0x00000010                                  ; Length of the record
000000000000666c         dd         0x000004a4                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006670         db         0x20, 0xda, 2 dup (0xff)                    ; begin 0x4090
0000000000006674         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x409a)
0000000000006678         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006679         align      4
000000000000667c         dd         0x00000028                                  ; Length of the record
0000000000006680         dd         0x000004b8                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006684         db         0x1c, 0xda, 2 dup (0xff)                    ; begin 0x40a0
0000000000006688         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x4133)
000000000000668c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000668d         db  0x48 ; 'H'
000000000000668e         db  0x0e ; '.'
000000000000668f         db  0x10 ; '.'
0000000000006690         db  0x8c ; '.'
0000000000006691         db  0x02 ; '.'
0000000000006692         db  0x48 ; 'H'
0000000000006693         db  0x0e ; '.'
0000000000006694         db  0x18 ; '.'
0000000000006695         db  0x86 ; '.'
0000000000006696         db  0x03 ; '.'
0000000000006697         db  0x41 ; 'A'
0000000000006698         db  0x0e ; '.'
0000000000006699         db  0x20 ; ' '
000000000000669a         db  0x83 ; '.'
000000000000669b         db  0x04 ; '.'
000000000000669c         db  0x02 ; '.'
000000000000669d         db  0x74 ; 't'
000000000000669e         db  0x0e ; '.'
000000000000669f         db  0x18 ; '.'
00000000000066a0         db  0x4b ; 'K'
00000000000066a1         db  0x0e ; '.'
00000000000066a2         db  0x10 ; '.'
00000000000066a3         db  0x42 ; 'B'
00000000000066a4         db  0x0e ; '.'
00000000000066a5         db  0x08 ; '.'
00000000000066a6         db  0x00 ; '.'
00000000000066a7         db  0x00 ; '.'
00000000000066a8         dd         0x00000010                                  ; Length of the record
00000000000066ac         dd         0x000004e4                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
00000000000066b0         db         0x90, 0xda, 2 dup (0xff)                    ; begin 0x4140
00000000000066b4         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4153)
00000000000066b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000066b9         align      4
00000000000066bc         dd         0x00000010                                  ; Length of the record
00000000000066c0         dd         0x000004f8                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
00000000000066c4         db         0x9c, 0xda, 2 dup (0xff)                    ; begin 0x4160
00000000000066c8         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x416c)
00000000000066cc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000066cd         align      16
00000000000066d0         dd         0x00000010                                  ; Length of the record
00000000000066d4         dd         0x0000050c                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
00000000000066d8         db         0x98, 0xda, 2 dup (0xff)                    ; begin 0x4170
00000000000066dc         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x4188)
00000000000066e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000066e1         align      4
00000000000066e4         dd         0x00000010                                  ; Length of the record
00000000000066e8         dd         0x00000520                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
00000000000066ec         db         0xa4, 0xda, 2 dup (0xff)                    ; begin 0x4190
00000000000066f0         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x41a4)
00000000000066f4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000066f5         align      8
00000000000066f8         dd         0x00000018                                  ; Length of the record
00000000000066fc         dd         0x00000534                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006700         db         0xb0, 0xda, 2 dup (0xff)                    ; begin 0x41b0
0000000000006704         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x423e)
0000000000006708         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006709         db  0x44 ; 'D'
000000000000670a         db  0x0e ; '.'
000000000000670b         db  0x50 ; 'P'
000000000000670c         db  0x02 ; '.'
000000000000670d         db  0x7f ; '.'
000000000000670e         db  0x0a ; '.'
000000000000670f         db  0x0e ; '.'
0000000000006710         db  0x08 ; '.'
0000000000006711         db  0x41 ; 'A'
0000000000006712         db  0x0b ; '.'
0000000000006713         db  0x00 ; '.'
0000000000006714         dd         0x00000018                                  ; Length of the record
0000000000006718         dd         0x00000550                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
000000000000671c         db         0x24, 0xdb, 2 dup (0xff)                    ; begin 0x4240
0000000000006720         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x42ca)
0000000000006724         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006725         db  0x44 ; 'D'
0000000000006726         db  0x0e ; '.'
0000000000006727         db  0x50 ; 'P'
0000000000006728         db  0x02 ; '.'
0000000000006729         db  0x7b ; '{'
000000000000672a         db  0x0a ; '.'
000000000000672b         db  0x0e ; '.'
000000000000672c         db  0x08 ; '.'
000000000000672d         db  0x41 ; 'A'
000000000000672e         db  0x0b ; '.'
000000000000672f         db  0x00 ; '.'
0000000000006730         dd         0x00000010                                  ; Length of the record
0000000000006734         dd         0x0000056c                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006738         db         0x98, 0xdb, 2 dup (0xff)                    ; begin 0x42d0
000000000000673c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x42dc)
0000000000006740         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006741         align      4
0000000000006744         dd         0x00000010                                  ; Length of the record
0000000000006748         dd         0x00000580                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
000000000000674c         db         0x94, 0xdb, 2 dup (0xff)                    ; begin 0x42e0
0000000000006750         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x42ef)
0000000000006754         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006755         align      8
0000000000006758         dd         0x00000018                                  ; Length of the record
000000000000675c         dd         0x00000594                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006760         db         0x90, 0xdb, 2 dup (0xff)                    ; begin 0x42f0
0000000000006764         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x4388)
0000000000006768         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006769         db  0x44 ; 'D'
000000000000676a         db  0x0e ; '.'
000000000000676b         db  0x50 ; 'P'
000000000000676c         db  0x02 ; '.'
000000000000676d         db  0x8e ; '.'
000000000000676e         db  0x0a ; '.'
000000000000676f         db  0x0e ; '.'
0000000000006770         db  0x08 ; '.'
0000000000006771         db  0x41 ; 'A'
0000000000006772         db  0x0b ; '.'
0000000000006773         db  0x00 ; '.'
0000000000006774         dd         0x00000010                                  ; Length of the record
0000000000006778         dd         0x000005b0                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
000000000000677c         db         0x14, 0xdc, 2 dup (0xff)                    ; begin 0x4390
0000000000006780         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x43a0)
0000000000006784         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006785         align      8
0000000000006788         dd         0x00000010                                  ; Length of the record
000000000000678c         dd         0x000005c4                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006790         db         0x10, 0xdc, 2 dup (0xff)                    ; begin 0x43a0
0000000000006794         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x43b1)
0000000000006798         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006799         align      4
000000000000679c         dd         0x00000010                                  ; Length of the record
00000000000067a0         dd         0x000005d8                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
00000000000067a4         db         0x1c, 0xdc, 2 dup (0xff)                    ; begin 0x43c0
00000000000067a8         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x43ca)
00000000000067ac         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000067ad         align      16
00000000000067b0         dd         0x00000018                                  ; Length of the record
00000000000067b4         dd         0x000005ec                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
00000000000067b8         db         0x18, 0xdc, 2 dup (0xff)                    ; begin 0x43d0
00000000000067bc         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x445e)
00000000000067c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000067c1         db  0x44 ; 'D'
00000000000067c2         db  0x0e ; '.'
00000000000067c3         db  0x50 ; 'P'
00000000000067c4         db  0x02 ; '.'
00000000000067c5         db  0x7f ; '.'
00000000000067c6         db  0x0a ; '.'
00000000000067c7         db  0x0e ; '.'
00000000000067c8         db  0x08 ; '.'
00000000000067c9         db  0x41 ; 'A'
00000000000067ca         db  0x0b ; '.'
00000000000067cb         db  0x00 ; '.'
00000000000067cc         dd         0x00000018                                  ; Length of the record
00000000000067d0         dd         0x00000608                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
00000000000067d4         db         0x8c, 0xdc, 2 dup (0xff)                    ; begin 0x4460
00000000000067d8         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x44f1)
00000000000067dc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000067dd         db  0x44 ; 'D'
00000000000067de         db  0x0e ; '.'
00000000000067df         db  0x50 ; 'P'
00000000000067e0         db  0x02 ; '.'
00000000000067e1         db  0x82 ; '.'
00000000000067e2         db  0x0a ; '.'
00000000000067e3         db  0x0e ; '.'
00000000000067e4         db  0x08 ; '.'
00000000000067e5         db  0x41 ; 'A'
00000000000067e6         db  0x0b ; '.'
00000000000067e7         db  0x00 ; '.'
00000000000067e8         dd         0x00000010                                  ; Length of the record
00000000000067ec         dd         0x00000624                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
00000000000067f0         db         0x10, 0xdd, 2 dup (0xff)                    ; begin 0x4500
00000000000067f4         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x450c)
00000000000067f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000067f9         align      4
00000000000067fc         dd         0x00000010                                  ; Length of the record
0000000000006800         dd         0x00000638                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006804         db         0x0c, 0xdd, 2 dup (0xff)                    ; begin 0x4510
0000000000006808         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x4527)
000000000000680c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000680d         align      16
0000000000006810         dd         0x00000010                                  ; Length of the record
0000000000006814         dd         0x0000064c                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006818         db         0x18, 0xdd, 2 dup (0xff)                    ; begin 0x4530
000000000000681c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4543)
0000000000006820         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006821         align      4
0000000000006824         dd         0x00000010                                  ; Length of the record
0000000000006828         dd         0x00000660                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
000000000000682c         db         0x24, 0xdd, 2 dup (0xff)                    ; begin 0x4550
0000000000006830         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x455c)
0000000000006834         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006835         align      8
0000000000006838         dd         0x00000010                                  ; Length of the record
000000000000683c         dd         0x00000674                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006840         db         0x20, 0xdd, 2 dup (0xff)                    ; begin 0x4560
0000000000006844         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x4574)
0000000000006848         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006849         align      4
000000000000684c         dd         0x00000010                                  ; Length of the record
0000000000006850         dd         0x00000688                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006854         db         0x2c, 0xdd, 2 dup (0xff)                    ; begin 0x4580
0000000000006858         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4593)
000000000000685c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000685d         align      32
0000000000006860         dd         0x00000014                                  ; Length of the record
0000000000006864         dd         0x0000069c                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006868         db         0x38, 0xdd, 2 dup (0xff)                    ; begin 0x45a0
000000000000686c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x45b8)
0000000000006870         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006871         align      8
0000000000006878         dd         0x00000110                                  ; Length of the record
000000000000687c         dd         0x000006b4                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006880         db         0x40, 0xdd, 2 dup (0xff)                    ; begin 0x45c0
0000000000006884         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x49d7)
0000000000006888         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006889         db  0x42 ; 'B'
000000000000688a         db  0x0e ; '.'
000000000000688b         db  0x10 ; '.'
000000000000688c         db  0x8f ; '.'
000000000000688d         db  0x02 ; '.'
000000000000688e         db  0x42 ; 'B'
000000000000688f         db  0x0e ; '.'
0000000000006890         db  0x18 ; '.'
0000000000006891         db  0x8e ; '.'
0000000000006892         db  0x03 ; '.'
0000000000006893         db  0x42 ; 'B'
0000000000006894         db  0x0e ; '.'
0000000000006895         db  0x20 ; ' '
0000000000006896         db  0x8d ; '.'
0000000000006897         db  0x04 ; '.'
0000000000006898         db  0x42 ; 'B'
0000000000006899         db  0x0e ; '.'
000000000000689a         db  0x28 ; '('
000000000000689b         db  0x8c ; '.'
000000000000689c         db  0x05 ; '.'
000000000000689d         db  0x44 ; 'D'
000000000000689e         db  0x0e ; '.'
000000000000689f         db  0x30 ; '0'
00000000000068a0         db  0x86 ; '.'
00000000000068a1         db  0x06 ; '.'
00000000000068a2         db  0x41 ; 'A'
00000000000068a3         db  0x0e ; '.'
00000000000068a4         db  0x38 ; '8'
00000000000068a5         db  0x83 ; '.'
00000000000068a6         db  0x07 ; '.'
00000000000068a7         db  0x4a ; 'J'
00000000000068a8         db  0x0e ; '.'
00000000000068a9         db  0x60 ; '`'
00000000000068aa         db  0x02 ; '.'
00000000000068ab         db  0xdd ; '.'
00000000000068ac         db  0x0e ; '.'
00000000000068ad         db  0x68 ; 'h'
00000000000068ae         db  0x57 ; 'W'
00000000000068af         db  0x0e ; '.'
00000000000068b0         db  0x70 ; 'p'
00000000000068b1         db  0x42 ; 'B'
00000000000068b2         db  0x0e ; '.'
00000000000068b3         db  0x78 ; 'x'
00000000000068b4         db  0x42 ; 'B'
00000000000068b5         db  0x0e ; '.'
00000000000068b6         db  0x80 ; '.'
00000000000068b7         db  0x01 ; '.'
00000000000068b8         db  0x42 ; 'B'
00000000000068b9         db  0x0e ; '.'
00000000000068ba         db  0x88 ; '.'
00000000000068bb         db  0x01 ; '.'
00000000000068bc         db  0x42 ; 'B'
00000000000068bd         db  0x0e ; '.'
00000000000068be         db  0x90 ; '.'
00000000000068bf         db  0x01 ; '.'
00000000000068c0         db  0x53 ; 'S'
00000000000068c1         db  0x0e ; '.'
00000000000068c2         db  0x60 ; '`'
00000000000068c3         db  0x44 ; 'D'
00000000000068c4         db  0x0a ; '.'
00000000000068c5         db  0x0e ; '.'
00000000000068c6         db  0x38 ; '8'
00000000000068c7         db  0x41 ; 'A'
00000000000068c8         db  0x0e ; '.'
00000000000068c9         db  0x30 ; '0'
00000000000068ca         db  0x41 ; 'A'
00000000000068cb         db  0x0e ; '.'
00000000000068cc         db  0x28 ; '('
00000000000068cd         db  0x42 ; 'B'
00000000000068ce         db  0x0e ; '.'
00000000000068cf         db  0x20 ; ' '
00000000000068d0         db  0x42 ; 'B'
00000000000068d1         db  0x0e ; '.'
00000000000068d2         db  0x18 ; '.'
00000000000068d3         db  0x42 ; 'B'
00000000000068d4         db  0x0e ; '.'
00000000000068d5         db  0x10 ; '.'
00000000000068d6         db  0x42 ; 'B'
00000000000068d7         db  0x0e ; '.'
00000000000068d8         db  0x08 ; '.'
00000000000068d9         db  0x44 ; 'D'
00000000000068da         db  0x0b ; '.'
00000000000068db         db  0x02 ; '.'
00000000000068dc         db  0x78 ; 'x'
00000000000068dd         db  0x0a ; '.'
00000000000068de         db  0x0e ; '.'
00000000000068df         db  0x68 ; 'h'
00000000000068e0         db  0x48 ; 'H'
00000000000068e1         db  0x0b ; '.'
00000000000068e2         db  0x5a ; 'Z'
00000000000068e3         db  0x0a ; '.'
00000000000068e4         db  0x0e ; '.'
00000000000068e5         db  0x38 ; '8'
00000000000068e6         db  0x47 ; 'G'
00000000000068e7         db  0x0e ; '.'
00000000000068e8         db  0x30 ; '0'
00000000000068e9         db  0x41 ; 'A'
00000000000068ea         db  0x0e ; '.'
00000000000068eb         db  0x28 ; '('
00000000000068ec         db  0x42 ; 'B'
00000000000068ed         db  0x0e ; '.'
00000000000068ee         db  0x20 ; ' '
00000000000068ef         db  0x42 ; 'B'
00000000000068f0         db  0x0e ; '.'
00000000000068f1         db  0x18 ; '.'
00000000000068f2         db  0x42 ; 'B'
00000000000068f3         db  0x0e ; '.'
00000000000068f4         db  0x10 ; '.'
00000000000068f5         db  0x42 ; 'B'
00000000000068f6         db  0x0e ; '.'
00000000000068f7         db  0x08 ; '.'
00000000000068f8         db  0x56 ; 'V'
00000000000068f9         db  0x0b ; '.'
00000000000068fa         db  0x5e ; '^'
00000000000068fb         db  0x0a ; '.'
00000000000068fc         db  0x0e ; '.'
00000000000068fd         db  0x38 ; '8'
00000000000068fe         db  0x52 ; 'R'
00000000000068ff         db  0x0e ; '.'
0000000000006900         db  0x30 ; '0'
0000000000006901         db  0x41 ; 'A'
0000000000006902         db  0x0e ; '.'
0000000000006903         db  0x28 ; '('
0000000000006904         db  0x42 ; 'B'
0000000000006905         db  0x0e ; '.'
0000000000006906         db  0x20 ; ' '
0000000000006907         db  0x42 ; 'B'
0000000000006908         db  0x0e ; '.'
0000000000006909         db  0x18 ; '.'
000000000000690a         db  0x42 ; 'B'
000000000000690b         db  0x0e ; '.'
000000000000690c         db  0x10 ; '.'
000000000000690d         db  0x42 ; 'B'
000000000000690e         db  0x0e ; '.'
000000000000690f         db  0x08 ; '.'
0000000000006910         db  0x4f ; 'O'
0000000000006911         db  0x0b ; '.'
0000000000006912         db  0x62 ; 'b'
0000000000006913         db  0x0a ; '.'
0000000000006914         db  0x0e ; '.'
0000000000006915         db  0x38 ; '8'
0000000000006916         db  0x50 ; 'P'
0000000000006917         db  0x0e ; '.'
0000000000006918         db  0x30 ; '0'
0000000000006919         db  0x41 ; 'A'
000000000000691a         db  0x0e ; '.'
000000000000691b         db  0x28 ; '('
000000000000691c         db  0x42 ; 'B'
000000000000691d         db  0x0e ; '.'
000000000000691e         db  0x20 ; ' '
000000000000691f         db  0x42 ; 'B'
0000000000006920         db  0x0e ; '.'
0000000000006921         db  0x18 ; '.'
0000000000006922         db  0x42 ; 'B'
0000000000006923         db  0x0e ; '.'
0000000000006924         db  0x10 ; '.'
0000000000006925         db  0x42 ; 'B'
0000000000006926         db  0x0e ; '.'
0000000000006927         db  0x08 ; '.'
0000000000006928         db  0x55 ; 'U'
0000000000006929         db  0x0b ; '.'
000000000000692a         db  0x66 ; 'f'
000000000000692b         db  0x0e ; '.'
000000000000692c         db  0x68 ; 'h'
000000000000692d         db  0x42 ; 'B'
000000000000692e         db  0x0e ; '.'
000000000000692f         db  0x70 ; 'p'
0000000000006930         db  0x5c ; '\'
0000000000006931         db  0x0e ; '.'
0000000000006932         db  0x68 ; 'h'
0000000000006933         db  0x41 ; 'A'
0000000000006934         db  0x0e ; '.'
0000000000006935         db  0x60 ; '`'
0000000000006936         db  0x44 ; 'D'
0000000000006937         db  0x0a ; '.'
0000000000006938         db  0x0e ; '.'
0000000000006939         db  0x38 ; '8'
000000000000693a         db  0x41 ; 'A'
000000000000693b         db  0x0e ; '.'
000000000000693c         db  0x30 ; '0'
000000000000693d         db  0x41 ; 'A'
000000000000693e         db  0x0e ; '.'
000000000000693f         db  0x28 ; '('
0000000000006940         db  0x42 ; 'B'
0000000000006941         db  0x0e ; '.'
0000000000006942         db  0x20 ; ' '
0000000000006943         db  0x42 ; 'B'
0000000000006944         db  0x0e ; '.'
0000000000006945         db  0x18 ; '.'
0000000000006946         db  0x42 ; 'B'
0000000000006947         db  0x0e ; '.'
0000000000006948         db  0x10 ; '.'
0000000000006949         db  0x42 ; 'B'
000000000000694a         db  0x0e ; '.'
000000000000694b         db  0x08 ; '.'
000000000000694c         db  0x45 ; 'E'
000000000000694d         db  0x0b ; '.'
000000000000694e         db  0x68 ; 'h'
000000000000694f         db  0x0a ; '.'
0000000000006950         db  0x0e ; '.'
0000000000006951         db  0x68 ; 'h'
0000000000006952         db  0x48 ; 'H'
0000000000006953         db  0x0b ; '.'
0000000000006954         db  0x72 ; 'r'
0000000000006955         db  0x0e ; '.'
0000000000006956         db  0x68 ; 'h'
0000000000006957         db  0x45 ; 'E'
0000000000006958         db  0x0e ; '.'
0000000000006959         db  0x70 ; 'p'
000000000000695a         db  0x42 ; 'B'
000000000000695b         db  0x0e ; '.'
000000000000695c         db  0x78 ; 'x'
000000000000695d         db  0x42 ; 'B'
000000000000695e         db  0x0e ; '.'
000000000000695f         db  0x80 ; '.'
0000000000006960         db  0x01 ; '.'
0000000000006961         db  0x5e ; '^'
0000000000006962         db  0x0e ; '.'
0000000000006963         db  0x60 ; '`'
0000000000006964         db  0x44 ; 'D'
0000000000006965         db  0x0a ; '.'
0000000000006966         db  0x0e ; '.'
0000000000006967         db  0x38 ; '8'
0000000000006968         db  0x41 ; 'A'
0000000000006969         db  0x0e ; '.'
000000000000696a         db  0x30 ; '0'
000000000000696b         db  0x41 ; 'A'
000000000000696c         db  0x0e ; '.'
000000000000696d         db  0x28 ; '('
000000000000696e         db  0x42 ; 'B'
000000000000696f         db  0x0e ; '.'
0000000000006970         db  0x20 ; ' '
0000000000006971         db  0x42 ; 'B'
0000000000006972         db  0x0e ; '.'
0000000000006973         db  0x18 ; '.'
0000000000006974         db  0x42 ; 'B'
0000000000006975         db  0x0e ; '.'
0000000000006976         db  0x10 ; '.'
0000000000006977         db  0x42 ; 'B'
0000000000006978         db  0x0e ; '.'
0000000000006979         db  0x08 ; '.'
000000000000697a         db  0x41 ; 'A'
000000000000697b         db  0x0b ; '.'
000000000000697c         db  0x79 ; 'y'
000000000000697d         db  0x0a ; '.'
000000000000697e         db  0x0e ; '.'
000000000000697f         db  0x68 ; 'h'
0000000000006980         db  0x42 ; 'B'
0000000000006981         db  0x0e ; '.'
0000000000006982         db  0x70 ; 'p'
0000000000006983         db  0x42 ; 'B'
0000000000006984         db  0x0e ; '.'
0000000000006985         db  0x78 ; 'x'
0000000000006986         db  0x42 ; 'B'
0000000000006987         db  0x0e ; '.'
0000000000006988         db  0x80 ; '.'
0000000000006989         db  0x01 ; '.'
000000000000698a         db  0x51 ; 'Q'
000000000000698b         db  0x0b ; '.'
000000000000698c         dd         0x00000010                                  ; Length of the record
0000000000006990         dd         0x000007c8                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006994         db         0x4c, 0xe0, 2 dup (0xff)                    ; begin 0x49e0
0000000000006998         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x4a00)
000000000000699c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000699d         align      32
00000000000069a0         dd         0x00000018                                  ; Length of the record
00000000000069a4         dd         0x000007dc                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
00000000000069a8         db         0x58, 0xe0, 2 dup (0xff)                    ; begin 0x4a00
00000000000069ac         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x4a78)
00000000000069b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000069b1         db  0x44 ; 'D'
00000000000069b2         db  0x0e ; '.'
00000000000069b3         db  0x70 ; 'p'
00000000000069b4         db  0x02 ; '.'
00000000000069b5         db  0x60 ; '`'
00000000000069b6         db  0x0a ; '.'
00000000000069b7         db  0x0e ; '.'
00000000000069b8         db  0x08 ; '.'
00000000000069b9         db  0x41 ; 'A'
00000000000069ba         db  0x0b ; '.'
00000000000069bb         db  0x00 ; '.'
00000000000069bc         dd         0x00000028                                  ; Length of the record
00000000000069c0         dd         0x000007f8                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
00000000000069c4         db         0xbc, 0xe0, 2 dup (0xff)                    ; begin 0x4a80
00000000000069c8         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x4b55)
00000000000069cc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000069cd         db  0x41 ; 'A'
00000000000069ce         db  0x0e ; '.'
00000000000069cf         db  0x10 ; '.'
00000000000069d0         db  0x86 ; '.'
00000000000069d1         db  0x02 ; '.'
00000000000069d2         db  0x41 ; 'A'
00000000000069d3         db  0x0e ; '.'
00000000000069d4         db  0x18 ; '.'
00000000000069d5         db  0x83 ; '.'
00000000000069d6         db  0x03 ; '.'
00000000000069d7         db  0x50 ; 'P'
00000000000069d8         db  0x0e ; '.'
00000000000069d9         db  0xd0 ; '.'
00000000000069da         db  0x01 ; '.'
00000000000069db         db  0x02 ; '.'
00000000000069dc         db  0xab ; '.'
00000000000069dd         db  0x0a ; '.'
00000000000069de         db  0x0e ; '.'
00000000000069df         db  0x18 ; '.'
00000000000069e0         db  0x41 ; 'A'
00000000000069e1         db  0x0e ; '.'
00000000000069e2         db  0x10 ; '.'
00000000000069e3         db  0x41 ; 'A'
00000000000069e4         db  0x0e ; '.'
00000000000069e5         db  0x08 ; '.'
00000000000069e6         db  0x41 ; 'A'
00000000000069e7         db  0x0b ; '.'
00000000000069e8         dd         0x0000001c                                  ; Length of the record
00000000000069ec         dd         0x00000824                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
00000000000069f0         db         0x70, 0xe1, 2 dup (0xff)                    ; begin 0x4b60
00000000000069f4         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x4be0)
00000000000069f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000069f9         db  0x41 ; 'A'
00000000000069fa         db  0x0e ; '.'
00000000000069fb         db  0x10 ; '.'
00000000000069fc         db  0x83 ; '.'
00000000000069fd         db  0x02 ; '.'
00000000000069fe         db  0x02 ; '.'
00000000000069ff         db  0x7a ; 'z'
0000000000006a00         db  0x0e ; '.'
0000000000006a01         db  0x08 ; '.'
0000000000006a02         db  0x00 ; '.'
0000000000006a03         db  0x00 ; '.'
0000000000006a04         db  0x00 ; '.'
0000000000006a05         db  0x00 ; '.'
0000000000006a06         db  0x00 ; '.'
0000000000006a07         db  0x00 ; '.'
0000000000006a08         dd         0x00000018                                  ; Length of the record
0000000000006a0c         dd         0x00000844                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006a10         db         0xd0, 0xe1, 2 dup (0xff)                    ; begin 0x4be0
0000000000006a14         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x4bfa)
0000000000006a18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006a19         db  0x41 ; 'A'
0000000000006a1a         db  0x0e ; '.'
0000000000006a1b         db  0x10 ; '.'
0000000000006a1c         db  0x83 ; '.'
0000000000006a1d         db  0x02 ; '.'
0000000000006a1e         db  0x53 ; 'S'
0000000000006a1f         db  0x0a ; '.'
0000000000006a20         db  0x0e ; '.'
0000000000006a21         db  0x08 ; '.'
0000000000006a22         db  0x41 ; 'A'
0000000000006a23         db  0x0b ; '.'
0000000000006a24         dd         0x00000010                                  ; Length of the record
0000000000006a28         dd         0x00000860                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006a2c         db         0xd4, 0xe1, 2 dup (0xff)                    ; begin 0x4c00
0000000000006a30         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x4c24)
0000000000006a34         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006a35         db  0x5f ; '_'
0000000000006a36         db  0x0e ; '.'
0000000000006a37         db  0x10 ; '.'
0000000000006a38         dd         0x00000010                                  ; Length of the record
0000000000006a3c         dd         0x00000874                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006a40         db         0xf0, 0xe1, 2 dup (0xff)                    ; begin 0x4c30
0000000000006a44         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x4c32)
0000000000006a48         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006a49         align      4
0000000000006a4c         dd         0x00000020                                  ; Length of the record
0000000000006a50         dd         0x00000888                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006a54         db         0xec, 0xe1, 2 dup (0xff)                    ; begin 0x4c40
0000000000006a58         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x4c76)
0000000000006a5c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006a5d         db  0x44 ; 'D'
0000000000006a5e         db  0x0e ; '.'
0000000000006a5f         db  0x10 ; '.'
0000000000006a60         db  0x83 ; '.'
0000000000006a61         db  0x02 ; '.'
0000000000006a62         db  0x5d ; ']'
0000000000006a63         db  0x0a ; '.'
0000000000006a64         db  0x0e ; '.'
0000000000006a65         db  0x08 ; '.'
0000000000006a66         db  0x47 ; 'G'
0000000000006a67         db  0x0b ; '.'
0000000000006a68         db  0x48 ; 'H'
0000000000006a69         db  0x0a ; '.'
0000000000006a6a         db  0x0e ; '.'
0000000000006a6b         db  0x08 ; '.'
0000000000006a6c         db  0x41 ; 'A'
0000000000006a6d         db  0x0b ; '.'
0000000000006a6e         db  0x00 ; '.'
0000000000006a6f         db  0x00 ; '.'
0000000000006a70         dd         0x00000010                                  ; Length of the record
0000000000006a74         dd         0x000008ac                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006a78         db         0x08, 0xe2, 2 dup (0xff)                    ; begin 0x4c80
0000000000006a7c         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x4ca4)
0000000000006a80         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006a81         db  0x5f ; '_'
0000000000006a82         db  0x0e ; '.'
0000000000006a83         db  0x10 ; '.'
0000000000006a84         dd         0x00000014                                  ; Length of the record
0000000000006a88         dd         0x000008c0                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006a8c         db         0x24, 0xe2, 2 dup (0xff)                    ; begin 0x4cb0
0000000000006a90         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x4d32)
0000000000006a94         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006a95         db  0x02 ; '.'
0000000000006a96         db  0x5f ; '_'
0000000000006a97         db  0x0e ; '.'
0000000000006a98         db  0x10 ; '.'
0000000000006a99         db  0x49 ; 'I'
0000000000006a9a         db  0x0e ; '.'
0000000000006a9b         db  0x08 ; '.'
0000000000006a9c         dd         0x00000014                                  ; Length of the record
0000000000006aa0         dd         0x000008d8                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006aa4         db         0x9c, 0xe2, 2 dup (0xff)                    ; begin 0x4d40
0000000000006aa8         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x4d8a)
0000000000006aac         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006aad         db  0x02 ; '.'
0000000000006aae         db  0x45 ; 'E'
0000000000006aaf         db  0x0e ; '.'
0000000000006ab0         db  0x10 ; '.'
0000000000006ab1         db  0x00 ; '.'
0000000000006ab2         db  0x00 ; '.'
0000000000006ab3         db  0x00 ; '.'
0000000000006ab4         dd         0x00000018                                  ; Length of the record
0000000000006ab8         dd         0x000008f0                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006abc         db         0xd4, 0xe2, 2 dup (0xff)                    ; begin 0x4d90
0000000000006ac0         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x4da7)
0000000000006ac4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ac5         db  0x41 ; 'A'
0000000000006ac6         db  0x0e ; '.'
0000000000006ac7         db  0x10 ; '.'
0000000000006ac8         db  0x83 ; '.'
0000000000006ac9         db  0x02 ; '.'
0000000000006aca         db  0x51 ; 'Q'
0000000000006acb         db  0x0e ; '.'
0000000000006acc         db  0x08 ; '.'
0000000000006acd         db  0x00 ; '.'
0000000000006ace         db  0x00 ; '.'
0000000000006acf         db  0x00 ; '.'
0000000000006ad0         dd         0x00000018                                  ; Length of the record
0000000000006ad4         dd         0x0000090c                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006ad8         db         0xd8, 0xe2, 2 dup (0xff)                    ; begin 0x4db0
0000000000006adc         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x4dde)
0000000000006ae0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ae1         db  0x47 ; 'G'
0000000000006ae2         db  0x0e ; '.'
0000000000006ae3         db  0x10 ; '.'
0000000000006ae4         db  0x61 ; 'a'
0000000000006ae5         db  0x0a ; '.'
0000000000006ae6         db  0x0e ; '.'
0000000000006ae7         db  0x08 ; '.'
0000000000006ae8         db  0x41 ; 'A'
0000000000006ae9         db  0x0b ; '.'
0000000000006aea         db  0x00 ; '.'
0000000000006aeb         db  0x00 ; '.'
0000000000006aec         dd         0x00000024                                  ; Length of the record
0000000000006af0         dd         0x00000928                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006af4         db         0xec, 0xe2, 2 dup (0xff)                    ; begin 0x4de0
0000000000006af8         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x4e08)
0000000000006afc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006afd         db  0x41 ; 'A'
0000000000006afe         db  0x0e ; '.'
0000000000006aff         db  0x10 ; '.'
0000000000006b00         db  0x86 ; '.'
0000000000006b01         db  0x02 ; '.'
0000000000006b02         db  0x41 ; 'A'
0000000000006b03         db  0x0e ; '.'
0000000000006b04         db  0x18 ; '.'
0000000000006b05         db  0x83 ; '.'
0000000000006b06         db  0x03 ; '.'
0000000000006b07         db  0x4d ; 'M'
0000000000006b08         db  0x0e ; '.'
0000000000006b09         db  0x20 ; ' '
0000000000006b0a         db  0x49 ; 'I'
0000000000006b0b         db  0x0e ; '.'
0000000000006b0c         db  0x18 ; '.'
0000000000006b0d         db  0x47 ; 'G'
0000000000006b0e         db  0x0e ; '.'
0000000000006b0f         db  0x10 ; '.'
0000000000006b10         db  0x41 ; 'A'
0000000000006b11         db  0x0e ; '.'
0000000000006b12         db  0x08 ; '.'
0000000000006b13         db  0x00 ; '.'
0000000000006b14         dd         0x00000018                                  ; Length of the record
0000000000006b18         dd         0x00000950                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006b1c         db         0xf4, 0xe2, 2 dup (0xff)                    ; begin 0x4e10
0000000000006b20         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4e23)
0000000000006b24         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b25         db  0x41 ; 'A'
0000000000006b26         db  0x0e ; '.'
0000000000006b27         db  0x10 ; '.'
0000000000006b28         db  0x83 ; '.'
0000000000006b29         db  0x02 ; '.'
0000000000006b2a         db  0x50 ; 'P'
0000000000006b2b         db  0x0e ; '.'
0000000000006b2c         db  0x08 ; '.'
0000000000006b2d         db  0x00 ; '.'
0000000000006b2e         db  0x00 ; '.'
0000000000006b2f         db  0x00 ; '.'
0000000000006b30         dd         0x00000014                                  ; Length of the record
0000000000006b34         dd         0x0000096c                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006b38         db         0xf8, 0xe2, 2 dup (0xff)                    ; begin 0x4e30
0000000000006b3c         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x4e65)
0000000000006b40         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b41         db  0x4b ; 'K'
0000000000006b42         db  0x0e ; '.'
0000000000006b43         db  0x10 ; '.'
0000000000006b44         db  0x00 ; '.'
0000000000006b45         db  0x00 ; '.'
0000000000006b46         db  0x00 ; '.'
0000000000006b47         db  0x00 ; '.'
0000000000006b48         dd         0x00000034                                  ; Length of the record
0000000000006b4c         dd         0x00000984                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006b50         db         0x20, 0xe3, 2 dup (0xff)                    ; begin 0x4e70
0000000000006b54         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x4eeb)
0000000000006b58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b59         db  0x42 ; 'B'
0000000000006b5a         db  0x0e ; '.'
0000000000006b5b         db  0x10 ; '.'
0000000000006b5c         db  0x8c ; '.'
0000000000006b5d         db  0x02 ; '.'
0000000000006b5e         db  0x41 ; 'A'
0000000000006b5f         db  0x0e ; '.'
0000000000006b60         db  0x18 ; '.'
0000000000006b61         db  0x86 ; '.'
0000000000006b62         db  0x03 ; '.'
0000000000006b63         db  0x41 ; 'A'
0000000000006b64         db  0x0e ; '.'
0000000000006b65         db  0x20 ; ' '
0000000000006b66         db  0x83 ; '.'
0000000000006b67         db  0x04 ; '.'
0000000000006b68         db  0x7d ; '}'
0000000000006b69         db  0x0a ; '.'
0000000000006b6a         db  0x0e ; '.'
0000000000006b6b         db  0x18 ; '.'
0000000000006b6c         db  0x41 ; 'A'
0000000000006b6d         db  0x0e ; '.'
0000000000006b6e         db  0x10 ; '.'
0000000000006b6f         db  0x42 ; 'B'
0000000000006b70         db  0x0e ; '.'
0000000000006b71         db  0x08 ; '.'
0000000000006b72         db  0x44 ; 'D'
0000000000006b73         db  0x0b ; '.'
0000000000006b74         db  0x60 ; '`'
0000000000006b75         db  0x0a ; '.'
0000000000006b76         db  0x0e ; '.'
0000000000006b77         db  0x18 ; '.'
0000000000006b78         db  0x41 ; 'A'
0000000000006b79         db  0x0e ; '.'
0000000000006b7a         db  0x10 ; '.'
0000000000006b7b         db  0x42 ; 'B'
0000000000006b7c         db  0x0e ; '.'
0000000000006b7d         db  0x08 ; '.'
0000000000006b7e         db  0x45 ; 'E'
0000000000006b7f         db  0x0b ; '.'
0000000000006b80         dd         0x0000001c                                  ; Length of the record
0000000000006b84         dd         0x000009bc                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006b88         db         0x68, 0xe3, 2 dup (0xff)                    ; begin 0x4ef0
0000000000006b8c         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x4f30)
0000000000006b90         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b91         db  0x44 ; 'D'
0000000000006b92         db  0x0e ; '.'
0000000000006b93         db  0x10 ; '.'
0000000000006b94         db  0x83 ; '.'
0000000000006b95         db  0x02 ; '.'
0000000000006b96         db  0x5a ; 'Z'
0000000000006b97         db  0x0a ; '.'
0000000000006b98         db  0x0e ; '.'
0000000000006b99         db  0x08 ; '.'
0000000000006b9a         db  0x4a ; 'J'
0000000000006b9b         db  0x0b ; '.'
0000000000006b9c         db  0x53 ; 'S'
0000000000006b9d         db  0x0e ; '.'
0000000000006b9e         db  0x08 ; '.'
0000000000006b9f         db  0x00 ; '.'
0000000000006ba0         dd         0x0000002c                                  ; Length of the record
0000000000006ba4         dd         0x000009dc                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006ba8         db         0x88, 0xe3, 2 dup (0xff)                    ; begin 0x4f30
0000000000006bac         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x4f87)
0000000000006bb0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006bb1         db  0x63 ; 'c'
0000000000006bb2         db  0x0e ; '.'
0000000000006bb3         db  0x10 ; '.'
0000000000006bb4         db  0x8c ; '.'
0000000000006bb5         db  0x02 ; '.'
0000000000006bb6         db  0x41 ; 'A'
0000000000006bb7         db  0x0e ; '.'
0000000000006bb8         db  0x18 ; '.'
0000000000006bb9         db  0x86 ; '.'
0000000000006bba         db  0x03 ; '.'
0000000000006bbb         db  0x44 ; 'D'
0000000000006bbc         db  0x0e ; '.'
0000000000006bbd         db  0x20 ; ' '
0000000000006bbe         db  0x83 ; '.'
0000000000006bbf         db  0x04 ; '.'
0000000000006bc0         db  0x6b ; 'k'
0000000000006bc1         db  0x0e ; '.'
0000000000006bc2         db  0x18 ; '.'
0000000000006bc3         db  0x41 ; 'A'
0000000000006bc4         db  0x0e ; '.'
0000000000006bc5         db  0x10 ; '.'
0000000000006bc6         db  0x42 ; 'B'
0000000000006bc7         db  0x0e ; '.'
0000000000006bc8         db  0x08 ; '.'
0000000000006bc9         db  0x00 ; '.'
0000000000006bca         db  0x00 ; '.'
0000000000006bcb         db  0x00 ; '.'
0000000000006bcc         db  0x00 ; '.'
0000000000006bcd         db  0x00 ; '.'
0000000000006bce         db  0x00 ; '.'
0000000000006bcf         db  0x00 ; '.'
0000000000006bd0         dd         0x0000003c                                  ; Length of the record
0000000000006bd4         dd         0x00000a0c                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006bd8         db         0xb8, 0xe3, 2 dup (0xff)                    ; begin 0x4f90
0000000000006bdc         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x5013)
0000000000006be0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006be1         db  0x42 ; 'B'
0000000000006be2         db  0x0e ; '.'
0000000000006be3         db  0x10 ; '.'
0000000000006be4         db  0x8d ; '.'
0000000000006be5         db  0x02 ; '.'
0000000000006be6         db  0x42 ; 'B'
0000000000006be7         db  0x0e ; '.'
0000000000006be8         db  0x18 ; '.'
0000000000006be9         db  0x8c ; '.'
0000000000006bea         db  0x03 ; '.'
0000000000006beb         db  0x44 ; 'D'
0000000000006bec         db  0x0e ; '.'
0000000000006bed         db  0x20 ; ' '
0000000000006bee         db  0x86 ; '.'
0000000000006bef         db  0x04 ; '.'
0000000000006bf0         db  0x41 ; 'A'
0000000000006bf1         db  0x0e ; '.'
0000000000006bf2         db  0x28 ; '('
0000000000006bf3         db  0x83 ; '.'
0000000000006bf4         db  0x05 ; '.'
0000000000006bf5         db  0x4a ; 'J'
0000000000006bf6         db  0x0e ; '.'
0000000000006bf7         db  0x40 ; '@'
0000000000006bf8         db  0x02 ; '.'
0000000000006bf9         db  0x64 ; 'd'
0000000000006bfa         db  0x0a ; '.'
0000000000006bfb         db  0x0e ; '.'
0000000000006bfc         db  0x28 ; '('
0000000000006bfd         db  0x41 ; 'A'
0000000000006bfe         db  0x0e ; '.'
0000000000006bff         db  0x20 ; ' '
0000000000006c00         db  0x41 ; 'A'
0000000000006c01         db  0x0e ; '.'
0000000000006c02         db  0x18 ; '.'
0000000000006c03         db  0x42 ; 'B'
0000000000006c04         db  0x0e ; '.'
0000000000006c05         db  0x10 ; '.'
0000000000006c06         db  0x42 ; 'B'
0000000000006c07         db  0x0e ; '.'
0000000000006c08         db  0x08 ; '.'
0000000000006c09         db  0x41 ; 'A'
0000000000006c0a         db  0x0b ; '.'
0000000000006c0b         db  0x00 ; '.'
0000000000006c0c         db  0x00 ; '.'
0000000000006c0d         db  0x00 ; '.'
0000000000006c0e         db  0x00 ; '.'
0000000000006c0f         db  0x00 ; '.'
0000000000006c10         dd         0x0000004c                                  ; Length of the record
0000000000006c14         dd         0x00000a4c                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006c18         db         0x08, 0xe4, 2 dup (0xff)                    ; begin 0x5020
0000000000006c1c         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x509d)
0000000000006c20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c21         db  0x42 ; 'B'
0000000000006c22         db  0x0e ; '.'
0000000000006c23         db  0x10 ; '.'
0000000000006c24         db  0x8c ; '.'
0000000000006c25         db  0x02 ; '.'
0000000000006c26         db  0x41 ; 'A'
0000000000006c27         db  0x0e ; '.'
0000000000006c28         db  0x18 ; '.'
0000000000006c29         db  0x86 ; '.'
0000000000006c2a         db  0x03 ; '.'
0000000000006c2b         db  0x44 ; 'D'
0000000000006c2c         db  0x0e ; '.'
0000000000006c2d         db  0x20 ; ' '
0000000000006c2e         db  0x83 ; '.'
0000000000006c2f         db  0x04 ; '.'
0000000000006c30         db  0x69 ; 'i'
0000000000006c31         db  0x0a ; '.'
0000000000006c32         db  0x0e ; '.'
0000000000006c33         db  0x18 ; '.'
0000000000006c34         db  0x41 ; 'A'
0000000000006c35         db  0x0e ; '.'
0000000000006c36         db  0x10 ; '.'
0000000000006c37         db  0x42 ; 'B'
0000000000006c38         db  0x0e ; '.'
0000000000006c39         db  0x08 ; '.'
0000000000006c3a         db  0x45 ; 'E'
0000000000006c3b         db  0x0b ; '.'
0000000000006c3c         db  0x55 ; 'U'
0000000000006c3d         db  0x0a ; '.'
0000000000006c3e         db  0x0e ; '.'
0000000000006c3f         db  0x18 ; '.'
0000000000006c40         db  0x41 ; 'A'
0000000000006c41         db  0x0e ; '.'
0000000000006c42         db  0x10 ; '.'
0000000000006c43         db  0x42 ; 'B'
0000000000006c44         db  0x0e ; '.'
0000000000006c45         db  0x08 ; '.'
0000000000006c46         db  0x48 ; 'H'
0000000000006c47         db  0x0b ; '.'
0000000000006c48         db  0x41 ; 'A'
0000000000006c49         db  0x0a ; '.'
0000000000006c4a         db  0x0e ; '.'
0000000000006c4b         db  0x18 ; '.'
0000000000006c4c         db  0x46 ; 'F'
0000000000006c4d         db  0x0e ; '.'
0000000000006c4e         db  0x10 ; '.'
0000000000006c4f         db  0x42 ; 'B'
0000000000006c50         db  0x0e ; '.'
0000000000006c51         db  0x08 ; '.'
0000000000006c52         db  0x47 ; 'G'
0000000000006c53         db  0x0b ; '.'
0000000000006c54         db  0x49 ; 'I'
0000000000006c55         db  0x0e ; '.'
0000000000006c56         db  0x18 ; '.'
0000000000006c57         db  0x41 ; 'A'
0000000000006c58         db  0x0e ; '.'
0000000000006c59         db  0x10 ; '.'
0000000000006c5a         db  0x42 ; 'B'
0000000000006c5b         db  0x0e ; '.'
0000000000006c5c         db  0x08 ; '.'
0000000000006c5d         db  0x00 ; '.'
0000000000006c5e         db  0x00 ; '.'
0000000000006c5f         db  0x00 ; '.'
0000000000006c60         dd         0x0000001c                                  ; Length of the record
0000000000006c64         dd         0x00000a9c                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006c68         db         0x38, 0xe4, 2 dup (0xff)                    ; begin 0x50a0
0000000000006c6c         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x5100)
0000000000006c70         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c71         db  0x44 ; 'D'
0000000000006c72         db  0x0e ; '.'
0000000000006c73         db  0x10 ; '.'
0000000000006c74         db  0x75 ; 'u'
0000000000006c75         db  0x0a ; '.'
0000000000006c76         db  0x0e ; '.'
0000000000006c77         db  0x08 ; '.'
0000000000006c78         db  0x47 ; 'G'
0000000000006c79         db  0x0b ; '.'
0000000000006c7a         db  0x5f ; '_'
0000000000006c7b         db  0x0e ; '.'
0000000000006c7c         db  0x08 ; '.'
0000000000006c7d         db  0x00 ; '.'
0000000000006c7e         db  0x00 ; '.'
0000000000006c7f         db  0x00 ; '.'
0000000000006c80         dd         0x0000001c                                  ; Length of the record
0000000000006c84         dd         0x00000abc                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006c88         db         0x78, 0xe4, 2 dup (0xff)                    ; begin 0x5100
0000000000006c8c         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x513c)
0000000000006c90         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c91         db  0x44 ; 'D'
0000000000006c92         db  0x0e ; '.'
0000000000006c93         db  0x10 ; '.'
0000000000006c94         db  0x61 ; 'a'
0000000000006c95         db  0x0a ; '.'
0000000000006c96         db  0x0e ; '.'
0000000000006c97         db  0x08 ; '.'
0000000000006c98         db  0x4b ; 'K'
0000000000006c99         db  0x0b ; '.'
0000000000006c9a         db  0x4b ; 'K'
0000000000006c9b         db  0x0e ; '.'
0000000000006c9c         db  0x08 ; '.'
0000000000006c9d         db  0x00 ; '.'
0000000000006c9e         db  0x00 ; '.'
0000000000006c9f         db  0x00 ; '.'
0000000000006ca0         dd         0x00000044                                  ; Length of the record
0000000000006ca4         dd         0x00000adc                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006ca8         db         0x98, 0xe4, 2 dup (0xff)                    ; begin 0x5140
0000000000006cac         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x51a5)
0000000000006cb0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006cb1         db  0x42 ; 'B'
0000000000006cb2         db  0x0e ; '.'
0000000000006cb3         db  0x10 ; '.'
0000000000006cb4         db  0x8f ; '.'
0000000000006cb5         db  0x02 ; '.'
0000000000006cb6         db  0x42 ; 'B'
0000000000006cb7         db  0x0e ; '.'
0000000000006cb8         db  0x18 ; '.'
0000000000006cb9         db  0x8e ; '.'
0000000000006cba         db  0x03 ; '.'
0000000000006cbb         db  0x45 ; 'E'
0000000000006cbc         db  0x0e ; '.'
0000000000006cbd         db  0x20 ; ' '
0000000000006cbe         db  0x8d ; '.'
0000000000006cbf         db  0x04 ; '.'
0000000000006cc0         db  0x42 ; 'B'
0000000000006cc1         db  0x0e ; '.'
0000000000006cc2         db  0x28 ; '('
0000000000006cc3         db  0x8c ; '.'
0000000000006cc4         db  0x05 ; '.'
0000000000006cc5         db  0x48 ; 'H'
0000000000006cc6         db  0x0e ; '.'
0000000000006cc7         db  0x30 ; '0'
0000000000006cc8         db  0x86 ; '.'
0000000000006cc9         db  0x06 ; '.'
0000000000006cca         db  0x48 ; 'H'
0000000000006ccb         db  0x0e ; '.'
0000000000006ccc         db  0x38 ; '8'
0000000000006ccd         db  0x83 ; '.'
0000000000006cce         db  0x07 ; '.'
0000000000006ccf         db  0x4d ; 'M'
0000000000006cd0         db  0x0e ; '.'
0000000000006cd1         db  0x40 ; '@'
0000000000006cd2         db  0x72 ; 'r'
0000000000006cd3         db  0x0e ; '.'
0000000000006cd4         db  0x38 ; '8'
0000000000006cd5         db  0x41 ; 'A'
0000000000006cd6         db  0x0e ; '.'
0000000000006cd7         db  0x30 ; '0'
0000000000006cd8         db  0x41 ; 'A'
0000000000006cd9         db  0x0e ; '.'
0000000000006cda         db  0x28 ; '('
0000000000006cdb         db  0x42 ; 'B'
0000000000006cdc         db  0x0e ; '.'
0000000000006cdd         db  0x20 ; ' '
0000000000006cde         db  0x42 ; 'B'
0000000000006cdf         db  0x0e ; '.'
0000000000006ce0         db  0x18 ; '.'
0000000000006ce1         db  0x42 ; 'B'
0000000000006ce2         db  0x0e ; '.'
0000000000006ce3         db  0x10 ; '.'
0000000000006ce4         db  0x42 ; 'B'
0000000000006ce5         db  0x0e ; '.'
0000000000006ce6         db  0x08 ; '.'
0000000000006ce7         db  0x00 ; '.'
0000000000006ce8         dd         0x00000014                                  ; Length of the record
0000000000006cec         dd         0x00000b24                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006cf0         db         0xc0, 0xe4, 2 dup (0xff)                    ; begin 0x51b0
0000000000006cf4         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x51b2)
0000000000006cf8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006cf9         align      256
0000000000006d00         dd         0x00000010                                  ; Length of the record
0000000000006d04         dd         0x00000b3c                                  ; FDE: parent CIE at 0x61c8 (FDE encoding = 0x1B)
0000000000006d08         db         0xb8, 0xe4, 2 dup (0xff)                    ; begin 0x51c0
0000000000006d0c         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x51ce)
0000000000006d10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d11         align      8


        ; Segment Segment 3
        ; Range: [0x207b30; 0x208258[ (1832 bytes)
        ; File offset : [31536; 32928[ (1392 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x207b30; 0x207b38[ (8 bytes)
        ; File offset : [31536; 31544[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
0000000000207b30         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x207b38; 0x207b40[ (8 bytes)
        ; File offset : [31544; 31552[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
0000000000207b38         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x207b40; 0x207c58[ (280 bytes)
        ; File offset : [31552; 31832[ (280 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     longopts:
0000000000207b40         db  0xf3 ; '.'                                         ; DATA XREF=main+111
0000000000207b41         db  0x52 ; 'R'
0000000000207b42         db  0x00 ; '.'
0000000000207b43         db  0x00 ; '.'
0000000000207b44         db  0x00 ; '.'
0000000000207b45         db  0x00 ; '.'
0000000000207b46         db  0x00 ; '.'
0000000000207b47         db  0x00 ; '.'
0000000000207b48         db  0x00 ; '.'
0000000000207b49         db  0x00 ; '.'
0000000000207b4a         db  0x00 ; '.'
0000000000207b4b         db  0x00 ; '.'
0000000000207b4c         db  0x00 ; '.'
0000000000207b4d         db  0x00 ; '.'
0000000000207b4e         db  0x00 ; '.'
0000000000207b4f         db  0x00 ; '.'
0000000000207b50         db  0x00 ; '.'
0000000000207b51         db  0x00 ; '.'
0000000000207b52         db  0x00 ; '.'
0000000000207b53         db  0x00 ; '.'
0000000000207b54         db  0x00 ; '.'
0000000000207b55         db  0x00 ; '.'
0000000000207b56         db  0x00 ; '.'
0000000000207b57         db  0x00 ; '.'
0000000000207b58         db  0x73 ; 's'
0000000000207b59         db  0x00 ; '.'
0000000000207b5a         db  0x00 ; '.'
0000000000207b5b         db  0x00 ; '.'
0000000000207b5c         db  0x00 ; '.'
0000000000207b5d         db  0x00 ; '.'
0000000000207b5e         db  0x00 ; '.'
0000000000207b5f         db  0x00 ; '.'
0000000000207b60         db  0xfa ; '.'
0000000000207b61         db  0x52 ; 'R'
0000000000207b62         db  0x00 ; '.'
0000000000207b63         db  0x00 ; '.'
0000000000207b64         db  0x00 ; '.'
0000000000207b65         db  0x00 ; '.'
0000000000207b66         db  0x00 ; '.'
0000000000207b67         db  0x00 ; '.'
0000000000207b68         db  0x01 ; '.'
0000000000207b69         db  0x00 ; '.'
0000000000207b6a         db  0x00 ; '.'
0000000000207b6b         db  0x00 ; '.'
0000000000207b6c         db  0x00 ; '.'
0000000000207b6d         db  0x00 ; '.'
0000000000207b6e         db  0x00 ; '.'
0000000000207b6f         db  0x00 ; '.'
0000000000207b70         db  0x00 ; '.'
0000000000207b71         db  0x00 ; '.'
0000000000207b72         db  0x00 ; '.'
0000000000207b73         db  0x00 ; '.'
0000000000207b74         db  0x00 ; '.'
0000000000207b75         db  0x00 ; '.'
0000000000207b76         db  0x00 ; '.'
0000000000207b77         db  0x00 ; '.'
0000000000207b78         db  0x64 ; 'd'
0000000000207b79         db  0x00 ; '.'
0000000000207b7a         db  0x00 ; '.'
0000000000207b7b         db  0x00 ; '.'
0000000000207b7c         db  0x00 ; '.'
0000000000207b7d         db  0x00 ; '.'
0000000000207b7e         db  0x00 ; '.'
0000000000207b7f         db  0x00 ; '.'
0000000000207b80         db  0x05 ; '.'
0000000000207b81         db  0x53 ; 'S'
0000000000207b82         db  0x00 ; '.'
0000000000207b83         db  0x00 ; '.'
0000000000207b84         db  0x00 ; '.'
0000000000207b85         db  0x00 ; '.'
0000000000207b86         db  0x00 ; '.'
0000000000207b87         db  0x00 ; '.'
0000000000207b88         db  0x00 ; '.'
0000000000207b89         db  0x00 ; '.'
0000000000207b8a         db  0x00 ; '.'
0000000000207b8b         db  0x00 ; '.'
0000000000207b8c         db  0x00 ; '.'
0000000000207b8d         db  0x00 ; '.'
0000000000207b8e         db  0x00 ; '.'
0000000000207b8f         db  0x00 ; '.'
0000000000207b90         db  0x00 ; '.'
0000000000207b91         db  0x00 ; '.'
0000000000207b92         db  0x00 ; '.'
0000000000207b93         db  0x00 ; '.'
0000000000207b94         db  0x00 ; '.'
0000000000207b95         db  0x00 ; '.'
0000000000207b96         db  0x00 ; '.'
0000000000207b97         db  0x00 ; '.'
0000000000207b98         db  0x7a ; 'z'
0000000000207b99         db  0x00 ; '.'
0000000000207b9a         db  0x00 ; '.'
0000000000207b9b         db  0x00 ; '.'
0000000000207b9c         db  0x00 ; '.'
0000000000207b9d         db  0x00 ; '.'
0000000000207b9e         db  0x00 ; '.'
0000000000207b9f         db  0x00 ; '.'
0000000000207ba0         db  0x15 ; '.'
0000000000207ba1         db  0x53 ; 'S'
0000000000207ba2         db  0x00 ; '.'
0000000000207ba3         db  0x00 ; '.'
0000000000207ba4         db  0x00 ; '.'
0000000000207ba5         db  0x00 ; '.'
0000000000207ba6         db  0x00 ; '.'
0000000000207ba7         db  0x00 ; '.'
0000000000207ba8         db  0x00 ; '.'
0000000000207ba9         db  0x00 ; '.'
0000000000207baa         db  0x00 ; '.'
0000000000207bab         db  0x00 ; '.'
0000000000207bac         db  0x00 ; '.'
0000000000207bad         db  0x00 ; '.'
0000000000207bae         db  0x00 ; '.'
0000000000207baf         db  0x00 ; '.'
0000000000207bb0         db  0x00 ; '.'
0000000000207bb1         db  0x00 ; '.'
0000000000207bb2         db  0x00 ; '.'
0000000000207bb3         db  0x00 ; '.'
0000000000207bb4         db  0x00 ; '.'
0000000000207bb5         db  0x00 ; '.'
0000000000207bb6         db  0x00 ; '.'
0000000000207bb7         db  0x00 ; '.'
0000000000207bb8         db  0x7e ; '~'
0000000000207bb9         db  0xff ; '.'
0000000000207bba         db  0xff ; '.'
0000000000207bbb         db  0xff ; '.'
0000000000207bbc         db  0x00 ; '.'
0000000000207bbd         db  0x00 ; '.'
0000000000207bbe         db  0x00 ; '.'
0000000000207bbf         db  0x00 ; '.'
0000000000207bc0         db  0x1a ; '.'
0000000000207bc1         db  0x53 ; 'S'
0000000000207bc2         db  0x00 ; '.'
0000000000207bc3         db  0x00 ; '.'
0000000000207bc4         db  0x00 ; '.'
0000000000207bc5         db  0x00 ; '.'
0000000000207bc6         db  0x00 ; '.'
0000000000207bc7         db  0x00 ; '.'
0000000000207bc8         db  0x00 ; '.'
0000000000207bc9         db  0x00 ; '.'
0000000000207bca         db  0x00 ; '.'
0000000000207bcb         db  0x00 ; '.'
0000000000207bcc         db  0x00 ; '.'
0000000000207bcd         db  0x00 ; '.'
0000000000207bce         db  0x00 ; '.'
0000000000207bcf         db  0x00 ; '.'
0000000000207bd0         db  0x00 ; '.'
0000000000207bd1         db  0x00 ; '.'
0000000000207bd2         db  0x00 ; '.'
0000000000207bd3         db  0x00 ; '.'
0000000000207bd4         db  0x00 ; '.'
0000000000207bd5         db  0x00 ; '.'
0000000000207bd6         db  0x00 ; '.'
0000000000207bd7         db  0x00 ; '.'
0000000000207bd8         db  0x7d ; '}'
0000000000207bd9         db  0xff ; '.'
0000000000207bda         db  0xff ; '.'
0000000000207bdb         db  0xff ; '.'
0000000000207bdc         db  0x00 ; '.'
0000000000207bdd         db  0x00 ; '.'
0000000000207bde         db  0x00 ; '.'
0000000000207bdf         db  0x00 ; '.'
0000000000207be0         db  0x00 ; '.'
0000000000207be1         db  0x00 ; '.'
0000000000207be2         db  0x00 ; '.'
0000000000207be3         db  0x00 ; '.'
0000000000207be4         db  0x00 ; '.'
0000000000207be5         db  0x00 ; '.'
0000000000207be6         db  0x00 ; '.'
0000000000207be7         db  0x00 ; '.'
0000000000207be8         db  0x00 ; '.'
0000000000207be9         db  0x00 ; '.'
0000000000207bea         db  0x00 ; '.'
0000000000207beb         db  0x00 ; '.'
0000000000207bec         db  0x00 ; '.'
0000000000207bed         db  0x00 ; '.'
0000000000207bee         db  0x00 ; '.'
0000000000207bef         db  0x00 ; '.'
0000000000207bf0         db  0x00 ; '.'
0000000000207bf1         db  0x00 ; '.'
0000000000207bf2         db  0x00 ; '.'
0000000000207bf3         db  0x00 ; '.'
0000000000207bf4         db  0x00 ; '.'
0000000000207bf5         db  0x00 ; '.'
0000000000207bf6         db  0x00 ; '.'
0000000000207bf7         db  0x00 ; '.'
0000000000207bf8         db  0x00 ; '.'
0000000000207bf9         db  0x00 ; '.'
0000000000207bfa         db  0x00 ; '.'
0000000000207bfb         db  0x00 ; '.'
0000000000207bfc         db  0x00 ; '.'
0000000000207bfd         db  0x00 ; '.'
0000000000207bfe         db  0x00 ; '.'
0000000000207bff         db  0x00 ; '.'
                     quoting_style_args:
0000000000207c00         db  0xf1 ; '.'
0000000000207c01         db  0x56 ; 'V'
0000000000207c02         db  0x00 ; '.'
0000000000207c03         db  0x00 ; '.'
0000000000207c04         db  0x00 ; '.'
0000000000207c05         db  0x00 ; '.'
0000000000207c06         db  0x00 ; '.'
0000000000207c07         db  0x00 ; '.'
0000000000207c08         db  0xf9 ; '.'
0000000000207c09         db  0x56 ; 'V'
0000000000207c0a         db  0x00 ; '.'
0000000000207c0b         db  0x00 ; '.'
0000000000207c0c         db  0x00 ; '.'
0000000000207c0d         db  0x00 ; '.'
0000000000207c0e         db  0x00 ; '.'
0000000000207c0f         db  0x00 ; '.'
0000000000207c10         db  0xff ; '.'
0000000000207c11         db  0x56 ; 'V'
0000000000207c12         db  0x00 ; '.'
0000000000207c13         db  0x00 ; '.'
0000000000207c14         db  0x00 ; '.'
0000000000207c15         db  0x00 ; '.'
0000000000207c16         db  0x00 ; '.'
0000000000207c17         db  0x00 ; '.'
0000000000207c18         db  0x0c ; '.'
0000000000207c19         db  0x57 ; 'W'
0000000000207c1a         db  0x00 ; '.'
0000000000207c1b         db  0x00 ; '.'
0000000000207c1c         db  0x00 ; '.'
0000000000207c1d         db  0x00 ; '.'
0000000000207c1e         db  0x00 ; '.'
0000000000207c1f         db  0x00 ; '.'
0000000000207c20         db  0x19 ; '.'
0000000000207c21         db  0x57 ; 'W'
0000000000207c22         db  0x00 ; '.'
0000000000207c23         db  0x00 ; '.'
0000000000207c24         db  0x00 ; '.'
0000000000207c25         db  0x00 ; '.'
0000000000207c26         db  0x00 ; '.'
0000000000207c27         db  0x00 ; '.'
0000000000207c28         db  0x2d ; '-'
0000000000207c29         db  0x57 ; 'W'
0000000000207c2a         db  0x00 ; '.'
0000000000207c2b         db  0x00 ; '.'
0000000000207c2c         db  0x00 ; '.'
0000000000207c2d         db  0x00 ; '.'
0000000000207c2e         db  0x00 ; '.'
0000000000207c2f         db  0x00 ; '.'
0000000000207c30         db  0x2f ; '/'
0000000000207c31         db  0x57 ; 'W'
0000000000207c32         db  0x00 ; '.'
0000000000207c33         db  0x00 ; '.'
0000000000207c34         db  0x00 ; '.'
0000000000207c35         db  0x00 ; '.'
0000000000207c36         db  0x00 ; '.'
0000000000207c37         db  0x00 ; '.'
0000000000207c38         db  0x12 ; '.'
0000000000207c39         db  0x57 ; 'W'
0000000000207c3a         db  0x00 ; '.'
0000000000207c3b         db  0x00 ; '.'
0000000000207c3c         db  0x00 ; '.'
0000000000207c3d         db  0x00 ; '.'
0000000000207c3e         db  0x00 ; '.'
0000000000207c3f         db  0x00 ; '.'
0000000000207c40         db  0xc8 ; '.'
0000000000207c41         db  0x52 ; 'R'
0000000000207c42         db  0x00 ; '.'
0000000000207c43         db  0x00 ; '.'
0000000000207c44         db  0x00 ; '.'
0000000000207c45         db  0x00 ; '.'
0000000000207c46         db  0x00 ; '.'
0000000000207c47         db  0x00 ; '.'
0000000000207c48         db  0x37 ; '7'
0000000000207c49         db  0x57 ; 'W'
0000000000207c4a         db  0x00 ; '.'
0000000000207c4b         db  0x00 ; '.'
0000000000207c4c         db  0x00 ; '.'
0000000000207c4d         db  0x00 ; '.'
0000000000207c4e         db  0x00 ; '.'
0000000000207c4f         db  0x00 ; '.'
0000000000207c50         db  0x00 ; '.'
0000000000207c51         db  0x00 ; '.'
0000000000207c52         db  0x00 ; '.'
0000000000207c53         db  0x00 ; '.'
0000000000207c54         db  0x00 ; '.'
0000000000207c55         db  0x00 ; '.'
0000000000207c56         db  0x00 ; '.'
0000000000207c57         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x207c58; 0x207e48[ (496 bytes)
        ; File offset : [31832; 32328[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000207c58         db  0x01 ; '.'
0000000000207c59         db  0x00 ; '.'
0000000000207c5a         db  0x00 ; '.'
0000000000207c5b         db  0x00 ; '.'
0000000000207c5c         db  0x00 ; '.'
0000000000207c5d         db  0x00 ; '.'
0000000000207c5e         db  0x00 ; '.'
0000000000207c5f         db  0x00 ; '.'
0000000000207c60         db  0x01 ; '.'
0000000000207c61         db  0x00 ; '.'
0000000000207c62         db  0x00 ; '.'
0000000000207c63         db  0x00 ; '.'
0000000000207c64         db  0x00 ; '.'
0000000000207c65         db  0x00 ; '.'
0000000000207c66         db  0x00 ; '.'
0000000000207c67         db  0x00 ; '.'
0000000000207c68         db  0x0c ; '.'
0000000000207c69         db  0x00 ; '.'
0000000000207c6a         db  0x00 ; '.'
0000000000207c6b         db  0x00 ; '.'
0000000000207c6c         db  0x00 ; '.'
0000000000207c6d         db  0x00 ; '.'
0000000000207c6e         db  0x00 ; '.'
0000000000207c6f         db  0x00 ; '.'
0000000000207c70         db  0x78 ; 'x'
0000000000207c71         db  0x13 ; '.'
0000000000207c72         db  0x00 ; '.'
0000000000207c73         db  0x00 ; '.'
0000000000207c74         db  0x00 ; '.'
0000000000207c75         db  0x00 ; '.'
0000000000207c76         db  0x00 ; '.'
0000000000207c77         db  0x00 ; '.'
0000000000207c78         db  0x0d ; '.'
0000000000207c79         db  0x00 ; '.'
0000000000207c7a         db  0x00 ; '.'
0000000000207c7b         db  0x00 ; '.'
0000000000207c7c         db  0x00 ; '.'
0000000000207c7d         db  0x00 ; '.'
0000000000207c7e         db  0x00 ; '.'
0000000000207c7f         db  0x00 ; '.'
0000000000207c80         db  0xd0 ; '.'
0000000000207c81         db  0x51 ; 'Q'
0000000000207c82         db  0x00 ; '.'
0000000000207c83         db  0x00 ; '.'
0000000000207c84         db  0x00 ; '.'
0000000000207c85         db  0x00 ; '.'
0000000000207c86         db  0x00 ; '.'
0000000000207c87         db  0x00 ; '.'
0000000000207c88         db  0x19 ; '.'
0000000000207c89         db  0x00 ; '.'
0000000000207c8a         db  0x00 ; '.'
0000000000207c8b         db  0x00 ; '.'
0000000000207c8c         db  0x00 ; '.'
0000000000207c8d         db  0x00 ; '.'
0000000000207c8e         db  0x00 ; '.'
0000000000207c8f         db  0x00 ; '.'
0000000000207c90         db  0x30 ; '0'
0000000000207c91         db  0x7b ; '{'
0000000000207c92         db  0x20 ; ' '
0000000000207c93         db  0x00 ; '.'
0000000000207c94         db  0x00 ; '.'
0000000000207c95         db  0x00 ; '.'
0000000000207c96         db  0x00 ; '.'
0000000000207c97         db  0x00 ; '.'
0000000000207c98         db  0x1b ; '.'
0000000000207c99         db  0x00 ; '.'
0000000000207c9a         db  0x00 ; '.'
0000000000207c9b         db  0x00 ; '.'
0000000000207c9c         db  0x00 ; '.'
0000000000207c9d         db  0x00 ; '.'
0000000000207c9e         db  0x00 ; '.'
0000000000207c9f         db  0x00 ; '.'
0000000000207ca0         db  0x08 ; '.'
0000000000207ca1         db  0x00 ; '.'
0000000000207ca2         db  0x00 ; '.'
0000000000207ca3         db  0x00 ; '.'
0000000000207ca4         db  0x00 ; '.'
0000000000207ca5         db  0x00 ; '.'
0000000000207ca6         db  0x00 ; '.'
0000000000207ca7         db  0x00 ; '.'
0000000000207ca8         db  0x1a ; '.'
0000000000207ca9         db  0x00 ; '.'
0000000000207caa         db  0x00 ; '.'
0000000000207cab         db  0x00 ; '.'
0000000000207cac         db  0x00 ; '.'
0000000000207cad         db  0x00 ; '.'
0000000000207cae         db  0x00 ; '.'
0000000000207caf         db  0x00 ; '.'
0000000000207cb0         db  0x38 ; '8'
0000000000207cb1         db  0x7b ; '{'
0000000000207cb2         db  0x20 ; ' '
0000000000207cb3         db  0x00 ; '.'
0000000000207cb4         db  0x00 ; '.'
0000000000207cb5         db  0x00 ; '.'
0000000000207cb6         db  0x00 ; '.'
0000000000207cb7         db  0x00 ; '.'
0000000000207cb8         db  0x1c ; '.'
0000000000207cb9         db  0x00 ; '.'
0000000000207cba         db  0x00 ; '.'
0000000000207cbb         db  0x00 ; '.'
0000000000207cbc         db  0x00 ; '.'
0000000000207cbd         db  0x00 ; '.'
0000000000207cbe         db  0x00 ; '.'
0000000000207cbf         db  0x00 ; '.'
0000000000207cc0         db  0x08 ; '.'
0000000000207cc1         db  0x00 ; '.'
0000000000207cc2         db  0x00 ; '.'
0000000000207cc3         db  0x00 ; '.'
0000000000207cc4         db  0x00 ; '.'
0000000000207cc5         db  0x00 ; '.'
0000000000207cc6         db  0x00 ; '.'
0000000000207cc7         db  0x00 ; '.'
0000000000207cc8         db  0xf5 ; '.'
0000000000207cc9         db  0xfe ; '.'
0000000000207cca         db  0xff ; '.'
0000000000207ccb         db  0x6f ; 'o'
0000000000207ccc         db  0x00 ; '.'
0000000000207ccd         db  0x00 ; '.'
0000000000207cce         db  0x00 ; '.'
0000000000207ccf         db  0x00 ; '.'
0000000000207cd0         db  0x98 ; '.'
0000000000207cd1         db  0x02 ; '.'
0000000000207cd2         db  0x00 ; '.'
0000000000207cd3         db  0x00 ; '.'
0000000000207cd4         db  0x00 ; '.'
0000000000207cd5         db  0x00 ; '.'
0000000000207cd6         db  0x00 ; '.'
0000000000207cd7         db  0x00 ; '.'
0000000000207cd8         db  0x05 ; '.'
0000000000207cd9         db  0x00 ; '.'
0000000000207cda         db  0x00 ; '.'
0000000000207cdb         db  0x00 ; '.'
0000000000207cdc         db  0x00 ; '.'
0000000000207cdd         db  0x00 ; '.'
0000000000207cde         db  0x00 ; '.'
0000000000207cdf         db  0x00 ; '.'
0000000000207ce0         db  0x80 ; '.'
0000000000207ce1         db  0x08 ; '.'
0000000000207ce2         db  0x00 ; '.'
0000000000207ce3         db  0x00 ; '.'
0000000000207ce4         db  0x00 ; '.'
0000000000207ce5         db  0x00 ; '.'
0000000000207ce6         db  0x00 ; '.'
0000000000207ce7         db  0x00 ; '.'
0000000000207ce8         db  0x06 ; '.'
0000000000207ce9         db  0x00 ; '.'
0000000000207cea         db  0x00 ; '.'
0000000000207ceb         db  0x00 ; '.'
0000000000207cec         db  0x00 ; '.'
0000000000207ced         db  0x00 ; '.'
0000000000207cee         db  0x00 ; '.'
0000000000207cef         db  0x00 ; '.'
0000000000207cf0         db  0xe0 ; '.'
0000000000207cf1         db  0x02 ; '.'
0000000000207cf2         db  0x00 ; '.'
0000000000207cf3         db  0x00 ; '.'
0000000000207cf4         db  0x00 ; '.'
0000000000207cf5         db  0x00 ; '.'
0000000000207cf6         db  0x00 ; '.'
0000000000207cf7         db  0x00 ; '.'
0000000000207cf8         db  0x0a ; '.'
0000000000207cf9         db  0x00 ; '.'
0000000000207cfa         db  0x00 ; '.'
0000000000207cfb         db  0x00 ; '.'
0000000000207cfc         db  0x00 ; '.'
0000000000207cfd         db  0x00 ; '.'
0000000000207cfe         db  0x00 ; '.'
0000000000207cff         db  0x00 ; '.'
0000000000207d00         db  0xce ; '.'
0000000000207d01         db  0x02 ; '.'
0000000000207d02         db  0x00 ; '.'
0000000000207d03         db  0x00 ; '.'
0000000000207d04         db  0x00 ; '.'
0000000000207d05         db  0x00 ; '.'
0000000000207d06         db  0x00 ; '.'
0000000000207d07         db  0x00 ; '.'
0000000000207d08         db  0x0b ; '.'
0000000000207d09         db  0x00 ; '.'
0000000000207d0a         db  0x00 ; '.'
0000000000207d0b         db  0x00 ; '.'
0000000000207d0c         db  0x00 ; '.'
0000000000207d0d         db  0x00 ; '.'
0000000000207d0e         db  0x00 ; '.'
0000000000207d0f         db  0x00 ; '.'
0000000000207d10         db  0x18 ; '.'
0000000000207d11         db  0x00 ; '.'
0000000000207d12         db  0x00 ; '.'
0000000000207d13         db  0x00 ; '.'
0000000000207d14         db  0x00 ; '.'
0000000000207d15         db  0x00 ; '.'
0000000000207d16         db  0x00 ; '.'
0000000000207d17         db  0x00 ; '.'
0000000000207d18         db  0x15 ; '.'
0000000000207d19         db  0x00 ; '.'
0000000000207d1a         db  0x00 ; '.'
0000000000207d1b         db  0x00 ; '.'
0000000000207d1c         db  0x00 ; '.'
0000000000207d1d         db  0x00 ; '.'
0000000000207d1e         db  0x00 ; '.'
0000000000207d1f         db  0x00 ; '.'
0000000000207d20         db  0x00 ; '.'
0000000000207d21         db  0x00 ; '.'
0000000000207d22         db  0x00 ; '.'
0000000000207d23         db  0x00 ; '.'
0000000000207d24         db  0x00 ; '.'
0000000000207d25         db  0x00 ; '.'
0000000000207d26         db  0x00 ; '.'
0000000000207d27         db  0x00 ; '.'
0000000000207d28         db  0x03 ; '.'
0000000000207d29         db  0x00 ; '.'
0000000000207d2a         db  0x00 ; '.'
0000000000207d2b         db  0x00 ; '.'
0000000000207d2c         db  0x00 ; '.'
0000000000207d2d         db  0x00 ; '.'
0000000000207d2e         db  0x00 ; '.'
0000000000207d2f         db  0x00 ; '.'
0000000000207d30         db  0x48 ; 'H'
0000000000207d31         db  0x7e ; '~'
0000000000207d32         db  0x20 ; ' '
0000000000207d33         db  0x00 ; '.'
0000000000207d34         db  0x00 ; '.'
0000000000207d35         db  0x00 ; '.'
0000000000207d36         db  0x00 ; '.'
0000000000207d37         db  0x00 ; '.'
0000000000207d38         db  0x02 ; '.'
0000000000207d39         db  0x00 ; '.'
0000000000207d3a         db  0x00 ; '.'
0000000000207d3b         db  0x00 ; '.'
0000000000207d3c         db  0x00 ; '.'
0000000000207d3d         db  0x00 ; '.'
0000000000207d3e         db  0x00 ; '.'
0000000000207d3f         db  0x00 ; '.'
0000000000207d40         db  0x38 ; '8'
0000000000207d41         db  0x04 ; '.'
0000000000207d42         db  0x00 ; '.'
0000000000207d43         db  0x00 ; '.'
0000000000207d44         db  0x00 ; '.'
0000000000207d45         db  0x00 ; '.'
0000000000207d46         db  0x00 ; '.'
0000000000207d47         db  0x00 ; '.'
0000000000207d48         db  0x14 ; '.'
0000000000207d49         db  0x00 ; '.'
0000000000207d4a         db  0x00 ; '.'
0000000000207d4b         db  0x00 ; '.'
0000000000207d4c         db  0x00 ; '.'
0000000000207d4d         db  0x00 ; '.'
0000000000207d4e         db  0x00 ; '.'
0000000000207d4f         db  0x00 ; '.'
0000000000207d50         db  0x07 ; '.'
0000000000207d51         db  0x00 ; '.'
0000000000207d52         db  0x00 ; '.'
0000000000207d53         db  0x00 ; '.'
0000000000207d54         db  0x00 ; '.'
0000000000207d55         db  0x00 ; '.'
0000000000207d56         db  0x00 ; '.'
0000000000207d57         db  0x00 ; '.'
0000000000207d58         db  0x17 ; '.'
0000000000207d59         db  0x00 ; '.'
0000000000207d5a         db  0x00 ; '.'
0000000000207d5b         db  0x00 ; '.'
0000000000207d5c         db  0x00 ; '.'
0000000000207d5d         db  0x00 ; '.'
0000000000207d5e         db  0x00 ; '.'
0000000000207d5f         db  0x00 ; '.'
0000000000207d60         db  0x40 ; '@'
0000000000207d61         db  0x0f ; '.'
0000000000207d62         db  0x00 ; '.'
0000000000207d63         db  0x00 ; '.'
0000000000207d64         db  0x00 ; '.'
0000000000207d65         db  0x00 ; '.'
0000000000207d66         db  0x00 ; '.'
0000000000207d67         db  0x00 ; '.'
0000000000207d68         db  0x07 ; '.'
0000000000207d69         db  0x00 ; '.'
0000000000207d6a         db  0x00 ; '.'
0000000000207d6b         db  0x00 ; '.'
0000000000207d6c         db  0x00 ; '.'
0000000000207d6d         db  0x00 ; '.'
0000000000207d6e         db  0x00 ; '.'
0000000000207d6f         db  0x00 ; '.'
0000000000207d70         db  0x28 ; '('
0000000000207d71         db  0x0c ; '.'
0000000000207d72         db  0x00 ; '.'
0000000000207d73         db  0x00 ; '.'
0000000000207d74         db  0x00 ; '.'
0000000000207d75         db  0x00 ; '.'
0000000000207d76         db  0x00 ; '.'
0000000000207d77         db  0x00 ; '.'
0000000000207d78         db  0x08 ; '.'
0000000000207d79         db  0x00 ; '.'
0000000000207d7a         db  0x00 ; '.'
0000000000207d7b         db  0x00 ; '.'
0000000000207d7c         db  0x00 ; '.'
0000000000207d7d         db  0x00 ; '.'
0000000000207d7e         db  0x00 ; '.'
0000000000207d7f         db  0x00 ; '.'
0000000000207d80         db  0x18 ; '.'
0000000000207d81         db  0x03 ; '.'
0000000000207d82         db  0x00 ; '.'
0000000000207d83         db  0x00 ; '.'
0000000000207d84         db  0x00 ; '.'
0000000000207d85         db  0x00 ; '.'
0000000000207d86         db  0x00 ; '.'
0000000000207d87         db  0x00 ; '.'
0000000000207d88         db  0x09 ; '.'
0000000000207d89         db  0x00 ; '.'
0000000000207d8a         db  0x00 ; '.'
0000000000207d8b         db  0x00 ; '.'
0000000000207d8c         db  0x00 ; '.'
0000000000207d8d         db  0x00 ; '.'
0000000000207d8e         db  0x00 ; '.'
0000000000207d8f         db  0x00 ; '.'
0000000000207d90         db  0x18 ; '.'
0000000000207d91         db  0x00 ; '.'
0000000000207d92         db  0x00 ; '.'
0000000000207d93         db  0x00 ; '.'
0000000000207d94         db  0x00 ; '.'
0000000000207d95         db  0x00 ; '.'
0000000000207d96         db  0x00 ; '.'
0000000000207d97         db  0x00 ; '.'
0000000000207d98         db  0x1e ; '.'
0000000000207d99         db  0x00 ; '.'
0000000000207d9a         db  0x00 ; '.'
0000000000207d9b         db  0x00 ; '.'
0000000000207d9c         db  0x00 ; '.'
0000000000207d9d         db  0x00 ; '.'
0000000000207d9e         db  0x00 ; '.'
0000000000207d9f         db  0x00 ; '.'
0000000000207da0         db  0x08 ; '.'
0000000000207da1         db  0x00 ; '.'
0000000000207da2         db  0x00 ; '.'
0000000000207da3         db  0x00 ; '.'
0000000000207da4         db  0x00 ; '.'
0000000000207da5         db  0x00 ; '.'
0000000000207da6         db  0x00 ; '.'
0000000000207da7         db  0x00 ; '.'
0000000000207da8         db  0xfb ; '.'
0000000000207da9         db  0xff ; '.'
0000000000207daa         db  0xff ; '.'
0000000000207dab         db  0x6f ; 'o'
0000000000207dac         db  0x00 ; '.'
0000000000207dad         db  0x00 ; '.'
0000000000207dae         db  0x00 ; '.'
0000000000207daf         db  0x00 ; '.'
0000000000207db0         db  0x01 ; '.'
0000000000207db1         db  0x00 ; '.'
0000000000207db2         db  0x00 ; '.'
0000000000207db3         db  0x08 ; '.'
0000000000207db4         db  0x00 ; '.'
0000000000207db5         db  0x00 ; '.'
0000000000207db6         db  0x00 ; '.'
0000000000207db7         db  0x00 ; '.'
0000000000207db8         db  0xfe ; '.'
0000000000207db9         db  0xff ; '.'
0000000000207dba         db  0xff ; '.'
0000000000207dbb         db  0x6f ; 'o'
0000000000207dbc         db  0x00 ; '.'
0000000000207dbd         db  0x00 ; '.'
0000000000207dbe         db  0x00 ; '.'
0000000000207dbf         db  0x00 ; '.'
0000000000207dc0         db  0xc8 ; '.'
0000000000207dc1         db  0x0b ; '.'
0000000000207dc2         db  0x00 ; '.'
0000000000207dc3         db  0x00 ; '.'
0000000000207dc4         db  0x00 ; '.'
0000000000207dc5         db  0x00 ; '.'
0000000000207dc6         db  0x00 ; '.'
0000000000207dc7         db  0x00 ; '.'
0000000000207dc8         db  0xff ; '.'
0000000000207dc9         db  0xff ; '.'
0000000000207dca         db  0xff ; '.'
0000000000207dcb         db  0x6f ; 'o'
0000000000207dcc         db  0x00 ; '.'
0000000000207dcd         db  0x00 ; '.'
0000000000207dce         db  0x00 ; '.'
0000000000207dcf         db  0x00 ; '.'
0000000000207dd0         db  0x01 ; '.'
0000000000207dd1         db  0x00 ; '.'
0000000000207dd2         db  0x00 ; '.'
0000000000207dd3         db  0x00 ; '.'
0000000000207dd4         db  0x00 ; '.'
0000000000207dd5         db  0x00 ; '.'
0000000000207dd6         db  0x00 ; '.'
0000000000207dd7         db  0x00 ; '.'
0000000000207dd8         db  0xf0 ; '.'
0000000000207dd9         db  0xff ; '.'
0000000000207dda         db  0xff ; '.'
0000000000207ddb         db  0x6f ; 'o'
0000000000207ddc         db  0x00 ; '.'
0000000000207ddd         db  0x00 ; '.'
0000000000207dde         db  0x00 ; '.'
0000000000207ddf         db  0x00 ; '.'
0000000000207de0         db  0x4e ; 'N'
0000000000207de1         db  0x0b ; '.'
0000000000207de2         db  0x00 ; '.'
0000000000207de3         db  0x00 ; '.'
0000000000207de4         db  0x00 ; '.'
0000000000207de5         db  0x00 ; '.'
0000000000207de6         db  0x00 ; '.'
0000000000207de7         db  0x00 ; '.'
0000000000207de8         db  0xf9 ; '.'
0000000000207de9         db  0xff ; '.'
0000000000207dea         db  0xff ; '.'
0000000000207deb         db  0x6f ; 'o'
0000000000207dec         db  0x00 ; '.'
0000000000207ded         db  0x00 ; '.'
0000000000207dee         db  0x00 ; '.'
0000000000207def         db  0x00 ; '.'
0000000000207df0         db  0x15 ; '.'
0000000000207df1         db  0x00 ; '.'
0000000000207df2         db  0x00 ; '.'
0000000000207df3         db  0x00 ; '.'
0000000000207df4         db  0x00 ; '.'
0000000000207df5         db  0x00 ; '.'
0000000000207df6         db  0x00 ; '.'
0000000000207df7         db  0x00 ; '.'
0000000000207df8         db  0x00 ; '.'
0000000000207df9         db  0x00 ; '.'
0000000000207dfa         db  0x00 ; '.'
0000000000207dfb         db  0x00 ; '.'
0000000000207dfc         db  0x00 ; '.'
0000000000207dfd         db  0x00 ; '.'
0000000000207dfe         db  0x00 ; '.'
0000000000207dff         db  0x00 ; '.'
0000000000207e00         db  0x00 ; '.'
0000000000207e01         db  0x00 ; '.'
0000000000207e02         db  0x00 ; '.'
0000000000207e03         db  0x00 ; '.'
0000000000207e04         db  0x00 ; '.'
0000000000207e05         db  0x00 ; '.'
0000000000207e06         db  0x00 ; '.'
0000000000207e07         db  0x00 ; '.'
0000000000207e08         db  0x00 ; '.'
0000000000207e09         db  0x00 ; '.'
0000000000207e0a         db  0x00 ; '.'
0000000000207e0b         db  0x00 ; '.'
0000000000207e0c         db  0x00 ; '.'
0000000000207e0d         db  0x00 ; '.'
0000000000207e0e         db  0x00 ; '.'
0000000000207e0f         db  0x00 ; '.'
0000000000207e10         db  0x00 ; '.'
0000000000207e11         db  0x00 ; '.'
0000000000207e12         db  0x00 ; '.'
0000000000207e13         db  0x00 ; '.'
0000000000207e14         db  0x00 ; '.'
0000000000207e15         db  0x00 ; '.'
0000000000207e16         db  0x00 ; '.'
0000000000207e17         db  0x00 ; '.'
0000000000207e18         db  0x00 ; '.'
0000000000207e19         db  0x00 ; '.'
0000000000207e1a         db  0x00 ; '.'
0000000000207e1b         db  0x00 ; '.'
0000000000207e1c         db  0x00 ; '.'
0000000000207e1d         db  0x00 ; '.'
0000000000207e1e         db  0x00 ; '.'
0000000000207e1f         db  0x00 ; '.'
0000000000207e20         db  0x00 ; '.'
0000000000207e21         db  0x00 ; '.'
0000000000207e22         db  0x00 ; '.'
0000000000207e23         db  0x00 ; '.'
0000000000207e24         db  0x00 ; '.'
0000000000207e25         db  0x00 ; '.'
0000000000207e26         db  0x00 ; '.'
0000000000207e27         db  0x00 ; '.'
0000000000207e28         db  0x00 ; '.'
0000000000207e29         db  0x00 ; '.'
0000000000207e2a         db  0x00 ; '.'
0000000000207e2b         db  0x00 ; '.'
0000000000207e2c         db  0x00 ; '.'
0000000000207e2d         db  0x00 ; '.'
0000000000207e2e         db  0x00 ; '.'
0000000000207e2f         db  0x00 ; '.'
0000000000207e30         db  0x00 ; '.'
0000000000207e31         db  0x00 ; '.'
0000000000207e32         db  0x00 ; '.'
0000000000207e33         db  0x00 ; '.'
0000000000207e34         db  0x00 ; '.'
0000000000207e35         db  0x00 ; '.'
0000000000207e36         db  0x00 ; '.'
0000000000207e37         db  0x00 ; '.'
0000000000207e38         db  0x00 ; '.'
0000000000207e39         db  0x00 ; '.'
0000000000207e3a         db  0x00 ; '.'
0000000000207e3b         db  0x00 ; '.'
0000000000207e3c         db  0x00 ; '.'
0000000000207e3d         db  0x00 ; '.'
0000000000207e3e         db  0x00 ; '.'
0000000000207e3f         db  0x00 ; '.'
0000000000207e40         db  0x00 ; '.'
0000000000207e41         db  0x00 ; '.'
0000000000207e42         db  0x00 ; '.'
0000000000207e43         db  0x00 ; '.'
0000000000207e44         db  0x00 ; '.'
0000000000207e45         db  0x00 ; '.'
0000000000207e46         db  0x00 ; '.'
0000000000207e47         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x207e48; 0x207ff0[ (424 bytes)
        ; File offset : [32328; 32752[ (424 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000207e48         db  0x58 ; 'X'
0000000000207e49         db  0x7c ; '|'
0000000000207e4a         db  0x20 ; ' '
0000000000207e4b         db  0x00 ; '.'
0000000000207e4c         db  0x00 ; '.'
0000000000207e4d         db  0x00 ; '.'
0000000000207e4e         db  0x00 ; '.'
0000000000207e4f         db  0x00 ; '.'
                     qword_207e50:
0000000000207e50         dq         0x0000000000000000                          ; DATA XREF=0x1390
0000000000207e58         db  0x00 ; '.'                                         ; DATA XREF=0x1396
0000000000207e59         db  0x00 ; '.'
0000000000207e5a         db  0x00 ; '.'
0000000000207e5b         db  0x00 ; '.'
0000000000207e5c         db  0x00 ; '.'
0000000000207e5d         db  0x00 ; '.'
0000000000207e5e         db  0x00 ; '.'
0000000000207e5f         db  0x00 ; '.'
                     __uflow@GOT:        // __uflow
0000000000207e60         dq         0x0000000000208260                          ; DATA XREF=j___uflow
                     free@GOT:        // free
0000000000207e68         dq         0x0000000000208268                          ; DATA XREF=j_free
                     abort@GOT:        // abort
0000000000207e70         dq         0x0000000000208270                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000207e78         dq         0x0000000000208278                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
0000000000207e80         dq         0x0000000000208280                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000207e88         dq         0x0000000000208290                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000207e90         dq         0x0000000000208298                          ; DATA XREF=j___fpending
                     clearerr_unlocked@GOT:        // clearerr_unlocked
0000000000207e98         dq         0x00000000002082a0                          ; DATA XREF=j_clearerr_unlocked
                     textdomain@GOT:        // textdomain
0000000000207ea0         dq         0x00000000002082a8                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
0000000000207ea8         dq         0x00000000002082b0                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
0000000000207eb0         dq         0x00000000002082b8                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
0000000000207eb8         dq         0x00000000002082c0                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000207ec0         dq         0x00000000002082c8                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000207ec8         dq         0x00000000002082d0                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000207ed0         dq         0x00000000002082d8                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
0000000000207ed8         dq         0x00000000002082e0                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000207ee0         dq         0x00000000002082e8                          ; DATA XREF=j_mbrtowc
                     __overflow@GOT:        // __overflow
0000000000207ee8         dq         0x00000000002082f0                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
0000000000207ef0         dq         0x00000000002082f8                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
0000000000207ef8         dq         0x0000000000208300                          ; DATA XREF=j_lseek
                     memset@GOT:        // memset
0000000000207f00         dq         0x0000000000208308                          ; DATA XREF=j_memset
                     posix_fadvise@GOT:        // posix_fadvise
0000000000207f08         dq         0x0000000000208310                          ; DATA XREF=j_posix_fadvise
                     memcmp@GOT:        // memcmp
0000000000207f10         dq         0x0000000000208320                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000207f18         dq         0x0000000000208328                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000207f20         dq         0x0000000000208330                          ; DATA XREF=j_calloc
                     memcpy@GOT:        // memcpy
0000000000207f28         dq         0x0000000000208340                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
0000000000207f30         dq         0x0000000000208348                          ; DATA XREF=j_fileno
                     malloc@GOT:        // malloc
0000000000207f38         dq         0x0000000000208350                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000207f40         dq         0x0000000000208358                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000207f48         dq         0x0000000000208360                          ; DATA XREF=j_nl_langinfo
                     __freading@GOT:        // __freading
0000000000207f50         dq         0x0000000000208368                          ; DATA XREF=j___freading
                     fwrite_unlocked@GOT:        // fwrite_unlocked
0000000000207f58         dq         0x0000000000208370                          ; DATA XREF=j_fwrite_unlocked
                     realloc@GOT:        // realloc
0000000000207f60         dq         0x0000000000208378                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
0000000000207f68         dq         0x0000000000208380                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000207f70         dq         0x0000000000208388                          ; DATA XREF=j___printf_chk
                     error@GOT:        // error
0000000000207f78         dq         0x0000000000208390                          ; DATA XREF=j_error
                     fseeko@GOT:        // fseeko
0000000000207f80         dq         0x0000000000208398                          ; DATA XREF=j_fseeko
                     fopen@GOT:        // fopen
0000000000207f88         dq         0x00000000002083a0                          ; DATA XREF=j_fopen
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000207f90         dq         0x00000000002083a8                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
0000000000207f98         dq         0x00000000002083b0                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000207fa0         dq         0x00000000002083b8                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000207fa8         dq         0x00000000002083c0                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000207fb0         dq         0x00000000002083d0                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000207fb8         dq         0x00000000002083d8                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000207fc0         dq         0x00000000002083e8                          ; DATA XREF=j___ctype_b_loc
                     qword_207fc8:
0000000000207fc8         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000207fd0         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000207fd1         db  0x00 ; '.'
0000000000207fd2         db  0x00 ; '.'
0000000000207fd3         db  0x00 ; '.'
0000000000207fd4         db  0x00 ; '.'
0000000000207fd5         db  0x00 ; '.'
0000000000207fd6         db  0x00 ; '.'
0000000000207fd7         db  0x00 ; '.'
                     qword_207fd8:
0000000000207fd8         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_207fe0:
0000000000207fe0         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_207fe8:
0000000000207fe8         dq         0x0000000000000000                          ; DATA XREF=j_qword_207fe8, __do_global_dtors_aux+9
0000000000207ff0         db  0x00 ; '.'
0000000000207ff1         db  0x00 ; '.'
0000000000207ff2         db  0x00 ; '.'
0000000000207ff3         db  0x00 ; '.'
0000000000207ff4         db  0x00 ; '.'
0000000000207ff5         db  0x00 ; '.'
0000000000207ff6         db  0x00 ; '.'
0000000000207ff7         db  0x00 ; '.'
0000000000207ff8         db  0x00 ; '.'
0000000000207ff9         db  0x00 ; '.'
0000000000207ffa         db  0x00 ; '.'
0000000000207ffb         db  0x00 ; '.'
0000000000207ffc         db  0x00 ; '.'
0000000000207ffd         db  0x00 ; '.'
0000000000207ffe         db  0x00 ; '.'
0000000000207fff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x208000; 0x2080a0[ (160 bytes)
        ; File offset : [32768; 32928[ (160 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

0000000000208000         db  0x00 ; '.'
0000000000208001         db  0x00 ; '.'
0000000000208002         db  0x00 ; '.'
0000000000208003         db  0x00 ; '.'
0000000000208004         db  0x00 ; '.'
0000000000208005         db  0x00 ; '.'
0000000000208006         db  0x00 ; '.'
0000000000208007         db  0x00 ; '.'
                     __dso_handle:
0000000000208008         dq         0x0000000000208008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     line_delim:
0000000000208010         db         0x0a                                        ; DATA XREF=main+172, paste_parallel+450, paste_parallel+519, paste_parallel+909, paste_parallel+1072, paste_serial+197, paste_serial+418, paste_serial+586
0000000000208011         align      8
                     Version:
0000000000208018         dq         0x000000000000568c                          ; "8.31", DATA XREF=main+206
                     exit_failure:
0000000000208020         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23
0000000000208024         db  0x00 ; '.'
0000000000208025         db  0x00 ; '.'
0000000000208026         db  0x00 ; '.'
0000000000208027         db  0x00 ; '.'
0000000000208028         db  0x00 ; '.'
0000000000208029         db  0x00 ; '.'
000000000020802a         db  0x00 ; '.'
000000000020802b         db  0x00 ; '.'
000000000020802c         db  0x00 ; '.'
000000000020802d         db  0x00 ; '.'
000000000020802e         db  0x00 ; '.'
000000000020802f         db  0x00 ; '.'
0000000000208030         db  0x00 ; '.'
0000000000208031         db  0x00 ; '.'
0000000000208032         db  0x00 ; '.'
0000000000208033         db  0x00 ; '.'
0000000000208034         db  0x00 ; '.'
0000000000208035         db  0x00 ; '.'
0000000000208036         db  0x00 ; '.'
0000000000208037         db  0x00 ; '.'
0000000000208038         db  0x00 ; '.'
0000000000208039         db  0x00 ; '.'
000000000020803a         db  0x00 ; '.'
000000000020803b         db  0x00 ; '.'
000000000020803c         db  0x00 ; '.'
000000000020803d         db  0x00 ; '.'
000000000020803e         db  0x00 ; '.'
000000000020803f         db  0x00 ; '.'
                     quote_quoting_options:
0000000000208040         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
0000000000208041         db  0x00 ; '.'
0000000000208042         db  0x00 ; '.'
0000000000208043         db  0x00 ; '.'
0000000000208044         db  0x00 ; '.'
0000000000208045         db  0x00 ; '.'
0000000000208046         db  0x00 ; '.'
0000000000208047         db  0x00 ; '.'
0000000000208048         db  0x00 ; '.'
0000000000208049         db  0x00 ; '.'
000000000020804a         db  0x00 ; '.'
000000000020804b         db  0x00 ; '.'
000000000020804c         db  0x00 ; '.'
000000000020804d         db  0x00 ; '.'
000000000020804e         db  0x00 ; '.'
000000000020804f         db  0x00 ; '.'
0000000000208050         db  0x00 ; '.'
0000000000208051         db  0x00 ; '.'
0000000000208052         db  0x00 ; '.'
0000000000208053         db  0x00 ; '.'
0000000000208054         db  0x00 ; '.'
0000000000208055         db  0x00 ; '.'
0000000000208056         db  0x00 ; '.'
0000000000208057         db  0x00 ; '.'
0000000000208058         db  0x00 ; '.'
0000000000208059         db  0x00 ; '.'
000000000020805a         db  0x00 ; '.'
000000000020805b         db  0x00 ; '.'
000000000020805c         db  0x00 ; '.'
000000000020805d         db  0x00 ; '.'
000000000020805e         db  0x00 ; '.'
000000000020805f         db  0x00 ; '.'
0000000000208060         db  0x00 ; '.'
0000000000208061         db  0x00 ; '.'
0000000000208062         db  0x00 ; '.'
0000000000208063         db  0x00 ; '.'
0000000000208064         db  0x00 ; '.'
0000000000208065         db  0x00 ; '.'
0000000000208066         db  0x00 ; '.'
0000000000208067         db  0x00 ; '.'
0000000000208068         db  0x00 ; '.'
0000000000208069         db  0x00 ; '.'
000000000020806a         db  0x00 ; '.'
000000000020806b         db  0x00 ; '.'
000000000020806c         db  0x00 ; '.'
000000000020806d         db  0x00 ; '.'
000000000020806e         db  0x00 ; '.'
000000000020806f         db  0x00 ; '.'
0000000000208070         db  0x00 ; '.'
0000000000208071         db  0x00 ; '.'
0000000000208072         db  0x00 ; '.'
0000000000208073         db  0x00 ; '.'
0000000000208074         db  0x00 ; '.'
0000000000208075         db  0x00 ; '.'
0000000000208076         db  0x00 ; '.'
0000000000208077         db  0x00 ; '.'
                     nslots:
0000000000208078         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020807c         db  0x00 ; '.'
000000000020807d         db  0x00 ; '.'
000000000020807e         db  0x00 ; '.'
000000000020807f         db  0x00 ; '.'
                     slotvec:
0000000000208080         dq         0x0000000000208090                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
0000000000208088         db  0x00 ; '.'
0000000000208089         db  0x00 ; '.'
000000000020808a         db  0x00 ; '.'
000000000020808b         db  0x00 ; '.'
000000000020808c         db  0x00 ; '.'
000000000020808d         db  0x00 ; '.'
000000000020808e         db  0x00 ; '.'
000000000020808f         db  0x00 ; '.'
                     slotvec0:
0000000000208090         dq         1.26481e-321, 1.05246e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x2080a0; 0x208258[ (440 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
00000000002080a0         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
00000000002080a1         db  0x00 ; '.'
00000000002080a2         db  0x00 ; '.'
00000000002080a3         db  0x00 ; '.'
00000000002080a4         db  0x00 ; '.'
00000000002080a5         db  0x00 ; '.'
00000000002080a6         db  0x00 ; '.'
00000000002080a7         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
00000000002080a8         db  0x00 ; '.'                                         ; DATA XREF=main+199, paste_parallel+411, paste_parallel+534, paste_parallel+799, paste_parallel+858, paste_parallel+894, paste_parallel+1088, paste_serial+208, paste_serial+248, paste_serial+384, paste_serial+593
00000000002080a9         db  0x00 ; '.'
00000000002080aa         db  0x00 ; '.'
00000000002080ab         db  0x00 ; '.'
00000000002080ac         db  0x00 ; '.'
00000000002080ad         db  0x00 ; '.'
00000000002080ae         db  0x00 ; '.'
00000000002080af         db  0x00 ; '.'
                     stdin@@GLIBC_2.2.5:
00000000002080b0         db  0x00 ; '.'                                         ; DATA XREF=main+658, paste_parallel+134, paste_parallel+587, paste_parallel+1037, paste_serial+89
00000000002080b1         db  0x00 ; '.'
00000000002080b2         db  0x00 ; '.'
00000000002080b3         db  0x00 ; '.'
00000000002080b4         db  0x00 ; '.'
00000000002080b5         db  0x00 ; '.'
00000000002080b6         db  0x00 ; '.'
00000000002080b7         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
00000000002080b8         db  0x00 ; '.'                                         ; DATA XREF=main+300, main+504
00000000002080b9         db  0x00 ; '.'
00000000002080ba         db  0x00 ; '.'
00000000002080bb         db  0x00 ; '.'
00000000002080bc         db  0x00 ; '.'
00000000002080bd         db  0x00 ; '.'
00000000002080be         db  0x00 ; '.'
00000000002080bf         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
00000000002080c0         db  0x00 ; '.'                                         ; DATA XREF=main+264
00000000002080c1         db  0x00 ; '.'
00000000002080c2         db  0x00 ; '.'
00000000002080c3         db  0x00 ; '.'
00000000002080c4         db  0x00 ; '.'
00000000002080c5         db  0x00 ; '.'
00000000002080c6         db  0x00 ; '.'
00000000002080c7         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
00000000002080c8         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
00000000002080c9         db  0x00 ; '.'
00000000002080ca         db  0x00 ; '.'
00000000002080cb         db  0x00 ; '.'
00000000002080cc         db  0x00 ; '.'
00000000002080cd         db  0x00 ; '.'
00000000002080ce         db  0x00 ; '.'
00000000002080cf         db  0x00 ; '.'
00000000002080d0         db  0x00 ; '.'
00000000002080d1         db  0x00 ; '.'
00000000002080d2         db  0x00 ; '.'
00000000002080d3         db  0x00 ; '.'
00000000002080d4         db  0x00 ; '.'
00000000002080d5         db  0x00 ; '.'
00000000002080d6         db  0x00 ; '.'
00000000002080d7         db  0x00 ; '.'
00000000002080d8         db  0x00 ; '.'
00000000002080d9         db  0x00 ; '.'
00000000002080da         db  0x00 ; '.'
00000000002080db         db  0x00 ; '.'
00000000002080dc         db  0x00 ; '.'
00000000002080dd         db  0x00 ; '.'
00000000002080de         db  0x00 ; '.'
00000000002080df         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
00000000002080e0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
00000000002080e1         db  0x00 ; '.'
00000000002080e2         db  0x00 ; '.'
00000000002080e3         db  0x00 ; '.'
00000000002080e4         db  0x00 ; '.'
00000000002080e5         db  0x00 ; '.'
00000000002080e6         db  0x00 ; '.'
00000000002080e7         db  0x00 ; '.'
                     completed.7697:
00000000002080e8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
00000000002080e9         db  0x00 ; '.'
00000000002080ea         db  0x00 ; '.'
00000000002080eb         db  0x00 ; '.'
00000000002080ec         db  0x00 ; '.'
00000000002080ed         db  0x00 ; '.'
00000000002080ee         db  0x00 ; '.'
00000000002080ef         db  0x00 ; '.'
                     delim_end:
00000000002080f0         db  0x00 ; '.'                                         ; DATA XREF=main+476, main+568, paste_parallel+666, paste_parallel+763, paste_serial+156, paste_serial+273
00000000002080f1         db  0x00 ; '.'
00000000002080f2         db  0x00 ; '.'
00000000002080f3         db  0x00 ; '.'
00000000002080f4         db  0x00 ; '.'
00000000002080f5         db  0x00 ; '.'
00000000002080f6         db  0x00 ; '.'
00000000002080f7         db  0x00 ; '.'
                     delims:
00000000002080f8         db  0x00 ; '.'                                         ; DATA XREF=main+338, main+517, paste_parallel+320, paste_parallel+777, paste_serial+111, paste_serial+292
00000000002080f9         db  0x00 ; '.'
00000000002080fa         db  0x00 ; '.'
00000000002080fb         db  0x00 ; '.'
00000000002080fc         db  0x00 ; '.'
00000000002080fd         db  0x00 ; '.'
00000000002080fe         db  0x00 ; '.'
00000000002080ff         db  0x00 ; '.'
                     serial_merge:
0000000000208100         db  0x00 ; '.'                                         ; DATA XREF=main+104, main+288, main+469
                     have_read_stdin:
0000000000208101         db  0x00 ; '.'                                         ; DATA XREF=main+97, main+531, paste_parallel+145, paste_parallel+293, paste_serial+96
0000000000208102         db  0x00 ; '.'
0000000000208103         db  0x00 ; '.'
0000000000208104         db  0x00 ; '.'
0000000000208105         db  0x00 ; '.'
0000000000208106         db  0x00 ; '.'
0000000000208107         db  0x00 ; '.'
                     ignore_EPIPE:
0000000000208108         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
0000000000208109         db  0x00 ; '.'
000000000020810a         db  0x00 ; '.'
000000000020810b         db  0x00 ; '.'
000000000020810c         db  0x00 ; '.'
000000000020810d         db  0x00 ; '.'
000000000020810e         db  0x00 ; '.'
000000000020810f         db  0x00 ; '.'
                     file_name:
0000000000208110         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
0000000000208111         db  0x00 ; '.'
0000000000208112         db  0x00 ; '.'
0000000000208113         db  0x00 ; '.'
0000000000208114         db  0x00 ; '.'
0000000000208115         db  0x00 ; '.'
0000000000208116         db  0x00 ; '.'
0000000000208117         db  0x00 ; '.'
                     program_name:
0000000000208118         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
0000000000208119         db  0x00 ; '.'
000000000020811a         db  0x00 ; '.'
000000000020811b         db  0x00 ; '.'
000000000020811c         db  0x00 ; '.'
000000000020811d         db  0x00 ; '.'
000000000020811e         db  0x00 ; '.'
000000000020811f         db  0x00 ; '.'
                     slot0:
0000000000208120         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
0000000000208121         db  0x00 ; '.'
0000000000208122         db  0x00 ; '.'
0000000000208123         db  0x00 ; '.'
0000000000208124         db  0x00 ; '.'
0000000000208125         db  0x00 ; '.'
0000000000208126         db  0x00 ; '.'
0000000000208127         db  0x00 ; '.'
0000000000208128         db  0x00 ; '.'
0000000000208129         db  0x00 ; '.'
000000000020812a         db  0x00 ; '.'
000000000020812b         db  0x00 ; '.'
000000000020812c         db  0x00 ; '.'
000000000020812d         db  0x00 ; '.'
000000000020812e         db  0x00 ; '.'
000000000020812f         db  0x00 ; '.'
0000000000208130         db  0x00 ; '.'
0000000000208131         db  0x00 ; '.'
0000000000208132         db  0x00 ; '.'
0000000000208133         db  0x00 ; '.'
0000000000208134         db  0x00 ; '.'
0000000000208135         db  0x00 ; '.'
0000000000208136         db  0x00 ; '.'
0000000000208137         db  0x00 ; '.'
0000000000208138         db  0x00 ; '.'
0000000000208139         db  0x00 ; '.'
000000000020813a         db  0x00 ; '.'
000000000020813b         db  0x00 ; '.'
000000000020813c         db  0x00 ; '.'
000000000020813d         db  0x00 ; '.'
000000000020813e         db  0x00 ; '.'
000000000020813f         db  0x00 ; '.'
0000000000208140         db  0x00 ; '.'
0000000000208141         db  0x00 ; '.'
0000000000208142         db  0x00 ; '.'
0000000000208143         db  0x00 ; '.'
0000000000208144         db  0x00 ; '.'
0000000000208145         db  0x00 ; '.'
0000000000208146         db  0x00 ; '.'
0000000000208147         db  0x00 ; '.'
0000000000208148         db  0x00 ; '.'
0000000000208149         db  0x00 ; '.'
000000000020814a         db  0x00 ; '.'
000000000020814b         db  0x00 ; '.'
000000000020814c         db  0x00 ; '.'
000000000020814d         db  0x00 ; '.'
000000000020814e         db  0x00 ; '.'
000000000020814f         db  0x00 ; '.'
0000000000208150         db  0x00 ; '.'
0000000000208151         db  0x00 ; '.'
0000000000208152         db  0x00 ; '.'
0000000000208153         db  0x00 ; '.'
0000000000208154         db  0x00 ; '.'
0000000000208155         db  0x00 ; '.'
0000000000208156         db  0x00 ; '.'
0000000000208157         db  0x00 ; '.'
0000000000208158         db  0x00 ; '.'
0000000000208159         db  0x00 ; '.'
000000000020815a         db  0x00 ; '.'
000000000020815b         db  0x00 ; '.'
000000000020815c         db  0x00 ; '.'
000000000020815d         db  0x00 ; '.'
000000000020815e         db  0x00 ; '.'
000000000020815f         db  0x00 ; '.'
0000000000208160         db  0x00 ; '.'
0000000000208161         db  0x00 ; '.'
0000000000208162         db  0x00 ; '.'
0000000000208163         db  0x00 ; '.'
0000000000208164         db  0x00 ; '.'
0000000000208165         db  0x00 ; '.'
0000000000208166         db  0x00 ; '.'
0000000000208167         db  0x00 ; '.'
0000000000208168         db  0x00 ; '.'
0000000000208169         db  0x00 ; '.'
000000000020816a         db  0x00 ; '.'
000000000020816b         db  0x00 ; '.'
000000000020816c         db  0x00 ; '.'
000000000020816d         db  0x00 ; '.'
000000000020816e         db  0x00 ; '.'
000000000020816f         db  0x00 ; '.'
0000000000208170         db  0x00 ; '.'
0000000000208171         db  0x00 ; '.'
0000000000208172         db  0x00 ; '.'
0000000000208173         db  0x00 ; '.'
0000000000208174         db  0x00 ; '.'
0000000000208175         db  0x00 ; '.'
0000000000208176         db  0x00 ; '.'
0000000000208177         db  0x00 ; '.'
0000000000208178         db  0x00 ; '.'
0000000000208179         db  0x00 ; '.'
000000000020817a         db  0x00 ; '.'
000000000020817b         db  0x00 ; '.'
000000000020817c         db  0x00 ; '.'
000000000020817d         db  0x00 ; '.'
000000000020817e         db  0x00 ; '.'
000000000020817f         db  0x00 ; '.'
0000000000208180         db  0x00 ; '.'
0000000000208181         db  0x00 ; '.'
0000000000208182         db  0x00 ; '.'
0000000000208183         db  0x00 ; '.'
0000000000208184         db  0x00 ; '.'
0000000000208185         db  0x00 ; '.'
0000000000208186         db  0x00 ; '.'
0000000000208187         db  0x00 ; '.'
0000000000208188         db  0x00 ; '.'
0000000000208189         db  0x00 ; '.'
000000000020818a         db  0x00 ; '.'
000000000020818b         db  0x00 ; '.'
000000000020818c         db  0x00 ; '.'
000000000020818d         db  0x00 ; '.'
000000000020818e         db  0x00 ; '.'
000000000020818f         db  0x00 ; '.'
0000000000208190         db  0x00 ; '.'
0000000000208191         db  0x00 ; '.'
0000000000208192         db  0x00 ; '.'
0000000000208193         db  0x00 ; '.'
0000000000208194         db  0x00 ; '.'
0000000000208195         db  0x00 ; '.'
0000000000208196         db  0x00 ; '.'
0000000000208197         db  0x00 ; '.'
0000000000208198         db  0x00 ; '.'
0000000000208199         db  0x00 ; '.'
000000000020819a         db  0x00 ; '.'
000000000020819b         db  0x00 ; '.'
000000000020819c         db  0x00 ; '.'
000000000020819d         db  0x00 ; '.'
000000000020819e         db  0x00 ; '.'
000000000020819f         db  0x00 ; '.'
00000000002081a0         db  0x00 ; '.'
00000000002081a1         db  0x00 ; '.'
00000000002081a2         db  0x00 ; '.'
00000000002081a3         db  0x00 ; '.'
00000000002081a4         db  0x00 ; '.'
00000000002081a5         db  0x00 ; '.'
00000000002081a6         db  0x00 ; '.'
00000000002081a7         db  0x00 ; '.'
00000000002081a8         db  0x00 ; '.'
00000000002081a9         db  0x00 ; '.'
00000000002081aa         db  0x00 ; '.'
00000000002081ab         db  0x00 ; '.'
00000000002081ac         db  0x00 ; '.'
00000000002081ad         db  0x00 ; '.'
00000000002081ae         db  0x00 ; '.'
00000000002081af         db  0x00 ; '.'
00000000002081b0         db  0x00 ; '.'
00000000002081b1         db  0x00 ; '.'
00000000002081b2         db  0x00 ; '.'
00000000002081b3         db  0x00 ; '.'
00000000002081b4         db  0x00 ; '.'
00000000002081b5         db  0x00 ; '.'
00000000002081b6         db  0x00 ; '.'
00000000002081b7         db  0x00 ; '.'
00000000002081b8         db  0x00 ; '.'
00000000002081b9         db  0x00 ; '.'
00000000002081ba         db  0x00 ; '.'
00000000002081bb         db  0x00 ; '.'
00000000002081bc         db  0x00 ; '.'
00000000002081bd         db  0x00 ; '.'
00000000002081be         db  0x00 ; '.'
00000000002081bf         db  0x00 ; '.'
00000000002081c0         db  0x00 ; '.'
00000000002081c1         db  0x00 ; '.'
00000000002081c2         db  0x00 ; '.'
00000000002081c3         db  0x00 ; '.'
00000000002081c4         db  0x00 ; '.'
00000000002081c5         db  0x00 ; '.'
00000000002081c6         db  0x00 ; '.'
00000000002081c7         db  0x00 ; '.'
00000000002081c8         db  0x00 ; '.'
00000000002081c9         db  0x00 ; '.'
00000000002081ca         db  0x00 ; '.'
00000000002081cb         db  0x00 ; '.'
00000000002081cc         db  0x00 ; '.'
00000000002081cd         db  0x00 ; '.'
00000000002081ce         db  0x00 ; '.'
00000000002081cf         db  0x00 ; '.'
00000000002081d0         db  0x00 ; '.'
00000000002081d1         db  0x00 ; '.'
00000000002081d2         db  0x00 ; '.'
00000000002081d3         db  0x00 ; '.'
00000000002081d4         db  0x00 ; '.'
00000000002081d5         db  0x00 ; '.'
00000000002081d6         db  0x00 ; '.'
00000000002081d7         db  0x00 ; '.'
00000000002081d8         db  0x00 ; '.'
00000000002081d9         db  0x00 ; '.'
00000000002081da         db  0x00 ; '.'
00000000002081db         db  0x00 ; '.'
00000000002081dc         db  0x00 ; '.'
00000000002081dd         db  0x00 ; '.'
00000000002081de         db  0x00 ; '.'
00000000002081df         db  0x00 ; '.'
00000000002081e0         db  0x00 ; '.'
00000000002081e1         db  0x00 ; '.'
00000000002081e2         db  0x00 ; '.'
00000000002081e3         db  0x00 ; '.'
00000000002081e4         db  0x00 ; '.'
00000000002081e5         db  0x00 ; '.'
00000000002081e6         db  0x00 ; '.'
00000000002081e7         db  0x00 ; '.'
00000000002081e8         db  0x00 ; '.'
00000000002081e9         db  0x00 ; '.'
00000000002081ea         db  0x00 ; '.'
00000000002081eb         db  0x00 ; '.'
00000000002081ec         db  0x00 ; '.'
00000000002081ed         db  0x00 ; '.'
00000000002081ee         db  0x00 ; '.'
00000000002081ef         db  0x00 ; '.'
00000000002081f0         db  0x00 ; '.'
00000000002081f1         db  0x00 ; '.'
00000000002081f2         db  0x00 ; '.'
00000000002081f3         db  0x00 ; '.'
00000000002081f4         db  0x00 ; '.'
00000000002081f5         db  0x00 ; '.'
00000000002081f6         db  0x00 ; '.'
00000000002081f7         db  0x00 ; '.'
00000000002081f8         db  0x00 ; '.'
00000000002081f9         db  0x00 ; '.'
00000000002081fa         db  0x00 ; '.'
00000000002081fb         db  0x00 ; '.'
00000000002081fc         db  0x00 ; '.'
00000000002081fd         db  0x00 ; '.'
00000000002081fe         db  0x00 ; '.'
00000000002081ff         db  0x00 ; '.'
0000000000208200         db  0x00 ; '.'
0000000000208201         db  0x00 ; '.'
0000000000208202         db  0x00 ; '.'
0000000000208203         db  0x00 ; '.'
0000000000208204         db  0x00 ; '.'
0000000000208205         db  0x00 ; '.'
0000000000208206         db  0x00 ; '.'
0000000000208207         db  0x00 ; '.'
0000000000208208         db  0x00 ; '.'
0000000000208209         db  0x00 ; '.'
000000000020820a         db  0x00 ; '.'
000000000020820b         db  0x00 ; '.'
000000000020820c         db  0x00 ; '.'
000000000020820d         db  0x00 ; '.'
000000000020820e         db  0x00 ; '.'
000000000020820f         db  0x00 ; '.'
0000000000208210         db  0x00 ; '.'
0000000000208211         db  0x00 ; '.'
0000000000208212         db  0x00 ; '.'
0000000000208213         db  0x00 ; '.'
0000000000208214         db  0x00 ; '.'
0000000000208215         db  0x00 ; '.'
0000000000208216         db  0x00 ; '.'
0000000000208217         db  0x00 ; '.'
0000000000208218         db  0x00 ; '.'
0000000000208219         db  0x00 ; '.'
000000000020821a         db  0x00 ; '.'
000000000020821b         db  0x00 ; '.'
000000000020821c         db  0x00 ; '.'
000000000020821d         db  0x00 ; '.'
000000000020821e         db  0x00 ; '.'
000000000020821f         db  0x00 ; '.'
                     default_quoting_options:
0000000000208220         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
0000000000208221         db  0x00 ; '.'
0000000000208222         db  0x00 ; '.'
0000000000208223         db  0x00 ; '.'
0000000000208224         db  0x00 ; '.'
0000000000208225         db  0x00 ; '.'
0000000000208226         db  0x00 ; '.'
0000000000208227         db  0x00 ; '.'
0000000000208228         db  0x00 ; '.'
0000000000208229         db  0x00 ; '.'
000000000020822a         db  0x00 ; '.'
000000000020822b         db  0x00 ; '.'
000000000020822c         db  0x00 ; '.'
000000000020822d         db  0x00 ; '.'
000000000020822e         db  0x00 ; '.'
000000000020822f         db  0x00 ; '.'
0000000000208230         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
0000000000208231         db  0x00 ; '.'
0000000000208232         db  0x00 ; '.'
0000000000208233         db  0x00 ; '.'
0000000000208234         db  0x00 ; '.'
0000000000208235         db  0x00 ; '.'
0000000000208236         db  0x00 ; '.'
0000000000208237         db  0x00 ; '.'
0000000000208238         db  0x00 ; '.'
0000000000208239         db  0x00 ; '.'
000000000020823a         db  0x00 ; '.'
000000000020823b         db  0x00 ; '.'
000000000020823c         db  0x00 ; '.'
000000000020823d         db  0x00 ; '.'
000000000020823e         db  0x00 ; '.'
000000000020823f         db  0x00 ; '.'
0000000000208240         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
0000000000208241         db  0x00 ; '.'
0000000000208242         db  0x00 ; '.'
0000000000208243         db  0x00 ; '.'
0000000000208244         db  0x00 ; '.'
0000000000208245         db  0x00 ; '.'
0000000000208246         db  0x00 ; '.'
0000000000208247         db  0x00 ; '.'
0000000000208248         db  0x00 ; '.'
0000000000208249         db  0x00 ; '.'
000000000020824a         db  0x00 ; '.'
000000000020824b         db  0x00 ; '.'
000000000020824c         db  0x00 ; '.'
000000000020824d         db  0x00 ; '.'
000000000020824e         db  0x00 ; '.'
000000000020824f         db  0x00 ; '.'
                     qword_208250:
0000000000208250         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
0000000000208251         db  0x00 ; '.'
0000000000208252         db  0x00 ; '.'
0000000000208253         db  0x00 ; '.'
0000000000208254         db  0x00 ; '.'
0000000000208255         db  0x00 ; '.'
0000000000208256         db  0x00 ; '.'
0000000000208257         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x208260; 0x208580[ (800 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x208260; 0x4107e0[ (2131328 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     __uflow:
0000000000208260         extern function code                                   ; DATA XREF=__uflow@GOT
                     free:
0000000000208268         extern function code                                   ; DATA XREF=free@GOT
                     abort:
0000000000208270         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
0000000000208278         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
0000000000208280         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
0000000000208288         extern function code
                     _exit:
0000000000208290         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
0000000000208298         extern function code                                   ; DATA XREF=__fpending@GOT
                     clearerr_unlocked:
00000000002082a0         extern function code                                   ; DATA XREF=clearerr_unlocked@GOT
                     textdomain:
00000000002082a8         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
00000000002082b0         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
00000000002082b8         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
00000000002082c0         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
00000000002082c8         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
00000000002082d0         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
00000000002082d8         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
00000000002082e0         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
00000000002082e8         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     __overflow:
00000000002082f0         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
00000000002082f8         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
0000000000208300         extern function code                                   ; DATA XREF=lseek@GOT
                     memset:
0000000000208308         extern function code                                   ; DATA XREF=memset@GOT
                     posix_fadvise:
0000000000208310         extern function code                                   ; DATA XREF=posix_fadvise@GOT
                     __libc_start_main:
0000000000208318         extern function code
                     memcmp:
0000000000208320         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
0000000000208328         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
0000000000208330         extern function code                                   ; DATA XREF=calloc@GOT
                     __gmon_start__:
0000000000208338         extern function code
                     memcpy:
0000000000208340         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
0000000000208348         extern function code                                   ; DATA XREF=fileno@GOT
                     malloc:
0000000000208350         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
0000000000208358         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
0000000000208360         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __freading:
0000000000208368         extern function code                                   ; DATA XREF=__freading@GOT
                     fwrite_unlocked:
0000000000208370         extern function code                                   ; DATA XREF=fwrite_unlocked@GOT
                     realloc:
0000000000208378         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
0000000000208380         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
0000000000208388         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     error:
0000000000208390         extern function code                                   ; DATA XREF=error@GOT
                     fseeko:
0000000000208398         extern function code                                   ; DATA XREF=fseeko@GOT
                     fopen:
00000000002083a0         extern function code                                   ; DATA XREF=fopen@GOT
                     __cxa_atexit:
00000000002083a8         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
00000000002083b0         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
00000000002083b8         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
00000000002083c0         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
00000000002083c8         extern function code
                     mbsinit:
00000000002083d0         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
00000000002083d8         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
00000000002083e0         extern function code
                     __ctype_b_loc:
00000000002083e8         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     __uflow@@GLIBC_2.2.5:
00000000002083f0         extern function code
                     free@@GLIBC_2.2.5:
00000000002083f8         extern function code
                     abort@@GLIBC_2.2.5:
0000000000208400         extern function code
                     __errno_location@@GLIBC_2.2.5:
0000000000208408         extern function code
                     strncmp@@GLIBC_2.2.5:
0000000000208410         extern function code
                     _ITM_deregisterTMCloneTable_208418:        // _ITM_deregisterTMCloneTable
0000000000208418         extern function code
                     _exit@@GLIBC_2.2.5:
0000000000208420         extern function code
                     __fpending@@GLIBC_2.2.5:
0000000000208428         extern function code
                     clearerr_unlocked@@GLIBC_2.2.5:
0000000000208430         extern function code
                     textdomain@@GLIBC_2.2.5:
0000000000208438         extern function code
                     fclose@@GLIBC_2.2.5:
0000000000208440         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
0000000000208448         extern function code
                     dcgettext@@GLIBC_2.2.5:
0000000000208450         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
0000000000208458         extern function code
                     strlen@@GLIBC_2.2.5:
0000000000208460         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
0000000000208468         extern function code
                     getopt_long@@GLIBC_2.2.5:
0000000000208470         extern function code
                     mbrtowc@@GLIBC_2.2.5:
0000000000208478         extern function code
                     __overflow@@GLIBC_2.2.5:
0000000000208480         extern function code
                     strrchr@@GLIBC_2.2.5:
0000000000208488         extern function code
                     lseek@@GLIBC_2.2.5:
0000000000208490         extern function code
                     memset@@GLIBC_2.2.5:
0000000000208498         extern function code
                     posix_fadvise@@GLIBC_2.2.5:
00000000002084a0         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
00000000002084a8         extern function code
                     memcmp@@GLIBC_2.2.5:
00000000002084b0         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
00000000002084b8         extern function code
                     calloc@@GLIBC_2.2.5:
00000000002084c0         extern function code
                     __gmon_start___2084c8:        // __gmon_start__
00000000002084c8         extern function code
                     memcpy@@GLIBC_2.14:
00000000002084d0         extern function code
                     fileno@@GLIBC_2.2.5:
00000000002084d8         extern function code
                     malloc@@GLIBC_2.2.5:
00000000002084e0         extern function code
                     fflush@@GLIBC_2.2.5:
00000000002084e8         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
00000000002084f0         extern function code
                     __freading@@GLIBC_2.2.5:
00000000002084f8         extern function code
                     fwrite_unlocked@@GLIBC_2.2.5:
0000000000208500         extern function code
                     realloc@@GLIBC_2.2.5:
0000000000208508         extern function code
                     setlocale@@GLIBC_2.2.5:
0000000000208510         extern function code
                     __printf_chk@@GLIBC_2.3.4:
0000000000208518         extern function code
                     error@@GLIBC_2.2.5:
0000000000208520         extern function code
                     fseeko@@GLIBC_2.2.5:
0000000000208528         extern function code
                     fopen@@GLIBC_2.2.5:
0000000000208530         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
0000000000208538         extern function code
                     exit@@GLIBC_2.2.5:
0000000000208540         extern function code
                     fwrite@@GLIBC_2.2.5:
0000000000208548         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
0000000000208550         extern function code
                     _ITM_registerTMCloneTable_208558:        // _ITM_registerTMCloneTable
0000000000208558         extern function code
                     mbsinit@@GLIBC_2.2.5:
0000000000208560         extern function code
                     iswprint@@GLIBC_2.2.5:
0000000000208568         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
0000000000208570         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
0000000000208578         extern function code
