
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/fold
        UUID: CE2F4076-B793-E1E0-A8A4-779BBA20CD92
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x6ea8[ (28328 bytes)
        ; File offset : [0; 28328[ (28328 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0xe0 ; '.'
0000000000000019         db  0x19 ; '.'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0xc0 ; '.'
0000000000000029         db  0x7a ; 'z'
000000000000002a         db  0x02 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0xa8 ; '.'
00000000000000d1         db  0x6e ; 'n'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0xa8 ; '.'
00000000000000d9         db  0x6e ; 'n'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x10 ; '.'
00000000000000f1         db  0x7b ; '{'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x10 ; '.'
00000000000000f9         db  0x7b ; '{'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x10 ; '.'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0x7b ; '{'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x70 ; 'p'
0000000000000109         db  0x05 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x28 ; '('
0000000000000111         db  0x07 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x38 ; '8'
0000000000000129         db  0x7c ; '|'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x38 ; '8'
0000000000000131         db  0x7c ; '|'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x38 ; '8'
0000000000000139         db  0x7c ; '|'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0x5c ; '\'
0000000000000199         db  0x60 ; '`'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0x5c ; '\'
00000000000001a1         db  0x60 ; '`'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0x5c ; '\'
00000000000001a9         db  0x60 ; '`'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0x74 ; 't'
00000000000001b1         db  0x02 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0x74 ; 't'
00000000000001b9         db  0x02 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'                                         ; DATA XREF=xstrtoumax+573
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x10 ; '.'
0000000000000209         db  0x7b ; '{'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x10 ; '.'
0000000000000211         db  0x7b ; '{'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x10 ; '.'
0000000000000219         db  0x7b ; '{'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0xf0 ; '.'
0000000000000221         db  0x04 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0xf0 ; '.'
0000000000000229         db  0x04 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0xce ; '.'
0000000000000285         db  0x2f ; '/'
0000000000000286         db  0x40 ; '@'
0000000000000287         db  0x76 ; 'v'
0000000000000288         db  0xb7 ; '.'
0000000000000289         db  0x93 ; '.'
000000000000028a         db  0xe1 ; '.'
000000000000028b         db  0xe0 ; '.'
000000000000028c         db  0xa8 ; '.'
000000000000028d         db  0xa4 ; '.'
000000000000028e         db  0x77 ; 'w'
000000000000028f         db  0x9b ; '.'
0000000000000290         db  0xba ; '.'
0000000000000291         db  0x20 ; ' '
0000000000000292         db  0xcd ; '.'
0000000000000293         db  0x92 ; '.'
0000000000000294         db  0x88 ; '.'
0000000000000295         db  0x73 ; 's'
0000000000000296         db  0xf1 ; '.'
0000000000000297         db  0x90 ; '.'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2e0[ (72 bytes)
        ; File offset : [664; 736[ (72 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x36 ; '6'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x61 ; 'a'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0xa0 ; '.'
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x36 ; '6'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x37 ; '7'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x3d ; '='
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x66 ; 'f'
00000000000002c5         db  0x55 ; 'U'
00000000000002c6         db  0x61 ; 'a'
00000000000002c7         db  0x10 ; '.'
00000000000002c8         db  0x96 ; '.'
00000000000002c9         db  0xa0 ; '.'
00000000000002ca         db  0x89 ; '.'
00000000000002cb         db  0x97 ; '.'
00000000000002cc         db  0xce ; '.'
00000000000002cd         db  0x2c ; ','
00000000000002ce         db  0x63 ; 'c'
00000000000002cf         db  0x72 ; 'r'
00000000000002d0         db  0xe4 ; '.'
00000000000002d1         db  0x62 ; 'b'
00000000000002d2         db  0x41 ; 'A'
00000000000002d3         db  0xf5 ; '.'
00000000000002d4         db  0x39 ; '9'
00000000000002d5         db  0xf2 ; '.'
00000000000002d6         db  0x8b ; '.'
00000000000002d7         db  0x1c ; '.'
00000000000002d8         db  0x32 ; '2'
00000000000002d9         db  0xc4 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0xb3 ; '.'
00000000000002dd         db  0xa2 ; '.'
00000000000002de         db  0xf7 ; '.'
00000000000002df         db  0x12 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0x8c8[ (1512 bytes)
        ; File offset : [736; 2248[ (1512 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x42 ; 'B'
00000000000002f9         db  0x01 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x43 ; 'C'
0000000000000311         db  0x02 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x80 ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0xf2 ; '.'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x37 ; '7'
0000000000000359         db  0x00 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x12 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0xa7 ; '.'
0000000000000371         db  0x02 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x20 ; ' '
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x8c ; '.'
0000000000000389         db  0x00 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0x97 ; '.'
00000000000003a1         db  0x01 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0xe2 ; '.'
00000000000003b9         db  0x01 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x2c ; ','
00000000000003d1         db  0x01 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0xde ; '.'                                         ; DATA XREF=xstrtoumax+420
00000000000003e9         db  0x01 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x4e ; 'N'                                         ; DATA XREF=xstrtoumax+437, xstrtoumax+806, xstrtoumax+878
0000000000000401         db  0x00 ; '.'
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0xb8 ; '.'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0xe4 ; '.'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x5e ; '^'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x7d ; '}'
0000000000000461         db  0x01 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x29 ; ')'
0000000000000479         db  0x00 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0xa2 ; '.'
0000000000000491         db  0x01 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x16 ; '.'
00000000000004a9         db  0x02 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x46 ; 'F'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x1f ; '.'
00000000000004d9         db  0x01 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0xaa ; '.'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x21 ; '!'
0000000000000509         db  0x02 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0xeb ; '.'
0000000000000521         db  0x00 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0xcf ; '.'
0000000000000539         db  0x00 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0xfd ; '.'
0000000000000551         db  0x01 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x03 ; '.'
0000000000000569         db  0x01 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x34 ; '4'
0000000000000581         db  0x02 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0xdd ; '.'
0000000000000599         db  0x00 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0xc3 ; '.'
00000000000005b1         db  0x02 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x20 ; ' '
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x25 ; '%'
00000000000005c9         db  0x01 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x89 ; '.'
00000000000005e1         db  0x01 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x33 ; '3'
00000000000005f9         db  0x01 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x0b ; '.'
0000000000000611         db  0x00 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x4a ; 'J'
0000000000000629         db  0x01 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x6b ; 'k'
0000000000000641         db  0x01 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0xed ; '.'
0000000000000659         db  0x01 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x78 ; 'x'
0000000000000671         db  0x00 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x1f ; '.'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x12 ; '.'
00000000000006a1         db  0x00 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0xd6 ; '.'
00000000000006b9         db  0x01 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x58 ; 'X'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x0f ; '.'
00000000000006e9         db  0x02 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x31 ; '1'
0000000000000701         db  0x00 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x63 ; 'c'
0000000000000719         db  0x02 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x8d ; '.'
0000000000000731         db  0x00 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x90 ; '.'
0000000000000749         db  0x01 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x0a ; '.'
0000000000000761         db  0x01 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0xd2 ; '.'
0000000000000779         db  0x02 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x20 ; ' '
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x3a ; ':'
0000000000000791         db  0x01 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x6f ; 'o'
00000000000007a9         db  0x00 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x12 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0xc7 ; '.'
00000000000007c1         db  0x01 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x22 ; '"'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x56 ; 'V'
00000000000007d9         db  0x01 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x18 ; '.'
00000000000007f1         db  0x01 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x11 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x19 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x88 ; '.'
00000000000007f9         db  0x80 ; '.'
00000000000007fa         db  0x20 ; ' '
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x08 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x48 ; 'H'
0000000000000809         db  0x02 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x11 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x19 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x80 ; '.'
0000000000000811         db  0x80 ; '.'
0000000000000812         db  0x20 ; ' '
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x08 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x86 ; '.'
0000000000000821         db  0x00 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x11 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x19 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x90 ; '.'
0000000000000829         db  0x80 ; '.'
000000000000082a         db  0x20 ; ' '
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x08 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x92 ; '.'
0000000000000839         db  0x00 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x21 ; '!'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x19 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0xa8 ; '.'
0000000000000841         db  0x80 ; '.'
0000000000000842         db  0x20 ; ' '
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x08 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x53 ; 'S'
0000000000000851         db  0x02 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x11 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x19 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0xa8 ; '.'
0000000000000859         db  0x80 ; '.'
000000000000085a         db  0x20 ; ' '
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x08 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0xa9 ; '.'
0000000000000869         db  0x01 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x21 ; '!'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x19 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x80 ; '.'
0000000000000871         db  0x80 ; '.'
0000000000000872         db  0x20 ; ' '
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x08 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x76 ; 'v'
0000000000000881         db  0x01 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x11 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x19 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0xc0 ; '.'
0000000000000889         db  0x80 ; '.'
000000000000088a         db  0x20 ; ' '
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x08 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x3f ; '?'
0000000000000899         db  0x00 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x11 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x19 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0x98 ; '.'
00000000000008a1         db  0x80 ; '.'
00000000000008a2         db  0x20 ; ' '
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x04 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x64 ; 'd'
00000000000008b1         db  0x01 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x11 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x19 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0xa0 ; '.'
00000000000008b9         db  0x80 ; '.'
00000000000008ba         db  0x20 ; ' '
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x08 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x8c8; 0xbb4[ (748 bytes)
        ; File offset : [2248; 2996[ (748 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

00000000000008c8         db  0x00 ; '.'
00000000000008c9         db  0x6c ; 'l'
00000000000008ca         db  0x69 ; 'i'
00000000000008cb         db  0x62 ; 'b'
00000000000008cc         db  0x63 ; 'c'
00000000000008cd         db  0x2e ; '.'
00000000000008ce         db  0x73 ; 's'
00000000000008cf         db  0x6f ; 'o'
00000000000008d0         db  0x2e ; '.'
00000000000008d1         db  0x36 ; '6'
00000000000008d2         db  0x00 ; '.'
00000000000008d3         db  0x66 ; 'f'
00000000000008d4         db  0x66 ; 'f'
00000000000008d5         db  0x6c ; 'l'
00000000000008d6         db  0x75 ; 'u'
00000000000008d7         db  0x73 ; 's'
00000000000008d8         db  0x68 ; 'h'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x5f ; '_'
00000000000008db         db  0x5f ; '_'
00000000000008dc         db  0x70 ; 'p'
00000000000008dd         db  0x72 ; 'r'
00000000000008de         db  0x69 ; 'i'
00000000000008df         db  0x6e ; 'n'
00000000000008e0         db  0x74 ; 't'
00000000000008e1         db  0x66 ; 'f'
00000000000008e2         db  0x5f ; '_'
00000000000008e3         db  0x63 ; 'c'
00000000000008e4         db  0x68 ; 'h'
00000000000008e5         db  0x6b ; 'k'
00000000000008e6         db  0x00 ; '.'
00000000000008e7         db  0x73 ; 's'
00000000000008e8         db  0x65 ; 'e'
00000000000008e9         db  0x74 ; 't'
00000000000008ea         db  0x6c ; 'l'
00000000000008eb         db  0x6f ; 'o'
00000000000008ec         db  0x63 ; 'c'
00000000000008ed         db  0x61 ; 'a'
00000000000008ee         db  0x6c ; 'l'
00000000000008ef         db  0x65 ; 'e'
00000000000008f0         db  0x00 ; '.'
00000000000008f1         db  0x6d ; 'm'
00000000000008f2         db  0x62 ; 'b'
00000000000008f3         db  0x72 ; 'r'
00000000000008f4         db  0x74 ; 't'
00000000000008f5         db  0x6f ; 'o'
00000000000008f6         db  0x77 ; 'w'
00000000000008f7         db  0x63 ; 'c'
00000000000008f8         db  0x00 ; '.'
00000000000008f9         db  0x66 ; 'f'
00000000000008fa         db  0x6f ; 'o'
00000000000008fb         db  0x70 ; 'p'
00000000000008fc         db  0x65 ; 'e'
00000000000008fd         db  0x6e ; 'n'
00000000000008fe         db  0x00 ; '.'
00000000000008ff         db  0x73 ; 's'
                     aTrncmp:
0000000000000900         db         "trncmp", 0
0000000000000907         db  0x6f ; 'o'
0000000000000908         db  0x70 ; 'p'
0000000000000909         db  0x74 ; 't'
000000000000090a         db  0x69 ; 'i'
000000000000090b         db  0x6e ; 'n'
000000000000090c         db  0x64 ; 'd'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x73 ; 's'
000000000000090f         db  0x74 ; 't'
0000000000000910         db  0x72 ; 'r'
0000000000000911         db  0x72 ; 'r'
0000000000000912         db  0x63 ; 'c'
0000000000000913         db  0x68 ; 'h'
0000000000000914         db  0x72 ; 'r'
0000000000000915         db  0x00 ; '.'
0000000000000916         db  0x64 ; 'd'
0000000000000917         db  0x63 ; 'c'
0000000000000918         db  0x67 ; 'g'
0000000000000919         db  0x65 ; 'e'
000000000000091a         db  0x74 ; 't'
000000000000091b         db  0x74 ; 't'
000000000000091c         db  0x65 ; 'e'
000000000000091d         db  0x78 ; 'x'
000000000000091e         db  0x74 ; 't'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x65 ; 'e'
0000000000000921         db  0x72 ; 'r'
0000000000000922         db  0x72 ; 'r'
0000000000000923         db  0x6f ; 'o'
0000000000000924         db  0x72 ; 'r'
0000000000000925         db  0x00 ; '.'
0000000000000926         db  0x5f ; '_'
0000000000000927         db  0x5f ; '_'
0000000000000928         db  0x73 ; 's'
0000000000000929         db  0x74 ; 't'
000000000000092a         db  0x61 ; 'a'
000000000000092b         db  0x63 ; 'c'
000000000000092c         db  0x6b ; 'k'
000000000000092d         db  0x5f ; '_'
000000000000092e         db  0x63 ; 'c'
000000000000092f         db  0x68 ; 'h'
0000000000000930         db  0x6b ; 'k'
0000000000000931         db  0x5f ; '_'
0000000000000932         db  0x66 ; 'f'
0000000000000933         db  0x61 ; 'a'
0000000000000934         db  0x69 ; 'i'
0000000000000935         db  0x6c ; 'l'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x69 ; 'i'
0000000000000938         db  0x73 ; 's'
0000000000000939         db  0x77 ; 'w'
000000000000093a         db  0x70 ; 'p'
000000000000093b         db  0x72 ; 'r'
000000000000093c         db  0x69 ; 'i'
000000000000093d         db  0x6e ; 'n'
000000000000093e         db  0x74 ; 't'
000000000000093f         db  0x00 ; '.'
0000000000000940         db  0x72 ; 'r'
0000000000000941         db  0x65 ; 'e'
0000000000000942         db  0x61 ; 'a'
0000000000000943         db  0x6c ; 'l'
0000000000000944         db  0x6c ; 'l'
0000000000000945         db  0x6f ; 'o'
0000000000000946         db  0x63 ; 'c'
0000000000000947         db  0x00 ; '.'
0000000000000948         db  0x61 ; 'a'
0000000000000949         db  0x62 ; 'b'
000000000000094a         db  0x6f ; 'o'
000000000000094b         db  0x72 ; 'r'
000000000000094c         db  0x74 ; 't'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x73 ; 's'
000000000000094f         db  0x74 ; 't'
0000000000000950         db  0x64 ; 'd'
0000000000000951         db  0x69 ; 'i'
0000000000000952         db  0x6e ; 'n'
0000000000000953         db  0x00 ; '.'
0000000000000954         db  0x5f ; '_'
0000000000000955         db  0x65 ; 'e'
0000000000000956         db  0x78 ; 'x'
0000000000000957         db  0x69 ; 'i'
0000000000000958         db  0x74 ; 't'
0000000000000959         db  0x00 ; '.'
000000000000095a         db  0x70 ; 'p'
000000000000095b         db  0x72 ; 'r'
000000000000095c         db  0x6f ; 'o'
000000000000095d         db  0x67 ; 'g'
000000000000095e         db  0x72 ; 'r'
000000000000095f         db  0x61 ; 'a'
0000000000000960         db  0x6d ; 'm'
0000000000000961         db  0x5f ; '_'
0000000000000962         db  0x69 ; 'i'
0000000000000963         db  0x6e ; 'n'
0000000000000964         db  0x76 ; 'v'
0000000000000965         db  0x6f ; 'o'
0000000000000966         db  0x63 ; 'c'
0000000000000967         db  0x61 ; 'a'
0000000000000968         db  0x74 ; 't'
0000000000000969         db  0x69 ; 'i'
000000000000096a         db  0x6f ; 'o'
000000000000096b         db  0x6e ; 'n'
000000000000096c         db  0x5f ; '_'
000000000000096d         db  0x6e ; 'n'
000000000000096e         db  0x61 ; 'a'
000000000000096f         db  0x6d ; 'm'
0000000000000970         db  0x65 ; 'e'
0000000000000971         db  0x00 ; '.'
0000000000000972         db  0x5f ; '_'
0000000000000973         db  0x5f ; '_'
0000000000000974         db  0x61 ; 'a'
0000000000000975         db  0x73 ; 's'
0000000000000976         db  0x73 ; 's'
0000000000000977         db  0x65 ; 'e'
0000000000000978         db  0x72 ; 'r'
0000000000000979         db  0x74 ; 't'
000000000000097a         db  0x5f ; '_'
000000000000097b         db  0x66 ; 'f'
000000000000097c         db  0x61 ; 'a'
000000000000097d         db  0x69 ; 'i'
000000000000097e         db  0x6c ; 'l'
000000000000097f         db  0x00 ; '.'
0000000000000980         db  0x5f ; '_'
0000000000000981         db  0x5f ; '_'
0000000000000982         db  0x63 ; 'c'
0000000000000983         db  0x74 ; 't'
0000000000000984         db  0x79 ; 'y'
0000000000000985         db  0x70 ; 'p'
0000000000000986         db  0x65 ; 'e'
0000000000000987         db  0x5f ; '_'
0000000000000988         db  0x67 ; 'g'
0000000000000989         db  0x65 ; 'e'
000000000000098a         db  0x74 ; 't'
000000000000098b         db  0x5f ; '_'
000000000000098c         db  0x6d ; 'm'
000000000000098d         db  0x62 ; 'b'
000000000000098e         db  0x5f ; '_'
000000000000098f         db  0x63 ; 'c'
0000000000000990         db  0x75 ; 'u'
0000000000000991         db  0x72 ; 'r'
0000000000000992         db  0x5f ; '_'
0000000000000993         db  0x6d ; 'm'
0000000000000994         db  0x61 ; 'a'
0000000000000995         db  0x78 ; 'x'
0000000000000996         db  0x00 ; '.'
0000000000000997         db  0x70 ; 'p'
0000000000000998         db  0x6f ; 'o'
0000000000000999         db  0x73 ; 's'
000000000000099a         db  0x69 ; 'i'
000000000000099b         db  0x78 ; 'x'
000000000000099c         db  0x5f ; '_'
000000000000099d         db  0x66 ; 'f'
000000000000099e         db  0x61 ; 'a'
000000000000099f         db  0x64 ; 'd'
00000000000009a0         db  0x76 ; 'v'
00000000000009a1         db  0x69 ; 'i'
00000000000009a2         db  0x73 ; 's'
00000000000009a3         db  0x65 ; 'e'
00000000000009a4         db  0x00 ; '.'
00000000000009a5         db  0x63 ; 'c'
00000000000009a6         db  0x61 ; 'a'
00000000000009a7         db  0x6c ; 'l'
00000000000009a8         db  0x6c ; 'l'
00000000000009a9         db  0x6f ; 'o'
00000000000009aa         db  0x63 ; 'c'
00000000000009ab         db  0x00 ; '.'
00000000000009ac         db  0x73 ; 's'
00000000000009ad         db  0x74 ; 't'
00000000000009ae         db  0x72 ; 'r'
00000000000009af         db  0x6c ; 'l'
00000000000009b0         db  0x65 ; 'e'
00000000000009b1         db  0x6e ; 'n'
00000000000009b2         db  0x00 ; '.'
00000000000009b3         db  0x6d ; 'm'
00000000000009b4         db  0x65 ; 'e'
00000000000009b5         db  0x6d ; 'm'
00000000000009b6         db  0x73 ; 's'
00000000000009b7         db  0x65 ; 'e'
00000000000009b8         db  0x74 ; 't'
00000000000009b9         db  0x00 ; '.'
00000000000009ba         db  0x5f ; '_'
00000000000009bb         db  0x5f ; '_'
00000000000009bc         db  0x65 ; 'e'
00000000000009bd         db  0x72 ; 'r'
00000000000009be         db  0x72 ; 'r'
00000000000009bf         db  0x6e ; 'n'
00000000000009c0         db  0x6f ; 'o'
00000000000009c1         db  0x5f ; '_'
00000000000009c2         db  0x6c ; 'l'
00000000000009c3         db  0x6f ; 'o'
00000000000009c4         db  0x63 ; 'c'
00000000000009c5         db  0x61 ; 'a'
00000000000009c6         db  0x74 ; 't'
00000000000009c7         db  0x69 ; 'i'
00000000000009c8         db  0x6f ; 'o'
00000000000009c9         db  0x6e ; 'n'
00000000000009ca         db  0x00 ; '.'
00000000000009cb         db  0x6d ; 'm'
00000000000009cc         db  0x65 ; 'e'
00000000000009cd         db  0x6d ; 'm'
00000000000009ce         db  0x63 ; 'c'
00000000000009cf         db  0x6d ; 'm'
00000000000009d0         db  0x70 ; 'p'
00000000000009d1         db  0x00 ; '.'
00000000000009d2         db  0x5f ; '_'
00000000000009d3         db  0x5f ; '_'
00000000000009d4         db  0x66 ; 'f'
00000000000009d5         db  0x70 ; 'p'
00000000000009d6         db  0x72 ; 'r'
00000000000009d7         db  0x69 ; 'i'
00000000000009d8         db  0x6e ; 'n'
00000000000009d9         db  0x74 ; 't'
00000000000009da         db  0x66 ; 'f'
00000000000009db         db  0x5f ; '_'
00000000000009dc         db  0x63 ; 'c'
00000000000009dd         db  0x68 ; 'h'
00000000000009de         db  0x6b ; 'k'
00000000000009df         db  0x00 ; '.'
00000000000009e0         db  0x73 ; 's'
00000000000009e1         db  0x74 ; 't'
00000000000009e2         db  0x64 ; 'd'
00000000000009e3         db  0x6f ; 'o'
00000000000009e4         db  0x75 ; 'u'
00000000000009e5         db  0x74 ; 't'
00000000000009e6         db  0x00 ; '.'
00000000000009e7         db  0x6c ; 'l'
00000000000009e8         db  0x73 ; 's'
00000000000009e9         db  0x65 ; 'e'
00000000000009ea         db  0x65 ; 'e'
00000000000009eb         db  0x6b ; 'k'
00000000000009ec         db  0x00 ; '.'
00000000000009ed         db  0x6d ; 'm'
00000000000009ee         db  0x65 ; 'e'
00000000000009ef         db  0x6d ; 'm'
00000000000009f0         db  0x63 ; 'c'
00000000000009f1         db  0x70 ; 'p'
00000000000009f2         db  0x79 ; 'y'
00000000000009f3         db  0x00 ; '.'
00000000000009f4         db  0x66 ; 'f'
00000000000009f5         db  0x63 ; 'c'
00000000000009f6         db  0x6c ; 'l'
00000000000009f7         db  0x6f ; 'o'
00000000000009f8         db  0x73 ; 's'
00000000000009f9         db  0x65 ; 'e'
00000000000009fa         db  0x00 ; '.'
00000000000009fb         db  0x6d ; 'm'
00000000000009fc         db  0x61 ; 'a'
00000000000009fd         db  0x6c ; 'l'
00000000000009fe         db  0x6c ; 'l'
00000000000009ff         db  0x6f ; 'o'
0000000000000a00         db  0x63 ; 'c'
0000000000000a01         db  0x00 ; '.'
0000000000000a02         db  0x6d ; 'm'
0000000000000a03         db  0x62 ; 'b'
0000000000000a04         db  0x73 ; 's'
0000000000000a05         db  0x69 ; 'i'
0000000000000a06         db  0x6e ; 'n'
0000000000000a07         db  0x69 ; 'i'
0000000000000a08         db  0x74 ; 't'
0000000000000a09         db  0x00 ; '.'
0000000000000a0a         db  0x5f ; '_'
0000000000000a0b         db  0x5f ; '_'
0000000000000a0c         db  0x75 ; 'u'
0000000000000a0d         db  0x66 ; 'f'
0000000000000a0e         db  0x6c ; 'l'
0000000000000a0f         db  0x6f ; 'o'
0000000000000a10         db  0x77 ; 'w'
0000000000000a11         db  0x00 ; '.'
0000000000000a12         db  0x6e ; 'n'
0000000000000a13         db  0x6c ; 'l'
0000000000000a14         db  0x5f ; '_'
0000000000000a15         db  0x6c ; 'l'
0000000000000a16         db  0x61 ; 'a'
0000000000000a17         db  0x6e ; 'n'
0000000000000a18         db  0x67 ; 'g'
0000000000000a19         db  0x69 ; 'i'
0000000000000a1a         db  0x6e ; 'n'
0000000000000a1b         db  0x66 ; 'f'
0000000000000a1c         db  0x6f ; 'o'
0000000000000a1d         db  0x00 ; '.'
0000000000000a1e         db  0x5f ; '_'
0000000000000a1f         db  0x5f ; '_'
0000000000000a20         db  0x63 ; 'c'
0000000000000a21         db  0x74 ; 't'
0000000000000a22         db  0x79 ; 'y'
0000000000000a23         db  0x70 ; 'p'
0000000000000a24         db  0x65 ; 'e'
0000000000000a25         db  0x5f ; '_'
0000000000000a26         db  0x62 ; 'b'
0000000000000a27         db  0x5f ; '_'
0000000000000a28         db  0x6c ; 'l'
0000000000000a29         db  0x6f ; 'o'
0000000000000a2a         db  0x63 ; 'c'
0000000000000a2b         db  0x00 ; '.'
0000000000000a2c         db  0x6f ; 'o'
0000000000000a2d         db  0x70 ; 'p'
0000000000000a2e         db  0x74 ; 't'
0000000000000a2f         db  0x61 ; 'a'
0000000000000a30         db  0x72 ; 'r'
0000000000000a31         db  0x67 ; 'g'
0000000000000a32         db  0x00 ; '.'
0000000000000a33         db  0x5f ; '_'
0000000000000a34         db  0x5f ; '_'
0000000000000a35         db  0x66 ; 'f'
0000000000000a36         db  0x72 ; 'r'
0000000000000a37         db  0x65 ; 'e'
0000000000000a38         db  0x61 ; 'a'
0000000000000a39         db  0x64 ; 'd'
0000000000000a3a         db  0x69 ; 'i'
0000000000000a3b         db  0x6e ; 'n'
0000000000000a3c         db  0x67 ; 'g'
0000000000000a3d         db  0x00 ; '.'
0000000000000a3e         db  0x73 ; 's'
0000000000000a3f         db  0x74 ; 't'
0000000000000a40         db  0x64 ; 'd'
0000000000000a41         db  0x65 ; 'e'
0000000000000a42         db  0x72 ; 'r'
0000000000000a43         db  0x72 ; 'r'
0000000000000a44         db  0x00 ; '.'
0000000000000a45         db  0x67 ; 'g'
0000000000000a46         db  0x65 ; 'e'
0000000000000a47         db  0x74 ; 't'
0000000000000a48         db  0x6f ; 'o'
0000000000000a49         db  0x70 ; 'p'
0000000000000a4a         db  0x74 ; 't'
0000000000000a4b         db  0x5f ; '_'
0000000000000a4c         db  0x6c ; 'l'
0000000000000a4d         db  0x6f ; 'o'
0000000000000a4e         db  0x6e ; 'n'
0000000000000a4f         db  0x67 ; 'g'
0000000000000a50         db  0x00 ; '.'
0000000000000a51         db  0x66 ; 'f'
0000000000000a52         db  0x69 ; 'i'
0000000000000a53         db  0x6c ; 'l'
0000000000000a54         db  0x65 ; 'e'
0000000000000a55         db  0x6e ; 'n'
0000000000000a56         db  0x6f ; 'o'
0000000000000a57         db  0x00 ; '.'
0000000000000a58         db  0x66 ; 'f'
0000000000000a59         db  0x77 ; 'w'
0000000000000a5a         db  0x72 ; 'r'
0000000000000a5b         db  0x69 ; 'i'
0000000000000a5c         db  0x74 ; 't'
0000000000000a5d         db  0x65 ; 'e'
0000000000000a5e         db  0x00 ; '.'
0000000000000a5f         db  0x5f ; '_'
0000000000000a60         db  0x5f ; '_'
0000000000000a61         db  0x66 ; 'f'
0000000000000a62         db  0x70 ; 'p'
0000000000000a63         db  0x65 ; 'e'
0000000000000a64         db  0x6e ; 'n'
0000000000000a65         db  0x64 ; 'd'
0000000000000a66         db  0x69 ; 'i'
0000000000000a67         db  0x6e ; 'n'
0000000000000a68         db  0x67 ; 'g'
0000000000000a69         db  0x00 ; '.'
0000000000000a6a         db  0x73 ; 's'
0000000000000a6b         db  0x74 ; 't'
0000000000000a6c         db  0x72 ; 'r'
0000000000000a6d         db  0x63 ; 'c'
0000000000000a6e         db  0x68 ; 'h'
0000000000000a6f         db  0x72 ; 'r'
0000000000000a70         db  0x00 ; '.'
0000000000000a71         db  0x70 ; 'p'
0000000000000a72         db  0x72 ; 'r'
0000000000000a73         db  0x6f ; 'o'
0000000000000a74         db  0x67 ; 'g'
0000000000000a75         db  0x72 ; 'r'
0000000000000a76         db  0x61 ; 'a'
0000000000000a77         db  0x6d ; 'm'
0000000000000a78         db  0x5f ; '_'
0000000000000a79         db  0x69 ; 'i'
0000000000000a7a         db  0x6e ; 'n'
0000000000000a7b         db  0x76 ; 'v'
0000000000000a7c         db  0x6f ; 'o'
0000000000000a7d         db  0x63 ; 'c'
0000000000000a7e         db  0x61 ; 'a'
0000000000000a7f         db  0x74 ; 't'
0000000000000a80         db  0x69 ; 'i'
0000000000000a81         db  0x6f ; 'o'
0000000000000a82         db  0x6e ; 'n'
0000000000000a83         db  0x5f ; '_'
0000000000000a84         db  0x73 ; 's'
0000000000000a85         db  0x68 ; 'h'
0000000000000a86         db  0x6f ; 'o'
0000000000000a87         db  0x72 ; 'r'
0000000000000a88         db  0x74 ; 't'
0000000000000a89         db  0x5f ; '_'
0000000000000a8a         db  0x6e ; 'n'
0000000000000a8b         db  0x61 ; 'a'
0000000000000a8c         db  0x6d ; 'm'
0000000000000a8d         db  0x65 ; 'e'
0000000000000a8e         db  0x00 ; '.'
0000000000000a8f         db  0x5f ; '_'
0000000000000a90         db  0x5f ; '_'
0000000000000a91         db  0x63 ; 'c'
0000000000000a92         db  0x78 ; 'x'
0000000000000a93         db  0x61 ; 'a'
0000000000000a94         db  0x5f ; '_'
0000000000000a95         db  0x66 ; 'f'
0000000000000a96         db  0x69 ; 'i'
0000000000000a97         db  0x6e ; 'n'
0000000000000a98         db  0x61 ; 'a'
0000000000000a99         db  0x6c ; 'l'
0000000000000a9a         db  0x69 ; 'i'
0000000000000a9b         db  0x7a ; 'z'
0000000000000a9c         db  0x65 ; 'e'
0000000000000a9d         db  0x00 ; '.'
0000000000000a9e         db  0x6d ; 'm'
0000000000000a9f         db  0x65 ; 'e'
0000000000000aa0         db  0x6d ; 'm'
0000000000000aa1         db  0x6d ; 'm'
0000000000000aa2         db  0x6f ; 'o'
0000000000000aa3         db  0x76 ; 'v'
0000000000000aa4         db  0x65 ; 'e'
0000000000000aa5         db  0x00 ; '.'
0000000000000aa6         db  0x62 ; 'b'
0000000000000aa7         db  0x69 ; 'i'
0000000000000aa8         db  0x6e ; 'n'
0000000000000aa9         db  0x64 ; 'd'
0000000000000aaa         db  0x74 ; 't'
0000000000000aab         db  0x65 ; 'e'
0000000000000aac         db  0x78 ; 'x'
0000000000000aad         db  0x74 ; 't'
0000000000000aae         db  0x64 ; 'd'
0000000000000aaf         db  0x6f ; 'o'
0000000000000ab0         db  0x6d ; 'm'
0000000000000ab1         db  0x61 ; 'a'
0000000000000ab2         db  0x69 ; 'i'
0000000000000ab3         db  0x6e ; 'n'
0000000000000ab4         db  0x00 ; '.'
0000000000000ab5         db  0x66 ; 'f'
0000000000000ab6         db  0x77 ; 'w'
0000000000000ab7         db  0x72 ; 'r'
0000000000000ab8         db  0x69 ; 'i'
0000000000000ab9         db  0x74 ; 't'
0000000000000aba         db  0x65 ; 'e'
0000000000000abb         db  0x5f ; '_'
0000000000000abc         db  0x75 ; 'u'
0000000000000abd         db  0x6e ; 'n'
0000000000000abe         db  0x6c ; 'l'
0000000000000abf         db  0x6f ; 'o'
0000000000000ac0         db  0x63 ; 'c'
0000000000000ac1         db  0x6b ; 'k'
0000000000000ac2         db  0x65 ; 'e'
0000000000000ac3         db  0x64 ; 'd'
0000000000000ac4         db  0x00 ; '.'
0000000000000ac5         db  0x5f ; '_'
0000000000000ac6         db  0x5f ; '_'
0000000000000ac7         db  0x6c ; 'l'
0000000000000ac8         db  0x69 ; 'i'
0000000000000ac9         db  0x62 ; 'b'
0000000000000aca         db  0x63 ; 'c'
0000000000000acb         db  0x5f ; '_'
0000000000000acc         db  0x73 ; 's'
0000000000000acd         db  0x74 ; 't'
0000000000000ace         db  0x61 ; 'a'
0000000000000acf         db  0x72 ; 'r'
0000000000000ad0         db  0x74 ; 't'
0000000000000ad1         db  0x5f ; '_'
0000000000000ad2         db  0x6d ; 'm'
0000000000000ad3         db  0x61 ; 'a'
0000000000000ad4         db  0x69 ; 'i'
0000000000000ad5         db  0x6e ; 'n'
0000000000000ad6         db  0x00 ; '.'
0000000000000ad7         db  0x66 ; 'f'
0000000000000ad8         db  0x73 ; 's'
0000000000000ad9         db  0x65 ; 'e'
0000000000000ada         db  0x65 ; 'e'
0000000000000adb         db  0x6b ; 'k'
0000000000000adc         db  0x6f ; 'o'
0000000000000add         db  0x00 ; '.'
0000000000000ade         db  0x5f ; '_'
0000000000000adf         db  0x5f ; '_'
0000000000000ae0         db  0x6f ; 'o'
0000000000000ae1         db  0x76 ; 'v'
0000000000000ae2         db  0x65 ; 'e'
0000000000000ae3         db  0x72 ; 'r'
0000000000000ae4         db  0x66 ; 'f'
0000000000000ae5         db  0x6c ; 'l'
0000000000000ae6         db  0x6f ; 'o'
0000000000000ae7         db  0x77 ; 'w'
0000000000000ae8         db  0x00 ; '.'
0000000000000ae9         db  0x5f ; '_'
0000000000000aea         db  0x5f ; '_'
0000000000000aeb         db  0x73 ; 's'
0000000000000aec         db  0x74 ; 't'
0000000000000aed         db  0x72 ; 'r'
0000000000000aee         db  0x74 ; 't'
0000000000000aef         db  0x6f ; 'o'
0000000000000af0         db  0x75 ; 'u'
0000000000000af1         db  0x6c ; 'l'
0000000000000af2         db  0x5f ; '_'
0000000000000af3         db  0x69 ; 'i'
0000000000000af4         db  0x6e ; 'n'
0000000000000af5         db  0x74 ; 't'
0000000000000af6         db  0x65 ; 'e'
0000000000000af7         db  0x72 ; 'r'
0000000000000af8         db  0x6e ; 'n'
0000000000000af9         db  0x61 ; 'a'
0000000000000afa         db  0x6c ; 'l'
0000000000000afb         db  0x00 ; '.'
0000000000000afc         db  0x66 ; 'f'
0000000000000afd         db  0x70 ; 'p'
0000000000000afe         db  0x75 ; 'u'
0000000000000aff         db  0x74 ; 't'
                     aSunlocked:
0000000000000b00         db         "s_unlocked", 0
0000000000000b0b         db  0x66 ; 'f'
0000000000000b0c         db  0x72 ; 'r'
0000000000000b0d         db  0x65 ; 'e'
0000000000000b0e         db  0x65 ; 'e'
0000000000000b0f         db  0x00 ; '.'
0000000000000b10         db  0x5f ; '_'
0000000000000b11         db  0x5f ; '_'
0000000000000b12         db  0x70 ; 'p'
0000000000000b13         db  0x72 ; 'r'
0000000000000b14         db  0x6f ; 'o'
0000000000000b15         db  0x67 ; 'g'
0000000000000b16         db  0x6e ; 'n'
0000000000000b17         db  0x61 ; 'a'
0000000000000b18         db  0x6d ; 'm'
0000000000000b19         db  0x65 ; 'e'
0000000000000b1a         db  0x00 ; '.'
0000000000000b1b         db  0x5f ; '_'
0000000000000b1c         db  0x5f ; '_'
0000000000000b1d         db  0x70 ; 'p'
0000000000000b1e         db  0x72 ; 'r'
0000000000000b1f         db  0x6f ; 'o'
0000000000000b20         db  0x67 ; 'g'
0000000000000b21         db  0x6e ; 'n'
0000000000000b22         db  0x61 ; 'a'
0000000000000b23         db  0x6d ; 'm'
0000000000000b24         db  0x65 ; 'e'
0000000000000b25         db  0x5f ; '_'
0000000000000b26         db  0x66 ; 'f'
0000000000000b27         db  0x75 ; 'u'
0000000000000b28         db  0x6c ; 'l'
0000000000000b29         db  0x6c ; 'l'
0000000000000b2a         db  0x00 ; '.'
0000000000000b2b         db  0x5f ; '_'
0000000000000b2c         db  0x5f ; '_'
0000000000000b2d         db  0x63 ; 'c'
0000000000000b2e         db  0x78 ; 'x'
0000000000000b2f         db  0x61 ; 'a'
0000000000000b30         db  0x5f ; '_'
0000000000000b31         db  0x61 ; 'a'
0000000000000b32         db  0x74 ; 't'
0000000000000b33         db  0x65 ; 'e'
0000000000000b34         db  0x78 ; 'x'
0000000000000b35         db  0x69 ; 'i'
0000000000000b36         db  0x74 ; 't'
0000000000000b37         db  0x00 ; '.'
0000000000000b38         db  0x47 ; 'G'
0000000000000b39         db  0x4c ; 'L'
0000000000000b3a         db  0x49 ; 'I'
0000000000000b3b         db  0x42 ; 'B'
0000000000000b3c         db  0x43 ; 'C'
0000000000000b3d         db  0x5f ; '_'
0000000000000b3e         db  0x32 ; '2'
0000000000000b3f         db  0x2e ; '.'
0000000000000b40         db  0x33 ; '3'
0000000000000b41         db  0x00 ; '.'
0000000000000b42         db  0x47 ; 'G'
0000000000000b43         db  0x4c ; 'L'
0000000000000b44         db  0x49 ; 'I'
0000000000000b45         db  0x42 ; 'B'
0000000000000b46         db  0x43 ; 'C'
0000000000000b47         db  0x5f ; '_'
0000000000000b48         db  0x32 ; '2'
0000000000000b49         db  0x2e ; '.'
0000000000000b4a         db  0x33 ; '3'
0000000000000b4b         db  0x2e ; '.'
0000000000000b4c         db  0x34 ; '4'
0000000000000b4d         db  0x00 ; '.'
0000000000000b4e         db  0x47 ; 'G'
0000000000000b4f         db  0x4c ; 'L'
0000000000000b50         db  0x49 ; 'I'
0000000000000b51         db  0x42 ; 'B'
0000000000000b52         db  0x43 ; 'C'
0000000000000b53         db  0x5f ; '_'
0000000000000b54         db  0x32 ; '2'
0000000000000b55         db  0x2e ; '.'
0000000000000b56         db  0x31 ; '1'
0000000000000b57         db  0x34 ; '4'
0000000000000b58         db  0x00 ; '.'
0000000000000b59         db  0x47 ; 'G'
0000000000000b5a         db  0x4c ; 'L'
0000000000000b5b         db  0x49 ; 'I'
0000000000000b5c         db  0x42 ; 'B'
0000000000000b5d         db  0x43 ; 'C'
0000000000000b5e         db  0x5f ; '_'
0000000000000b5f         db  0x32 ; '2'
0000000000000b60         db  0x2e ; '.'
0000000000000b61         db  0x34 ; '4'
0000000000000b62         db  0x00 ; '.'
0000000000000b63         db  0x47 ; 'G'
0000000000000b64         db  0x4c ; 'L'
0000000000000b65         db  0x49 ; 'I'
0000000000000b66         db  0x42 ; 'B'
0000000000000b67         db  0x43 ; 'C'
0000000000000b68         db  0x5f ; '_'
0000000000000b69         db  0x32 ; '2'
0000000000000b6a         db  0x2e ; '.'
0000000000000b6b         db  0x32 ; '2'
0000000000000b6c         db  0x2e ; '.'
0000000000000b6d         db  0x35 ; '5'
0000000000000b6e         db  0x00 ; '.'
0000000000000b6f         db  0x5f ; '_'
0000000000000b70         db  0x49 ; 'I'
0000000000000b71         db  0x54 ; 'T'
0000000000000b72         db  0x4d ; 'M'
0000000000000b73         db  0x5f ; '_'
0000000000000b74         db  0x64 ; 'd'
0000000000000b75         db  0x65 ; 'e'
0000000000000b76         db  0x72 ; 'r'
0000000000000b77         db  0x65 ; 'e'
0000000000000b78         db  0x67 ; 'g'
0000000000000b79         db  0x69 ; 'i'
0000000000000b7a         db  0x73 ; 's'
0000000000000b7b         db  0x74 ; 't'
0000000000000b7c         db  0x65 ; 'e'
0000000000000b7d         db  0x72 ; 'r'
0000000000000b7e         db  0x54 ; 'T'
0000000000000b7f         db  0x4d ; 'M'
0000000000000b80         db  0x43 ; 'C'
0000000000000b81         db  0x6c ; 'l'
0000000000000b82         db  0x6f ; 'o'
0000000000000b83         db  0x6e ; 'n'
0000000000000b84         db  0x65 ; 'e'
0000000000000b85         db  0x54 ; 'T'
0000000000000b86         db  0x61 ; 'a'
0000000000000b87         db  0x62 ; 'b'
0000000000000b88         db  0x6c ; 'l'
0000000000000b89         db  0x65 ; 'e'
0000000000000b8a         db  0x00 ; '.'
0000000000000b8b         db  0x5f ; '_'
0000000000000b8c         db  0x5f ; '_'
0000000000000b8d         db  0x67 ; 'g'
0000000000000b8e         db  0x6d ; 'm'
0000000000000b8f         db  0x6f ; 'o'
0000000000000b90         db  0x6e ; 'n'
0000000000000b91         db  0x5f ; '_'
0000000000000b92         db  0x73 ; 's'
0000000000000b93         db  0x74 ; 't'
0000000000000b94         db  0x61 ; 'a'
0000000000000b95         db  0x72 ; 'r'
0000000000000b96         db  0x74 ; 't'
0000000000000b97         db  0x5f ; '_'
0000000000000b98         db  0x5f ; '_'
0000000000000b99         db  0x00 ; '.'
0000000000000b9a         db  0x5f ; '_'
0000000000000b9b         db  0x49 ; 'I'
0000000000000b9c         db  0x54 ; 'T'
0000000000000b9d         db  0x4d ; 'M'
0000000000000b9e         db  0x5f ; '_'
0000000000000b9f         db  0x72 ; 'r'
0000000000000ba0         db  0x65 ; 'e'
0000000000000ba1         db  0x67 ; 'g'
0000000000000ba2         db  0x69 ; 'i'
0000000000000ba3         db  0x73 ; 's'
0000000000000ba4         db  0x74 ; 't'
0000000000000ba5         db  0x65 ; 'e'
0000000000000ba6         db  0x72 ; 'r'
0000000000000ba7         db  0x54 ; 'T'
0000000000000ba8         db  0x4d ; 'M'
0000000000000ba9         db  0x43 ; 'C'
0000000000000baa         db  0x6c ; 'l'
0000000000000bab         db  0x6f ; 'o'
0000000000000bac         db  0x6e ; 'n'
0000000000000bad         db  0x65 ; 'e'
0000000000000bae         db  0x54 ; 'T'
0000000000000baf         db  0x61 ; 'a'
0000000000000bb0         db  0x62 ; 'b'
0000000000000bb1         db  0x6c ; 'l'
0000000000000bb2         db  0x65 ; 'e'
0000000000000bb3         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xbb4; 0xc32[ (126 bytes)
        ; File offset : [2996; 3122[ (126 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000bb4         db  0x00 ; '.'
0000000000000bb5         db  0x00 ; '.'
0000000000000bb6         db  0x02 ; '.'
0000000000000bb7         db  0x00 ; '.'
0000000000000bb8         db  0x02 ; '.'
0000000000000bb9         db  0x00 ; '.'
0000000000000bba         db  0x02 ; '.'
0000000000000bbb         db  0x00 ; '.'
0000000000000bbc         db  0x02 ; '.'
0000000000000bbd         db  0x00 ; '.'
0000000000000bbe         db  0x02 ; '.'
0000000000000bbf         db  0x00 ; '.'
0000000000000bc0         db  0x00 ; '.'
0000000000000bc1         db  0x00 ; '.'
0000000000000bc2         db  0x02 ; '.'
0000000000000bc3         db  0x00 ; '.'
0000000000000bc4         db  0x02 ; '.'
0000000000000bc5         db  0x00 ; '.'
0000000000000bc6         db  0x02 ; '.'
0000000000000bc7         db  0x00 ; '.'
0000000000000bc8         db  0x02 ; '.'
0000000000000bc9         db  0x00 ; '.'
0000000000000bca         db  0x02 ; '.'
0000000000000bcb         db  0x00 ; '.'
0000000000000bcc         db  0x02 ; '.'
0000000000000bcd         db  0x00 ; '.'
0000000000000bce         db  0x02 ; '.'
0000000000000bcf         db  0x00 ; '.'
0000000000000bd0         db  0x02 ; '.'
0000000000000bd1         db  0x00 ; '.'
0000000000000bd2         db  0x03 ; '.'
0000000000000bd3         db  0x00 ; '.'
0000000000000bd4         db  0x02 ; '.'
0000000000000bd5         db  0x00 ; '.'
0000000000000bd6         db  0x02 ; '.'
0000000000000bd7         db  0x00 ; '.'
0000000000000bd8         db  0x02 ; '.'
0000000000000bd9         db  0x00 ; '.'
0000000000000bda         db  0x02 ; '.'
0000000000000bdb         db  0x00 ; '.'
0000000000000bdc         db  0x02 ; '.'
0000000000000bdd         db  0x00 ; '.'
0000000000000bde         db  0x02 ; '.'
0000000000000bdf         db  0x00 ; '.'
0000000000000be0         db  0x02 ; '.'
0000000000000be1         db  0x00 ; '.'
0000000000000be2         db  0x02 ; '.'
0000000000000be3         db  0x00 ; '.'
0000000000000be4         db  0x02 ; '.'
0000000000000be5         db  0x00 ; '.'
0000000000000be6         db  0x02 ; '.'
0000000000000be7         db  0x00 ; '.'
0000000000000be8         db  0x02 ; '.'
0000000000000be9         db  0x00 ; '.'
0000000000000bea         db  0x02 ; '.'
0000000000000beb         db  0x00 ; '.'
0000000000000bec         db  0x02 ; '.'
0000000000000bed         db  0x00 ; '.'
0000000000000bee         db  0x02 ; '.'
0000000000000bef         db  0x00 ; '.'
0000000000000bf0         db  0x00 ; '.'
0000000000000bf1         db  0x00 ; '.'
0000000000000bf2         db  0x04 ; '.'
0000000000000bf3         db  0x00 ; '.'
0000000000000bf4         db  0x02 ; '.'
0000000000000bf5         db  0x00 ; '.'
0000000000000bf6         db  0x02 ; '.'
0000000000000bf7         db  0x00 ; '.'
0000000000000bf8         db  0x02 ; '.'
0000000000000bf9         db  0x00 ; '.'
0000000000000bfa         db  0x02 ; '.'
0000000000000bfb         db  0x00 ; '.'
0000000000000bfc         db  0x02 ; '.'
0000000000000bfd         db  0x00 ; '.'
0000000000000bfe         db  0x02 ; '.'
0000000000000bff         db  0x00 ; '.'
0000000000000c00         db  0x02 ; '.'
0000000000000c01         db  0x00 ; '.'
0000000000000c02         db  0x02 ; '.'
0000000000000c03         db  0x00 ; '.'
0000000000000c04         db  0x05 ; '.'
0000000000000c05         db  0x00 ; '.'
0000000000000c06         db  0x02 ; '.'
0000000000000c07         db  0x00 ; '.'
0000000000000c08         db  0x02 ; '.'
0000000000000c09         db  0x00 ; '.'
0000000000000c0a         db  0x02 ; '.'
0000000000000c0b         db  0x00 ; '.'
0000000000000c0c         db  0x02 ; '.'
0000000000000c0d         db  0x00 ; '.'
0000000000000c0e         db  0x02 ; '.'
0000000000000c0f         db  0x00 ; '.'
0000000000000c10         db  0x02 ; '.'
0000000000000c11         db  0x00 ; '.'
0000000000000c12         db  0x02 ; '.'
0000000000000c13         db  0x00 ; '.'
0000000000000c14         db  0x05 ; '.'
0000000000000c15         db  0x00 ; '.'
0000000000000c16         db  0x00 ; '.'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x02 ; '.'
0000000000000c19         db  0x00 ; '.'
0000000000000c1a         db  0x02 ; '.'
0000000000000c1b         db  0x00 ; '.'
0000000000000c1c         db  0x02 ; '.'
0000000000000c1d         db  0x00 ; '.'
0000000000000c1e         db  0x06 ; '.'
0000000000000c1f         db  0x00 ; '.'
0000000000000c20         db  0x02 ; '.'
0000000000000c21         db  0x00 ; '.'
0000000000000c22         db  0x02 ; '.'
0000000000000c23         db  0x00 ; '.'
0000000000000c24         db  0x02 ; '.'
0000000000000c25         db  0x00 ; '.'
0000000000000c26         db  0x02 ; '.'
0000000000000c27         db  0x00 ; '.'
0000000000000c28         db  0x02 ; '.'
0000000000000c29         db  0x00 ; '.'
0000000000000c2a         db  0x02 ; '.'
0000000000000c2b         db  0x00 ; '.'
0000000000000c2c         db  0x02 ; '.'
0000000000000c2d         db  0x00 ; '.'
0000000000000c2e         db  0x02 ; '.'
0000000000000c2f         db  0x00 ; '.'
0000000000000c30         db  0x02 ; '.'
0000000000000c31         db  0x00 ; '.'
0000000000000c32         db  0x00 ; '.'
0000000000000c33         db  0x00 ; '.'
0000000000000c34         db  0x00 ; '.'
0000000000000c35         db  0x00 ; '.'
0000000000000c36         db  0x00 ; '.'
0000000000000c37         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xc38; 0xc98[ (96 bytes)
        ; File offset : [3128; 3224[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000c38         db  0x01 ; '.'
0000000000000c39         db  0x00 ; '.'
0000000000000c3a         db  0x05 ; '.'
0000000000000c3b         db  0x00 ; '.'
0000000000000c3c         db  0x01 ; '.'
0000000000000c3d         db  0x00 ; '.'
0000000000000c3e         db  0x00 ; '.'
0000000000000c3f         db  0x00 ; '.'
0000000000000c40         db  0x10 ; '.'
0000000000000c41         db  0x00 ; '.'
0000000000000c42         db  0x00 ; '.'
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x00 ; '.'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x00 ; '.'
0000000000000c47         db  0x00 ; '.'
0000000000000c48         db  0x13 ; '.'
0000000000000c49         db  0x69 ; 'i'
0000000000000c4a         db  0x69 ; 'i'
0000000000000c4b         db  0x0d ; '.'
0000000000000c4c         db  0x00 ; '.'
0000000000000c4d         db  0x00 ; '.'
0000000000000c4e         db  0x06 ; '.'
0000000000000c4f         db  0x00 ; '.'
0000000000000c50         db  0x70 ; 'p'
0000000000000c51         db  0x02 ; '.'
0000000000000c52         db  0x00 ; '.'
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x10 ; '.'
0000000000000c55         db  0x00 ; '.'
0000000000000c56         db  0x00 ; '.'
0000000000000c57         db  0x00 ; '.'
0000000000000c58         db  0x74 ; 't'
0000000000000c59         db  0x19 ; '.'
0000000000000c5a         db  0x69 ; 'i'
0000000000000c5b         db  0x09 ; '.'
0000000000000c5c         db  0x00 ; '.'
0000000000000c5d         db  0x00 ; '.'
0000000000000c5e         db  0x05 ; '.'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0x7a ; 'z'
0000000000000c61         db  0x02 ; '.'
0000000000000c62         db  0x00 ; '.'
0000000000000c63         db  0x00 ; '.'
0000000000000c64         db  0x10 ; '.'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x00 ; '.'
0000000000000c67         db  0x00 ; '.'
0000000000000c68         db  0x94 ; '.'
0000000000000c69         db  0x91 ; '.'
0000000000000c6a         db  0x96 ; '.'
0000000000000c6b         db  0x06 ; '.'
0000000000000c6c         db  0x00 ; '.'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x04 ; '.'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x86 ; '.'
0000000000000c71         db  0x02 ; '.'
0000000000000c72         db  0x00 ; '.'
0000000000000c73         db  0x00 ; '.'
0000000000000c74         db  0x10 ; '.'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x00 ; '.'
0000000000000c77         db  0x00 ; '.'
0000000000000c78         db  0x14 ; '.'
0000000000000c79         db  0x69 ; 'i'
0000000000000c7a         db  0x69 ; 'i'
0000000000000c7b         db  0x0d ; '.'
0000000000000c7c         db  0x00 ; '.'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x03 ; '.'
0000000000000c7f         db  0x00 ; '.'
0000000000000c80         db  0x91 ; '.'
0000000000000c81         db  0x02 ; '.'
0000000000000c82         db  0x00 ; '.'
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x10 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x00 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0x75 ; 'u'
0000000000000c89         db  0x1a ; '.'
0000000000000c8a         db  0x69 ; 'i'
0000000000000c8b         db  0x09 ; '.'
0000000000000c8c         db  0x00 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x02 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0x9b ; '.'
0000000000000c91         db  0x02 ; '.'
0000000000000c92         db  0x00 ; '.'
0000000000000c93         db  0x00 ; '.'
0000000000000c94         db  0x00 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x00 ; '.'
0000000000000c97         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xc98; 0xfb0[ (792 bytes)
        ; File offset : [3224; 4016[ (792 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000c98         db  0x10 ; '.'
0000000000000c99         db  0x7b ; '{'
0000000000000c9a         db  0x20 ; ' '
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x00 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x00 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0x08 ; '.'
0000000000000ca1         db  0x00 ; '.'
0000000000000ca2         db  0x00 ; '.'
0000000000000ca3         db  0x00 ; '.'
0000000000000ca4         db  0x00 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x00 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0xe0 ; '.'
0000000000000ca9         db  0x1a ; '.'
0000000000000caa         db  0x00 ; '.'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x00 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x00 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0x18 ; '.'
0000000000000cb1         db  0x7b ; '{'
0000000000000cb2         db  0x20 ; ' '
0000000000000cb3         db  0x00 ; '.'
0000000000000cb4         db  0x00 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x00 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x08 ; '.'
0000000000000cb9         db  0x00 ; '.'
0000000000000cba         db  0x00 ; '.'
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x00 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x00 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0xa0 ; '.'
0000000000000cc1         db  0x1a ; '.'
0000000000000cc2         db  0x00 ; '.'
0000000000000cc3         db  0x00 ; '.'
0000000000000cc4         db  0x00 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x00 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0x20 ; ' '
0000000000000cc9         db  0x7b ; '{'
0000000000000cca         db  0x20 ; ' '
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x00 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x00 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x08 ; '.'
0000000000000cd1         db  0x00 ; '.'
0000000000000cd2         db  0x00 ; '.'
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x00 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x00 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0x4e ; 'N'
0000000000000cd9         db  0x53 ; 'S'
0000000000000cda         db  0x00 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x00 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x00 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0x40 ; '@'
0000000000000ce1         db  0x7b ; '{'
0000000000000ce2         db  0x20 ; ' '
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x00 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x00 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0x08 ; '.'
0000000000000ce9         db  0x00 ; '.'
0000000000000cea         db  0x00 ; '.'
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x00 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x00 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0x54 ; 'T'
0000000000000cf1         db  0x53 ; 'S'
0000000000000cf2         db  0x00 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x00 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0x60 ; '`'
0000000000000cf9         db  0x7b ; '{'
0000000000000cfa         db  0x20 ; ' '
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x00 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x00 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0x08 ; '.'
0000000000000d01         db  0x00 ; '.'
0000000000000d02         db  0x00 ; '.'
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x00 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x00 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0x5b ; '['
0000000000000d09         db  0x53 ; 'S'
0000000000000d0a         db  0x00 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x00 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x00 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x80 ; '.'
0000000000000d11         db  0x7b ; '{'
0000000000000d12         db  0x20 ; ' '
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x08 ; '.'
0000000000000d19         db  0x00 ; '.'
0000000000000d1a         db  0x00 ; '.'
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x00 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0x61 ; 'a'
0000000000000d21         db  0x53 ; 'S'
0000000000000d22         db  0x00 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x00 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0xa0 ; '.'
0000000000000d29         db  0x7b ; '{'
0000000000000d2a         db  0x20 ; ' '
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x08 ; '.'
0000000000000d31         db  0x00 ; '.'
0000000000000d32         db  0x00 ; '.'
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x00 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0x66 ; 'f'
0000000000000d39         db  0x53 ; 'S'
0000000000000d3a         db  0x00 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x00 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0xe0 ; '.'
0000000000000d41         db  0x7b ; '{'
0000000000000d42         db  0x20 ; ' '
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x00 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x08 ; '.'
0000000000000d49         db  0x00 ; '.'
0000000000000d4a         db  0x00 ; '.'
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0xd9 ; '.'
0000000000000d51         db  0x56 ; 'V'
0000000000000d52         db  0x00 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0xe8 ; '.'
0000000000000d59         db  0x7b ; '{'
0000000000000d5a         db  0x20 ; ' '
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x08 ; '.'
0000000000000d61         db  0x00 ; '.'
0000000000000d62         db  0x00 ; '.'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0xe1 ; '.'
0000000000000d69         db  0x56 ; 'V'
0000000000000d6a         db  0x00 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0xf0 ; '.'
0000000000000d71         db  0x7b ; '{'
0000000000000d72         db  0x20 ; ' '
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x08 ; '.'
0000000000000d79         db  0x00 ; '.'
0000000000000d7a         db  0x00 ; '.'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0xe7 ; '.'
0000000000000d81         db  0x56 ; 'V'
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0xf8 ; '.'
0000000000000d89         db  0x7b ; '{'
0000000000000d8a         db  0x20 ; ' '
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x08 ; '.'
0000000000000d91         db  0x00 ; '.'
0000000000000d92         db  0x00 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0xf4 ; '.'
0000000000000d99         db  0x56 ; 'V'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0x00 ; '.'
0000000000000da1         db  0x7c ; '|'
0000000000000da2         db  0x20 ; ' '
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x08 ; '.'
0000000000000da9         db  0x00 ; '.'
0000000000000daa         db  0x00 ; '.'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x01 ; '.'
0000000000000db1         db  0x57 ; 'W'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0x08 ; '.'
0000000000000db9         db  0x7c ; '|'
0000000000000dba         db  0x20 ; ' '
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x08 ; '.'
0000000000000dc1         db  0x00 ; '.'
0000000000000dc2         db  0x00 ; '.'
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0x15 ; '.'
0000000000000dc9         db  0x57 ; 'W'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x10 ; '.'
0000000000000dd1         db  0x7c ; '|'
0000000000000dd2         db  0x20 ; ' '
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x08 ; '.'
0000000000000dd9         db  0x00 ; '.'
0000000000000dda         db  0x00 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x17 ; '.'
0000000000000de1         db  0x57 ; 'W'
0000000000000de2         db  0x00 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x18 ; '.'
0000000000000de9         db  0x7c ; '|'
0000000000000dea         db  0x20 ; ' '
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x08 ; '.'
0000000000000df1         db  0x00 ; '.'
0000000000000df2         db  0x00 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0xfa ; '.'
0000000000000df9         db  0x56 ; 'V'
0000000000000dfa         db  0x00 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x20 ; ' '
0000000000000e01         db  0x7c ; '|'
0000000000000e02         db  0x20 ; ' '
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x08 ; '.'
0000000000000e09         db  0x00 ; '.'
0000000000000e0a         db  0x00 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x1d ; '.'
0000000000000e11         db  0x53 ; 'S'
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x28 ; '('
0000000000000e19         db  0x7c ; '|'
0000000000000e1a         db  0x20 ; ' '
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x08 ; '.'
0000000000000e21         db  0x00 ; '.'
0000000000000e22         db  0x00 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x1f ; '.'
0000000000000e29         db  0x57 ; 'W'
0000000000000e2a         db  0x00 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x08 ; '.'
0000000000000e31         db  0x80 ; '.'
0000000000000e32         db  0x20 ; ' '
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x08 ; '.'
0000000000000e39         db  0x00 ; '.'
0000000000000e3a         db  0x00 ; '.'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x08 ; '.'
0000000000000e41         db  0x80 ; '.'
0000000000000e42         db  0x20 ; ' '
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x10 ; '.'
0000000000000e49         db  0x80 ; '.'
0000000000000e4a         db  0x20 ; ' '
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x08 ; '.'
0000000000000e51         db  0x00 ; '.'
0000000000000e52         db  0x00 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x63 ; 'c'
0000000000000e59         db  0x56 ; 'V'
0000000000000e5a         db  0x00 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0x60 ; '`'
0000000000000e61         db  0x80 ; '.'
0000000000000e62         db  0x20 ; ' '
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x08 ; '.'
0000000000000e69         db  0x00 ; '.'
0000000000000e6a         db  0x00 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x70 ; 'p'
0000000000000e71         db  0x80 ; '.'
0000000000000e72         db  0x20 ; ' '
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x78 ; 'x'
0000000000000e79         db  0x80 ; '.'
0000000000000e7a         db  0x20 ; ' '
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0x08 ; '.'
0000000000000e81         db  0x00 ; '.'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x00 ; '.'
0000000000000e89         db  0x81 ; '.'
0000000000000e8a         db  0x20 ; ' '
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0xc0 ; '.'
0000000000000e91         db  0x7f ; '.'
0000000000000e92         db  0x20 ; ' '
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x06 ; '.'
0000000000000e99         db  0x00 ; '.'
0000000000000e9a         db  0x00 ; '.'
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x06 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x00 ; '.'
0000000000000ea1         db  0x00 ; '.'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0xc8 ; '.'
0000000000000ea9         db  0x7f ; '.'
0000000000000eaa         db  0x20 ; ' '
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x06 ; '.'
0000000000000eb1         db  0x00 ; '.'
0000000000000eb2         db  0x00 ; '.'
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x1a ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x00 ; '.'
0000000000000eb9         db  0x00 ; '.'
0000000000000eba         db  0x00 ; '.'
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0xd0 ; '.'
0000000000000ec1         db  0x7f ; '.'
0000000000000ec2         db  0x20 ; ' '
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x06 ; '.'
0000000000000ec9         db  0x00 ; '.'
0000000000000eca         db  0x00 ; '.'
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x1e ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x00 ; '.'
0000000000000ed1         db  0x00 ; '.'
0000000000000ed2         db  0x00 ; '.'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0xd8 ; '.'
0000000000000ed9         db  0x7f ; '.'
0000000000000eda         db  0x20 ; ' '
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x06 ; '.'
0000000000000ee1         db  0x00 ; '.'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x31 ; '1'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x00 ; '.'
0000000000000ee9         db  0x00 ; '.'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0xe0 ; '.'
0000000000000ef1         db  0x7f ; '.'
0000000000000ef2         db  0x20 ; ' '
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0x06 ; '.'
0000000000000ef9         db  0x00 ; '.'
0000000000000efa         db  0x00 ; '.'
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x34 ; '4'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x00 ; '.'
0000000000000f01         db  0x00 ; '.'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x80 ; '.'
0000000000000f09         db  0x80 ; '.'
0000000000000f0a         db  0x20 ; ' '
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x05 ; '.'
0000000000000f11         db  0x00 ; '.'
0000000000000f12         db  0x00 ; '.'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x37 ; '7'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x00 ; '.'
0000000000000f19         db  0x00 ; '.'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x88 ; '.'
0000000000000f21         db  0x80 ; '.'
0000000000000f22         db  0x20 ; ' '
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x05 ; '.'
0000000000000f29         db  0x00 ; '.'
0000000000000f2a         db  0x00 ; '.'
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x36 ; '6'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x00 ; '.'
0000000000000f31         db  0x00 ; '.'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x90 ; '.'
0000000000000f39         db  0x80 ; '.'
0000000000000f3a         db  0x20 ; ' '
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x05 ; '.'
0000000000000f41         db  0x00 ; '.'
0000000000000f42         db  0x00 ; '.'
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x38 ; '8'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x00 ; '.'
0000000000000f49         db  0x00 ; '.'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x98 ; '.'
0000000000000f51         db  0x80 ; '.'
0000000000000f52         db  0x20 ; ' '
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x05 ; '.'
0000000000000f59         db  0x00 ; '.'
0000000000000f5a         db  0x00 ; '.'
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x3d ; '='
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x00 ; '.'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0xa0 ; '.'
0000000000000f69         db  0x80 ; '.'
0000000000000f6a         db  0x20 ; ' '
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x05 ; '.'
0000000000000f71         db  0x00 ; '.'
0000000000000f72         db  0x00 ; '.'
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x3e ; '>'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x00 ; '.'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x00 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0xa8 ; '.'
0000000000000f81         db  0x80 ; '.'
0000000000000f82         db  0x20 ; ' '
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x05 ; '.'
0000000000000f89         db  0x00 ; '.'
0000000000000f8a         db  0x00 ; '.'
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x3a ; ':'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x00 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0xc0 ; '.'
0000000000000f99         db  0x80 ; '.'
0000000000000f9a         db  0x20 ; ' '
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x05 ; '.'
0000000000000fa1         db  0x00 ; '.'
0000000000000fa2         db  0x00 ; '.'
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x3c ; '<'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x00 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0xfb0; 0x1430[ (1152 bytes)
        ; File offset : [4016; 5168[ (1152 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000fb0         db  0x40 ; '@'
0000000000000fb1         db  0x7e ; '~'
0000000000000fb2         db  0x20 ; ' '
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x07 ; '.'
0000000000000fb9         db  0x00 ; '.'
0000000000000fba         db  0x00 ; '.'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x01 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x00 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x48 ; 'H'
0000000000000fc9         db  0x7e ; '~'
0000000000000fca         db  0x20 ; ' '
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x07 ; '.'
0000000000000fd1         db  0x00 ; '.'
0000000000000fd2         db  0x00 ; '.'
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x02 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x00 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x50 ; 'P'
0000000000000fe1         db  0x7e ; '~'
0000000000000fe2         db  0x20 ; ' '
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x07 ; '.'
0000000000000fe9         db  0x00 ; '.'
0000000000000fea         db  0x00 ; '.'
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x03 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x00 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x58 ; 'X'
0000000000000ff9         db  0x7e ; '~'
0000000000000ffa         db  0x20 ; ' '
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0x07 ; '.'
0000000000001001         db  0x00 ; '.'
0000000000001002         db  0x00 ; '.'
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x04 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x00 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x60 ; '`'
0000000000001011         db  0x7e ; '~'
0000000000001012         db  0x20 ; ' '
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x07 ; '.'
0000000000001019         db  0x00 ; '.'
000000000000101a         db  0x00 ; '.'
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x05 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x00 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x68 ; 'h'
0000000000001029         db  0x7e ; '~'
000000000000102a         db  0x20 ; ' '
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x07 ; '.'
0000000000001031         db  0x00 ; '.'
0000000000001032         db  0x00 ; '.'
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x07 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x00 ; '.'
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x70 ; 'p'
0000000000001041         db  0x7e ; '~'
0000000000001042         db  0x20 ; ' '
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x07 ; '.'
0000000000001049         db  0x00 ; '.'
000000000000104a         db  0x00 ; '.'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x08 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x00 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x78 ; 'x'
0000000000001059         db  0x7e ; '~'
000000000000105a         db  0x20 ; ' '
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x07 ; '.'
0000000000001061         db  0x00 ; '.'
0000000000001062         db  0x00 ; '.'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x09 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x00 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x80 ; '.'
0000000000001071         db  0x7e ; '~'
0000000000001072         db  0x20 ; ' '
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x07 ; '.'
0000000000001079         db  0x00 ; '.'
000000000000107a         db  0x00 ; '.'
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x0a ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x00 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x88 ; '.'
0000000000001089         db  0x7e ; '~'
000000000000108a         db  0x20 ; ' '
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x07 ; '.'
0000000000001091         db  0x00 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x0b ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x00 ; '.'
0000000000001099         db  0x00 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x90 ; '.'
00000000000010a1         db  0x7e ; '~'
00000000000010a2         db  0x20 ; ' '
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x07 ; '.'
00000000000010a9         db  0x00 ; '.'
00000000000010aa         db  0x00 ; '.'
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x0c ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x00 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x98 ; '.'
00000000000010b9         db  0x7e ; '~'
00000000000010ba         db  0x20 ; ' '
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x07 ; '.'
00000000000010c1         db  0x00 ; '.'
00000000000010c2         db  0x00 ; '.'
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x0d ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x00 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0xa0 ; '.'
00000000000010d1         db  0x7e ; '~'
00000000000010d2         db  0x20 ; ' '
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x07 ; '.'
00000000000010d9         db  0x00 ; '.'
00000000000010da         db  0x00 ; '.'
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x0e ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x00 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0xa8 ; '.'
00000000000010e9         db  0x7e ; '~'
00000000000010ea         db  0x20 ; ' '
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x07 ; '.'
00000000000010f1         db  0x00 ; '.'
00000000000010f2         db  0x00 ; '.'
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x0f ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x00 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0xb0 ; '.'
0000000000001101         db  0x7e ; '~'
0000000000001102         db  0x20 ; ' '
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x07 ; '.'
0000000000001109         db  0x00 ; '.'
000000000000110a         db  0x00 ; '.'
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x10 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x00 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0xb8 ; '.'
0000000000001119         db  0x7e ; '~'
000000000000111a         db  0x20 ; ' '
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x07 ; '.'
0000000000001121         db  0x00 ; '.'
0000000000001122         db  0x00 ; '.'
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x11 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x00 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0xc0 ; '.'
0000000000001131         db  0x7e ; '~'
0000000000001132         db  0x20 ; ' '
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x07 ; '.'
0000000000001139         db  0x00 ; '.'
000000000000113a         db  0x00 ; '.'
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x12 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x00 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0xc8 ; '.'
0000000000001149         db  0x7e ; '~'
000000000000114a         db  0x20 ; ' '
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x07 ; '.'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x00 ; '.'
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x13 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x00 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0xd0 ; '.'
0000000000001161         db  0x7e ; '~'
0000000000001162         db  0x20 ; ' '
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x07 ; '.'
0000000000001169         db  0x00 ; '.'
000000000000116a         db  0x00 ; '.'
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x14 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x00 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0xd8 ; '.'
0000000000001179         db  0x7e ; '~'
000000000000117a         db  0x20 ; ' '
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x07 ; '.'
0000000000001181         db  0x00 ; '.'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x15 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x00 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0xe0 ; '.'
0000000000001191         db  0x7e ; '~'
0000000000001192         db  0x20 ; ' '
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x07 ; '.'
0000000000001199         db  0x00 ; '.'
000000000000119a         db  0x00 ; '.'
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x16 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x00 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0xe8 ; '.'
00000000000011a9         db  0x7e ; '~'
00000000000011aa         db  0x20 ; ' '
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x07 ; '.'
00000000000011b1         db  0x00 ; '.'
00000000000011b2         db  0x00 ; '.'
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x17 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x00 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0xf0 ; '.'
00000000000011c1         db  0x7e ; '~'
00000000000011c2         db  0x20 ; ' '
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x07 ; '.'
00000000000011c9         db  0x00 ; '.'
00000000000011ca         db  0x00 ; '.'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x18 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x00 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0xf8 ; '.'
00000000000011d9         db  0x7e ; '~'
00000000000011da         db  0x20 ; ' '
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x07 ; '.'
00000000000011e1         db  0x00 ; '.'
00000000000011e2         db  0x00 ; '.'
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x19 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x00 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x00 ; '.'
00000000000011f1         db  0x7f ; '.'
00000000000011f2         db  0x20 ; ' '
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x07 ; '.'
00000000000011f9         db  0x00 ; '.'
00000000000011fa         db  0x00 ; '.'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x1b ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x00 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x08 ; '.'
0000000000001209         db  0x7f ; '.'
000000000000120a         db  0x20 ; ' '
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x07 ; '.'
0000000000001211         db  0x00 ; '.'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x1c ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x00 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x10 ; '.'
0000000000001221         db  0x7f ; '.'
0000000000001222         db  0x20 ; ' '
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x07 ; '.'
0000000000001229         db  0x00 ; '.'
000000000000122a         db  0x00 ; '.'
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x1d ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x00 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x18 ; '.'
0000000000001239         db  0x7f ; '.'
000000000000123a         db  0x20 ; ' '
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x07 ; '.'
0000000000001241         db  0x00 ; '.'
0000000000001242         db  0x00 ; '.'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x1f ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x00 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x20 ; ' '
0000000000001251         db  0x7f ; '.'
0000000000001252         db  0x20 ; ' '
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x07 ; '.'
0000000000001259         db  0x00 ; '.'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x20 ; ' '
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x00 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x28 ; '('
0000000000001269         db  0x7f ; '.'
000000000000126a         db  0x20 ; ' '
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x07 ; '.'
0000000000001271         db  0x00 ; '.'
0000000000001272         db  0x00 ; '.'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x21 ; '!'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x00 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x30 ; '0'
0000000000001281         db  0x7f ; '.'
0000000000001282         db  0x20 ; ' '
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x07 ; '.'
0000000000001289         db  0x00 ; '.'
000000000000128a         db  0x00 ; '.'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x22 ; '"'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x00 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x38 ; '8'
0000000000001299         db  0x7f ; '.'
000000000000129a         db  0x20 ; ' '
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x07 ; '.'
00000000000012a1         db  0x00 ; '.'
00000000000012a2         db  0x00 ; '.'
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x23 ; '#'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x00 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x40 ; '@'
00000000000012b1         db  0x7f ; '.'
00000000000012b2         db  0x20 ; ' '
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x07 ; '.'
00000000000012b9         db  0x00 ; '.'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x24 ; '$'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x00 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x48 ; 'H'
00000000000012c9         db  0x7f ; '.'
00000000000012ca         db  0x20 ; ' '
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x07 ; '.'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x00 ; '.'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x25 ; '%'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x00 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x50 ; 'P'
00000000000012e1         db  0x7f ; '.'
00000000000012e2         db  0x20 ; ' '
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x07 ; '.'
00000000000012e9         db  0x00 ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x26 ; '&'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x00 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x58 ; 'X'
00000000000012f9         db  0x7f ; '.'
00000000000012fa         db  0x20 ; ' '
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x07 ; '.'
0000000000001301         db  0x00 ; '.'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x27 ; '''
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x00 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x60 ; '`'
0000000000001311         db  0x7f ; '.'
0000000000001312         db  0x20 ; ' '
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x07 ; '.'
0000000000001319         db  0x00 ; '.'
000000000000131a         db  0x00 ; '.'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x28 ; '('
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x00 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x68 ; 'h'
0000000000001329         db  0x7f ; '.'
000000000000132a         db  0x20 ; ' '
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x07 ; '.'
0000000000001331         db  0x00 ; '.'
0000000000001332         db  0x00 ; '.'
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x29 ; ')'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x00 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x70 ; 'p'
0000000000001341         db  0x7f ; '.'
0000000000001342         db  0x20 ; ' '
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x07 ; '.'
0000000000001349         db  0x00 ; '.'
000000000000134a         db  0x00 ; '.'
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x2a ; '*'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x00 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x78 ; 'x'
0000000000001359         db  0x7f ; '.'
000000000000135a         db  0x20 ; ' '
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x07 ; '.'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x00 ; '.'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x2b ; '+'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x00 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x80 ; '.'
0000000000001371         db  0x7f ; '.'
0000000000001372         db  0x20 ; ' '
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x07 ; '.'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x00 ; '.'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x2c ; ','
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x00 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x88 ; '.'
0000000000001389         db  0x7f ; '.'
000000000000138a         db  0x20 ; ' '
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x07 ; '.'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x2d ; '-'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x00 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x90 ; '.'
00000000000013a1         db  0x7f ; '.'
00000000000013a2         db  0x20 ; ' '
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x07 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x2e ; '.'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x00 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x98 ; '.'
00000000000013b9         db  0x7f ; '.'
00000000000013ba         db  0x20 ; ' '
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x00 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x07 ; '.'
00000000000013c1         db  0x00 ; '.'
00000000000013c2         db  0x00 ; '.'
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x2f ; '/'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x00 ; '.'
00000000000013c9         db  0x00 ; '.'
00000000000013ca         db  0x00 ; '.'
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x00 ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0xa0 ; '.'
00000000000013d1         db  0x7f ; '.'
00000000000013d2         db  0x20 ; ' '
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x00 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x07 ; '.'
00000000000013d9         db  0x00 ; '.'
00000000000013da         db  0x00 ; '.'
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x30 ; '0'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x00 ; '.'
00000000000013e1         db  0x00 ; '.'
00000000000013e2         db  0x00 ; '.'
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x00 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0xa8 ; '.'
00000000000013e9         db  0x7f ; '.'
00000000000013ea         db  0x20 ; ' '
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x00 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x07 ; '.'
00000000000013f1         db  0x00 ; '.'
00000000000013f2         db  0x00 ; '.'
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x32 ; '2'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x00 ; '.'
00000000000013f9         db  0x00 ; '.'
00000000000013fa         db  0x00 ; '.'
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x00 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0xb0 ; '.'
0000000000001401         db  0x7f ; '.'
0000000000001402         db  0x20 ; ' '
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x00 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x07 ; '.'
0000000000001409         db  0x00 ; '.'
000000000000140a         db  0x00 ; '.'
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x33 ; '3'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x00 ; '.'
0000000000001411         db  0x00 ; '.'
0000000000001412         db  0x00 ; '.'
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x00 ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0xb8 ; '.'
0000000000001419         db  0x7f ; '.'
000000000000141a         db  0x20 ; ' '
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x00 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x07 ; '.'
0000000000001421         db  0x00 ; '.'
0000000000001422         db  0x00 ; '.'
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x35 ; '5'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x00 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x00 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x00 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x1430; 0x1447[ (23 bytes)
        ; File offset : [5168; 5191[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
0000000000001430         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
0000000000001434         mov        rax, qword [qword_207fd0]                   ; qword_207fd0
000000000000143b         test       rax, rax
000000000000143e         je         loc_1442

0000000000001440         call       rax

                     loc_1442:
0000000000001442         add        rsp, 0x8                                    ; CODE XREF=_init+14
0000000000001446         ret
                        ; endp
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0x00 ; '.'
0000000000001449         db  0x00 ; '.'
000000000000144a         db  0x00 ; '.'
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x00 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x1450; 0x1760[ (784 bytes)
        ; File offset : [5200; 5984[ (784 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_1450:
0000000000001450         push       qword [qword_207e30]                        ; Begin of unwind block (FDE at 0x631c), qword_207e30, CODE XREF=sub_1466+5
0000000000001456         jmp        qword [qword_207e30+8]                      ; 0x207e38
                        ; endp
000000000000145c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___uflow:        // __uflow
0000000000001460         jmp        qword [__uflow@GOT]                         ; __uflow, __uflow@GOT, CODE XREF=fold_file+476
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1466:
0000000000001466         push       0x0
000000000000146b         jmp        loc_1450


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
0000000000001470         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1476:
0000000000001476         push       0x1
000000000000147b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000001480         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_3600+383, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1486:
0000000000001486         push       0x2
000000000000148b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
0000000000001490         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+546, fold_file+68, fold_file+724, close_stdout+22, quotearg_n_options+28, clone_quoting_options+7, quotearg_buffer+45, quotearg_alloc_mem+42, xnumtoumax+80, xnumtoumax+210, xstrtoumax+67
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1496:
0000000000001496         push       0x3
000000000000149b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
00000000000014a0         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+628, usage+821
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14a6:
00000000000014a6         push       0x4
00000000000014ab         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
00000000000014b0         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14b6:
00000000000014b6         push       0x5
00000000000014bb         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
00000000000014c0         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14c6:
00000000000014c6         push       0x6
00000000000014cb         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
00000000000014d0         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+93
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14d6:
00000000000014d6         push       0x7
00000000000014db         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
00000000000014e0         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14e6:
00000000000014e6         push       0x8
00000000000014eb         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
00000000000014f0         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+81
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14f6:
00000000000014f6         push       0x9
00000000000014fb         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001500         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+333, usage+56, usage+102, usage+146, usage+183, usage+220, usage+257, usage+294, usage+331, usage+562, usage+655
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1506:
0000000000001506         push       0xa
000000000000150b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001510         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1516:
0000000000001516         push       0xb
000000000000151b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001520         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=quotearg_buffer_restyled+343, sub_2c90+411, sub_2c90+1742, xstrdup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1526:
0000000000001526         push       0xc
000000000000152b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000001530         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+616, sub_3600+323, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, version_etc_va+101, version_etc+192, xnumtoumax+251, xstrtoumax+896
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1536:
0000000000001536         push       0xd
000000000000153b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000001540         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+153
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1546:
0000000000001546         push       0xe
000000000000154b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000001550         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1556:
0000000000001556         push       0xf
000000000000155b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strchr:        // strchr
0000000000001560         jmp        qword [strchr@GOT]                          ; strchr, strchr@GOT, CODE XREF=xstrtoumax+291, xstrtoumax+323, xstrtoumax+380
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1566:
0000000000001566         push       0x10
000000000000156b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
0000000000001570         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=fold_file+931
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1576:
0000000000001576         push       0x11
000000000000157b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000001580         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1586:
0000000000001586         push       0x12
000000000000158b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
0000000000001590         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1596:
0000000000001596         push       0x13
000000000000159b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
00000000000015a0         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=xstrtoumax+927
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15a6:
00000000000015a6         push       0x14
00000000000015ab         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___strtoul_internal:        // __strtoul_internal
00000000000015b0         jmp        qword [__strtoul_internal@GOT]              ; __strtoul_internal, __strtoul_internal@GOT, CODE XREF=xstrtoumax+142
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15b6:
00000000000015b6         push       0x15
00000000000015bb         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
00000000000015c0         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15c6:
00000000000015c6         push       0x16
00000000000015cb         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_posix_fadvise:        // posix_fadvise
00000000000015d0         jmp        qword [posix_fadvise@GOT]                   ; posix_fadvise, posix_fadvise@GOT, CODE XREF=fdadvise, fadvise+22
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15d6:
00000000000015d6         push       0x17
00000000000015db         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
00000000000015e0         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15e6:
00000000000015e6         push       0x18
00000000000015eb         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
00000000000015f0         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+157, usage+194, usage+231, usage+268, usage+305, usage+349, usage+936, version_etc_arn+135, emit_bug_reporting_address+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15f6:
00000000000015f6         push       0x19
00000000000015fb         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001600         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1606:
0000000000001606         push       0x1a
000000000000160b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001610         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=xmemdup+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1616:
0000000000001616         push       0x1b
000000000000161b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001620         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=fadvise+8, rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1626:
0000000000001626         push       0x1c
000000000000162b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000001630         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1636:
0000000000001636         push       0x1d
000000000000163b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000001640         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1646:
0000000000001646         push       0x1e
000000000000164b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000001650         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1656:
0000000000001656         push       0x1f
000000000000165b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000001660         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1666:
0000000000001666         push       0x20
000000000000166b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite_unlocked:        // fwrite_unlocked
0000000000001670         jmp        qword [fwrite_unlocked@GOT]                 ; fwrite_unlocked, fwrite_unlocked@GOT, CODE XREF=fold_file+245, fold_file+330, fold_file+526, fold_file+663
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1676:
0000000000001676         push       0x21
000000000000167b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
0000000000001680         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1686:
0000000000001686         push       0x22
000000000000168b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000001690         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+62, usage+603, usage+796, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1696:
0000000000001696         push       0x23
000000000000169b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
00000000000016a0         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=usage+120, usage+591, usage+684, usage+745, usage+784, usage+887, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16a6:
00000000000016a6         push       0x24
00000000000016ab         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memmove:        // memmove
00000000000016b0         jmp        qword [memmove@GOT]                         ; memmove, memmove@GOT, CODE XREF=fold_file+388
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16b6:
00000000000016b6         push       0x25
00000000000016bb         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
00000000000016c0         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+567, fold_file+783, fold_file+836, close_stdout+125, close_stdout+157, xalloc_die+43, xnumtoumax+155
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16c6:
00000000000016c6         push       0x26
00000000000016cb         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
00000000000016d0         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16d6:
00000000000016d6         push       0x27
00000000000016db         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fopen:        // fopen
00000000000016e0         jmp        qword [fopen@GOT]                           ; fopen, fopen@GOT, CODE XREF=fold_file+716
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16e6:
00000000000016e6         push       0x28
00000000000016eb         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
00000000000016f0         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16f6:
00000000000016f6         push       0x29
00000000000016fb         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001700         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+287, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1706:
0000000000001706         push       0x2a
000000000000170b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001710         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1716:
0000000000001716         push       0x2b
000000000000171b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001720         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1726:
0000000000001726         push       0x2c
000000000000172b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000001730         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_2c90+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1736:
0000000000001736         push       0x2d
000000000000173b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001740         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_2c90+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1746:
0000000000001746         push       0x2e
000000000000174b         jmp        0x1450
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000001750         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=fold_file+273, sub_2a30+51, xstrtoumax+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1756:
0000000000001756         push       0x2f
000000000000175b         jmp        0x1450
                        ; endp


        ; Section .plt.got
        ; Range: [0x1760; 0x1768[ (8 bytes)
        ; File offset : [5984; 5992[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_207fe0:        // qword_207fe0
0000000000001760         jmp        qword [qword_207fe0]                        ; qword, End of unwind block (FDE at 0x631c), Begin of unwind block (FDE at 0x6344), qword_207fe0, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000001766         align      8
0000000000001768         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x6344)
0000000000001769         db  0x00 ; '.'
000000000000176a         db  0x00 ; '.'
000000000000176b         db  0x00 ; '.'
000000000000176c         db  0x00 ; '.'
000000000000176d         db  0x00 ; '.'
000000000000176e         db  0x00 ; '.'
000000000000176f         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x1770; 0x524e[ (15070 bytes)
        ; File offset : [6000; 21070[ (15070 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_31: int8_t, -49
        ;    var_32: int8_t, -50


                     main:
0000000000001770         push       r13                                         ; Begin of unwind block (FDE at 0x63e8), DATA XREF=_start+29
0000000000001772         push       r12
0000000000001774         mov        r12d, 0x50
000000000000177a         push       rbp
000000000000177b         push       rbx
000000000000177c         mov        ebp, edi
000000000000177e         mov        rbx, rsi
0000000000001781         sub        rsp, 0x18
0000000000001785         mov        rdi, qword [rsi]
0000000000001788         mov        rax, qword [fs:0x28]
0000000000001791         mov        qword [rsp+0x38+var_30], rax
0000000000001796         xor        eax, eax
0000000000001798         lea        r13, qword [rsp+0x38+var_32]
000000000000179d         call       set_program_name                            ; set_program_name
00000000000017a2         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0x5c01
00000000000017a9         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
00000000000017ae         call       j_setlocale                                 ; setlocale
00000000000017b3         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
00000000000017ba         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
00000000000017c1         call       j_bindtextdomain                            ; bindtextdomain
00000000000017c6         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
00000000000017cd         call       j_textdomain                                ; textdomain
00000000000017d2         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
00000000000017d9         call       atexit                                      ; atexit
00000000000017de         mov        byte [have_read_stdin], 0x0                 ; have_read_stdin
00000000000017e5         mov        byte [count_bytes], 0x0                     ; count_bytes
00000000000017ec         mov        byte [break_spaces], 0x0                    ; break_spaces

                     loc_17f3:
00000000000017f3         lea        rcx, qword [longopts]                       ; argument "__longopts" for method j_getopt_long, longopts, CODE XREF=main+215, main+378, main+391
00000000000017fa         lea        rdx, qword [shortopts]                      ; argument "__shortopts" for method j_getopt_long, shortopts
0000000000001801         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000001804         mov        rsi, rbx                                    ; argument "___argv" for method j_getopt_long
0000000000001807         mov        edi, ebp                                    ; argument "___argc" for method j_getopt_long
0000000000001809         call       j_getopt_long                               ; getopt_long
000000000000180e         cmp        eax, 0xffffffff
0000000000001811         je         loc_190e

0000000000001817         cmp        eax, 0x39
000000000000181a         jle        loc_1850

000000000000181c         cmp        eax, 0x73
000000000000181f         je         loc_18f0

0000000000001825         cmp        eax, 0x77
0000000000001828         je         loc_18af

000000000000182e         cmp        eax, 0x62
0000000000001831         je         loc_1840

                     loc_1833:
0000000000001833         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+603
0000000000001838         call       usage                                       ; usage
000000000000183d         nop        dword [rax]

                     loc_1840:
0000000000001840         mov        byte [count_bytes], 0x1                     ; count_bytes, CODE XREF=main+193
0000000000001847         jmp        loc_17f3
0000000000001849         align      16

                     loc_1850:
0000000000001850         cmp        eax, 0x30                                   ; CODE XREF=main+170
0000000000001853         jge        loc_1898

0000000000001855         cmp        eax, 0xffffff7d
000000000000185a         jne        loc_19c6

0000000000001860         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001867         mov        rcx, qword [Version]                        ; Version
000000000000186e         lea        r8, qword [aDavidMackenzie]                 ; "David MacKenzie"
0000000000001875         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x52df
000000000000187c         lea        rsi, qword [_IO_stdin_used+4]               ; 0x5264
0000000000001883         xor        r9d, r9d
0000000000001886         xor        eax, eax
0000000000001888         call       version_etc                                 ; version_etc
000000000000188d         xor        edi, edi                                    ; argument "__status" for method j_exit
000000000000188f         call       j_exit                                      ; exit
                        ; endp
0000000000001894         align      8

                     loc_1898:
0000000000001898         mov        rdx, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+227
000000000000189f         test       rdx, rdx
00000000000018a2         je         loc_18fc

00000000000018a4         sub        rdx, 0x1
00000000000018a8         mov        qword [optarg@@GLIBC_2.2.5], rdx            ; optarg@@GLIBC_2.2.5

                     loc_18af:
00000000000018af         lea        rsi, qword [aInvalidNumberO]                ; argument "msgid" for method j_dcgettext, "invalid number of columns", CODE XREF=main+184, main+412
00000000000018b6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000018bb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000018bd         call       j_dcgettext                                 ; dcgettext
00000000000018c2         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
00000000000018c9         lea        rcx, qword [aWrittenBySSAnd+27]             ; 0x5c01
00000000000018d0         mov        r8, rax
00000000000018d3         xor        r9d, r9d
00000000000018d6         mov        rdx, 0xfffffffffffffff6
00000000000018dd         mov        esi, 0x1
00000000000018e2         call       xdectoumax                                  ; xdectoumax
00000000000018e7         mov        r12, rax
00000000000018ea         jmp        loc_17f3
00000000000018ef         align      16

                     loc_18f0:
00000000000018f0         mov        byte [break_spaces], 0x1                    ; break_spaces, CODE XREF=main+175
00000000000018f7         jmp        loc_17f3

                     loc_18fc:
00000000000018fc         mov        byte [rsp+0x38+var_32], al                  ; CODE XREF=main+306
0000000000001900         mov        byte [rsp+0x38+var_31], 0x0
0000000000001905         mov        qword [optarg@@GLIBC_2.2.5], r13            ; optarg@@GLIBC_2.2.5
000000000000190c         jmp        loc_18af

                     loc_190e:
000000000000190e         mov        eax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+161
0000000000001914         cmp        eax, ebp
0000000000001916         je         loc_19ac

000000000000191c         jge        loc_19bf

0000000000001922         movsxd     rdx, eax
0000000000001925         not        eax
0000000000001927         add        eax, ebp
0000000000001929         lea        r13, qword [rbx+rdx*8]
000000000000192d         add        rax, rdx
0000000000001930         lea        rbp, qword [rbx+rax*8+8]
0000000000001935         mov        ebx, 0x1
000000000000193a         nop        word [rax+rax]

                     loc_1940:
0000000000001940         mov        rdi, qword [r13]                            ; CODE XREF=main+485
0000000000001944         mov        rsi, r12
0000000000001947         add        r13, 0x8
000000000000194b         call       fold_file                                   ; fold_file
0000000000001950         and        ebx, eax
0000000000001952         cmp        r13, rbp
0000000000001955         jne        loc_1940

                     loc_1957:
0000000000001957         cmp        byte [have_read_stdin], 0x0                 ; have_read_stdin, CODE XREF=main+589, main+596
000000000000195e         jne        loc_1981

                     loc_1960:
0000000000001960         xor        ebx, 0x1                                    ; CODE XREF=main+544
0000000000001963         mov        rcx, qword [rsp+0x38+var_30]
0000000000001968         xor        rcx, qword [fs:0x28]
0000000000001971         movzx      eax, bl
0000000000001974         jne        loc_19d8

0000000000001976         add        rsp, 0x18
000000000000197a         pop        rbx
000000000000197b         pop        rbp
000000000000197c         pop        r12
000000000000197e         pop        r13
0000000000001980         ret
                        ; endp

                     loc_1981:
0000000000001981         mov        rdi, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5, CODE XREF=main+494
0000000000001988         call       rpl_fclose                                  ; rpl_fclose
000000000000198d         add        eax, 0x1
0000000000001990         jne        loc_1960

0000000000001992         call       j___errno_location                          ; __errno_location
0000000000001997         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001999         lea        rdx, qword [aLibs+10]                       ; argument "__format" for method j_error, 0x56c2
00000000000019a0         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000019a5         xor        eax, eax
00000000000019a7         call       j_error                                     ; error

                     loc_19ac:
00000000000019ac         lea        rdi, qword [aLibs+10]                       ; 0x56c2, CODE XREF=main+422
00000000000019b3         mov        rsi, r12
00000000000019b6         call       fold_file                                   ; fold_file
00000000000019bb         mov        ebx, eax
00000000000019bd         jmp        loc_1957

                     loc_19bf:
00000000000019bf         mov        ebx, 0x1                                    ; CODE XREF=main+428
00000000000019c4         jmp        loc_1957

                     loc_19c6:
00000000000019c6         cmp        eax, 0xffffff7e                             ; CODE XREF=main+234
00000000000019cb         jne        loc_1833

00000000000019d1         xor        edi, edi                                    ; argument #1 for method usage
00000000000019d3         call       usage                                       ; usage

                     loc_19d8:
00000000000019d8         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+516
                        ; endp
00000000000019dd         align      32                                          ; End of unwind block (FDE at 0x63e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
00000000000019e0         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x62ec)
00000000000019e2         mov        r9, rdx
00000000000019e5         pop        rsi
00000000000019e6         mov        rdx, rsp
00000000000019e9         and        rsp, 0xfffffffffffffff0
00000000000019ed         push       rax
00000000000019ee         push       rsp
00000000000019ef         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
00000000000019f6         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
00000000000019fd         lea        rdi, qword [main]                           ; main
0000000000001a04         call       qword [qword_207fc0+8]                      ; 0x207fc8
0000000000001a0a         hlt
                        ; endp
0000000000001a0b         align      16                                          ; End of unwind block (FDE at 0x62ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000001a10         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000001a17         push       rbp
0000000000001a18         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001a1f         cmp        rax, rdi
0000000000001a22         mov        rbp, rsp
0000000000001a25         je         loc_1a40

0000000000001a27         mov        rax, qword [qword_207fc0]                   ; qword_207fc0
0000000000001a2e         test       rax, rax
0000000000001a31         je         loc_1a40

0000000000001a33         pop        rbp
0000000000001a34         jmp        rax
                        ; endp
0000000000001a36         align      64

                     loc_1a40:
0000000000001a40         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000001a41         ret
                        ; endp
0000000000001a42         align      16

                     register_tm_clones:
0000000000001a50         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000001a57         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001a5e         push       rbp
0000000000001a5f         sub        rsi, rdi
0000000000001a62         mov        rbp, rsp
0000000000001a65         sar        rsi, 0x3
0000000000001a69         mov        rax, rsi
0000000000001a6c         shr        rax, 0x3f
0000000000001a70         add        rsi, rax
0000000000001a73         sar        rsi, 0x1
0000000000001a76         je         loc_1a90

0000000000001a78         mov        rax, qword [qword_207fd8]                   ; qword_207fd8
0000000000001a7f         test       rax, rax
0000000000001a82         je         loc_1a90

0000000000001a84         pop        rbp
0000000000001a85         jmp        rax
                        ; endp
0000000000001a87         align      16

                     loc_1a90:
0000000000001a90         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000001a91         ret
                        ; endp
0000000000001a92         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000001aa0         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000001aa7         jne        loc_1ad8

0000000000001aa9         cmp        qword [qword_207fe0], 0x0                   ; qword_207fe0
0000000000001ab1         push       rbp
0000000000001ab2         mov        rbp, rsp
0000000000001ab5         je         loc_1ac3

0000000000001ab7         mov        rdi, qword [__dso_handle]                   ; __dso_handle
0000000000001abe         call       j_qword_207fe0                              ; qword_207fe0

                     loc_1ac3:
0000000000001ac3         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000001ac8         mov        byte [completed.7697], 0x1                  ; completed.7697
0000000000001acf         pop        rbp
0000000000001ad0         ret
                        ; endp
0000000000001ad1         align      8

                     loc_1ad8:
0000000000001ad8         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
0000000000001ada         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000001ae0         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000001ae1         mov        rbp, rsp
0000000000001ae4         pop        rbp
0000000000001ae5         jmp        register_tm_clones                          ; register_tm_clones
0000000000001aea         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     adjust_column:
0000000000001af0         cmp        byte [count_bytes], 0x0                     ; Begin of unwind block (FDE at 0x635c), count_bytes, CODE XREF=fold_file+178, fold_file+423
0000000000001af7         jne        loc_1b0d

0000000000001af9         cmp        sil, 0x8
0000000000001afd         je         loc_1b18

0000000000001aff         xor        eax, eax
0000000000001b01         cmp        sil, 0xd
0000000000001b05         je         loc_1b11

0000000000001b07         cmp        sil, 0x9
0000000000001b0b         je         loc_1b30

                     loc_1b0d:
0000000000001b0d         lea        rax, qword [rdi+1]                          ; CODE XREF=adjust_column+7

                     loc_1b11:
0000000000001b11         ret                                                    ; CODE XREF=adjust_column+21
                        ; endp
0000000000001b13         align      8

                     loc_1b18:
0000000000001b18         lea        rdx, qword [rdi-1]                          ; CODE XREF=adjust_column+13
0000000000001b1c         test       rdi, rdi
0000000000001b1f         mov        eax, 0x0
0000000000001b24         cmovne     rax, rdx
0000000000001b28         ret
                        ; endp
0000000000001b29         align      16

                     loc_1b30:
0000000000001b30         and        rdi, 0xfffffffffffffff8                     ; CODE XREF=adjust_column+27
0000000000001b34         lea        rax, qword [rdi+8]
0000000000001b38         ret
                        ; endp
0000000000001b39         align      64                                          ; End of unwind block (FDE at 0x635c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     fold_file:
0000000000001b40         push       r15                                         ; Begin of unwind block (FDE at 0x6370), CODE XREF=main+475, main+582
0000000000001b42         push       r14
0000000000001b44         mov        ecx, 0x2
0000000000001b49         push       r13
0000000000001b4b         push       r12
0000000000001b4d         push       rbp
0000000000001b4e         push       rbx
0000000000001b4f         sub        rsp, 0x28
0000000000001b53         mov        qword [rsp+0x58+var_48], rdi
0000000000001b58         mov        qword [rsp+0x58+var_50], rsi
0000000000001b5d         mov        rsi, rdi
0000000000001b60         lea        rdi, qword [aLibs+10]                       ; 0x56c2
0000000000001b67         rep  cmpsb byte [rsi], byte [rdi]
0000000000001b69         seta       al
0000000000001b6c         sbb        al, 0x0
0000000000001b6e         test       al, al
0000000000001b70         jne        loc_1e00

0000000000001b76         mov        r12, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5
0000000000001b7d         mov        byte [have_read_stdin], 0x1                 ; have_read_stdin
0000000000001b84         call       j___errno_location                          ; __errno_location
0000000000001b89         mov        qword [rsp+0x58+var_40], rax
0000000000001b8e         test       r12, r12
0000000000001b91         je         loc_1e27

                     loc_1b97:
0000000000001b97         mov        esi, 0x2                                    ; CODE XREF=fold_file+737
0000000000001b9c         mov        rdi, r12
0000000000001b9f         xor        ebx, ebx
0000000000001ba1         xor        r15d, r15d
0000000000001ba4         call       fadvise                                     ; fadvise

                     loc_1ba9:
0000000000001ba9         mov        rax, qword [r12+8]                          ; CODE XREF=fold_file+668, fold_file+689
0000000000001bae         cmp        rax, qword [r12+0x10]
0000000000001bb3         jae        loc_1d19

                     loc_1bb9:
0000000000001bb9         lea        rdx, qword [rax+1]                          ; CODE XREF=fold_file+467
0000000000001bbd         mov        qword [r12+8], rdx
0000000000001bc2         movzx      ebp, byte [rax]

                     loc_1bc5:
0000000000001bc5         lea        r14, qword [rbx+1]                          ; CODE XREF=fold_file+486
0000000000001bc9         cmp        r14, qword [allocated_out.6895]             ; allocated_out.6895
0000000000001bd0         mov        r13, qword [line_out.6894]                  ; line_out.6894
0000000000001bd7         jae        loc_1d98

0000000000001bdd         cmp        ebp, 0xa
0000000000001be0         je         loc_1dba

                     loc_1be6:
0000000000001be6         mov        r14d, ebp                                   ; CODE XREF=fold_file+628
0000000000001be9         movsx      ebp, bpl

                     loc_1bed:
0000000000001bed         mov        rdi, r15                                    ; CODE XREF=fold_file+257, fold_file+440, fold_file+921
0000000000001bf0         mov        esi, ebp
0000000000001bf2         call       adjust_column                               ; adjust_column
0000000000001bf7         cmp        rax, qword [rsp+0x58+var_50]
0000000000001bfc         mov        r15, rax
0000000000001bff         jbe        loc_1de8

0000000000001c05         cmp        byte [break_spaces], 0x0                    ; break_spaces
0000000000001c0c         jne        loc_1c48

0000000000001c0e         test       rbx, rbx
0000000000001c11         je         loc_1d00

                     loc_1c17:
0000000000001c17         mov        byte [r13+rbx], 0xa                         ; CODE XREF=fold_file+294
0000000000001c1d         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5
0000000000001c24         lea        rdx, qword [rbx+1]                          ; argument "__n" for method j_fwrite_unlocked
0000000000001c28         mov        rdi, r13                                    ; argument "__ptr" for method j_fwrite_unlocked
0000000000001c2b         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000001c30         xor        ebx, ebx
0000000000001c32         xor        r15d, r15d
0000000000001c35         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000001c3a         mov        r13, qword [line_out.6894]                  ; line_out.6894
0000000000001c41         jmp        loc_1bed
0000000000001c43         align      8

                     loc_1c48:
0000000000001c48         test       rbx, rbx                                    ; CODE XREF=fold_file+204
0000000000001c4b         je         loc_1d00

0000000000001c51         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000001c56         mov        r15, rbx
0000000000001c59         mov        rcx, qword [rax]
0000000000001c5c         jmp        loc_1c68
0000000000001c5e         align      32

                     loc_1c60:
0000000000001c60         test       rdx, rdx                                    ; CODE XREF=fold_file+310
0000000000001c63         mov        r15, rdx
0000000000001c66         je         loc_1c17

                     loc_1c68:
0000000000001c68         movzx      eax, byte [r13+r15-1]                       ; CODE XREF=fold_file+284
0000000000001c6e         lea        rdx, qword [r15-1]
0000000000001c72         test       byte [rcx+rax*2], 0x1
0000000000001c76         je         loc_1c60

0000000000001c78         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5
0000000000001c7f         mov        rdi, r13                                    ; argument "__ptr" for method j_fwrite_unlocked
0000000000001c82         mov        rdx, r15                                    ; argument "__n" for method j_fwrite_unlocked
0000000000001c85         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000001c8a         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000001c8f         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001c96         mov        rax, qword [rdi+0x28]
0000000000001c9a         cmp        rax, qword [rdi+0x30]
0000000000001c9e         jae        loc_1ede

0000000000001ca4         lea        rdx, qword [rax+1]
0000000000001ca8         mov        qword [rdi+0x28], rdx
0000000000001cac         mov        byte [rax], 0xa

                     loc_1caf:
0000000000001caf         mov        r13, qword [line_out.6894]                  ; line_out.6894, CODE XREF=fold_file+936
0000000000001cb6         sub        rbx, r15
0000000000001cb9         mov        rdx, rbx                                    ; argument "__n" for method j_memmove
0000000000001cbc         lea        rsi, qword [r13+r15]                        ; argument "__src" for method j_memmove
0000000000001cc1         mov        rdi, r13                                    ; argument "__dest" for method j_memmove
0000000000001cc4         call       j_memmove                                   ; memmove
0000000000001cc9         test       rbx, rbx
0000000000001ccc         je         loc_1ed6

0000000000001cd2         lea        r10, qword [rbx+r13]
0000000000001cd6         mov        r8, r13
0000000000001cd9         xor        r15d, r15d
0000000000001cdc         nop        dword [rax]

                     loc_1ce0:
0000000000001ce0         movsx      esi, byte [r8]                              ; CODE XREF=fold_file+438
0000000000001ce4         mov        rdi, r15
0000000000001ce7         call       adjust_column                               ; adjust_column
0000000000001cec         add        r8, 0x1
0000000000001cf0         mov        r15, rax
0000000000001cf3         cmp        r10, r8
0000000000001cf6         jne        loc_1ce0

0000000000001cf8         jmp        loc_1bed
0000000000001cfd         align      256

                     loc_1d00:
0000000000001d00         mov        byte [r13], r14b                            ; CODE XREF=fold_file+209, fold_file+267
0000000000001d04         mov        rax, qword [r12+8]
0000000000001d09         mov        ebx, 0x1
0000000000001d0e         cmp        rax, qword [r12+0x10]
0000000000001d13         jb         loc_1bb9

                     loc_1d19:
0000000000001d19         mov        rdi, r12                                    ; argument #1 for method j___uflow, CODE XREF=fold_file+115
0000000000001d1c         call       j___uflow                                   ; __uflow
0000000000001d21         cmp        eax, 0xffffffff
0000000000001d24         mov        ebp, eax
0000000000001d26         jne        loc_1bc5

0000000000001d2c         mov        rax, qword [rsp+0x58+var_40]
0000000000001d31         test       rbx, rbx
0000000000001d34         mov        ebp, dword [rax]
0000000000001d36         je         loc_1d53

0000000000001d38         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5
0000000000001d3f         mov        rdi, qword [line_out.6894]                  ; argument "__ptr" for method j_fwrite_unlocked, line_out.6894
0000000000001d46         mov        rdx, rbx                                    ; argument "__n" for method j_fwrite_unlocked
0000000000001d49         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000001d4e         call       j_fwrite_unlocked                           ; fwrite_unlocked

                     loc_1d53:
0000000000001d53         test       byte [r12], 0x20                            ; CODE XREF=fold_file+502
0000000000001d58         jne        loc_1e60

0000000000001d5e         mov        rsi, qword [rsp+0x58+var_48]
0000000000001d63         lea        rdi, qword [aLibs+10]                       ; 0x56c2
0000000000001d6a         mov        ecx, 0x2
0000000000001d6f         rep  cmpsb byte [rsi], byte [rdi]
0000000000001d71         seta       al
0000000000001d74         sbb        al, 0x0
0000000000001d76         test       al, al
0000000000001d78         jne        loc_1ec0

                     loc_1d7e:
0000000000001d7e         mov        ebx, 0x1                                    ; CODE XREF=fold_file+907

                     loc_1d83:
0000000000001d83         add        rsp, 0x28                                   ; CODE XREF=fold_file+788, fold_file+867, fold_file+881
0000000000001d87         mov        eax, ebx
0000000000001d89         pop        rbx
0000000000001d8a         pop        rbp
0000000000001d8b         pop        r12
0000000000001d8d         pop        r13
0000000000001d8f         pop        r14
0000000000001d91         pop        r15
0000000000001d93         ret
                        ; endp
0000000000001d94         align      8

                     loc_1d98:
0000000000001d98         lea        rsi, qword [allocated_out.6895]             ; allocated_out.6895, CODE XREF=fold_file+151
0000000000001d9f         mov        rdi, r13
0000000000001da2         call       x2realloc                                   ; x2realloc
0000000000001da7         cmp        ebp, 0xa
0000000000001daa         mov        r13, rax
0000000000001dad         mov        qword [line_out.6894], rax                  ; line_out.6894
0000000000001db4         jne        loc_1be6

                     loc_1dba:
0000000000001dba         mov        byte [r13+rbx], 0xa                         ; CODE XREF=fold_file+160
0000000000001dc0         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5
0000000000001dc7         mov        rdx, r14                                    ; argument "__n" for method j_fwrite_unlocked
0000000000001dca         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000001dcf         mov        rdi, r13                                    ; argument "__ptr" for method j_fwrite_unlocked
0000000000001dd2         xor        ebx, ebx
0000000000001dd4         xor        r15d, r15d
0000000000001dd7         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000001ddc         jmp        loc_1ba9
0000000000001de1         align      8

                     loc_1de8:
0000000000001de8         mov        byte [r13+rbx], r14b                        ; CODE XREF=fold_file+191
0000000000001ded         add        rbx, 0x1
0000000000001df1         jmp        loc_1ba9
0000000000001df6         align      512

                     loc_1e00:
0000000000001e00         mov        rdi, qword [rsp+0x58+var_48]                ; argument "__filename" for method j_fopen, CODE XREF=fold_file+48
0000000000001e05         lea        rsi, qword [aWriteError+10]                 ; argument "__modes" for method j_fopen, 0x5672
0000000000001e0c         call       j_fopen                                     ; fopen
0000000000001e11         mov        r12, rax
0000000000001e14         call       j___errno_location                          ; __errno_location
0000000000001e19         test       r12, r12
0000000000001e1c         mov        qword [rsp+0x58+var_40], rax
0000000000001e21         jne        loc_1b97

                     loc_1e27:
0000000000001e27         mov        rdx, qword [rsp+0x58+var_48]                ; CODE XREF=fold_file+81, fold_file+913
0000000000001e2c         mov        esi, 0x3
0000000000001e31         xor        edi, edi
0000000000001e33         xor        ebx, ebx
0000000000001e35         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000001e3a         mov        rcx, rax
0000000000001e3d         mov        rax, qword [rsp+0x58+var_40]
0000000000001e42         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5678
0000000000001e49         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001e4b         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001e4d         xor        eax, eax
0000000000001e4f         call       j_error                                     ; error
0000000000001e54         jmp        loc_1d83
0000000000001e59         align      32

                     loc_1e60:
0000000000001e60         mov        rbx, qword [rsp+0x58+var_48]                ; CODE XREF=fold_file+536
0000000000001e65         xor        edi, edi
0000000000001e67         mov        esi, 0x3
0000000000001e6c         mov        rdx, rbx
0000000000001e6f         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000001e74         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5678
0000000000001e7b         mov        rcx, rax
0000000000001e7e         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001e80         xor        eax, eax
0000000000001e82         mov        esi, ebp                                    ; argument "__errnum" for method j_error
0000000000001e84         call       j_error                                     ; error
0000000000001e89         lea        rdi, qword [aLibs+10]                       ; 0x56c2
0000000000001e90         mov        rsi, rbx
0000000000001e93         mov        ecx, 0x2
0000000000001e98         rep  cmpsb byte [rsi], byte [rdi]
0000000000001e9a         seta       al
0000000000001e9d         sbb        al, 0x0
0000000000001e9f         xor        ebx, ebx
0000000000001ea1         test       al, al
0000000000001ea3         je         loc_1d83

0000000000001ea9         mov        rdi, r12
0000000000001eac         call       rpl_fclose                                  ; rpl_fclose
0000000000001eb1         jmp        loc_1d83
0000000000001eb6         align      64

                     loc_1ec0:
0000000000001ec0         mov        rdi, r12                                    ; CODE XREF=fold_file+568
0000000000001ec3         call       rpl_fclose                                  ; rpl_fclose
0000000000001ec8         cmp        eax, 0xffffffff
0000000000001ecb         jne        loc_1d7e

0000000000001ed1         jmp        loc_1e27

                     loc_1ed6:
0000000000001ed6         xor        r15d, r15d                                  ; CODE XREF=fold_file+396
0000000000001ed9         jmp        loc_1bed

                     loc_1ede:
0000000000001ede         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=fold_file+350
0000000000001ee3         call       j___overflow                                ; __overflow
0000000000001ee8         jmp        loc_1caf
0000000000001eed         align      16                                          ; End of unwind block (FDE at 0x6370)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
0000000000001ef0         push       r13                                         ; Begin of unwind block (FDE at 0x63bc), CODE XREF=main+200, main+611
0000000000001ef2         push       r12
0000000000001ef4         mov        edx, 0x5
0000000000001ef9         push       rbp
0000000000001efa         push       rbx
0000000000001efb         mov        ebp, edi
0000000000001efd         sub        rsp, 0x88
0000000000001f04         mov        rbx, qword [program_name]                   ; program_name
0000000000001f0b         mov        rax, qword [fs:0x28]
0000000000001f14         mov        qword [rsp+0xa8+var_30], rax
0000000000001f19         xor        eax, eax
0000000000001f1b         test       edi, edi
0000000000001f1d         je         loc_1f4d

0000000000001f1f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000001f26         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f28         call       j_dcgettext                                 ; dcgettext
0000000000001f2d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000001f34         mov        rdx, rax
0000000000001f37         mov        rcx, rbx
0000000000001f3a         mov        esi, 0x1
0000000000001f3f         xor        eax, eax
0000000000001f41         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_1f46:
0000000000001f46         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+750
0000000000001f48         call       j_exit                                      ; exit
                        ; endp

                     loc_1f4d:
0000000000001f4d         lea        rsi, qword [aUsageSOptionFi]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... [FILE]...\\n", CODE XREF=usage+45
0000000000001f54         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f56         call       j_dcgettext                                 ; dcgettext
0000000000001f5b         mov        rdx, rbx
0000000000001f5e         mov        rsi, rax
0000000000001f61         mov        edi, 0x1
0000000000001f66         xor        eax, eax
0000000000001f68         call       j___printf_chk                              ; __printf_chk
0000000000001f6d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001f74         lea        rsi, qword [aWrapInputLines]                ; argument "msgid" for method j_dcgettext, "Wrap input lines in each FILE, writing to standard output.\\n"
0000000000001f7b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001f80         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f82         call       j_dcgettext                                 ; dcgettext
0000000000001f87         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001f8a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001f8d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001f92         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001f99         lea        rsi, qword [aNwithNoFileOrW]                ; argument "msgid" for method j_dcgettext, "\\nWith no FILE, or when FILE is -, read standard input.\\n"
0000000000001fa0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001fa5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001fa7         call       j_dcgettext                                 ; dcgettext
0000000000001fac         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001faf         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001fb2         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001fb7         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001fbe         lea        rsi, qword [aNmandatoryArgu]                ; argument "msgid" for method j_dcgettext, "\\nMandatory arguments to long options are mandatory for short options too.\\n"
0000000000001fc5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001fca         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001fcc         call       j_dcgettext                                 ; dcgettext
0000000000001fd1         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001fd4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001fd7         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001fdc         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001fe3         lea        rsi, qword [aBBytesCountByt]                ; argument "msgid" for method j_dcgettext, "  -b, --bytes         count bytes rather than columns\\n  -s, --spaces        break at spaces\\n  -w, --width=WIDTH   use WIDTH columns instead of 80\\n"
0000000000001fea         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001fef         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001ff1         call       j_dcgettext                                 ; dcgettext
0000000000001ff6         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001ff9         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001ffc         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002001         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002008         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
000000000000200f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002014         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002016         call       j_dcgettext                                 ; dcgettext
000000000000201b         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000201e         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002021         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002026         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000202d         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
0000000000002034         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002039         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000203b         call       j_dcgettext                                 ; dcgettext
0000000000002040         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002043         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002046         lea        rbx, qword [_IO_stdin_used+4]               ; 0x5264
000000000000204d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002052         lea        rax, qword [_IO_stdin_used+9]               ; 0x5269
0000000000002059         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
0000000000002060         mov        qword [rsp+0xa8+var_48], 0x0
0000000000002069         mov        qword [rsp+0xa8+var_40], 0x0
0000000000002072         mov        rdx, rsp
0000000000002075         mov        qword [rsp+0xa8+var_A8], rax
0000000000002079         lea        rax, qword [aTestInvocation]                ; "test invocation"
0000000000002080         mov        qword [rsp+0xa8+var_78], rcx
0000000000002085         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
000000000000208c         mov        qword [rsp+0xa8+var_A0], rax
0000000000002091         lea        rax, qword [aCoreutils]                     ; "coreutils"
0000000000002098         mov        qword [rsp+0xa8+var_68], rcx
000000000000209d         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
00000000000020a4         mov        qword [rsp+0xa8+var_98], rax
00000000000020a9         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
00000000000020b0         mov        qword [rsp+0xa8+var_58], rcx
00000000000020b5         mov        qword [rsp+0xa8+var_90], rax
00000000000020ba         lea        rax, qword [aSha224sum]                     ; "sha224sum"
00000000000020c1         mov        qword [rsp+0xa8+var_88], rax
00000000000020c6         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
00000000000020cd         mov        qword [rsp+0xa8+var_80], rax
00000000000020d2         mov        qword [rsp+0xa8+var_70], rax
00000000000020d7         mov        qword [rsp+0xa8+var_60], rax
00000000000020dc         mov        qword [rsp+0xa8+var_50], rax
00000000000020e1         nop        dword [rax]

                     loc_20e8:
00000000000020e8         add        rdx, 0x10                                   ; CODE XREF=usage+533
00000000000020ec         mov        rdi, qword [rdx]
00000000000020ef         test       rdi, rdi
00000000000020f2         je         loc_2107

00000000000020f4         mov        ecx, 0x5
00000000000020f9         mov        rsi, rbx
00000000000020fc         rep  cmpsb byte [rsi], byte [rdi]
00000000000020fe         seta       al
0000000000002101         sbb        al, 0x0
0000000000002103         test       al, al
0000000000002105         jne        loc_20e8

                     loc_2107:
0000000000002107         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+514
000000000000210b         xor        edi, edi
000000000000210d         mov        edx, 0x5
0000000000002112         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000002119         test       r12, r12
000000000000211c         je         loc_21e3

0000000000002122         call       j_dcgettext                                 ; dcgettext
0000000000002127         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000212e         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x52df
0000000000002135         mov        rsi, rax
0000000000002138         mov        edi, 0x1
000000000000213d         xor        eax, eax
000000000000213f         call       j___printf_chk                              ; __printf_chk
0000000000002144         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000002146         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
000000000000214b         call       j_setlocale                                 ; setlocale
0000000000002150         test       rax, rax
0000000000002153         je         loc_2171

0000000000002155         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x52ed
000000000000215c         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000002161         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000002164         call       j_strncmp                                   ; strncmp
0000000000002169         test       eax, eax
000000000000216b         jne        loc_2278

                     loc_2171:
0000000000002171         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+611, usage+941
0000000000002178         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000217a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000217f         call       j_dcgettext                                 ; dcgettext
0000000000002184         lea        rcx, qword [_IO_stdin_used+4]               ; 0x5264
000000000000218b         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002192         mov        rsi, rax
0000000000002195         mov        edi, 0x1
000000000000219a         xor        eax, eax
000000000000219c         call       j___printf_chk                              ; __printf_chk
00000000000021a1         cmp        r12, rbx
00000000000021a4         lea        rcx, qword [aMulticallInvoc+10]             ; 0x5285
00000000000021ab         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x5c01
00000000000021b2         cmove      rbx, rcx

                     loc_21b6:
00000000000021b6         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+892
00000000000021bd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000021bf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000021c4         call       j_dcgettext                                 ; dcgettext
00000000000021c9         mov        rcx, rbx
00000000000021cc         mov        rsi, rax
00000000000021cf         mov        rdx, r12
00000000000021d2         mov        edi, 0x1
00000000000021d7         xor        eax, eax
00000000000021d9         call       j___printf_chk                              ; __printf_chk
00000000000021de         jmp        loc_1f46

                     loc_21e3:
00000000000021e3         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+556
00000000000021e8         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000021ef         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x52df
00000000000021f6         mov        rsi, rax
00000000000021f9         mov        edi, 0x1
00000000000021fe         xor        eax, eax
0000000000002200         call       j___printf_chk                              ; __printf_chk
0000000000002205         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000002207         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
000000000000220c         call       j_setlocale                                 ; setlocale
0000000000002211         test       rax, rax
0000000000002214         je         loc_222e

0000000000002216         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x52ed
000000000000221d         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000002222         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000002225         call       j_strncmp                                   ; strncmp
000000000000222a         test       eax, eax
000000000000222c         jne        loc_2271

                     loc_222e:
000000000000222e         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+804
0000000000002235         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000223a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000223c         lea        r12, qword [_IO_stdin_used+4]               ; 0x5264
0000000000002243         lea        rbx, qword [aMulticallInvoc+10]             ; 0x5285
000000000000224a         call       j_dcgettext                                 ; dcgettext
000000000000224f         lea        rcx, qword [_IO_stdin_used+4]               ; 0x5264
0000000000002256         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000225d         mov        rsi, rax
0000000000002260         mov        edi, 0x1
0000000000002265         xor        eax, eax
0000000000002267         call       j___printf_chk                              ; __printf_chk
000000000000226c         jmp        loc_21b6

                     loc_2271:
0000000000002271         lea        r12, qword [_IO_stdin_used+4]               ; 0x5264, CODE XREF=usage+828

                     loc_2278:
0000000000002278         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+635
000000000000227f         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
0000000000002286         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002288         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000228d         call       j_dcgettext                                 ; dcgettext
0000000000002292         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002295         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002298         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000229d         jmp        loc_2171
00000000000022a2         align      16                                          ; End of unwind block (FDE at 0x63bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
00000000000022b0         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x6424), file_name
00000000000022b7         ret
                        ; endp
00000000000022b8         align      64                                          ; End of unwind block (FDE at 0x6424)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
00000000000022c0         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x6438), ignore_EPIPE
00000000000022c7         ret
                        ; endp
00000000000022c8         align      16                                          ; End of unwind block (FDE at 0x6438)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
00000000000022d0         push       rbp                                         ; Begin of unwind block (FDE at 0x644c), DATA XREF=main+98
00000000000022d1         push       rbx
00000000000022d2         sub        rsp, 0x8
00000000000022d6         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000022dd         call       close_stream                                ; close_stream
00000000000022e2         test       eax, eax
00000000000022e4         je         loc_22fc

00000000000022e6         call       j___errno_location                          ; __errno_location
00000000000022eb         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
00000000000022f2         mov        rbx, rax
00000000000022f5         je         loc_2313

00000000000022f7         cmp        dword [rax], 0x20
00000000000022fa         jne        loc_2313

                     loc_22fc:
00000000000022fc         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000002303         call       close_stream                                ; close_stream
0000000000002308         test       eax, eax
000000000000230a         jne        loc_2352

000000000000230c         add        rsp, 0x8
0000000000002310         pop        rbx
0000000000002311         pop        rbp
0000000000002312         ret
                        ; endp

                     loc_2313:
0000000000002313         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
000000000000231a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000231c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002321         call       j_dcgettext                                 ; dcgettext
0000000000002326         mov        rdi, qword [file_name]                      ; file_name
000000000000232d         mov        rbp, rax
0000000000002330         test       rdi, rdi
0000000000002333         je         loc_235d

0000000000002335         call       quotearg_colon                              ; quotearg_colon
000000000000233a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
000000000000233c         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000002343         mov        rcx, rax
0000000000002346         mov        r8, rbp
0000000000002349         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000234b         xor        eax, eax
000000000000234d         call       j_error                                     ; error

                     loc_2352:
0000000000002352         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000002358         call       j__exit                                     ; _exit
                        ; endp

                     loc_235d:
000000000000235d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
000000000000235f         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5678
0000000000002366         mov        rcx, rax
0000000000002369         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000236b         xor        eax, eax
000000000000236d         call       j_error                                     ; error
0000000000002372         jmp        loc_2352
0000000000002374         align      128                                         ; End of unwind block (FDE at 0x644c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fdadvise:
0000000000002380         jmp        j_posix_fadvise                             ; posix_fadvise, Begin of unwind block (FDE at 0x647c)
                        ; endp
0000000000002385         align      16                                          ; End of unwind block (FDE at 0x647c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fadvise:
0000000000002390         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x6490), CODE XREF=fold_file+100
0000000000002393         je         loc_23b0

0000000000002395         push       rbx
0000000000002396         mov        ebx, esi
0000000000002398         call       j_fileno                                    ; fileno
000000000000239d         mov        ecx, ebx                                    ; argument "__advise" for method j_posix_fadvise
000000000000239f         xor        edx, edx                                    ; argument "__len" for method j_posix_fadvise
00000000000023a1         xor        esi, esi                                    ; argument "__offset" for method j_posix_fadvise
00000000000023a3         pop        rbx
00000000000023a4         mov        edi, eax                                    ; argument "__fd" for method j_posix_fadvise
00000000000023a6         jmp        j_posix_fadvise                             ; posix_fadvise
                        ; endp
00000000000023ab         align      16

                     loc_23b0:
00000000000023b0         ret                                                    ; CODE XREF=fadvise+3
                        ; endp
00000000000023b2         align      64                                          ; End of unwind block (FDE at 0x6490)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
00000000000023c0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x64ac), CODE XREF=main+45
00000000000023c3         push       rbx
00000000000023c4         je         loc_243d

00000000000023c6         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
00000000000023cb         mov        rbx, rdi
00000000000023ce         call       j_strrchr                                   ; strrchr
00000000000023d3         test       rax, rax
00000000000023d6         je         loc_242d

00000000000023d8         lea        r8, qword [rax+1]
00000000000023dc         mov        rdx, r8
00000000000023df         sub        rdx, rbx
00000000000023e2         cmp        rdx, 0x6
00000000000023e6         jle        loc_242d

00000000000023e8         lea        rsi, qword [rax-6]
00000000000023ec         lea        rdi, qword [aLibs]                          ; "/.libs/"
00000000000023f3         mov        ecx, 0x7
00000000000023f8         rep  cmpsb byte [rsi], byte [rdi]
00000000000023fa         seta       dl
00000000000023fd         sbb        dl, 0x0
0000000000002400         test       dl, dl
0000000000002402         jne        loc_242d

0000000000002404         lea        rdi, qword [aLibs+8]                        ; 0x56c0
000000000000240b         mov        ecx, 0x3
0000000000002410         mov        rsi, r8
0000000000002413         mov        rbx, r8
0000000000002416         rep  cmpsb byte [rsi], byte [rdi]
0000000000002418         seta       dl
000000000000241b         sbb        dl, 0x0
000000000000241e         test       dl, dl
0000000000002420         jne        loc_242d

0000000000002422         lea        rbx, qword [rax+4]
0000000000002426         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_242d:
000000000000242d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000002434         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
000000000000243b         pop        rbx
000000000000243c         ret
                        ; endp

                     loc_243d:
000000000000243d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000002444         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
000000000000244b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000002450         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000002455         call       j_fwrite                                    ; fwrite
000000000000245a         call       j_abort                                     ; abort
                        ; endp
000000000000245f         align      32                                          ; End of unwind block (FDE at 0x64ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000002460         push       rbp                                         ; Begin of unwind block (FDE at 0x64cc), CODE XREF=sub_3600+181, sub_3600+203
0000000000002461         push       rbx
0000000000002462         mov        rbp, rdi
0000000000002465         mov        ebx, esi
0000000000002467         sub        rsp, 0x8
000000000000246b         call       locale_charset                              ; locale_charset
0000000000002470         movzx      edx, byte [rax]
0000000000002473         and        edx, 0xffffffdf
0000000000002476         cmp        dl, 0x55
0000000000002479         je         loc_24f0

000000000000247b         cmp        dl, 0x47
000000000000247e         je         loc_24a0

                     loc_2480:
0000000000002480         lea        rax, qword [aLibs+27]                       ; 0x56d3, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000002487         lea        rdx, qword [aLibs+29]                       ; 0x56d5
000000000000248e         cmp        ebx, 0x9
0000000000002491         cmovne     rax, rdx
0000000000002495         add        rsp, 0x8
0000000000002499         pop        rbx
000000000000249a         pop        rbp
000000000000249b         ret
                        ; endp
000000000000249c         align      32

                     loc_24a0:
00000000000024a0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
00000000000024a4         and        edx, 0xffffffdf
00000000000024a7         cmp        dl, 0x42
00000000000024aa         jne        loc_2480

00000000000024ac         cmp        byte [rax+2], 0x31
00000000000024b0         jne        loc_2480

00000000000024b2         cmp        byte [rax+3], 0x38
00000000000024b6         jne        loc_2480

00000000000024b8         cmp        byte [rax+4], 0x30
00000000000024bc         jne        loc_2480

00000000000024be         cmp        byte [rax+5], 0x33
00000000000024c2         jne        loc_2480

00000000000024c4         cmp        byte [rax+6], 0x30
00000000000024c8         jne        loc_2480

00000000000024ca         cmp        byte [rax+7], 0x0
00000000000024ce         jne        loc_2480

00000000000024d0         cmp        byte [rbp], 0x60
00000000000024d4         lea        rax, qword [aLibs+20]                       ; 0x56cc
00000000000024db         lea        rdx, qword [aLibs+24]                       ; 0x56d0
00000000000024e2         cmovne     rax, rdx
00000000000024e6         add        rsp, 0x8
00000000000024ea         pop        rbx
00000000000024eb         pop        rbp
00000000000024ec         ret
                        ; endp
00000000000024ed         align      16

                     loc_24f0:
00000000000024f0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
00000000000024f4         and        edx, 0xffffffdf
00000000000024f7         cmp        dl, 0x54
00000000000024fa         jne        loc_2480

00000000000024fc         movzx      edx, byte [rax+2]
0000000000002500         and        edx, 0xffffffdf
0000000000002503         cmp        dl, 0x46
0000000000002506         jne        loc_2480

000000000000250c         cmp        byte [rax+3], 0x2d
0000000000002510         jne        loc_2480

0000000000002516         cmp        byte [rax+4], 0x38
000000000000251a         jne        loc_2480

0000000000002520         cmp        byte [rax+5], 0x0
0000000000002524         jne        loc_2480

000000000000252a         cmp        byte [rbp], 0x60
000000000000252e         lea        rax, qword [aLibs+12]                       ; 0x56c4
0000000000002535         lea        rdx, qword [aLibs+16]                       ; 0x56c8
000000000000253c         cmovne     rax, rdx
0000000000002540         add        rsp, 0x8
0000000000002544         pop        rbx
0000000000002545         pop        rbp
0000000000002546         ret
                        ; endp
0000000000002547         align      16                                          ; End of unwind block (FDE at 0x64cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000002550         push       r15                                         ; Begin of unwind block (FDE at 0x6510), CODE XREF=sub_2c90+1165, sub_3600+283, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000002552         push       r14
0000000000002554         mov        r15d, r8d
0000000000002557         push       r13
0000000000002559         push       r12
000000000000255b         mov        r14, rdi
000000000000255e         push       rbp
000000000000255f         push       rbx
0000000000002560         mov        ebx, r9d
0000000000002563         mov        r13, rsi
0000000000002566         mov        rbp, rcx
0000000000002569         and        ebx, 0x2
000000000000256c         sub        rsp, 0xb8
0000000000002573         mov        rax, qword [rsp+0xe8+arg_0]
000000000000257b         mov        qword [rsp+0xe8+var_D8], rdx
0000000000002580         mov        dword [rsp+0xe8+var_E0], r8d
0000000000002585         mov        dword [rsp+0xe8+var_70], r9d
000000000000258a         mov        qword [rsp+0xe8+var_C8], rax
000000000000258f         mov        rax, qword [rsp+0xe8+arg_8]
0000000000002597         mov        qword [rsp+0xe8+var_80], rax
000000000000259c         mov        rax, qword [rsp+0xe8+arg_10]
00000000000025a4         mov        qword [rsp+0xe8+var_88], rax
00000000000025a9         mov        rax, qword [fs:0x28]
00000000000025b2         mov        qword [rsp+0xe8+var_40], rax
00000000000025ba         xor        eax, eax
00000000000025bc         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
00000000000025c1         cmp        r15d, 0xa
00000000000025c5         mov        qword [rsp+0xe8+var_90], rax
00000000000025ca         ja         loc_377f

00000000000025d0         lea        rcx, qword [switch_table_5740]              ; switch_table_5740
00000000000025d7         mov        edx, r15d
00000000000025da         movsxd     rax, dword [rcx+rdx*4]
00000000000025de         add        rax, rcx
00000000000025e1         jmp        rax                                         ; switch statement using table at 0x5740, with 11 cases, 0x25e3,0x31b4,0x3210,0x3265,0x32aa,0x32e4,0x338a,0x33c4,0x35b8

                     loc_25e3:
00000000000025e3         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_2c90+1318
00000000000025e8         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000025ed         xor        r12d, r12d
00000000000025f0         mov        qword [rsp+0xe8+var_98], 0x0
00000000000025f9         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000025fe         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_2603:
0000000000002603         lea        rax, qword [aLibs+29]                       ; 0x56d5, CODE XREF=sub_2c90+1876
000000000000260a         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000002613         xor        r15d, r15d
0000000000002616         mov        dword [rsp+0xe8+var_E0], 0x2
000000000000261e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_2623:
0000000000002623         xor        r11d, r11d                                  ; CODE XREF=sub_2c90+180, sub_2c90+1400, sub_2c90+1488, sub_2c90+1557, sub_2c90+1615, sub_2c90+1781, sub_2c90+1839, sub_2c90+2408, sub_3600+69
0000000000002626         mov        rax, rbp
0000000000002629         mov        r8d, r12d
000000000000262c         mov        rbp, r11
000000000000262f         mov        r11, rax
0000000000002632         nop        word [rax+rax]

                     loc_2638:
0000000000002638         cmp        r11, rbp                                    ; CODE XREF=sub_2740+194
000000000000263b         setne      r12b
000000000000263f         cmp        r11, 0xffffffffffffffff
0000000000002643         jne        loc_2652

0000000000002645         mov        rax, qword [rsp+0xe8+var_D8]
000000000000264a         cmp        byte [rax+rbp], 0x0
000000000000264e         setne      r12b

                     loc_2652:
0000000000002652         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000002655         je         loc_2cb0

000000000000265b         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000002660         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000002665         lea        r9, qword [rdi+rbp]
0000000000002669         setne      al
000000000000266c         and        al, byte [rsp+0xe8+var_DB]
0000000000002670         mov        r10d, eax
0000000000002673         je         loc_2720

0000000000002679         mov        rax, qword [rsp+0xe8+var_D0]
000000000000267e         test       rax, rax
0000000000002681         je         loc_2ab0

0000000000002687         cmp        r11, 0xffffffffffffffff
000000000000268b         lea        rbx, qword [rbp+rax]
0000000000002690         jne        loc_26c0

0000000000002692         cmp        rax, 0x1
0000000000002696         jbe        loc_26c0

0000000000002698         mov        byte [rsp+0xe8+var_B0], r8b
000000000000269d         mov        byte [rsp+0xe8+var_B8], r10b
00000000000026a2         mov        qword [rsp+0xe8+var_C0], r9
00000000000026a7         call       j_strlen                                    ; strlen
00000000000026ac         movzx      r8d, byte [rsp+0xe8+var_B0]
00000000000026b2         movzx      r10d, byte [rsp+0xe8+var_B8]
00000000000026b8         mov        r11, rax
00000000000026bb         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_26c0:
00000000000026c0         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
00000000000026c3         mov        byte [rsp+0xe8+var_C0], r10b
00000000000026c8         ja         loc_2c80

00000000000026ce         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
00000000000026d3         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
00000000000026d8         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
00000000000026db         mov        qword [rsp+0xe8+var_A8], r11
00000000000026e0         mov        byte [rsp+0xe8+var_B0], r8b
00000000000026e5         mov        qword [rsp+0xe8+var_B8], r9
00000000000026ea         call       j_memcmp                                    ; memcmp
00000000000026ef         test       eax, eax
00000000000026f1         mov        r9, qword [rsp+0xe8+var_B8]
00000000000026f6         movzx      r8d, byte [rsp+0xe8+var_B0]
00000000000026fc         mov        r11, qword [rsp+0xe8+var_A8]
0000000000002701         jne        loc_2c80

0000000000002707         cmp        byte [rsp+0xe8+var_D9], 0x0
000000000000270c         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000002712         jne        loc_3695

0000000000002718         nop        dword [rax+rax]

                     loc_2720:
0000000000002720         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_2c70+19
0000000000002724         cmp        bl, 0x7e
0000000000002727         ja         loc_2a48

000000000000272d         lea        rcx, qword [switch_table_5740+44]           ; 0x576c
0000000000002734         movzx      edx, bl
0000000000002737         movsxd     rax, dword [rcx+rdx*4]
000000000000273b         add        rax, rcx
000000000000273e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2740:
0000000000002740         xor        r10d, r10d
0000000000002743         cmp        r11, 0x1
0000000000002747         setne      al
000000000000274a         cmp        r11, 0xffffffffffffffff
000000000000274e         jne        loc_275c

0000000000002750         mov        rax, qword [rsp+arg_8]
0000000000002755         cmp        byte [rax+1], 0x0
0000000000002759         setne      al

                     loc_275c:
000000000000275c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2740+14
0000000000002761         sete       dl
0000000000002764         test       al, al
0000000000002766         je         loc_29b8

                     loc_276c:
000000000000276c         xor        r12d, r12d                                  ; CODE XREF=sub_29b0+11
000000000000276f         xor        eax, eax
0000000000002771         nop        dword [rax]
                        ; endp

                     loc_2778:
0000000000002778         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_2960+50, sub_2a30+119
000000000000277d         jne        loc_2892

0000000000002783         test       dl, dl
0000000000002785         jne        loc_2892

                     loc_278b:
000000000000278b         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_2840+87
0000000000002790         test       rsi, rsi
0000000000002793         je         loc_27a9

0000000000002795         mov        edx, ebx
0000000000002797         shr        dl, 0x5
000000000000279a         movzx      edx, dl
000000000000279d         mov        edx, dword [rsi+rdx*4]
00000000000027a0         bt         edx, ebx
00000000000027a3         jb         loc_28f3

                     loc_27a9:
00000000000027a9         test       r10b, r10b                                  ; CODE XREF=sub_2740+83, sub_2840+93
00000000000027ac         jne        loc_28f3

00000000000027b2         xor        eax, 0x1
00000000000027b5         add        rbp, 0x1
00000000000027b9         and        eax, r8d

                     loc_27bc:
00000000000027bc         test       al, al                                      ; CODE XREF=sub_2c90+936
00000000000027be         je         loc_27e0

00000000000027c0         cmp        r13, r15
00000000000027c3         jbe        loc_27ca

00000000000027c5         mov        byte [r14+r15], 0x27

                     loc_27ca:
00000000000027ca         lea        rax, qword [r15+1]                          ; CODE XREF=sub_2740+131
00000000000027ce         cmp        r13, rax
00000000000027d1         jbe        loc_27d9

00000000000027d3         mov        byte [r14+r15+1], 0x27

                     loc_27d9:
00000000000027d9         add        r15, 0x2                                    ; CODE XREF=sub_2740+145
00000000000027dd         xor        r8d, r8d

                     loc_27e0:
00000000000027e0         cmp        r15, r13                                    ; CODE XREF=sub_2740+126, sub_2840+275, sub_2c90+869
00000000000027e3         jae        loc_27e9

00000000000027e5         mov        byte [r14+r15], bl

                     loc_27e9:
00000000000027e9         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_2740+163
00000000000027ee         add        r15, 0x1
00000000000027f2         mov        eax, 0x0
00000000000027f7         test       r12b, r12b
00000000000027fa         cmove      edi, eax
00000000000027fd         mov        byte [rsp+0xe8+var_DA], dil
0000000000002802         jmp        loc_2638
0000000000002807         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2810:
0000000000002810         xor        r10d, r10d
0000000000002813         mov        eax, dword [rsp+arg_0]
0000000000002817         cmp        eax, 0x2
000000000000281a         je         loc_2dd8

0000000000002820         cmp        eax, 0x5
0000000000002823         je         loc_2d98

0000000000002829         cmp        eax, 0x2
000000000000282c         mov        ebx, 0x3f
0000000000002831         sete       dl
0000000000002834         xor        r12d, r12d
0000000000002837         xor        eax, eax
0000000000002839         jmp        sub_2740+56
                        ; endp
000000000000283e         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2840:
0000000000002840         xor        r10d, r10d
0000000000002843         cmp        dword [rsp+arg_0], 0x2
0000000000002848         je         loc_2d50

000000000000284e         mov        byte [rsp+arg_74], r12b
0000000000002853         xor        edx, edx
0000000000002855         xor        eax, eax
0000000000002857         mov        ebx, 0x27
000000000000285c         jmp        sub_2740+56
                        ; endp
0000000000002861         nop        dword [rax]
0000000000002868         mov        edx, 0x9
000000000000286d         mov        ebx, 0x74

                     loc_2872:
0000000000002872         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2a00+10, sub_2af0+37, sub_2c30+53
0000000000002877         sete       al
000000000000287a         and        al, byte [rsp+arg_7]
000000000000287e         jne        sub_29b0+30

0000000000002884         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_2840+114
0000000000002889         jne        loc_28f0

                     loc_288b:
000000000000288b         mov        ebx, edx                                    ; CODE XREF=sub_2960+18
000000000000288d         xor        r12d, r12d
0000000000002890         xor        eax, eax
                        ; endp

                     loc_2892:
0000000000002892         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_2740+61, sub_2740+69
0000000000002897         jne        loc_278b

000000000000289d         jmp        loc_27a9
00000000000028a2         nop        word [rax+rax]
00000000000028a8         mov        edx, 0x8
00000000000028ad         mov        ebx, 0x62
00000000000028b2         jmp        sub_2840+68
00000000000028b4         nop        dword [rax]
00000000000028b8         cmp        dword [rsp+8], 0x2
00000000000028bd         je         sub_2c90                                    ; sub_2c90
00000000000028c3         cmp        byte [rsp+0xd], 0x0
00000000000028c8         je         sub_2ad0+16

                     loc_28ce:
00000000000028ce         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2ad0+8
00000000000028d3         je         loc_2ae0

00000000000028d9         cmp        qword [rsp+arg_10], 0x0
00000000000028df         jne        loc_2c9b

00000000000028e5         mov        ebx, 0x5c
00000000000028ea         nop        word [rax+rax]
                        ; endp

                     loc_28f0:
00000000000028f0         xor        r12d, r12d                                  ; CODE XREF=sub_2840+73, sub_2c30+29
                        ; endp

                     loc_28f3:
00000000000028f3         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_2740+99, sub_2740+108
00000000000028f8         sete       dl
00000000000028fb         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000002900         mov        eax, edx
0000000000002902         jne        loc_3158

0000000000002908         mov        eax, r8d
000000000000290b         xor        eax, 0x1
000000000000290e         and        al, dl
0000000000002910         je         loc_2941

0000000000002912         cmp        r13, r15
0000000000002915         jbe        loc_291c

0000000000002917         mov        byte [r14+r15], 0x27

                     loc_291c:
000000000000291c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_2840+213
0000000000002920         cmp        r13, rdx
0000000000002923         jbe        loc_292b

0000000000002925         mov        byte [r14+r15+1], 0x24

                     loc_292b:
000000000000292b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_2840+227
000000000000292f         cmp        r13, rdx
0000000000002932         jbe        loc_293a

0000000000002934         mov        byte [r14+r15+2], 0x27

                     loc_293a:
000000000000293a         add        r15, 0x3                                    ; CODE XREF=sub_2840+242
000000000000293e         mov        r8d, eax

                     loc_2941:
0000000000002941         cmp        r13, r15                                    ; CODE XREF=sub_2840+208
0000000000002944         jbe        loc_294b

0000000000002946         mov        byte [r14+r15], 0x5c

                     loc_294b:
000000000000294b         add        r15, 0x1                                    ; CODE XREF=sub_2840+260
000000000000294f         add        rbp, 0x1
0000000000002953         jmp        loc_27e0
0000000000002958         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_2960:
0000000000002960         cmp        byte [rsp+arg_5], 0x0
0000000000002965         jne        loc_2b33

000000000000296b         xor        edx, edx
000000000000296d         test       byte [rsp+arg_70], 0x1
0000000000002972         je         loc_288b

0000000000002978         add        rbp, 0x1
000000000000297c         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000002981         nop        dword [rax]
0000000000002988         cmp        dword [rsp+8], 0x2
000000000000298d         sete       dl
0000000000002990         xor        eax, eax
0000000000002992         jmp        sub_2740+56
0000000000002997         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_29a0:
00000000000029a0         mov        edx, 0x7
00000000000029a5         mov        ebx, 0x61
00000000000029aa         jmp        sub_2840+68
                        ; endp
00000000000029af         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_29b0:
00000000000029b0         cmp        dword [rsp+8], 0x2
00000000000029b5         sete       dl
                        ; endp

                     loc_29b8:
00000000000029b8         test       rbp, rbp                                    ; CODE XREF=sub_2740+38, sub_2bd0+35
00000000000029bb         jne        loc_276c

00000000000029c1         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_2c00+43
00000000000029c6         and        al, dl
00000000000029c8         je         sub_2740+56

00000000000029ce         mov        rbp, r11
00000000000029d1         mov        dword [rsp+arg_0], 0x2
00000000000029d9         jmp        sub_2c90+1097
                        ; endp
00000000000029de         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_29e0:
00000000000029e0         cmp        dword [rsp+arg_0], 0x2
00000000000029e5         sete       dl
00000000000029e8         xor        r12d, r12d
00000000000029eb         jmp        sub_29b0+17
                        ; endp
00000000000029ed         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_29f0:
00000000000029f0         cmp        dword [rsp+arg_0], 0x2
00000000000029f5         mov        ebx, 0x20
00000000000029fa         sete       dl
00000000000029fd         jmp        sub_29b0+17
                        ; endp
00000000000029ff         align      512


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_2a00:
0000000000002a00         mov        edx, 0xd
0000000000002a05         mov        ebx, 0x72
0000000000002a0a         jmp        loc_2872
0000000000002a0f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a10:
0000000000002a10         mov        edx, 0xc
0000000000002a15         mov        ebx, 0x66
0000000000002a1a         jmp        sub_2840+68
                        ; endp
0000000000002a1f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a20:
0000000000002a20         mov        edx, 0xb
0000000000002a25         mov        ebx, 0x76
0000000000002a2a         jmp        sub_2840+68
                        ; endp
0000000000002a2f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a30:
0000000000002a30         mov        edx, 0xa
0000000000002a35         mov        ebx, 0x6e
0000000000002a3a         jmp        sub_2840+50
                        ; endp
0000000000002a3f         align      64

                     loc_2a40:
0000000000002a40         xor        r10d, r10d                                  ; CODE XREF=sub_2a30+135
0000000000002a43         nop        dword [rax+rax]

                     loc_2a48:
0000000000002a48         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
0000000000002a4e         jne        loc_2df8

0000000000002a54         mov        qword [rsp+0xe8+var_B0], r11
0000000000002a59         mov        byte [rsp+0xe8+var_B8], r8b
0000000000002a5e         mov        byte [rsp+0xe8+var_C0], r10b
0000000000002a63         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000002a68         mov        rcx, qword [rax]
0000000000002a6b         movzx      edx, bl
0000000000002a6e         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000002a74         movzx      r8d, byte [rsp+0xe8+var_B8]
0000000000002a7a         mov        r11, qword [rsp+0xe8+var_B0]
0000000000002a7f         mov        edi, 0x1
0000000000002a84         movzx      eax, word [rcx+rdx*2]
0000000000002a88         and        ax, 0x4000
0000000000002a8c         setne      r12b
0000000000002a90         sete       al
0000000000002a93         and        al, byte [rsp+0xe8+var_DB]

                     loc_2a97:
0000000000002a97         test       al, al                                      ; CODE XREF=sub_2c90+2221
0000000000002a99         jne        loc_3431

0000000000002a9f         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000002aa4         sete       dl
0000000000002aa7         jmp        loc_2778
0000000000002aac         align      16

                     loc_2ab0:
0000000000002ab0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000002ab4         cmp        bl, 0x7e
0000000000002ab7         ja         loc_2a40

0000000000002ab9         lea        rcx, qword [switch_table_5740+552]          ; 0x5968
0000000000002ac0         movzx      edx, bl
0000000000002ac3         movsxd     rax, dword [rcx+rdx*4]
0000000000002ac7         add        rax, rcx
0000000000002aca         jmp        rax
                        ; endp
0000000000002acc         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_2ad0:
0000000000002ad0         xor        r10d, r10d
0000000000002ad3         cmp        byte [rsp+arg_5], 0x0
0000000000002ad8         jne        loc_28ce

0000000000002ade         nop

                     loc_2ae0:
0000000000002ae0         mov        edx, 0x5c                                   ; CODE XREF=sub_2840+136, sub_2840+147
0000000000002ae5         mov        ebx, 0x5c
0000000000002aea         jmp        sub_2840+68
                        ; endp
0000000000002aef         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2af0:
0000000000002af0         mov        edx, 0xc
0000000000002af5         xor        r10d, r10d
0000000000002af8         mov        ebx, 0x66
0000000000002afd         jmp        sub_2840+68
                        ; endp
0000000000002b02         nop        word [rax+rax]
0000000000002b08         mov        edx, 0xa
0000000000002b0d         xor        r10d, r10d
0000000000002b10         mov        ebx, 0x6e
0000000000002b15         jmp        sub_2840+50
0000000000002b1a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2b20:
0000000000002b20         mov        ebx, 0x61
0000000000002b25         jmp        sub_2840+176
                        ; endp
0000000000002b2a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2b30:
0000000000002b30         xor        r10d, r10d
                        ; endp

                     loc_2b33:
0000000000002b33         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2960+5
0000000000002b38         sete       dl
0000000000002b3b         cmp        byte [rsp+arg_7], 0x0
0000000000002b40         jne        loc_36da

0000000000002b46         mov        eax, r8d
0000000000002b49         mov        rcx, r15
0000000000002b4c         xor        eax, 0x1
0000000000002b4f         and        al, dl
0000000000002b51         je         loc_2b80

0000000000002b53         cmp        r13, r15
0000000000002b56         jbe        loc_2b5d

0000000000002b58         mov        byte [r14+r15], 0x27

                     loc_2b5d:
0000000000002b5d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_2b30+38
0000000000002b61         cmp        r13, rcx
0000000000002b64         jbe        loc_2b6c

0000000000002b66         mov        byte [r14+r15+1], 0x24

                     loc_2b6c:
0000000000002b6c         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_2b30+52
0000000000002b70         cmp        r13, rcx
0000000000002b73         ja         loc_31a9

                     loc_2b79:
0000000000002b79         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_2c90+1311
0000000000002b7d         mov        r8d, eax

                     loc_2b80:
0000000000002b80         cmp        r13, rcx                                    ; CODE XREF=sub_2b30+33
0000000000002b83         jbe        loc_2b8a

0000000000002b85         mov        byte [r14+rcx], 0x5c

                     loc_2b8a:
0000000000002b8a         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2b30+83
0000000000002b8f         lea        r15, qword [rcx+1]
0000000000002b93         je         loc_3199

0000000000002b99         lea        rax, qword [rbp+1]
0000000000002b9d         cmp        rax, r11
0000000000002ba0         jae        loc_2bbb

0000000000002ba2         mov        rax, qword [rsp+arg_8]
0000000000002ba7         movzx      eax, byte [rax+rbp+1]
0000000000002bac         mov        byte [rsp+arg_20], al
0000000000002bb0         sub        eax, 0x30
0000000000002bb3         cmp        al, 0x9
0000000000002bb5         jbe        loc_33e9

                     loc_2bbb:
0000000000002bbb         mov        eax, r12d                                   ; CODE XREF=sub_2b30+112
0000000000002bbe         mov        ebx, 0x30
0000000000002bc3         xor        r12d, r12d
0000000000002bc6         jmp        sub_2740+56
                        ; endp
0000000000002bcb         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_2bd0:
0000000000002bd0         cmp        dword [rsp+arg_0], 0x2
0000000000002bd5         mov        r12d, r10d
0000000000002bd8         sete       dl
0000000000002bdb         xor        r10d, r10d
0000000000002bde         xor        eax, eax
0000000000002be0         jmp        sub_2740+56
                        ; endp
0000000000002be5         nop        dword [rax]
0000000000002be8         cmp        dword [rsp+8], 0x2
0000000000002bed         sete       dl
0000000000002bf0         xor        r10d, r10d
0000000000002bf3         jmp        sub_29b0+8
0000000000002bf8         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2c00:
0000000000002c00         cmp        dword [rsp+8], 0x2
0000000000002c05         sete       dl
0000000000002c08         xor        r10d, r10d
0000000000002c0b         xor        r12d, r12d
0000000000002c0e         jmp        sub_29b0+17
                        ; endp
0000000000002c13         nop        dword [rax+rax]
0000000000002c18         cmp        dword [rsp+8], 0x2
0000000000002c1d         mov        r12d, r10d
0000000000002c20         mov        ebx, 0x20
0000000000002c25         sete       dl
0000000000002c28         xor        r10d, r10d
0000000000002c2b         jmp        sub_29b0+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2c30:
0000000000002c30         mov        edx, 0xd
0000000000002c35         xor        r10d, r10d
0000000000002c38         mov        ebx, 0x72
0000000000002c3d         jmp        sub_2840+50
                        ; endp
0000000000002c42         nop        word [rax+rax]
0000000000002c48         mov        ebx, 0x76
0000000000002c4d         jmp        sub_2840+176
0000000000002c52         nop        word [rax+rax]
0000000000002c58         mov        edx, 0x9
0000000000002c5d         xor        r10d, r10d
0000000000002c60         mov        ebx, 0x74
0000000000002c65         jmp        sub_2840+50
0000000000002c6a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2c70:
0000000000002c70         mov        ebx, 0x62
0000000000002c75         jmp        sub_2840+176
                        ; endp
0000000000002c7a         nop        word [rax+rax]

                     loc_2c80:
0000000000002c80         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000002c83         jmp        loc_2720
0000000000002c88         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_2c90:
0000000000002c90         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2840+125
0000000000002c95         jne        sub_3600                                    ; sub_3600
                        ; endp

                     loc_2c9b:
0000000000002c9b         add        rbp, 0x1                                    ; CODE XREF=sub_2840+159
0000000000002c9f         mov        eax, r8d
0000000000002ca2         xor        r12d, r12d
0000000000002ca5         mov        ebx, 0x5c
0000000000002caa         jmp        sub_2740+124
                        ; endp
0000000000002caf         align      16

                     loc_2cb0:
0000000000002cb0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000002cb5         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000002cba         mov        r12d, r8d
0000000000002cbd         mov        rbp, r11
0000000000002cc0         sete       dl
0000000000002cc3         mov        eax, ebx
0000000000002cc5         test       r15, r15
0000000000002cc8         sete       cl
0000000000002ccb         and        eax, edx
0000000000002ccd         and        al, cl
0000000000002ccf         jne        loc_3736

0000000000002cd5         mov        eax, ebx
0000000000002cd7         xor        eax, 0x1
0000000000002cda         and        dl, al
0000000000002cdc         je         loc_364c

0000000000002ce2         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000002ce7         je         loc_364a

0000000000002ced         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000002cf2         jne        loc_36ed

0000000000002cf8         test       r13, r13
0000000000002cfb         sete       al
0000000000002cfe         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000002d04         setne      dl
0000000000002d07         and        al, dl
0000000000002d09         je         loc_372c

0000000000002d0f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_2d14:
0000000000002d14         lea        rbx, qword [aLibs+29]                       ; 0x56d5, CODE XREF=sub_3600+365
0000000000002d1b         mov        byte [r14], 0x27
0000000000002d1f         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000002d27         mov        r15d, 0x1
0000000000002d2d         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000002d36         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000002d3b         mov        qword [rsp+0xe8+var_A0], rbx
0000000000002d40         mov        byte [rsp+0xe8+var_6C], al
0000000000002d44         jmp        loc_2623
0000000000002d49         align      16

                     loc_2d50:
0000000000002d50         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2840+8
0000000000002d55         jne        sub_3600                                    ; sub_3600

0000000000002d5b         test       r13, r13
0000000000002d5e         je         loc_3160

0000000000002d64         xor        edx, edx
0000000000002d66         cmp        qword [rsp+arg_48], 0x0
0000000000002d6c         jne        loc_3160

                     loc_2d72:
0000000000002d72         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_2c90+1284, sub_3600+378
0000000000002d77         add        r15, 0x3
0000000000002d7b         xor        eax, eax
0000000000002d7d         mov        byte [rsp+arg_74], r12b
0000000000002d82         xor        r8d, r8d
0000000000002d85         mov        r13, rdx
0000000000002d88         mov        ebx, 0x27
0000000000002d8d         jmp        sub_2740+105
                        ; endp
0000000000002d92         align      8

                     loc_2d98:
0000000000002d98         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_2810+19
0000000000002d9d         je         loc_2dc0

0000000000002d9f         lea        rcx, qword [rbp+2]
0000000000002da3         cmp        rcx, r11
0000000000002da6         jae        loc_2dc0

0000000000002da8         mov        rax, qword [rsp+arg_8]
0000000000002dad         cmp        byte [rax+rbp+1], 0x3f
0000000000002db2         je         loc_3542

0000000000002db8         nop        dword [rax+rax]

                     loc_2dc0:
0000000000002dc0         xor        edx, edx                                    ; CODE XREF=sub_2c90+269, sub_2c90+278, sub_2c90+2233, sub_2c90+2253
0000000000002dc2         xor        r12d, r12d
0000000000002dc5         xor        eax, eax
0000000000002dc7         mov        ebx, 0x3f
0000000000002dcc         jmp        sub_2740+56
                        ; endp
0000000000002dd1         align      8

                     loc_2dd8:
0000000000002dd8         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2810+10
0000000000002ddd         jne        sub_3600                                    ; sub_3600

0000000000002de3         xor        r12d, r12d
0000000000002de6         xor        eax, eax
0000000000002de8         mov        ebx, 0x3f
0000000000002ded         jmp        sub_2740+105
                        ; endp
0000000000002df2         align      8

                     loc_2df8:
0000000000002df8         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_2a30+30
0000000000002e00         cmp        r11, 0xffffffffffffffff
0000000000002e04         mov        qword [rsp+0xe8+var_48], 0x0
0000000000002e10         mov        qword [rsp+0xe8+var_C0], rax
0000000000002e15         jne        loc_2e44

0000000000002e17         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
0000000000002e1c         mov        byte [rsp+0xe8+var_A8], r8b
0000000000002e21         mov        byte [rsp+0xe8+var_B0], r10b
0000000000002e26         mov        qword [rsp+0xe8+var_B8], r9
0000000000002e2b         call       j_strlen                                    ; strlen
0000000000002e30         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000002e36         movzx      r10d, byte [rsp+0xe8+var_B0]
0000000000002e3c         mov        r11, rax
0000000000002e3f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_2e44:
0000000000002e44         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_2c90+389
0000000000002e4c         xor        ecx, ecx
0000000000002e4e         mov        byte [rsp+0xe8+var_6A], bl
0000000000002e52         mov        byte [rsp+0xe8+var_6B], r8b
0000000000002e57         mov        rbx, rcx
0000000000002e5a         mov        qword [rsp+0xe8+var_60], r9
0000000000002e62         mov        qword [rsp+0xe8+var_B0], rax
0000000000002e67         mov        byte [rsp+0xe8+var_69], r10b
0000000000002e6c         mov        qword [rsp+0xe8+var_68], r15
0000000000002e74         mov        qword [rsp+0xe8+var_A8], r14
0000000000002e79         mov        qword [rsp+0xe8+var_78], r13
0000000000002e7e         mov        qword [rsp+0xe8+var_B8], r11

                     loc_2e83:
0000000000002e83         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_2c90+623
0000000000002e88         lea        r14, qword [rbp+rbx]
0000000000002e8d         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000002e92         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000002e97         mov        rdi, qword [rsp+0xe8+var_B0]
0000000000002e9c         lea        r13, qword [rax+r14]
0000000000002ea0         sub        rdx, r14
0000000000002ea3         mov        rsi, r13
0000000000002ea6         call       rpl_mbrtowc                                 ; rpl_mbrtowc
0000000000002eab         test       rax, rax
0000000000002eae         mov        r15, rax
0000000000002eb1         je         loc_2f01

0000000000002eb3         cmp        rax, 0xffffffffffffffff
0000000000002eb7         je         loc_34d5

0000000000002ebd         cmp        rax, 0xfffffffffffffffe
0000000000002ec1         je         loc_3461

0000000000002ec7         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000002ecc         sete       al
0000000000002ecf         and        al, byte [rsp+0xe8+var_D9]
0000000000002ed3         jne        loc_3070

                     loc_2ed9:
0000000000002ed9         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_2c90+996, sub_2c90+1031
0000000000002ee0         call       j_iswprint                                  ; iswprint
0000000000002ee5         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
0000000000002eea         test       eax, eax
0000000000002eec         mov        eax, 0x0
0000000000002ef1         cmove      r12d, eax
0000000000002ef5         add        rbx, r15
0000000000002ef8         call       j_mbsinit                                   ; mbsinit
0000000000002efd         test       eax, eax
0000000000002eff         je         loc_2e83

                     loc_2f01:
0000000000002f01         mov        edx, r12d                                   ; CODE XREF=sub_2c90+545
0000000000002f04         mov        rdi, rbx
0000000000002f07         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000002f0d         xor        edx, 0x1
0000000000002f10         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000002f15         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000002f1b         and        dl, byte [rsp+0xe8+var_DB]
0000000000002f1f         mov        r15, qword [rsp+0xe8+var_68]
0000000000002f27         mov        r14, qword [rsp+0xe8+var_A8]
0000000000002f2c         mov        r13, qword [rsp+0xe8+var_78]
0000000000002f31         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_2f36:
0000000000002f36         cmp        rdi, 0x1                                    ; CODE XREF=sub_2c90+2112, sub_2c90+2168
0000000000002f3a         jbe        loc_353b

                     loc_2f40:
0000000000002f40         mov        rcx, rdi                                    ; CODE XREF=sub_2c90+1961
0000000000002f43         xor        esi, esi
0000000000002f45         movzx      r9d, byte [rsp+0xe8+var_D9]
0000000000002f4b         add        rcx, rbp
0000000000002f4e         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000002f53         jmp        loc_300e
0000000000002f58         align      32

                     loc_2f60:
0000000000002f60         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_2c90+896
0000000000002f65         sete       al
0000000000002f68         test       r9b, r9b
0000000000002f6b         jne        loc_3420

0000000000002f71         mov        esi, r8d
0000000000002f74         xor        esi, 0x1
0000000000002f77         and        al, sil
0000000000002f7a         je         loc_2fab

0000000000002f7c         cmp        r13, r15
0000000000002f7f         jbe        loc_2f86

0000000000002f81         mov        byte [r14+r15], 0x27

                     loc_2f86:
0000000000002f86         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_2c90+751
0000000000002f8a         cmp        r13, rsi
0000000000002f8d         jbe        loc_2f95

0000000000002f8f         mov        byte [r14+r15+1], 0x24

                     loc_2f95:
0000000000002f95         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_2c90+765
0000000000002f99         cmp        r13, rsi
0000000000002f9c         jbe        loc_2fa4

0000000000002f9e         mov        byte [r14+r15+2], 0x27

                     loc_2fa4:
0000000000002fa4         add        r15, 0x3                                    ; CODE XREF=sub_2c90+780
0000000000002fa8         mov        r8d, eax

                     loc_2fab:
0000000000002fab         cmp        r13, r15                                    ; CODE XREF=sub_2c90+746
0000000000002fae         jbe        loc_2fb5

0000000000002fb0         mov        byte [r14+r15], 0x5c

                     loc_2fb5:
0000000000002fb5         lea        rax, qword [r15+1]                          ; CODE XREF=sub_2c90+798
0000000000002fb9         cmp        r13, rax
0000000000002fbc         jbe        loc_2fcb

0000000000002fbe         mov        eax, ebx
0000000000002fc0         shr        al, 0x6
0000000000002fc3         add        eax, 0x30
0000000000002fc6         mov        byte [r14+r15+1], al

                     loc_2fcb:
0000000000002fcb         lea        rax, qword [r15+2]                          ; CODE XREF=sub_2c90+812
0000000000002fcf         cmp        r13, rax
0000000000002fd2         jbe        loc_2fe4

0000000000002fd4         mov        eax, ebx
0000000000002fd6         shr        al, 0x3
0000000000002fd9         and        eax, 0x7
0000000000002fdc         add        eax, 0x30
0000000000002fdf         mov        byte [r14+r15+2], al

                     loc_2fe4:
0000000000002fe4         and        ebx, 0x7                                    ; CODE XREF=sub_2c90+834
0000000000002fe7         add        rbp, 0x1
0000000000002feb         add        r15, 0x3
0000000000002fef         add        ebx, 0x30
0000000000002ff2         cmp        rbp, rcx
0000000000002ff5         jae        loc_27e0

0000000000002ffb         mov        esi, edx

                     loc_2ffd:
0000000000002ffd         cmp        r13, r15                                    ; CODE XREF=sub_2c90+985, sub_2c90+1969
0000000000003000         jbe        loc_3006

0000000000003002         mov        byte [r14+r15], bl

                     loc_3006:
0000000000003006         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_2c90+880
000000000000300a         add        r15, 0x1

                     loc_300e:
000000000000300e         test       dl, dl                                      ; CODE XREF=sub_2c90+707
0000000000003010         jne        loc_2f60

0000000000003016         mov        eax, esi
0000000000003018         xor        eax, 0x1
000000000000301b         and        eax, r8d
000000000000301e         test       r10b, r10b
0000000000003021         je         loc_3031

0000000000003023         cmp        r13, r15
0000000000003026         jbe        loc_302d

0000000000003028         mov        byte [r14+r15], 0x5c

                     loc_302d:
000000000000302d         add        r15, 0x1                                    ; CODE XREF=sub_2c90+918

                     loc_3031:
0000000000003031         add        rbp, 0x1                                    ; CODE XREF=sub_2c90+913
0000000000003035         cmp        rbp, rcx
0000000000003038         jae        loc_27bc

000000000000303e         test       al, al
0000000000003040         je         loc_343e

0000000000003046         cmp        r13, r15
0000000000003049         jbe        loc_3050

000000000000304b         mov        byte [r14+r15], 0x27

                     loc_3050:
0000000000003050         lea        rax, qword [r15+1]                          ; CODE XREF=sub_2c90+953
0000000000003054         cmp        r13, rax
0000000000003057         jbe        loc_305f

0000000000003059         mov        byte [r14+r15+1], 0x27

                     loc_305f:
000000000000305f         add        r15, 0x2                                    ; CODE XREF=sub_2c90+967
0000000000003063         xor        r10d, r10d
0000000000003066         xor        r8d, r8d
0000000000003069         jmp        loc_2ffd
000000000000306b         align      16

                     loc_3070:
0000000000003070         cmp        r15, 0x1                                    ; CODE XREF=sub_2c90+579
0000000000003074         je         loc_2ed9

000000000000307a         mov        rdi, qword [rsp+0xe8+var_D8]
000000000000307f         lea        rcx, qword [rdi+r15]
0000000000003083         lea        rdx, qword [rdi+r14+1]
0000000000003088         lea        r8, qword [rcx+r14]
000000000000308c         jmp        loc_309d
000000000000308e         align      16

                     loc_3090:
0000000000003090         add        rdx, 0x1                                    ; CODE XREF=sub_2c90+1046, sub_2c90+1072
0000000000003094         cmp        r8, rdx
0000000000003097         je         loc_2ed9

                     loc_309d:
000000000000309d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_2c90+1020
00000000000030a0         sub        ecx, 0x5b
00000000000030a3         cmp        cl, 0x21
00000000000030a6         ja         loc_3090

00000000000030a8         mov        esi, 0x1
00000000000030ad         shl        rsi, cl
00000000000030b0         mov        rcx, rsi
00000000000030b3         movabs     rsi, 0x20000002b
00000000000030bd         test       rcx, rsi
00000000000030c0         je         loc_3090

00000000000030c2         mov        r14, qword [rsp+0xe8+var_A8]
00000000000030c7         mov        r13, qword [rsp+0xe8+var_78]
00000000000030cc         mov        rbp, qword [rsp+0xe8+var_B8]
00000000000030d1         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_30d9:
00000000000030d9         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_2c90+1227, sub_2c90+1948, sub_3600+169, sub_3600+318
00000000000030de         je         loc_30f0

00000000000030e0         test       al, al
00000000000030e2         mov        eax, 0x4
00000000000030e7         cmove      eax, dword [rsp+0xe8+var_E0]
00000000000030ec         mov        dword [rsp+0xe8+var_E0], eax

                     loc_30f0:
00000000000030f0         sub        rsp, 0x8                                    ; CODE XREF=sub_2c90+1102
00000000000030f4         mov        rcx, rbp
00000000000030f7         mov        rsi, r13
00000000000030fa         push       qword [rsp+0xf0+var_88]
00000000000030fe         push       qword [rsp+0xf8+var_80]
0000000000003102         mov        rdi, r14
0000000000003105         push       0x0
0000000000003107         mov        r9d, dword [rsp+0x108+var_70]
000000000000310f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000003114         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003119         and        r9d, 0xfffffffd
000000000000311d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003122         add        rsp, 0x20
0000000000003126         mov        r15, rax

                     loc_3129:
0000000000003129         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_3600+133, sub_3600+144, sub_3600+295
0000000000003131         xor        rbx, qword [fs:0x28]
000000000000313a         mov        rax, r15
000000000000313d         jne        loc_3743

0000000000003143         add        rsp, 0xb8
000000000000314a         pop        rbx
000000000000314b         pop        rbp
000000000000314c         pop        r12
000000000000314e         pop        r13
0000000000003150         pop        r14
0000000000003152         pop        r15
0000000000003154         ret
                        ; endp
0000000000003155         align      8

                     loc_3158:
0000000000003158         mov        rbp, r11                                    ; CODE XREF=sub_2840+194
000000000000315b         jmp        loc_30d9

                     loc_3160:
0000000000003160         cmp        r13, r15                                    ; CODE XREF=sub_2c90+206, sub_2c90+220
0000000000003163         jbe        loc_316a

0000000000003165         mov        byte [r14+r15], 0x27

                     loc_316a:
000000000000316a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_2c90+1235
000000000000316e         cmp        r13, rax
0000000000003171         jbe        loc_3179

0000000000003173         mov        byte [r14+r15+1], 0x5c

                     loc_3179:
0000000000003179         lea        rax, qword [r15+2]                          ; CODE XREF=sub_2c90+1249
000000000000317d         cmp        r13, rax
0000000000003180         jbe        loc_3772

0000000000003186         mov        rdx, r13
0000000000003189         mov        byte [r14+r15+2], 0x27
000000000000318f         mov        r13, qword [rsp+arg_48]
0000000000003194         jmp        loc_2d72

                     loc_3199:
0000000000003199         mov        eax, r12d                                   ; CODE XREF=sub_2b30+99
000000000000319c         mov        ebx, 0x30
00000000000031a1         xor        r12d, r12d
00000000000031a4         jmp        sub_2740+105
                        ; endp

                     loc_31a9:
00000000000031a9         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_2b30+67
00000000000031af         jmp        loc_2b79

                     loc_31b4:
00000000000031b4         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
00000000000031b6         jne        loc_25e3

00000000000031bc         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_31c1:
00000000000031c1         test       r13, r13                                    ; CODE XREF=sub_3600+333
00000000000031c4         jne        loc_375a

00000000000031ca         lea        rax, qword [aLibs+29]                       ; 0x56d5
00000000000031d1         mov        qword [rsp+0xe8+var_98], 0x0
00000000000031da         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000031df         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000031e4         xor        r12d, r12d
00000000000031e7         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000031ec         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000031f5         mov        qword [rsp+0xe8+var_A0], rax
00000000000031fa         mov        r15d, 0x1
0000000000003200         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003208         jmp        loc_2623
000000000000320d         align      16

                     loc_3210:
0000000000003210         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000003212         jne        loc_360d

0000000000003218         test       r13, r13
000000000000321b         je         loc_3446

0000000000003221         mov        byte [r14], 0x22
0000000000003225         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000322a         xor        r12d, r12d
000000000000322d         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003232         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_323b:
000000000000323b         lea        rax, qword [aLibs+27]                       ; 0x56d3, CODE XREF=sub_2c90+1996
0000000000003242         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003247         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000324c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003255         mov        r15d, 0x1
000000000000325b         mov        qword [rsp+0xe8+var_A0], rax
0000000000003260         jmp        loc_2623

                     loc_3265:
0000000000003265         lea        rax, qword [aLibs+27]                       ; case 6, 0x56d3, CODE XREF=quotearg_buffer_restyled+145
000000000000326c         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003271         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003276         xor        r12d, r12d
0000000000003279         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003282         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003287         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000328c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003295         xor        r15d, r15d
0000000000003298         mov        qword [rsp+0xe8+var_A0], rax
000000000000329d         mov        dword [rsp+0xe8+var_E0], 0x5
00000000000032a5         jmp        loc_2623

                     loc_32aa:
00000000000032aa         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
00000000000032af         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000032b4         xor        r12d, r12d
00000000000032b7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000032c0         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000032c5         xor        r15d, r15d
00000000000032c8         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000032cd         mov        qword [rsp+0xe8+var_D0], 0x0
00000000000032d6         mov        qword [rsp+0xe8+var_A0], 0x0
00000000000032df         jmp        loc_2623

                     loc_32e4:
00000000000032e4         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
00000000000032e9         je         loc_3341

00000000000032eb         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x56d7
00000000000032f2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000032f4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000032f9         call       j_dcgettext                                 ; dcgettext
00000000000032fe         mov        rcx, rax
0000000000003301         mov        qword [rsp+0xe8+var_80], rax
0000000000003306         lea        rax, qword [aLibs+31]                       ; 0x56d7
000000000000330d         cmp        rcx, rax
0000000000003310         je         loc_36ae

                     loc_3316:
0000000000003316         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x56d5, CODE XREF=sub_3600+191
000000000000331d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000331f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003324         call       j_dcgettext                                 ; dcgettext
0000000000003329         mov        rcx, rax
000000000000332c         mov        qword [rsp+0xe8+var_88], rax
0000000000003331         lea        rax, qword [aLibs+29]                       ; 0x56d5
0000000000003338         cmp        rcx, rax
000000000000333b         je         loc_36c4

                     loc_3341:
0000000000003341         xor        r15d, r15d                                  ; CODE XREF=sub_2c90+1625, sub_3600+213
0000000000003344         test       ebx, ebx
0000000000003346         je         loc_350d

                     loc_334c:
000000000000334c         test       ebx, ebx                                    ; CODE XREF=sub_2c90+2183, sub_2c90+2214
000000000000334e         mov        rbx, qword [rsp+0xe8+var_88]
0000000000003353         setne      byte [rsp+0xe8+var_D9]
0000000000003358         xor        r12d, r12d
000000000000335b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
000000000000335e         call       j_strlen                                    ; strlen
0000000000003363         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003368         mov        qword [rsp+0xe8+var_D0], rax
000000000000336d         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003372         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003377         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003380         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003385         jmp        loc_2623

                     loc_338a:
000000000000338a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
000000000000338f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003394         xor        r12d, r12d
0000000000003397         mov        qword [rsp+0xe8+var_98], 0x0
00000000000033a0         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000033a5         xor        r15d, r15d
00000000000033a8         mov        byte [rsp+0xe8+var_DB], 0x0
00000000000033ad         mov        qword [rsp+0xe8+var_D0], 0x0
00000000000033b6         mov        qword [rsp+0xe8+var_A0], 0x0
00000000000033bf         jmp        loc_2623

                     loc_33c4:
00000000000033c4         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
00000000000033c9         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000033ce         xor        r12d, r12d
00000000000033d1         mov        qword [rsp+0xe8+var_98], 0x0
00000000000033da         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000033df         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000033e4         jmp        loc_2603

                     loc_33e9:
00000000000033e9         cmp        r13, r15                                    ; CODE XREF=sub_2b30+133
00000000000033ec         jbe        loc_33f3

00000000000033ee         mov        byte [r14+r15], 0x30

                     loc_33f3:
00000000000033f3         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_2c90+1884
00000000000033f7         cmp        r13, rax
00000000000033fa         jbe        loc_3402

00000000000033fc         mov        byte [r14+rcx+2], 0x30

                     loc_3402:
0000000000003402         mov        eax, r12d                                   ; CODE XREF=sub_2c90+1898
0000000000003405         lea        r15, qword [rcx+3]
0000000000003409         xor        r12d, r12d
000000000000340c         mov        ebx, 0x30
0000000000003411         jmp        sub_2740+56
                        ; endp
0000000000003416         align      32

                     loc_3420:
0000000000003420         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_2c90+731
0000000000003425         mov        rbp, r11
0000000000003428         mov        byte [rsp+0xe8+var_DB], bl
000000000000342c         jmp        loc_30d9

                     loc_3431:
0000000000003431         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_2a30+105
0000000000003436         xor        r12d, r12d
0000000000003439         jmp        loc_2f40

                     loc_343e:
000000000000343e         xor        r10d, r10d                                  ; CODE XREF=sub_2c90+944
0000000000003441         jmp        loc_2ffd

                     loc_3446:
0000000000003446         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_2c90+1419
000000000000344f         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003454         xor        r12d, r12d
0000000000003457         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000345c         jmp        loc_323b

                     loc_3461:
0000000000003461         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_2c90+561
0000000000003466         mov        rsi, r14
0000000000003469         mov        rcx, r13
000000000000346c         mov        rax, rbx
000000000000346f         mov        rdi, rbx
0000000000003472         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003478         movzx      ebx, byte [rsp+0xe8+var_6A]
000000000000347d         mov        r9, qword [rsp+0xe8+var_60]
0000000000003485         cmp        rsi, r11
0000000000003488         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000348e         mov        r15, qword [rsp+0xe8+var_68]
0000000000003496         mov        r14, qword [rsp+0xe8+var_A8]
000000000000349b         mov        r13, qword [rsp+0xe8+var_78]
00000000000034a0         jae        loc_34c8

00000000000034a2         cmp        byte [rcx], 0x0
00000000000034a5         jne        loc_34b7

00000000000034a7         jmp        loc_34c8
00000000000034a9         align      16

                     loc_34b0:
00000000000034b0         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_2c90+2099
00000000000034b5         je         loc_34c5

                     loc_34b7:
00000000000034b7         add        rax, 0x1                                    ; CODE XREF=sub_2c90+2069
00000000000034bb         lea        rdx, qword [rbp+rax]
00000000000034c0         cmp        r11, rdx
00000000000034c3         ja         loc_34b0

                     loc_34c5:
00000000000034c5         mov        rdi, rax                                    ; CODE XREF=sub_2c90+2085

                     loc_34c8:
00000000000034c8         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_2c90+2064, sub_2c90+2071
00000000000034cd         xor        r12d, r12d
00000000000034d0         jmp        loc_2f36

                     loc_34d5:
00000000000034d5         mov        rdi, rbx                                    ; CODE XREF=sub_2c90+551
00000000000034d8         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000034de         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000034e3         movzx      r10d, byte [rsp+0xe8+var_69]
00000000000034e9         mov        r15, qword [rsp+0xe8+var_68]
00000000000034f1         xor        r12d, r12d
00000000000034f4         mov        r14, qword [rsp+0xe8+var_A8]
00000000000034f9         mov        r13, qword [rsp+0xe8+var_78]
00000000000034fe         mov        r11, qword [rsp+0xe8+var_B8]
0000000000003503         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000003508         jmp        loc_2f36

                     loc_350d:
000000000000350d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_2c90+1718
0000000000003512         movzx      eax, byte [rdx]
0000000000003515         test       al, al
0000000000003517         je         loc_334c

000000000000351d         nop        dword [rax]

                     loc_3520:
0000000000003520         cmp        r13, r15                                    ; CODE XREF=sub_2c90+2212
0000000000003523         jbe        loc_3529

0000000000003525         mov        byte [r14+r15], al

                     loc_3529:
0000000000003529         add        r15, 0x1                                    ; CODE XREF=sub_2c90+2195
000000000000352d         movzx      eax, byte [rdx+r15]
0000000000003532         test       al, al
0000000000003534         jne        loc_3520

0000000000003536         jmp        loc_334c

                     loc_353b:
000000000000353b         mov        eax, edx                                    ; CODE XREF=sub_2c90+682
000000000000353d         jmp        loc_2a97

                     loc_3542:
0000000000003542         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_2c90+290
0000000000003546         cmp        bl, 0x3e
0000000000003549         ja         loc_2dc0

000000000000354f         movabs     rax, 0x7000a38200000000
0000000000003559         bt         rax, rbx
000000000000355d         jae        loc_2dc0

0000000000003563         cmp        byte [rsp+arg_7], 0x0
0000000000003568         jne        loc_3752

000000000000356e         cmp        r13, r15
0000000000003571         jbe        loc_3578

0000000000003573         mov        byte [r14+r15], 0x3f

                     loc_3578:
0000000000003578         lea        rax, qword [r15+1]                          ; CODE XREF=sub_2c90+2273
000000000000357c         cmp        r13, rax
000000000000357f         jbe        loc_3587

0000000000003581         mov        byte [r14+r15+1], 0x22

                     loc_3587:
0000000000003587         lea        rax, qword [r15+2]                          ; CODE XREF=sub_2c90+2287
000000000000358b         cmp        r13, rax
000000000000358e         jbe        loc_3596

0000000000003590         mov        byte [r14+r15+2], 0x22

                     loc_3596:
0000000000003596         lea        rax, qword [r15+3]                          ; CODE XREF=sub_2c90+2302
000000000000359a         cmp        r13, rax
000000000000359d         jbe        loc_35a5

000000000000359f         mov        byte [r14+r15+3], 0x3f

                     loc_35a5:
00000000000035a5         add        r15, 0x4                                    ; CODE XREF=sub_2c90+2317
00000000000035a9         xor        edx, edx
00000000000035ab         xor        r12d, r12d
00000000000035ae         xor        eax, eax
00000000000035b0         mov        rbp, rcx
00000000000035b3         jmp        sub_2740+56
                        ; endp

                     loc_35b8:
00000000000035b8         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
00000000000035ba         je         loc_3748

00000000000035c0         lea        rax, qword [aLibs+29]                       ; 0x56d5
00000000000035c7         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000035cc         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000035d1         xor        r12d, r12d
00000000000035d4         mov        qword [rsp+0xe8+var_98], 0x0
00000000000035dd         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000035e2         mov        byte [rsp+0xe8+var_DB], 0x0
00000000000035e7         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000035f0         xor        r15d, r15d
00000000000035f3         mov        qword [rsp+0xe8+var_A0], rax
00000000000035f8         jmp        loc_2623
00000000000035fd         align      512


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_3600:
0000000000003600         mov        rbp, r11
0000000000003603         movzx      eax, byte [rsp+arg_7]
0000000000003608         jmp        sub_2c90+1097
                        ; endp

                     loc_360d:
000000000000360d         lea        rax, qword [aLibs+27]                       ; 0x56d3, CODE XREF=sub_2c90+1410
0000000000003614         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003619         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000361e         xor        r12d, r12d
0000000000003621         mov        qword [rsp+0xe8+var_98], 0x0
000000000000362a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000362f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003634         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000363d         xor        r15d, r15d
0000000000003640         mov        qword [rsp+0xe8+var_A0], rax
0000000000003645         jmp        loc_2623

                     loc_364a:
000000000000364a         mov        eax, edx                                    ; CODE XREF=sub_2c90+87

                     loc_364c:
000000000000364c         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_2c90+76, sub_3600+305
0000000000003651         test       rbx, rbx
0000000000003654         je         loc_3682

0000000000003656         test       al, al
0000000000003658         je         loc_3682

000000000000365a         movzx      ecx, byte [rbx]
000000000000365d         mov        rax, rbx
0000000000003660         test       cl, cl
0000000000003662         je         loc_3682

0000000000003664         mov        rdx, r15
0000000000003667         sub        rax, r15

                     loc_366a:
000000000000366a         cmp        r13, rdx                                    ; CODE XREF=sub_3600+125
000000000000366d         jbe        loc_3673

000000000000366f         mov        byte [r14+rdx], cl

                     loc_3673:
0000000000003673         add        rdx, 0x1                                    ; CODE XREF=sub_3600+109
0000000000003677         movzx      ecx, byte [rax+rdx]
000000000000367b         test       cl, cl
000000000000367d         jne        loc_366a

000000000000367f         mov        r15, rdx

                     loc_3682:
0000000000003682         cmp        r13, r15                                    ; CODE XREF=sub_3600+84, sub_3600+88, sub_3600+98
0000000000003685         jbe        loc_3129

000000000000368b         mov        byte [r14+r15], 0x0
0000000000003690         jmp        loc_3129

                     loc_3695:
0000000000003695         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
000000000000369a         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000369f         mov        rbp, r11
00000000000036a2         sete       al
00000000000036a5         mov        byte [rsp+0xe8+var_DB], bl
00000000000036a9         jmp        loc_30d9

                     loc_36ae:
00000000000036ae         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_2c90+1664
00000000000036b2         mov        rdi, rcx
00000000000036b5         call       gettext_quote.part.1                        ; gettext_quote.part.1
00000000000036ba         mov        qword [rsp+0xe8+var_80], rax
00000000000036bf         jmp        loc_3316

                     loc_36c4:
00000000000036c4         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_2c90+1707
00000000000036c8         mov        rdi, rcx
00000000000036cb         call       gettext_quote.part.1                        ; gettext_quote.part.1
00000000000036d0         mov        qword [rsp+0xe8+var_88], rax
00000000000036d5         jmp        loc_3341

                     loc_36da:
00000000000036da         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_2b30+16
00000000000036df         mov        rbp, r11
00000000000036e2         mov        eax, edx
00000000000036e4         mov        byte [rsp+arg_5], bl
00000000000036e8         jmp        sub_2c90+1097
                        ; endp

                     loc_36ed:
00000000000036ed         sub        rsp, 0x8                                    ; CODE XREF=sub_2c90+98
00000000000036f1         mov        r8d, 0x5
00000000000036f7         mov        rcx, r11
00000000000036fa         push       qword [rsp+0xf0+var_88]
00000000000036fe         push       qword [rsp+0xf8+var_80]
0000000000003702         mov        rdi, r14
0000000000003705         push       qword [rsp+0x100+var_C8]
0000000000003709         mov        r9d, dword [rsp+0x108+var_70]
0000000000003711         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003716         mov        rsi, qword [rsp+0x108+var_98]
000000000000371b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003720         add        rsp, 0x20
0000000000003724         mov        r15, rax
0000000000003727         jmp        loc_3129

                     loc_372c:
000000000000372c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_2c90+121
0000000000003731         jmp        loc_364c

                     loc_3736:
0000000000003736         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_2c90+63
000000000000373e         jmp        loc_30d9

                     loc_3743:
0000000000003743         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_2c90+1197
                        ; endp

                     loc_3748:
0000000000003748         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_2c90+2346
000000000000374d         jmp        loc_31c1

                     loc_3752:
0000000000003752         mov        rbp, r11                                    ; CODE XREF=sub_2c90+2264
0000000000003755         jmp        sub_2c90+1120
                        ; endp

                     loc_375a:
000000000000375a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_2c90+1332
000000000000375f         xor        eax, eax
0000000000003761         xor        r12d, r12d
0000000000003764         mov        qword [rsp+0xe8+var_98], 0x0
000000000000376d         jmp        loc_2d14

                     loc_3772:
0000000000003772         mov        rdx, r13                                    ; CODE XREF=sub_2c90+1264
0000000000003775         mov        r13, qword [rsp+arg_48]
000000000000377a         jmp        loc_2d72

                     loc_377f:
000000000000377f         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000003784         align      16                                          ; End of unwind block (FDE at 0x6510)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000003790         push       r15                                         ; Begin of unwind block (FDE at 0x6588), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000003792         push       r14
0000000000003794         movsxd     r15, edi
0000000000003797         push       r13
0000000000003799         push       r12
000000000000379b         mov        r14, rdx
000000000000379e         push       rbp
000000000000379f         push       rbx
00000000000037a0         mov        rbp, rcx
00000000000037a3         sub        rsp, 0x28
00000000000037a7         mov        qword [rsp+0x58+var_50], rsi
00000000000037ac         call       j___errno_location                          ; __errno_location
00000000000037b1         mov        r13, rax
00000000000037b4         mov        eax, dword [rax]
00000000000037b6         test       r15d, r15d
00000000000037b9         mov        rbx, qword [slotvec]                        ; slotvec
00000000000037c0         mov        dword [rsp+0x58+var_40], eax
00000000000037c4         js         loc_3931

00000000000037ca         cmp        dword [nslots], r15d                        ; nslots
00000000000037d1         jg         loc_3835

00000000000037d3         cmp        r15d, 0x7fffffff
00000000000037da         je         loc_3936

00000000000037e0         lea        r12d, dword [r15+1]
00000000000037e4         lea        rax, qword [slotvec0]                       ; slotvec0
00000000000037eb         movsxd     rsi, r12d
00000000000037ee         shl        rsi, 0x4
00000000000037f2         cmp        rbx, rax
00000000000037f5         je         loc_3910

00000000000037fb         mov        rdi, rbx                                    ; argument #1 for method xrealloc
00000000000037fe         call       xrealloc                                    ; xrealloc
0000000000003803         mov        rbx, rax
0000000000003806         mov        qword [slotvec], rax                        ; slotvec

                     loc_380d:
000000000000380d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000003814         mov        edx, r12d
0000000000003817         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000003819         sub        edx, edi
000000000000381b         shl        rdi, 0x4
000000000000381f         movsxd     rdx, edx
0000000000003822         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000003825         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000003829         call       j_memset                                    ; memset
000000000000382e         mov        dword [nslots], r12d                        ; nslots

                     loc_3835:
0000000000003835         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000003838         shl        r15, 0x4
000000000000383c         sub        rsp, 0x8
0000000000003840         add        rbx, r15
0000000000003843         lea        r15, qword [rbp+8]
0000000000003847         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
000000000000384b         mov        r11, qword [rbx]
000000000000384e         mov        r12, qword [rbx+8]
0000000000003852         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000003855         or         eax, 0x1
0000000000003858         mov        dword [rsp+0x60+var_3C], eax
000000000000385c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000385f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000003862         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000003865         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000003867         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
000000000000386a         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
000000000000386f         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000003872         mov        qword [rsp+0x78+var_48], r11
0000000000003877         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000387c         add        rsp, 0x20
0000000000003880         mov        r11, qword [rsp+0x58+var_48]
0000000000003885         cmp        r11, rax
0000000000003888         ja         loc_38f1

000000000000388a         lea        rsi, qword [rax+1]
000000000000388e         lea        rax, qword [slot0]                          ; slot0
0000000000003895         cmp        r12, rax
0000000000003898         mov        qword [rbx], rsi
000000000000389b         je         loc_38af

000000000000389d         mov        rdi, r12                                    ; argument "__ptr" for method j_free
00000000000038a0         mov        qword [rsp+0x58+var_48], rsi
00000000000038a5         call       j_free                                      ; free
00000000000038aa         mov        rsi, qword [rsp+0x58+var_48]

                     loc_38af:
00000000000038af         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
00000000000038b2         mov        qword [rsp+0x58+var_48], rsi
00000000000038b7         call       xmalloc                                     ; xmalloc
00000000000038bc         sub        rsp, 0x8
00000000000038c0         mov        qword [rbx+8], rax
00000000000038c4         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
00000000000038c8         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
00000000000038cb         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
00000000000038ce         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
00000000000038d1         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
00000000000038d3         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
00000000000038d8         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
00000000000038db         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
00000000000038e0         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
00000000000038e5         mov        r12, rax
00000000000038e8         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000038ed         add        rsp, 0x20

                     loc_38f1:
00000000000038f1         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
00000000000038f5         mov        dword [r13], eax
00000000000038f9         add        rsp, 0x28
00000000000038fd         mov        rax, r12
0000000000003900         pop        rbx
0000000000003901         pop        rbp
0000000000003902         pop        r12
0000000000003904         pop        r13
0000000000003906         pop        r14
0000000000003908         pop        r15
000000000000390a         ret
                        ; endp
000000000000390b         align      16

                     loc_3910:
0000000000003910         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000003912         call       xrealloc                                    ; xrealloc
0000000000003917         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
000000000000391f         mov        rbx, rax
0000000000003922         mov        qword [slotvec], rax                        ; slotvec
0000000000003929         movups     xmmword [rax], xmm0
000000000000392c         jmp        loc_380d

                     loc_3931:
0000000000003931         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_3936:
0000000000003936         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_393b:
000000000000393b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x6588)
                     clone_quoting_options:
0000000000003940         push       r12                                         ; Begin of unwind block (FDE at 0x65f4)
0000000000003942         push       rbp
0000000000003943         push       rbx
0000000000003944         mov        rbx, rdi
0000000000003947         call       j___errno_location                          ; __errno_location
000000000000394c         mov        r12d, dword [rax]
000000000000394f         mov        rbp, rax
0000000000003952         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000003959         test       rbx, rbx
000000000000395c         mov        esi, 0x38                                   ; argument #2 for method xmemdup
0000000000003961         cmove      rbx, rax
0000000000003965         mov        rdi, rbx                                    ; argument #1 for method xmemdup
0000000000003968         call       xmemdup                                     ; xmemdup
000000000000396d         mov        dword [rbp], r12d
0000000000003971         pop        rbx
0000000000003972         pop        rbp
0000000000003973         pop        r12
0000000000003975         ret
                        ; endp
0000000000003976         align      128                                         ; End of unwind block (FDE at 0x65f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000003980         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6620), default_quoting_options
0000000000003987         test       rdi, rdi
000000000000398a         cmove      rdi, rax
000000000000398e         mov        eax, dword [rdi]
0000000000003990         ret
                        ; endp
0000000000003991         align      32                                          ; End of unwind block (FDE at 0x6620)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
00000000000039a0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6634), default_quoting_options
00000000000039a7         test       rdi, rdi
00000000000039aa         cmove      rdi, rax
00000000000039ae         mov        dword [rdi], esi
00000000000039b0         ret
                        ; endp
00000000000039b1         align      64                                          ; End of unwind block (FDE at 0x6634)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
00000000000039c0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6648), default_quoting_options
00000000000039c7         test       rdi, rdi
00000000000039ca         mov        ecx, esi
00000000000039cc         cmove      rdi, rax
00000000000039d0         mov        eax, esi
00000000000039d2         and        ecx, 0x1f
00000000000039d5         shr        al, 0x5
00000000000039d8         movzx      eax, al
00000000000039db         lea        rdi, qword [rdi+rax*4+8]
00000000000039e0         mov        esi, dword [rdi]
00000000000039e2         mov        eax, esi
00000000000039e4         shr        eax, cl
00000000000039e6         xor        edx, eax
00000000000039e8         and        eax, 0x1
00000000000039eb         and        edx, 0x1
00000000000039ee         shl        edx, cl
00000000000039f0         xor        edx, esi
00000000000039f2         mov        dword [rdi], edx
00000000000039f4         ret
                        ; endp
00000000000039f5         align      512                                         ; End of unwind block (FDE at 0x6648)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000003a00         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x665c), default_quoting_options
0000000000003a07         test       rdi, rdi
0000000000003a0a         cmove      rdi, rax
0000000000003a0e         mov        eax, dword [rdi+4]
0000000000003a11         mov        dword [rdi+4], esi
0000000000003a14         ret
                        ; endp
0000000000003a15         align      32                                          ; End of unwind block (FDE at 0x665c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000003a20         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6670), default_quoting_options
0000000000003a27         test       rdi, rdi
0000000000003a2a         cmove      rdi, rax
0000000000003a2e         test       rsi, rsi
0000000000003a31         mov        dword [rdi], 0xa
0000000000003a37         je         loc_3a47

0000000000003a39         test       rdx, rdx
0000000000003a3c         je         loc_3a47

0000000000003a3e         mov        qword [rdi+0x28], rsi
0000000000003a42         mov        qword [rdi+0x30], rdx
0000000000003a46         ret
                        ; endp

                     loc_3a47:
0000000000003a47         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
0000000000003a4b         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000003a50         push       r15                                         ; End of unwind block (FDE at 0x6670), Begin of unwind block (FDE at 0x6684)
0000000000003a52         push       r14
0000000000003a54         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000003a5b         push       r13
0000000000003a5d         push       r12
0000000000003a5f         mov        r13, rdi
0000000000003a62         push       rbp
0000000000003a63         push       rbx
0000000000003a64         mov        rbx, r8
0000000000003a67         mov        r14, rsi
0000000000003a6a         mov        r15, rdx
0000000000003a6d         sub        rsp, 0x18
0000000000003a71         test       r8, r8
0000000000003a74         cmove      rbx, rax
0000000000003a78         mov        qword [rsp+0x48+var_40], rcx
0000000000003a7d         call       j___errno_location                          ; __errno_location
0000000000003a82         mov        r12d, dword [rax]
0000000000003a85         mov        rbp, rax
0000000000003a88         lea        rax, qword [rbx+8]
0000000000003a8c         sub        rsp, 0x8
0000000000003a90         mov        r9d, dword [rbx+4]
0000000000003a94         push       qword [rbx+0x30]
0000000000003a97         mov        r8d, dword [rbx]
0000000000003a9a         push       qword [rbx+0x28]
0000000000003a9d         mov        rdx, r15
0000000000003aa0         push       rax
0000000000003aa1         mov        rcx, qword [rsp+0x68+var_40]
0000000000003aa6         mov        rsi, r14
0000000000003aa9         mov        rdi, r13
0000000000003aac         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003ab1         mov        dword [rbp], r12d
0000000000003ab5         add        rsp, 0x38
0000000000003ab9         pop        rbx
0000000000003aba         pop        rbp
0000000000003abb         pop        r12
0000000000003abd         pop        r13
0000000000003abf         pop        r14
0000000000003ac1         pop        r15
0000000000003ac3         ret
                        ; endp
0000000000003ac4         align      16                                          ; End of unwind block (FDE at 0x6684)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000003ad0         push       r15                                         ; Begin of unwind block (FDE at 0x66d8), CODE XREF=quotearg_alloc+5
0000000000003ad2         push       r14
0000000000003ad4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000003adb         push       r13
0000000000003add         push       r12
0000000000003adf         mov        r12, rdx
0000000000003ae2         push       rbp
0000000000003ae3         push       rbx
0000000000003ae4         mov        rbx, rcx
0000000000003ae7         mov        r14, rdi
0000000000003aea         mov        r15, rsi
0000000000003aed         sub        rsp, 0x38
0000000000003af1         test       rcx, rcx
0000000000003af4         cmove      rbx, rax
0000000000003af8         xor        ebp, ebp
0000000000003afa         call       j___errno_location                          ; __errno_location
0000000000003aff         test       r12, r12
0000000000003b02         mov        r13, rax
0000000000003b05         mov        eax, dword [rax]
0000000000003b07         sete       bpl
0000000000003b0b         or         ebp, dword [rbx+4]
0000000000003b0e         lea        r10, qword [rbx+8]
0000000000003b12         sub        rsp, 0x8
0000000000003b16         mov        r8d, dword [rbx]
0000000000003b19         mov        rcx, r15
0000000000003b1c         mov        dword [rsp+0x70+var_5C], eax
0000000000003b20         push       qword [rbx+0x30]
0000000000003b23         mov        rdx, r14
0000000000003b26         push       qword [rbx+0x28]
0000000000003b29         push       r10
0000000000003b2b         xor        esi, esi
0000000000003b2d         mov        r9d, ebp
0000000000003b30         xor        edi, edi
0000000000003b32         mov        qword [rsp+0x88+var_48], r10
0000000000003b37         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003b3c         lea        rsi, qword [rax+1]
0000000000003b40         mov        qword [rsp+0x88+var_40], rax
0000000000003b45         add        rsp, 0x20
0000000000003b49         mov        rdi, rsi
0000000000003b4c         mov        qword [rsp+0x68+var_50], rsi
0000000000003b51         call       xmalloc                                     ; xmalloc
0000000000003b56         mov        qword [rsp+0x68+var_58], rax
0000000000003b5b         sub        rsp, 0x8
0000000000003b5f         push       qword [rbx+0x30]
0000000000003b62         push       qword [rbx+0x28]
0000000000003b65         mov        r10, qword [rsp+0x80+var_48]
0000000000003b6a         mov        r9d, ebp
0000000000003b6d         mov        r8d, dword [rbx]
0000000000003b70         mov        rcx, r15
0000000000003b73         mov        rdx, r14
0000000000003b76         mov        rdi, rax
0000000000003b79         push       r10
0000000000003b7b         mov        rsi, qword [rsp+0x88+var_50]
0000000000003b80         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003b85         mov        eax, dword [rsp+0x88+var_5C]
0000000000003b89         add        rsp, 0x20
0000000000003b8d         test       r12, r12
0000000000003b90         mov        dword [r13], eax
0000000000003b94         je         loc_3b9f

0000000000003b96         mov        r11, qword [rsp+0x68+var_40]
0000000000003b9b         mov        qword [r12], r11

                     loc_3b9f:
0000000000003b9f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000003ba4         add        rsp, 0x38
0000000000003ba8         pop        rbx
0000000000003ba9         pop        rbp
0000000000003baa         pop        r12
0000000000003bac         pop        r13
0000000000003bae         pop        r14
0000000000003bb0         pop        r15
0000000000003bb2         ret
                        ; endp
0000000000003bb3         align      64                                          ; End of unwind block (FDE at 0x66d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000003bc0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x6744)
0000000000003bc3         xor        edx, edx
0000000000003bc5         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
0000000000003bca         align      16                                          ; End of unwind block (FDE at 0x6744)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000003bd0         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x6758), nslots
0000000000003bd6         push       r12
0000000000003bd8         mov        r12, qword [slotvec]                        ; slotvec
0000000000003bdf         push       rbp
0000000000003be0         push       rbx
0000000000003be1         cmp        eax, 0x1
0000000000003be4         jle        loc_3c11

0000000000003be6         sub        eax, 0x2
0000000000003be9         lea        rbx, qword [r12+0x18]
0000000000003bee         shl        rax, 0x4
0000000000003bf2         lea        rbp, qword [r12+rax+0x28]
0000000000003bf7         nop        word [rax+rax]

                     loc_3c00:
0000000000003c00         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
0000000000003c03         add        rbx, 0x10
0000000000003c07         call       j_free                                      ; free
0000000000003c0c         cmp        rbx, rbp
0000000000003c0f         jne        loc_3c00

                     loc_3c11:
0000000000003c11         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000003c16         lea        rbx, qword [slot0]                          ; slot0
0000000000003c1d         cmp        rdi, rbx
0000000000003c20         je         loc_3c39

0000000000003c22         call       j_free                                      ; free
0000000000003c27         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000003c32         mov        qword [slotvec0+8], rbx                     ; 0x208078

                     loc_3c39:
0000000000003c39         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000003c40         cmp        r12, rbx
0000000000003c43         je         loc_3c54

0000000000003c45         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000003c48         call       j_free                                      ; free
0000000000003c4d         mov        qword [slotvec], rbx                        ; slotvec

                     loc_3c54:
0000000000003c54         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000003c55         mov        dword [nslots], 0x1                         ; nslots
0000000000003c5f         pop        rbp
0000000000003c60         pop        r12
0000000000003c62         ret
                        ; endp
0000000000003c63         align      16                                          ; End of unwind block (FDE at 0x6758)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000003c70         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6784), default_quoting_options
0000000000003c77         mov        rdx, 0xffffffffffffffff
0000000000003c7e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000003c83         align      16                                          ; End of unwind block (FDE at 0x6784)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000003c90         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6798), default_quoting_options
0000000000003c97         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000003c9c         align      32                                          ; End of unwind block (FDE at 0x6798)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000003ca0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x67ac), default_quoting_options
0000000000003ca7         mov        rsi, rdi
0000000000003caa         mov        rdx, 0xffffffffffffffff
0000000000003cb1         xor        edi, edi
0000000000003cb3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000003cb8         align      64                                          ; End of unwind block (FDE at 0x67ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000003cc0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x67c0), default_quoting_options
0000000000003cc7         mov        rdx, rsi
0000000000003cca         mov        rsi, rdi
0000000000003ccd         xor        edi, edi
0000000000003ccf         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000003cd4         align      32                                          ; End of unwind block (FDE at 0x67c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
0000000000003ce0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x67d4)
0000000000003ce4         mov        rax, rdx
0000000000003ce7         mov        rdx, qword [fs:0x28]
0000000000003cf0         mov        qword [rsp+0x48+var_10], rdx
0000000000003cf5         xor        edx, edx
0000000000003cf7         cmp        esi, 0xa
0000000000003cfa         je         loc_3d64

0000000000003cfc         mov        dword [rsp+0x48+var_48], esi
0000000000003cff         mov        rcx, rsp
0000000000003d02         mov        rdx, 0xffffffffffffffff
0000000000003d09         mov        rsi, rax
0000000000003d0c         mov        qword [rsp+0x48+var_44], 0x0
0000000000003d15         mov        qword [rsp+0x48+var_3C], 0x0
0000000000003d1e         mov        qword [rsp+0x48+var_34], 0x0
0000000000003d27         mov        qword [rsp+0x48+var_2C], 0x0
0000000000003d30         mov        qword [rsp+0x48+var_24], 0x0
0000000000003d39         mov        qword [rsp+0x48+var_1C], 0x0
0000000000003d42         mov        dword [rsp+0x48+var_14], 0x0
0000000000003d4a         call       quotearg_n_options                          ; quotearg_n_options
0000000000003d4f         mov        rcx, qword [rsp+0x48+var_10]
0000000000003d54         xor        rcx, qword [fs:0x28]
0000000000003d5d         jne        loc_3d69

0000000000003d5f         add        rsp, 0x48
0000000000003d63         ret
                        ; endp

                     loc_3d64:
0000000000003d64         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_3d69:
0000000000003d69         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
0000000000003d6e         align      16                                          ; End of unwind block (FDE at 0x67d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000003d70         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x67f0), CODE XREF=quotearg_style_mem+10
0000000000003d74         mov        rax, rdx
0000000000003d77         mov        rdx, rcx
0000000000003d7a         mov        rcx, qword [fs:0x28]
0000000000003d83         mov        qword [rsp+0x48+var_10], rcx
0000000000003d88         xor        ecx, ecx
0000000000003d8a         cmp        esi, 0xa
0000000000003d8d         je         loc_3df0

0000000000003d8f         mov        dword [rsp+0x48+var_48], esi
0000000000003d92         mov        rcx, rsp
0000000000003d95         mov        rsi, rax
0000000000003d98         mov        qword [rsp+0x48+var_44], 0x0
0000000000003da1         mov        qword [rsp+0x48+var_3C], 0x0
0000000000003daa         mov        qword [rsp+0x48+var_34], 0x0
0000000000003db3         mov        qword [rsp+0x48+var_2C], 0x0
0000000000003dbc         mov        qword [rsp+0x48+var_24], 0x0
0000000000003dc5         mov        qword [rsp+0x48+var_1C], 0x0
0000000000003dce         mov        dword [rsp+0x48+var_14], 0x0
0000000000003dd6         call       quotearg_n_options                          ; quotearg_n_options
0000000000003ddb         mov        rdx, qword [rsp+0x48+var_10]
0000000000003de0         xor        rdx, qword [fs:0x28]
0000000000003de9         jne        loc_3df5

0000000000003deb         add        rsp, 0x48
0000000000003def         ret
                        ; endp

                     loc_3df0:
0000000000003df0         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_3df5:
0000000000003df5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
0000000000003dfa         align      512                                         ; End of unwind block (FDE at 0x67f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
0000000000003e00         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x680c)
0000000000003e03         mov        esi, edi
0000000000003e05         xor        edi, edi
0000000000003e07         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
0000000000003e0c         align      16                                          ; End of unwind block (FDE at 0x680c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000003e10         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x6820)
0000000000003e13         mov        rdx, rsi
0000000000003e16         mov        esi, edi
0000000000003e18         xor        edi, edi
0000000000003e1a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
0000000000003e1f         align      32                                          ; End of unwind block (FDE at 0x6820)

                     quotearg_char_mem:
0000000000003e20         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6834), CODE XREF=quotearg_char+11
0000000000003e24         mov        ecx, edx
0000000000003e26         mov        rax, qword [fs:0x28]
0000000000003e2f         mov        qword [rsp+0x48+var_10], rax
0000000000003e34         xor        eax, eax
0000000000003e36         mov        rax, qword [qword_208230]                   ; qword_208230
0000000000003e3d         mov        r8, rsp
0000000000003e40         and        ecx, 0x1f
0000000000003e43         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000003e4b         mov        qword [rsp+0x48+var_18], rax
0000000000003e50         mov        eax, edx
0000000000003e52         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000003e56         shr        al, 0x5
0000000000003e59         movzx      eax, al
0000000000003e5c         lea        r9, qword [r8+rax*4+8]
0000000000003e61         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x208210
0000000000003e69         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000003e6e         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x208220
0000000000003e76         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000003e7b         mov        edx, dword [r9]
0000000000003e7e         mov        eax, edx
0000000000003e80         shr        eax, cl
0000000000003e82         not        eax
0000000000003e84         and        eax, 0x1
0000000000003e87         shl        eax, cl
0000000000003e89         mov        rcx, r8
0000000000003e8c         xor        eax, edx
0000000000003e8e         mov        rdx, rsi
0000000000003e91         mov        rsi, rdi
0000000000003e94         mov        dword [r9], eax
0000000000003e97         xor        edi, edi
0000000000003e99         call       quotearg_n_options                          ; quotearg_n_options
0000000000003e9e         mov        rsi, qword [rsp+0x48+var_10]
0000000000003ea3         xor        rsi, qword [fs:0x28]
0000000000003eac         jne        loc_3eb3

0000000000003eae         add        rsp, 0x48
0000000000003eb2         ret
                        ; endp

                     loc_3eb3:
0000000000003eb3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000003eb8         align      64                                          ; End of unwind block (FDE at 0x6834)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000003ec0         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x6850)
0000000000003ec4         mov        rsi, 0xffffffffffffffff
0000000000003ecb         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000003ed0         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x6850), Begin of unwind block (FDE at 0x6864), CODE XREF=close_stdout+101
0000000000003ed5         mov        rsi, 0xffffffffffffffff
0000000000003edc         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000003ee1         align      16                                          ; End of unwind block (FDE at 0x6864)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000003ef0         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x6878)
0000000000003ef5         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000003efa         align      256                                         ; End of unwind block (FDE at 0x6878)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000003f00         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x688c), CODE XREF=fold_file+757, fold_file+815
0000000000003f04         mov        rax, rdx
0000000000003f07         mov        rdx, qword [fs:0x28]
0000000000003f10         mov        qword [rsp+0x48+var_10], rdx
0000000000003f15         xor        edx, edx
0000000000003f17         cmp        esi, 0xa
0000000000003f1a         je         loc_3f84

0000000000003f1c         mov        dword [rsp+0x48+var_48], esi
0000000000003f1f         mov        rcx, rsp
0000000000003f22         mov        rdx, 0xffffffffffffffff
0000000000003f29         mov        rsi, rax
0000000000003f2c         mov        qword [rsp+0x48+var_44], 0x0
0000000000003f35         mov        qword [rsp+0x48+var_3C], 0x4000000
0000000000003f3e         mov        qword [rsp+0x48+var_34], 0x0
0000000000003f47         mov        qword [rsp+0x48+var_2C], 0x0
0000000000003f50         mov        qword [rsp+0x48+var_24], 0x0
0000000000003f59         mov        qword [rsp+0x48+var_1C], 0x0
0000000000003f62         mov        dword [rsp+0x48+var_14], 0x0
0000000000003f6a         call       quotearg_n_options                          ; quotearg_n_options
0000000000003f6f         mov        rcx, qword [rsp+0x48+var_10]
0000000000003f74         xor        rcx, qword [fs:0x28]
0000000000003f7d         jne        loc_3f89

0000000000003f7f         add        rsp, 0x48
0000000000003f83         ret
                        ; endp

                     loc_3f84:
0000000000003f84         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_3f89:
0000000000003f89         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
0000000000003f8e         align      16                                          ; End of unwind block (FDE at 0x688c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom_mem:
0000000000003f90         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x68a8), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000003f94         mov        r9, rcx
0000000000003f97         mov        rcx, qword [qword_208230]                   ; qword_208230
0000000000003f9e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000003fa6         mov        rax, qword [fs:0x28]
0000000000003faf         mov        qword [rsp+0x48+var_10], rax
0000000000003fb4         xor        eax, eax
0000000000003fb6         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000003fba         test       rsi, rsi
0000000000003fbd         mov        qword [rsp+0x48+var_18], rcx
0000000000003fc2         mov        dword [rsp+0x48+var_48], 0xa
0000000000003fc9         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x208210
0000000000003fd1         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000003fd6         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x208220
0000000000003fde         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000003fe3         je         loc_4017

0000000000003fe5         test       rdx, rdx
0000000000003fe8         je         loc_4017

0000000000003fea         mov        qword [rsp+0x48+var_20], rsi
0000000000003fef         mov        qword [rsp+0x48+var_18], rdx
0000000000003ff4         mov        rcx, rsp
0000000000003ff7         mov        rdx, r8
0000000000003ffa         mov        rsi, r9
0000000000003ffd         call       quotearg_n_options                          ; quotearg_n_options
0000000000004002         mov        rdi, qword [rsp+0x48+var_10]
0000000000004007         xor        rdi, qword [fs:0x28]
0000000000004010         jne        loc_401c

0000000000004012         add        rsp, 0x48
0000000000004016         ret
                        ; endp

                     loc_4017:
0000000000004017         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_401c:
000000000000401c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000004021         align      16                                          ; End of unwind block (FDE at 0x68a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_custom:
0000000000004030         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x68c4)
0000000000004037         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
000000000000403c         align      64                                          ; End of unwind block (FDE at 0x68c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000004040         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x68d8)
0000000000004043         mov        r8, 0xffffffffffffffff
000000000000404a         mov        rdx, rsi
000000000000404d         mov        rsi, rdi
0000000000004050         xor        edi, edi
0000000000004052         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004057         align      32                                          ; End of unwind block (FDE at 0x68d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000004060         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x68ec)
0000000000004063         mov        rcx, rdx
0000000000004066         mov        rdx, rsi
0000000000004069         mov        rsi, rdi
000000000000406c         xor        edi, edi
000000000000406e         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004073         align      128                                         ; End of unwind block (FDE at 0x68ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000004080         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x6900), quote_quoting_options
0000000000004087         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000408c         align      16                                          ; End of unwind block (FDE at 0x6900)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000004090         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x6914), quote_quoting_options
0000000000004097         mov        rdx, rsi
000000000000409a         mov        rsi, rdi
000000000000409d         xor        edi, edi
000000000000409f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000040a4         align      16                                          ; End of unwind block (FDE at 0x6914)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
00000000000040b0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x6928), quote_quoting_options
00000000000040b7         mov        rdx, 0xffffffffffffffff
00000000000040be         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000040c3         align      16                                          ; End of unwind block (FDE at 0x6928)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
00000000000040d0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x693c), quote_quoting_options, CODE XREF=xnumtoumax+109
00000000000040d7         mov        rsi, rdi
00000000000040da         mov        rdx, 0xffffffffffffffff
00000000000040e1         xor        edi, edi
00000000000040e3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000040e8         align      16                                          ; End of unwind block (FDE at 0x693c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
00000000000040f0         push       r15                                         ; Begin of unwind block (FDE at 0x6954), CODE XREF=version_etc_va+75, version_etc+161
00000000000040f2         push       r14
00000000000040f4         push       r13
00000000000040f6         push       r12
00000000000040f8         mov        r12, r9
00000000000040fb         push       rbp
00000000000040fc         push       rbx
00000000000040fd         mov        rbp, rdi
0000000000004100         mov        rbx, r8
0000000000004103         sub        rsp, 0x28
0000000000004107         test       rsi, rsi
000000000000410a         je         loc_4228

0000000000004110         mov        r8, rdx
0000000000004113         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
000000000000411a         mov        r9, rcx
000000000000411d         xor        eax, eax
000000000000411f         mov        rcx, rsi
0000000000004122         mov        esi, 0x1
0000000000004127         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_412c:
000000000000412c         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x5bbb, CODE XREF=version_etc_arn+337
0000000000004133         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004135         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000413a         call       j_dcgettext                                 ; dcgettext
000000000000413f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000004146         mov        rcx, rax
0000000000004149         mov        r8d, 0x7e3
000000000000414f         mov        esi, 0x1
0000000000004154         mov        rdi, rbp
0000000000004157         xor        eax, eax
0000000000004159         call       j___fprintf_chk                             ; __fprintf_chk
000000000000415e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000004165         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004167         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000416c         call       j_dcgettext                                 ; dcgettext
0000000000004171         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004174         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004177         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000417c         cmp        r12, 0x9
0000000000004180         ja         loc_44c0

0000000000004186         lea        rdx, qword [switch_table_5ea4]              ; switch_table_5ea4
000000000000418d         movsxd     rax, dword [rdx+r12*4]
0000000000004191         add        rax, rdx
0000000000004194         jmp        rax                                         ; switch statement using table at 0x5ea4, with 10 cases, 0x41a0,0x4216,0x4250,0x42a8,0x42e8,0x4330,0x4380,0x43d8,0x4408,0x4470
0000000000004196         align      32

                     loc_41a0:
00000000000041a0         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
00000000000041a4         mov        rax, qword [rbx+0x10]
00000000000041a8         lea        rsi, qword [aWrittenBySSSns_5db8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
00000000000041af         mov        r8, qword [rbx+8]
00000000000041b3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000041b8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000041ba         mov        r13, qword [rbx+0x30]
00000000000041be         mov        r12, qword [rbx+0x28]
00000000000041c2         mov        qword [rsp+0x58+var_48], r9
00000000000041c7         mov        r15, qword [rbx+0x20]
00000000000041cb         mov        r14, qword [rbx+0x18]
00000000000041cf         mov        qword [rsp+0x58+var_58], rax
00000000000041d3         mov        qword [rsp+0x58+var_50], r8
00000000000041d8         mov        rbx, qword [rbx]
00000000000041db         call       j_dcgettext                                 ; dcgettext
00000000000041e0         sub        rsp, 0x8

                     loc_41e4:
00000000000041e4         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
00000000000041e9         mov        rdx, rax
00000000000041ec         mov        rcx, rbx
00000000000041ef         mov        esi, 0x1
00000000000041f4         mov        rdi, rbp
00000000000041f7         xor        eax, eax
00000000000041f9         push       r9
00000000000041fb         push       r13
00000000000041fd         push       r12
00000000000041ff         push       r15
0000000000004201         push       r14
0000000000004203         mov        r9, qword [rsp+0x88+var_58]
0000000000004208         mov        r8, qword [rsp+0x88+var_50]
000000000000420d         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004212         add        rsp, 0x30

                     loc_4216:
0000000000004216         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
000000000000421a         pop        rbx
000000000000421b         pop        rbp
000000000000421c         pop        r12
000000000000421e         pop        r13
0000000000004220         pop        r14
0000000000004222         pop        r15
0000000000004224         ret
                        ; endp
0000000000004225         align      8

                     loc_4228:
0000000000004228         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
000000000000422b         mov        rcx, rdx
000000000000422e         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000004235         mov        esi, 0x1
000000000000423a         xor        eax, eax
000000000000423c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004241         jmp        loc_412c
0000000000004246         align      16

                     loc_4250:
0000000000004250         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000004254         mov        r9, qword [rbx+0x38]
0000000000004258         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
000000000000425f         mov        rax, qword [rbx+0x10]
0000000000004263         mov        r8, qword [rbx+8]
0000000000004267         mov        edx, 0x5
000000000000426c         mov        r13, qword [rbx+0x30]
0000000000004270         mov        r12, qword [rbx+0x28]
0000000000004274         mov        r15, qword [rbx+0x20]
0000000000004278         mov        r14, qword [rbx+0x18]
000000000000427c         mov        rbx, qword [rbx]
000000000000427f         mov        qword [rsp+0x58+var_40], r10
0000000000004284         mov        qword [rsp+0x58+var_48], r9
0000000000004289         mov        qword [rsp+0x58+var_58], rax
000000000000428d         mov        qword [rsp+0x58+var_50], r8

                     loc_4292:
0000000000004292         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000004294         call       j_dcgettext                                 ; dcgettext
0000000000004299         mov        r10, qword [rsp+0x58+var_40]
000000000000429e         push       r10
00000000000042a0         jmp        loc_41e4
00000000000042a5         align      8

                     loc_42a8:
00000000000042a8         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
00000000000042ab         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
00000000000042b2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000042b7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000042b9         call       j_dcgettext                                 ; dcgettext
00000000000042be         add        rsp, 0x28
00000000000042c2         mov        rcx, rbx
00000000000042c5         mov        rdi, rbp
00000000000042c8         pop        rbx
00000000000042c9         pop        rbp
00000000000042ca         pop        r12
00000000000042cc         pop        r13
00000000000042ce         pop        r14
00000000000042d0         pop        r15
00000000000042d2         mov        rdx, rax
00000000000042d5         mov        esi, 0x1
00000000000042da         xor        eax, eax
00000000000042dc         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000042e1         align      8

                     loc_42e8:
00000000000042e8         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
00000000000042ec         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
00000000000042f3         mov        rbx, qword [rbx]
00000000000042f6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000042fb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000042fd         call       j_dcgettext                                 ; dcgettext
0000000000004302         add        rsp, 0x28
0000000000004306         mov        r8, r12
0000000000004309         mov        rcx, rbx
000000000000430c         mov        rdi, rbp
000000000000430f         mov        rdx, rax
0000000000004312         mov        esi, 0x1
0000000000004317         pop        rbx
0000000000004318         pop        rbp
0000000000004319         pop        r12
000000000000431b         pop        r13
000000000000431d         pop        r14
000000000000431f         pop        r15
0000000000004321         xor        eax, eax
0000000000004323         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004328         align      16

                     loc_4330:
0000000000004330         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000004334         mov        r12, qword [rbx+8]
0000000000004338         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
000000000000433f         mov        rbx, qword [rbx]
0000000000004342         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004347         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004349         call       j_dcgettext                                 ; dcgettext
000000000000434e         add        rsp, 0x28
0000000000004352         mov        r9, r13
0000000000004355         mov        r8, r12
0000000000004358         mov        rcx, rbx
000000000000435b         mov        rdi, rbp
000000000000435e         mov        rdx, rax
0000000000004361         pop        rbx
0000000000004362         pop        rbp
0000000000004363         pop        r12
0000000000004365         pop        r13
0000000000004367         pop        r14
0000000000004369         pop        r15
000000000000436b         mov        esi, 0x1
0000000000004370         xor        eax, eax
0000000000004372         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004377         align      128

                     loc_4380:
0000000000004380         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000004387         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000438c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000438e         mov        r14, qword [rbx+0x18]
0000000000004392         mov        r13, qword [rbx+0x10]
0000000000004396         mov        r12, qword [rbx+8]
000000000000439a         mov        rbx, qword [rbx]
000000000000439d         call       j_dcgettext                                 ; dcgettext
00000000000043a2         sub        rsp, 0x8

                     loc_43a6:
00000000000043a6         push       r14                                         ; CODE XREF=version_etc_arn+784
00000000000043a8         mov        rdx, rax
00000000000043ab         mov        r9, r13
00000000000043ae         mov        r8, r12
00000000000043b1         mov        rcx, rbx
00000000000043b4         mov        rdi, rbp
00000000000043b7         mov        esi, 0x1
00000000000043bc         xor        eax, eax
00000000000043be         call       j___fprintf_chk                             ; __fprintf_chk
00000000000043c3         pop        rax
00000000000043c4         pop        rdx
00000000000043c5         add        rsp, 0x28
00000000000043c9         pop        rbx
00000000000043ca         pop        rbp
00000000000043cb         pop        r12
00000000000043cd         pop        r13
00000000000043cf         pop        r14
00000000000043d1         pop        r15
00000000000043d3         ret
                        ; endp
00000000000043d4         align      8

                     loc_43d8:
00000000000043d8         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
00000000000043dc         lea        rsi, qword [aWrittenBySSSns_5d38]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
00000000000043e3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000043e8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000043ea         mov        r14, qword [rbx+0x18]
00000000000043ee         mov        r13, qword [rbx+0x10]
00000000000043f2         mov        r12, qword [rbx+8]
00000000000043f6         mov        rbx, qword [rbx]
00000000000043f9         call       j_dcgettext                                 ; dcgettext
00000000000043fe         push       r15
0000000000004400         jmp        loc_43a6
0000000000004402         align      8

                     loc_4408:
0000000000004408         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
000000000000440c         mov        r12, qword [rbx+0x28]
0000000000004410         lea        rsi, qword [aWrittenBySSSns_5d60]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000004417         mov        r15, qword [rbx+0x20]
000000000000441b         mov        r14, qword [rbx+0x18]
000000000000441f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004424         mov        r13, qword [rbx+0x10]
0000000000004428         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000442a         mov        rbx, qword [rbx]
000000000000442d         mov        qword [rsp+0x58+var_58], r8
0000000000004431         call       j_dcgettext                                 ; dcgettext
0000000000004436         sub        rsp, 0x8
000000000000443a         mov        r9, r13
000000000000443d         push       r12
000000000000443f         push       r15
0000000000004441         push       r14

                     loc_4443:
0000000000004443         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000004448         mov        rcx, rbx
000000000000444b         mov        rdx, rax
000000000000444e         mov        rdi, rbp
0000000000004451         mov        esi, 0x1
0000000000004456         xor        eax, eax
0000000000004458         call       j___fprintf_chk                             ; __fprintf_chk
000000000000445d         add        rsp, 0x20
0000000000004461         add        rsp, 0x28
0000000000004465         pop        rbx
0000000000004466         pop        rbp
0000000000004467         pop        r12
0000000000004469         pop        r13
000000000000446b         pop        r14
000000000000446d         pop        r15
000000000000446f         ret
                        ; endp

                     loc_4470:
0000000000004470         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000004474         mov        r13, qword [rbx+0x30]
0000000000004478         lea        rsi, qword [aWrittenBySSSns_5d88]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
000000000000447f         mov        r12, qword [rbx+0x28]
0000000000004483         mov        r15, qword [rbx+0x20]
0000000000004487         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000448c         mov        r14, qword [rbx+0x18]
0000000000004490         mov        r8, qword [rbx+8]
0000000000004494         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004496         mov        qword [rsp+0x58+var_50], r9
000000000000449b         mov        rbx, qword [rbx]
000000000000449e         mov        qword [rsp+0x58+var_58], r8
00000000000044a2         call       j_dcgettext                                 ; dcgettext
00000000000044a7         push       r13
00000000000044a9         push       r12
00000000000044ab         push       r15
00000000000044ad         push       r14
00000000000044af         mov        r9, qword [rsp+0x78+var_50]
00000000000044b4         jmp        loc_4443
00000000000044b6         align      64

                     loc_44c0:
00000000000044c0         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
00000000000044c4         mov        r9, qword [rbx+0x38]
00000000000044c8         mov        edx, 0x5
00000000000044cd         mov        rax, qword [rbx+0x10]
00000000000044d1         mov        r8, qword [rbx+8]
00000000000044d5         lea        rsi, qword [aWrittenBySSSns_5e20]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
00000000000044dc         mov        r13, qword [rbx+0x30]
00000000000044e0         mov        r12, qword [rbx+0x28]
00000000000044e4         mov        r15, qword [rbx+0x20]
00000000000044e8         mov        r14, qword [rbx+0x18]
00000000000044ec         mov        qword [rsp+0x58+var_40], r10
00000000000044f1         mov        qword [rsp+0x58+var_48], r9
00000000000044f6         mov        qword [rsp+0x58+var_58], rax
00000000000044fa         mov        qword [rsp+0x58+var_50], r8
00000000000044ff         mov        rbx, qword [rbx]
0000000000004502         jmp        loc_4292
0000000000004507         align      16                                          ; End of unwind block (FDE at 0x6954)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000004510         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x6a68)
0000000000004513         cmp        qword [r8], 0x0
0000000000004517         je         j_version_etc_arn                           ; version_etc_arn

0000000000004519         nop        dword [rax]

                     loc_4520:
0000000000004520         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000004524         cmp        qword [r8+r9*8], 0x0
0000000000004529         jne        loc_4520

                     j_version_etc_arn:        // version_etc_arn
000000000000452b         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000004530         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x6a68), Begin of unwind block (FDE at 0x6a7c)
0000000000004534         mov        r10, r8
0000000000004537         xor        r9d, r9d
000000000000453a         mov        rax, qword [fs:0x28]
0000000000004543         mov        qword [rsp+0x68+var_10], rax
0000000000004548         xor        eax, eax
000000000000454a         mov        r8, rsp
000000000000454d         nop        dword [rax]

                     loc_4550:
0000000000004550         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000004553         cmp        eax, 0x2f
0000000000004556         ja         loc_459a

0000000000004558         mov        r11d, eax
000000000000455b         add        r11, qword [r10+0x10]
000000000000455f         add        eax, 0x8
0000000000004562         mov        dword [r10], eax

                     loc_4565:
0000000000004565         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000004568         test       rax, rax
000000000000456b         mov        qword [r8+r9*8], rax
000000000000456f         je         loc_457b

0000000000004571         add        r9, 0x1
0000000000004575         cmp        r9, 0xa
0000000000004579         jne        loc_4550

                     loc_457b:
000000000000457b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000004580         mov        rax, qword [rsp+0x68+var_10]
0000000000004585         xor        rax, qword [fs:0x28]
000000000000458e         jne        loc_4595

0000000000004590         add        rsp, 0x68
0000000000004594         ret
                        ; endp

                     loc_4595:
0000000000004595         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_459a:
000000000000459a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
000000000000459e         lea        rax, qword [r11+8]
00000000000045a2         mov        qword [r10+8], rax
00000000000045a6         jmp        loc_4565
00000000000045a8         align      16                                          ; End of unwind block (FDE at 0x6a7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
00000000000045b0         push       rbp                                         ; Begin of unwind block (FDE at 0x6a98), CODE XREF=main+280
00000000000045b1         push       rbx
00000000000045b2         mov        r10d, 0x20
00000000000045b8         xor        r11d, r11d
00000000000045bb         sub        rsp, 0xb8
00000000000045c2         mov        rax, qword [fs:0x28]
00000000000045cb         mov        qword [rsp+0xc8+var_50], rax
00000000000045d0         xor        eax, eax
00000000000045d2         lea        rax, qword [rsp+0xc8+arg_0]
00000000000045da         mov        qword [rsp+0xc8+var_28], r8
00000000000045e2         lea        rbx, qword [rsp+0xc8+arg_0]
00000000000045ea         lea        r8, qword [rsp+0xc8+var_A8]
00000000000045ef         mov        qword [rsp+0xc8+var_20], r9
00000000000045f7         mov        dword [rsp+0xc8+var_C0], 0x20
00000000000045ff         mov        qword [rsp+0xc8+var_B8], rax
0000000000004604         lea        rax, qword [rsp+0xc8+var_48]
000000000000460c         xor        r9d, r9d
000000000000460f         mov        qword [rsp+0xc8+var_B0], rax
0000000000004614         mov        rbp, rax
0000000000004617         nop        word [rax+rax]

                     loc_4620:
0000000000004620         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000004624         ja         loc_467c

0000000000004626         mov        eax, r10d
0000000000004629         mov        r11d, 0x1
000000000000462f         add        r10d, 0x8
0000000000004633         add        rax, rbp

                     loc_4636:
0000000000004636         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000004639         test       rax, rax
000000000000463c         mov        qword [r8+r9*8], rax
0000000000004640         je         loc_464c

0000000000004642         add        r9, 0x1
0000000000004646         cmp        r9, 0xa
000000000000464a         jne        loc_4620

                     loc_464c:
000000000000464c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
000000000000464f         jne        loc_4675

                     loc_4651:
0000000000004651         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000004656         mov        rax, qword [rsp+0xc8+var_50]
000000000000465b         xor        rax, qword [fs:0x28]
0000000000004664         jne        loc_4670

0000000000004666         add        rsp, 0xb8
000000000000466d         pop        rbx
000000000000466e         pop        rbp
000000000000466f         ret
                        ; endp

                     loc_4670:
0000000000004670         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_4675:
0000000000004675         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
000000000000467a         jmp        loc_4651

                     loc_467c:
000000000000467c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
000000000000467f         add        rbx, 0x8
0000000000004683         jmp        loc_4636
0000000000004685         align      16                                          ; End of unwind block (FDE at 0x6a98)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000004690         push       rbx                                         ; Begin of unwind block (FDE at 0x6ac4)
0000000000004691         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000004698         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000469d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000469f         call       j_dcgettext                                 ; dcgettext
00000000000046a4         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
00000000000046ab         mov        rsi, rax
00000000000046ae         mov        edi, 0x1
00000000000046b3         xor        eax, eax
00000000000046b5         call       j___printf_chk                              ; __printf_chk
00000000000046ba         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
00000000000046c1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000046c6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000046c8         call       j_dcgettext                                 ; dcgettext
00000000000046cd         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000046d4         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x52df
00000000000046db         mov        rsi, rax
00000000000046de         mov        edi, 0x1
00000000000046e3         xor        eax, eax
00000000000046e5         call       j___printf_chk                              ; __printf_chk
00000000000046ea         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000046f1         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
00000000000046f8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000046fa         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000046ff         call       j_dcgettext                                 ; dcgettext
0000000000004704         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004707         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000470a         pop        rbx
000000000000470b         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000004710         push       rbx                                         ; End of unwind block (FDE at 0x6ac4), Begin of unwind block (FDE at 0x6ae4), CODE XREF=quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
0000000000004711         mov        rbx, rdi
0000000000004714         call       j_malloc                                    ; malloc
0000000000004719         test       rax, rax
000000000000471c         jne        loc_4723

000000000000471e         test       rbx, rbx
0000000000004721         jne        loc_4725

                     loc_4723:
0000000000004723         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000004724         ret
                        ; endp

                     loc_4725:
0000000000004725         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_472a:
000000000000472a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x6ae4)
                     xnmalloc:
0000000000004730         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x6b00)
0000000000004733         mul        rsi
0000000000004736         mov        rdi, rax
0000000000004739         seto       al
000000000000473c         test       rdi, rdi
000000000000473f         js         loc_474b

0000000000004741         movzx      eax, al
0000000000004744         test       rax, rax
0000000000004747         jne        loc_474b

0000000000004749         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_474b:
000000000000474b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
000000000000474f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4754:
0000000000004754         nop                                                    ; End of unwind block (FDE at 0x6b00)
0000000000004756         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000004760         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x6b14)
                        ; endp
0000000000004762         align      16                                          ; End of unwind block (FDE at 0x6b14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000004770         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x6b28), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000004773         push       rbx
0000000000004774         mov        rbx, rsi
0000000000004777         jne        loc_477e

0000000000004779         test       rdi, rdi
000000000000477c         jne        loc_4798

                     loc_477e:
000000000000477e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000004781         call       j_realloc                                   ; realloc
0000000000004786         test       rax, rax
0000000000004789         jne        loc_4790

000000000000478b         test       rbx, rbx
000000000000478e         jne        loc_47a1

                     loc_4790:
0000000000004790         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000004791         ret
                        ; endp
0000000000004792         align      8

                     loc_4798:
0000000000004798         call       j_free                                      ; free, CODE XREF=xrealloc+12
000000000000479d         xor        eax, eax
000000000000479f         pop        rbx
00000000000047a0         ret
                        ; endp

                     loc_47a1:
00000000000047a1         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_47a6:
00000000000047a6         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x6b28)
                     xnrealloc:
00000000000047b0         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x6b4c)
00000000000047b3         mul        rdx
00000000000047b6         mov        rsi, rax
00000000000047b9         seto       al
00000000000047bc         test       rsi, rsi
00000000000047bf         js         loc_47cb

00000000000047c1         movzx      eax, al
00000000000047c4         test       rax, rax
00000000000047c7         jne        loc_47cb

00000000000047c9         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_47cb:
00000000000047cb         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
00000000000047cf         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_47d4:
00000000000047d4         nop                                                    ; End of unwind block (FDE at 0x6b4c)
00000000000047d6         nop        word [cs:rax+rax]
                     x2nrealloc:
00000000000047e0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x6b60)
00000000000047e3         mov        r9, rdx
00000000000047e6         mov        rcx, qword [rsi]
00000000000047e9         je         loc_4820

00000000000047eb         xor        edx, edx
00000000000047ed         movabs     rax, 0x5555555555555554
00000000000047f7         div        r9
00000000000047fa         cmp        rax, rcx
00000000000047fd         jbe        loc_483b

00000000000047ff         mov        rax, rcx
0000000000004802         shr        rax, 0x1
0000000000004805         lea        rcx, qword [rax+rcx+1]

                     loc_480a:
000000000000480a         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
000000000000480d         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000004811         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000004814         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000004819         align      32

                     loc_4820:
0000000000004820         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000004823         je         loc_4848

                     loc_4825:
0000000000004825         mov        rax, rcx                                    ; CODE XREF=sub_4844+28
0000000000004828         mul        r9
000000000000482b         seto       dl
000000000000482e         test       rax, rax
0000000000004831         movzx      edx, dl
0000000000004834         js         loc_483b

0000000000004836         test       rdx, rdx
0000000000004839         je         loc_480a

                     loc_483b:
000000000000483b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
000000000000483f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4844:
0000000000004844         nop        dword [rax]
                        ; endp

                     loc_4848:
0000000000004848         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
000000000000484a         mov        eax, 0x80
000000000000484f         xor        r8d, r8d
0000000000004852         div        r9
0000000000004855         test       rax, rax
0000000000004858         sete       r8b
000000000000485c         lea        rcx, qword [r8+rax]
0000000000004860         jmp        loc_4825
0000000000004862         align      16                                          ; End of unwind block (FDE at 0x6b60)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000004870         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x6b78), CODE XREF=fold_file+610
0000000000004873         mov        rax, qword [rsi]
0000000000004876         je         loc_48a0

0000000000004878         movabs     rdx, 0x5555555555555553
0000000000004882         cmp        rax, rdx
0000000000004885         ja         loc_48b1

0000000000004887         mov        rdx, rax
000000000000488a         shr        rdx, 0x1
000000000000488d         lea        rax, qword [rdx+rax+1]

                     loc_4892:
0000000000004892         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000004895         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000004898         jmp        xrealloc                                    ; xrealloc
                        ; endp
000000000000489d         align      32

                     loc_48a0:
00000000000048a0         test       rax, rax                                    ; CODE XREF=x2realloc+6
00000000000048a3         mov        edx, 0x80
00000000000048a8         cmove      rax, rdx
00000000000048ac         test       rax, rax
00000000000048af         jns        loc_4892

                     loc_48b1:
00000000000048b1         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
00000000000048b5         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_48ba:
00000000000048ba         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x6b78)
                     xzalloc:
00000000000048c0         push       rbx                                         ; Begin of unwind block (FDE at 0x6b90)
00000000000048c1         mov        rbx, rdi
00000000000048c4         call       xmalloc                                     ; xmalloc
00000000000048c9         mov        rdx, rbx                                    ; argument "__n" for method j_memset
00000000000048cc         xor        esi, esi                                    ; argument "__c" for method j_memset
00000000000048ce         mov        rdi, rax                                    ; argument "__s" for method j_memset
00000000000048d1         pop        rbx
00000000000048d2         jmp        j_memset                                    ; memset
                        ; endp
00000000000048d7         align      32                                          ; End of unwind block (FDE at 0x6b90)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
00000000000048e0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x6bac)
00000000000048e3         sub        rsp, 0x8
00000000000048e7         mul        rsi
00000000000048ea         seto       dl
00000000000048ed         test       rax, rax
00000000000048f0         js         loc_4909

00000000000048f2         movzx      edx, dl
00000000000048f5         test       rdx, rdx
00000000000048f8         jne        loc_4909

00000000000048fa         call       j_calloc                                    ; calloc
00000000000048ff         test       rax, rax
0000000000004902         je         loc_4909

0000000000004904         add        rsp, 0x8
0000000000004908         ret
                        ; endp

                     loc_4909:
0000000000004909         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_490e:
000000000000490e         nop                                                    ; End of unwind block (FDE at 0x6bac)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemdup:
0000000000004910         push       rbp                                         ; Begin of unwind block (FDE at 0x6bc8), CODE XREF=clone_quoting_options+40
0000000000004911         push       rbx
0000000000004912         mov        rbp, rdi
0000000000004915         mov        rdi, rsi
0000000000004918         mov        rbx, rsi
000000000000491b         sub        rsp, 0x8
000000000000491f         call       xmalloc                                     ; xmalloc
0000000000004924         add        rsp, 0x8
0000000000004928         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
000000000000492b         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
000000000000492e         pop        rbx
000000000000492f         pop        rbp
0000000000004930         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000004933         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000004938         align      64                                          ; End of unwind block (FDE at 0x6bc8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000004940         push       rbx                                         ; Begin of unwind block (FDE at 0x6bf0)
0000000000004941         mov        rbx, rdi
0000000000004944         call       j_strlen                                    ; strlen
0000000000004949         mov        rdi, rbx
000000000000494c         lea        rsi, qword [rax+1]
0000000000004950         pop        rbx
0000000000004951         jmp        xmemdup                                     ; xmemdup
                        ; endp
0000000000004953         align      32                                          ; End of unwind block (FDE at 0x6bf0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000004960         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x6c0c), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
0000000000004967         sub        rsp, 0x8
000000000000496b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004970         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004972         call       j_dcgettext                                 ; dcgettext
0000000000004977         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
000000000000497d         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5678
0000000000004984         mov        rcx, rax
0000000000004987         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000004989         xor        eax, eax
000000000000498b         call       j_error                                     ; error
0000000000004990         call       j_abort                                     ; abort
                        ; endp
0000000000004995         align      32                                          ; End of unwind block (FDE at 0x6c0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72


                     xnumtoumax:
00000000000049a0         push       r15                                         ; Begin of unwind block (FDE at 0x6c24), CODE XREF=xdectoumax+23
00000000000049a2         push       r14
00000000000049a4         mov        r15, rcx
00000000000049a7         push       r13
00000000000049a9         push       r12
00000000000049ab         mov        r14, rdx
00000000000049ae         push       rbp
00000000000049af         push       rbx
00000000000049b0         mov        edx, esi
00000000000049b2         xor        esi, esi
00000000000049b4         mov        r12, rdi
00000000000049b7         mov        r13, r9
00000000000049ba         sub        rsp, 0x18
00000000000049be         mov        rcx, rsp
00000000000049c1         mov        ebx, dword [rsp+0x48+arg_0]
00000000000049c5         mov        rax, qword [fs:0x28]
00000000000049ce         mov        qword [rsp+0x48+var_40], rax
00000000000049d3         xor        eax, eax
00000000000049d5         call       xstrtoumax                                  ; xstrtoumax
00000000000049da         test       eax, eax
00000000000049dc         jne        loc_4a70

00000000000049e2         mov        rbp, qword [rsp+0x48+var_48]
00000000000049e6         cmp        rbp, r14
00000000000049e9         jb         loc_49f0

00000000000049eb         cmp        rbp, r15
00000000000049ee         jbe        loc_4a44

                     loc_49f0:
00000000000049f0         call       j___errno_location                          ; __errno_location, CODE XREF=xnumtoumax+73
00000000000049f5         cmp        rbp, 0x40000000
00000000000049fc         mov        r14, rax
00000000000049ff         sbb        eax, eax
0000000000004a01         and        eax, 0xffffffd7
0000000000004a04         add        eax, 0x4b
0000000000004a07         mov        dword [r14], eax

                     loc_4a0a:
0000000000004a0a         mov        rdi, r12                                    ; CODE XREF=xnumtoumax+226, xnumtoumax+234, xnumtoumax+246
0000000000004a0d         call       quote                                       ; quote
0000000000004a12         mov        esi, dword [r14]
0000000000004a15         mov        r8, rax
0000000000004a18         mov        eax, 0x0
0000000000004a1d         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000004a24         mov        rcx, r13
0000000000004a27         cmp        esi, 0x16
0000000000004a2a         cmove      esi, eax                                    ; argument "__errnum" for method j_error
0000000000004a2d         test       ebx, ebx
0000000000004a2f         mov        eax, 0x1
0000000000004a34         cmove      ebx, eax
0000000000004a37         xor        eax, eax
0000000000004a39         mov        edi, ebx                                    ; argument "__status" for method j_error
0000000000004a3b         call       j_error                                     ; error
0000000000004a40         mov        rbp, qword [rsp+0x48+var_48]

                     loc_4a44:
0000000000004a44         mov        rdx, qword [rsp+0x48+var_40]                ; CODE XREF=xnumtoumax+78
0000000000004a49         xor        rdx, qword [fs:0x28]
0000000000004a52         mov        rax, rbp
0000000000004a55         jne        loc_4a9b

0000000000004a57         add        rsp, 0x18
0000000000004a5b         pop        rbx
0000000000004a5c         pop        rbp
0000000000004a5d         pop        r12
0000000000004a5f         pop        r13
0000000000004a61         pop        r14
0000000000004a63         pop        r15
0000000000004a65         ret
                        ; endp
0000000000004a66         align      16

                     loc_4a70:
0000000000004a70         mov        ebp, eax                                    ; CODE XREF=xnumtoumax+60
0000000000004a72         call       j___errno_location                          ; __errno_location
0000000000004a77         cmp        ebp, 0x1
0000000000004a7a         mov        r14, rax
0000000000004a7d         je         loc_4a90

0000000000004a7f         cmp        ebp, 0x3
0000000000004a82         jne        loc_4a0a

0000000000004a84         mov        dword [rax], 0x0
0000000000004a8a         jmp        loc_4a0a
0000000000004a8f         align      16

                     loc_4a90:
0000000000004a90         mov        dword [rax], 0x4b                           ; CODE XREF=xnumtoumax+221
0000000000004a96         jmp        loc_4a0a

                     loc_4a9b:
0000000000004a9b         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xnumtoumax+181
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xdectoumax:
0000000000004aa0         sub        rsp, 0x10                                   ; End of unwind block (FDE at 0x6c24), Begin of unwind block (FDE at 0x6c70), CODE XREF=main+370
0000000000004aa4         push       r9
0000000000004aa6         mov        r9, r8
0000000000004aa9         mov        r8, rcx
0000000000004aac         mov        rcx, rdx
0000000000004aaf         mov        rdx, rsi
0000000000004ab2         mov        esi, 0xa
0000000000004ab7         call       xnumtoumax                                  ; xnumtoumax
0000000000004abc         add        rsp, 0x18
0000000000004ac0         ret
                        ; endp
0000000000004ac1         align      16                                          ; End of unwind block (FDE at 0x6c70)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     xstrtoumax:
0000000000004ad0         push       r15                                         ; Begin of unwind block (FDE at 0x6c8c), CODE XREF=xnumtoumax+53
0000000000004ad2         push       r14
0000000000004ad4         push       r13
0000000000004ad6         push       r12
0000000000004ad8         push       rbp
0000000000004ad9         push       rbx
0000000000004ada         sub        rsp, 0x28
0000000000004ade         mov        rax, qword [fs:0x28]
0000000000004ae7         mov        qword [rsp+0x58+var_40], rax
0000000000004aec         xor        eax, eax
0000000000004aee         cmp        edx, 0x24
0000000000004af1         ja         loc_4e55

0000000000004af7         lea        rax, qword [rsp+0x58+var_48]
0000000000004afc         mov        r15, rsi
0000000000004aff         test       rsi, rsi
0000000000004b02         mov        rbp, rdi
0000000000004b05         mov        dword [rsp+0x58+var_50], edx
0000000000004b09         mov        r14, rcx
0000000000004b0c         mov        r13, r8
0000000000004b0f         cmove      r15, rax
0000000000004b13         call       j___errno_location                          ; __errno_location
0000000000004b18         mov        dword [rax], 0x0
0000000000004b1e         mov        r12, rax
0000000000004b21         movzx      ebx, byte [rbp]
0000000000004b25         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000004b2a         mov        edx, dword [rsp+0x58+var_50]
0000000000004b2e         mov        rsi, qword [rax]
0000000000004b31         mov        rax, rbp
0000000000004b34         jmp        loc_4b47
0000000000004b36         align      64

                     loc_4b40:
0000000000004b40         add        rax, 0x1                                    ; CODE XREF=xstrtoumax+127
0000000000004b44         movzx      ebx, byte [rax]

                     loc_4b47:
0000000000004b47         movzx      ecx, bl                                     ; CODE XREF=xstrtoumax+100
0000000000004b4a         test       byte [rsi+rcx*2+1], 0x20
0000000000004b4f         jne        loc_4b40

0000000000004b51         cmp        bl, 0x2d
0000000000004b54         je         loc_4ba8

0000000000004b56         xor        ecx, ecx
0000000000004b58         mov        rsi, r15
0000000000004b5b         mov        rdi, rbp
0000000000004b5e         call       j___strtoul_internal                        ; __strtoul_internal
0000000000004b63         mov        rcx, qword [r15]
0000000000004b66         mov        rbx, rax
0000000000004b69         cmp        rcx, rbp
0000000000004b6c         je         loc_4b98

0000000000004b6e         mov        eax, dword [r12]
0000000000004b72         test       eax, eax
0000000000004b74         je         loc_4bd8

0000000000004b76         cmp        eax, 0x22
0000000000004b79         mov        ebp, 0x1
0000000000004b7e         jne        loc_4ba8

                     loc_4b80:
0000000000004b80         test       r13, r13                                    ; CODE XREF=xstrtoumax+266
0000000000004b83         je         loc_4b8e

0000000000004b85         movzx      r12d, byte [rcx]
0000000000004b89         test       r12b, r12b
0000000000004b8c         jne        loc_4c07

                     loc_4b8e:
0000000000004b8e         mov        qword [r14], rbx                            ; CODE XREF=xstrtoumax+179
0000000000004b91         jmp        loc_4bad
0000000000004b93         align      8

                     loc_4b98:
0000000000004b98         test       r13, r13                                    ; CODE XREF=xstrtoumax+156
0000000000004b9b         mov        qword [rsp+0x58+var_50], rcx
0000000000004ba0         jne        loc_4be0

0000000000004ba2         nop        word [rax+rax]

                     loc_4ba8:
0000000000004ba8         mov        ebp, 0x4                                    ; CODE XREF=xstrtoumax+132, xstrtoumax+174, xstrtoumax+280, xstrtoumax+309

                     loc_4bad:
0000000000004bad         mov        rdi, qword [rsp+0x58+var_40]                ; CODE XREF=xstrtoumax+193, xstrtoumax+535, xstrtoumax+546
0000000000004bb2         xor        rdi, qword [fs:0x28]
0000000000004bbb         mov        eax, ebp
0000000000004bbd         jne        loc_4e50

0000000000004bc3         add        rsp, 0x28
0000000000004bc7         pop        rbx
0000000000004bc8         pop        rbp
0000000000004bc9         pop        r12
0000000000004bcb         pop        r13
0000000000004bcd         pop        r14
0000000000004bcf         pop        r15
0000000000004bd1         ret
                        ; endp
0000000000004bd2         align      8

                     loc_4bd8:
0000000000004bd8         xor        ebp, ebp                                    ; CODE XREF=xstrtoumax+164
0000000000004bda         jmp        loc_4b80
0000000000004bdc         align      32

                     loc_4be0:
0000000000004be0         movzx      r12d, byte [rbp]                            ; CODE XREF=xstrtoumax+208
0000000000004be5         test       r12b, r12b
0000000000004be8         je         loc_4ba8

0000000000004bea         movsx      esi, r12b                                   ; argument "__c" for method j_strchr
0000000000004bee         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000004bf1         xor        ebp, ebp
0000000000004bf3         call       j_strchr                                    ; strchr
0000000000004bf8         test       rax, rax
0000000000004bfb         mov        ebx, 0x1
0000000000004c00         mov        rcx, qword [rsp+0x58+var_50]
0000000000004c05         je         loc_4ba8

                     loc_4c07:
0000000000004c07         movsx      esi, r12b                                   ; argument "__c" for method j_strchr, CODE XREF=xstrtoumax+188
0000000000004c0b         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000004c0e         mov        qword [rsp+0x58+var_50], rcx
0000000000004c13         call       j_strchr                                    ; strchr
0000000000004c18         test       rax, rax
0000000000004c1b         mov        rcx, qword [rsp+0x58+var_50]
0000000000004c20         je         loc_4cec

0000000000004c26         lea        eax, dword [r12-0x45]
0000000000004c2b         cmp        al, 0x2f
0000000000004c2d         ja         loc_4c80

0000000000004c2f         movabs     rdx, 0x814400308945
0000000000004c39         bt         rdx, rax
0000000000004c3d         jae        loc_4c80

0000000000004c3f         mov        esi, 0x30                                   ; argument "__c" for method j_strchr
0000000000004c44         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000004c47         mov        qword [rsp+0x58+var_50], rcx
0000000000004c4c         call       j_strchr                                    ; strchr
0000000000004c51         test       rax, rax
0000000000004c54         mov        rcx, qword [rsp+0x58+var_50]
0000000000004c59         je         loc_4c80

0000000000004c5b         movzx      eax, byte [rcx+1]
0000000000004c5f         cmp        al, 0x44
0000000000004c61         je         loc_4c6f

0000000000004c63         cmp        al, 0x69
0000000000004c65         je         loc_4e38

0000000000004c6b         cmp        al, 0x42
0000000000004c6d         jne        loc_4c80

                     loc_4c6f:
0000000000004c6f         mov        edi, 0x2                                    ; CODE XREF=xstrtoumax+401
0000000000004c74         mov        esi, 0x3e8
0000000000004c79         jmp        loc_4c8a
0000000000004c7b         align      128

                     loc_4c80:
0000000000004c80         mov        edi, 0x1                                    ; CODE XREF=xstrtoumax+349, xstrtoumax+365, xstrtoumax+393, xstrtoumax+413
0000000000004c85         mov        esi, 0x400

                     loc_4c8a:
0000000000004c8a         sub        r12d, 0x42                                  ; CODE XREF=xstrtoumax+425, xstrtoumax+891
0000000000004c8e         cmp        r12b, 0x35
0000000000004c92         ja         loc_4cec

0000000000004c94         lea        rdx, qword [switch_table_5f68]              ; switch_table_5f68
0000000000004c9b         movzx      r12d, r12b
0000000000004c9f         movsxd     rax, dword [rdx+r12*4]
0000000000004ca3         add        rax, rdx
0000000000004ca6         jmp        rax                                         ; switch statement using table at 0x5f68, with 54 cases, 0x4ca8,0x4cd0,0x4cec,0x4cf7,0x4d0d,0x4d24,0x4d4a,0x4d6f,0x4d8f,0x4db0,0x4dd3,0x4df6,0x4e0c

                     loc_4ca8:
0000000000004ca8         mov        rax, rbx                                    ; case 43, CODE XREF=xstrtoumax+470
0000000000004cab         mul        rsi
0000000000004cae         jo         loc_4ea1

0000000000004cb4         xor        r8d, r8d

                     loc_4cb7:
0000000000004cb7         mul        rsi                                         ; CODE XREF=xstrtoumax+846, xstrtoumax+862, xstrtoumax+987
0000000000004cba         jo         loc_4e92

0000000000004cc0         mov        rbx, rax

                     loc_4cc3:
0000000000004cc3         or         ebp, r8d                                    ; CODE XREF=xstrtoumax+972
0000000000004cc6         nop        word [cs:rax+rax]

                     loc_4cd0:
0000000000004cd0         movsxd     rdi, edi                                    ; case 33, CODE XREF=xstrtoumax+470, xstrtoumax+571, xstrtoumax+594, xstrtoumax+632, xstrtoumax+712, xstrtoumax+727, xstrtoumax+823
0000000000004cd3         mov        eax, ebp
0000000000004cd5         add        rcx, rdi
0000000000004cd8         or         eax, 0x2
0000000000004cdb         mov        qword [r15], rcx
0000000000004cde         cmp        byte [rcx], 0x0
0000000000004ce1         mov        qword [r14], rbx
0000000000004ce4         cmovne     ebp, eax
0000000000004ce7         jmp        loc_4bad

                     loc_4cec:
0000000000004cec         mov        qword [r14], rbx                            ; case 52, CODE XREF=xstrtoumax+336, xstrtoumax+450, xstrtoumax+470
0000000000004cef         or         ebp, 0x2
0000000000004cf2         jmp        loc_4bad

                     loc_4cf7:
0000000000004cf7         mov        edx, 0x2                                    ; case 53, CODE XREF=xstrtoumax+470
0000000000004cfc         mov        rax, rdx
0000000000004cff         mul        rbx
0000000000004d02         jo         loc_4d9e

0000000000004d08         add        rbx, rbx
0000000000004d0b         jmp        loc_4cd0

                     loc_4d0d:
0000000000004d0d         mov        edx, 0x200                                  ; case 32, CODE XREF=xstrtoumax+470
0000000000004d12         mov        rax, rdx
0000000000004d15         mul        rbx
0000000000004d18         jo         loc_4d9e

0000000000004d1e         shl        rbx, 0x9
0000000000004d22         jmp        loc_4cd0

                     loc_4d24:
0000000000004d24         mov        r8d, 0x7                                    ; case 24, CODE XREF=xstrtoumax+470
0000000000004d2a         xor        r9d, r9d
0000000000004d2d         nop        dword [rax]

                     loc_4d30:
0000000000004d30         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+627
0000000000004d33         mul        rsi
0000000000004d36         mov        rbx, rax
0000000000004d39         jo         loc_4ece

                     loc_4d3f:
0000000000004d3f         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1032
0000000000004d43         jne        loc_4d30

                     loc_4d45:
0000000000004d45         or         ebp, r9d                                    ; CODE XREF=xstrtoumax+669, xstrtoumax+701, xstrtoumax+766, xstrtoumax+801
0000000000004d48         jmp        loc_4cd0

                     loc_4d4a:
0000000000004d4a         mov        r8d, 0x8                                    ; case 23, CODE XREF=xstrtoumax+470
0000000000004d50         xor        r9d, r9d
0000000000004d53         nop        dword [rax+rax]

                     loc_4d58:
0000000000004d58         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+667
0000000000004d5b         mul        rsi
0000000000004d5e         mov        rbx, rax
0000000000004d61         jo         loc_4eb0

                     loc_4d67:
0000000000004d67         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1002
0000000000004d6b         jne        loc_4d58

0000000000004d6d         jmp        loc_4d45

                     loc_4d6f:
0000000000004d6f         mov        r8d, 0x4                                    ; case 50, CODE XREF=xstrtoumax+470
0000000000004d75         xor        r9d, r9d

                     loc_4d78:
0000000000004d78         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+699
0000000000004d7b         mul        rsi
0000000000004d7e         mov        rbx, rax
0000000000004d81         jo         loc_4e83

                     loc_4d87:
0000000000004d87         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+957
0000000000004d8b         jne        loc_4d78

0000000000004d8d         jmp        loc_4d45

                     loc_4d8f:
0000000000004d8f         mov        rax, rbx                                    ; case 41, CODE XREF=xstrtoumax+470
0000000000004d92         mul        rsi
0000000000004d95         mov        rbx, rax
0000000000004d98         jno        loc_4cd0

                     loc_4d9e:
0000000000004d9e         mov        ebp, 0x1                                    ; CODE XREF=xstrtoumax+562, xstrtoumax+584, xstrtoumax+817
0000000000004da3         or         rbx, 0xffffffffffffffff
0000000000004da7         jmp        loc_4cd0
0000000000004dac         align      16

                     loc_4db0:
0000000000004db0         mov        r8d, 0x5                                    ; case 14, CODE XREF=xstrtoumax+470
0000000000004db6         xor        r9d, r9d

                     loc_4db9:
0000000000004db9         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+764
0000000000004dbc         mul        rsi
0000000000004dbf         mov        rbx, rax
0000000000004dc2         jo         loc_4ebf

                     loc_4dc8:
0000000000004dc8         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1017
0000000000004dcc         jne        loc_4db9

0000000000004dce         jmp        loc_4d45

                     loc_4dd3:
0000000000004dd3         mov        r8d, 0x6                                    ; case 3, CODE XREF=xstrtoumax+470
0000000000004dd9         xor        r9d, r9d

                     loc_4ddc:
0000000000004ddc         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+799
0000000000004ddf         mul        rsi
0000000000004de2         mov        rbx, rax
0000000000004de5         jo         loc_4e74

                     loc_4deb:
0000000000004deb         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+942
0000000000004def         jne        loc_4ddc

0000000000004df1         jmp        loc_4d45

                     loc_4df6:
0000000000004df6         mov        edx, 0x400                                  ; case 0, CODE XREF=xstrtoumax+470
0000000000004dfb         mov        rax, rdx
0000000000004dfe         mul        rbx
0000000000004e01         jo         loc_4d9e

0000000000004e03         shl        rbx, 0xa
0000000000004e07         jmp        loc_4cd0

                     loc_4e0c:
0000000000004e0c         mov        rax, rbx                                    ; case 37, CODE XREF=xstrtoumax+470
0000000000004e0f         mul        rsi
0000000000004e12         jo         loc_4edd

0000000000004e18         xor        r8d, r8d

                     loc_4e1b:
0000000000004e1b         mul        rsi                                         ; CODE XREF=xstrtoumax+1047
0000000000004e1e         jno        loc_4cb7

0000000000004e24         mov        r8d, 0x1
0000000000004e2a         or         rax, 0xffffffffffffffff
0000000000004e2e         jmp        loc_4cb7
0000000000004e33         align      8

                     loc_4e38:
0000000000004e38         xor        edi, edi                                    ; CODE XREF=xstrtoumax+405
0000000000004e3a         cmp        byte [rcx+2], 0x42
0000000000004e3e         mov        esi, 0x400
0000000000004e43         sete       dil
0000000000004e47         lea        edi, dword [rdi+rdi+1]
0000000000004e4b         jmp        loc_4c8a

                     loc_4e50:
0000000000004e50         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xstrtoumax+237
                        ; endp

                     loc_4e55:
0000000000004e55         lea        rcx, qword [__PRETTY_FUNCTION__.4162]       ; argument "__function" for method j___assert_fail, "xstrtoumax", CODE XREF=xstrtoumax+33
0000000000004e5c         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/xstrtol.c"
0000000000004e63         lea        rdi, qword [a0StrtolbaseStr]                ; argument "__assertion" for method j___assert_fail, "0 <= strtol_base && strtol_base <= 36"
0000000000004e6a         mov        edx, 0x54                                   ; argument "__line" for method j___assert_fail
0000000000004e6f         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_4e74:
0000000000004e74         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+789
0000000000004e7a         or         rbx, 0xffffffffffffffff
0000000000004e7e         jmp        loc_4deb

                     loc_4e83:
0000000000004e83         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+689
0000000000004e89         or         rbx, 0xffffffffffffffff
0000000000004e8d         jmp        loc_4d87

                     loc_4e92:
0000000000004e92         mov        r8d, 0x1                                    ; CODE XREF=xstrtoumax+490
0000000000004e98         or         rbx, 0xffffffffffffffff
0000000000004e9c         jmp        loc_4cc3

                     loc_4ea1:
0000000000004ea1         or         rax, 0xffffffffffffffff                     ; CODE XREF=xstrtoumax+478
0000000000004ea5         mov        r8d, 0x1
0000000000004eab         jmp        loc_4cb7

                     loc_4eb0:
0000000000004eb0         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+657
0000000000004eb6         or         rbx, 0xffffffffffffffff
0000000000004eba         jmp        loc_4d67

                     loc_4ebf:
0000000000004ebf         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+754
0000000000004ec5         or         rbx, 0xffffffffffffffff
0000000000004ec9         jmp        loc_4dc8

                     loc_4ece:
0000000000004ece         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+617
0000000000004ed4         or         rbx, 0xffffffffffffffff
0000000000004ed8         jmp        loc_4d3f

                     loc_4edd:
0000000000004edd         mov        r8d, 0x1                                    ; CODE XREF=xstrtoumax+834
0000000000004ee3         or         rax, 0xffffffffffffffff
0000000000004ee7         jmp        loc_4e1b
0000000000004eec         align      16                                          ; End of unwind block (FDE at 0x6c8c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000004ef0         push       r12                                         ; Begin of unwind block (FDE at 0x6cdc), CODE XREF=main+536, fold_file+876, fold_file+899, close_stream+21
0000000000004ef2         push       rbp
0000000000004ef3         push       rbx
0000000000004ef4         mov        rbx, rdi
0000000000004ef7         call       j_fileno                                    ; fileno
0000000000004efc         test       eax, eax
0000000000004efe         mov        rdi, rbx
0000000000004f01         js         loc_4f57

0000000000004f03         call       j___freading                                ; __freading
0000000000004f08         test       eax, eax
0000000000004f0a         jne        loc_4f38

                     loc_4f0c:
0000000000004f0c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
0000000000004f0f         call       rpl_fflush                                  ; rpl_fflush
0000000000004f14         test       eax, eax
0000000000004f16         je         loc_4f54

0000000000004f18         call       j___errno_location                          ; __errno_location
0000000000004f1d         mov        r12d, dword [rax]
0000000000004f20         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000004f23         mov        rbp, rax
0000000000004f26         call       j_fclose                                    ; fclose
0000000000004f2b         test       r12d, r12d
0000000000004f2e         jne        loc_4f60

                     loc_4f30:
0000000000004f30         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000004f31         pop        rbp
0000000000004f32         pop        r12
0000000000004f34         ret
                        ; endp
0000000000004f35         align      8

                     loc_4f38:
0000000000004f38         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
0000000000004f3b         call       j_fileno                                    ; fileno
0000000000004f40         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000004f42         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000004f47         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000004f49         call       j_lseek                                     ; lseek
0000000000004f4e         cmp        rax, 0xffffffffffffffff
0000000000004f52         jne        loc_4f0c

                     loc_4f54:
0000000000004f54         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_4f57:
0000000000004f57         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000004f58         pop        rbp
0000000000004f59         pop        r12
0000000000004f5b         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_4f60:
0000000000004f60         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
0000000000004f64         mov        eax, 0xffffffff
0000000000004f69         jmp        loc_4f30
0000000000004f6b         align      16                                          ; End of unwind block (FDE at 0x6cdc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000004f70         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x6d14), CODE XREF=rpl_fclose+31
0000000000004f73         push       rbx
0000000000004f74         mov        rbx, rdi
0000000000004f77         je         loc_4f8a

0000000000004f79         call       j___freading                                ; __freading
0000000000004f7e         test       eax, eax
0000000000004f80         je         loc_4f8a

0000000000004f82         test       dword [rbx], 0x100
0000000000004f88         jne        loc_4f98

                     loc_4f8a:
0000000000004f8a         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
0000000000004f8d         pop        rbx
0000000000004f8e         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000004f93         align      8

                     loc_4f98:
0000000000004f98         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
0000000000004f9b         mov        edx, 0x1
0000000000004fa0         xor        esi, esi
0000000000004fa2         call       rpl_fseeko                                  ; rpl_fseeko
0000000000004fa7         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
0000000000004faa         pop        rbx
0000000000004fab         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000004fb0         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x6d14), Begin of unwind block (FDE at 0x6d34), CODE XREF=rpl_fflush+50
0000000000004fb4         cmp        qword [rdi+0x10], rax
0000000000004fb8         je         loc_4fc0

                     j_j_fseeko:        // fseeko
0000000000004fba         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
0000000000004fbf         align      64

                     loc_4fc0:
0000000000004fc0         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000004fc4         cmp        qword [rdi+0x28], rax
0000000000004fc8         jne        j_j_fseeko                                  ; fseeko

0000000000004fca         cmp        qword [rdi+0x48], 0x0
0000000000004fcf         jne        j_j_fseeko                                  ; fseeko

0000000000004fd1         push       r12
0000000000004fd3         push       rbp
0000000000004fd4         mov        r12d, edx
0000000000004fd7         push       rbx
0000000000004fd8         mov        rbp, rsi
0000000000004fdb         mov        rbx, rdi
0000000000004fde         call       j_fileno                                    ; fileno
0000000000004fe3         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000004fe6         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000004fe9         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000004feb         call       j_lseek                                     ; lseek
0000000000004ff0         cmp        rax, 0xffffffffffffffff
0000000000004ff4         je         loc_5002

0000000000004ff6         and        dword [rbx], 0xffffffef
0000000000004ff9         mov        qword [rbx+0x90], rax
0000000000005000         xor        eax, eax

                     loc_5002:
0000000000005002         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000005003         pop        rbp
0000000000005004         pop        r12
0000000000005006         ret
                        ; endp
0000000000005007         align      16                                          ; End of unwind block (FDE at 0x6d34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000005010         push       r13                                         ; Begin of unwind block (FDE at 0x6d64), CODE XREF=sub_2c90+534
0000000000005012         push       r12
0000000000005014         mov        r13, rsi
0000000000005017         push       rbp
0000000000005018         push       rbx
0000000000005019         mov        rbx, rdi
000000000000501c         mov        r12, rdx
000000000000501f         sub        rsp, 0x18
0000000000005023         mov        rax, qword [fs:0x28]
000000000000502c         mov        qword [rsp+0x38+var_30], rax
0000000000005031         xor        eax, eax
0000000000005033         lea        rax, qword [rsp+0x38+var_34]
0000000000005038         test       rdi, rdi
000000000000503b         cmove      rbx, rax
000000000000503f         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000005042         call       j_mbrtowc                                   ; mbrtowc
0000000000005047         cmp        rax, 0xfffffffffffffffd
000000000000504b         mov        rbp, rax
000000000000504e         jbe        loc_5070

0000000000005050         test       r12, r12
0000000000005053         je         loc_5070

0000000000005055         xor        edi, edi
0000000000005057         call       hard_locale                                 ; hard_locale
000000000000505c         test       al, al
000000000000505e         jne        loc_5070

0000000000005060         movzx      eax, byte [r13]
0000000000005065         mov        ebp, 0x1
000000000000506a         mov        dword [rbx], eax
000000000000506c         nop        dword [rax]

                     loc_5070:
0000000000005070         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000005075         xor        rdx, qword [fs:0x28]
000000000000507e         mov        rax, rbp
0000000000005081         jne        loc_508e

0000000000005083         add        rsp, 0x18
0000000000005087         pop        rbx
0000000000005088         pop        rbp
0000000000005089         pop        r12
000000000000508b         pop        r13
000000000000508d         ret
                        ; endp

                     loc_508e:
000000000000508e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000005093         align      32                                          ; End of unwind block (FDE at 0x6d64)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
00000000000050a0         push       r12                                         ; Begin of unwind block (FDE at 0x6da4), CODE XREF=close_stdout+13, close_stdout+51
00000000000050a2         push       rbp
00000000000050a3         mov        rbp, rdi
00000000000050a6         push       rbx
00000000000050a7         call       j___fpending                                ; __fpending
00000000000050ac         mov        ebx, dword [rbp]
00000000000050af         mov        rdi, rbp
00000000000050b2         mov        r12, rax
00000000000050b5         call       rpl_fclose                                  ; rpl_fclose
00000000000050ba         and        ebx, 0x20
00000000000050bd         test       ebx, ebx
00000000000050bf         jne        loc_50d8

00000000000050c1         test       eax, eax
00000000000050c3         je         loc_50cf

00000000000050c5         test       r12, r12
00000000000050c8         mov        eax, 0xffffffff
00000000000050cd         je         loc_5108

                     loc_50cf:
00000000000050cf         pop        rbx                                         ; CODE XREF=close_stream+35
00000000000050d0         pop        rbp
00000000000050d1         pop        r12
00000000000050d3         ret
                        ; endp
00000000000050d4         align      8

                     loc_50d8:
00000000000050d8         test       eax, eax                                    ; CODE XREF=close_stream+31
00000000000050da         jne        loc_50f8

00000000000050dc         call       j___errno_location                          ; __errno_location
00000000000050e1         mov        dword [rax], 0x0
00000000000050e7         mov        eax, 0xffffffff
00000000000050ec         pop        rbx
00000000000050ed         pop        rbp
00000000000050ee         pop        r12
00000000000050f0         ret
                        ; endp
00000000000050f1         align      8

                     loc_50f8:
00000000000050f8         pop        rbx                                         ; CODE XREF=close_stream+58
00000000000050f9         mov        eax, 0xffffffff
00000000000050fe         pop        rbp
00000000000050ff         pop        r12
0000000000005101         ret
                        ; endp
0000000000005102         align      8

                     loc_5108:
0000000000005108         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
000000000000510d         cmp        dword [rax], 0x9
0000000000005110         pop        rbx
0000000000005111         pop        rbp
0000000000005112         pop        r12
0000000000005114         setne      al
0000000000005117         movzx      eax, al
000000000000511a         neg        eax
000000000000511c         ret
                        ; endp
000000000000511d         align      32                                          ; End of unwind block (FDE at 0x6da4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000005120         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x6df4), CODE XREF=rpl_mbrtowc+71
0000000000005124         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000005126         call       j_setlocale                                 ; setlocale
000000000000512b         mov        rdx, rax
000000000000512e         mov        eax, 0x1
0000000000005133         test       rdx, rdx
0000000000005136         je         loc_5155

0000000000005138         lea        rdi, qword [__PRETTY_FUNCTION__.4162+11]    ; 0x604b
000000000000513f         mov        ecx, 0x2
0000000000005144         mov        rsi, rdx
0000000000005147         rep  cmpsb byte [rsi], byte [rdi]
0000000000005149         seta       cl
000000000000514c         sbb        cl, 0x0
000000000000514f         xor        eax, eax
0000000000005151         test       cl, cl
0000000000005153         jne        loc_5160

                     loc_5155:
0000000000005155         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000005159         ret
                        ; endp
000000000000515a         align      32

                     loc_5160:
0000000000005160         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000005167         mov        ecx, 0x6
000000000000516c         mov        rsi, rdx
000000000000516f         rep  cmpsb byte [rsi], byte [rdi]
0000000000005171         seta       al
0000000000005174         sbb        al, 0x0
0000000000005176         test       al, al
0000000000005178         setne      al
000000000000517b         add        rsp, 0x8
000000000000517f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000005180         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0x6df4), Begin of unwind block (FDE at 0x6e14), CODE XREF=gettext_quote.part.1+11
0000000000005184         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000005189         call       j_nl_langinfo                               ; nl_langinfo
000000000000518e         test       rax, rax
0000000000005191         je         loc_51b0

0000000000005193         cmp        byte [rax], 0x0
0000000000005196         lea        rdx, qword [aAscii]                         ; "ASCII"
000000000000519d         cmove      rax, rdx
00000000000051a1         add        rsp, 0x8
00000000000051a5         ret
                        ; endp
00000000000051a6         align      16

                     loc_51b0:
00000000000051b0         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
00000000000051b7         add        rsp, 0x8
00000000000051bb         ret
                        ; endp
00000000000051bc         align      64                                          ; End of unwind block (FDE at 0x6e14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
00000000000051c0         push       r15                                         ; Begin of unwind block (FDE at 0x6e34), DATA XREF=_start+22
00000000000051c2         push       r14
00000000000051c4         mov        r15, rdx
00000000000051c7         push       r13
00000000000051c9         push       r12
00000000000051cb         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
00000000000051d2         push       rbp
00000000000051d3         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
00000000000051da         push       rbx
00000000000051db         mov        r13d, edi
00000000000051de         mov        r14, rsi
00000000000051e1         sub        rbp, r12
00000000000051e4         sub        rsp, 0x8
00000000000051e8         sar        rbp, 0x3
00000000000051ec         call       _init                                       ; _init
00000000000051f1         test       rbp, rbp
00000000000051f4         je         loc_5216

00000000000051f6         xor        ebx, ebx
00000000000051f8         nop        dword [rax+rax]

                     loc_5200:
0000000000005200         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000005203         mov        rsi, r14
0000000000005206         mov        edi, r13d
0000000000005209         call       qword [r12+rbx*8]
000000000000520d         add        rbx, 0x1
0000000000005211         cmp        rbp, rbx
0000000000005214         jne        loc_5200

                     loc_5216:
0000000000005216         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
000000000000521a         pop        rbx
000000000000521b         pop        rbp
000000000000521c         pop        r12
000000000000521e         pop        r13
0000000000005220         pop        r14
0000000000005222         pop        r15
0000000000005224         ret
                        ; endp
0000000000005225         align      16                                          ; End of unwind block (FDE at 0x6e34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000005230         ret                                                    ; Begin of unwind block (FDE at 0x6e7c), DATA XREF=_start+15
                        ; endp
0000000000005232         align      64                                          ; End of unwind block (FDE at 0x6e7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000005240         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x6e94), __dso_handle, CODE XREF=main+105
0000000000005247         xor        esi, esi
0000000000005249         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
000000000000524e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x6e94)
000000000000524f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x5250; 0x5259[ (9 bytes)
        ; File offset : [21072; 21081[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000005250         sub        rsp, 0x8
0000000000005254         add        rsp, 0x8
0000000000005258         ret
                        ; endp
0000000000005259         db  0x00 ; '.'
000000000000525a         db  0x00 ; '.'
000000000000525b         db  0x00 ; '.'
000000000000525c         db  0x00 ; '.'
000000000000525d         db  0x00 ; '.'
000000000000525e         db  0x00 ; '.'
000000000000525f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x5260; 0x6059[ (3577 bytes)
        ; File offset : [21088; 24665[ (3577 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000005260         db  0x01 ; '.'
0000000000005261         db  0x00 ; '.'
0000000000005262         db  0x02 ; '.'
0000000000005263         db  0x00 ; '.'
0000000000005264         db  0x66 ; 'f'                                         ; DATA XREF=main+268, usage+342, usage+660, usage+844, usage+863, usage+897
0000000000005265         db  0x6f ; 'o'
0000000000005266         db  0x6c ; 'l'
0000000000005267         db  0x64 ; 'd'
0000000000005268         db  0x00 ; '.'
0000000000005269         db  0x5b ; '['                                         ; DATA XREF=usage+354
000000000000526a         db  0x00 ; '.'
                     aTestInvocation:
000000000000526b         db         "test invocation", 0                        ; DATA XREF=usage+393
                     aMulticallInvoc:
000000000000527b         db         "Multi-call invocation", 0                  ; DATA XREF=usage+441
                     aSha224sum:
0000000000005291         db         "sha224sum", 0                              ; DATA XREF=usage+458
                     aSha2Utilities:
000000000000529b         db         "sha2 utilities", 0                         ; DATA XREF=usage+470
                     aSha256sum:
00000000000052aa         db         "sha256sum", 0                              ; DATA XREF=usage+361
                     aSha384sum:
00000000000052b4         db         "sha384sum", 0                              ; DATA XREF=usage+405
                     aSha512sum:
00000000000052be         db         "sha512sum", 0                              ; DATA XREF=usage+429
                     aNsOnlineHelpSn:
00000000000052c8         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+546
00000000000052df         db  0x47 ; 'G'                                         ; DATA XREF=main+261, usage+574, usage+767, emit_bug_reporting_address+68
00000000000052e0         db  0x4e ; 'N'
00000000000052e1         db  0x55 ; 'U'
00000000000052e2         db  0x20 ; ' '
                     aCoreutils:
00000000000052e3         db         "coreutils", 0                              ; DATA XREF=main+74, main+86, usage+417
00000000000052ed         db  0x65 ; 'e'                                         ; DATA XREF=usage+613, usage+806
00000000000052ee         db  0x6e ; 'n'
00000000000052ef         db  0x5f ; '_'
00000000000052f0         db  0x00 ; '.'
                     aFullDocumentat:
00000000000052f1         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+641, usage+830
                     aUsrlocalsharel:
000000000000530c         db         "/usr/local/share/locale", 0                ; DATA XREF=main+67
                     aInvalidNumberO:
0000000000005324         db         "invalid number of columns", 0              ; DATA XREF=main+319
                     aDavidMackenzie:
000000000000533e         db         "David MacKenzie", 0                        ; DATA XREF=main+254
                     aBytes:
000000000000534e         db         "bytes", 0
                     aSpaces:
0000000000005354         db         "spaces", 0
                     aWidth:
000000000000535b         db         "width", 0
                     aHelp:
0000000000005361         db         "help", 0
                     aVersion:
0000000000005366         db         "version", 0
000000000000536e         align      16
                     aTrySHelpForMor:
0000000000005370         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
0000000000005397         align      8
                     aUsageSOptionFi:
0000000000005398         db         "Usage: %s [OPTION]... [FILE]...\n", 0      ; DATA XREF=usage+93
00000000000053b9         align      64
                     aWrapInputLines:
00000000000053c0         db         "Wrap input lines in each FILE, writing to standard output.\n", 0 ; DATA XREF=usage+132
00000000000053fc         align      1024
                     aNwithNoFileOrW:
0000000000005400         db         "\nWith no FILE, or when FILE is -, read standard input.\n", 0 ; DATA XREF=usage+169
                     aNmandatoryArgu:
0000000000005438         db         "\nMandatory arguments to long options are mandatory for short options too.\n", 0 ; DATA XREF=usage+206
0000000000005483         align      8
                     aBBytesCountByt:
0000000000005488         db         "  -b, --bytes         count bytes rather than columns\n  -s, --spaces        break at spaces\n  -w, --width=WIDTH   use WIDTH columns instead of 80\n", 0 ; DATA XREF=usage+243
000000000000551b         align      32
                     aHelpDisplayThi:
0000000000005520         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+280
000000000000554d         align      16
                     aVersionOutputV:
0000000000005550         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+317
0000000000005586         align      8
                     aHttpswwwgnuorg:
0000000000005588         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+567, usage+667, usage+760, usage+870, emit_bug_reporting_address+61
                     aReportAnyTrans:
00000000000055b0         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+911
00000000000055f7         align      8
                     aOrAvailableLoc:
00000000000055f8         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+710
000000000000562b         db  0x00 ; '.'
000000000000562c         db  0x00 ; '.'
000000000000562d         db  0x00 ; '.'
000000000000562e         db  0x00 ; '.'
000000000000562f         db  0x00 ; '.'
0000000000005630         db  0x00 ; '.'
0000000000005631         db  0x00 ; '.'
0000000000005632         db  0x00 ; '.'
0000000000005633         db  0x00 ; '.'
0000000000005634         db  0x00 ; '.'
0000000000005635         db  0x00 ; '.'
0000000000005636         db  0x00 ; '.'
0000000000005637         db  0x00 ; '.'
0000000000005638         db  0x00 ; '.'
0000000000005639         db  0x00 ; '.'
000000000000563a         db  0x00 ; '.'
000000000000563b         db  0x00 ; '.'
000000000000563c         db  0x00 ; '.'
000000000000563d         db  0x00 ; '.'
000000000000563e         db  0x00 ; '.'
000000000000563f         db  0x00 ; '.'
                     shortopts:
0000000000005640         db  0x62 ; 'b'                                         ; DATA XREF=main+138
0000000000005641         db  0x73 ; 's'
0000000000005642         db  0x77 ; 'w'
0000000000005643         db  0x3a ; ':'
0000000000005644         db  0x30 ; '0'
0000000000005645         db  0x3a ; ':'
0000000000005646         db  0x3a ; ':'
0000000000005647         db  0x31 ; '1'
0000000000005648         db  0x3a ; ':'
0000000000005649         db  0x3a ; ':'
000000000000564a         db  0x32 ; '2'
000000000000564b         db  0x3a ; ':'
000000000000564c         db  0x3a ; ':'
000000000000564d         db  0x33 ; '3'
000000000000564e         db  0x3a ; ':'
000000000000564f         db  0x3a ; ':'
0000000000005650         db  0x34 ; '4'
0000000000005651         db  0x3a ; ':'
0000000000005652         db  0x3a ; ':'
0000000000005653         db  0x35 ; '5'
0000000000005654         db  0x3a ; ':'
0000000000005655         db  0x3a ; ':'
0000000000005656         db  0x36 ; '6'
0000000000005657         db  0x3a ; ':'
0000000000005658         db  0x3a ; ':'
0000000000005659         db  0x37 ; '7'
000000000000565a         db  0x3a ; ':'
000000000000565b         db  0x3a ; ':'
000000000000565c         db  0x38 ; '8'
000000000000565d         db  0x3a ; ':'
000000000000565e         db  0x3a ; ':'
000000000000565f         db  0x39 ; '9'
0000000000005660         db  0x3a ; ':'
0000000000005661         db  0x3a ; ':'
0000000000005662         db  0x00 ; '.'
                     a831:
0000000000005663         db         "8.31", 0                                   ; DATA XREF=Version
                     aWriteError:
0000000000005668         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
0000000000005674         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108, xnumtoumax+125
000000000000567b         align      128
                     aANullArgv0WasP:
0000000000005680         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
00000000000056b8         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
00000000000056c0         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
00000000000056c1         db  0x74 ; 't'
00000000000056c2         db  0x2d ; '-'                                         ; DATA XREF=main+553, main+572, fold_file+32, fold_file+547, fold_file+841
00000000000056c3         db  0x00 ; '.'
00000000000056c4         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
00000000000056c5         db  0x80 ; '.'
00000000000056c6         db  0x98 ; '.'
00000000000056c7         db  0x00 ; '.'
00000000000056c8         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
00000000000056c9         db  0x80 ; '.'
00000000000056ca         db  0x99 ; '.'
00000000000056cb         db  0x00 ; '.'
00000000000056cc         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
00000000000056cd         db  0x07 ; '.'
00000000000056ce         db  0x65 ; 'e'
00000000000056cf         db  0x00 ; '.'
00000000000056d0         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
00000000000056d1         db  0xaf ; '.'
00000000000056d2         db  0x00 ; '.'
00000000000056d3         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_2c90+1451, sub_2c90+1493, sub_3600+13
00000000000056d4         db  0x00 ; '.'
00000000000056d5         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_2c90+132, sub_2c90+1338, sub_2c90+1670, sub_2c90+1697, sub_2c90+2352
00000000000056d6         db  0x00 ; '.'
00000000000056d7         db  0x60 ; '`'                                         ; DATA XREF=sub_2c90+1627, sub_2c90+1654
00000000000056d8         db  0x00 ; '.'
                     aLiteral:
00000000000056d9         db         "literal", 0
                     aShell:
00000000000056e1         db         "shell", 0
                     aShellalways:
00000000000056e7         db         "shell-always", 0
00000000000056f4         db  0x73 ; 's'
00000000000056f5         db  0x68 ; 'h'
00000000000056f6         db  0x65 ; 'e'
00000000000056f7         db  0x6c ; 'l'
00000000000056f8         db  0x6c ; 'l'
00000000000056f9         db  0x2d ; '-'
                     aEscape:
00000000000056fa         db         "escape", 0
                     aShellescapealw:
0000000000005701         db         "shell-escape-always", 0
0000000000005715         db  0x63 ; 'c'
0000000000005716         db  0x00 ; '.'
                     aCmaybe:
0000000000005717         db         "c-maybe", 0
                     aClocale:
000000000000571f         db         "clocale", 0
0000000000005727         align      64
                     switch_table_5740:        // switch_table
0000000000005740         dd         quotearg_buffer_restyled.loc_338a-switch_table_5740, quotearg_buffer_restyled.loc_25e3-switch_table_5740, quotearg_buffer_restyled.loc_35b8-switch_table_5740, quotearg_buffer_restyled.loc_33c4-switch_table_5740 ; switch table used at 0x25e1 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000005750         dd         quotearg_buffer_restyled.loc_31b4-switch_table_5740, quotearg_buffer_restyled.loc_3210-switch_table_5740, quotearg_buffer_restyled.loc_3265-switch_table_5740, quotearg_buffer_restyled.loc_32aa-switch_table_5740
0000000000005760         dd         3 dup (quotearg_buffer_restyled.loc_32e4-switch_table_5740)
000000000000576c         db  0xf4 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000576d         db  0xd1 ; '.'
000000000000576e         db  0xff ; '.'
000000000000576f         db  0xff ; '.'
0000000000005770         db  0xdc ; '.'
0000000000005771         db  0xd2 ; '.'
0000000000005772         db  0xff ; '.'
0000000000005773         db  0xff ; '.'
0000000000005774         db  0xdc ; '.'
0000000000005775         db  0xd2 ; '.'
0000000000005776         db  0xff ; '.'
0000000000005777         db  0xff ; '.'
0000000000005778         db  0xdc ; '.'
0000000000005779         db  0xd2 ; '.'
000000000000577a         db  0xff ; '.'
000000000000577b         db  0xff ; '.'
000000000000577c         db  0xdc ; '.'
000000000000577d         db  0xd2 ; '.'
000000000000577e         db  0xff ; '.'
000000000000577f         db  0xff ; '.'
0000000000005780         db  0xdc ; '.'
0000000000005781         db  0xd2 ; '.'
0000000000005782         db  0xff ; '.'
0000000000005783         db  0xff ; '.'
0000000000005784         db  0xdc ; '.'
0000000000005785         db  0xd2 ; '.'
0000000000005786         db  0xff ; '.'
0000000000005787         db  0xff ; '.'
0000000000005788         db  0x34 ; '4'
0000000000005789         db  0xd2 ; '.'
000000000000578a         db  0xff ; '.'
000000000000578b         db  0xff ; '.'
000000000000578c         db  0x3c ; '<'
000000000000578d         db  0xd1 ; '.'
000000000000578e         db  0xff ; '.'
000000000000578f         db  0xff ; '.'
0000000000005790         db  0xfc ; '.'
0000000000005791         db  0xd0 ; '.'
0000000000005792         db  0xff ; '.'
0000000000005793         db  0xff ; '.'
0000000000005794         db  0xc4 ; '.'
0000000000005795         db  0xd2 ; '.'
0000000000005796         db  0xff ; '.'
0000000000005797         db  0xff ; '.'
0000000000005798         db  0xb4 ; '.'
0000000000005799         db  0xd2 ; '.'
000000000000579a         db  0xff ; '.'
000000000000579b         db  0xff ; '.'
000000000000579c         db  0xa4 ; '.'
000000000000579d         db  0xd2 ; '.'
000000000000579e         db  0xff ; '.'
000000000000579f         db  0xff ; '.'
00000000000057a0         db  0x94 ; '.'
00000000000057a1         db  0xd2 ; '.'
00000000000057a2         db  0xff ; '.'
00000000000057a3         db  0xff ; '.'
00000000000057a4         db  0xdc ; '.'
00000000000057a5         db  0xd2 ; '.'
00000000000057a6         db  0xff ; '.'
00000000000057a7         db  0xff ; '.'
00000000000057a8         db  0xdc ; '.'
00000000000057a9         db  0xd2 ; '.'
00000000000057aa         db  0xff ; '.'
00000000000057ab         db  0xff ; '.'
00000000000057ac         db  0xdc ; '.'
00000000000057ad         db  0xd2 ; '.'
00000000000057ae         db  0xff ; '.'
00000000000057af         db  0xff ; '.'
00000000000057b0         db  0xdc ; '.'
00000000000057b1         db  0xd2 ; '.'
00000000000057b2         db  0xff ; '.'
00000000000057b3         db  0xff ; '.'
00000000000057b4         db  0xdc ; '.'
00000000000057b5         db  0xd2 ; '.'
00000000000057b6         db  0xff ; '.'
00000000000057b7         db  0xff ; '.'
00000000000057b8         db  0xdc ; '.'
00000000000057b9         db  0xd2 ; '.'
00000000000057ba         db  0xff ; '.'
00000000000057bb         db  0xff ; '.'
00000000000057bc         db  0xdc ; '.'
00000000000057bd         db  0xd2 ; '.'
00000000000057be         db  0xff ; '.'
00000000000057bf         db  0xff ; '.'
00000000000057c0         db  0xdc ; '.'
00000000000057c1         db  0xd2 ; '.'
00000000000057c2         db  0xff ; '.'
00000000000057c3         db  0xff ; '.'
00000000000057c4         db  0xdc ; '.'
00000000000057c5         db  0xd2 ; '.'
00000000000057c6         db  0xff ; '.'
00000000000057c7         db  0xff ; '.'
00000000000057c8         db  0xdc ; '.'
00000000000057c9         db  0xd2 ; '.'
00000000000057ca         db  0xff ; '.'
00000000000057cb         db  0xff ; '.'
00000000000057cc         db  0xdc ; '.'
00000000000057cd         db  0xd2 ; '.'
00000000000057ce         db  0xff ; '.'
00000000000057cf         db  0xff ; '.'
00000000000057d0         db  0xdc ; '.'
00000000000057d1         db  0xd2 ; '.'
00000000000057d2         db  0xff ; '.'
00000000000057d3         db  0xff ; '.'
00000000000057d4         db  0xdc ; '.'
00000000000057d5         db  0xd2 ; '.'
00000000000057d6         db  0xff ; '.'
00000000000057d7         db  0xff ; '.'
00000000000057d8         db  0xdc ; '.'
00000000000057d9         db  0xd2 ; '.'
00000000000057da         db  0xff ; '.'
00000000000057db         db  0xff ; '.'
00000000000057dc         db  0xdc ; '.'
00000000000057dd         db  0xd2 ; '.'
00000000000057de         db  0xff ; '.'
00000000000057df         db  0xff ; '.'
00000000000057e0         db  0xdc ; '.'
00000000000057e1         db  0xd2 ; '.'
00000000000057e2         db  0xff ; '.'
00000000000057e3         db  0xff ; '.'
00000000000057e4         db  0xdc ; '.'
00000000000057e5         db  0xd2 ; '.'
00000000000057e6         db  0xff ; '.'
00000000000057e7         db  0xff ; '.'
00000000000057e8         db  0xdc ; '.'
00000000000057e9         db  0xd2 ; '.'
00000000000057ea         db  0xff ; '.'
00000000000057eb         db  0xff ; '.'
00000000000057ec         db  0x84 ; '.'
00000000000057ed         db  0xd2 ; '.'
00000000000057ee         db  0xff ; '.'
00000000000057ef         db  0xff ; '.'
00000000000057f0         db  0x74 ; 't'
00000000000057f1         db  0xd2 ; '.'
00000000000057f2         db  0xff ; '.'
00000000000057f3         db  0xff ; '.'
00000000000057f4         db  0x74 ; 't'
00000000000057f5         db  0xd2 ; '.'
00000000000057f6         db  0xff ; '.'
00000000000057f7         db  0xff ; '.'
00000000000057f8         db  0x44 ; 'D'
00000000000057f9         db  0xd2 ; '.'
00000000000057fa         db  0xff ; '.'
00000000000057fb         db  0xff ; '.'
00000000000057fc         db  0x74 ; 't'
00000000000057fd         db  0xd2 ; '.'
00000000000057fe         db  0xff ; '.'
00000000000057ff         db  0xff ; '.'
0000000000005800         db  0x1c ; '.'
0000000000005801         db  0xd2 ; '.'
0000000000005802         db  0xff ; '.'
0000000000005803         db  0xff ; '.'
0000000000005804         db  0x74 ; 't'
0000000000005805         db  0xd2 ; '.'
0000000000005806         db  0xff ; '.'
0000000000005807         db  0xff ; '.'
0000000000005808         db  0xd7 ; '.'
0000000000005809         db  0xd0 ; '.'
000000000000580a         db  0xff ; '.'
000000000000580b         db  0xff ; '.'
000000000000580c         db  0x74 ; 't'
000000000000580d         db  0xd2 ; '.'
000000000000580e         db  0xff ; '.'
000000000000580f         db  0xff ; '.'
0000000000005810         db  0x74 ; 't'
0000000000005811         db  0xd2 ; '.'
0000000000005812         db  0xff ; '.'
0000000000005813         db  0xff ; '.'
0000000000005814         db  0x74 ; 't'
0000000000005815         db  0xd2 ; '.'
0000000000005816         db  0xff ; '.'
0000000000005817         db  0xff ; '.'
0000000000005818         db  0x1c ; '.'
0000000000005819         db  0xd2 ; '.'
000000000000581a         db  0xff ; '.'
000000000000581b         db  0xff ; '.'
000000000000581c         db  0x1c ; '.'
000000000000581d         db  0xd2 ; '.'
000000000000581e         db  0xff ; '.'
000000000000581f         db  0xff ; '.'
0000000000005820         db  0x1c ; '.'
0000000000005821         db  0xd2 ; '.'
0000000000005822         db  0xff ; '.'
0000000000005823         db  0xff ; '.'
0000000000005824         db  0x1c ; '.'
0000000000005825         db  0xd2 ; '.'
0000000000005826         db  0xff ; '.'
0000000000005827         db  0xff ; '.'
0000000000005828         db  0x1c ; '.'
0000000000005829         db  0xd2 ; '.'
000000000000582a         db  0xff ; '.'
000000000000582b         db  0xff ; '.'
000000000000582c         db  0x1c ; '.'
000000000000582d         db  0xd2 ; '.'
000000000000582e         db  0xff ; '.'
000000000000582f         db  0xff ; '.'
0000000000005830         db  0x1c ; '.'
0000000000005831         db  0xd2 ; '.'
0000000000005832         db  0xff ; '.'
0000000000005833         db  0xff ; '.'
0000000000005834         db  0x1c ; '.'
0000000000005835         db  0xd2 ; '.'
0000000000005836         db  0xff ; '.'
0000000000005837         db  0xff ; '.'
0000000000005838         db  0x1c ; '.'
0000000000005839         db  0xd2 ; '.'
000000000000583a         db  0xff ; '.'
000000000000583b         db  0xff ; '.'
000000000000583c         db  0x1c ; '.'
000000000000583d         db  0xd2 ; '.'
000000000000583e         db  0xff ; '.'
000000000000583f         db  0xff ; '.'
0000000000005840         db  0x1c ; '.'
0000000000005841         db  0xd2 ; '.'
0000000000005842         db  0xff ; '.'
0000000000005843         db  0xff ; '.'
0000000000005844         db  0x1c ; '.'
0000000000005845         db  0xd2 ; '.'
0000000000005846         db  0xff ; '.'
0000000000005847         db  0xff ; '.'
0000000000005848         db  0x1c ; '.'
0000000000005849         db  0xd2 ; '.'
000000000000584a         db  0xff ; '.'
000000000000584b         db  0xff ; '.'
000000000000584c         db  0x1c ; '.'
000000000000584d         db  0xd2 ; '.'
000000000000584e         db  0xff ; '.'
000000000000584f         db  0xff ; '.'
0000000000005850         db  0x1c ; '.'
0000000000005851         db  0xd2 ; '.'
0000000000005852         db  0xff ; '.'
0000000000005853         db  0xff ; '.'
0000000000005854         db  0x1c ; '.'
0000000000005855         db  0xd2 ; '.'
0000000000005856         db  0xff ; '.'
0000000000005857         db  0xff ; '.'
0000000000005858         db  0x74 ; 't'
0000000000005859         db  0xd2 ; '.'
000000000000585a         db  0xff ; '.'
000000000000585b         db  0xff ; '.'
000000000000585c         db  0x74 ; 't'
000000000000585d         db  0xd2 ; '.'
000000000000585e         db  0xff ; '.'
000000000000585f         db  0xff ; '.'
0000000000005860         db  0x74 ; 't'
0000000000005861         db  0xd2 ; '.'
0000000000005862         db  0xff ; '.'
0000000000005863         db  0xff ; '.'
0000000000005864         db  0x74 ; 't'
0000000000005865         db  0xd2 ; '.'
0000000000005866         db  0xff ; '.'
0000000000005867         db  0xff ; '.'
0000000000005868         db  0xa7 ; '.'
0000000000005869         db  0xd0 ; '.'
000000000000586a         db  0xff ; '.'
000000000000586b         db  0xff ; '.'
000000000000586c         db  0xdc ; '.'
000000000000586d         db  0xd2 ; '.'
000000000000586e         db  0xff ; '.'
000000000000586f         db  0xff ; '.'
0000000000005870         db  0x1c ; '.'
0000000000005871         db  0xd2 ; '.'
0000000000005872         db  0xff ; '.'
0000000000005873         db  0xff ; '.'
0000000000005874         db  0x1c ; '.'
0000000000005875         db  0xd2 ; '.'
0000000000005876         db  0xff ; '.'
0000000000005877         db  0xff ; '.'
0000000000005878         db  0x1c ; '.'
0000000000005879         db  0xd2 ; '.'
000000000000587a         db  0xff ; '.'
000000000000587b         db  0xff ; '.'
000000000000587c         db  0x1c ; '.'
000000000000587d         db  0xd2 ; '.'
000000000000587e         db  0xff ; '.'
000000000000587f         db  0xff ; '.'
0000000000005880         db  0x1c ; '.'
0000000000005881         db  0xd2 ; '.'
0000000000005882         db  0xff ; '.'
0000000000005883         db  0xff ; '.'
0000000000005884         db  0x1c ; '.'
0000000000005885         db  0xd2 ; '.'
0000000000005886         db  0xff ; '.'
0000000000005887         db  0xff ; '.'
0000000000005888         db  0x1c ; '.'
0000000000005889         db  0xd2 ; '.'
000000000000588a         db  0xff ; '.'
000000000000588b         db  0xff ; '.'
000000000000588c         db  0x1c ; '.'
000000000000588d         db  0xd2 ; '.'
000000000000588e         db  0xff ; '.'
000000000000588f         db  0xff ; '.'
0000000000005890         db  0x1c ; '.'
0000000000005891         db  0xd2 ; '.'
0000000000005892         db  0xff ; '.'
0000000000005893         db  0xff ; '.'
0000000000005894         db  0x1c ; '.'
0000000000005895         db  0xd2 ; '.'
0000000000005896         db  0xff ; '.'
0000000000005897         db  0xff ; '.'
0000000000005898         db  0x1c ; '.'
0000000000005899         db  0xd2 ; '.'
000000000000589a         db  0xff ; '.'
000000000000589b         db  0xff ; '.'
000000000000589c         db  0x1c ; '.'
000000000000589d         db  0xd2 ; '.'
000000000000589e         db  0xff ; '.'
000000000000589f         db  0xff ; '.'
00000000000058a0         db  0x1c ; '.'
00000000000058a1         db  0xd2 ; '.'
00000000000058a2         db  0xff ; '.'
00000000000058a3         db  0xff ; '.'
00000000000058a4         db  0x1c ; '.'
00000000000058a5         db  0xd2 ; '.'
00000000000058a6         db  0xff ; '.'
00000000000058a7         db  0xff ; '.'
00000000000058a8         db  0x1c ; '.'
00000000000058a9         db  0xd2 ; '.'
00000000000058aa         db  0xff ; '.'
00000000000058ab         db  0xff ; '.'
00000000000058ac         db  0x1c ; '.'
00000000000058ad         db  0xd2 ; '.'
00000000000058ae         db  0xff ; '.'
00000000000058af         db  0xff ; '.'
00000000000058b0         db  0x1c ; '.'
00000000000058b1         db  0xd2 ; '.'
00000000000058b2         db  0xff ; '.'
00000000000058b3         db  0xff ; '.'
00000000000058b4         db  0x1c ; '.'
00000000000058b5         db  0xd2 ; '.'
00000000000058b6         db  0xff ; '.'
00000000000058b7         db  0xff ; '.'
00000000000058b8         db  0x1c ; '.'
00000000000058b9         db  0xd2 ; '.'
00000000000058ba         db  0xff ; '.'
00000000000058bb         db  0xff ; '.'
00000000000058bc         db  0x1c ; '.'
00000000000058bd         db  0xd2 ; '.'
00000000000058be         db  0xff ; '.'
00000000000058bf         db  0xff ; '.'
00000000000058c0         db  0x1c ; '.'
00000000000058c1         db  0xd2 ; '.'
00000000000058c2         db  0xff ; '.'
00000000000058c3         db  0xff ; '.'
00000000000058c4         db  0x1c ; '.'
00000000000058c5         db  0xd2 ; '.'
00000000000058c6         db  0xff ; '.'
00000000000058c7         db  0xff ; '.'
00000000000058c8         db  0x1c ; '.'
00000000000058c9         db  0xd2 ; '.'
00000000000058ca         db  0xff ; '.'
00000000000058cb         db  0xff ; '.'
00000000000058cc         db  0x1c ; '.'
00000000000058cd         db  0xd2 ; '.'
00000000000058ce         db  0xff ; '.'
00000000000058cf         db  0xff ; '.'
00000000000058d0         db  0x1c ; '.'
00000000000058d1         db  0xd2 ; '.'
00000000000058d2         db  0xff ; '.'
00000000000058d3         db  0xff ; '.'
00000000000058d4         db  0x1c ; '.'
00000000000058d5         db  0xd2 ; '.'
00000000000058d6         db  0xff ; '.'
00000000000058d7         db  0xff ; '.'
00000000000058d8         db  0x74 ; 't'
00000000000058d9         db  0xd2 ; '.'
00000000000058da         db  0xff ; '.'
00000000000058db         db  0xff ; '.'
00000000000058dc         db  0x4c ; 'L'
00000000000058dd         db  0xd1 ; '.'
00000000000058de         db  0xff ; '.'
00000000000058df         db  0xff ; '.'
00000000000058e0         db  0x1c ; '.'
00000000000058e1         db  0xd2 ; '.'
00000000000058e2         db  0xff ; '.'
00000000000058e3         db  0xff ; '.'
00000000000058e4         db  0x74 ; 't'
00000000000058e5         db  0xd2 ; '.'
00000000000058e6         db  0xff ; '.'
00000000000058e7         db  0xff ; '.'
00000000000058e8         db  0x1c ; '.'
00000000000058e9         db  0xd2 ; '.'
00000000000058ea         db  0xff ; '.'
00000000000058eb         db  0xff ; '.'
00000000000058ec         db  0x74 ; 't'
00000000000058ed         db  0xd2 ; '.'
00000000000058ee         db  0xff ; '.'
00000000000058ef         db  0xff ; '.'
00000000000058f0         db  0x1c ; '.'
00000000000058f1         db  0xd2 ; '.'
00000000000058f2         db  0xff ; '.'
00000000000058f3         db  0xff ; '.'
00000000000058f4         db  0x1c ; '.'
00000000000058f5         db  0xd2 ; '.'
00000000000058f6         db  0xff ; '.'
00000000000058f7         db  0xff ; '.'
00000000000058f8         db  0x1c ; '.'
00000000000058f9         db  0xd2 ; '.'
00000000000058fa         db  0xff ; '.'
00000000000058fb         db  0xff ; '.'
00000000000058fc         db  0x1c ; '.'
00000000000058fd         db  0xd2 ; '.'
00000000000058fe         db  0xff ; '.'
00000000000058ff         db  0xff ; '.'
0000000000005900         db  0x1c ; '.'
0000000000005901         db  0xd2 ; '.'
0000000000005902         db  0xff ; '.'
0000000000005903         db  0xff ; '.'
0000000000005904         db  0x1c ; '.'
0000000000005905         db  0xd2 ; '.'
0000000000005906         db  0xff ; '.'
0000000000005907         db  0xff ; '.'
0000000000005908         db  0x1c ; '.'
0000000000005909         db  0xd2 ; '.'
000000000000590a         db  0xff ; '.'
000000000000590b         db  0xff ; '.'
000000000000590c         db  0x1c ; '.'
000000000000590d         db  0xd2 ; '.'
000000000000590e         db  0xff ; '.'
000000000000590f         db  0xff ; '.'
0000000000005910         db  0x1c ; '.'
0000000000005911         db  0xd2 ; '.'
0000000000005912         db  0xff ; '.'
0000000000005913         db  0xff ; '.'
0000000000005914         db  0x1c ; '.'
0000000000005915         db  0xd2 ; '.'
0000000000005916         db  0xff ; '.'
0000000000005917         db  0xff ; '.'
0000000000005918         db  0x1c ; '.'
0000000000005919         db  0xd2 ; '.'
000000000000591a         db  0xff ; '.'
000000000000591b         db  0xff ; '.'
000000000000591c         db  0x1c ; '.'
000000000000591d         db  0xd2 ; '.'
000000000000591e         db  0xff ; '.'
000000000000591f         db  0xff ; '.'
0000000000005920         db  0x1c ; '.'
0000000000005921         db  0xd2 ; '.'
0000000000005922         db  0xff ; '.'
0000000000005923         db  0xff ; '.'
0000000000005924         db  0x1c ; '.'
0000000000005925         db  0xd2 ; '.'
0000000000005926         db  0xff ; '.'
0000000000005927         db  0xff ; '.'
0000000000005928         db  0x1c ; '.'
0000000000005929         db  0xd2 ; '.'
000000000000592a         db  0xff ; '.'
000000000000592b         db  0xff ; '.'
000000000000592c         db  0x1c ; '.'
000000000000592d         db  0xd2 ; '.'
000000000000592e         db  0xff ; '.'
000000000000592f         db  0xff ; '.'
0000000000005930         db  0x1c ; '.'
0000000000005931         db  0xd2 ; '.'
0000000000005932         db  0xff ; '.'
0000000000005933         db  0xff ; '.'
0000000000005934         db  0x1c ; '.'
0000000000005935         db  0xd2 ; '.'
0000000000005936         db  0xff ; '.'
0000000000005937         db  0xff ; '.'
0000000000005938         db  0x1c ; '.'
0000000000005939         db  0xd2 ; '.'
000000000000593a         db  0xff ; '.'
000000000000593b         db  0xff ; '.'
000000000000593c         db  0x1c ; '.'
000000000000593d         db  0xd2 ; '.'
000000000000593e         db  0xff ; '.'
000000000000593f         db  0xff ; '.'
0000000000005940         db  0x1c ; '.'
0000000000005941         db  0xd2 ; '.'
0000000000005942         db  0xff ; '.'
0000000000005943         db  0xff ; '.'
0000000000005944         db  0x1c ; '.'
0000000000005945         db  0xd2 ; '.'
0000000000005946         db  0xff ; '.'
0000000000005947         db  0xff ; '.'
0000000000005948         db  0x1c ; '.'
0000000000005949         db  0xd2 ; '.'
000000000000594a         db  0xff ; '.'
000000000000594b         db  0xff ; '.'
000000000000594c         db  0x1c ; '.'
000000000000594d         db  0xd2 ; '.'
000000000000594e         db  0xff ; '.'
000000000000594f         db  0xff ; '.'
0000000000005950         db  0x1c ; '.'
0000000000005951         db  0xd2 ; '.'
0000000000005952         db  0xff ; '.'
0000000000005953         db  0xff ; '.'
0000000000005954         db  0x1c ; '.'
0000000000005955         db  0xd2 ; '.'
0000000000005956         db  0xff ; '.'
0000000000005957         db  0xff ; '.'
0000000000005958         db  0xd7 ; '.'
0000000000005959         db  0xcf ; '.'
000000000000595a         db  0xff ; '.'
000000000000595b         db  0xff ; '.'
000000000000595c         db  0x74 ; 't'
000000000000595d         db  0xd2 ; '.'
000000000000595e         db  0xff ; '.'
000000000000595f         db  0xff ; '.'
0000000000005960         db  0xd7 ; '.'
0000000000005961         db  0xcf ; '.'
0000000000005962         db  0xff ; '.'
0000000000005963         db  0xff ; '.'
0000000000005964         db  0x44 ; 'D'
0000000000005965         db  0xd2 ; '.'
0000000000005966         db  0xff ; '.'
0000000000005967         db  0xff ; '.'
0000000000005968         db  0xc8 ; '.'                                         ; DATA XREF=sub_2a30+137
0000000000005969         db  0xd1 ; '.'
000000000000596a         db  0xff ; '.'
000000000000596b         db  0xff ; '.'
000000000000596c         db  0xd8 ; '.'
000000000000596d         db  0xd0 ; '.'
000000000000596e         db  0xff ; '.'
000000000000596f         db  0xff ; '.'
0000000000005970         db  0xd8 ; '.'
0000000000005971         db  0xd0 ; '.'
0000000000005972         db  0xff ; '.'
0000000000005973         db  0xff ; '.'
0000000000005974         db  0xd8 ; '.'
0000000000005975         db  0xd0 ; '.'
0000000000005976         db  0xff ; '.'
0000000000005977         db  0xff ; '.'
0000000000005978         db  0xd8 ; '.'
0000000000005979         db  0xd0 ; '.'
000000000000597a         db  0xff ; '.'
000000000000597b         db  0xff ; '.'
000000000000597c         db  0xd8 ; '.'
000000000000597d         db  0xd0 ; '.'
000000000000597e         db  0xff ; '.'
000000000000597f         db  0xff ; '.'
0000000000005980         db  0xd8 ; '.'
0000000000005981         db  0xd0 ; '.'
0000000000005982         db  0xff ; '.'
0000000000005983         db  0xff ; '.'
0000000000005984         db  0xb8 ; '.'
0000000000005985         db  0xd1 ; '.'
0000000000005986         db  0xff ; '.'
0000000000005987         db  0xff ; '.'
0000000000005988         db  0x08 ; '.'
0000000000005989         db  0xd3 ; '.'
000000000000598a         db  0xff ; '.'
000000000000598b         db  0xff ; '.'
000000000000598c         db  0xf0 ; '.'
000000000000598d         db  0xd2 ; '.'
000000000000598e         db  0xff ; '.'
000000000000598f         db  0xff ; '.'
0000000000005990         db  0xa0 ; '.'
0000000000005991         db  0xd1 ; '.'
0000000000005992         db  0xff ; '.'
0000000000005993         db  0xff ; '.'
0000000000005994         db  0xe0 ; '.'
0000000000005995         db  0xd2 ; '.'
0000000000005996         db  0xff ; '.'
0000000000005997         db  0xff ; '.'
0000000000005998         db  0x88 ; '.'
0000000000005999         db  0xd1 ; '.'
000000000000599a         db  0xff ; '.'
000000000000599b         db  0xff ; '.'
000000000000599c         db  0xc8 ; '.'
000000000000599d         db  0xd2 ; '.'
000000000000599e         db  0xff ; '.'
000000000000599f         db  0xff ; '.'
00000000000059a0         db  0xd8 ; '.'
00000000000059a1         db  0xd0 ; '.'
00000000000059a2         db  0xff ; '.'
00000000000059a3         db  0xff ; '.'
00000000000059a4         db  0xd8 ; '.'
00000000000059a5         db  0xd0 ; '.'
00000000000059a6         db  0xff ; '.'
00000000000059a7         db  0xff ; '.'
00000000000059a8         db  0xd8 ; '.'
00000000000059a9         db  0xd0 ; '.'
00000000000059aa         db  0xff ; '.'
00000000000059ab         db  0xff ; '.'
00000000000059ac         db  0xd8 ; '.'
00000000000059ad         db  0xd0 ; '.'
00000000000059ae         db  0xff ; '.'
00000000000059af         db  0xff ; '.'
00000000000059b0         db  0xd8 ; '.'
00000000000059b1         db  0xd0 ; '.'
00000000000059b2         db  0xff ; '.'
00000000000059b3         db  0xff ; '.'
00000000000059b4         db  0xd8 ; '.'
00000000000059b5         db  0xd0 ; '.'
00000000000059b6         db  0xff ; '.'
00000000000059b7         db  0xff ; '.'
00000000000059b8         db  0xd8 ; '.'
00000000000059b9         db  0xd0 ; '.'
00000000000059ba         db  0xff ; '.'
00000000000059bb         db  0xff ; '.'
00000000000059bc         db  0xd8 ; '.'
00000000000059bd         db  0xd0 ; '.'
00000000000059be         db  0xff ; '.'
00000000000059bf         db  0xff ; '.'
00000000000059c0         db  0xd8 ; '.'
00000000000059c1         db  0xd0 ; '.'
00000000000059c2         db  0xff ; '.'
00000000000059c3         db  0xff ; '.'
00000000000059c4         db  0xd8 ; '.'
00000000000059c5         db  0xd0 ; '.'
00000000000059c6         db  0xff ; '.'
00000000000059c7         db  0xff ; '.'
00000000000059c8         db  0xd8 ; '.'
00000000000059c9         db  0xd0 ; '.'
00000000000059ca         db  0xff ; '.'
00000000000059cb         db  0xff ; '.'
00000000000059cc         db  0xd8 ; '.'
00000000000059cd         db  0xd0 ; '.'
00000000000059ce         db  0xff ; '.'
00000000000059cf         db  0xff ; '.'
00000000000059d0         db  0xd8 ; '.'
00000000000059d1         db  0xd0 ; '.'
00000000000059d2         db  0xff ; '.'
00000000000059d3         db  0xff ; '.'
00000000000059d4         db  0xd8 ; '.'
00000000000059d5         db  0xd0 ; '.'
00000000000059d6         db  0xff ; '.'
00000000000059d7         db  0xff ; '.'
00000000000059d8         db  0xd8 ; '.'
00000000000059d9         db  0xd0 ; '.'
00000000000059da         db  0xff ; '.'
00000000000059db         db  0xff ; '.'
00000000000059dc         db  0xd8 ; '.'
00000000000059dd         db  0xd0 ; '.'
00000000000059de         db  0xff ; '.'
00000000000059df         db  0xff ; '.'
00000000000059e0         db  0xd8 ; '.'
00000000000059e1         db  0xd0 ; '.'
00000000000059e2         db  0xff ; '.'
00000000000059e3         db  0xff ; '.'
00000000000059e4         db  0xd8 ; '.'
00000000000059e5         db  0xd0 ; '.'
00000000000059e6         db  0xff ; '.'
00000000000059e7         db  0xff ; '.'
00000000000059e8         db  0xb0 ; '.'
00000000000059e9         db  0xd2 ; '.'
00000000000059ea         db  0xff ; '.'
00000000000059eb         db  0xff ; '.'
00000000000059ec         db  0x98 ; '.'
00000000000059ed         db  0xd2 ; '.'
00000000000059ee         db  0xff ; '.'
00000000000059ef         db  0xff ; '.'
00000000000059f0         db  0x98 ; '.'
00000000000059f1         db  0xd2 ; '.'
00000000000059f2         db  0xff ; '.'
00000000000059f3         db  0xff ; '.'
00000000000059f4         db  0x80 ; '.'
00000000000059f5         db  0xd2 ; '.'
00000000000059f6         db  0xff ; '.'
00000000000059f7         db  0xff ; '.'
00000000000059f8         db  0x98 ; '.'
00000000000059f9         db  0xd2 ; '.'
00000000000059fa         db  0xff ; '.'
00000000000059fb         db  0xff ; '.'
00000000000059fc         db  0x68 ; 'h'
00000000000059fd         db  0xd2 ; '.'
00000000000059fe         db  0xff ; '.'
00000000000059ff         db  0xff ; '.'
0000000000005a00         db  0x98 ; '.'
0000000000005a01         db  0xd2 ; '.'
0000000000005a02         db  0xff ; '.'
0000000000005a03         db  0xff ; '.'
0000000000005a04         db  0xd8 ; '.'
0000000000005a05         db  0xce ; '.'
0000000000005a06         db  0xff ; '.'
0000000000005a07         db  0xff ; '.'
0000000000005a08         db  0x98 ; '.'
0000000000005a09         db  0xd2 ; '.'
0000000000005a0a         db  0xff ; '.'
0000000000005a0b         db  0xff ; '.'
0000000000005a0c         db  0x98 ; '.'
0000000000005a0d         db  0xd2 ; '.'
0000000000005a0e         db  0xff ; '.'
0000000000005a0f         db  0xff ; '.'
0000000000005a10         db  0x98 ; '.'
0000000000005a11         db  0xd2 ; '.'
0000000000005a12         db  0xff ; '.'
0000000000005a13         db  0xff ; '.'
0000000000005a14         db  0x68 ; 'h'
0000000000005a15         db  0xd2 ; '.'
0000000000005a16         db  0xff ; '.'
0000000000005a17         db  0xff ; '.'
0000000000005a18         db  0x68 ; 'h'
0000000000005a19         db  0xd2 ; '.'
0000000000005a1a         db  0xff ; '.'
0000000000005a1b         db  0xff ; '.'
0000000000005a1c         db  0x68 ; 'h'
0000000000005a1d         db  0xd2 ; '.'
0000000000005a1e         db  0xff ; '.'
0000000000005a1f         db  0xff ; '.'
0000000000005a20         db  0x68 ; 'h'
0000000000005a21         db  0xd2 ; '.'
0000000000005a22         db  0xff ; '.'
0000000000005a23         db  0xff ; '.'
0000000000005a24         db  0x68 ; 'h'
0000000000005a25         db  0xd2 ; '.'
0000000000005a26         db  0xff ; '.'
0000000000005a27         db  0xff ; '.'
0000000000005a28         db  0x68 ; 'h'
0000000000005a29         db  0xd2 ; '.'
0000000000005a2a         db  0xff ; '.'
0000000000005a2b         db  0xff ; '.'
0000000000005a2c         db  0x68 ; 'h'
0000000000005a2d         db  0xd2 ; '.'
0000000000005a2e         db  0xff ; '.'
0000000000005a2f         db  0xff ; '.'
0000000000005a30         db  0x68 ; 'h'
0000000000005a31         db  0xd2 ; '.'
0000000000005a32         db  0xff ; '.'
0000000000005a33         db  0xff ; '.'
0000000000005a34         db  0x68 ; 'h'
0000000000005a35         db  0xd2 ; '.'
0000000000005a36         db  0xff ; '.'
0000000000005a37         db  0xff ; '.'
0000000000005a38         db  0x68 ; 'h'
0000000000005a39         db  0xd2 ; '.'
0000000000005a3a         db  0xff ; '.'
0000000000005a3b         db  0xff ; '.'
0000000000005a3c         db  0x68 ; 'h'
0000000000005a3d         db  0xd2 ; '.'
0000000000005a3e         db  0xff ; '.'
0000000000005a3f         db  0xff ; '.'
0000000000005a40         db  0x68 ; 'h'
0000000000005a41         db  0xd2 ; '.'
0000000000005a42         db  0xff ; '.'
0000000000005a43         db  0xff ; '.'
0000000000005a44         db  0x68 ; 'h'
0000000000005a45         db  0xd2 ; '.'
0000000000005a46         db  0xff ; '.'
0000000000005a47         db  0xff ; '.'
0000000000005a48         db  0x68 ; 'h'
0000000000005a49         db  0xd2 ; '.'
0000000000005a4a         db  0xff ; '.'
0000000000005a4b         db  0xff ; '.'
0000000000005a4c         db  0x68 ; 'h'
0000000000005a4d         db  0xd2 ; '.'
0000000000005a4e         db  0xff ; '.'
0000000000005a4f         db  0xff ; '.'
0000000000005a50         db  0x68 ; 'h'
0000000000005a51         db  0xd2 ; '.'
0000000000005a52         db  0xff ; '.'
0000000000005a53         db  0xff ; '.'
0000000000005a54         db  0x98 ; '.'
0000000000005a55         db  0xd2 ; '.'
0000000000005a56         db  0xff ; '.'
0000000000005a57         db  0xff ; '.'
0000000000005a58         db  0x98 ; '.'
0000000000005a59         db  0xd2 ; '.'
0000000000005a5a         db  0xff ; '.'
0000000000005a5b         db  0xff ; '.'
0000000000005a5c         db  0x98 ; '.'
0000000000005a5d         db  0xd2 ; '.'
0000000000005a5e         db  0xff ; '.'
0000000000005a5f         db  0xff ; '.'
0000000000005a60         db  0x98 ; '.'
0000000000005a61         db  0xd2 ; '.'
0000000000005a62         db  0xff ; '.'
0000000000005a63         db  0xff ; '.'
0000000000005a64         db  0xa8 ; '.'
0000000000005a65         db  0xce ; '.'
0000000000005a66         db  0xff ; '.'
0000000000005a67         db  0xff ; '.'
0000000000005a68         db  0xd8 ; '.'
0000000000005a69         db  0xd0 ; '.'
0000000000005a6a         db  0xff ; '.'
0000000000005a6b         db  0xff ; '.'
0000000000005a6c         db  0x68 ; 'h'
0000000000005a6d         db  0xd2 ; '.'
0000000000005a6e         db  0xff ; '.'
0000000000005a6f         db  0xff ; '.'
0000000000005a70         db  0x68 ; 'h'
0000000000005a71         db  0xd2 ; '.'
0000000000005a72         db  0xff ; '.'
0000000000005a73         db  0xff ; '.'
0000000000005a74         db  0x68 ; 'h'
0000000000005a75         db  0xd2 ; '.'
0000000000005a76         db  0xff ; '.'
0000000000005a77         db  0xff ; '.'
0000000000005a78         db  0x68 ; 'h'
0000000000005a79         db  0xd2 ; '.'
0000000000005a7a         db  0xff ; '.'
0000000000005a7b         db  0xff ; '.'
0000000000005a7c         db  0x68 ; 'h'
0000000000005a7d         db  0xd2 ; '.'
0000000000005a7e         db  0xff ; '.'
0000000000005a7f         db  0xff ; '.'
0000000000005a80         db  0x68 ; 'h'
0000000000005a81         db  0xd2 ; '.'
0000000000005a82         db  0xff ; '.'
0000000000005a83         db  0xff ; '.'
0000000000005a84         db  0x68 ; 'h'
0000000000005a85         db  0xd2 ; '.'
0000000000005a86         db  0xff ; '.'
0000000000005a87         db  0xff ; '.'
0000000000005a88         db  0x68 ; 'h'
0000000000005a89         db  0xd2 ; '.'
0000000000005a8a         db  0xff ; '.'
0000000000005a8b         db  0xff ; '.'
0000000000005a8c         db  0x68 ; 'h'
0000000000005a8d         db  0xd2 ; '.'
0000000000005a8e         db  0xff ; '.'
0000000000005a8f         db  0xff ; '.'
0000000000005a90         db  0x68 ; 'h'
0000000000005a91         db  0xd2 ; '.'
0000000000005a92         db  0xff ; '.'
0000000000005a93         db  0xff ; '.'
0000000000005a94         db  0x68 ; 'h'
0000000000005a95         db  0xd2 ; '.'
0000000000005a96         db  0xff ; '.'
0000000000005a97         db  0xff ; '.'
0000000000005a98         db  0x68 ; 'h'
0000000000005a99         db  0xd2 ; '.'
0000000000005a9a         db  0xff ; '.'
0000000000005a9b         db  0xff ; '.'
0000000000005a9c         db  0x68 ; 'h'
0000000000005a9d         db  0xd2 ; '.'
0000000000005a9e         db  0xff ; '.'
0000000000005a9f         db  0xff ; '.'
0000000000005aa0         db  0x68 ; 'h'
0000000000005aa1         db  0xd2 ; '.'
0000000000005aa2         db  0xff ; '.'
0000000000005aa3         db  0xff ; '.'
0000000000005aa4         db  0x68 ; 'h'
0000000000005aa5         db  0xd2 ; '.'
0000000000005aa6         db  0xff ; '.'
0000000000005aa7         db  0xff ; '.'
0000000000005aa8         db  0x68 ; 'h'
0000000000005aa9         db  0xd2 ; '.'
0000000000005aaa         db  0xff ; '.'
0000000000005aab         db  0xff ; '.'
0000000000005aac         db  0x68 ; 'h'
0000000000005aad         db  0xd2 ; '.'
0000000000005aae         db  0xff ; '.'
0000000000005aaf         db  0xff ; '.'
0000000000005ab0         db  0x68 ; 'h'
0000000000005ab1         db  0xd2 ; '.'
0000000000005ab2         db  0xff ; '.'
0000000000005ab3         db  0xff ; '.'
0000000000005ab4         db  0x68 ; 'h'
0000000000005ab5         db  0xd2 ; '.'
0000000000005ab6         db  0xff ; '.'
0000000000005ab7         db  0xff ; '.'
0000000000005ab8         db  0x68 ; 'h'
0000000000005ab9         db  0xd2 ; '.'
0000000000005aba         db  0xff ; '.'
0000000000005abb         db  0xff ; '.'
0000000000005abc         db  0x68 ; 'h'
0000000000005abd         db  0xd2 ; '.'
0000000000005abe         db  0xff ; '.'
0000000000005abf         db  0xff ; '.'
0000000000005ac0         db  0x68 ; 'h'
0000000000005ac1         db  0xd2 ; '.'
0000000000005ac2         db  0xff ; '.'
0000000000005ac3         db  0xff ; '.'
0000000000005ac4         db  0x68 ; 'h'
0000000000005ac5         db  0xd2 ; '.'
0000000000005ac6         db  0xff ; '.'
0000000000005ac7         db  0xff ; '.'
0000000000005ac8         db  0x68 ; 'h'
0000000000005ac9         db  0xd2 ; '.'
0000000000005aca         db  0xff ; '.'
0000000000005acb         db  0xff ; '.'
0000000000005acc         db  0x68 ; 'h'
0000000000005acd         db  0xd2 ; '.'
0000000000005ace         db  0xff ; '.'
0000000000005acf         db  0xff ; '.'
0000000000005ad0         db  0x68 ; 'h'
0000000000005ad1         db  0xd2 ; '.'
0000000000005ad2         db  0xff ; '.'
0000000000005ad3         db  0xff ; '.'
0000000000005ad4         db  0x98 ; '.'
0000000000005ad5         db  0xd2 ; '.'
0000000000005ad6         db  0xff ; '.'
0000000000005ad7         db  0xff ; '.'
0000000000005ad8         db  0x68 ; 'h'
0000000000005ad9         db  0xd1 ; '.'
0000000000005ada         db  0xff ; '.'
0000000000005adb         db  0xff ; '.'
0000000000005adc         db  0x68 ; 'h'
0000000000005add         db  0xd2 ; '.'
0000000000005ade         db  0xff ; '.'
0000000000005adf         db  0xff ; '.'
0000000000005ae0         db  0x98 ; '.'
0000000000005ae1         db  0xd2 ; '.'
0000000000005ae2         db  0xff ; '.'
0000000000005ae3         db  0xff ; '.'
0000000000005ae4         db  0x68 ; 'h'
0000000000005ae5         db  0xd2 ; '.'
0000000000005ae6         db  0xff ; '.'
0000000000005ae7         db  0xff ; '.'
0000000000005ae8         db  0x98 ; '.'
0000000000005ae9         db  0xd2 ; '.'
0000000000005aea         db  0xff ; '.'
0000000000005aeb         db  0xff ; '.'
0000000000005aec         db  0x68 ; 'h'
0000000000005aed         db  0xd2 ; '.'
0000000000005aee         db  0xff ; '.'
0000000000005aef         db  0xff ; '.'
0000000000005af0         db  0x68 ; 'h'
0000000000005af1         db  0xd2 ; '.'
0000000000005af2         db  0xff ; '.'
0000000000005af3         db  0xff ; '.'
0000000000005af4         db  0x68 ; 'h'
0000000000005af5         db  0xd2 ; '.'
0000000000005af6         db  0xff ; '.'
0000000000005af7         db  0xff ; '.'
0000000000005af8         db  0x68 ; 'h'
0000000000005af9         db  0xd2 ; '.'
0000000000005afa         db  0xff ; '.'
0000000000005afb         db  0xff ; '.'
0000000000005afc         db  0x68 ; 'h'
0000000000005afd         db  0xd2 ; '.'
0000000000005afe         db  0xff ; '.'
0000000000005aff         db  0xff ; '.'
0000000000005b00         db  0x68 ; 'h'
0000000000005b01         db  0xd2 ; '.'
0000000000005b02         db  0xff ; '.'
0000000000005b03         db  0xff ; '.'
0000000000005b04         db  0x68 ; 'h'
0000000000005b05         db  0xd2 ; '.'
0000000000005b06         db  0xff ; '.'
0000000000005b07         db  0xff ; '.'
0000000000005b08         db  0x68 ; 'h'
0000000000005b09         db  0xd2 ; '.'
0000000000005b0a         db  0xff ; '.'
0000000000005b0b         db  0xff ; '.'
0000000000005b0c         db  0x68 ; 'h'
0000000000005b0d         db  0xd2 ; '.'
0000000000005b0e         db  0xff ; '.'
0000000000005b0f         db  0xff ; '.'
0000000000005b10         db  0x68 ; 'h'
0000000000005b11         db  0xd2 ; '.'
0000000000005b12         db  0xff ; '.'
0000000000005b13         db  0xff ; '.'
0000000000005b14         db  0x68 ; 'h'
0000000000005b15         db  0xd2 ; '.'
0000000000005b16         db  0xff ; '.'
0000000000005b17         db  0xff ; '.'
0000000000005b18         db  0x68 ; 'h'
0000000000005b19         db  0xd2 ; '.'
0000000000005b1a         db  0xff ; '.'
0000000000005b1b         db  0xff ; '.'
0000000000005b1c         db  0x68 ; 'h'
0000000000005b1d         db  0xd2 ; '.'
0000000000005b1e         db  0xff ; '.'
0000000000005b1f         db  0xff ; '.'
0000000000005b20         db  0x68 ; 'h'
0000000000005b21         db  0xd2 ; '.'
0000000000005b22         db  0xff ; '.'
0000000000005b23         db  0xff ; '.'
0000000000005b24         db  0x68 ; 'h'
0000000000005b25         db  0xd2 ; '.'
0000000000005b26         db  0xff ; '.'
0000000000005b27         db  0xff ; '.'
0000000000005b28         db  0x68 ; 'h'
0000000000005b29         db  0xd2 ; '.'
0000000000005b2a         db  0xff ; '.'
0000000000005b2b         db  0xff ; '.'
0000000000005b2c         db  0x68 ; 'h'
0000000000005b2d         db  0xd2 ; '.'
0000000000005b2e         db  0xff ; '.'
0000000000005b2f         db  0xff ; '.'
0000000000005b30         db  0x68 ; 'h'
0000000000005b31         db  0xd2 ; '.'
0000000000005b32         db  0xff ; '.'
0000000000005b33         db  0xff ; '.'
0000000000005b34         db  0x68 ; 'h'
0000000000005b35         db  0xd2 ; '.'
0000000000005b36         db  0xff ; '.'
0000000000005b37         db  0xff ; '.'
0000000000005b38         db  0x68 ; 'h'
0000000000005b39         db  0xd2 ; '.'
0000000000005b3a         db  0xff ; '.'
0000000000005b3b         db  0xff ; '.'
0000000000005b3c         db  0x68 ; 'h'
0000000000005b3d         db  0xd2 ; '.'
0000000000005b3e         db  0xff ; '.'
0000000000005b3f         db  0xff ; '.'
0000000000005b40         db  0x68 ; 'h'
0000000000005b41         db  0xd2 ; '.'
0000000000005b42         db  0xff ; '.'
0000000000005b43         db  0xff ; '.'
0000000000005b44         db  0x68 ; 'h'
0000000000005b45         db  0xd2 ; '.'
0000000000005b46         db  0xff ; '.'
0000000000005b47         db  0xff ; '.'
0000000000005b48         db  0x68 ; 'h'
0000000000005b49         db  0xd2 ; '.'
0000000000005b4a         db  0xff ; '.'
0000000000005b4b         db  0xff ; '.'
0000000000005b4c         db  0x68 ; 'h'
0000000000005b4d         db  0xd2 ; '.'
0000000000005b4e         db  0xff ; '.'
0000000000005b4f         db  0xff ; '.'
0000000000005b50         db  0x68 ; 'h'
0000000000005b51         db  0xd2 ; '.'
0000000000005b52         db  0xff ; '.'
0000000000005b53         db  0xff ; '.'
0000000000005b54         db  0xd8 ; '.'
0000000000005b55         db  0xcd ; '.'
0000000000005b56         db  0xff ; '.'
0000000000005b57         db  0xff ; '.'
0000000000005b58         db  0x98 ; '.'
0000000000005b59         db  0xd2 ; '.'
0000000000005b5a         db  0xff ; '.'
0000000000005b5b         db  0xff ; '.'
0000000000005b5c         db  0xd8 ; '.'
0000000000005b5d         db  0xcd ; '.'
0000000000005b5e         db  0xff ; '.'
0000000000005b5f         db  0xff ; '.'
0000000000005b60         db  0x80 ; '.'
0000000000005b61         db  0xd2 ; '.'
0000000000005b62         db  0xff ; '.'
0000000000005b63         db  0xff ; '.'
0000000000005b64         db  0x00 ; '.'
0000000000005b65         db  0x00 ; '.'
0000000000005b66         db  0x00 ; '.'
0000000000005b67         db  0x00 ; '.'
0000000000005b68         db  0x00 ; '.'
0000000000005b69         db  0x00 ; '.'
0000000000005b6a         db  0x00 ; '.'
0000000000005b6b         db  0x00 ; '.'
0000000000005b6c         db  0x00 ; '.'
0000000000005b6d         db  0x00 ; '.'
0000000000005b6e         db  0x00 ; '.'
0000000000005b6f         db  0x00 ; '.'
0000000000005b70         db  0x00 ; '.'
0000000000005b71         db  0x00 ; '.'
0000000000005b72         db  0x00 ; '.'
0000000000005b73         db  0x00 ; '.'
0000000000005b74         db  0x00 ; '.'
0000000000005b75         db  0x00 ; '.'
0000000000005b76         db  0x00 ; '.'
0000000000005b77         db  0x00 ; '.'
0000000000005b78         db  0x00 ; '.'
0000000000005b79         db  0x00 ; '.'
0000000000005b7a         db  0x00 ; '.'
0000000000005b7b         db  0x00 ; '.'
0000000000005b7c         db  0x00 ; '.'
0000000000005b7d         db  0x00 ; '.'
0000000000005b7e         db  0x00 ; '.'
0000000000005b7f         db  0x00 ; '.'
                     quoting_style_vals:
0000000000005b80         db  0x00 ; '.'
0000000000005b81         db  0x00 ; '.'
0000000000005b82         db  0x00 ; '.'
0000000000005b83         db  0x00 ; '.'
0000000000005b84         db  0x01 ; '.'
0000000000005b85         db  0x00 ; '.'
0000000000005b86         db  0x00 ; '.'
0000000000005b87         db  0x00 ; '.'
0000000000005b88         db  0x02 ; '.'
0000000000005b89         db  0x00 ; '.'
0000000000005b8a         db  0x00 ; '.'
0000000000005b8b         db  0x00 ; '.'
0000000000005b8c         db  0x03 ; '.'
0000000000005b8d         db  0x00 ; '.'
0000000000005b8e         db  0x00 ; '.'
0000000000005b8f         db  0x00 ; '.'
0000000000005b90         db  0x04 ; '.'
0000000000005b91         db  0x00 ; '.'
0000000000005b92         db  0x00 ; '.'
0000000000005b93         db  0x00 ; '.'
0000000000005b94         db  0x05 ; '.'
0000000000005b95         db  0x00 ; '.'
0000000000005b96         db  0x00 ; '.'
0000000000005b97         db  0x00 ; '.'
0000000000005b98         db  0x06 ; '.'
0000000000005b99         db  0x00 ; '.'
0000000000005b9a         db  0x00 ; '.'
0000000000005b9b         db  0x00 ; '.'
0000000000005b9c         db  0x07 ; '.'
0000000000005b9d         db  0x00 ; '.'
0000000000005b9e         db  0x00 ; '.'
0000000000005b9f         db  0x00 ; '.'
0000000000005ba0         db  0x08 ; '.'
0000000000005ba1         db  0x00 ; '.'
0000000000005ba2         db  0x00 ; '.'
0000000000005ba3         db  0x00 ; '.'
0000000000005ba4         db  0x09 ; '.'
0000000000005ba5         db  0x00 ; '.'
0000000000005ba6         db  0x00 ; '.'
0000000000005ba7         db  0x00 ; '.'
                     aSSSn:
0000000000005ba8         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
0000000000005bb4         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
0000000000005bbb         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
0000000000005bbc         db  0x43 ; 'C'
0000000000005bbd         db  0x29 ; ')'
0000000000005bbe         db  0x00 ; '.'
                     aWrittenBySn:
0000000000005bbf         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
0000000000005bcf         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
0000000000005be6         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
0000000000005c02         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
0000000000005c17         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
0000000000005c2d         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
0000000000005c41         align      8
                     aNlicenseGplv3G:
0000000000005c48         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
0000000000005d14         align      8
                     aWrittenBySSSna:
0000000000005d18         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_5d38:        // aWrittenBySSSns
0000000000005d38         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
0000000000005d5c         align      32
                     aWrittenBySSSns_5d60:        // aWrittenBySSSns
0000000000005d60         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_5d88:        // aWrittenBySSSns
0000000000005d88         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
0000000000005db4         align      8
                     aWrittenBySSSns_5db8:        // aWrittenBySSSns
0000000000005db8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
0000000000005de8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
0000000000005e1c         align      32
                     aWrittenBySSSns_5e20:        // aWrittenBySSSns
0000000000005e20         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
0000000000005e5c         align      32
                     aGeneralHelpUsi:
0000000000005e60         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
0000000000005ea1         align      4
                     switch_table_5ea4:        // switch_table
0000000000005ea4         dd         version_etc_arn.loc_4216-switch_table_5ea4, version_etc_arn.loc_42a8-switch_table_5ea4, version_etc_arn.loc_42e8-switch_table_5ea4, version_etc_arn.loc_4330-switch_table_5ea4 ; switch table used at 0x4194 containing 10 entries, DATA XREF=version_etc_arn+150
0000000000005eb4         dd         version_etc_arn.loc_4380-switch_table_5ea4, version_etc_arn.loc_43d8-switch_table_5ea4, version_etc_arn.loc_4408-switch_table_5ea4, version_etc_arn.loc_4470-switch_table_5ea4
0000000000005ec4         dd         version_etc_arn.loc_41a0-switch_table_5ea4, version_etc_arn.loc_4250-switch_table_5ea4
0000000000005ecc         align      32
                     version_etc_copyright:
0000000000005ee0         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
0000000000005f0f         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
                     aCoreutils831li:
0000000000005f20         db         "../coreutils-8.31/lib/xstrtol.c", 0        ; DATA XREF=xstrtoumax+908
                     a0StrtolbaseStr:
0000000000005f40         db         "0 <= strtol_base && strtol_base <= 36", 0  ; DATA XREF=xstrtoumax+915
0000000000005f66         align      8
                     switch_table_5f68:        // switch_table
0000000000005f68         dd         xstrtoumax.loc_4df6-switch_table_5f68, 2 dup (xstrtoumax.loc_4cec-switch_table_5f68), xstrtoumax.loc_4dd3-switch_table_5f68, xstrtoumax.loc_4cec-switch_table_5f68 ; switch table used at 0x4ca6 containing 54 entries, DATA XREF=xstrtoumax+452
0000000000005f7c         dd         xstrtoumax.loc_4e0c-switch_table_5f68, 3 dup (xstrtoumax.loc_4cec-switch_table_5f68), xstrtoumax.loc_4d8f-switch_table_5f68, xstrtoumax.loc_4cec-switch_table_5f68
0000000000005f94         dd         xstrtoumax.loc_4ca8-switch_table_5f68, 2 dup (xstrtoumax.loc_4cec-switch_table_5f68), xstrtoumax.loc_4db0-switch_table_5f68, 3 dup (xstrtoumax.loc_4cec-switch_table_5f68)
0000000000005fb0         dd         xstrtoumax.loc_4d6f-switch_table_5f68, 4 dup (xstrtoumax.loc_4cec-switch_table_5f68), xstrtoumax.loc_4d4a-switch_table_5f68, xstrtoumax.loc_4d24-switch_table_5f68
0000000000005fcc         dd         7 dup (xstrtoumax.loc_4cec-switch_table_5f68), xstrtoumax.loc_4d0d-switch_table_5f68, xstrtoumax.loc_4cd0-switch_table_5f68, 3 dup (xstrtoumax.loc_4cec-switch_table_5f68)
0000000000005ffc         dd         xstrtoumax.loc_4e0c-switch_table_5f68, 3 dup (xstrtoumax.loc_4cec-switch_table_5f68), xstrtoumax.loc_4d8f-switch_table_5f68, xstrtoumax.loc_4cec-switch_table_5f68
0000000000006014         dd         xstrtoumax.loc_4ca8-switch_table_5f68, 6 dup (xstrtoumax.loc_4cec-switch_table_5f68), xstrtoumax.loc_4d6f-switch_table_5f68, 2 dup (xstrtoumax.loc_4cec-switch_table_5f68)
000000000000603c         dd         xstrtoumax.loc_4cf7-switch_table_5f68
                     __PRETTY_FUNCTION__.4162:
0000000000006040         db         "xstrtoumax", 0                             ; DATA XREF=xstrtoumax+901
000000000000604b         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
000000000000604c         db  0x00 ; '.'
                     aPosix:
000000000000604d         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
0000000000006053         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
0000000000006059         db  0x00 ; '.'
000000000000605a         db  0x00 ; '.'
000000000000605b         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x605c; 0x62d0[ (628 bytes)
        ; File offset : [24668; 25296[ (628 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

000000000000605c         db  0x01 ; '.'
000000000000605d         db  0x1b ; '.'
000000000000605e         db  0x03 ; '.'
000000000000605f         db  0x3b ; ';'
0000000000006060         db  0x70 ; 'p'
0000000000006061         db  0x02 ; '.'
0000000000006062         db  0x00 ; '.'
0000000000006063         db  0x00 ; '.'
0000000000006064         db  0x4d ; 'M'
0000000000006065         db  0x00 ; '.'
0000000000006066         db  0x00 ; '.'
0000000000006067         db  0x00 ; '.'
0000000000006068         db  0xf4 ; '.'
0000000000006069         db  0xb3 ; '.'
000000000000606a         db  0xff ; '.'
000000000000606b         db  0xff ; '.'
000000000000606c         db  0xbc ; '.'
000000000000606d         db  0x02 ; '.'
000000000000606e         db  0x00 ; '.'
000000000000606f         db  0x00 ; '.'
0000000000006070         db  0x04 ; '.'
0000000000006071         db  0xb7 ; '.'
0000000000006072         db  0xff ; '.'
0000000000006073         db  0xff ; '.'
0000000000006074         db  0xe4 ; '.'
0000000000006075         db  0x02 ; '.'
0000000000006076         db  0x00 ; '.'
0000000000006077         db  0x00 ; '.'
0000000000006078         db  0x14 ; '.'
0000000000006079         db  0xb7 ; '.'
000000000000607a         db  0xff ; '.'
000000000000607b         db  0xff ; '.'
000000000000607c         db  0x88 ; '.'
000000000000607d         db  0x03 ; '.'
000000000000607e         db  0x00 ; '.'
000000000000607f         db  0x00 ; '.'
0000000000006080         db  0x84 ; '.'
0000000000006081         db  0xb9 ; '.'
0000000000006082         db  0xff ; '.'
0000000000006083         db  0xff ; '.'
0000000000006084         db  0x8c ; '.'
0000000000006085         db  0x02 ; '.'
0000000000006086         db  0x00 ; '.'
0000000000006087         db  0x00 ; '.'
0000000000006088         db  0x94 ; '.'
0000000000006089         db  0xba ; '.'
000000000000608a         db  0xff ; '.'
000000000000608b         db  0xff ; '.'
000000000000608c         db  0xfc ; '.'
000000000000608d         db  0x02 ; '.'
000000000000608e         db  0x00 ; '.'
000000000000608f         db  0x00 ; '.'
0000000000006090         db  0xe4 ; '.'
0000000000006091         db  0xba ; '.'
0000000000006092         db  0xff ; '.'
0000000000006093         db  0xff ; '.'
0000000000006094         db  0x10 ; '.'
0000000000006095         db  0x03 ; '.'
0000000000006096         db  0x00 ; '.'
0000000000006097         db  0x00 ; '.'
0000000000006098         db  0x94 ; '.'
0000000000006099         db  0xbe ; '.'
000000000000609a         db  0xff ; '.'
000000000000609b         db  0xff ; '.'
000000000000609c         db  0x5c ; '\'
000000000000609d         db  0x03 ; '.'
000000000000609e         db  0x00 ; '.'
000000000000609f         db  0x00 ; '.'
00000000000060a0         db  0x54 ; 'T'
00000000000060a1         db  0xc2 ; '.'
00000000000060a2         db  0xff ; '.'
00000000000060a3         db  0xff ; '.'
00000000000060a4         db  0xc4 ; '.'
00000000000060a5         db  0x03 ; '.'
00000000000060a6         db  0x00 ; '.'
00000000000060a7         db  0x00 ; '.'
00000000000060a8         db  0x64 ; 'd'
00000000000060a9         db  0xc2 ; '.'
00000000000060aa         db  0xff ; '.'
00000000000060ab         db  0xff ; '.'
00000000000060ac         db  0xd8 ; '.'
00000000000060ad         db  0x03 ; '.'
00000000000060ae         db  0x00 ; '.'
00000000000060af         db  0x00 ; '.'
00000000000060b0         db  0x74 ; 't'
00000000000060b1         db  0xc2 ; '.'
00000000000060b2         db  0xff ; '.'
00000000000060b3         db  0xff ; '.'
00000000000060b4         db  0xec ; '.'
00000000000060b5         db  0x03 ; '.'
00000000000060b6         db  0x00 ; '.'
00000000000060b7         db  0x00 ; '.'
00000000000060b8         db  0x24 ; '$'
00000000000060b9         db  0xc3 ; '.'
00000000000060ba         db  0xff ; '.'
00000000000060bb         db  0xff ; '.'
00000000000060bc         db  0x1c ; '.'
00000000000060bd         db  0x04 ; '.'
00000000000060be         db  0x00 ; '.'
00000000000060bf         db  0x00 ; '.'
00000000000060c0         db  0x34 ; '4'
00000000000060c1         db  0xc3 ; '.'
00000000000060c2         db  0xff ; '.'
00000000000060c3         db  0xff ; '.'
00000000000060c4         db  0x30 ; '0'
00000000000060c5         db  0x04 ; '.'
00000000000060c6         db  0x00 ; '.'
00000000000060c7         db  0x00 ; '.'
00000000000060c8         db  0x64 ; 'd'
00000000000060c9         db  0xc3 ; '.'
00000000000060ca         db  0xff ; '.'
00000000000060cb         db  0xff ; '.'
00000000000060cc         db  0x4c ; 'L'
00000000000060cd         db  0x04 ; '.'
00000000000060ce         db  0x00 ; '.'
00000000000060cf         db  0x00 ; '.'
00000000000060d0         db  0x04 ; '.'
00000000000060d1         db  0xc4 ; '.'
00000000000060d2         db  0xff ; '.'
00000000000060d3         db  0xff ; '.'
00000000000060d4         db  0x6c ; 'l'
00000000000060d5         db  0x04 ; '.'
00000000000060d6         db  0x00 ; '.'
00000000000060d7         db  0x00 ; '.'
00000000000060d8         db  0xf4 ; '.'
00000000000060d9         db  0xc4 ; '.'
00000000000060da         db  0xff ; '.'
00000000000060db         db  0xff ; '.'
00000000000060dc         db  0xb0 ; '.'
00000000000060dd         db  0x04 ; '.'
00000000000060de         db  0x00 ; '.'
00000000000060df         db  0x00 ; '.'
00000000000060e0         db  0x34 ; '4'
00000000000060e1         db  0xd7 ; '.'
00000000000060e2         db  0xff ; '.'
00000000000060e3         db  0xff ; '.'
00000000000060e4         db  0x28 ; '('
00000000000060e5         db  0x05 ; '.'
00000000000060e6         db  0x00 ; '.'
00000000000060e7         db  0x00 ; '.'
00000000000060e8         db  0xe4 ; '.'
00000000000060e9         db  0xd8 ; '.'
00000000000060ea         db  0xff ; '.'
00000000000060eb         db  0xff ; '.'
00000000000060ec         db  0x94 ; '.'
00000000000060ed         db  0x05 ; '.'
00000000000060ee         db  0x00 ; '.'
00000000000060ef         db  0x00 ; '.'
00000000000060f0         db  0x24 ; '$'
00000000000060f1         db  0xd9 ; '.'
00000000000060f2         db  0xff ; '.'
00000000000060f3         db  0xff ; '.'
00000000000060f4         db  0xc0 ; '.'
00000000000060f5         db  0x05 ; '.'
00000000000060f6         db  0x00 ; '.'
00000000000060f7         db  0x00 ; '.'
00000000000060f8         db  0x44 ; 'D'
00000000000060f9         db  0xd9 ; '.'
00000000000060fa         db  0xff ; '.'
00000000000060fb         db  0xff ; '.'
00000000000060fc         db  0xd4 ; '.'
00000000000060fd         db  0x05 ; '.'
00000000000060fe         db  0x00 ; '.'
00000000000060ff         db  0x00 ; '.'
0000000000006100         db  0x64 ; 'd'
0000000000006101         db  0xd9 ; '.'
0000000000006102         db  0xff ; '.'
0000000000006103         db  0xff ; '.'
0000000000006104         db  0xe8 ; '.'
0000000000006105         db  0x05 ; '.'
0000000000006106         db  0x00 ; '.'
0000000000006107         db  0x00 ; '.'
0000000000006108         db  0xa4 ; '.'
0000000000006109         db  0xd9 ; '.'
000000000000610a         db  0xff ; '.'
000000000000610b         db  0xff ; '.'
000000000000610c         db  0xfc ; '.'
000000000000610d         db  0x05 ; '.'
000000000000610e         db  0x00 ; '.'
000000000000610f         db  0x00 ; '.'
0000000000006110         db  0xc4 ; '.'
0000000000006111         db  0xd9 ; '.'
0000000000006112         db  0xff ; '.'
0000000000006113         db  0xff ; '.'
0000000000006114         db  0x10 ; '.'
0000000000006115         db  0x06 ; '.'
0000000000006116         db  0x00 ; '.'
0000000000006117         db  0x00 ; '.'
0000000000006118         db  0xf4 ; '.'
0000000000006119         db  0xd9 ; '.'
000000000000611a         db  0xff ; '.'
000000000000611b         db  0xff ; '.'
000000000000611c         db  0x24 ; '$'
000000000000611d         db  0x06 ; '.'
000000000000611e         db  0x00 ; '.'
000000000000611f         db  0x00 ; '.'
0000000000006120         db  0x74 ; 't'
0000000000006121         db  0xda ; '.'
0000000000006122         db  0xff ; '.'
0000000000006123         db  0xff ; '.'
0000000000006124         db  0x78 ; 'x'
0000000000006125         db  0x06 ; '.'
0000000000006126         db  0x00 ; '.'
0000000000006127         db  0x00 ; '.'
0000000000006128         db  0x64 ; 'd'
0000000000006129         db  0xdb ; '.'
000000000000612a         db  0xff ; '.'
000000000000612b         db  0xff ; '.'
000000000000612c         db  0xe4 ; '.'
000000000000612d         db  0x06 ; '.'
000000000000612e         db  0x00 ; '.'
000000000000612f         db  0x00 ; '.'
0000000000006130         db  0x74 ; 't'
0000000000006131         db  0xdb ; '.'
0000000000006132         db  0xff ; '.'
0000000000006133         db  0xff ; '.'
0000000000006134         db  0xf8 ; '.'
0000000000006135         db  0x06 ; '.'
0000000000006136         db  0x00 ; '.'
0000000000006137         db  0x00 ; '.'
0000000000006138         db  0x14 ; '.'
0000000000006139         db  0xdc ; '.'
000000000000613a         db  0xff ; '.'
000000000000613b         db  0xff ; '.'
000000000000613c         db  0x24 ; '$'
000000000000613d         db  0x07 ; '.'
000000000000613e         db  0x00 ; '.'
000000000000613f         db  0x00 ; '.'
0000000000006140         db  0x34 ; '4'
0000000000006141         db  0xdc ; '.'
0000000000006142         db  0xff ; '.'
0000000000006143         db  0xff ; '.'
0000000000006144         db  0x38 ; '8'
0000000000006145         db  0x07 ; '.'
0000000000006146         db  0x00 ; '.'
0000000000006147         db  0x00 ; '.'
0000000000006148         db  0x44 ; 'D'
0000000000006149         db  0xdc ; '.'
000000000000614a         db  0xff ; '.'
000000000000614b         db  0xff ; '.'
000000000000614c         db  0x4c ; 'L'
000000000000614d         db  0x07 ; '.'
000000000000614e         db  0x00 ; '.'
000000000000614f         db  0x00 ; '.'
0000000000006150         db  0x64 ; 'd'
0000000000006151         db  0xdc ; '.'
0000000000006152         db  0xff ; '.'
0000000000006153         db  0xff ; '.'
0000000000006154         db  0x60 ; '`'
0000000000006155         db  0x07 ; '.'
0000000000006156         db  0x00 ; '.'
0000000000006157         db  0x00 ; '.'
0000000000006158         db  0x84 ; '.'
0000000000006159         db  0xdc ; '.'
000000000000615a         db  0xff ; '.'
000000000000615b         db  0xff ; '.'
000000000000615c         db  0x74 ; 't'
000000000000615d         db  0x07 ; '.'
000000000000615e         db  0x00 ; '.'
000000000000615f         db  0x00 ; '.'
0000000000006160         db  0x14 ; '.'
0000000000006161         db  0xdd ; '.'
0000000000006162         db  0xff ; '.'
0000000000006163         db  0xff ; '.'
0000000000006164         db  0x90 ; '.'
0000000000006165         db  0x07 ; '.'
0000000000006166         db  0x00 ; '.'
0000000000006167         db  0x00 ; '.'
0000000000006168         db  0xa4 ; '.'
0000000000006169         db  0xdd ; '.'
000000000000616a         db  0xff ; '.'
000000000000616b         db  0xff ; '.'
000000000000616c         db  0xac ; '.'
000000000000616d         db  0x07 ; '.'
000000000000616e         db  0x00 ; '.'
000000000000616f         db  0x00 ; '.'
0000000000006170         db  0xb4 ; '.'
0000000000006171         db  0xdd ; '.'
0000000000006172         db  0xff ; '.'
0000000000006173         db  0xff ; '.'
0000000000006174         db  0xc0 ; '.'
0000000000006175         db  0x07 ; '.'
0000000000006176         db  0x00 ; '.'
0000000000006177         db  0x00 ; '.'
0000000000006178         db  0xc4 ; '.'
0000000000006179         db  0xdd ; '.'
000000000000617a         db  0xff ; '.'
000000000000617b         db  0xff ; '.'
000000000000617c         db  0xd4 ; '.'
000000000000617d         db  0x07 ; '.'
000000000000617e         db  0x00 ; '.'
000000000000617f         db  0x00 ; '.'
0000000000006180         db  0x64 ; 'd'
0000000000006181         db  0xde ; '.'
0000000000006182         db  0xff ; '.'
0000000000006183         db  0xff ; '.'
0000000000006184         db  0xf0 ; '.'
0000000000006185         db  0x07 ; '.'
0000000000006186         db  0x00 ; '.'
0000000000006187         db  0x00 ; '.'
0000000000006188         db  0x74 ; 't'
0000000000006189         db  0xde ; '.'
000000000000618a         db  0xff ; '.'
000000000000618b         db  0xff ; '.'
000000000000618c         db  0x04 ; '.'
000000000000618d         db  0x08 ; '.'
000000000000618e         db  0x00 ; '.'
000000000000618f         db  0x00 ; '.'
0000000000006190         db  0x94 ; '.'
0000000000006191         db  0xde ; '.'
0000000000006192         db  0xff ; '.'
0000000000006193         db  0xff ; '.'
0000000000006194         db  0x18 ; '.'
0000000000006195         db  0x08 ; '.'
0000000000006196         db  0x00 ; '.'
0000000000006197         db  0x00 ; '.'
0000000000006198         db  0xa4 ; '.'
0000000000006199         db  0xde ; '.'
000000000000619a         db  0xff ; '.'
000000000000619b         db  0xff ; '.'
000000000000619c         db  0x2c ; ','
000000000000619d         db  0x08 ; '.'
000000000000619e         db  0x00 ; '.'
000000000000619f         db  0x00 ; '.'
00000000000061a0         db  0x34 ; '4'
00000000000061a1         db  0xdf ; '.'
00000000000061a2         db  0xff ; '.'
00000000000061a3         db  0xff ; '.'
00000000000061a4         db  0x48 ; 'H'
00000000000061a5         db  0x08 ; '.'
00000000000061a6         db  0x00 ; '.'
00000000000061a7         db  0x00 ; '.'
00000000000061a8         db  0xd4 ; '.'
00000000000061a9         db  0xdf ; '.'
00000000000061aa         db  0xff ; '.'
00000000000061ab         db  0xff ; '.'
00000000000061ac         db  0x64 ; 'd'
00000000000061ad         db  0x08 ; '.'
00000000000061ae         db  0x00 ; '.'
00000000000061af         db  0x00 ; '.'
00000000000061b0         db  0xe4 ; '.'
00000000000061b1         db  0xdf ; '.'
00000000000061b2         db  0xff ; '.'
00000000000061b3         db  0xff ; '.'
00000000000061b4         db  0x78 ; 'x'
00000000000061b5         db  0x08 ; '.'
00000000000061b6         db  0x00 ; '.'
00000000000061b7         db  0x00 ; '.'
00000000000061b8         db  0x04 ; '.'
00000000000061b9         db  0xe0 ; '.'
00000000000061ba         db  0xff ; '.'
00000000000061bb         db  0xff ; '.'
00000000000061bc         db  0x8c ; '.'
00000000000061bd         db  0x08 ; '.'
00000000000061be         db  0x00 ; '.'
00000000000061bf         db  0x00 ; '.'
00000000000061c0         db  0x24 ; '$'
00000000000061c1         db  0xe0 ; '.'
00000000000061c2         db  0xff ; '.'
00000000000061c3         db  0xff ; '.'
00000000000061c4         db  0xa0 ; '.'
00000000000061c5         db  0x08 ; '.'
00000000000061c6         db  0x00 ; '.'
00000000000061c7         db  0x00 ; '.'
00000000000061c8         db  0x34 ; '4'
00000000000061c9         db  0xe0 ; '.'
00000000000061ca         db  0xff ; '.'
00000000000061cb         db  0xff ; '.'
00000000000061cc         db  0xb4 ; '.'
00000000000061cd         db  0x08 ; '.'
00000000000061ce         db  0x00 ; '.'
00000000000061cf         db  0x00 ; '.'
00000000000061d0         db  0x54 ; 'T'
00000000000061d1         db  0xe0 ; '.'
00000000000061d2         db  0xff ; '.'
00000000000061d3         db  0xff ; '.'
00000000000061d4         db  0xc8 ; '.'
00000000000061d5         db  0x08 ; '.'
00000000000061d6         db  0x00 ; '.'
00000000000061d7         db  0x00 ; '.'
00000000000061d8         db  0x74 ; 't'
00000000000061d9         db  0xe0 ; '.'
00000000000061da         db  0xff ; '.'
00000000000061db         db  0xff ; '.'
00000000000061dc         db  0xdc ; '.'
00000000000061dd         db  0x08 ; '.'
00000000000061de         db  0x00 ; '.'
00000000000061df         db  0x00 ; '.'
00000000000061e0         db  0x94 ; '.'
00000000000061e1         db  0xe0 ; '.'
00000000000061e2         db  0xff ; '.'
00000000000061e3         db  0xff ; '.'
00000000000061e4         db  0xf4 ; '.'
00000000000061e5         db  0x08 ; '.'
00000000000061e6         db  0x00 ; '.'
00000000000061e7         db  0x00 ; '.'
00000000000061e8         db  0xb4 ; '.'
00000000000061e9         db  0xe4 ; '.'
00000000000061ea         db  0xff ; '.'
00000000000061eb         db  0xff ; '.'
00000000000061ec         db  0x08 ; '.'
00000000000061ed         db  0x0a ; '.'
00000000000061ee         db  0x00 ; '.'
00000000000061ef         db  0x00 ; '.'
00000000000061f0         db  0xd4 ; '.'
00000000000061f1         db  0xe4 ; '.'
00000000000061f2         db  0xff ; '.'
00000000000061f3         db  0xff ; '.'
00000000000061f4         db  0x1c ; '.'
00000000000061f5         db  0x0a ; '.'
00000000000061f6         db  0x00 ; '.'
00000000000061f7         db  0x00 ; '.'
00000000000061f8         db  0x54 ; 'T'
00000000000061f9         db  0xe5 ; '.'
00000000000061fa         db  0xff ; '.'
00000000000061fb         db  0xff ; '.'
00000000000061fc         db  0x38 ; '8'
00000000000061fd         db  0x0a ; '.'
00000000000061fe         db  0x00 ; '.'
00000000000061ff         db  0x00 ; '.'
0000000000006200         db  0x34 ; '4'
0000000000006201         db  0xe6 ; '.'
0000000000006202         db  0xff ; '.'
0000000000006203         db  0xff ; '.'
0000000000006204         db  0x64 ; 'd'
0000000000006205         db  0x0a ; '.'
0000000000006206         db  0x00 ; '.'
0000000000006207         db  0x00 ; '.'
0000000000006208         db  0xb4 ; '.'
0000000000006209         db  0xe6 ; '.'
000000000000620a         db  0xff ; '.'
000000000000620b         db  0xff ; '.'
000000000000620c         db  0x84 ; '.'
000000000000620d         db  0x0a ; '.'
000000000000620e         db  0x00 ; '.'
000000000000620f         db  0x00 ; '.'
0000000000006210         db  0xd4 ; '.'
0000000000006211         db  0xe6 ; '.'
0000000000006212         db  0xff ; '.'
0000000000006213         db  0xff ; '.'
0000000000006214         db  0xa0 ; '.'
0000000000006215         db  0x0a ; '.'
0000000000006216         db  0x00 ; '.'
0000000000006217         db  0x00 ; '.'
0000000000006218         db  0x04 ; '.'
0000000000006219         db  0xe7 ; '.'
000000000000621a         db  0xff ; '.'
000000000000621b         db  0xff ; '.'
000000000000621c         db  0xb4 ; '.'
000000000000621d         db  0x0a ; '.'
000000000000621e         db  0x00 ; '.'
000000000000621f         db  0x00 ; '.'
0000000000006220         db  0x14 ; '.'
0000000000006221         db  0xe7 ; '.'
0000000000006222         db  0xff ; '.'
0000000000006223         db  0xff ; '.'
0000000000006224         db  0xc8 ; '.'
0000000000006225         db  0x0a ; '.'
0000000000006226         db  0x00 ; '.'
0000000000006227         db  0x00 ; '.'
0000000000006228         db  0x54 ; 'T'
0000000000006229         db  0xe7 ; '.'
000000000000622a         db  0xff ; '.'
000000000000622b         db  0xff ; '.'
000000000000622c         db  0xec ; '.'
000000000000622d         db  0x0a ; '.'
000000000000622e         db  0x00 ; '.'
000000000000622f         db  0x00 ; '.'
0000000000006230         db  0x84 ; '.'
0000000000006231         db  0xe7 ; '.'
0000000000006232         db  0xff ; '.'
0000000000006233         db  0xff ; '.'
0000000000006234         db  0x00 ; '.'
0000000000006235         db  0x0b ; '.'
0000000000006236         db  0x00 ; '.'
0000000000006237         db  0x00 ; '.'
0000000000006238         db  0x14 ; '.'
0000000000006239         db  0xe8 ; '.'
000000000000623a         db  0xff ; '.'
000000000000623b         db  0xff ; '.'
000000000000623c         db  0x18 ; '.'
000000000000623d         db  0x0b ; '.'
000000000000623e         db  0x00 ; '.'
000000000000623f         db  0x00 ; '.'
0000000000006240         db  0x64 ; 'd'
0000000000006241         db  0xe8 ; '.'
0000000000006242         db  0xff ; '.'
0000000000006243         db  0xff ; '.'
0000000000006244         db  0x30 ; '0'
0000000000006245         db  0x0b ; '.'
0000000000006246         db  0x00 ; '.'
0000000000006247         db  0x00 ; '.'
0000000000006248         db  0x84 ; '.'
0000000000006249         db  0xe8 ; '.'
000000000000624a         db  0xff ; '.'
000000000000624b         db  0xff ; '.'
000000000000624c         db  0x4c ; 'L'
000000000000624d         db  0x0b ; '.'
000000000000624e         db  0x00 ; '.'
000000000000624f         db  0x00 ; '.'
0000000000006250         db  0xb4 ; '.'
0000000000006251         db  0xe8 ; '.'
0000000000006252         db  0xff ; '.'
0000000000006253         db  0xff ; '.'
0000000000006254         db  0x68 ; 'h'
0000000000006255         db  0x0b ; '.'
0000000000006256         db  0x00 ; '.'
0000000000006257         db  0x00 ; '.'
0000000000006258         db  0xe4 ; '.'
0000000000006259         db  0xe8 ; '.'
000000000000625a         db  0xff ; '.'
000000000000625b         db  0xff ; '.'
000000000000625c         db  0x90 ; '.'
000000000000625d         db  0x0b ; '.'
000000000000625e         db  0x00 ; '.'
000000000000625f         db  0x00 ; '.'
0000000000006260         db  0x04 ; '.'
0000000000006261         db  0xe9 ; '.'
0000000000006262         db  0xff ; '.'
0000000000006263         db  0xff ; '.'
0000000000006264         db  0xac ; '.'
0000000000006265         db  0x0b ; '.'
0000000000006266         db  0x00 ; '.'
0000000000006267         db  0x00 ; '.'
0000000000006268         db  0x44 ; 'D'
0000000000006269         db  0xe9 ; '.'
000000000000626a         db  0xff ; '.'
000000000000626b         db  0xff ; '.'
000000000000626c         db  0xc4 ; '.'
000000000000626d         db  0x0b ; '.'
000000000000626e         db  0x00 ; '.'
000000000000626f         db  0x00 ; '.'
0000000000006270         db  0x44 ; 'D'
0000000000006271         db  0xea ; '.'
0000000000006272         db  0xff ; '.'
0000000000006273         db  0xff ; '.'
0000000000006274         db  0x10 ; '.'
0000000000006275         db  0x0c ; '.'
0000000000006276         db  0x00 ; '.'
0000000000006277         db  0x00 ; '.'
0000000000006278         db  0x74 ; 't'
0000000000006279         db  0xea ; '.'
000000000000627a         db  0xff ; '.'
000000000000627b         db  0xff ; '.'
000000000000627c         db  0x2c ; ','
000000000000627d         db  0x0c ; '.'
000000000000627e         db  0x00 ; '.'
000000000000627f         db  0x00 ; '.'
0000000000006280         db  0x94 ; '.'
0000000000006281         db  0xee ; '.'
0000000000006282         db  0xff ; '.'
0000000000006283         db  0xff ; '.'
0000000000006284         db  0x7c ; '|'
0000000000006285         db  0x0c ; '.'
0000000000006286         db  0x00 ; '.'
0000000000006287         db  0x00 ; '.'
0000000000006288         db  0x14 ; '.'
0000000000006289         db  0xef ; '.'
000000000000628a         db  0xff ; '.'
000000000000628b         db  0xff ; '.'
000000000000628c         db  0xb4 ; '.'
000000000000628d         db  0x0c ; '.'
000000000000628e         db  0x00 ; '.'
000000000000628f         db  0x00 ; '.'
0000000000006290         db  0x54 ; 'T'
0000000000006291         db  0xef ; '.'
0000000000006292         db  0xff ; '.'
0000000000006293         db  0xff ; '.'
0000000000006294         db  0xd4 ; '.'
0000000000006295         db  0x0c ; '.'
0000000000006296         db  0x00 ; '.'
0000000000006297         db  0x00 ; '.'
0000000000006298         db  0xb4 ; '.'
0000000000006299         db  0xef ; '.'
000000000000629a         db  0xff ; '.'
000000000000629b         db  0xff ; '.'
000000000000629c         db  0x04 ; '.'
000000000000629d         db  0x0d ; '.'
000000000000629e         db  0x00 ; '.'
000000000000629f         db  0x00 ; '.'
00000000000062a0         db  0x44 ; 'D'
00000000000062a1         db  0xf0 ; '.'
00000000000062a2         db  0xff ; '.'
00000000000062a3         db  0xff ; '.'
00000000000062a4         db  0x44 ; 'D'
00000000000062a5         db  0x0d ; '.'
00000000000062a6         db  0x00 ; '.'
00000000000062a7         db  0x00 ; '.'
00000000000062a8         db  0xc4 ; '.'
00000000000062a9         db  0xf0 ; '.'
00000000000062aa         db  0xff ; '.'
00000000000062ab         db  0xff ; '.'
00000000000062ac         db  0x94 ; '.'
00000000000062ad         db  0x0d ; '.'
00000000000062ae         db  0x00 ; '.'
00000000000062af         db  0x00 ; '.'
00000000000062b0         db  0x24 ; '$'
00000000000062b1         db  0xf1 ; '.'
00000000000062b2         db  0xff ; '.'
00000000000062b3         db  0xff ; '.'
00000000000062b4         db  0xb4 ; '.'
00000000000062b5         db  0x0d ; '.'
00000000000062b6         db  0x00 ; '.'
00000000000062b7         db  0x00 ; '.'
00000000000062b8         db  0x64 ; 'd'
00000000000062b9         db  0xf1 ; '.'
00000000000062ba         db  0xff ; '.'
00000000000062bb         db  0xff ; '.'
00000000000062bc         db  0xd4 ; '.'
00000000000062bd         db  0x0d ; '.'
00000000000062be         db  0x00 ; '.'
00000000000062bf         db  0x00 ; '.'
00000000000062c0         db  0xd4 ; '.'
00000000000062c1         db  0xf1 ; '.'
00000000000062c2         db  0xff ; '.'
00000000000062c3         db  0xff ; '.'
00000000000062c4         db  0x1c ; '.'
00000000000062c5         db  0x0e ; '.'
00000000000062c6         db  0x00 ; '.'
00000000000062c7         db  0x00 ; '.'
00000000000062c8         db  0xe4 ; '.'
00000000000062c9         db  0xf1 ; '.'
00000000000062ca         db  0xff ; '.'
00000000000062cb         db  0xff ; '.'
00000000000062cc         db  0x34 ; '4'
00000000000062cd         db  0x0e ; '.'
00000000000062ce         db  0x00 ; '.'
00000000000062cf         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x62d0; 0x6ea8[ (3032 bytes)
        ; File offset : [25296; 28328[ (3032 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

00000000000062d0         dd         0x00000014                                  ; Length of the record
00000000000062d4         dd         0x00000000                                  ; CIE ID
00000000000062d8         db         0x01                                        ; Version
00000000000062d9         db         "zR", 0                                     ; Augmentation String
00000000000062dc         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
00000000000062dd         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
00000000000062de         db         0x10                                        ; Return address register
00000000000062df         db         0x01                                        ; Augmentation data length
00000000000062e0         db         0x1b                                        ; FDE encoding
00000000000062e1         db  0x0c ; '.'
00000000000062e2         db  0x07 ; '.'
00000000000062e3         db  0x08 ; '.'
00000000000062e4         db  0x90 ; '.'
00000000000062e5         db  0x01 ; '.'
00000000000062e6         db  0x07 ; '.'
00000000000062e7         db  0x10 ; '.'
00000000000062e8         dd         0x00000014                                  ; Length of the record
00000000000062ec         dd         0x0000001c                                  ; FDE: parent CIE at 0x62d0 (FDE encoding = 0x1B)
00000000000062f0         db         0xf0, 0xb6, 2 dup (0xff)                    ; begin 0x19e0
00000000000062f4         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x1a0b)
00000000000062f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000062f9         align      256
0000000000006300         dd         0x00000014                                  ; Length of the record
0000000000006304         dd         0x00000000                                  ; CIE ID
0000000000006308         db         0x01                                        ; Version
0000000000006309         db         "zR", 0                                     ; Augmentation String
000000000000630c         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
000000000000630d         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
000000000000630e         db         0x10                                        ; Return address register
000000000000630f         db         0x01                                        ; Augmentation data length
0000000000006310         db         0x1b                                        ; FDE encoding
0000000000006311         db  0x0c ; '.'
0000000000006312         db  0x07 ; '.'
0000000000006313         db  0x08 ; '.'
0000000000006314         db  0x90 ; '.'
0000000000006315         db  0x01 ; '.'
0000000000006316         db  0x00 ; '.'
0000000000006317         db  0x00 ; '.'
0000000000006318         dd         0x00000024                                  ; Length of the record
000000000000631c         dd         0x0000001c                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006320         db         0x30, 0xb1, 2 dup (0xff)                    ; begin 0x1450
0000000000006324         db         0x10, 0x03, 2 dup (0x00)                    ; length 0x310 (end at 0x1760)
0000000000006328         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006329         db  0x0e ; '.'
000000000000632a         db  0x10 ; '.'
000000000000632b         db  0x46 ; 'F'
000000000000632c         db  0x0e ; '.'
000000000000632d         db  0x18 ; '.'
000000000000632e         db  0x4a ; 'J'
000000000000632f         db  0x0f ; '.'
0000000000006330         db  0x0b ; '.'
0000000000006331         db  0x77 ; 'w'
0000000000006332         db  0x08 ; '.'
0000000000006333         db  0x80 ; '.'
0000000000006334         db  0x00 ; '.'
0000000000006335         db  0x3f ; '?'
0000000000006336         db  0x1a ; '.'
0000000000006337         db  0x3b ; ';'
0000000000006338         db  0x2a ; '*'
0000000000006339         db  0x33 ; '3'
000000000000633a         db  0x24 ; '$'
000000000000633b         db  0x22 ; '"'
000000000000633c         db  0x00 ; '.'
000000000000633d         db  0x00 ; '.'
000000000000633e         db  0x00 ; '.'
000000000000633f         db  0x00 ; '.'
0000000000006340         dd         0x00000014                                  ; Length of the record
0000000000006344         dd         0x00000044                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006348         db         0x18, 0xb4, 2 dup (0xff)                    ; begin 0x1760
000000000000634c         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x1768)
0000000000006350         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006351         align      8
0000000000006358         dd         0x00000010                                  ; Length of the record
000000000000635c         dd         0x0000005c                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006360         db         0x90, 0xb7, 2 dup (0xff)                    ; begin 0x1af0
0000000000006364         db         0x49, 3 dup (0x00)                          ; length 0x49 (end at 0x1b39)
0000000000006368         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006369         align      4
000000000000636c         dd         0x00000048                                  ; Length of the record
0000000000006370         dd         0x00000070                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006374         db         0xcc, 0xb7, 2 dup (0xff)                    ; begin 0x1b40
0000000000006378         db         0xad, 0x03, 2 dup (0x00)                    ; length 0x3ad (end at 0x1eed)
000000000000637c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000637d         db  0x42 ; 'B'
000000000000637e         db  0x0e ; '.'
000000000000637f         db  0x10 ; '.'
0000000000006380         db  0x8f ; '.'
0000000000006381         db  0x02 ; '.'
0000000000006382         db  0x42 ; 'B'
0000000000006383         db  0x0e ; '.'
0000000000006384         db  0x18 ; '.'
0000000000006385         db  0x8e ; '.'
0000000000006386         db  0x03 ; '.'
0000000000006387         db  0x47 ; 'G'
0000000000006388         db  0x0e ; '.'
0000000000006389         db  0x20 ; ' '
000000000000638a         db  0x8d ; '.'
000000000000638b         db  0x04 ; '.'
000000000000638c         db  0x42 ; 'B'
000000000000638d         db  0x0e ; '.'
000000000000638e         db  0x28 ; '('
000000000000638f         db  0x8c ; '.'
0000000000006390         db  0x05 ; '.'
0000000000006391         db  0x41 ; 'A'
0000000000006392         db  0x0e ; '.'
0000000000006393         db  0x30 ; '0'
0000000000006394         db  0x86 ; '.'
0000000000006395         db  0x06 ; '.'
0000000000006396         db  0x41 ; 'A'
0000000000006397         db  0x0e ; '.'
0000000000006398         db  0x38 ; '8'
0000000000006399         db  0x83 ; '.'
000000000000639a         db  0x07 ; '.'
000000000000639b         db  0x44 ; 'D'
000000000000639c         db  0x0e ; '.'
000000000000639d         db  0x60 ; '`'
000000000000639e         db  0x03 ; '.'
000000000000639f         db  0x34 ; '4'
00000000000063a0         db  0x02 ; '.'
00000000000063a1         db  0x0a ; '.'
00000000000063a2         db  0x0e ; '.'
00000000000063a3         db  0x38 ; '8'
00000000000063a4         db  0x43 ; 'C'
00000000000063a5         db  0x0e ; '.'
00000000000063a6         db  0x30 ; '0'
00000000000063a7         db  0x41 ; 'A'
00000000000063a8         db  0x0e ; '.'
00000000000063a9         db  0x28 ; '('
00000000000063aa         db  0x42 ; 'B'
00000000000063ab         db  0x0e ; '.'
00000000000063ac         db  0x20 ; ' '
00000000000063ad         db  0x42 ; 'B'
00000000000063ae         db  0x0e ; '.'
00000000000063af         db  0x18 ; '.'
00000000000063b0         db  0x42 ; 'B'
00000000000063b1         db  0x0e ; '.'
00000000000063b2         db  0x10 ; '.'
00000000000063b3         db  0x42 ; 'B'
00000000000063b4         db  0x0e ; '.'
00000000000063b5         db  0x08 ; '.'
00000000000063b6         db  0x45 ; 'E'
00000000000063b7         db  0x0b ; '.'
00000000000063b8         dd         0x00000028                                  ; Length of the record
00000000000063bc         dd         0x000000bc                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
00000000000063c0         db         0x30, 0xbb, 2 dup (0xff)                    ; begin 0x1ef0
00000000000063c4         db         0xb2, 0x03, 2 dup (0x00)                    ; length 0x3b2 (end at 0x22a2)
00000000000063c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000063c9         db  0x42 ; 'B'
00000000000063ca         db  0x0e ; '.'
00000000000063cb         db  0x10 ; '.'
00000000000063cc         db  0x8d ; '.'
00000000000063cd         db  0x02 ; '.'
00000000000063ce         db  0x42 ; 'B'
00000000000063cf         db  0x0e ; '.'
00000000000063d0         db  0x18 ; '.'
00000000000063d1         db  0x8c ; '.'
00000000000063d2         db  0x03 ; '.'
00000000000063d3         db  0x46 ; 'F'
00000000000063d4         db  0x0e ; '.'
00000000000063d5         db  0x20 ; ' '
00000000000063d6         db  0x86 ; '.'
00000000000063d7         db  0x04 ; '.'
00000000000063d8         db  0x41 ; 'A'
00000000000063d9         db  0x0e ; '.'
00000000000063da         db  0x28 ; '('
00000000000063db         db  0x83 ; '.'
00000000000063dc         db  0x05 ; '.'
00000000000063dd         db  0x49 ; 'I'
00000000000063de         db  0x0e ; '.'
00000000000063df         db  0xb0 ; '.'
00000000000063e0         db  0x01 ; '.'
00000000000063e1         db  0x00 ; '.'
00000000000063e2         db  0x00 ; '.'
00000000000063e3         db  0x00 ; '.'
00000000000063e4         dd         0x00000038                                  ; Length of the record
00000000000063e8         dd         0x000000e8                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
00000000000063ec         db         0x84, 0xb3, 2 dup (0xff)                    ; begin 0x1770
00000000000063f0         db         0x6d, 0x02, 2 dup (0x00)                    ; length 0x26d (end at 0x19dd)
00000000000063f4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000063f5         db  0x42 ; 'B'
00000000000063f6         db  0x0e ; '.'
00000000000063f7         db  0x10 ; '.'
00000000000063f8         db  0x8d ; '.'
00000000000063f9         db  0x02 ; '.'
00000000000063fa         db  0x42 ; 'B'
00000000000063fb         db  0x0e ; '.'
00000000000063fc         db  0x18 ; '.'
00000000000063fd         db  0x8c ; '.'
00000000000063fe         db  0x03 ; '.'
00000000000063ff         db  0x47 ; 'G'
0000000000006400         db  0x0e ; '.'
0000000000006401         db  0x20 ; ' '
0000000000006402         db  0x86 ; '.'
0000000000006403         db  0x04 ; '.'
0000000000006404         db  0x41 ; 'A'
0000000000006405         db  0x0e ; '.'
0000000000006406         db  0x28 ; '('
0000000000006407         db  0x83 ; '.'
0000000000006408         db  0x05 ; '.'
0000000000006409         db  0x49 ; 'I'
000000000000640a         db  0x0e ; '.'
000000000000640b         db  0x40 ; '@'
000000000000640c         db  0x03 ; '.'
000000000000640d         db  0xf5 ; '.'
000000000000640e         db  0x01 ; '.'
000000000000640f         db  0x0a ; '.'
0000000000006410         db  0x0e ; '.'
0000000000006411         db  0x28 ; '('
0000000000006412         db  0x41 ; 'A'
0000000000006413         db  0x0e ; '.'
0000000000006414         db  0x20 ; ' '
0000000000006415         db  0x41 ; 'A'
0000000000006416         db  0x0e ; '.'
0000000000006417         db  0x18 ; '.'
0000000000006418         db  0x42 ; 'B'
0000000000006419         db  0x0e ; '.'
000000000000641a         db  0x10 ; '.'
000000000000641b         db  0x42 ; 'B'
000000000000641c         db  0x0e ; '.'
000000000000641d         db  0x08 ; '.'
000000000000641e         db  0x41 ; 'A'
000000000000641f         db  0x0b ; '.'
0000000000006420         dd         0x00000010                                  ; Length of the record
0000000000006424         dd         0x00000124                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006428         db         0x88, 0xbe, 2 dup (0xff)                    ; begin 0x22b0
000000000000642c         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x22b8)
0000000000006430         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006431         align      4
0000000000006434         dd         0x00000010                                  ; Length of the record
0000000000006438         dd         0x00000138                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
000000000000643c         db         0x84, 0xbe, 2 dup (0xff)                    ; begin 0x22c0
0000000000006440         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x22c8)
0000000000006444         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006445         align      8
0000000000006448         dd         0x0000002c                                  ; Length of the record
000000000000644c         dd         0x0000014c                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006450         db         0x80, 0xbe, 2 dup (0xff)                    ; begin 0x22d0
0000000000006454         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x2374)
0000000000006458         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006459         db  0x41 ; 'A'
000000000000645a         db  0x0e ; '.'
000000000000645b         db  0x10 ; '.'
000000000000645c         db  0x86 ; '.'
000000000000645d         db  0x02 ; '.'
000000000000645e         db  0x41 ; 'A'
000000000000645f         db  0x0e ; '.'
0000000000006460         db  0x18 ; '.'
0000000000006461         db  0x83 ; '.'
0000000000006462         db  0x03 ; '.'
0000000000006463         db  0x44 ; 'D'
0000000000006464         db  0x0e ; '.'
0000000000006465         db  0x20 ; ' '
0000000000006466         db  0x7a ; 'z'
0000000000006467         db  0x0a ; '.'
0000000000006468         db  0x0e ; '.'
0000000000006469         db  0x18 ; '.'
000000000000646a         db  0x41 ; 'A'
000000000000646b         db  0x0e ; '.'
000000000000646c         db  0x10 ; '.'
000000000000646d         db  0x41 ; 'A'
000000000000646e         db  0x0e ; '.'
000000000000646f         db  0x08 ; '.'
0000000000006470         db  0x41 ; 'A'
0000000000006471         db  0x0b ; '.'
0000000000006472         db  0x00 ; '.'
0000000000006473         db  0x00 ; '.'
0000000000006474         db  0x00 ; '.'
0000000000006475         db  0x00 ; '.'
0000000000006476         db  0x00 ; '.'
0000000000006477         db  0x00 ; '.'
0000000000006478         dd         0x00000010                                  ; Length of the record
000000000000647c         dd         0x0000017c                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006480         db         0x00, 0xbf, 2 dup (0xff)                    ; begin 0x2380
0000000000006484         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x2385)
0000000000006488         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006489         align      4
000000000000648c         dd         0x00000018                                  ; Length of the record
0000000000006490         dd         0x00000190                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006494         db         0xfc, 0xbe, 2 dup (0xff)                    ; begin 0x2390
0000000000006498         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0x23b2)
000000000000649c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000649d         db  0x46 ; 'F'
000000000000649e         db  0x0e ; '.'
000000000000649f         db  0x10 ; '.'
00000000000064a0         db  0x83 ; '.'
00000000000064a1         db  0x02 ; '.'
00000000000064a2         db  0x4e ; 'N'
00000000000064a3         db  0xc3 ; '.'
00000000000064a4         db  0x0e ; '.'
00000000000064a5         db  0x08 ; '.'
00000000000064a6         db  0x00 ; '.'
00000000000064a7         db  0x00 ; '.'
00000000000064a8         dd         0x0000001c                                  ; Length of the record
00000000000064ac         dd         0x000001ac                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
00000000000064b0         db         0x10, 0xbf, 2 dup (0xff)                    ; begin 0x23c0
00000000000064b4         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x245f)
00000000000064b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000064b9         db  0x44 ; 'D'
00000000000064ba         db  0x0e ; '.'
00000000000064bb         db  0x10 ; '.'
00000000000064bc         db  0x83 ; '.'
00000000000064bd         db  0x02 ; '.'
00000000000064be         db  0x02 ; '.'
00000000000064bf         db  0x78 ; 'x'
00000000000064c0         db  0x0a ; '.'
00000000000064c1         db  0x0e ; '.'
00000000000064c2         db  0x08 ; '.'
00000000000064c3         db  0x41 ; 'A'
00000000000064c4         db  0x0b ; '.'
00000000000064c5         db  0x00 ; '.'
00000000000064c6         db  0x00 ; '.'
00000000000064c7         db  0x00 ; '.'
00000000000064c8         dd         0x00000040                                  ; Length of the record
00000000000064cc         dd         0x000001cc                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
00000000000064d0         db         0x90, 0xbf, 2 dup (0xff)                    ; begin 0x2460
00000000000064d4         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x2547)
00000000000064d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000064d9         db  0x41 ; 'A'
00000000000064da         db  0x0e ; '.'
00000000000064db         db  0x10 ; '.'
00000000000064dc         db  0x86 ; '.'
00000000000064dd         db  0x02 ; '.'
00000000000064de         db  0x41 ; 'A'
00000000000064df         db  0x0e ; '.'
00000000000064e0         db  0x18 ; '.'
00000000000064e1         db  0x83 ; '.'
00000000000064e2         db  0x03 ; '.'
00000000000064e3         db  0x49 ; 'I'
00000000000064e4         db  0x0e ; '.'
00000000000064e5         db  0x20 ; ' '
00000000000064e6         db  0x6e ; 'n'
00000000000064e7         db  0x0a ; '.'
00000000000064e8         db  0x0e ; '.'
00000000000064e9         db  0x18 ; '.'
00000000000064ea         db  0x41 ; 'A'
00000000000064eb         db  0x0e ; '.'
00000000000064ec         db  0x10 ; '.'
00000000000064ed         db  0x41 ; 'A'
00000000000064ee         db  0x0e ; '.'
00000000000064ef         db  0x08 ; '.'
00000000000064f0         db  0x45 ; 'E'
00000000000064f1         db  0x0b ; '.'
00000000000064f2         db  0x02 ; '.'
00000000000064f3         db  0x4a ; 'J'
00000000000064f4         db  0x0a ; '.'
00000000000064f5         db  0x0e ; '.'
00000000000064f6         db  0x18 ; '.'
00000000000064f7         db  0x41 ; 'A'
00000000000064f8         db  0x0e ; '.'
00000000000064f9         db  0x10 ; '.'
00000000000064fa         db  0x41 ; 'A'
00000000000064fb         db  0x0e ; '.'
00000000000064fc         db  0x08 ; '.'
00000000000064fd         db  0x44 ; 'D'
00000000000064fe         db  0x0b ; '.'
00000000000064ff         db  0x02 ; '.'
0000000000006500         db  0x54 ; 'T'
0000000000006501         db  0x0e ; '.'
0000000000006502         db  0x18 ; '.'
0000000000006503         db  0x41 ; 'A'
0000000000006504         db  0x0e ; '.'
0000000000006505         db  0x10 ; '.'
0000000000006506         db  0x41 ; 'A'
0000000000006507         db  0x0e ; '.'
0000000000006508         db  0x08 ; '.'
0000000000006509         db  0x00 ; '.'
000000000000650a         db  0x00 ; '.'
000000000000650b         db  0x00 ; '.'
000000000000650c         dd         0x00000074                                  ; Length of the record
0000000000006510         dd         0x00000210                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006514         db         0x3c, 0xc0, 2 dup (0xff)                    ; begin 0x2550
0000000000006518         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x3784)
000000000000651c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000651d         db  0x42 ; 'B'
000000000000651e         db  0x0e ; '.'
000000000000651f         db  0x10 ; '.'
0000000000006520         db  0x8f ; '.'
0000000000006521         db  0x02 ; '.'
0000000000006522         db  0x42 ; 'B'
0000000000006523         db  0x0e ; '.'
0000000000006524         db  0x18 ; '.'
0000000000006525         db  0x8e ; '.'
0000000000006526         db  0x03 ; '.'
0000000000006527         db  0x45 ; 'E'
0000000000006528         db  0x0e ; '.'
0000000000006529         db  0x20 ; ' '
000000000000652a         db  0x8d ; '.'
000000000000652b         db  0x04 ; '.'
000000000000652c         db  0x42 ; 'B'
000000000000652d         db  0x0e ; '.'
000000000000652e         db  0x28 ; '('
000000000000652f         db  0x8c ; '.'
0000000000006530         db  0x05 ; '.'
0000000000006531         db  0x44 ; 'D'
0000000000006532         db  0x0e ; '.'
0000000000006533         db  0x30 ; '0'
0000000000006534         db  0x86 ; '.'
0000000000006535         db  0x06 ; '.'
0000000000006536         db  0x41 ; 'A'
0000000000006537         db  0x0e ; '.'
0000000000006538         db  0x38 ; '8'
0000000000006539         db  0x83 ; '.'
000000000000653a         db  0x07 ; '.'
000000000000653b         db  0x53 ; 'S'
000000000000653c         db  0x0e ; '.'
000000000000653d         db  0xf0 ; '.'
000000000000653e         db  0x01 ; '.'
000000000000653f         db  0x03 ; '.'
0000000000006540         db  0x81 ; '.'
0000000000006541         db  0x0b ; '.'
0000000000006542         db  0x0e ; '.'
0000000000006543         db  0xf8 ; '.'
0000000000006544         db  0x01 ; '.'
0000000000006545         db  0x4a ; 'J'
0000000000006546         db  0x0e ; '.'
0000000000006547         db  0x80 ; '.'
0000000000006548         db  0x02 ; '.'
0000000000006549         db  0x44 ; 'D'
000000000000654a         db  0x0e ; '.'
000000000000654b         db  0x88 ; '.'
000000000000654c         db  0x02 ; '.'
000000000000654d         db  0x45 ; 'E'
000000000000654e         db  0x0e ; '.'
000000000000654f         db  0x90 ; '.'
0000000000006550         db  0x02 ; '.'
0000000000006551         db  0x5f ; '_'
0000000000006552         db  0x0e ; '.'
0000000000006553         db  0xf0 ; '.'
0000000000006554         db  0x01 ; '.'
0000000000006555         db  0x64 ; 'd'
0000000000006556         db  0x0a ; '.'
0000000000006557         db  0x0e ; '.'
0000000000006558         db  0x38 ; '8'
0000000000006559         db  0x41 ; 'A'
000000000000655a         db  0x0e ; '.'
000000000000655b         db  0x30 ; '0'
000000000000655c         db  0x41 ; 'A'
000000000000655d         db  0x0e ; '.'
000000000000655e         db  0x28 ; '('
000000000000655f         db  0x42 ; 'B'
0000000000006560         db  0x0e ; '.'
0000000000006561         db  0x20 ; ' '
0000000000006562         db  0x42 ; 'B'
0000000000006563         db  0x0e ; '.'
0000000000006564         db  0x18 ; '.'
0000000000006565         db  0x42 ; 'B'
0000000000006566         db  0x0e ; '.'
0000000000006567         db  0x10 ; '.'
0000000000006568         db  0x42 ; 'B'
0000000000006569         db  0x0e ; '.'
000000000000656a         db  0x08 ; '.'
000000000000656b         db  0x44 ; 'D'
000000000000656c         db  0x0b ; '.'
000000000000656d         db  0x03 ; '.'
000000000000656e         db  0x99 ; '.'
000000000000656f         db  0x05 ; '.'
0000000000006570         db  0x0e ; '.'
0000000000006571         db  0xf8 ; '.'
0000000000006572         db  0x01 ; '.'
0000000000006573         db  0x4d ; 'M'
0000000000006574         db  0x0e ; '.'
0000000000006575         db  0x80 ; '.'
0000000000006576         db  0x02 ; '.'
0000000000006577         db  0x44 ; 'D'
0000000000006578         db  0x0e ; '.'
0000000000006579         db  0x88 ; '.'
000000000000657a         db  0x02 ; '.'
000000000000657b         db  0x47 ; 'G'
000000000000657c         db  0x0e ; '.'
000000000000657d         db  0x90 ; '.'
000000000000657e         db  0x02 ; '.'
000000000000657f         db  0x5b ; '['
0000000000006580         db  0x0e ; '.'
0000000000006581         db  0xf0 ; '.'
0000000000006582         db  0x01 ; '.'
0000000000006583         db  0x00 ; '.'
0000000000006584         dd         0x00000068                                  ; Length of the record
0000000000006588         dd         0x00000288                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
000000000000658c         db         0x04, 0xd2, 2 dup (0xff)                    ; begin 0x3790
0000000000006590         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x393b)
0000000000006594         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006595         db  0x42 ; 'B'
0000000000006596         db  0x0e ; '.'
0000000000006597         db  0x10 ; '.'
0000000000006598         db  0x8f ; '.'
0000000000006599         db  0x02 ; '.'
000000000000659a         db  0x42 ; 'B'
000000000000659b         db  0x0e ; '.'
000000000000659c         db  0x18 ; '.'
000000000000659d         db  0x8e ; '.'
000000000000659e         db  0x03 ; '.'
000000000000659f         db  0x45 ; 'E'
00000000000065a0         db  0x0e ; '.'
00000000000065a1         db  0x20 ; ' '
00000000000065a2         db  0x8d ; '.'
00000000000065a3         db  0x04 ; '.'
00000000000065a4         db  0x42 ; 'B'
00000000000065a5         db  0x0e ; '.'
00000000000065a6         db  0x28 ; '('
00000000000065a7         db  0x8c ; '.'
00000000000065a8         db  0x05 ; '.'
00000000000065a9         db  0x44 ; 'D'
00000000000065aa         db  0x0e ; '.'
00000000000065ab         db  0x30 ; '0'
00000000000065ac         db  0x86 ; '.'
00000000000065ad         db  0x06 ; '.'
00000000000065ae         db  0x41 ; 'A'
00000000000065af         db  0x0e ; '.'
00000000000065b0         db  0x38 ; '8'
00000000000065b1         db  0x83 ; '.'
00000000000065b2         db  0x07 ; '.'
00000000000065b3         db  0x47 ; 'G'
00000000000065b4         db  0x0e ; '.'
00000000000065b5         db  0x60 ; '`'
00000000000065b6         db  0x02 ; '.'
00000000000065b7         db  0x99 ; '.'
00000000000065b8         db  0x0e ; '.'
00000000000065b9         db  0x68 ; 'h'
00000000000065ba         db  0x5f ; '_'
00000000000065bb         db  0x0e ; '.'
00000000000065bc         db  0x70 ; 'p'
00000000000065bd         db  0x46 ; 'F'
00000000000065be         db  0x0e ; '.'
00000000000065bf         db  0x78 ; 'x'
00000000000065c0         db  0x42 ; 'B'
00000000000065c1         db  0x0e ; '.'
00000000000065c2         db  0x80 ; '.'
00000000000065c3         db  0x01 ; '.'
00000000000065c4         db  0x59 ; 'Y'
00000000000065c5         db  0x0e ; '.'
00000000000065c6         db  0x60 ; '`'
00000000000065c7         db  0x02 ; '.'
00000000000065c8         db  0x40 ; '@'
00000000000065c9         db  0x0e ; '.'
00000000000065ca         db  0x68 ; 'h'
00000000000065cb         db  0x4b ; 'K'
00000000000065cc         db  0x0e ; '.'
00000000000065cd         db  0x70 ; 'p'
00000000000065ce         db  0x43 ; 'C'
00000000000065cf         db  0x0e ; '.'
00000000000065d0         db  0x78 ; 'x'
00000000000065d1         db  0x45 ; 'E'
00000000000065d2         db  0x0e ; '.'
00000000000065d3         db  0x80 ; '.'
00000000000065d4         db  0x01 ; '.'
00000000000065d5         db  0x5e ; '^'
00000000000065d6         db  0x0e ; '.'
00000000000065d7         db  0x60 ; '`'
00000000000065d8         db  0x4c ; 'L'
00000000000065d9         db  0x0a ; '.'
00000000000065da         db  0x0e ; '.'
00000000000065db         db  0x38 ; '8'
00000000000065dc         db  0x44 ; 'D'
00000000000065dd         db  0x0e ; '.'
00000000000065de         db  0x30 ; '0'
00000000000065df         db  0x41 ; 'A'
00000000000065e0         db  0x0e ; '.'
00000000000065e1         db  0x28 ; '('
00000000000065e2         db  0x42 ; 'B'
00000000000065e3         db  0x0e ; '.'
00000000000065e4         db  0x20 ; ' '
00000000000065e5         db  0x42 ; 'B'
00000000000065e6         db  0x0e ; '.'
00000000000065e7         db  0x18 ; '.'
00000000000065e8         db  0x42 ; 'B'
00000000000065e9         db  0x0e ; '.'
00000000000065ea         db  0x10 ; '.'
00000000000065eb         db  0x42 ; 'B'
00000000000065ec         db  0x0e ; '.'
00000000000065ed         db  0x08 ; '.'
00000000000065ee         db  0x46 ; 'F'
00000000000065ef         db  0x0b ; '.'
00000000000065f0         dd         0x00000028                                  ; Length of the record
00000000000065f4         dd         0x000002f4                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
00000000000065f8         db         0x48, 0xd3, 2 dup (0xff)                    ; begin 0x3940
00000000000065fc         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x3976)
0000000000006600         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006601         db  0x42 ; 'B'
0000000000006602         db  0x0e ; '.'
0000000000006603         db  0x10 ; '.'
0000000000006604         db  0x8c ; '.'
0000000000006605         db  0x02 ; '.'
0000000000006606         db  0x41 ; 'A'
0000000000006607         db  0x0e ; '.'
0000000000006608         db  0x18 ; '.'
0000000000006609         db  0x86 ; '.'
000000000000660a         db  0x03 ; '.'
000000000000660b         db  0x41 ; 'A'
000000000000660c         db  0x0e ; '.'
000000000000660d         db  0x20 ; ' '
000000000000660e         db  0x83 ; '.'
000000000000660f         db  0x04 ; '.'
0000000000006610         db  0x6e ; 'n'
0000000000006611         db  0x0e ; '.'
0000000000006612         db  0x18 ; '.'
0000000000006613         db  0x41 ; 'A'
0000000000006614         db  0x0e ; '.'
0000000000006615         db  0x10 ; '.'
0000000000006616         db  0x42 ; 'B'
0000000000006617         db  0x0e ; '.'
0000000000006618         db  0x08 ; '.'
0000000000006619         db  0x00 ; '.'
000000000000661a         db  0x00 ; '.'
000000000000661b         db  0x00 ; '.'
000000000000661c         dd         0x00000010                                  ; Length of the record
0000000000006620         dd         0x00000320                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006624         db         0x5c, 0xd3, 2 dup (0xff)                    ; begin 0x3980
0000000000006628         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x3991)
000000000000662c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000662d         align      16
0000000000006630         dd         0x00000010                                  ; Length of the record
0000000000006634         dd         0x00000334                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006638         db         0x68, 0xd3, 2 dup (0xff)                    ; begin 0x39a0
000000000000663c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x39b1)
0000000000006640         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006641         align      4
0000000000006644         dd         0x00000010                                  ; Length of the record
0000000000006648         dd         0x00000348                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
000000000000664c         db         0x74, 0xd3, 2 dup (0xff)                    ; begin 0x39c0
0000000000006650         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x39f5)
0000000000006654         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006655         align      8
0000000000006658         dd         0x00000010                                  ; Length of the record
000000000000665c         dd         0x0000035c                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006660         db         0xa0, 0xd3, 2 dup (0xff)                    ; begin 0x3a00
0000000000006664         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x3a15)
0000000000006668         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006669         align      4
000000000000666c         dd         0x00000010                                  ; Length of the record
0000000000006670         dd         0x00000370                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006674         db         0xac, 0xd3, 2 dup (0xff)                    ; begin 0x3a20
0000000000006678         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x3a50)
000000000000667c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000667d         db  0x6b ; 'k'
000000000000667e         db  0x0e ; '.'
000000000000667f         db  0x10 ; '.'
0000000000006680         dd         0x00000050                                  ; Length of the record
0000000000006684         dd         0x00000384                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006688         db         0xc8, 0xd3, 2 dup (0xff)                    ; begin 0x3a50
000000000000668c         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x3ac4)
0000000000006690         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006691         db  0x42 ; 'B'
0000000000006692         db  0x0e ; '.'
0000000000006693         db  0x10 ; '.'
0000000000006694         db  0x8f ; '.'
0000000000006695         db  0x02 ; '.'
0000000000006696         db  0x42 ; 'B'
0000000000006697         db  0x0e ; '.'
0000000000006698         db  0x18 ; '.'
0000000000006699         db  0x8e ; '.'
000000000000669a         db  0x03 ; '.'
000000000000669b         db  0x49 ; 'I'
000000000000669c         db  0x0e ; '.'
000000000000669d         db  0x20 ; ' '
000000000000669e         db  0x8d ; '.'
000000000000669f         db  0x04 ; '.'
00000000000066a0         db  0x42 ; 'B'
00000000000066a1         db  0x0e ; '.'
00000000000066a2         db  0x28 ; '('
00000000000066a3         db  0x8c ; '.'
00000000000066a4         db  0x05 ; '.'
00000000000066a5         db  0x44 ; 'D'
00000000000066a6         db  0x0e ; '.'
00000000000066a7         db  0x30 ; '0'
00000000000066a8         db  0x86 ; '.'
00000000000066a9         db  0x06 ; '.'
00000000000066aa         db  0x41 ; 'A'
00000000000066ab         db  0x0e ; '.'
00000000000066ac         db  0x38 ; '8'
00000000000066ad         db  0x83 ; '.'
00000000000066ae         db  0x07 ; '.'
00000000000066af         db  0x4d ; 'M'
00000000000066b0         db  0x0e ; '.'
00000000000066b1         db  0x50 ; 'P'
00000000000066b2         db  0x5f ; '_'
00000000000066b3         db  0x0e ; '.'
00000000000066b4         db  0x58 ; 'X'
00000000000066b5         db  0x47 ; 'G'
00000000000066b6         db  0x0e ; '.'
00000000000066b7         db  0x60 ; '`'
00000000000066b8         db  0x46 ; 'F'
00000000000066b9         db  0x0e ; '.'
00000000000066ba         db  0x68 ; 'h'
00000000000066bb         db  0x44 ; 'D'
00000000000066bc         db  0x0e ; '.'
00000000000066bd         db  0x70 ; 'p'
00000000000066be         db  0x58 ; 'X'
00000000000066bf         db  0x0e ; '.'
00000000000066c0         db  0x38 ; '8'
00000000000066c1         db  0x41 ; 'A'
00000000000066c2         db  0x0e ; '.'
00000000000066c3         db  0x30 ; '0'
00000000000066c4         db  0x41 ; 'A'
00000000000066c5         db  0x0e ; '.'
00000000000066c6         db  0x28 ; '('
00000000000066c7         db  0x42 ; 'B'
00000000000066c8         db  0x0e ; '.'
00000000000066c9         db  0x20 ; ' '
00000000000066ca         db  0x42 ; 'B'
00000000000066cb         db  0x0e ; '.'
00000000000066cc         db  0x18 ; '.'
00000000000066cd         db  0x42 ; 'B'
00000000000066ce         db  0x0e ; '.'
00000000000066cf         db  0x10 ; '.'
00000000000066d0         db  0x42 ; 'B'
00000000000066d1         db  0x0e ; '.'
00000000000066d2         db  0x08 ; '.'
00000000000066d3         db  0x00 ; '.'
00000000000066d4         dd         0x00000068                                  ; Length of the record
00000000000066d8         dd         0x000003d8                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
00000000000066dc         db         0xf4, 0xd3, 2 dup (0xff)                    ; begin 0x3ad0
00000000000066e0         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x3bb3)
00000000000066e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000066e5         db  0x42 ; 'B'
00000000000066e6         db  0x0e ; '.'
00000000000066e7         db  0x10 ; '.'
00000000000066e8         db  0x8f ; '.'
00000000000066e9         db  0x02 ; '.'
00000000000066ea         db  0x42 ; 'B'
00000000000066eb         db  0x0e ; '.'
00000000000066ec         db  0x18 ; '.'
00000000000066ed         db  0x8e ; '.'
00000000000066ee         db  0x03 ; '.'
00000000000066ef         db  0x49 ; 'I'
00000000000066f0         db  0x0e ; '.'
00000000000066f1         db  0x20 ; ' '
00000000000066f2         db  0x8d ; '.'
00000000000066f3         db  0x04 ; '.'
00000000000066f4         db  0x42 ; 'B'
00000000000066f5         db  0x0e ; '.'
00000000000066f6         db  0x28 ; '('
00000000000066f7         db  0x8c ; '.'
00000000000066f8         db  0x05 ; '.'
00000000000066f9         db  0x44 ; 'D'
00000000000066fa         db  0x0e ; '.'
00000000000066fb         db  0x30 ; '0'
00000000000066fc         db  0x86 ; '.'
00000000000066fd         db  0x06 ; '.'
00000000000066fe         db  0x41 ; 'A'
00000000000066ff         db  0x0e ; '.'
0000000000006700         db  0x38 ; '8'
0000000000006701         db  0x83 ; '.'
0000000000006702         db  0x07 ; '.'
0000000000006703         db  0x4d ; 'M'
0000000000006704         db  0x0e ; '.'
0000000000006705         db  0x70 ; 'p'
0000000000006706         db  0x65 ; 'e'
0000000000006707         db  0x0e ; '.'
0000000000006708         db  0x78 ; 'x'
0000000000006709         db  0x4d ; 'M'
000000000000670a         db  0x0e ; '.'
000000000000670b         db  0x80 ; '.'
000000000000670c         db  0x01 ; '.'
000000000000670d         db  0x46 ; 'F'
000000000000670e         db  0x0e ; '.'
000000000000670f         db  0x88 ; '.'
0000000000006710         db  0x01 ; '.'
0000000000006711         db  0x42 ; 'B'
0000000000006712         db  0x0e ; '.'
0000000000006713         db  0x90 ; '.'
0000000000006714         db  0x01 ; '.'
0000000000006715         db  0x5e ; '^'
0000000000006716         db  0x0e ; '.'
0000000000006717         db  0x70 ; 'p'
0000000000006718         db  0x56 ; 'V'
0000000000006719         db  0x0e ; '.'
000000000000671a         db  0x78 ; 'x'
000000000000671b         db  0x43 ; 'C'
000000000000671c         db  0x0e ; '.'
000000000000671d         db  0x80 ; '.'
000000000000671e         db  0x01 ; '.'
000000000000671f         db  0x43 ; 'C'
0000000000006720         db  0x0e ; '.'
0000000000006721         db  0x88 ; '.'
0000000000006722         db  0x01 ; '.'
0000000000006723         db  0x56 ; 'V'
0000000000006724         db  0x0e ; '.'
0000000000006725         db  0x90 ; '.'
0000000000006726         db  0x01 ; '.'
0000000000006727         db  0x52 ; 'R'
0000000000006728         db  0x0e ; '.'
0000000000006729         db  0x70 ; 'p'
000000000000672a         db  0x5b ; '['
000000000000672b         db  0x0e ; '.'
000000000000672c         db  0x38 ; '8'
000000000000672d         db  0x41 ; 'A'
000000000000672e         db  0x0e ; '.'
000000000000672f         db  0x30 ; '0'
0000000000006730         db  0x41 ; 'A'
0000000000006731         db  0x0e ; '.'
0000000000006732         db  0x28 ; '('
0000000000006733         db  0x42 ; 'B'
0000000000006734         db  0x0e ; '.'
0000000000006735         db  0x20 ; ' '
0000000000006736         db  0x42 ; 'B'
0000000000006737         db  0x0e ; '.'
0000000000006738         db  0x18 ; '.'
0000000000006739         db  0x42 ; 'B'
000000000000673a         db  0x0e ; '.'
000000000000673b         db  0x10 ; '.'
000000000000673c         db  0x42 ; 'B'
000000000000673d         db  0x0e ; '.'
000000000000673e         db  0x08 ; '.'
000000000000673f         db  0x00 ; '.'
0000000000006740         dd         0x00000010                                  ; Length of the record
0000000000006744         dd         0x00000444                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006748         db         0x78, 0xd4, 2 dup (0xff)                    ; begin 0x3bc0
000000000000674c         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x3bca)
0000000000006750         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006751         align      4
0000000000006754         dd         0x00000028                                  ; Length of the record
0000000000006758         dd         0x00000458                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
000000000000675c         db         0x74, 0xd4, 2 dup (0xff)                    ; begin 0x3bd0
0000000000006760         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x3c63)
0000000000006764         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006765         db  0x48 ; 'H'
0000000000006766         db  0x0e ; '.'
0000000000006767         db  0x10 ; '.'
0000000000006768         db  0x8c ; '.'
0000000000006769         db  0x02 ; '.'
000000000000676a         db  0x48 ; 'H'
000000000000676b         db  0x0e ; '.'
000000000000676c         db  0x18 ; '.'
000000000000676d         db  0x86 ; '.'
000000000000676e         db  0x03 ; '.'
000000000000676f         db  0x41 ; 'A'
0000000000006770         db  0x0e ; '.'
0000000000006771         db  0x20 ; ' '
0000000000006772         db  0x83 ; '.'
0000000000006773         db  0x04 ; '.'
0000000000006774         db  0x02 ; '.'
0000000000006775         db  0x74 ; 't'
0000000000006776         db  0x0e ; '.'
0000000000006777         db  0x18 ; '.'
0000000000006778         db  0x4b ; 'K'
0000000000006779         db  0x0e ; '.'
000000000000677a         db  0x10 ; '.'
000000000000677b         db  0x42 ; 'B'
000000000000677c         db  0x0e ; '.'
000000000000677d         db  0x08 ; '.'
000000000000677e         db  0x00 ; '.'
000000000000677f         db  0x00 ; '.'
0000000000006780         dd         0x00000010                                  ; Length of the record
0000000000006784         dd         0x00000484                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006788         db         0xe8, 0xd4, 2 dup (0xff)                    ; begin 0x3c70
000000000000678c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x3c83)
0000000000006790         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006791         align      4
0000000000006794         dd         0x00000010                                  ; Length of the record
0000000000006798         dd         0x00000498                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
000000000000679c         db         0xf4, 0xd4, 2 dup (0xff)                    ; begin 0x3c90
00000000000067a0         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x3c9c)
00000000000067a4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000067a5         align      8
00000000000067a8         dd         0x00000010                                  ; Length of the record
00000000000067ac         dd         0x000004ac                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
00000000000067b0         db         0xf0, 0xd4, 2 dup (0xff)                    ; begin 0x3ca0
00000000000067b4         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x3cb8)
00000000000067b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000067b9         align      4
00000000000067bc         dd         0x00000010                                  ; Length of the record
00000000000067c0         dd         0x000004c0                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
00000000000067c4         db         0xfc, 0xd4, 2 dup (0xff)                    ; begin 0x3cc0
00000000000067c8         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x3cd4)
00000000000067cc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000067cd         align      16
00000000000067d0         dd         0x00000018                                  ; Length of the record
00000000000067d4         dd         0x000004d4                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
00000000000067d8         db         0x08, 0xd5, 2 dup (0xff)                    ; begin 0x3ce0
00000000000067dc         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x3d6e)
00000000000067e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000067e1         db  0x44 ; 'D'
00000000000067e2         db  0x0e ; '.'
00000000000067e3         db  0x50 ; 'P'
00000000000067e4         db  0x02 ; '.'
00000000000067e5         db  0x7f ; '.'
00000000000067e6         db  0x0a ; '.'
00000000000067e7         db  0x0e ; '.'
00000000000067e8         db  0x08 ; '.'
00000000000067e9         db  0x41 ; 'A'
00000000000067ea         db  0x0b ; '.'
00000000000067eb         db  0x00 ; '.'
00000000000067ec         dd         0x00000018                                  ; Length of the record
00000000000067f0         dd         0x000004f0                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
00000000000067f4         db         0x7c, 0xd5, 2 dup (0xff)                    ; begin 0x3d70
00000000000067f8         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x3dfa)
00000000000067fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000067fd         db  0x44 ; 'D'
00000000000067fe         db  0x0e ; '.'
00000000000067ff         db  0x50 ; 'P'
0000000000006800         db  0x02 ; '.'
0000000000006801         db  0x7b ; '{'
0000000000006802         db  0x0a ; '.'
0000000000006803         db  0x0e ; '.'
0000000000006804         db  0x08 ; '.'
0000000000006805         db  0x41 ; 'A'
0000000000006806         db  0x0b ; '.'
0000000000006807         db  0x00 ; '.'
0000000000006808         dd         0x00000010                                  ; Length of the record
000000000000680c         dd         0x0000050c                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006810         db         0xf0, 0xd5, 2 dup (0xff)                    ; begin 0x3e00
0000000000006814         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x3e0c)
0000000000006818         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006819         align      4
000000000000681c         dd         0x00000010                                  ; Length of the record
0000000000006820         dd         0x00000520                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006824         db         0xec, 0xd5, 2 dup (0xff)                    ; begin 0x3e10
0000000000006828         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x3e1f)
000000000000682c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000682d         align      16
0000000000006830         dd         0x00000018                                  ; Length of the record
0000000000006834         dd         0x00000534                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006838         db         0xe8, 0xd5, 2 dup (0xff)                    ; begin 0x3e20
000000000000683c         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x3eb8)
0000000000006840         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006841         db  0x44 ; 'D'
0000000000006842         db  0x0e ; '.'
0000000000006843         db  0x50 ; 'P'
0000000000006844         db  0x02 ; '.'
0000000000006845         db  0x8e ; '.'
0000000000006846         db  0x0a ; '.'
0000000000006847         db  0x0e ; '.'
0000000000006848         db  0x08 ; '.'
0000000000006849         db  0x41 ; 'A'
000000000000684a         db  0x0b ; '.'
000000000000684b         db  0x00 ; '.'
000000000000684c         dd         0x00000010                                  ; Length of the record
0000000000006850         dd         0x00000550                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006854         db         0x6c, 0xd6, 2 dup (0xff)                    ; begin 0x3ec0
0000000000006858         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x3ed0)
000000000000685c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000685d         align      32
0000000000006860         dd         0x00000010                                  ; Length of the record
0000000000006864         dd         0x00000564                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006868         db         0x68, 0xd6, 2 dup (0xff)                    ; begin 0x3ed0
000000000000686c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x3ee1)
0000000000006870         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006871         align      4
0000000000006874         dd         0x00000010                                  ; Length of the record
0000000000006878         dd         0x00000578                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
000000000000687c         db         0x74, 0xd6, 2 dup (0xff)                    ; begin 0x3ef0
0000000000006880         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x3efa)
0000000000006884         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006885         align      8
0000000000006888         dd         0x00000018                                  ; Length of the record
000000000000688c         dd         0x0000058c                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006890         db         0x70, 0xd6, 2 dup (0xff)                    ; begin 0x3f00
0000000000006894         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x3f8e)
0000000000006898         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006899         db  0x44 ; 'D'
000000000000689a         db  0x0e ; '.'
000000000000689b         db  0x50 ; 'P'
000000000000689c         db  0x02 ; '.'
000000000000689d         db  0x7f ; '.'
000000000000689e         db  0x0a ; '.'
000000000000689f         db  0x0e ; '.'
00000000000068a0         db  0x08 ; '.'
00000000000068a1         db  0x41 ; 'A'
00000000000068a2         db  0x0b ; '.'
00000000000068a3         db  0x00 ; '.'
00000000000068a4         dd         0x00000018                                  ; Length of the record
00000000000068a8         dd         0x000005a8                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
00000000000068ac         db         0xe4, 0xd6, 2 dup (0xff)                    ; begin 0x3f90
00000000000068b0         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x4021)
00000000000068b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000068b5         db  0x44 ; 'D'
00000000000068b6         db  0x0e ; '.'
00000000000068b7         db  0x50 ; 'P'
00000000000068b8         db  0x02 ; '.'
00000000000068b9         db  0x82 ; '.'
00000000000068ba         db  0x0a ; '.'
00000000000068bb         db  0x0e ; '.'
00000000000068bc         db  0x08 ; '.'
00000000000068bd         db  0x41 ; 'A'
00000000000068be         db  0x0b ; '.'
00000000000068bf         db  0x00 ; '.'
00000000000068c0         dd         0x00000010                                  ; Length of the record
00000000000068c4         dd         0x000005c4                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
00000000000068c8         db         0x68, 0xd7, 2 dup (0xff)                    ; begin 0x4030
00000000000068cc         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x403c)
00000000000068d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000068d1         align      4
00000000000068d4         dd         0x00000010                                  ; Length of the record
00000000000068d8         dd         0x000005d8                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
00000000000068dc         db         0x64, 0xd7, 2 dup (0xff)                    ; begin 0x4040
00000000000068e0         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x4057)
00000000000068e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000068e5         align      8
00000000000068e8         dd         0x00000010                                  ; Length of the record
00000000000068ec         dd         0x000005ec                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
00000000000068f0         db         0x70, 0xd7, 2 dup (0xff)                    ; begin 0x4060
00000000000068f4         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4073)
00000000000068f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000068f9         align      4
00000000000068fc         dd         0x00000010                                  ; Length of the record
0000000000006900         dd         0x00000600                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006904         db         0x7c, 0xd7, 2 dup (0xff)                    ; begin 0x4080
0000000000006908         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x408c)
000000000000690c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000690d         align      16
0000000000006910         dd         0x00000010                                  ; Length of the record
0000000000006914         dd         0x00000614                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006918         db         0x78, 0xd7, 2 dup (0xff)                    ; begin 0x4090
000000000000691c         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x40a4)
0000000000006920         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006921         align      4
0000000000006924         dd         0x00000010                                  ; Length of the record
0000000000006928         dd         0x00000628                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
000000000000692c         db         0x84, 0xd7, 2 dup (0xff)                    ; begin 0x40b0
0000000000006930         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x40c3)
0000000000006934         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006935         align      8
0000000000006938         dd         0x00000014                                  ; Length of the record
000000000000693c         dd         0x0000063c                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006940         db         0x90, 0xd7, 2 dup (0xff)                    ; begin 0x40d0
0000000000006944         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x40e8)
0000000000006948         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006949         align      16
0000000000006950         dd         0x00000110                                  ; Length of the record
0000000000006954         dd         0x00000654                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006958         db         0x98, 0xd7, 2 dup (0xff)                    ; begin 0x40f0
000000000000695c         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x4507)
0000000000006960         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006961         db  0x42 ; 'B'
0000000000006962         db  0x0e ; '.'
0000000000006963         db  0x10 ; '.'
0000000000006964         db  0x8f ; '.'
0000000000006965         db  0x02 ; '.'
0000000000006966         db  0x42 ; 'B'
0000000000006967         db  0x0e ; '.'
0000000000006968         db  0x18 ; '.'
0000000000006969         db  0x8e ; '.'
000000000000696a         db  0x03 ; '.'
000000000000696b         db  0x42 ; 'B'
000000000000696c         db  0x0e ; '.'
000000000000696d         db  0x20 ; ' '
000000000000696e         db  0x8d ; '.'
000000000000696f         db  0x04 ; '.'
0000000000006970         db  0x42 ; 'B'
0000000000006971         db  0x0e ; '.'
0000000000006972         db  0x28 ; '('
0000000000006973         db  0x8c ; '.'
0000000000006974         db  0x05 ; '.'
0000000000006975         db  0x44 ; 'D'
0000000000006976         db  0x0e ; '.'
0000000000006977         db  0x30 ; '0'
0000000000006978         db  0x86 ; '.'
0000000000006979         db  0x06 ; '.'
000000000000697a         db  0x41 ; 'A'
000000000000697b         db  0x0e ; '.'
000000000000697c         db  0x38 ; '8'
000000000000697d         db  0x83 ; '.'
000000000000697e         db  0x07 ; '.'
000000000000697f         db  0x4a ; 'J'
0000000000006980         db  0x0e ; '.'
0000000000006981         db  0x60 ; '`'
0000000000006982         db  0x02 ; '.'
0000000000006983         db  0xdd ; '.'
0000000000006984         db  0x0e ; '.'
0000000000006985         db  0x68 ; 'h'
0000000000006986         db  0x57 ; 'W'
0000000000006987         db  0x0e ; '.'
0000000000006988         db  0x70 ; 'p'
0000000000006989         db  0x42 ; 'B'
000000000000698a         db  0x0e ; '.'
000000000000698b         db  0x78 ; 'x'
000000000000698c         db  0x42 ; 'B'
000000000000698d         db  0x0e ; '.'
000000000000698e         db  0x80 ; '.'
000000000000698f         db  0x01 ; '.'
0000000000006990         db  0x42 ; 'B'
0000000000006991         db  0x0e ; '.'
0000000000006992         db  0x88 ; '.'
0000000000006993         db  0x01 ; '.'
0000000000006994         db  0x42 ; 'B'
0000000000006995         db  0x0e ; '.'
0000000000006996         db  0x90 ; '.'
0000000000006997         db  0x01 ; '.'
0000000000006998         db  0x53 ; 'S'
0000000000006999         db  0x0e ; '.'
000000000000699a         db  0x60 ; '`'
000000000000699b         db  0x44 ; 'D'
000000000000699c         db  0x0a ; '.'
000000000000699d         db  0x0e ; '.'
000000000000699e         db  0x38 ; '8'
000000000000699f         db  0x41 ; 'A'
00000000000069a0         db  0x0e ; '.'
00000000000069a1         db  0x30 ; '0'
00000000000069a2         db  0x41 ; 'A'
00000000000069a3         db  0x0e ; '.'
00000000000069a4         db  0x28 ; '('
00000000000069a5         db  0x42 ; 'B'
00000000000069a6         db  0x0e ; '.'
00000000000069a7         db  0x20 ; ' '
00000000000069a8         db  0x42 ; 'B'
00000000000069a9         db  0x0e ; '.'
00000000000069aa         db  0x18 ; '.'
00000000000069ab         db  0x42 ; 'B'
00000000000069ac         db  0x0e ; '.'
00000000000069ad         db  0x10 ; '.'
00000000000069ae         db  0x42 ; 'B'
00000000000069af         db  0x0e ; '.'
00000000000069b0         db  0x08 ; '.'
00000000000069b1         db  0x44 ; 'D'
00000000000069b2         db  0x0b ; '.'
00000000000069b3         db  0x02 ; '.'
00000000000069b4         db  0x78 ; 'x'
00000000000069b5         db  0x0a ; '.'
00000000000069b6         db  0x0e ; '.'
00000000000069b7         db  0x68 ; 'h'
00000000000069b8         db  0x48 ; 'H'
00000000000069b9         db  0x0b ; '.'
00000000000069ba         db  0x5a ; 'Z'
00000000000069bb         db  0x0a ; '.'
00000000000069bc         db  0x0e ; '.'
00000000000069bd         db  0x38 ; '8'
00000000000069be         db  0x47 ; 'G'
00000000000069bf         db  0x0e ; '.'
00000000000069c0         db  0x30 ; '0'
00000000000069c1         db  0x41 ; 'A'
00000000000069c2         db  0x0e ; '.'
00000000000069c3         db  0x28 ; '('
00000000000069c4         db  0x42 ; 'B'
00000000000069c5         db  0x0e ; '.'
00000000000069c6         db  0x20 ; ' '
00000000000069c7         db  0x42 ; 'B'
00000000000069c8         db  0x0e ; '.'
00000000000069c9         db  0x18 ; '.'
00000000000069ca         db  0x42 ; 'B'
00000000000069cb         db  0x0e ; '.'
00000000000069cc         db  0x10 ; '.'
00000000000069cd         db  0x42 ; 'B'
00000000000069ce         db  0x0e ; '.'
00000000000069cf         db  0x08 ; '.'
00000000000069d0         db  0x56 ; 'V'
00000000000069d1         db  0x0b ; '.'
00000000000069d2         db  0x5e ; '^'
00000000000069d3         db  0x0a ; '.'
00000000000069d4         db  0x0e ; '.'
00000000000069d5         db  0x38 ; '8'
00000000000069d6         db  0x52 ; 'R'
00000000000069d7         db  0x0e ; '.'
00000000000069d8         db  0x30 ; '0'
00000000000069d9         db  0x41 ; 'A'
00000000000069da         db  0x0e ; '.'
00000000000069db         db  0x28 ; '('
00000000000069dc         db  0x42 ; 'B'
00000000000069dd         db  0x0e ; '.'
00000000000069de         db  0x20 ; ' '
00000000000069df         db  0x42 ; 'B'
00000000000069e0         db  0x0e ; '.'
00000000000069e1         db  0x18 ; '.'
00000000000069e2         db  0x42 ; 'B'
00000000000069e3         db  0x0e ; '.'
00000000000069e4         db  0x10 ; '.'
00000000000069e5         db  0x42 ; 'B'
00000000000069e6         db  0x0e ; '.'
00000000000069e7         db  0x08 ; '.'
00000000000069e8         db  0x4f ; 'O'
00000000000069e9         db  0x0b ; '.'
00000000000069ea         db  0x62 ; 'b'
00000000000069eb         db  0x0a ; '.'
00000000000069ec         db  0x0e ; '.'
00000000000069ed         db  0x38 ; '8'
00000000000069ee         db  0x50 ; 'P'
00000000000069ef         db  0x0e ; '.'
00000000000069f0         db  0x30 ; '0'
00000000000069f1         db  0x41 ; 'A'
00000000000069f2         db  0x0e ; '.'
00000000000069f3         db  0x28 ; '('
00000000000069f4         db  0x42 ; 'B'
00000000000069f5         db  0x0e ; '.'
00000000000069f6         db  0x20 ; ' '
00000000000069f7         db  0x42 ; 'B'
00000000000069f8         db  0x0e ; '.'
00000000000069f9         db  0x18 ; '.'
00000000000069fa         db  0x42 ; 'B'
00000000000069fb         db  0x0e ; '.'
00000000000069fc         db  0x10 ; '.'
00000000000069fd         db  0x42 ; 'B'
00000000000069fe         db  0x0e ; '.'
00000000000069ff         db  0x08 ; '.'
0000000000006a00         db  0x55 ; 'U'
0000000000006a01         db  0x0b ; '.'
0000000000006a02         db  0x66 ; 'f'
0000000000006a03         db  0x0e ; '.'
0000000000006a04         db  0x68 ; 'h'
0000000000006a05         db  0x42 ; 'B'
0000000000006a06         db  0x0e ; '.'
0000000000006a07         db  0x70 ; 'p'
0000000000006a08         db  0x5c ; '\'
0000000000006a09         db  0x0e ; '.'
0000000000006a0a         db  0x68 ; 'h'
0000000000006a0b         db  0x41 ; 'A'
0000000000006a0c         db  0x0e ; '.'
0000000000006a0d         db  0x60 ; '`'
0000000000006a0e         db  0x44 ; 'D'
0000000000006a0f         db  0x0a ; '.'
0000000000006a10         db  0x0e ; '.'
0000000000006a11         db  0x38 ; '8'
0000000000006a12         db  0x41 ; 'A'
0000000000006a13         db  0x0e ; '.'
0000000000006a14         db  0x30 ; '0'
0000000000006a15         db  0x41 ; 'A'
0000000000006a16         db  0x0e ; '.'
0000000000006a17         db  0x28 ; '('
0000000000006a18         db  0x42 ; 'B'
0000000000006a19         db  0x0e ; '.'
0000000000006a1a         db  0x20 ; ' '
0000000000006a1b         db  0x42 ; 'B'
0000000000006a1c         db  0x0e ; '.'
0000000000006a1d         db  0x18 ; '.'
0000000000006a1e         db  0x42 ; 'B'
0000000000006a1f         db  0x0e ; '.'
0000000000006a20         db  0x10 ; '.'
0000000000006a21         db  0x42 ; 'B'
0000000000006a22         db  0x0e ; '.'
0000000000006a23         db  0x08 ; '.'
0000000000006a24         db  0x45 ; 'E'
0000000000006a25         db  0x0b ; '.'
0000000000006a26         db  0x68 ; 'h'
0000000000006a27         db  0x0a ; '.'
0000000000006a28         db  0x0e ; '.'
0000000000006a29         db  0x68 ; 'h'
0000000000006a2a         db  0x48 ; 'H'
0000000000006a2b         db  0x0b ; '.'
0000000000006a2c         db  0x72 ; 'r'
0000000000006a2d         db  0x0e ; '.'
0000000000006a2e         db  0x68 ; 'h'
0000000000006a2f         db  0x45 ; 'E'
0000000000006a30         db  0x0e ; '.'
0000000000006a31         db  0x70 ; 'p'
0000000000006a32         db  0x42 ; 'B'
0000000000006a33         db  0x0e ; '.'
0000000000006a34         db  0x78 ; 'x'
0000000000006a35         db  0x42 ; 'B'
0000000000006a36         db  0x0e ; '.'
0000000000006a37         db  0x80 ; '.'
0000000000006a38         db  0x01 ; '.'
0000000000006a39         db  0x5e ; '^'
0000000000006a3a         db  0x0e ; '.'
0000000000006a3b         db  0x60 ; '`'
0000000000006a3c         db  0x44 ; 'D'
0000000000006a3d         db  0x0a ; '.'
0000000000006a3e         db  0x0e ; '.'
0000000000006a3f         db  0x38 ; '8'
0000000000006a40         db  0x41 ; 'A'
0000000000006a41         db  0x0e ; '.'
0000000000006a42         db  0x30 ; '0'
0000000000006a43         db  0x41 ; 'A'
0000000000006a44         db  0x0e ; '.'
0000000000006a45         db  0x28 ; '('
0000000000006a46         db  0x42 ; 'B'
0000000000006a47         db  0x0e ; '.'
0000000000006a48         db  0x20 ; ' '
0000000000006a49         db  0x42 ; 'B'
0000000000006a4a         db  0x0e ; '.'
0000000000006a4b         db  0x18 ; '.'
0000000000006a4c         db  0x42 ; 'B'
0000000000006a4d         db  0x0e ; '.'
0000000000006a4e         db  0x10 ; '.'
0000000000006a4f         db  0x42 ; 'B'
0000000000006a50         db  0x0e ; '.'
0000000000006a51         db  0x08 ; '.'
0000000000006a52         db  0x41 ; 'A'
0000000000006a53         db  0x0b ; '.'
0000000000006a54         db  0x79 ; 'y'
0000000000006a55         db  0x0a ; '.'
0000000000006a56         db  0x0e ; '.'
0000000000006a57         db  0x68 ; 'h'
0000000000006a58         db  0x42 ; 'B'
0000000000006a59         db  0x0e ; '.'
0000000000006a5a         db  0x70 ; 'p'
0000000000006a5b         db  0x42 ; 'B'
0000000000006a5c         db  0x0e ; '.'
0000000000006a5d         db  0x78 ; 'x'
0000000000006a5e         db  0x42 ; 'B'
0000000000006a5f         db  0x0e ; '.'
0000000000006a60         db  0x80 ; '.'
0000000000006a61         db  0x01 ; '.'
0000000000006a62         db  0x51 ; 'Q'
0000000000006a63         db  0x0b ; '.'
0000000000006a64         dd         0x00000010                                  ; Length of the record
0000000000006a68         dd         0x00000768                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006a6c         db         0xa4, 0xda, 2 dup (0xff)                    ; begin 0x4510
0000000000006a70         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x4530)
0000000000006a74         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006a75         align      8
0000000000006a78         dd         0x00000018                                  ; Length of the record
0000000000006a7c         dd         0x0000077c                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006a80         db         0xb0, 0xda, 2 dup (0xff)                    ; begin 0x4530
0000000000006a84         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x45a8)
0000000000006a88         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006a89         db  0x44 ; 'D'
0000000000006a8a         db  0x0e ; '.'
0000000000006a8b         db  0x70 ; 'p'
0000000000006a8c         db  0x02 ; '.'
0000000000006a8d         db  0x60 ; '`'
0000000000006a8e         db  0x0a ; '.'
0000000000006a8f         db  0x0e ; '.'
0000000000006a90         db  0x08 ; '.'
0000000000006a91         db  0x41 ; 'A'
0000000000006a92         db  0x0b ; '.'
0000000000006a93         db  0x00 ; '.'
0000000000006a94         dd         0x00000028                                  ; Length of the record
0000000000006a98         dd         0x00000798                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006a9c         db         0x14, 0xdb, 2 dup (0xff)                    ; begin 0x45b0
0000000000006aa0         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x4685)
0000000000006aa4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006aa5         db  0x41 ; 'A'
0000000000006aa6         db  0x0e ; '.'
0000000000006aa7         db  0x10 ; '.'
0000000000006aa8         db  0x86 ; '.'
0000000000006aa9         db  0x02 ; '.'
0000000000006aaa         db  0x41 ; 'A'
0000000000006aab         db  0x0e ; '.'
0000000000006aac         db  0x18 ; '.'
0000000000006aad         db  0x83 ; '.'
0000000000006aae         db  0x03 ; '.'
0000000000006aaf         db  0x50 ; 'P'
0000000000006ab0         db  0x0e ; '.'
0000000000006ab1         db  0xd0 ; '.'
0000000000006ab2         db  0x01 ; '.'
0000000000006ab3         db  0x02 ; '.'
0000000000006ab4         db  0xab ; '.'
0000000000006ab5         db  0x0a ; '.'
0000000000006ab6         db  0x0e ; '.'
0000000000006ab7         db  0x18 ; '.'
0000000000006ab8         db  0x41 ; 'A'
0000000000006ab9         db  0x0e ; '.'
0000000000006aba         db  0x10 ; '.'
0000000000006abb         db  0x41 ; 'A'
0000000000006abc         db  0x0e ; '.'
0000000000006abd         db  0x08 ; '.'
0000000000006abe         db  0x41 ; 'A'
0000000000006abf         db  0x0b ; '.'
0000000000006ac0         dd         0x0000001c                                  ; Length of the record
0000000000006ac4         dd         0x000007c4                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006ac8         db         0xc8, 0xdb, 2 dup (0xff)                    ; begin 0x4690
0000000000006acc         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x4710)
0000000000006ad0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ad1         db  0x41 ; 'A'
0000000000006ad2         db  0x0e ; '.'
0000000000006ad3         db  0x10 ; '.'
0000000000006ad4         db  0x83 ; '.'
0000000000006ad5         db  0x02 ; '.'
0000000000006ad6         db  0x02 ; '.'
0000000000006ad7         db  0x7a ; 'z'
0000000000006ad8         db  0x0e ; '.'
0000000000006ad9         db  0x08 ; '.'
0000000000006ada         db  0x00 ; '.'
0000000000006adb         db  0x00 ; '.'
0000000000006adc         db  0x00 ; '.'
0000000000006add         db  0x00 ; '.'
0000000000006ade         db  0x00 ; '.'
0000000000006adf         db  0x00 ; '.'
0000000000006ae0         dd         0x00000018                                  ; Length of the record
0000000000006ae4         dd         0x000007e4                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006ae8         db         0x28, 0xdc, 2 dup (0xff)                    ; begin 0x4710
0000000000006aec         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x472a)
0000000000006af0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006af1         db  0x41 ; 'A'
0000000000006af2         db  0x0e ; '.'
0000000000006af3         db  0x10 ; '.'
0000000000006af4         db  0x83 ; '.'
0000000000006af5         db  0x02 ; '.'
0000000000006af6         db  0x53 ; 'S'
0000000000006af7         db  0x0a ; '.'
0000000000006af8         db  0x0e ; '.'
0000000000006af9         db  0x08 ; '.'
0000000000006afa         db  0x41 ; 'A'
0000000000006afb         db  0x0b ; '.'
0000000000006afc         dd         0x00000010                                  ; Length of the record
0000000000006b00         dd         0x00000800                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006b04         db         0x2c, 0xdc, 2 dup (0xff)                    ; begin 0x4730
0000000000006b08         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x4754)
0000000000006b0c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b0d         db  0x5f ; '_'
0000000000006b0e         db  0x0e ; '.'
0000000000006b0f         db  0x10 ; '.'
0000000000006b10         dd         0x00000010                                  ; Length of the record
0000000000006b14         dd         0x00000814                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006b18         db         0x48, 0xdc, 2 dup (0xff)                    ; begin 0x4760
0000000000006b1c         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x4762)
0000000000006b20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b21         align      4
0000000000006b24         dd         0x00000020                                  ; Length of the record
0000000000006b28         dd         0x00000828                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006b2c         db         0x44, 0xdc, 2 dup (0xff)                    ; begin 0x4770
0000000000006b30         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x47a6)
0000000000006b34         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b35         db  0x44 ; 'D'
0000000000006b36         db  0x0e ; '.'
0000000000006b37         db  0x10 ; '.'
0000000000006b38         db  0x83 ; '.'
0000000000006b39         db  0x02 ; '.'
0000000000006b3a         db  0x5d ; ']'
0000000000006b3b         db  0x0a ; '.'
0000000000006b3c         db  0x0e ; '.'
0000000000006b3d         db  0x08 ; '.'
0000000000006b3e         db  0x47 ; 'G'
0000000000006b3f         db  0x0b ; '.'
0000000000006b40         db  0x48 ; 'H'
0000000000006b41         db  0x0a ; '.'
0000000000006b42         db  0x0e ; '.'
0000000000006b43         db  0x08 ; '.'
0000000000006b44         db  0x41 ; 'A'
0000000000006b45         db  0x0b ; '.'
0000000000006b46         db  0x00 ; '.'
0000000000006b47         db  0x00 ; '.'
0000000000006b48         dd         0x00000010                                  ; Length of the record
0000000000006b4c         dd         0x0000084c                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006b50         db         0x60, 0xdc, 2 dup (0xff)                    ; begin 0x47b0
0000000000006b54         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x47d4)
0000000000006b58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b59         db  0x5f ; '_'
0000000000006b5a         db  0x0e ; '.'
0000000000006b5b         db  0x10 ; '.'
0000000000006b5c         dd         0x00000014                                  ; Length of the record
0000000000006b60         dd         0x00000860                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006b64         db         0x7c, 0xdc, 2 dup (0xff)                    ; begin 0x47e0
0000000000006b68         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x4862)
0000000000006b6c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b6d         db  0x02 ; '.'
0000000000006b6e         db  0x5f ; '_'
0000000000006b6f         db  0x0e ; '.'
0000000000006b70         db  0x10 ; '.'
0000000000006b71         db  0x49 ; 'I'
0000000000006b72         db  0x0e ; '.'
0000000000006b73         db  0x08 ; '.'
0000000000006b74         dd         0x00000014                                  ; Length of the record
0000000000006b78         dd         0x00000878                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006b7c         db         0xf4, 0xdc, 2 dup (0xff)                    ; begin 0x4870
0000000000006b80         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x48ba)
0000000000006b84         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b85         db  0x02 ; '.'
0000000000006b86         db  0x45 ; 'E'
0000000000006b87         db  0x0e ; '.'
0000000000006b88         db  0x10 ; '.'
0000000000006b89         db  0x00 ; '.'
0000000000006b8a         db  0x00 ; '.'
0000000000006b8b         db  0x00 ; '.'
0000000000006b8c         dd         0x00000018                                  ; Length of the record
0000000000006b90         dd         0x00000890                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006b94         db         0x2c, 0xdd, 2 dup (0xff)                    ; begin 0x48c0
0000000000006b98         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x48d7)
0000000000006b9c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b9d         db  0x41 ; 'A'
0000000000006b9e         db  0x0e ; '.'
0000000000006b9f         db  0x10 ; '.'
0000000000006ba0         db  0x83 ; '.'
0000000000006ba1         db  0x02 ; '.'
0000000000006ba2         db  0x51 ; 'Q'
0000000000006ba3         db  0x0e ; '.'
0000000000006ba4         db  0x08 ; '.'
0000000000006ba5         db  0x00 ; '.'
0000000000006ba6         db  0x00 ; '.'
0000000000006ba7         db  0x00 ; '.'
0000000000006ba8         dd         0x00000018                                  ; Length of the record
0000000000006bac         dd         0x000008ac                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006bb0         db         0x30, 0xdd, 2 dup (0xff)                    ; begin 0x48e0
0000000000006bb4         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x490e)
0000000000006bb8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006bb9         db  0x47 ; 'G'
0000000000006bba         db  0x0e ; '.'
0000000000006bbb         db  0x10 ; '.'
0000000000006bbc         db  0x61 ; 'a'
0000000000006bbd         db  0x0a ; '.'
0000000000006bbe         db  0x0e ; '.'
0000000000006bbf         db  0x08 ; '.'
0000000000006bc0         db  0x41 ; 'A'
0000000000006bc1         db  0x0b ; '.'
0000000000006bc2         db  0x00 ; '.'
0000000000006bc3         db  0x00 ; '.'
0000000000006bc4         dd         0x00000024                                  ; Length of the record
0000000000006bc8         dd         0x000008c8                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006bcc         db         0x44, 0xdd, 2 dup (0xff)                    ; begin 0x4910
0000000000006bd0         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x4938)
0000000000006bd4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006bd5         db  0x41 ; 'A'
0000000000006bd6         db  0x0e ; '.'
0000000000006bd7         db  0x10 ; '.'
0000000000006bd8         db  0x86 ; '.'
0000000000006bd9         db  0x02 ; '.'
0000000000006bda         db  0x41 ; 'A'
0000000000006bdb         db  0x0e ; '.'
0000000000006bdc         db  0x18 ; '.'
0000000000006bdd         db  0x83 ; '.'
0000000000006bde         db  0x03 ; '.'
0000000000006bdf         db  0x4d ; 'M'
0000000000006be0         db  0x0e ; '.'
0000000000006be1         db  0x20 ; ' '
0000000000006be2         db  0x49 ; 'I'
0000000000006be3         db  0x0e ; '.'
0000000000006be4         db  0x18 ; '.'
0000000000006be5         db  0x47 ; 'G'
0000000000006be6         db  0x0e ; '.'
0000000000006be7         db  0x10 ; '.'
0000000000006be8         db  0x41 ; 'A'
0000000000006be9         db  0x0e ; '.'
0000000000006bea         db  0x08 ; '.'
0000000000006beb         db  0x00 ; '.'
0000000000006bec         dd         0x00000018                                  ; Length of the record
0000000000006bf0         dd         0x000008f0                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006bf4         db         0x4c, 0xdd, 2 dup (0xff)                    ; begin 0x4940
0000000000006bf8         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4953)
0000000000006bfc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006bfd         db  0x41 ; 'A'
0000000000006bfe         db  0x0e ; '.'
0000000000006bff         db  0x10 ; '.'
0000000000006c00         db  0x83 ; '.'
0000000000006c01         db  0x02 ; '.'
0000000000006c02         db  0x50 ; 'P'
0000000000006c03         db  0x0e ; '.'
0000000000006c04         db  0x08 ; '.'
0000000000006c05         db  0x00 ; '.'
0000000000006c06         db  0x00 ; '.'
0000000000006c07         db  0x00 ; '.'
0000000000006c08         dd         0x00000014                                  ; Length of the record
0000000000006c0c         dd         0x0000090c                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006c10         db         0x50, 0xdd, 2 dup (0xff)                    ; begin 0x4960
0000000000006c14         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x4995)
0000000000006c18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c19         db  0x4b ; 'K'
0000000000006c1a         db  0x0e ; '.'
0000000000006c1b         db  0x10 ; '.'
0000000000006c1c         db  0x00 ; '.'
0000000000006c1d         db  0x00 ; '.'
0000000000006c1e         db  0x00 ; '.'
0000000000006c1f         db  0x00 ; '.'
0000000000006c20         dd         0x00000048                                  ; Length of the record
0000000000006c24         dd         0x00000924                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006c28         db         0x78, 0xdd, 2 dup (0xff)                    ; begin 0x49a0
0000000000006c2c         db         0x00, 0x01, 2 dup (0x00)                    ; length 0x100 (end at 0x4aa0)
0000000000006c30         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c31         db  0x42 ; 'B'
0000000000006c32         db  0x0e ; '.'
0000000000006c33         db  0x10 ; '.'
0000000000006c34         db  0x8f ; '.'
0000000000006c35         db  0x02 ; '.'
0000000000006c36         db  0x42 ; 'B'
0000000000006c37         db  0x0e ; '.'
0000000000006c38         db  0x18 ; '.'
0000000000006c39         db  0x8e ; '.'
0000000000006c3a         db  0x03 ; '.'
0000000000006c3b         db  0x45 ; 'E'
0000000000006c3c         db  0x0e ; '.'
0000000000006c3d         db  0x20 ; ' '
0000000000006c3e         db  0x8d ; '.'
0000000000006c3f         db  0x04 ; '.'
0000000000006c40         db  0x42 ; 'B'
0000000000006c41         db  0x0e ; '.'
0000000000006c42         db  0x28 ; '('
0000000000006c43         db  0x8c ; '.'
0000000000006c44         db  0x05 ; '.'
0000000000006c45         db  0x44 ; 'D'
0000000000006c46         db  0x0e ; '.'
0000000000006c47         db  0x30 ; '0'
0000000000006c48         db  0x86 ; '.'
0000000000006c49         db  0x06 ; '.'
0000000000006c4a         db  0x41 ; 'A'
0000000000006c4b         db  0x0e ; '.'
0000000000006c4c         db  0x38 ; '8'
0000000000006c4d         db  0x83 ; '.'
0000000000006c4e         db  0x07 ; '.'
0000000000006c4f         db  0x4e ; 'N'
0000000000006c50         db  0x0e ; '.'
0000000000006c51         db  0x50 ; 'P'
0000000000006c52         db  0x02 ; '.'
0000000000006c53         db  0x9d ; '.'
0000000000006c54         db  0x0a ; '.'
0000000000006c55         db  0x0e ; '.'
0000000000006c56         db  0x38 ; '8'
0000000000006c57         db  0x41 ; 'A'
0000000000006c58         db  0x0e ; '.'
0000000000006c59         db  0x30 ; '0'
0000000000006c5a         db  0x41 ; 'A'
0000000000006c5b         db  0x0e ; '.'
0000000000006c5c         db  0x28 ; '('
0000000000006c5d         db  0x42 ; 'B'
0000000000006c5e         db  0x0e ; '.'
0000000000006c5f         db  0x20 ; ' '
0000000000006c60         db  0x42 ; 'B'
0000000000006c61         db  0x0e ; '.'
0000000000006c62         db  0x18 ; '.'
0000000000006c63         db  0x42 ; 'B'
0000000000006c64         db  0x0e ; '.'
0000000000006c65         db  0x10 ; '.'
0000000000006c66         db  0x42 ; 'B'
0000000000006c67         db  0x0e ; '.'
0000000000006c68         db  0x08 ; '.'
0000000000006c69         db  0x4b ; 'K'
0000000000006c6a         db  0x0b ; '.'
0000000000006c6b         db  0x00 ; '.'
0000000000006c6c         dd         0x00000018                                  ; Length of the record
0000000000006c70         dd         0x00000970                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006c74         db         0x2c, 0xde, 2 dup (0xff)                    ; begin 0x4aa0
0000000000006c78         db         0x21, 3 dup (0x00)                          ; length 0x21 (end at 0x4ac1)
0000000000006c7c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c7d         db  0x44 ; 'D'
0000000000006c7e         db  0x0e ; '.'
0000000000006c7f         db  0x18 ; '.'
0000000000006c80         db  0x42 ; 'B'
0000000000006c81         db  0x0e ; '.'
0000000000006c82         db  0x20 ; ' '
0000000000006c83         db  0x5a ; 'Z'
0000000000006c84         db  0x0e ; '.'
0000000000006c85         db  0x08 ; '.'
0000000000006c86         db  0x00 ; '.'
0000000000006c87         db  0x00 ; '.'
0000000000006c88         dd         0x0000004c                                  ; Length of the record
0000000000006c8c         dd         0x0000098c                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006c90         db         0x40, 0xde, 2 dup (0xff)                    ; begin 0x4ad0
0000000000006c94         db         0x1c, 0x04, 2 dup (0x00)                    ; length 0x41c (end at 0x4eec)
0000000000006c98         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c99         db  0x42 ; 'B'
0000000000006c9a         db  0x0e ; '.'
0000000000006c9b         db  0x10 ; '.'
0000000000006c9c         db  0x8f ; '.'
0000000000006c9d         db  0x02 ; '.'
0000000000006c9e         db  0x42 ; 'B'
0000000000006c9f         db  0x0e ; '.'
0000000000006ca0         db  0x18 ; '.'
0000000000006ca1         db  0x8e ; '.'
0000000000006ca2         db  0x03 ; '.'
0000000000006ca3         db  0x42 ; 'B'
0000000000006ca4         db  0x0e ; '.'
0000000000006ca5         db  0x20 ; ' '
0000000000006ca6         db  0x8d ; '.'
0000000000006ca7         db  0x04 ; '.'
0000000000006ca8         db  0x42 ; 'B'
0000000000006ca9         db  0x0e ; '.'
0000000000006caa         db  0x28 ; '('
0000000000006cab         db  0x8c ; '.'
0000000000006cac         db  0x05 ; '.'
0000000000006cad         db  0x41 ; 'A'
0000000000006cae         db  0x0e ; '.'
0000000000006caf         db  0x30 ; '0'
0000000000006cb0         db  0x86 ; '.'
0000000000006cb1         db  0x06 ; '.'
0000000000006cb2         db  0x41 ; 'A'
0000000000006cb3         db  0x0e ; '.'
0000000000006cb4         db  0x38 ; '8'
0000000000006cb5         db  0x83 ; '.'
0000000000006cb6         db  0x07 ; '.'
0000000000006cb7         db  0x44 ; 'D'
0000000000006cb8         db  0x0e ; '.'
0000000000006cb9         db  0x60 ; '`'
0000000000006cba         db  0x02 ; '.'
0000000000006cbb         db  0xe9 ; '.'
0000000000006cbc         db  0x0a ; '.'
0000000000006cbd         db  0x0e ; '.'
0000000000006cbe         db  0x38 ; '8'
0000000000006cbf         db  0x41 ; 'A'
0000000000006cc0         db  0x0e ; '.'
0000000000006cc1         db  0x30 ; '0'
0000000000006cc2         db  0x41 ; 'A'
0000000000006cc3         db  0x0e ; '.'
0000000000006cc4         db  0x28 ; '('
0000000000006cc5         db  0x42 ; 'B'
0000000000006cc6         db  0x0e ; '.'
0000000000006cc7         db  0x20 ; ' '
0000000000006cc8         db  0x42 ; 'B'
0000000000006cc9         db  0x0e ; '.'
0000000000006cca         db  0x18 ; '.'
0000000000006ccb         db  0x42 ; 'B'
0000000000006ccc         db  0x0e ; '.'
0000000000006ccd         db  0x10 ; '.'
0000000000006cce         db  0x42 ; 'B'
0000000000006ccf         db  0x0e ; '.'
0000000000006cd0         db  0x08 ; '.'
0000000000006cd1         db  0x47 ; 'G'
0000000000006cd2         db  0x0b ; '.'
0000000000006cd3         db  0x00 ; '.'
0000000000006cd4         db  0x00 ; '.'
0000000000006cd5         db  0x00 ; '.'
0000000000006cd6         db  0x00 ; '.'
0000000000006cd7         db  0x00 ; '.'
0000000000006cd8         dd         0x00000034                                  ; Length of the record
0000000000006cdc         dd         0x000009dc                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006ce0         db         0x10, 0xe2, 2 dup (0xff)                    ; begin 0x4ef0
0000000000006ce4         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x4f6b)
0000000000006ce8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ce9         db  0x42 ; 'B'
0000000000006cea         db  0x0e ; '.'
0000000000006ceb         db  0x10 ; '.'
0000000000006cec         db  0x8c ; '.'
0000000000006ced         db  0x02 ; '.'
0000000000006cee         db  0x41 ; 'A'
0000000000006cef         db  0x0e ; '.'
0000000000006cf0         db  0x18 ; '.'
0000000000006cf1         db  0x86 ; '.'
0000000000006cf2         db  0x03 ; '.'
0000000000006cf3         db  0x41 ; 'A'
0000000000006cf4         db  0x0e ; '.'
0000000000006cf5         db  0x20 ; ' '
0000000000006cf6         db  0x83 ; '.'
0000000000006cf7         db  0x04 ; '.'
0000000000006cf8         db  0x7d ; '}'
0000000000006cf9         db  0x0a ; '.'
0000000000006cfa         db  0x0e ; '.'
0000000000006cfb         db  0x18 ; '.'
0000000000006cfc         db  0x41 ; 'A'
0000000000006cfd         db  0x0e ; '.'
0000000000006cfe         db  0x10 ; '.'
0000000000006cff         db  0x42 ; 'B'
0000000000006d00         db  0x0e ; '.'
0000000000006d01         db  0x08 ; '.'
0000000000006d02         db  0x44 ; 'D'
0000000000006d03         db  0x0b ; '.'
0000000000006d04         db  0x60 ; '`'
0000000000006d05         db  0x0a ; '.'
0000000000006d06         db  0x0e ; '.'
0000000000006d07         db  0x18 ; '.'
0000000000006d08         db  0x41 ; 'A'
0000000000006d09         db  0x0e ; '.'
0000000000006d0a         db  0x10 ; '.'
0000000000006d0b         db  0x42 ; 'B'
0000000000006d0c         db  0x0e ; '.'
0000000000006d0d         db  0x08 ; '.'
0000000000006d0e         db  0x45 ; 'E'
0000000000006d0f         db  0x0b ; '.'
0000000000006d10         dd         0x0000001c                                  ; Length of the record
0000000000006d14         dd         0x00000a14                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006d18         db         0x58, 0xe2, 2 dup (0xff)                    ; begin 0x4f70
0000000000006d1c         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x4fb0)
0000000000006d20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d21         db  0x44 ; 'D'
0000000000006d22         db  0x0e ; '.'
0000000000006d23         db  0x10 ; '.'
0000000000006d24         db  0x83 ; '.'
0000000000006d25         db  0x02 ; '.'
0000000000006d26         db  0x5a ; 'Z'
0000000000006d27         db  0x0a ; '.'
0000000000006d28         db  0x0e ; '.'
0000000000006d29         db  0x08 ; '.'
0000000000006d2a         db  0x4a ; 'J'
0000000000006d2b         db  0x0b ; '.'
0000000000006d2c         db  0x53 ; 'S'
0000000000006d2d         db  0x0e ; '.'
0000000000006d2e         db  0x08 ; '.'
0000000000006d2f         db  0x00 ; '.'
0000000000006d30         dd         0x0000002c                                  ; Length of the record
0000000000006d34         dd         0x00000a34                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006d38         db         0x78, 0xe2, 2 dup (0xff)                    ; begin 0x4fb0
0000000000006d3c         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x5007)
0000000000006d40         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d41         db  0x63 ; 'c'
0000000000006d42         db  0x0e ; '.'
0000000000006d43         db  0x10 ; '.'
0000000000006d44         db  0x8c ; '.'
0000000000006d45         db  0x02 ; '.'
0000000000006d46         db  0x41 ; 'A'
0000000000006d47         db  0x0e ; '.'
0000000000006d48         db  0x18 ; '.'
0000000000006d49         db  0x86 ; '.'
0000000000006d4a         db  0x03 ; '.'
0000000000006d4b         db  0x44 ; 'D'
0000000000006d4c         db  0x0e ; '.'
0000000000006d4d         db  0x20 ; ' '
0000000000006d4e         db  0x83 ; '.'
0000000000006d4f         db  0x04 ; '.'
0000000000006d50         db  0x6b ; 'k'
0000000000006d51         db  0x0e ; '.'
0000000000006d52         db  0x18 ; '.'
0000000000006d53         db  0x41 ; 'A'
0000000000006d54         db  0x0e ; '.'
0000000000006d55         db  0x10 ; '.'
0000000000006d56         db  0x42 ; 'B'
0000000000006d57         db  0x0e ; '.'
0000000000006d58         db  0x08 ; '.'
0000000000006d59         db  0x00 ; '.'
0000000000006d5a         db  0x00 ; '.'
0000000000006d5b         db  0x00 ; '.'
0000000000006d5c         db  0x00 ; '.'
0000000000006d5d         db  0x00 ; '.'
0000000000006d5e         db  0x00 ; '.'
0000000000006d5f         db  0x00 ; '.'
0000000000006d60         dd         0x0000003c                                  ; Length of the record
0000000000006d64         dd         0x00000a64                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006d68         db         0xa8, 0xe2, 2 dup (0xff)                    ; begin 0x5010
0000000000006d6c         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x5093)
0000000000006d70         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d71         db  0x42 ; 'B'
0000000000006d72         db  0x0e ; '.'
0000000000006d73         db  0x10 ; '.'
0000000000006d74         db  0x8d ; '.'
0000000000006d75         db  0x02 ; '.'
0000000000006d76         db  0x42 ; 'B'
0000000000006d77         db  0x0e ; '.'
0000000000006d78         db  0x18 ; '.'
0000000000006d79         db  0x8c ; '.'
0000000000006d7a         db  0x03 ; '.'
0000000000006d7b         db  0x44 ; 'D'
0000000000006d7c         db  0x0e ; '.'
0000000000006d7d         db  0x20 ; ' '
0000000000006d7e         db  0x86 ; '.'
0000000000006d7f         db  0x04 ; '.'
0000000000006d80         db  0x41 ; 'A'
0000000000006d81         db  0x0e ; '.'
0000000000006d82         db  0x28 ; '('
0000000000006d83         db  0x83 ; '.'
0000000000006d84         db  0x05 ; '.'
0000000000006d85         db  0x4a ; 'J'
0000000000006d86         db  0x0e ; '.'
0000000000006d87         db  0x40 ; '@'
0000000000006d88         db  0x02 ; '.'
0000000000006d89         db  0x64 ; 'd'
0000000000006d8a         db  0x0a ; '.'
0000000000006d8b         db  0x0e ; '.'
0000000000006d8c         db  0x28 ; '('
0000000000006d8d         db  0x41 ; 'A'
0000000000006d8e         db  0x0e ; '.'
0000000000006d8f         db  0x20 ; ' '
0000000000006d90         db  0x41 ; 'A'
0000000000006d91         db  0x0e ; '.'
0000000000006d92         db  0x18 ; '.'
0000000000006d93         db  0x42 ; 'B'
0000000000006d94         db  0x0e ; '.'
0000000000006d95         db  0x10 ; '.'
0000000000006d96         db  0x42 ; 'B'
0000000000006d97         db  0x0e ; '.'
0000000000006d98         db  0x08 ; '.'
0000000000006d99         db  0x41 ; 'A'
0000000000006d9a         db  0x0b ; '.'
0000000000006d9b         db  0x00 ; '.'
0000000000006d9c         db  0x00 ; '.'
0000000000006d9d         db  0x00 ; '.'
0000000000006d9e         db  0x00 ; '.'
0000000000006d9f         db  0x00 ; '.'
0000000000006da0         dd         0x0000004c                                  ; Length of the record
0000000000006da4         dd         0x00000aa4                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006da8         db         0xf8, 0xe2, 2 dup (0xff)                    ; begin 0x50a0
0000000000006dac         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x511d)
0000000000006db0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006db1         db  0x42 ; 'B'
0000000000006db2         db  0x0e ; '.'
0000000000006db3         db  0x10 ; '.'
0000000000006db4         db  0x8c ; '.'
0000000000006db5         db  0x02 ; '.'
0000000000006db6         db  0x41 ; 'A'
0000000000006db7         db  0x0e ; '.'
0000000000006db8         db  0x18 ; '.'
0000000000006db9         db  0x86 ; '.'
0000000000006dba         db  0x03 ; '.'
0000000000006dbb         db  0x44 ; 'D'
0000000000006dbc         db  0x0e ; '.'
0000000000006dbd         db  0x20 ; ' '
0000000000006dbe         db  0x83 ; '.'
0000000000006dbf         db  0x04 ; '.'
0000000000006dc0         db  0x69 ; 'i'
0000000000006dc1         db  0x0a ; '.'
0000000000006dc2         db  0x0e ; '.'
0000000000006dc3         db  0x18 ; '.'
0000000000006dc4         db  0x41 ; 'A'
0000000000006dc5         db  0x0e ; '.'
0000000000006dc6         db  0x10 ; '.'
0000000000006dc7         db  0x42 ; 'B'
0000000000006dc8         db  0x0e ; '.'
0000000000006dc9         db  0x08 ; '.'
0000000000006dca         db  0x45 ; 'E'
0000000000006dcb         db  0x0b ; '.'
0000000000006dcc         db  0x55 ; 'U'
0000000000006dcd         db  0x0a ; '.'
0000000000006dce         db  0x0e ; '.'
0000000000006dcf         db  0x18 ; '.'
0000000000006dd0         db  0x41 ; 'A'
0000000000006dd1         db  0x0e ; '.'
0000000000006dd2         db  0x10 ; '.'
0000000000006dd3         db  0x42 ; 'B'
0000000000006dd4         db  0x0e ; '.'
0000000000006dd5         db  0x08 ; '.'
0000000000006dd6         db  0x48 ; 'H'
0000000000006dd7         db  0x0b ; '.'
0000000000006dd8         db  0x41 ; 'A'
0000000000006dd9         db  0x0a ; '.'
0000000000006dda         db  0x0e ; '.'
0000000000006ddb         db  0x18 ; '.'
0000000000006ddc         db  0x46 ; 'F'
0000000000006ddd         db  0x0e ; '.'
0000000000006dde         db  0x10 ; '.'
0000000000006ddf         db  0x42 ; 'B'
0000000000006de0         db  0x0e ; '.'
0000000000006de1         db  0x08 ; '.'
0000000000006de2         db  0x47 ; 'G'
0000000000006de3         db  0x0b ; '.'
0000000000006de4         db  0x49 ; 'I'
0000000000006de5         db  0x0e ; '.'
0000000000006de6         db  0x18 ; '.'
0000000000006de7         db  0x41 ; 'A'
0000000000006de8         db  0x0e ; '.'
0000000000006de9         db  0x10 ; '.'
0000000000006dea         db  0x42 ; 'B'
0000000000006deb         db  0x0e ; '.'
0000000000006dec         db  0x08 ; '.'
0000000000006ded         db  0x00 ; '.'
0000000000006dee         db  0x00 ; '.'
0000000000006def         db  0x00 ; '.'
0000000000006df0         dd         0x0000001c                                  ; Length of the record
0000000000006df4         dd         0x00000af4                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006df8         db         0x28, 0xe3, 2 dup (0xff)                    ; begin 0x5120
0000000000006dfc         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x5180)
0000000000006e00         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e01         db  0x44 ; 'D'
0000000000006e02         db  0x0e ; '.'
0000000000006e03         db  0x10 ; '.'
0000000000006e04         db  0x75 ; 'u'
0000000000006e05         db  0x0a ; '.'
0000000000006e06         db  0x0e ; '.'
0000000000006e07         db  0x08 ; '.'
0000000000006e08         db  0x47 ; 'G'
0000000000006e09         db  0x0b ; '.'
0000000000006e0a         db  0x5f ; '_'
0000000000006e0b         db  0x0e ; '.'
0000000000006e0c         db  0x08 ; '.'
0000000000006e0d         db  0x00 ; '.'
0000000000006e0e         db  0x00 ; '.'
0000000000006e0f         db  0x00 ; '.'
0000000000006e10         dd         0x0000001c                                  ; Length of the record
0000000000006e14         dd         0x00000b14                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006e18         db         0x68, 0xe3, 2 dup (0xff)                    ; begin 0x5180
0000000000006e1c         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x51bc)
0000000000006e20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e21         db  0x44 ; 'D'
0000000000006e22         db  0x0e ; '.'
0000000000006e23         db  0x10 ; '.'
0000000000006e24         db  0x61 ; 'a'
0000000000006e25         db  0x0a ; '.'
0000000000006e26         db  0x0e ; '.'
0000000000006e27         db  0x08 ; '.'
0000000000006e28         db  0x4b ; 'K'
0000000000006e29         db  0x0b ; '.'
0000000000006e2a         db  0x4b ; 'K'
0000000000006e2b         db  0x0e ; '.'
0000000000006e2c         db  0x08 ; '.'
0000000000006e2d         db  0x00 ; '.'
0000000000006e2e         db  0x00 ; '.'
0000000000006e2f         db  0x00 ; '.'
0000000000006e30         dd         0x00000044                                  ; Length of the record
0000000000006e34         dd         0x00000b34                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006e38         db         0x88, 0xe3, 2 dup (0xff)                    ; begin 0x51c0
0000000000006e3c         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x5225)
0000000000006e40         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e41         db  0x42 ; 'B'
0000000000006e42         db  0x0e ; '.'
0000000000006e43         db  0x10 ; '.'
0000000000006e44         db  0x8f ; '.'
0000000000006e45         db  0x02 ; '.'
0000000000006e46         db  0x42 ; 'B'
0000000000006e47         db  0x0e ; '.'
0000000000006e48         db  0x18 ; '.'
0000000000006e49         db  0x8e ; '.'
0000000000006e4a         db  0x03 ; '.'
0000000000006e4b         db  0x45 ; 'E'
0000000000006e4c         db  0x0e ; '.'
0000000000006e4d         db  0x20 ; ' '
0000000000006e4e         db  0x8d ; '.'
0000000000006e4f         db  0x04 ; '.'
0000000000006e50         db  0x42 ; 'B'
0000000000006e51         db  0x0e ; '.'
0000000000006e52         db  0x28 ; '('
0000000000006e53         db  0x8c ; '.'
0000000000006e54         db  0x05 ; '.'
0000000000006e55         db  0x48 ; 'H'
0000000000006e56         db  0x0e ; '.'
0000000000006e57         db  0x30 ; '0'
0000000000006e58         db  0x86 ; '.'
0000000000006e59         db  0x06 ; '.'
0000000000006e5a         db  0x48 ; 'H'
0000000000006e5b         db  0x0e ; '.'
0000000000006e5c         db  0x38 ; '8'
0000000000006e5d         db  0x83 ; '.'
0000000000006e5e         db  0x07 ; '.'
0000000000006e5f         db  0x4d ; 'M'
0000000000006e60         db  0x0e ; '.'
0000000000006e61         db  0x40 ; '@'
0000000000006e62         db  0x72 ; 'r'
0000000000006e63         db  0x0e ; '.'
0000000000006e64         db  0x38 ; '8'
0000000000006e65         db  0x41 ; 'A'
0000000000006e66         db  0x0e ; '.'
0000000000006e67         db  0x30 ; '0'
0000000000006e68         db  0x41 ; 'A'
0000000000006e69         db  0x0e ; '.'
0000000000006e6a         db  0x28 ; '('
0000000000006e6b         db  0x42 ; 'B'
0000000000006e6c         db  0x0e ; '.'
0000000000006e6d         db  0x20 ; ' '
0000000000006e6e         db  0x42 ; 'B'
0000000000006e6f         db  0x0e ; '.'
0000000000006e70         db  0x18 ; '.'
0000000000006e71         db  0x42 ; 'B'
0000000000006e72         db  0x0e ; '.'
0000000000006e73         db  0x10 ; '.'
0000000000006e74         db  0x42 ; 'B'
0000000000006e75         db  0x0e ; '.'
0000000000006e76         db  0x08 ; '.'
0000000000006e77         db  0x00 ; '.'
0000000000006e78         dd         0x00000014                                  ; Length of the record
0000000000006e7c         dd         0x00000b7c                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006e80         db         0xb0, 0xe3, 2 dup (0xff)                    ; begin 0x5230
0000000000006e84         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x5232)
0000000000006e88         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e89         align      16
0000000000006e90         dd         0x00000010                                  ; Length of the record
0000000000006e94         dd         0x00000b94                                  ; FDE: parent CIE at 0x6300 (FDE encoding = 0x1B)
0000000000006e98         db         0xa8, 0xe3, 2 dup (0xff)                    ; begin 0x5240
0000000000006e9c         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x524e)
0000000000006ea0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ea1         align      8


        ; Segment Segment 3
        ; Range: [0x207b10; 0x208238[ (1832 bytes)
        ; File offset : [31504; 32896[ (1392 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x207b10; 0x207b18[ (8 bytes)
        ; File offset : [31504; 31512[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
0000000000207b10         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x207b18; 0x207b20[ (8 bytes)
        ; File offset : [31512; 31520[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
0000000000207b18         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x207b20; 0x207c38[ (280 bytes)
        ; File offset : [31520; 31800[ (280 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     longopts:
0000000000207b20         db  0x4e ; 'N'                                         ; DATA XREF=main+131
0000000000207b21         db  0x53 ; 'S'
0000000000207b22         db  0x00 ; '.'
0000000000207b23         db  0x00 ; '.'
0000000000207b24         db  0x00 ; '.'
0000000000207b25         db  0x00 ; '.'
0000000000207b26         db  0x00 ; '.'
0000000000207b27         db  0x00 ; '.'
0000000000207b28         db  0x00 ; '.'
0000000000207b29         db  0x00 ; '.'
0000000000207b2a         db  0x00 ; '.'
0000000000207b2b         db  0x00 ; '.'
0000000000207b2c         db  0x00 ; '.'
0000000000207b2d         db  0x00 ; '.'
0000000000207b2e         db  0x00 ; '.'
0000000000207b2f         db  0x00 ; '.'
0000000000207b30         db  0x00 ; '.'
0000000000207b31         db  0x00 ; '.'
0000000000207b32         db  0x00 ; '.'
0000000000207b33         db  0x00 ; '.'
0000000000207b34         db  0x00 ; '.'
0000000000207b35         db  0x00 ; '.'
0000000000207b36         db  0x00 ; '.'
0000000000207b37         db  0x00 ; '.'
0000000000207b38         db  0x62 ; 'b'
0000000000207b39         db  0x00 ; '.'
0000000000207b3a         db  0x00 ; '.'
0000000000207b3b         db  0x00 ; '.'
0000000000207b3c         db  0x00 ; '.'
0000000000207b3d         db  0x00 ; '.'
0000000000207b3e         db  0x00 ; '.'
0000000000207b3f         db  0x00 ; '.'
0000000000207b40         db  0x54 ; 'T'
0000000000207b41         db  0x53 ; 'S'
0000000000207b42         db  0x00 ; '.'
0000000000207b43         db  0x00 ; '.'
0000000000207b44         db  0x00 ; '.'
0000000000207b45         db  0x00 ; '.'
0000000000207b46         db  0x00 ; '.'
0000000000207b47         db  0x00 ; '.'
0000000000207b48         db  0x00 ; '.'
0000000000207b49         db  0x00 ; '.'
0000000000207b4a         db  0x00 ; '.'
0000000000207b4b         db  0x00 ; '.'
0000000000207b4c         db  0x00 ; '.'
0000000000207b4d         db  0x00 ; '.'
0000000000207b4e         db  0x00 ; '.'
0000000000207b4f         db  0x00 ; '.'
0000000000207b50         db  0x00 ; '.'
0000000000207b51         db  0x00 ; '.'
0000000000207b52         db  0x00 ; '.'
0000000000207b53         db  0x00 ; '.'
0000000000207b54         db  0x00 ; '.'
0000000000207b55         db  0x00 ; '.'
0000000000207b56         db  0x00 ; '.'
0000000000207b57         db  0x00 ; '.'
0000000000207b58         db  0x73 ; 's'
0000000000207b59         db  0x00 ; '.'
0000000000207b5a         db  0x00 ; '.'
0000000000207b5b         db  0x00 ; '.'
0000000000207b5c         db  0x00 ; '.'
0000000000207b5d         db  0x00 ; '.'
0000000000207b5e         db  0x00 ; '.'
0000000000207b5f         db  0x00 ; '.'
0000000000207b60         db  0x5b ; '['
0000000000207b61         db  0x53 ; 'S'
0000000000207b62         db  0x00 ; '.'
0000000000207b63         db  0x00 ; '.'
0000000000207b64         db  0x00 ; '.'
0000000000207b65         db  0x00 ; '.'
0000000000207b66         db  0x00 ; '.'
0000000000207b67         db  0x00 ; '.'
0000000000207b68         db  0x01 ; '.'
0000000000207b69         db  0x00 ; '.'
0000000000207b6a         db  0x00 ; '.'
0000000000207b6b         db  0x00 ; '.'
0000000000207b6c         db  0x00 ; '.'
0000000000207b6d         db  0x00 ; '.'
0000000000207b6e         db  0x00 ; '.'
0000000000207b6f         db  0x00 ; '.'
0000000000207b70         db  0x00 ; '.'
0000000000207b71         db  0x00 ; '.'
0000000000207b72         db  0x00 ; '.'
0000000000207b73         db  0x00 ; '.'
0000000000207b74         db  0x00 ; '.'
0000000000207b75         db  0x00 ; '.'
0000000000207b76         db  0x00 ; '.'
0000000000207b77         db  0x00 ; '.'
0000000000207b78         db  0x77 ; 'w'
0000000000207b79         db  0x00 ; '.'
0000000000207b7a         db  0x00 ; '.'
0000000000207b7b         db  0x00 ; '.'
0000000000207b7c         db  0x00 ; '.'
0000000000207b7d         db  0x00 ; '.'
0000000000207b7e         db  0x00 ; '.'
0000000000207b7f         db  0x00 ; '.'
0000000000207b80         db  0x61 ; 'a'
0000000000207b81         db  0x53 ; 'S'
0000000000207b82         db  0x00 ; '.'
0000000000207b83         db  0x00 ; '.'
0000000000207b84         db  0x00 ; '.'
0000000000207b85         db  0x00 ; '.'
0000000000207b86         db  0x00 ; '.'
0000000000207b87         db  0x00 ; '.'
0000000000207b88         db  0x00 ; '.'
0000000000207b89         db  0x00 ; '.'
0000000000207b8a         db  0x00 ; '.'
0000000000207b8b         db  0x00 ; '.'
0000000000207b8c         db  0x00 ; '.'
0000000000207b8d         db  0x00 ; '.'
0000000000207b8e         db  0x00 ; '.'
0000000000207b8f         db  0x00 ; '.'
0000000000207b90         db  0x00 ; '.'
0000000000207b91         db  0x00 ; '.'
0000000000207b92         db  0x00 ; '.'
0000000000207b93         db  0x00 ; '.'
0000000000207b94         db  0x00 ; '.'
0000000000207b95         db  0x00 ; '.'
0000000000207b96         db  0x00 ; '.'
0000000000207b97         db  0x00 ; '.'
0000000000207b98         db  0x7e ; '~'
0000000000207b99         db  0xff ; '.'
0000000000207b9a         db  0xff ; '.'
0000000000207b9b         db  0xff ; '.'
0000000000207b9c         db  0x00 ; '.'
0000000000207b9d         db  0x00 ; '.'
0000000000207b9e         db  0x00 ; '.'
0000000000207b9f         db  0x00 ; '.'
0000000000207ba0         db  0x66 ; 'f'
0000000000207ba1         db  0x53 ; 'S'
0000000000207ba2         db  0x00 ; '.'
0000000000207ba3         db  0x00 ; '.'
0000000000207ba4         db  0x00 ; '.'
0000000000207ba5         db  0x00 ; '.'
0000000000207ba6         db  0x00 ; '.'
0000000000207ba7         db  0x00 ; '.'
0000000000207ba8         db  0x00 ; '.'
0000000000207ba9         db  0x00 ; '.'
0000000000207baa         db  0x00 ; '.'
0000000000207bab         db  0x00 ; '.'
0000000000207bac         db  0x00 ; '.'
0000000000207bad         db  0x00 ; '.'
0000000000207bae         db  0x00 ; '.'
0000000000207baf         db  0x00 ; '.'
0000000000207bb0         db  0x00 ; '.'
0000000000207bb1         db  0x00 ; '.'
0000000000207bb2         db  0x00 ; '.'
0000000000207bb3         db  0x00 ; '.'
0000000000207bb4         db  0x00 ; '.'
0000000000207bb5         db  0x00 ; '.'
0000000000207bb6         db  0x00 ; '.'
0000000000207bb7         db  0x00 ; '.'
0000000000207bb8         db  0x7d ; '}'
0000000000207bb9         db  0xff ; '.'
0000000000207bba         db  0xff ; '.'
0000000000207bbb         db  0xff ; '.'
0000000000207bbc         db  0x00 ; '.'
0000000000207bbd         db  0x00 ; '.'
0000000000207bbe         db  0x00 ; '.'
0000000000207bbf         db  0x00 ; '.'
0000000000207bc0         db  0x00 ; '.'
0000000000207bc1         db  0x00 ; '.'
0000000000207bc2         db  0x00 ; '.'
0000000000207bc3         db  0x00 ; '.'
0000000000207bc4         db  0x00 ; '.'
0000000000207bc5         db  0x00 ; '.'
0000000000207bc6         db  0x00 ; '.'
0000000000207bc7         db  0x00 ; '.'
0000000000207bc8         db  0x00 ; '.'
0000000000207bc9         db  0x00 ; '.'
0000000000207bca         db  0x00 ; '.'
0000000000207bcb         db  0x00 ; '.'
0000000000207bcc         db  0x00 ; '.'
0000000000207bcd         db  0x00 ; '.'
0000000000207bce         db  0x00 ; '.'
0000000000207bcf         db  0x00 ; '.'
0000000000207bd0         db  0x00 ; '.'
0000000000207bd1         db  0x00 ; '.'
0000000000207bd2         db  0x00 ; '.'
0000000000207bd3         db  0x00 ; '.'
0000000000207bd4         db  0x00 ; '.'
0000000000207bd5         db  0x00 ; '.'
0000000000207bd6         db  0x00 ; '.'
0000000000207bd7         db  0x00 ; '.'
0000000000207bd8         db  0x00 ; '.'
0000000000207bd9         db  0x00 ; '.'
0000000000207bda         db  0x00 ; '.'
0000000000207bdb         db  0x00 ; '.'
0000000000207bdc         db  0x00 ; '.'
0000000000207bdd         db  0x00 ; '.'
0000000000207bde         db  0x00 ; '.'
0000000000207bdf         db  0x00 ; '.'
                     quoting_style_args:
0000000000207be0         db  0xd9 ; '.'
0000000000207be1         db  0x56 ; 'V'
0000000000207be2         db  0x00 ; '.'
0000000000207be3         db  0x00 ; '.'
0000000000207be4         db  0x00 ; '.'
0000000000207be5         db  0x00 ; '.'
0000000000207be6         db  0x00 ; '.'
0000000000207be7         db  0x00 ; '.'
0000000000207be8         db  0xe1 ; '.'
0000000000207be9         db  0x56 ; 'V'
0000000000207bea         db  0x00 ; '.'
0000000000207beb         db  0x00 ; '.'
0000000000207bec         db  0x00 ; '.'
0000000000207bed         db  0x00 ; '.'
0000000000207bee         db  0x00 ; '.'
0000000000207bef         db  0x00 ; '.'
0000000000207bf0         db  0xe7 ; '.'
0000000000207bf1         db  0x56 ; 'V'
0000000000207bf2         db  0x00 ; '.'
0000000000207bf3         db  0x00 ; '.'
0000000000207bf4         db  0x00 ; '.'
0000000000207bf5         db  0x00 ; '.'
0000000000207bf6         db  0x00 ; '.'
0000000000207bf7         db  0x00 ; '.'
0000000000207bf8         db  0xf4 ; '.'
0000000000207bf9         db  0x56 ; 'V'
0000000000207bfa         db  0x00 ; '.'
0000000000207bfb         db  0x00 ; '.'
0000000000207bfc         db  0x00 ; '.'
0000000000207bfd         db  0x00 ; '.'
0000000000207bfe         db  0x00 ; '.'
0000000000207bff         db  0x00 ; '.'
0000000000207c00         db  0x01 ; '.'
0000000000207c01         db  0x57 ; 'W'
0000000000207c02         db  0x00 ; '.'
0000000000207c03         db  0x00 ; '.'
0000000000207c04         db  0x00 ; '.'
0000000000207c05         db  0x00 ; '.'
0000000000207c06         db  0x00 ; '.'
0000000000207c07         db  0x00 ; '.'
0000000000207c08         db  0x15 ; '.'
0000000000207c09         db  0x57 ; 'W'
0000000000207c0a         db  0x00 ; '.'
0000000000207c0b         db  0x00 ; '.'
0000000000207c0c         db  0x00 ; '.'
0000000000207c0d         db  0x00 ; '.'
0000000000207c0e         db  0x00 ; '.'
0000000000207c0f         db  0x00 ; '.'
0000000000207c10         db  0x17 ; '.'
0000000000207c11         db  0x57 ; 'W'
0000000000207c12         db  0x00 ; '.'
0000000000207c13         db  0x00 ; '.'
0000000000207c14         db  0x00 ; '.'
0000000000207c15         db  0x00 ; '.'
0000000000207c16         db  0x00 ; '.'
0000000000207c17         db  0x00 ; '.'
0000000000207c18         db  0xfa ; '.'
0000000000207c19         db  0x56 ; 'V'
0000000000207c1a         db  0x00 ; '.'
0000000000207c1b         db  0x00 ; '.'
0000000000207c1c         db  0x00 ; '.'
0000000000207c1d         db  0x00 ; '.'
0000000000207c1e         db  0x00 ; '.'
0000000000207c1f         db  0x00 ; '.'
0000000000207c20         db  0x1d ; '.'
0000000000207c21         db  0x53 ; 'S'
0000000000207c22         db  0x00 ; '.'
0000000000207c23         db  0x00 ; '.'
0000000000207c24         db  0x00 ; '.'
0000000000207c25         db  0x00 ; '.'
0000000000207c26         db  0x00 ; '.'
0000000000207c27         db  0x00 ; '.'
0000000000207c28         db  0x1f ; '.'
0000000000207c29         db  0x57 ; 'W'
0000000000207c2a         db  0x00 ; '.'
0000000000207c2b         db  0x00 ; '.'
0000000000207c2c         db  0x00 ; '.'
0000000000207c2d         db  0x00 ; '.'
0000000000207c2e         db  0x00 ; '.'
0000000000207c2f         db  0x00 ; '.'
0000000000207c30         db  0x00 ; '.'
0000000000207c31         db  0x00 ; '.'
0000000000207c32         db  0x00 ; '.'
0000000000207c33         db  0x00 ; '.'
0000000000207c34         db  0x00 ; '.'
0000000000207c35         db  0x00 ; '.'
0000000000207c36         db  0x00 ; '.'
0000000000207c37         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x207c38; 0x207e28[ (496 bytes)
        ; File offset : [31800; 32296[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000207c38         db  0x01 ; '.'
0000000000207c39         db  0x00 ; '.'
0000000000207c3a         db  0x00 ; '.'
0000000000207c3b         db  0x00 ; '.'
0000000000207c3c         db  0x00 ; '.'
0000000000207c3d         db  0x00 ; '.'
0000000000207c3e         db  0x00 ; '.'
0000000000207c3f         db  0x00 ; '.'
0000000000207c40         db  0x01 ; '.'
0000000000207c41         db  0x00 ; '.'
0000000000207c42         db  0x00 ; '.'
0000000000207c43         db  0x00 ; '.'
0000000000207c44         db  0x00 ; '.'
0000000000207c45         db  0x00 ; '.'
0000000000207c46         db  0x00 ; '.'
0000000000207c47         db  0x00 ; '.'
0000000000207c48         db  0x0c ; '.'
0000000000207c49         db  0x00 ; '.'
0000000000207c4a         db  0x00 ; '.'
0000000000207c4b         db  0x00 ; '.'
0000000000207c4c         db  0x00 ; '.'
0000000000207c4d         db  0x00 ; '.'
0000000000207c4e         db  0x00 ; '.'
0000000000207c4f         db  0x00 ; '.'
0000000000207c50         db  0x30 ; '0'
0000000000207c51         db  0x14 ; '.'
0000000000207c52         db  0x00 ; '.'
0000000000207c53         db  0x00 ; '.'
0000000000207c54         db  0x00 ; '.'
0000000000207c55         db  0x00 ; '.'
0000000000207c56         db  0x00 ; '.'
0000000000207c57         db  0x00 ; '.'
0000000000207c58         db  0x0d ; '.'
0000000000207c59         db  0x00 ; '.'
0000000000207c5a         db  0x00 ; '.'
0000000000207c5b         db  0x00 ; '.'
0000000000207c5c         db  0x00 ; '.'
0000000000207c5d         db  0x00 ; '.'
0000000000207c5e         db  0x00 ; '.'
0000000000207c5f         db  0x00 ; '.'
0000000000207c60         db  0x50 ; 'P'
0000000000207c61         db  0x52 ; 'R'
0000000000207c62         db  0x00 ; '.'
0000000000207c63         db  0x00 ; '.'
0000000000207c64         db  0x00 ; '.'
0000000000207c65         db  0x00 ; '.'
0000000000207c66         db  0x00 ; '.'
0000000000207c67         db  0x00 ; '.'
0000000000207c68         db  0x19 ; '.'
0000000000207c69         db  0x00 ; '.'
0000000000207c6a         db  0x00 ; '.'
0000000000207c6b         db  0x00 ; '.'
0000000000207c6c         db  0x00 ; '.'
0000000000207c6d         db  0x00 ; '.'
0000000000207c6e         db  0x00 ; '.'
0000000000207c6f         db  0x00 ; '.'
0000000000207c70         db  0x10 ; '.'
0000000000207c71         db  0x7b ; '{'
0000000000207c72         db  0x20 ; ' '
0000000000207c73         db  0x00 ; '.'
0000000000207c74         db  0x00 ; '.'
0000000000207c75         db  0x00 ; '.'
0000000000207c76         db  0x00 ; '.'
0000000000207c77         db  0x00 ; '.'
0000000000207c78         db  0x1b ; '.'
0000000000207c79         db  0x00 ; '.'
0000000000207c7a         db  0x00 ; '.'
0000000000207c7b         db  0x00 ; '.'
0000000000207c7c         db  0x00 ; '.'
0000000000207c7d         db  0x00 ; '.'
0000000000207c7e         db  0x00 ; '.'
0000000000207c7f         db  0x00 ; '.'
0000000000207c80         db  0x08 ; '.'
0000000000207c81         db  0x00 ; '.'
0000000000207c82         db  0x00 ; '.'
0000000000207c83         db  0x00 ; '.'
0000000000207c84         db  0x00 ; '.'
0000000000207c85         db  0x00 ; '.'
0000000000207c86         db  0x00 ; '.'
0000000000207c87         db  0x00 ; '.'
0000000000207c88         db  0x1a ; '.'
0000000000207c89         db  0x00 ; '.'
0000000000207c8a         db  0x00 ; '.'
0000000000207c8b         db  0x00 ; '.'
0000000000207c8c         db  0x00 ; '.'
0000000000207c8d         db  0x00 ; '.'
0000000000207c8e         db  0x00 ; '.'
0000000000207c8f         db  0x00 ; '.'
0000000000207c90         db  0x18 ; '.'
0000000000207c91         db  0x7b ; '{'
0000000000207c92         db  0x20 ; ' '
0000000000207c93         db  0x00 ; '.'
0000000000207c94         db  0x00 ; '.'
0000000000207c95         db  0x00 ; '.'
0000000000207c96         db  0x00 ; '.'
0000000000207c97         db  0x00 ; '.'
0000000000207c98         db  0x1c ; '.'
0000000000207c99         db  0x00 ; '.'
0000000000207c9a         db  0x00 ; '.'
0000000000207c9b         db  0x00 ; '.'
0000000000207c9c         db  0x00 ; '.'
0000000000207c9d         db  0x00 ; '.'
0000000000207c9e         db  0x00 ; '.'
0000000000207c9f         db  0x00 ; '.'
0000000000207ca0         db  0x08 ; '.'
0000000000207ca1         db  0x00 ; '.'
0000000000207ca2         db  0x00 ; '.'
0000000000207ca3         db  0x00 ; '.'
0000000000207ca4         db  0x00 ; '.'
0000000000207ca5         db  0x00 ; '.'
0000000000207ca6         db  0x00 ; '.'
0000000000207ca7         db  0x00 ; '.'
0000000000207ca8         db  0xf5 ; '.'
0000000000207ca9         db  0xfe ; '.'
0000000000207caa         db  0xff ; '.'
0000000000207cab         db  0x6f ; 'o'
0000000000207cac         db  0x00 ; '.'
0000000000207cad         db  0x00 ; '.'
0000000000207cae         db  0x00 ; '.'
0000000000207caf         db  0x00 ; '.'
0000000000207cb0         db  0x98 ; '.'
0000000000207cb1         db  0x02 ; '.'
0000000000207cb2         db  0x00 ; '.'
0000000000207cb3         db  0x00 ; '.'
0000000000207cb4         db  0x00 ; '.'
0000000000207cb5         db  0x00 ; '.'
0000000000207cb6         db  0x00 ; '.'
0000000000207cb7         db  0x00 ; '.'
0000000000207cb8         db  0x05 ; '.'
0000000000207cb9         db  0x00 ; '.'
0000000000207cba         db  0x00 ; '.'
0000000000207cbb         db  0x00 ; '.'
0000000000207cbc         db  0x00 ; '.'
0000000000207cbd         db  0x00 ; '.'
0000000000207cbe         db  0x00 ; '.'
0000000000207cbf         db  0x00 ; '.'
0000000000207cc0         db  0xc8 ; '.'
0000000000207cc1         db  0x08 ; '.'
0000000000207cc2         db  0x00 ; '.'
0000000000207cc3         db  0x00 ; '.'
0000000000207cc4         db  0x00 ; '.'
0000000000207cc5         db  0x00 ; '.'
0000000000207cc6         db  0x00 ; '.'
0000000000207cc7         db  0x00 ; '.'
0000000000207cc8         db  0x06 ; '.'
0000000000207cc9         db  0x00 ; '.'
0000000000207cca         db  0x00 ; '.'
0000000000207ccb         db  0x00 ; '.'
0000000000207ccc         db  0x00 ; '.'
0000000000207ccd         db  0x00 ; '.'
0000000000207cce         db  0x00 ; '.'
0000000000207ccf         db  0x00 ; '.'
0000000000207cd0         db  0xe0 ; '.'
0000000000207cd1         db  0x02 ; '.'
0000000000207cd2         db  0x00 ; '.'
0000000000207cd3         db  0x00 ; '.'
0000000000207cd4         db  0x00 ; '.'
0000000000207cd5         db  0x00 ; '.'
0000000000207cd6         db  0x00 ; '.'
0000000000207cd7         db  0x00 ; '.'
0000000000207cd8         db  0x0a ; '.'
0000000000207cd9         db  0x00 ; '.'
0000000000207cda         db  0x00 ; '.'
0000000000207cdb         db  0x00 ; '.'
0000000000207cdc         db  0x00 ; '.'
0000000000207cdd         db  0x00 ; '.'
0000000000207cde         db  0x00 ; '.'
0000000000207cdf         db  0x00 ; '.'
0000000000207ce0         db  0xec ; '.'
0000000000207ce1         db  0x02 ; '.'
0000000000207ce2         db  0x00 ; '.'
0000000000207ce3         db  0x00 ; '.'
0000000000207ce4         db  0x00 ; '.'
0000000000207ce5         db  0x00 ; '.'
0000000000207ce6         db  0x00 ; '.'
0000000000207ce7         db  0x00 ; '.'
0000000000207ce8         db  0x0b ; '.'
0000000000207ce9         db  0x00 ; '.'
0000000000207cea         db  0x00 ; '.'
0000000000207ceb         db  0x00 ; '.'
0000000000207cec         db  0x00 ; '.'
0000000000207ced         db  0x00 ; '.'
0000000000207cee         db  0x00 ; '.'
0000000000207cef         db  0x00 ; '.'
0000000000207cf0         db  0x18 ; '.'
0000000000207cf1         db  0x00 ; '.'
0000000000207cf2         db  0x00 ; '.'
0000000000207cf3         db  0x00 ; '.'
0000000000207cf4         db  0x00 ; '.'
0000000000207cf5         db  0x00 ; '.'
0000000000207cf6         db  0x00 ; '.'
0000000000207cf7         db  0x00 ; '.'
0000000000207cf8         db  0x15 ; '.'
0000000000207cf9         db  0x00 ; '.'
0000000000207cfa         db  0x00 ; '.'
0000000000207cfb         db  0x00 ; '.'
0000000000207cfc         db  0x00 ; '.'
0000000000207cfd         db  0x00 ; '.'
0000000000207cfe         db  0x00 ; '.'
0000000000207cff         db  0x00 ; '.'
0000000000207d00         db  0x00 ; '.'
0000000000207d01         db  0x00 ; '.'
0000000000207d02         db  0x00 ; '.'
0000000000207d03         db  0x00 ; '.'
0000000000207d04         db  0x00 ; '.'
0000000000207d05         db  0x00 ; '.'
0000000000207d06         db  0x00 ; '.'
0000000000207d07         db  0x00 ; '.'
0000000000207d08         db  0x03 ; '.'
0000000000207d09         db  0x00 ; '.'
0000000000207d0a         db  0x00 ; '.'
0000000000207d0b         db  0x00 ; '.'
0000000000207d0c         db  0x00 ; '.'
0000000000207d0d         db  0x00 ; '.'
0000000000207d0e         db  0x00 ; '.'
0000000000207d0f         db  0x00 ; '.'
0000000000207d10         db  0x28 ; '('
0000000000207d11         db  0x7e ; '~'
0000000000207d12         db  0x20 ; ' '
0000000000207d13         db  0x00 ; '.'
0000000000207d14         db  0x00 ; '.'
0000000000207d15         db  0x00 ; '.'
0000000000207d16         db  0x00 ; '.'
0000000000207d17         db  0x00 ; '.'
0000000000207d18         db  0x02 ; '.'
0000000000207d19         db  0x00 ; '.'
0000000000207d1a         db  0x00 ; '.'
0000000000207d1b         db  0x00 ; '.'
0000000000207d1c         db  0x00 ; '.'
0000000000207d1d         db  0x00 ; '.'
0000000000207d1e         db  0x00 ; '.'
0000000000207d1f         db  0x00 ; '.'
0000000000207d20         db  0x80 ; '.'
0000000000207d21         db  0x04 ; '.'
0000000000207d22         db  0x00 ; '.'
0000000000207d23         db  0x00 ; '.'
0000000000207d24         db  0x00 ; '.'
0000000000207d25         db  0x00 ; '.'
0000000000207d26         db  0x00 ; '.'
0000000000207d27         db  0x00 ; '.'
0000000000207d28         db  0x14 ; '.'
0000000000207d29         db  0x00 ; '.'
0000000000207d2a         db  0x00 ; '.'
0000000000207d2b         db  0x00 ; '.'
0000000000207d2c         db  0x00 ; '.'
0000000000207d2d         db  0x00 ; '.'
0000000000207d2e         db  0x00 ; '.'
0000000000207d2f         db  0x00 ; '.'
0000000000207d30         db  0x07 ; '.'
0000000000207d31         db  0x00 ; '.'
0000000000207d32         db  0x00 ; '.'
0000000000207d33         db  0x00 ; '.'
0000000000207d34         db  0x00 ; '.'
0000000000207d35         db  0x00 ; '.'
0000000000207d36         db  0x00 ; '.'
0000000000207d37         db  0x00 ; '.'
0000000000207d38         db  0x17 ; '.'
0000000000207d39         db  0x00 ; '.'
0000000000207d3a         db  0x00 ; '.'
0000000000207d3b         db  0x00 ; '.'
0000000000207d3c         db  0x00 ; '.'
0000000000207d3d         db  0x00 ; '.'
0000000000207d3e         db  0x00 ; '.'
0000000000207d3f         db  0x00 ; '.'
0000000000207d40         db  0xb0 ; '.'
0000000000207d41         db  0x0f ; '.'
0000000000207d42         db  0x00 ; '.'
0000000000207d43         db  0x00 ; '.'
0000000000207d44         db  0x00 ; '.'
0000000000207d45         db  0x00 ; '.'
0000000000207d46         db  0x00 ; '.'
0000000000207d47         db  0x00 ; '.'
0000000000207d48         db  0x07 ; '.'
0000000000207d49         db  0x00 ; '.'
0000000000207d4a         db  0x00 ; '.'
0000000000207d4b         db  0x00 ; '.'
0000000000207d4c         db  0x00 ; '.'
0000000000207d4d         db  0x00 ; '.'
0000000000207d4e         db  0x00 ; '.'
0000000000207d4f         db  0x00 ; '.'
0000000000207d50         db  0x98 ; '.'
0000000000207d51         db  0x0c ; '.'
0000000000207d52         db  0x00 ; '.'
0000000000207d53         db  0x00 ; '.'
0000000000207d54         db  0x00 ; '.'
0000000000207d55         db  0x00 ; '.'
0000000000207d56         db  0x00 ; '.'
0000000000207d57         db  0x00 ; '.'
0000000000207d58         db  0x08 ; '.'
0000000000207d59         db  0x00 ; '.'
0000000000207d5a         db  0x00 ; '.'
0000000000207d5b         db  0x00 ; '.'
0000000000207d5c         db  0x00 ; '.'
0000000000207d5d         db  0x00 ; '.'
0000000000207d5e         db  0x00 ; '.'
0000000000207d5f         db  0x00 ; '.'
0000000000207d60         db  0x18 ; '.'
0000000000207d61         db  0x03 ; '.'
0000000000207d62         db  0x00 ; '.'
0000000000207d63         db  0x00 ; '.'
0000000000207d64         db  0x00 ; '.'
0000000000207d65         db  0x00 ; '.'
0000000000207d66         db  0x00 ; '.'
0000000000207d67         db  0x00 ; '.'
0000000000207d68         db  0x09 ; '.'
0000000000207d69         db  0x00 ; '.'
0000000000207d6a         db  0x00 ; '.'
0000000000207d6b         db  0x00 ; '.'
0000000000207d6c         db  0x00 ; '.'
0000000000207d6d         db  0x00 ; '.'
0000000000207d6e         db  0x00 ; '.'
0000000000207d6f         db  0x00 ; '.'
0000000000207d70         db  0x18 ; '.'
0000000000207d71         db  0x00 ; '.'
0000000000207d72         db  0x00 ; '.'
0000000000207d73         db  0x00 ; '.'
0000000000207d74         db  0x00 ; '.'
0000000000207d75         db  0x00 ; '.'
0000000000207d76         db  0x00 ; '.'
0000000000207d77         db  0x00 ; '.'
0000000000207d78         db  0x1e ; '.'
0000000000207d79         db  0x00 ; '.'
0000000000207d7a         db  0x00 ; '.'
0000000000207d7b         db  0x00 ; '.'
0000000000207d7c         db  0x00 ; '.'
0000000000207d7d         db  0x00 ; '.'
0000000000207d7e         db  0x00 ; '.'
0000000000207d7f         db  0x00 ; '.'
0000000000207d80         db  0x08 ; '.'
0000000000207d81         db  0x00 ; '.'
0000000000207d82         db  0x00 ; '.'
0000000000207d83         db  0x00 ; '.'
0000000000207d84         db  0x00 ; '.'
0000000000207d85         db  0x00 ; '.'
0000000000207d86         db  0x00 ; '.'
0000000000207d87         db  0x00 ; '.'
0000000000207d88         db  0xfb ; '.'
0000000000207d89         db  0xff ; '.'
0000000000207d8a         db  0xff ; '.'
0000000000207d8b         db  0x6f ; 'o'
0000000000207d8c         db  0x00 ; '.'
0000000000207d8d         db  0x00 ; '.'
0000000000207d8e         db  0x00 ; '.'
0000000000207d8f         db  0x00 ; '.'
0000000000207d90         db  0x01 ; '.'
0000000000207d91         db  0x00 ; '.'
0000000000207d92         db  0x00 ; '.'
0000000000207d93         db  0x08 ; '.'
0000000000207d94         db  0x00 ; '.'
0000000000207d95         db  0x00 ; '.'
0000000000207d96         db  0x00 ; '.'
0000000000207d97         db  0x00 ; '.'
0000000000207d98         db  0xfe ; '.'
0000000000207d99         db  0xff ; '.'
0000000000207d9a         db  0xff ; '.'
0000000000207d9b         db  0x6f ; 'o'
0000000000207d9c         db  0x00 ; '.'
0000000000207d9d         db  0x00 ; '.'
0000000000207d9e         db  0x00 ; '.'
0000000000207d9f         db  0x00 ; '.'
0000000000207da0         db  0x38 ; '8'
0000000000207da1         db  0x0c ; '.'
0000000000207da2         db  0x00 ; '.'
0000000000207da3         db  0x00 ; '.'
0000000000207da4         db  0x00 ; '.'
0000000000207da5         db  0x00 ; '.'
0000000000207da6         db  0x00 ; '.'
0000000000207da7         db  0x00 ; '.'
0000000000207da8         db  0xff ; '.'
0000000000207da9         db  0xff ; '.'
0000000000207daa         db  0xff ; '.'
0000000000207dab         db  0x6f ; 'o'
0000000000207dac         db  0x00 ; '.'
0000000000207dad         db  0x00 ; '.'
0000000000207dae         db  0x00 ; '.'
0000000000207daf         db  0x00 ; '.'
0000000000207db0         db  0x01 ; '.'
0000000000207db1         db  0x00 ; '.'
0000000000207db2         db  0x00 ; '.'
0000000000207db3         db  0x00 ; '.'
0000000000207db4         db  0x00 ; '.'
0000000000207db5         db  0x00 ; '.'
0000000000207db6         db  0x00 ; '.'
0000000000207db7         db  0x00 ; '.'
0000000000207db8         db  0xf0 ; '.'
0000000000207db9         db  0xff ; '.'
0000000000207dba         db  0xff ; '.'
0000000000207dbb         db  0x6f ; 'o'
0000000000207dbc         db  0x00 ; '.'
0000000000207dbd         db  0x00 ; '.'
0000000000207dbe         db  0x00 ; '.'
0000000000207dbf         db  0x00 ; '.'
0000000000207dc0         db  0xb4 ; '.'
0000000000207dc1         db  0x0b ; '.'
0000000000207dc2         db  0x00 ; '.'
0000000000207dc3         db  0x00 ; '.'
0000000000207dc4         db  0x00 ; '.'
0000000000207dc5         db  0x00 ; '.'
0000000000207dc6         db  0x00 ; '.'
0000000000207dc7         db  0x00 ; '.'
0000000000207dc8         db  0xf9 ; '.'
0000000000207dc9         db  0xff ; '.'
0000000000207dca         db  0xff ; '.'
0000000000207dcb         db  0x6f ; 'o'
0000000000207dcc         db  0x00 ; '.'
0000000000207dcd         db  0x00 ; '.'
0000000000207dce         db  0x00 ; '.'
0000000000207dcf         db  0x00 ; '.'
0000000000207dd0         db  0x15 ; '.'
0000000000207dd1         db  0x00 ; '.'
0000000000207dd2         db  0x00 ; '.'
0000000000207dd3         db  0x00 ; '.'
0000000000207dd4         db  0x00 ; '.'
0000000000207dd5         db  0x00 ; '.'
0000000000207dd6         db  0x00 ; '.'
0000000000207dd7         db  0x00 ; '.'
0000000000207dd8         db  0x00 ; '.'
0000000000207dd9         db  0x00 ; '.'
0000000000207dda         db  0x00 ; '.'
0000000000207ddb         db  0x00 ; '.'
0000000000207ddc         db  0x00 ; '.'
0000000000207ddd         db  0x00 ; '.'
0000000000207dde         db  0x00 ; '.'
0000000000207ddf         db  0x00 ; '.'
0000000000207de0         db  0x00 ; '.'
0000000000207de1         db  0x00 ; '.'
0000000000207de2         db  0x00 ; '.'
0000000000207de3         db  0x00 ; '.'
0000000000207de4         db  0x00 ; '.'
0000000000207de5         db  0x00 ; '.'
0000000000207de6         db  0x00 ; '.'
0000000000207de7         db  0x00 ; '.'
0000000000207de8         db  0x00 ; '.'
0000000000207de9         db  0x00 ; '.'
0000000000207dea         db  0x00 ; '.'
0000000000207deb         db  0x00 ; '.'
0000000000207dec         db  0x00 ; '.'
0000000000207ded         db  0x00 ; '.'
0000000000207dee         db  0x00 ; '.'
0000000000207def         db  0x00 ; '.'
0000000000207df0         db  0x00 ; '.'
0000000000207df1         db  0x00 ; '.'
0000000000207df2         db  0x00 ; '.'
0000000000207df3         db  0x00 ; '.'
0000000000207df4         db  0x00 ; '.'
0000000000207df5         db  0x00 ; '.'
0000000000207df6         db  0x00 ; '.'
0000000000207df7         db  0x00 ; '.'
0000000000207df8         db  0x00 ; '.'
0000000000207df9         db  0x00 ; '.'
0000000000207dfa         db  0x00 ; '.'
0000000000207dfb         db  0x00 ; '.'
0000000000207dfc         db  0x00 ; '.'
0000000000207dfd         db  0x00 ; '.'
0000000000207dfe         db  0x00 ; '.'
0000000000207dff         db  0x00 ; '.'
0000000000207e00         db  0x00 ; '.'
0000000000207e01         db  0x00 ; '.'
0000000000207e02         db  0x00 ; '.'
0000000000207e03         db  0x00 ; '.'
0000000000207e04         db  0x00 ; '.'
0000000000207e05         db  0x00 ; '.'
0000000000207e06         db  0x00 ; '.'
0000000000207e07         db  0x00 ; '.'
0000000000207e08         db  0x00 ; '.'
0000000000207e09         db  0x00 ; '.'
0000000000207e0a         db  0x00 ; '.'
0000000000207e0b         db  0x00 ; '.'
0000000000207e0c         db  0x00 ; '.'
0000000000207e0d         db  0x00 ; '.'
0000000000207e0e         db  0x00 ; '.'
0000000000207e0f         db  0x00 ; '.'
0000000000207e10         db  0x00 ; '.'
0000000000207e11         db  0x00 ; '.'
0000000000207e12         db  0x00 ; '.'
0000000000207e13         db  0x00 ; '.'
0000000000207e14         db  0x00 ; '.'
0000000000207e15         db  0x00 ; '.'
0000000000207e16         db  0x00 ; '.'
0000000000207e17         db  0x00 ; '.'
0000000000207e18         db  0x00 ; '.'
0000000000207e19         db  0x00 ; '.'
0000000000207e1a         db  0x00 ; '.'
0000000000207e1b         db  0x00 ; '.'
0000000000207e1c         db  0x00 ; '.'
0000000000207e1d         db  0x00 ; '.'
0000000000207e1e         db  0x00 ; '.'
0000000000207e1f         db  0x00 ; '.'
0000000000207e20         db  0x00 ; '.'
0000000000207e21         db  0x00 ; '.'
0000000000207e22         db  0x00 ; '.'
0000000000207e23         db  0x00 ; '.'
0000000000207e24         db  0x00 ; '.'
0000000000207e25         db  0x00 ; '.'
0000000000207e26         db  0x00 ; '.'
0000000000207e27         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x207e28; 0x207fe8[ (448 bytes)
        ; File offset : [32296; 32744[ (448 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000207e28         db  0x38 ; '8'
0000000000207e29         db  0x7c ; '|'
0000000000207e2a         db  0x20 ; ' '
0000000000207e2b         db  0x00 ; '.'
0000000000207e2c         db  0x00 ; '.'
0000000000207e2d         db  0x00 ; '.'
0000000000207e2e         db  0x00 ; '.'
0000000000207e2f         db  0x00 ; '.'
                     qword_207e30:
0000000000207e30         dq         0x0000000000000000                          ; DATA XREF=0x1450
0000000000207e38         db  0x00 ; '.'                                         ; DATA XREF=0x1456
0000000000207e39         db  0x00 ; '.'
0000000000207e3a         db  0x00 ; '.'
0000000000207e3b         db  0x00 ; '.'
0000000000207e3c         db  0x00 ; '.'
0000000000207e3d         db  0x00 ; '.'
0000000000207e3e         db  0x00 ; '.'
0000000000207e3f         db  0x00 ; '.'
                     __uflow@GOT:        // __uflow
0000000000207e40         dq         0x0000000000208240                          ; DATA XREF=j___uflow
                     free@GOT:        // free
0000000000207e48         dq         0x0000000000208248                          ; DATA XREF=j_free
                     abort@GOT:        // abort
0000000000207e50         dq         0x0000000000208250                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000207e58         dq         0x0000000000208258                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
0000000000207e60         dq         0x0000000000208260                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000207e68         dq         0x0000000000208270                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000207e70         dq         0x0000000000208278                          ; DATA XREF=j___fpending
                     textdomain@GOT:        // textdomain
0000000000207e78         dq         0x0000000000208280                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
0000000000207e80         dq         0x0000000000208288                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
0000000000207e88         dq         0x0000000000208290                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
0000000000207e90         dq         0x0000000000208298                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000207e98         dq         0x00000000002082a0                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000207ea0         dq         0x00000000002082a8                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000207ea8         dq         0x00000000002082b0                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
0000000000207eb0         dq         0x00000000002082b8                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000207eb8         dq         0x00000000002082c0                          ; DATA XREF=j_mbrtowc
                     strchr@GOT:        // strchr
0000000000207ec0         dq         0x00000000002082c8                          ; DATA XREF=j_strchr
                     __overflow@GOT:        // __overflow
0000000000207ec8         dq         0x00000000002082d0                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
0000000000207ed0         dq         0x00000000002082d8                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
0000000000207ed8         dq         0x00000000002082e0                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
0000000000207ee0         dq         0x00000000002082e8                          ; DATA XREF=j___assert_fail
                     __strtoul_internal@GOT:        // __strtoul_internal
0000000000207ee8         dq         0x00000000002082f0                          ; DATA XREF=j___strtoul_internal
                     memset@GOT:        // memset
0000000000207ef0         dq         0x00000000002082f8                          ; DATA XREF=j_memset
                     posix_fadvise@GOT:        // posix_fadvise
0000000000207ef8         dq         0x0000000000208300                          ; DATA XREF=j_posix_fadvise
                     memcmp@GOT:        // memcmp
0000000000207f00         dq         0x0000000000208310                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000207f08         dq         0x0000000000208318                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000207f10         dq         0x0000000000208320                          ; DATA XREF=j_calloc
                     memcpy@GOT:        // memcpy
0000000000207f18         dq         0x0000000000208330                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
0000000000207f20         dq         0x0000000000208338                          ; DATA XREF=j_fileno
                     malloc@GOT:        // malloc
0000000000207f28         dq         0x0000000000208340                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000207f30         dq         0x0000000000208348                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000207f38         dq         0x0000000000208350                          ; DATA XREF=j_nl_langinfo
                     __freading@GOT:        // __freading
0000000000207f40         dq         0x0000000000208358                          ; DATA XREF=j___freading
                     fwrite_unlocked@GOT:        // fwrite_unlocked
0000000000207f48         dq         0x0000000000208360                          ; DATA XREF=j_fwrite_unlocked
                     realloc@GOT:        // realloc
0000000000207f50         dq         0x0000000000208368                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
0000000000207f58         dq         0x0000000000208370                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000207f60         dq         0x0000000000208378                          ; DATA XREF=j___printf_chk
                     memmove@GOT:        // memmove
0000000000207f68         dq         0x0000000000208380                          ; DATA XREF=j_memmove
                     error@GOT:        // error
0000000000207f70         dq         0x0000000000208388                          ; DATA XREF=j_error
                     fseeko@GOT:        // fseeko
0000000000207f78         dq         0x0000000000208390                          ; DATA XREF=j_fseeko
                     fopen@GOT:        // fopen
0000000000207f80         dq         0x0000000000208398                          ; DATA XREF=j_fopen
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000207f88         dq         0x00000000002083a0                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
0000000000207f90         dq         0x00000000002083a8                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000207f98         dq         0x00000000002083b0                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000207fa0         dq         0x00000000002083b8                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000207fa8         dq         0x00000000002083c8                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000207fb0         dq         0x00000000002083d0                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000207fb8         dq         0x00000000002083e0                          ; DATA XREF=j___ctype_b_loc
                     qword_207fc0:
0000000000207fc0         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000207fc8         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000207fc9         db  0x00 ; '.'
0000000000207fca         db  0x00 ; '.'
0000000000207fcb         db  0x00 ; '.'
0000000000207fcc         db  0x00 ; '.'
0000000000207fcd         db  0x00 ; '.'
0000000000207fce         db  0x00 ; '.'
0000000000207fcf         db  0x00 ; '.'
                     qword_207fd0:
0000000000207fd0         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_207fd8:
0000000000207fd8         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_207fe0:
0000000000207fe0         dq         0x0000000000000000                          ; DATA XREF=j_qword_207fe0, __do_global_dtors_aux+9
0000000000207fe8         db  0x00 ; '.'
0000000000207fe9         db  0x00 ; '.'
0000000000207fea         db  0x00 ; '.'
0000000000207feb         db  0x00 ; '.'
0000000000207fec         db  0x00 ; '.'
0000000000207fed         db  0x00 ; '.'
0000000000207fee         db  0x00 ; '.'
0000000000207fef         db  0x00 ; '.'
0000000000207ff0         db  0x00 ; '.'
0000000000207ff1         db  0x00 ; '.'
0000000000207ff2         db  0x00 ; '.'
0000000000207ff3         db  0x00 ; '.'
0000000000207ff4         db  0x00 ; '.'
0000000000207ff5         db  0x00 ; '.'
0000000000207ff6         db  0x00 ; '.'
0000000000207ff7         db  0x00 ; '.'
0000000000207ff8         db  0x00 ; '.'
0000000000207ff9         db  0x00 ; '.'
0000000000207ffa         db  0x00 ; '.'
0000000000207ffb         db  0x00 ; '.'
0000000000207ffc         db  0x00 ; '.'
0000000000207ffd         db  0x00 ; '.'
0000000000207ffe         db  0x00 ; '.'
0000000000207fff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x208000; 0x208080[ (128 bytes)
        ; File offset : [32768; 32896[ (128 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

0000000000208000         db  0x00 ; '.'
0000000000208001         db  0x00 ; '.'
0000000000208002         db  0x00 ; '.'
0000000000208003         db  0x00 ; '.'
0000000000208004         db  0x00 ; '.'
0000000000208005         db  0x00 ; '.'
0000000000208006         db  0x00 ; '.'
0000000000208007         db  0x00 ; '.'
                     __dso_handle:
0000000000208008         dq         0x0000000000208008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     Version:
0000000000208010         dq         0x0000000000005663                          ; "8.31", DATA XREF=main+247
                     exit_failure:
0000000000208018         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23
000000000020801c         db  0x00 ; '.'
000000000020801d         db  0x00 ; '.'
000000000020801e         db  0x00 ; '.'
000000000020801f         db  0x00 ; '.'
                     quote_quoting_options:
0000000000208020         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
0000000000208021         db  0x00 ; '.'
0000000000208022         db  0x00 ; '.'
0000000000208023         db  0x00 ; '.'
0000000000208024         db  0x00 ; '.'
0000000000208025         db  0x00 ; '.'
0000000000208026         db  0x00 ; '.'
0000000000208027         db  0x00 ; '.'
0000000000208028         db  0x00 ; '.'
0000000000208029         db  0x00 ; '.'
000000000020802a         db  0x00 ; '.'
000000000020802b         db  0x00 ; '.'
000000000020802c         db  0x00 ; '.'
000000000020802d         db  0x00 ; '.'
000000000020802e         db  0x00 ; '.'
000000000020802f         db  0x00 ; '.'
0000000000208030         db  0x00 ; '.'
0000000000208031         db  0x00 ; '.'
0000000000208032         db  0x00 ; '.'
0000000000208033         db  0x00 ; '.'
0000000000208034         db  0x00 ; '.'
0000000000208035         db  0x00 ; '.'
0000000000208036         db  0x00 ; '.'
0000000000208037         db  0x00 ; '.'
0000000000208038         db  0x00 ; '.'
0000000000208039         db  0x00 ; '.'
000000000020803a         db  0x00 ; '.'
000000000020803b         db  0x00 ; '.'
000000000020803c         db  0x00 ; '.'
000000000020803d         db  0x00 ; '.'
000000000020803e         db  0x00 ; '.'
000000000020803f         db  0x00 ; '.'
0000000000208040         db  0x00 ; '.'
0000000000208041         db  0x00 ; '.'
0000000000208042         db  0x00 ; '.'
0000000000208043         db  0x00 ; '.'
0000000000208044         db  0x00 ; '.'
0000000000208045         db  0x00 ; '.'
0000000000208046         db  0x00 ; '.'
0000000000208047         db  0x00 ; '.'
0000000000208048         db  0x00 ; '.'
0000000000208049         db  0x00 ; '.'
000000000020804a         db  0x00 ; '.'
000000000020804b         db  0x00 ; '.'
000000000020804c         db  0x00 ; '.'
000000000020804d         db  0x00 ; '.'
000000000020804e         db  0x00 ; '.'
000000000020804f         db  0x00 ; '.'
0000000000208050         db  0x00 ; '.'
0000000000208051         db  0x00 ; '.'
0000000000208052         db  0x00 ; '.'
0000000000208053         db  0x00 ; '.'
0000000000208054         db  0x00 ; '.'
0000000000208055         db  0x00 ; '.'
0000000000208056         db  0x00 ; '.'
0000000000208057         db  0x00 ; '.'
                     nslots:
0000000000208058         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020805c         align      32
                     slotvec:
0000000000208060         dq         0x0000000000208070                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
0000000000208068         db  0x00 ; '.'
0000000000208069         db  0x00 ; '.'
000000000020806a         db  0x00 ; '.'
000000000020806b         db  0x00 ; '.'
000000000020806c         db  0x00 ; '.'
000000000020806d         db  0x00 ; '.'
000000000020806e         db  0x00 ; '.'
000000000020806f         db  0x00 ; '.'
                     slotvec0:
0000000000208070         dq         1.26481e-321, 1.05245e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x208080; 0x208238[ (440 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
0000000000208080         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
0000000000208081         db  0x00 ; '.'
0000000000208082         db  0x00 ; '.'
0000000000208083         db  0x00 ; '.'
0000000000208084         db  0x00 ; '.'
0000000000208085         db  0x00 ; '.'
0000000000208086         db  0x00 ; '.'
0000000000208087         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
0000000000208088         db  0x00 ; '.'                                         ; DATA XREF=main+240, fold_file+221, fold_file+312, fold_file+335, fold_file+504, fold_file+640, usage+125, usage+162, usage+199, usage+236, usage+273
0000000000208089         db  0x00 ; '.'
000000000020808a         db  0x00 ; '.'
000000000020808b         db  0x00 ; '.'
000000000020808c         db  0x00 ; '.'
000000000020808d         db  0x00 ; '.'
000000000020808e         db  0x00 ; '.'
000000000020808f         db  0x00 ; '.'
                     stdin@@GLIBC_2.2.5:
0000000000208090         db  0x00 ; '.'                                         ; DATA XREF=main+529, fold_file+54
0000000000208091         db  0x00 ; '.'
0000000000208092         db  0x00 ; '.'
0000000000208093         db  0x00 ; '.'
0000000000208094         db  0x00 ; '.'
0000000000208095         db  0x00 ; '.'
0000000000208096         db  0x00 ; '.'
0000000000208097         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
0000000000208098         db  0x00 ; '.'                                         ; DATA XREF=main+414
0000000000208099         db  0x00 ; '.'
000000000020809a         db  0x00 ; '.'
000000000020809b         db  0x00 ; '.'
000000000020809c         db  0x00 ; '.'
000000000020809d         db  0x00 ; '.'
000000000020809e         db  0x00 ; '.'
000000000020809f         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
00000000002080a0         db  0x00 ; '.'                                         ; DATA XREF=main+296, main+312, main+338, main+405
00000000002080a1         db  0x00 ; '.'
00000000002080a2         db  0x00 ; '.'
00000000002080a3         db  0x00 ; '.'
00000000002080a4         db  0x00 ; '.'
00000000002080a5         db  0x00 ; '.'
00000000002080a6         db  0x00 ; '.'
00000000002080a7         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
00000000002080a8         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
00000000002080a9         db  0x00 ; '.'
00000000002080aa         db  0x00 ; '.'
00000000002080ab         db  0x00 ; '.'
00000000002080ac         db  0x00 ; '.'
00000000002080ad         db  0x00 ; '.'
00000000002080ae         db  0x00 ; '.'
00000000002080af         db  0x00 ; '.'
00000000002080b0         db  0x00 ; '.'
00000000002080b1         db  0x00 ; '.'
00000000002080b2         db  0x00 ; '.'
00000000002080b3         db  0x00 ; '.'
00000000002080b4         db  0x00 ; '.'
00000000002080b5         db  0x00 ; '.'
00000000002080b6         db  0x00 ; '.'
00000000002080b7         db  0x00 ; '.'
00000000002080b8         db  0x00 ; '.'
00000000002080b9         db  0x00 ; '.'
00000000002080ba         db  0x00 ; '.'
00000000002080bb         db  0x00 ; '.'
00000000002080bc         db  0x00 ; '.'
00000000002080bd         db  0x00 ; '.'
00000000002080be         db  0x00 ; '.'
00000000002080bf         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
00000000002080c0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
00000000002080c1         db  0x00 ; '.'
00000000002080c2         db  0x00 ; '.'
00000000002080c3         db  0x00 ; '.'
00000000002080c4         db  0x00 ; '.'
00000000002080c5         db  0x00 ; '.'
00000000002080c6         db  0x00 ; '.'
00000000002080c7         db  0x00 ; '.'
                     completed.7697:
00000000002080c8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
00000000002080c9         db  0x00 ; '.'
00000000002080ca         db  0x00 ; '.'
00000000002080cb         db  0x00 ; '.'
00000000002080cc         db  0x00 ; '.'
00000000002080cd         db  0x00 ; '.'
00000000002080ce         db  0x00 ; '.'
00000000002080cf         db  0x00 ; '.'
                     line_out.6894:
00000000002080d0         db  0x00 ; '.'                                         ; DATA XREF=fold_file+144, fold_file+250, fold_file+367, fold_file+511, fold_file+621
00000000002080d1         db  0x00 ; '.'
00000000002080d2         db  0x00 ; '.'
00000000002080d3         db  0x00 ; '.'
00000000002080d4         db  0x00 ; '.'
00000000002080d5         db  0x00 ; '.'
00000000002080d6         db  0x00 ; '.'
00000000002080d7         db  0x00 ; '.'
                     allocated_out.6895:
00000000002080d8         db  0x00 ; '.'                                         ; DATA XREF=fold_file+137, fold_file+600
00000000002080d9         db  0x00 ; '.'
00000000002080da         db  0x00 ; '.'
00000000002080db         db  0x00 ; '.'
00000000002080dc         db  0x00 ; '.'
00000000002080dd         db  0x00 ; '.'
00000000002080de         db  0x00 ; '.'
00000000002080df         db  0x00 ; '.'
                     have_read_stdin:
00000000002080e0         db  0x00 ; '.'                                         ; DATA XREF=main+110, main+487, fold_file+61
                     count_bytes:
00000000002080e1         db  0x00 ; '.'                                         ; DATA XREF=main+117, main+208, adjust_column
                     break_spaces:
00000000002080e2         db  0x00 ; '.'                                         ; DATA XREF=main+124, main+384, fold_file+197
00000000002080e3         db  0x00 ; '.'
00000000002080e4         db  0x00 ; '.'
00000000002080e5         db  0x00 ; '.'
00000000002080e6         db  0x00 ; '.'
00000000002080e7         db  0x00 ; '.'
                     ignore_EPIPE:
00000000002080e8         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
00000000002080e9         db  0x00 ; '.'
00000000002080ea         db  0x00 ; '.'
00000000002080eb         db  0x00 ; '.'
00000000002080ec         db  0x00 ; '.'
00000000002080ed         db  0x00 ; '.'
00000000002080ee         db  0x00 ; '.'
00000000002080ef         db  0x00 ; '.'
                     file_name:
00000000002080f0         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
00000000002080f1         db  0x00 ; '.'
00000000002080f2         db  0x00 ; '.'
00000000002080f3         db  0x00 ; '.'
00000000002080f4         db  0x00 ; '.'
00000000002080f5         db  0x00 ; '.'
00000000002080f6         db  0x00 ; '.'
00000000002080f7         db  0x00 ; '.'
                     program_name:
00000000002080f8         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
00000000002080f9         db  0x00 ; '.'
00000000002080fa         db  0x00 ; '.'
00000000002080fb         db  0x00 ; '.'
00000000002080fc         db  0x00 ; '.'
00000000002080fd         db  0x00 ; '.'
00000000002080fe         db  0x00 ; '.'
00000000002080ff         db  0x00 ; '.'
                     slot0:
0000000000208100         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
0000000000208101         db  0x00 ; '.'
0000000000208102         db  0x00 ; '.'
0000000000208103         db  0x00 ; '.'
0000000000208104         db  0x00 ; '.'
0000000000208105         db  0x00 ; '.'
0000000000208106         db  0x00 ; '.'
0000000000208107         db  0x00 ; '.'
0000000000208108         db  0x00 ; '.'
0000000000208109         db  0x00 ; '.'
000000000020810a         db  0x00 ; '.'
000000000020810b         db  0x00 ; '.'
000000000020810c         db  0x00 ; '.'
000000000020810d         db  0x00 ; '.'
000000000020810e         db  0x00 ; '.'
000000000020810f         db  0x00 ; '.'
0000000000208110         db  0x00 ; '.'
0000000000208111         db  0x00 ; '.'
0000000000208112         db  0x00 ; '.'
0000000000208113         db  0x00 ; '.'
0000000000208114         db  0x00 ; '.'
0000000000208115         db  0x00 ; '.'
0000000000208116         db  0x00 ; '.'
0000000000208117         db  0x00 ; '.'
0000000000208118         db  0x00 ; '.'
0000000000208119         db  0x00 ; '.'
000000000020811a         db  0x00 ; '.'
000000000020811b         db  0x00 ; '.'
000000000020811c         db  0x00 ; '.'
000000000020811d         db  0x00 ; '.'
000000000020811e         db  0x00 ; '.'
000000000020811f         db  0x00 ; '.'
0000000000208120         db  0x00 ; '.'
0000000000208121         db  0x00 ; '.'
0000000000208122         db  0x00 ; '.'
0000000000208123         db  0x00 ; '.'
0000000000208124         db  0x00 ; '.'
0000000000208125         db  0x00 ; '.'
0000000000208126         db  0x00 ; '.'
0000000000208127         db  0x00 ; '.'
0000000000208128         db  0x00 ; '.'
0000000000208129         db  0x00 ; '.'
000000000020812a         db  0x00 ; '.'
000000000020812b         db  0x00 ; '.'
000000000020812c         db  0x00 ; '.'
000000000020812d         db  0x00 ; '.'
000000000020812e         db  0x00 ; '.'
000000000020812f         db  0x00 ; '.'
0000000000208130         db  0x00 ; '.'
0000000000208131         db  0x00 ; '.'
0000000000208132         db  0x00 ; '.'
0000000000208133         db  0x00 ; '.'
0000000000208134         db  0x00 ; '.'
0000000000208135         db  0x00 ; '.'
0000000000208136         db  0x00 ; '.'
0000000000208137         db  0x00 ; '.'
0000000000208138         db  0x00 ; '.'
0000000000208139         db  0x00 ; '.'
000000000020813a         db  0x00 ; '.'
000000000020813b         db  0x00 ; '.'
000000000020813c         db  0x00 ; '.'
000000000020813d         db  0x00 ; '.'
000000000020813e         db  0x00 ; '.'
000000000020813f         db  0x00 ; '.'
0000000000208140         db  0x00 ; '.'
0000000000208141         db  0x00 ; '.'
0000000000208142         db  0x00 ; '.'
0000000000208143         db  0x00 ; '.'
0000000000208144         db  0x00 ; '.'
0000000000208145         db  0x00 ; '.'
0000000000208146         db  0x00 ; '.'
0000000000208147         db  0x00 ; '.'
0000000000208148         db  0x00 ; '.'
0000000000208149         db  0x00 ; '.'
000000000020814a         db  0x00 ; '.'
000000000020814b         db  0x00 ; '.'
000000000020814c         db  0x00 ; '.'
000000000020814d         db  0x00 ; '.'
000000000020814e         db  0x00 ; '.'
000000000020814f         db  0x00 ; '.'
0000000000208150         db  0x00 ; '.'
0000000000208151         db  0x00 ; '.'
0000000000208152         db  0x00 ; '.'
0000000000208153         db  0x00 ; '.'
0000000000208154         db  0x00 ; '.'
0000000000208155         db  0x00 ; '.'
0000000000208156         db  0x00 ; '.'
0000000000208157         db  0x00 ; '.'
0000000000208158         db  0x00 ; '.'
0000000000208159         db  0x00 ; '.'
000000000020815a         db  0x00 ; '.'
000000000020815b         db  0x00 ; '.'
000000000020815c         db  0x00 ; '.'
000000000020815d         db  0x00 ; '.'
000000000020815e         db  0x00 ; '.'
000000000020815f         db  0x00 ; '.'
0000000000208160         db  0x00 ; '.'
0000000000208161         db  0x00 ; '.'
0000000000208162         db  0x00 ; '.'
0000000000208163         db  0x00 ; '.'
0000000000208164         db  0x00 ; '.'
0000000000208165         db  0x00 ; '.'
0000000000208166         db  0x00 ; '.'
0000000000208167         db  0x00 ; '.'
0000000000208168         db  0x00 ; '.'
0000000000208169         db  0x00 ; '.'
000000000020816a         db  0x00 ; '.'
000000000020816b         db  0x00 ; '.'
000000000020816c         db  0x00 ; '.'
000000000020816d         db  0x00 ; '.'
000000000020816e         db  0x00 ; '.'
000000000020816f         db  0x00 ; '.'
0000000000208170         db  0x00 ; '.'
0000000000208171         db  0x00 ; '.'
0000000000208172         db  0x00 ; '.'
0000000000208173         db  0x00 ; '.'
0000000000208174         db  0x00 ; '.'
0000000000208175         db  0x00 ; '.'
0000000000208176         db  0x00 ; '.'
0000000000208177         db  0x00 ; '.'
0000000000208178         db  0x00 ; '.'
0000000000208179         db  0x00 ; '.'
000000000020817a         db  0x00 ; '.'
000000000020817b         db  0x00 ; '.'
000000000020817c         db  0x00 ; '.'
000000000020817d         db  0x00 ; '.'
000000000020817e         db  0x00 ; '.'
000000000020817f         db  0x00 ; '.'
0000000000208180         db  0x00 ; '.'
0000000000208181         db  0x00 ; '.'
0000000000208182         db  0x00 ; '.'
0000000000208183         db  0x00 ; '.'
0000000000208184         db  0x00 ; '.'
0000000000208185         db  0x00 ; '.'
0000000000208186         db  0x00 ; '.'
0000000000208187         db  0x00 ; '.'
0000000000208188         db  0x00 ; '.'
0000000000208189         db  0x00 ; '.'
000000000020818a         db  0x00 ; '.'
000000000020818b         db  0x00 ; '.'
000000000020818c         db  0x00 ; '.'
000000000020818d         db  0x00 ; '.'
000000000020818e         db  0x00 ; '.'
000000000020818f         db  0x00 ; '.'
0000000000208190         db  0x00 ; '.'
0000000000208191         db  0x00 ; '.'
0000000000208192         db  0x00 ; '.'
0000000000208193         db  0x00 ; '.'
0000000000208194         db  0x00 ; '.'
0000000000208195         db  0x00 ; '.'
0000000000208196         db  0x00 ; '.'
0000000000208197         db  0x00 ; '.'
0000000000208198         db  0x00 ; '.'
0000000000208199         db  0x00 ; '.'
000000000020819a         db  0x00 ; '.'
000000000020819b         db  0x00 ; '.'
000000000020819c         db  0x00 ; '.'
000000000020819d         db  0x00 ; '.'
000000000020819e         db  0x00 ; '.'
000000000020819f         db  0x00 ; '.'
00000000002081a0         db  0x00 ; '.'
00000000002081a1         db  0x00 ; '.'
00000000002081a2         db  0x00 ; '.'
00000000002081a3         db  0x00 ; '.'
00000000002081a4         db  0x00 ; '.'
00000000002081a5         db  0x00 ; '.'
00000000002081a6         db  0x00 ; '.'
00000000002081a7         db  0x00 ; '.'
00000000002081a8         db  0x00 ; '.'
00000000002081a9         db  0x00 ; '.'
00000000002081aa         db  0x00 ; '.'
00000000002081ab         db  0x00 ; '.'
00000000002081ac         db  0x00 ; '.'
00000000002081ad         db  0x00 ; '.'
00000000002081ae         db  0x00 ; '.'
00000000002081af         db  0x00 ; '.'
00000000002081b0         db  0x00 ; '.'
00000000002081b1         db  0x00 ; '.'
00000000002081b2         db  0x00 ; '.'
00000000002081b3         db  0x00 ; '.'
00000000002081b4         db  0x00 ; '.'
00000000002081b5         db  0x00 ; '.'
00000000002081b6         db  0x00 ; '.'
00000000002081b7         db  0x00 ; '.'
00000000002081b8         db  0x00 ; '.'
00000000002081b9         db  0x00 ; '.'
00000000002081ba         db  0x00 ; '.'
00000000002081bb         db  0x00 ; '.'
00000000002081bc         db  0x00 ; '.'
00000000002081bd         db  0x00 ; '.'
00000000002081be         db  0x00 ; '.'
00000000002081bf         db  0x00 ; '.'
00000000002081c0         db  0x00 ; '.'
00000000002081c1         db  0x00 ; '.'
00000000002081c2         db  0x00 ; '.'
00000000002081c3         db  0x00 ; '.'
00000000002081c4         db  0x00 ; '.'
00000000002081c5         db  0x00 ; '.'
00000000002081c6         db  0x00 ; '.'
00000000002081c7         db  0x00 ; '.'
00000000002081c8         db  0x00 ; '.'
00000000002081c9         db  0x00 ; '.'
00000000002081ca         db  0x00 ; '.'
00000000002081cb         db  0x00 ; '.'
00000000002081cc         db  0x00 ; '.'
00000000002081cd         db  0x00 ; '.'
00000000002081ce         db  0x00 ; '.'
00000000002081cf         db  0x00 ; '.'
00000000002081d0         db  0x00 ; '.'
00000000002081d1         db  0x00 ; '.'
00000000002081d2         db  0x00 ; '.'
00000000002081d3         db  0x00 ; '.'
00000000002081d4         db  0x00 ; '.'
00000000002081d5         db  0x00 ; '.'
00000000002081d6         db  0x00 ; '.'
00000000002081d7         db  0x00 ; '.'
00000000002081d8         db  0x00 ; '.'
00000000002081d9         db  0x00 ; '.'
00000000002081da         db  0x00 ; '.'
00000000002081db         db  0x00 ; '.'
00000000002081dc         db  0x00 ; '.'
00000000002081dd         db  0x00 ; '.'
00000000002081de         db  0x00 ; '.'
00000000002081df         db  0x00 ; '.'
00000000002081e0         db  0x00 ; '.'
00000000002081e1         db  0x00 ; '.'
00000000002081e2         db  0x00 ; '.'
00000000002081e3         db  0x00 ; '.'
00000000002081e4         db  0x00 ; '.'
00000000002081e5         db  0x00 ; '.'
00000000002081e6         db  0x00 ; '.'
00000000002081e7         db  0x00 ; '.'
00000000002081e8         db  0x00 ; '.'
00000000002081e9         db  0x00 ; '.'
00000000002081ea         db  0x00 ; '.'
00000000002081eb         db  0x00 ; '.'
00000000002081ec         db  0x00 ; '.'
00000000002081ed         db  0x00 ; '.'
00000000002081ee         db  0x00 ; '.'
00000000002081ef         db  0x00 ; '.'
00000000002081f0         db  0x00 ; '.'
00000000002081f1         db  0x00 ; '.'
00000000002081f2         db  0x00 ; '.'
00000000002081f3         db  0x00 ; '.'
00000000002081f4         db  0x00 ; '.'
00000000002081f5         db  0x00 ; '.'
00000000002081f6         db  0x00 ; '.'
00000000002081f7         db  0x00 ; '.'
00000000002081f8         db  0x00 ; '.'
00000000002081f9         db  0x00 ; '.'
00000000002081fa         db  0x00 ; '.'
00000000002081fb         db  0x00 ; '.'
00000000002081fc         db  0x00 ; '.'
00000000002081fd         db  0x00 ; '.'
00000000002081fe         db  0x00 ; '.'
00000000002081ff         db  0x00 ; '.'
                     default_quoting_options:
0000000000208200         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
0000000000208201         db  0x00 ; '.'
0000000000208202         db  0x00 ; '.'
0000000000208203         db  0x00 ; '.'
0000000000208204         db  0x00 ; '.'
0000000000208205         db  0x00 ; '.'
0000000000208206         db  0x00 ; '.'
0000000000208207         db  0x00 ; '.'
0000000000208208         db  0x00 ; '.'
0000000000208209         db  0x00 ; '.'
000000000020820a         db  0x00 ; '.'
000000000020820b         db  0x00 ; '.'
000000000020820c         db  0x00 ; '.'
000000000020820d         db  0x00 ; '.'
000000000020820e         db  0x00 ; '.'
000000000020820f         db  0x00 ; '.'
0000000000208210         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
0000000000208211         db  0x00 ; '.'
0000000000208212         db  0x00 ; '.'
0000000000208213         db  0x00 ; '.'
0000000000208214         db  0x00 ; '.'
0000000000208215         db  0x00 ; '.'
0000000000208216         db  0x00 ; '.'
0000000000208217         db  0x00 ; '.'
0000000000208218         db  0x00 ; '.'
0000000000208219         db  0x00 ; '.'
000000000020821a         db  0x00 ; '.'
000000000020821b         db  0x00 ; '.'
000000000020821c         db  0x00 ; '.'
000000000020821d         db  0x00 ; '.'
000000000020821e         db  0x00 ; '.'
000000000020821f         db  0x00 ; '.'
0000000000208220         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
0000000000208221         db  0x00 ; '.'
0000000000208222         db  0x00 ; '.'
0000000000208223         db  0x00 ; '.'
0000000000208224         db  0x00 ; '.'
0000000000208225         db  0x00 ; '.'
0000000000208226         db  0x00 ; '.'
0000000000208227         db  0x00 ; '.'
0000000000208228         db  0x00 ; '.'
0000000000208229         db  0x00 ; '.'
000000000020822a         db  0x00 ; '.'
000000000020822b         db  0x00 ; '.'
000000000020822c         db  0x00 ; '.'
000000000020822d         db  0x00 ; '.'
000000000020822e         db  0x00 ; '.'
000000000020822f         db  0x00 ; '.'
                     qword_208230:
0000000000208230         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
0000000000208231         db  0x00 ; '.'
0000000000208232         db  0x00 ; '.'
0000000000208233         db  0x00 ; '.'
0000000000208234         db  0x00 ; '.'
0000000000208235         db  0x00 ; '.'
0000000000208236         db  0x00 ; '.'
0000000000208237         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x208240; 0x208590[ (848 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x208240; 0x4107d0[ (2131344 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     __uflow:
0000000000208240         extern function code                                   ; DATA XREF=__uflow@GOT
                     free:
0000000000208248         extern function code                                   ; DATA XREF=free@GOT
                     abort:
0000000000208250         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
0000000000208258         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
0000000000208260         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
0000000000208268         extern function code
                     _exit:
0000000000208270         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
0000000000208278         extern function code                                   ; DATA XREF=__fpending@GOT
                     textdomain:
0000000000208280         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
0000000000208288         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
0000000000208290         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
0000000000208298         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
00000000002082a0         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
00000000002082a8         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
00000000002082b0         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
00000000002082b8         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
00000000002082c0         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     strchr:
00000000002082c8         extern function code                                   ; DATA XREF=strchr@GOT
                     __overflow:
00000000002082d0         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
00000000002082d8         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
00000000002082e0         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
00000000002082e8         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     __strtoul_internal:
00000000002082f0         extern function code                                   ; DATA XREF=__strtoul_internal@GOT
                     memset:
00000000002082f8         extern function code                                   ; DATA XREF=memset@GOT
                     posix_fadvise:
0000000000208300         extern function code                                   ; DATA XREF=posix_fadvise@GOT
                     __libc_start_main:
0000000000208308         extern function code
                     memcmp:
0000000000208310         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
0000000000208318         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
0000000000208320         extern function code                                   ; DATA XREF=calloc@GOT
                     __gmon_start__:
0000000000208328         extern function code
                     memcpy:
0000000000208330         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
0000000000208338         extern function code                                   ; DATA XREF=fileno@GOT
                     malloc:
0000000000208340         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
0000000000208348         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
0000000000208350         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __freading:
0000000000208358         extern function code                                   ; DATA XREF=__freading@GOT
                     fwrite_unlocked:
0000000000208360         extern function code                                   ; DATA XREF=fwrite_unlocked@GOT
                     realloc:
0000000000208368         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
0000000000208370         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
0000000000208378         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     memmove:
0000000000208380         extern function code                                   ; DATA XREF=memmove@GOT
                     error:
0000000000208388         extern function code                                   ; DATA XREF=error@GOT
                     fseeko:
0000000000208390         extern function code                                   ; DATA XREF=fseeko@GOT
                     fopen:
0000000000208398         extern function code                                   ; DATA XREF=fopen@GOT
                     __cxa_atexit:
00000000002083a0         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
00000000002083a8         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
00000000002083b0         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
00000000002083b8         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
00000000002083c0         extern function code
                     mbsinit:
00000000002083c8         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
00000000002083d0         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
00000000002083d8         extern function code
                     __ctype_b_loc:
00000000002083e0         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     __uflow@@GLIBC_2.2.5:
00000000002083e8         extern function code
                     free@@GLIBC_2.2.5:
00000000002083f0         extern function code
                     abort@@GLIBC_2.2.5:
00000000002083f8         extern function code
                     __errno_location@@GLIBC_2.2.5:
0000000000208400         extern function code
                     strncmp@@GLIBC_2.2.5:
0000000000208408         extern function code
                     _ITM_deregisterTMCloneTable_208410:        // _ITM_deregisterTMCloneTable
0000000000208410         extern function code
                     _exit@@GLIBC_2.2.5:
0000000000208418         extern function code
                     __fpending@@GLIBC_2.2.5:
0000000000208420         extern function code
                     textdomain@@GLIBC_2.2.5:
0000000000208428         extern function code
                     fclose@@GLIBC_2.2.5:
0000000000208430         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
0000000000208438         extern function code
                     dcgettext@@GLIBC_2.2.5:
0000000000208440         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
0000000000208448         extern function code
                     strlen@@GLIBC_2.2.5:
0000000000208450         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
0000000000208458         extern function code
                     getopt_long@@GLIBC_2.2.5:
0000000000208460         extern function code
                     mbrtowc@@GLIBC_2.2.5:
0000000000208468         extern function code
                     strchr@@GLIBC_2.2.5:
0000000000208470         extern function code
                     __overflow@@GLIBC_2.2.5:
0000000000208478         extern function code
                     strrchr@@GLIBC_2.2.5:
0000000000208480         extern function code
                     lseek@@GLIBC_2.2.5:
0000000000208488         extern function code
                     __assert_fail@@GLIBC_2.2.5:
0000000000208490         extern function code
                     __strtoul_internal@@GLIBC_2.2.5:
0000000000208498         extern function code
                     memset@@GLIBC_2.2.5:
00000000002084a0         extern function code
                     posix_fadvise@@GLIBC_2.2.5:
00000000002084a8         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
00000000002084b0         extern function code
                     memcmp@@GLIBC_2.2.5:
00000000002084b8         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
00000000002084c0         extern function code
                     calloc@@GLIBC_2.2.5:
00000000002084c8         extern function code
                     __gmon_start___2084d0:        // __gmon_start__
00000000002084d0         extern function code
                     memcpy@@GLIBC_2.14:
00000000002084d8         extern function code
                     fileno@@GLIBC_2.2.5:
00000000002084e0         extern function code
                     malloc@@GLIBC_2.2.5:
00000000002084e8         extern function code
                     fflush@@GLIBC_2.2.5:
00000000002084f0         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
00000000002084f8         extern function code
                     __freading@@GLIBC_2.2.5:
0000000000208500         extern function code
                     fwrite_unlocked@@GLIBC_2.2.5:
0000000000208508         extern function code
                     realloc@@GLIBC_2.2.5:
0000000000208510         extern function code
                     setlocale@@GLIBC_2.2.5:
0000000000208518         extern function code
                     __printf_chk@@GLIBC_2.3.4:
0000000000208520         extern function code
                     memmove@@GLIBC_2.2.5:
0000000000208528         extern function code
                     error@@GLIBC_2.2.5:
0000000000208530         extern function code
                     fseeko@@GLIBC_2.2.5:
0000000000208538         extern function code
                     fopen@@GLIBC_2.2.5:
0000000000208540         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
0000000000208548         extern function code
                     exit@@GLIBC_2.2.5:
0000000000208550         extern function code
                     fwrite@@GLIBC_2.2.5:
0000000000208558         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
0000000000208560         extern function code
                     _ITM_registerTMCloneTable_208568:        // _ITM_registerTMCloneTable
0000000000208568         extern function code
                     mbsinit@@GLIBC_2.2.5:
0000000000208570         extern function code
                     iswprint@@GLIBC_2.2.5:
0000000000208578         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
0000000000208580         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
0000000000208588         extern function code
